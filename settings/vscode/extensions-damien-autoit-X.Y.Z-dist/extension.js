/*! For license information please see extension.js.LICENSE.txt */
(()=>{var e={343:(e,t,a)=>{"use strict";a.d(t,{A:()=>V});var o=a(398),n=a(896),i=a.n(n),r=a(928),l=a.n(r),s=a(317),d=a(558);function c(e){return function(e){if(Array.isArray(e))return u(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||h(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(e,t){if(e){if("string"==typeof e)return u(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?u(e,t):void 0}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}var p=a(330),b=o.workspace.getConfiguration("editor"),_={},f=!1,I=p.contributes.configurationDefaults["editor.tokenColorCustomizations"].textMateRules.reduce((function(e,t){return e[t.scope]=t,e}),{}),$=b.get("tokenColorCustomizations");"object"===m($)&&null!==$||($={});var g=Object.keys($);Array.isArray($.textMateRules)||g.push("textMateRules");for(var C=0;C<g.length;C++){var S=g[C];if("textMateRules"===S||$[S].textMateRules){for(var T=$[S]&&$[S].textMateRules||$[S]||[],G=Object.assign({},I),P=0;P<T.length;P++)G[T[P].scope]&&delete G[T[P].scope];for(var w in G)Object.prototype.hasOwnProperty.call(G,w)&&(T.push(G[w]),f=!0);$[S]&&$[S].textMateRules?_[S]={textMateRules:T}:_[S]=T}}f&&b.update("tokenColorCustomizations",_,!0);var y,A={data:o.workspace.getConfiguration("autoit"),defaultPaths:{aiPath:{file:"AutoIt3.exe"},wrapperPath:{dir:"SciTE\\AutoIt3Wrapper\\",file:"AutoIt3Wrapper.au3"},checkPath:{file:"AU3Check.exe"},helpPath:{file:"AutoIt3Help.exe"},infoPath:{file:"Au3Info.exe"},kodaPath:{dir:"SciTE\\Koda\\",file:"FD.exe"},includePaths:[{dir:""}],smartHelp:{check:{dir:"Advanced.Help\\HelpFiles\\",file:""}}}},D=new Map,W=0,E="",R="win32"===process.platform,x=!1;function v(e){return{path:(e=e.trim().match(/^(.*[\\/])?([^\\/]+)?$/).map((function(e){return e||""})))[0],dir:e[1]+(""===e[1]?"":"\\"),file:e[2],isRelative:!(!e[1]||e[1].match(/^[a-zA-Z]:[\\/]/))}}function U(){var e,t,a,o,n=A.data.smartHelp,i=A.data.inspect("smartHelp"),r={workspaceFolderLanguageValue:[null,!0],workspaceLanguageValue:[!1,!0],globalLanguageValue:[!0,!0],defaultLanguageValue:[null,!0],workspaceFolderValue:[],workspaceValue:[!1],globalValue:[!0],defaultValue:[]},l={};for(var s in r)if(void 0!==i[s]){var d=(o=2,function(e){if(Array.isArray(e))return e}(a=r[s])||function(e,t){var a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o,n,i,r,l=[],s=!0,d=!1;try{if(i=(a=a.call(e)).next,0===t){if(Object(a)!==a)return;s=!1}else for(;!(s=(o=i.call(a)).done)&&(l.push(o.value),l.length!==t);s=!0);}catch(e){d=!0,n=e}finally{try{if(!s&&null!=a.return&&(r=a.return(),Object(r)!==r))return}finally{if(d)throw n}}return l}}(a,o)||h(a,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());e=d[0],t=d[1];break}if(Array.isArray(n))for(var c=0;c<n.length;c++)l[n[c][0]]={chmPath:n[c][1],udfPath:n[c][2].split("|")};Object.keys(l).length&&"string"!=typeof n||(l=void 0),A.data.update("smartHelp",l,e,t)}function F(e,t){var a=v(e||""),o=t.file,n=t.dir;return""===a.file&&(a.file=o||""),(""===a.dir||a.isRelative)&&(a.dir=E.dir+a.dir+(a.isRelative?"":n||"")),void 0===o&&(a.file+="/"),(a.dir+"/"+a.file).replace(/[\\/]+/g,"\\")}function L(e,t,a){if(a){var o=t.message&&!t.message.isHidden?1e3:0;if(o&&(t.message.hide(),delete t.message),t.prevCheck!==e){var n=void 0!==t.file?"File":"Directory";setTimeout((function(){return t.message=(0,d.f1)("".concat(n,' "').concat(e,'" not found (autoit.').concat(a,")")),t.message}),o)}t.prevCheck=e}}function B(e,t,a){return o.workspace.fs.stat(o.Uri.file(t.fullPath)).then((function(n){var i=(void 0!==t.file?o.FileType.File:o.FileType.Directory)|o.FileType.SymbolicLink;if(n.type&i)return t.message&&(t.message.hide(),delete t.message),t.prevCheck=e,e;x&&L(e,t,a)})).catch((function(){x&&L(e,t,a)}))}function O(e,t,a){return""!==e&&(t.fullPath=F(e,t)),void 0===t.fullPath&&(t.fullPath=""),B(e,t,a)}var M=new Proxy(A,{get:function(e,t){var a=e.defaultPaths[t];if(a){var o=Array.isArray(a);return(o||null!==a&&"object"===m(a))&&o?a.map((function(e){return e.fullPath})):a.fullPath}return e.data[t]},set:function(e,t,a){return e.data.update(t,a)}}),N=function(e){var t,a=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],o=c(M.includePaths);return a||o.push(o.shift()),!(!o.some((function(a){return t=l().normalize("".concat(a,"\\"))+e,!!i().existsSync(t)}))||!t)&&t};function H(e,t,a){for(var o in e.fullPath={},t)if(Object.hasOwn(t,o)){var n=t[o];if("_yourUdfFuncPrefix_"!==o&&"string"==typeof n.chmPath&&("string"==typeof n.udfPath||Array.isArray(n.udfPath))){var i=n.chmPath.trim(),r=Object.assign({fullPath:""},e.check),l=Array.isArray(n.udfPath)?c(n.udfPath):n.udfPath.split("|"),s="".concat(a,".").concat(o);O(i,r,"".concat(s,".chmPath"));for(var d=function(t){var a=Object.assign({fullPath:""},e.check),o=x,n=s,i=l;O(l[t],a).then((function(e){e||(e=N(i[t],!0)),e?i[t]=e:o&&L(i[t],a,"".concat(n,".udfPath[").concat(t,"]"))}))},h=0;h<l.length;h++)d(h);e.fullPath[o]={chmPath:r.fullPath,udfPath:l}}}}function k(){for(var e in E=v(A.data.aiPath||""),A.defaultPaths)if(Object.hasOwn(A.defaultPaths,e)){var t=A.defaultPaths[e],a=A.data[e];if("smartHelp"===e){if(Array.isArray(a))return U();H(t,a,e)}else if(Array.isArray(a))for(var o=0;o<a.length;o++){var n=("string"==typeof a[o]?a[o]:"").trim();""===n&&"includePaths"===e&&(n="Include"),void 0===t[o]&&(t[o]=Object.assign({fullPath:""},t[0].check)),O(n,t[o],"".concat(e,"[").concat(o,"]"))}else t.fullPath=F(a,t),B(a,t,e)}}o.workspace.onDidChangeConfiguration((function(e){var t=e.affectsConfiguration;!y&&t("autoit")&&(A.data=o.workspace.getConfiguration("autoit"),t("autoit.includePaths")&&function(){var e=A.data.includePaths;if(Array.isArray(e)){for(var t=0;t<e.length;t++){var a=("string"==typeof e[t]?e[t]:"").trim();""===a&&(a="Include"),void 0===A.defaultPaths.includePaths[t]&&(A.defaultPaths.includePaths[t]=Object.assign({fullPath:""},A.defaultPaths.includePaths[0].check)),O(a,A.defaultPaths.includePaths[t],"includePaths[".concat(t,"]"))}var n=e.join(";");(0,s.exec)('reg add "HKCU\\Software\\AutoIt v3\\Autoit" /v Include /t REG_SZ /d "'.concat(n,'" /f'),(function(e,t,a){e?o.window.showErrorMessage("Error updating registry: ".concat(e.message)):a?o.window.showErrorMessage("Registry stderr: ".concat(a)):o.window.showInformationMessage("Registry updated: ".concat(t))}))}}(),D.forEach((function(e){try{e()}catch(e){o.window.showErrorMessage(e)}})),x=R,k())})),k();const V={config:M,addListener:function(e){return D.set(++W,e),W},removeListener:function(e){D.remove(e)},noEvents:function(e){y=Boolean(e)},findFilepath:N}},558:(e,t,a)=>{"use strict";a.d(t,{DZ:()=>d,f1:()=>s,j$:()=>l});var o=a(398);const n=require("node:perf_hooks");var i=0,r=function(e){var t={};return function(){for(var a=arguments.length,r=new Array(a),l=0;l<a;l++)r[l]=arguments[l];var s,d=r[0],c=r[1];c&&c instanceof Object&&!(c instanceof Array)&&(s=c.timeout);var h=function(){clearTimeout(t[d]),delete t[d]};h();var u=!1,m=function(){h();for(var t=0;t<4;t+=1)o.window[e].apply(o.window[e],r);u=!0,i=n.performance.now()};t[d]=void 0!==s&&setTimeout(m,s);var p=900-(n.performance.now()-i);return{get isHidden(){return u},hide:m,message:new Promise((function(t){return setTimeout((function(){return t(o.window[e].apply(o.window[e],r).finally(h))}),p)}))}}},l=r("showInformationMessage"),s=r("showErrorMessage"),d={error:{},info:{}}},3:(e,t,a)=>{var o=a(60),n=o.opt,i=o.br,r=o.defaultZero,l="(Requires: `#include <Array.au3>`)",s={_Array1DToHistogram:{documentation:"Transform a 1D array to Histogram ".concat(l),label:"_Array1DToHistogram ( $aArray, [$iSizing] )",params:[{label:"$aArray",documentation:"Array to transform"},{label:"$iSizing",documentation:"".concat(n," Allows to zoom the histogram. `Default = 100 percent`")}]},_ArrayAdd:{documentation:"Adds a specified value at the end of an existing 1D or 2D array ".concat(l),label:"_ArrayAdd ( ByRef $aArray, $vValue, [$iStart], [$sDelim_Item], [$sDelim_Row], [$iForce] )",params:[{label:"$aArray",documentation:"Array to modify"},{label:"$vValue",documentation:"Value(s) to add - can be a single item, a delimited string or an array"},{label:"$iStart",documentation:"".concat(n," Column in which addition is to begin (2D array only)").concat(i,"\n                `Default = 0`")},{label:"$sDelim_Item",documentation:"".concat(n," Delimiter used if a string is to be split into items").concat(i,'\n                `Default = "|"`')},{label:"$sDelim_Row",documentation:"".concat(n," Delimiter used if a string is to be split into rows (2D only)\n                ").concat(i,"`Default = @CRLF`")},{label:"$iForce",documentation:"".concat(n," Maintains default behaviour,").concat(i,"\n                `$ARRAYFILL_FORCE_DEFAULT (0)`").concat(i,"\n                Forces `$vValue` addition as a single item,").concat(i,"\n                `$ARRAYFILL_FORCE_SINGLEITEM (1)`").concat(i,"\n                Or forces datatype for all added items").concat(i,"\n                `$ARRAYFILL_FORCE_INT (2)`").concat(i,"\n                `$ARRAYFILL_FORCE_NUMBER (3)`").concat(i,"\n                `$ARRAYFILL_FORCE_PTR (4)`").concat(i,"\n                `$ARRAYFILL_FORCE_HWND (5)`").concat(i,"\n                `$ARRAYFILL_FORCE_STRING (6)`").concat(i,"\n                `$ARRAYFILL_FORCE_BOOLEAN (7)`")}]},_ArrayBinarySearch:{documentation:"Uses the binary search algorithm to search through a 1D or 2D array ".concat(l),label:"_ArrayBinarySearch ( Const ByRef $aArray, $vValue, [$iStart], [$iEnd], [$iColumn] )",params:[{label:"$aArray",documentation:"Array to search"},{label:"$vValue",documentation:"Value to find"},{label:"$iStart",documentation:"".concat(n," Index of array to start searching at ").concat(r)},{label:"$iEnd",documentation:"".concat(n," Index of array to stop searching at ").concat(r)},{label:"$iColumn",documentation:"".concat(n," Column of array to search ").concat(r)}]}};e.exports=s},60:(e,t,a)=>{function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t,a){return(t=function(e){var t=function(e){if("object"!=o(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,"string");if("object"!=o(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==o(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}var s=a(896),d=a(928),c=a(398),h=c.CompletionItemKind,u=c.MarkdownString,m=c.workspace,p=a(343).A.findFilepath,b="  ",_="".concat(b+b,"`Default = 0`");RegExp.prototype.setFlags=function(e){return RegExp(this.source,e)};var f=function(e){return s.readFileSync(e).toString()},I=function(e,t){var a="";if(e.startsWith(":",1))a=e;else{var o=d.dirname(t.fileName);a=d.join(o,e)}return a.charAt(0).toUpperCase()+a.slice(1)},$=m.getConfiguration("autoit").get("enableParenTriggerForFunctions");m.onDidChangeConfiguration((function(e){e.affectsConfiguration("autoit.enableParenTriggerForFunctions")&&($=m.getConfiguration("autoit").get("enableParenTriggerForFunctions"))}));var g=/^[\t ]*(?:volatile[\t ]+)?Func[\t ]+((\w+)[\t ]*\((.*)\))/gim,C=function(e,t,a){for(var o,n,i=/^\s*#include\s"(.+)"/gm,r=/^\s*#include\s<(.+)>/gm,l=i.exec(t);l;)o=I(l[1],e),s.existsSync(o)||(o=p(l[1],!1)),o&&-1===a.indexOf(o)&&(a.push(o),n=f(o),C(e,n,a)),l=i.exec(t);for(l=r.exec(t);l;)(o=p(l[1],!1))&&-1===a.indexOf(o)&&(a.push(o),n=f(o),C(e,n,a)),l=r.exec(t)},S=function(e,t,a){if(-1===a)return"";var o=e.substring(a),n=new RegExp(";\\s*(?:Parameters\\s*\\.+:)?\\s*(?:\\".concat(t,")\\s+-\\s(?<documentation>.+)")).exec(o);return n?n.groups.documentation:""},T=function(e,t,a){var o={};if(!e)return o;var i,r=function(e,t){var a="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!a){if(Array.isArray(e)||(a=function(e,t){if(e){if("string"==typeof e)return n(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?n(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){a&&(e=a);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,l=!0,s=!1;return{s:function(){a=a.call(e)},n:function(){var e=a.next();return l=e.done,e},e:function(e){s=!0,r=e},f:function(){try{l||null==a.return||a.return()}finally{if(s)throw r}}}}(e.split(","));try{for(r.s();!(i=r.n()).done;){var l=i.value.split("=")[0].trim().replace(/^ByRef\s*/,""),s=S(t,l,a);o[l]={label:l,documentation:s}}}catch(e){r.e(e)}finally{r.f()}return o},G=function(e,t,a){var o=e[1],n=e[2],i=e[3],r=function(e){return new RegExp(";\\s*Name\\s*\\.+:\\s+".concat(e,"\\s*[\r\n]")+";\\s+Description\\s*\\.+:\\s+(?<description>.+)[\r\n]")}(n),l=t.match(r),s=l?"".concat(l.groups.description,"\r"):"",d="".concat(s,"Included from ").concat(a),c=l?l.index:-1;return{functionName:n,functionObject:{label:o,documentation:d,params:T(i,t,c)}}};e.exports={descriptionHeader:"|Description |Value |\n|:---|:---:|\n",valueFirstHeader:"\n|&nbsp;|&nbsp;&nbsp;&nbsp; |&nbsp;\n|---:|:---:|:---|",setDetail:function(e,t,a){return e.map((function(e){return r(r({},e),{},{detail:t,documentation:"".concat(e.documentation,"\n\n*").concat(a,"*")})}))},opt:"**[optional]**",trueFalseHeader:"\n|&nbsp;|&nbsp;&nbsp;&nbsp;|&nbsp;\n    :---|:---:|:---",br:b,AI_CONSTANTS:["$MB_ICONERROR","$MB_ICONINFORMATION","$MB_YESNO","$MB_TASKMODAL","$IDYES","$IDNO"],defaultZero:_,AUTOIT_MODE:{language:"autoit",scheme:"file"},isSkippableLine:function(e){if(e.isEmptyOrWhitespace)return!0;var t=e.text.charAt(e.firstNonWhitespaceCharacterIndex);return";"===t||"#"===t&&!/^\s*#(cs|ce|comments-start|comments-end)/.test(e.text)},getIncludeText:f,getIncludePath:I,fillCompletions:function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"";return e.map((function(e){var n=new u(e.documentation);o&&n.appendCodeblock("#include <".concat(o,">"),"autoit");var i=e.detail?e.detail+a:a;return r(r({},e),{},{kind:t,detail:i,get commitCharacters(){return t===h.Function&&$?["("]:[]},documentation:n})}))},signatureToHover:function(e){for(var t={},a=0,o=Object.keys(e);a<o.length;a++){var n=o[a];t[n]=[e[n].documentation,"```\r".concat(e[n].label,"\r```")]}return t},includePattern:/^#include\s"(.+)"/gm,functionPattern:/^[\t ]*(?:volatile[\t ]+)?Func[\t ]+(\w+)[\t ]*\(/i,variablePattern:/(?:["'].*?["'])|(?:;.*)|(\$\w+)/g,regionPattern:/^[\t ]{0,}#region\s[- ]{0,}(.+)/i,libraryIncludePattern:/^#include\s+<([\w.]+\.au3)>/gm,completionToHover:function(e){var t={};return e.forEach((function(e){t[e.label]=e.documentation})),t},signatureToCompletion:function(e,t,a){return Object.keys(e).map((function(o){return{label:o,documentation:e[o].documentation,kind:t,detail:a}}))},findFilepath:p,getIncludeData:function(e,t){var a={},o=I(e,t);s.existsSync(o)||(o=p(e,!1));var n=null,i=f(o);do{if(n=g.exec(i)){var r=G(n,i,e);a[r.functionName]=r.functionObject}}while(n);return a},getParams:T,getIncludeScripts:C,buildFunctionSignature:G,functionDefinitionRegex:g}},161:(e,t,a)=>{"use strict";var o=a(774).Buffer;t._dbcs=c;for(var n=-1,i=-2,r=-10,l=-1e3,s=new Array(256),d=0;d<256;d++)s[d]=n;function c(e,t){if(this.encodingName=e.encodingName,!e)throw new Error("DBCS codec is called without the data.");if(!e.table)throw new Error("Encoding '"+this.encodingName+"' has no data.");var a=e.table();this.decodeTables=[],this.decodeTables[0]=s.slice(0),this.decodeTableSeq=[];for(var o=0;o<a.length;o++)this._addDecodeChunk(a[o]);if("function"==typeof e.gb18030){this.gb18030=e.gb18030();var r=this.decodeTables.length;this.decodeTables.push(s.slice(0));var d=this.decodeTables.length;this.decodeTables.push(s.slice(0));var c=this.decodeTables[0];for(o=129;o<=254;o++)for(var h=this.decodeTables[l-c[o]],u=48;u<=57;u++){if(h[u]===n)h[u]=l-r;else if(h[u]>l)throw new Error("gb18030 decode tables conflict at byte 2");for(var m=this.decodeTables[l-h[u]],p=129;p<=254;p++){if(m[p]===n)m[p]=l-d;else{if(m[p]===l-d)continue;if(m[p]>l)throw new Error("gb18030 decode tables conflict at byte 3")}for(var b=this.decodeTables[l-m[p]],_=48;_<=57;_++)b[_]===n&&(b[_]=i)}}}this.defaultCharUnicode=t.defaultCharUnicode,this.encodeTable=[],this.encodeTableSeq=[];var f={};if(e.encodeSkipVals)for(o=0;o<e.encodeSkipVals.length;o++){var I=e.encodeSkipVals[o];if("number"==typeof I)f[I]=!0;else for(u=I.from;u<=I.to;u++)f[u]=!0}if(this._fillEncodeTable(0,0,f),e.encodeAdd)for(var $ in e.encodeAdd)Object.prototype.hasOwnProperty.call(e.encodeAdd,$)&&this._setEncodeChar($.charCodeAt(0),e.encodeAdd[$]);this.defCharSB=this.encodeTable[0][t.defaultCharSingleByte.charCodeAt(0)],this.defCharSB===n&&(this.defCharSB=this.encodeTable[0]["?"]),this.defCharSB===n&&(this.defCharSB="?".charCodeAt(0))}function h(e,t){this.leadSurrogate=-1,this.seqObj=void 0,this.encodeTable=t.encodeTable,this.encodeTableSeq=t.encodeTableSeq,this.defaultCharSingleByte=t.defCharSB,this.gb18030=t.gb18030}function u(e,t){this.nodeIdx=0,this.prevBytes=[],this.decodeTables=t.decodeTables,this.decodeTableSeq=t.decodeTableSeq,this.defaultCharUnicode=t.defaultCharUnicode,this.gb18030=t.gb18030}function m(e,t){if(e[0]>t)return-1;for(var a=0,o=e.length;a<o-1;){var n=a+(o-a+1>>1);e[n]<=t?a=n:o=n}return a}c.prototype.encoder=h,c.prototype.decoder=u,c.prototype._getDecodeTrieNode=function(e){for(var t=[];e>0;e>>>=8)t.push(255&e);0==t.length&&t.push(0);for(var a=this.decodeTables[0],o=t.length-1;o>0;o--){var i=a[t[o]];if(i==n)a[t[o]]=l-this.decodeTables.length,this.decodeTables.push(a=s.slice(0));else{if(!(i<=l))throw new Error("Overwrite byte in "+this.encodingName+", addr: "+e.toString(16));a=this.decodeTables[l-i]}}return a},c.prototype._addDecodeChunk=function(e){var t=parseInt(e[0],16),a=this._getDecodeTrieNode(t);t&=255;for(var o=1;o<e.length;o++){var n=e[o];if("string"==typeof n)for(var i=0;i<n.length;){var l=n.charCodeAt(i++);if(55296<=l&&l<56320){var s=n.charCodeAt(i++);if(!(56320<=s&&s<57344))throw new Error("Incorrect surrogate pair in "+this.encodingName+" at chunk "+e[0]);a[t++]=65536+1024*(l-55296)+(s-56320)}else if(4080<l&&l<=4095){for(var d=4095-l+2,c=[],h=0;h<d;h++)c.push(n.charCodeAt(i++));a[t++]=r-this.decodeTableSeq.length,this.decodeTableSeq.push(c)}else a[t++]=l}else{if("number"!=typeof n)throw new Error("Incorrect type '"+typeof n+"' given in "+this.encodingName+" at chunk "+e[0]);var u=a[t-1]+1;for(i=0;i<n;i++)a[t++]=u++}}if(t>255)throw new Error("Incorrect chunk in "+this.encodingName+" at addr "+e[0]+": too long"+t)},c.prototype._getEncodeBucket=function(e){var t=e>>8;return void 0===this.encodeTable[t]&&(this.encodeTable[t]=s.slice(0)),this.encodeTable[t]},c.prototype._setEncodeChar=function(e,t){var a=this._getEncodeBucket(e),o=255&e;a[o]<=r?this.encodeTableSeq[r-a[o]][-1]=t:a[o]==n&&(a[o]=t)},c.prototype._setEncodeSequence=function(e,t){var a,o=e[0],i=this._getEncodeBucket(o),l=255&o;i[l]<=r?a=this.encodeTableSeq[r-i[l]]:(a={},i[l]!==n&&(a[-1]=i[l]),i[l]=r-this.encodeTableSeq.length,this.encodeTableSeq.push(a));for(var s=1;s<e.length-1;s++){var d=a[o];"object"==typeof d?a=d:(a=a[o]={},void 0!==d&&(a[-1]=d))}a[o=e[e.length-1]]=t},c.prototype._fillEncodeTable=function(e,t,a){for(var o=this.decodeTables[e],n=!1,i={},s=0;s<256;s++){var d=o[s],c=t+s;if(!a[c])if(d>=0)this._setEncodeChar(d,c),n=!0;else if(d<=l){var h=l-d;if(!i[h]){var u=c<<8>>>0;this._fillEncodeTable(h,u,a)?n=!0:i[h]=!0}}else d<=r&&(this._setEncodeSequence(this.decodeTableSeq[r-d],c),n=!0)}return n},h.prototype.write=function(e){for(var t=o.alloc(e.length*(this.gb18030?4:3)),a=this.leadSurrogate,i=this.seqObj,l=-1,s=0,d=0;;){if(-1===l){if(s==e.length)break;var c=e.charCodeAt(s++)}else c=l,l=-1;if(55296<=c&&c<57344)if(c<56320){if(-1===a){a=c;continue}a=c,c=n}else-1!==a?(c=65536+1024*(a-55296)+(c-56320),a=-1):c=n;else-1!==a&&(l=c,c=n,a=-1);var h=n;if(void 0!==i&&c!=n){var u=i[c];if("object"==typeof u){i=u;continue}"number"==typeof u?h=u:null==u&&void 0!==(u=i[-1])&&(h=u,l=c),i=void 0}else if(c>=0){var p=this.encodeTable[c>>8];if(void 0!==p&&(h=p[255&c]),h<=r){i=this.encodeTableSeq[r-h];continue}if(h==n&&this.gb18030){var b=m(this.gb18030.uChars,c);if(-1!=b){h=this.gb18030.gbChars[b]+(c-this.gb18030.uChars[b]),t[d++]=129+Math.floor(h/12600),h%=12600,t[d++]=48+Math.floor(h/1260),h%=1260,t[d++]=129+Math.floor(h/10),h%=10,t[d++]=48+h;continue}}}h===n&&(h=this.defaultCharSingleByte),h<256?t[d++]=h:h<65536?(t[d++]=h>>8,t[d++]=255&h):h<16777216?(t[d++]=h>>16,t[d++]=h>>8&255,t[d++]=255&h):(t[d++]=h>>>24,t[d++]=h>>>16&255,t[d++]=h>>>8&255,t[d++]=255&h)}return this.seqObj=i,this.leadSurrogate=a,t.slice(0,d)},h.prototype.end=function(){if(-1!==this.leadSurrogate||void 0!==this.seqObj){var e=o.alloc(10),t=0;if(this.seqObj){var a=this.seqObj[-1];void 0!==a&&(a<256?e[t++]=a:(e[t++]=a>>8,e[t++]=255&a)),this.seqObj=void 0}return-1!==this.leadSurrogate&&(e[t++]=this.defaultCharSingleByte,this.leadSurrogate=-1),e.slice(0,t)}},h.prototype.findIdx=m,u.prototype.write=function(e){for(var t=o.alloc(2*e.length),a=this.nodeIdx,s=this.prevBytes,d=this.prevBytes.length,c=-this.prevBytes.length,h=0,u=0;h<e.length;h++){var p,b=h>=0?e[h]:s[h+d];if((p=this.decodeTables[a][b])>=0);else if(p===n)p=this.defaultCharUnicode.charCodeAt(0),h=c;else if(p===i){if(h>=3)var _=12600*(e[h-3]-129)+1260*(e[h-2]-48)+10*(e[h-1]-129)+(b-48);else _=12600*(s[h-3+d]-129)+1260*((h-2>=0?e[h-2]:s[h-2+d])-48)+10*((h-1>=0?e[h-1]:s[h-1+d])-129)+(b-48);var f=m(this.gb18030.gbChars,_);p=this.gb18030.uChars[f]+_-this.gb18030.gbChars[f]}else{if(p<=l){a=l-p;continue}if(!(p<=r))throw new Error("iconv-lite internal error: invalid decoding table value "+p+" at "+a+"/"+b);for(var I=this.decodeTableSeq[r-p],$=0;$<I.length-1;$++)p=I[$],t[u++]=255&p,t[u++]=p>>8;p=I[I.length-1]}if(p>=65536){var g=55296|(p-=65536)>>10;t[u++]=255&g,t[u++]=g>>8,p=56320|1023&p}t[u++]=255&p,t[u++]=p>>8,a=0,c=h+1}return this.nodeIdx=a,this.prevBytes=c>=0?Array.prototype.slice.call(e,c):s.slice(c+d).concat(Array.prototype.slice.call(e)),t.slice(0,u).toString("ucs2")},u.prototype.end=function(){for(var e="";this.prevBytes.length>0;){e+=this.defaultCharUnicode;var t=this.prevBytes.slice(1);this.prevBytes=[],this.nodeIdx=0,t.length>0&&(e+=this.write(t))}return this.prevBytes=[],this.nodeIdx=0,e}},384:(e,t,a)=>{"use strict";e.exports={shiftjis:{type:"_dbcs",table:function(){return a(679)},encodeAdd:{"¥":92,"‾":126},encodeSkipVals:[{from:60736,to:63808}]},csshiftjis:"shiftjis",mskanji:"shiftjis",sjis:"shiftjis",windows31j:"shiftjis",ms31j:"shiftjis",xsjis:"shiftjis",windows932:"shiftjis",ms932:"shiftjis",932:"shiftjis",cp932:"shiftjis",eucjp:{type:"_dbcs",table:function(){return a(406)},encodeAdd:{"¥":92,"‾":126}},gb2312:"cp936",gb231280:"cp936",gb23121980:"cp936",csgb2312:"cp936",csiso58gb231280:"cp936",euccn:"cp936",windows936:"cp936",ms936:"cp936",936:"cp936",cp936:{type:"_dbcs",table:function(){return a(488)}},gbk:{type:"_dbcs",table:function(){return a(488).concat(a(914))}},xgbk:"gbk",isoir58:"gbk",gb18030:{type:"_dbcs",table:function(){return a(488).concat(a(914))},gb18030:function(){return a(129)},encodeSkipVals:[128],encodeAdd:{"€":41699}},chinese:"gb18030",windows949:"cp949",ms949:"cp949",949:"cp949",cp949:{type:"_dbcs",table:function(){return a(166)}},cseuckr:"cp949",csksc56011987:"cp949",euckr:"cp949",isoir149:"cp949",korean:"cp949",ksc56011987:"cp949",ksc56011989:"cp949",ksc5601:"cp949",windows950:"cp950",ms950:"cp950",950:"cp950",cp950:{type:"_dbcs",table:function(){return a(324)}},big5:"big5hkscs",big5hkscs:{type:"_dbcs",table:function(){return a(324).concat(a(267))},encodeSkipVals:[36457,36463,36478,36523,36532,36557,36560,36695,36713,36718,36811,36862,36973,36986,37060,37084,37105,37311,37551,37552,37553,37554,37585,37959,38090,38361,38652,39285,39798,39800,39803,39878,39902,39916,39926,40002,40019,40034,40040,40043,40055,40124,40125,40144,40279,40282,40388,40431,40443,40617,40687,40701,40800,40907,41079,41180,41183,36812,37576,38468,38637,41636,41637,41639,41638,41676,41678]},cnbig5:"big5hkscs",csbig5:"big5hkscs",xxbig5:"big5hkscs"}},336:(e,t,a)=>{"use strict";for(var o=[a(911),a(172),a(82),a(955),a(770),a(698),a(446),a(161),a(384)],n=0;n<o.length;n++){var i=o[n];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])}},911:(e,t,a)=>{"use strict";var o=a(774).Buffer;function n(e,t){this.enc=e.encodingName,this.bomAware=e.bomAware,"base64"===this.enc?this.encoder=s:"cesu8"===this.enc&&(this.enc="utf8",this.encoder=d,"💩"!==o.from("eda0bdedb2a9","hex").toString()&&(this.decoder=c,this.defaultCharUnicode=t.defaultCharUnicode))}e.exports={utf8:{type:"_internal",bomAware:!0},cesu8:{type:"_internal",bomAware:!0},unicode11utf8:"utf8",ucs2:{type:"_internal",bomAware:!0},utf16le:"ucs2",binary:{type:"_internal"},base64:{type:"_internal"},hex:{type:"_internal"},_internal:n},n.prototype.encoder=l,n.prototype.decoder=r;var i=a(193).StringDecoder;function r(e,t){this.decoder=new i(t.enc)}function l(e,t){this.enc=t.enc}function s(e,t){this.prevStr=""}function d(e,t){}function c(e,t){this.acc=0,this.contBytes=0,this.accBytes=0,this.defaultCharUnicode=t.defaultCharUnicode}i.prototype.end||(i.prototype.end=function(){}),r.prototype.write=function(e){return o.isBuffer(e)||(e=o.from(e)),this.decoder.write(e)},r.prototype.end=function(){return this.decoder.end()},l.prototype.write=function(e){return o.from(e,this.enc)},l.prototype.end=function(){},s.prototype.write=function(e){var t=(e=this.prevStr+e).length-e.length%4;return this.prevStr=e.slice(t),e=e.slice(0,t),o.from(e,"base64")},s.prototype.end=function(){return o.from(this.prevStr,"base64")},d.prototype.write=function(e){for(var t=o.alloc(3*e.length),a=0,n=0;n<e.length;n++){var i=e.charCodeAt(n);i<128?t[a++]=i:i<2048?(t[a++]=192+(i>>>6),t[a++]=128+(63&i)):(t[a++]=224+(i>>>12),t[a++]=128+(i>>>6&63),t[a++]=128+(63&i))}return t.slice(0,a)},d.prototype.end=function(){},c.prototype.write=function(e){for(var t=this.acc,a=this.contBytes,o=this.accBytes,n="",i=0;i<e.length;i++){var r=e[i];128!=(192&r)?(a>0&&(n+=this.defaultCharUnicode,a=0),r<128?n+=String.fromCharCode(r):r<224?(t=31&r,a=1,o=1):r<240?(t=15&r,a=2,o=1):n+=this.defaultCharUnicode):a>0?(t=t<<6|63&r,o++,0==--a&&(n+=2===o&&t<128&&t>0||3===o&&t<2048?this.defaultCharUnicode:String.fromCharCode(t))):n+=this.defaultCharUnicode}return this.acc=t,this.contBytes=a,this.accBytes=o,n},c.prototype.end=function(){var e=0;return this.contBytes>0&&(e+=this.defaultCharUnicode),e}},770:(e,t,a)=>{"use strict";var o=a(774).Buffer;function n(e,t){if(!e)throw new Error("SBCS codec is called without the data.");if(!e.chars||128!==e.chars.length&&256!==e.chars.length)throw new Error("Encoding '"+e.type+"' has incorrect 'chars' (must be of len 128 or 256)");if(128===e.chars.length){for(var a="",n=0;n<128;n++)a+=String.fromCharCode(n);e.chars=a+e.chars}this.decodeBuf=o.from(e.chars,"ucs2");var i=o.alloc(65536,t.defaultCharSingleByte.charCodeAt(0));for(n=0;n<e.chars.length;n++)i[e.chars.charCodeAt(n)]=n;this.encodeBuf=i}function i(e,t){this.encodeBuf=t.encodeBuf}function r(e,t){this.decodeBuf=t.decodeBuf}t._sbcs=n,n.prototype.encoder=i,n.prototype.decoder=r,i.prototype.write=function(e){for(var t=o.alloc(e.length),a=0;a<e.length;a++)t[a]=this.encodeBuf[e.charCodeAt(a)];return t},i.prototype.end=function(){},r.prototype.write=function(e){for(var t=this.decodeBuf,a=o.alloc(2*e.length),n=0,i=0,r=0;r<e.length;r++)n=2*e[r],a[i=2*r]=t[n],a[i+1]=t[n+1];return a.toString("ucs2")},r.prototype.end=function(){}},446:e=>{"use strict";e.exports={437:"cp437",737:"cp737",775:"cp775",850:"cp850",852:"cp852",855:"cp855",856:"cp856",857:"cp857",858:"cp858",860:"cp860",861:"cp861",862:"cp862",863:"cp863",864:"cp864",865:"cp865",866:"cp866",869:"cp869",874:"windows874",922:"cp922",1046:"cp1046",1124:"cp1124",1125:"cp1125",1129:"cp1129",1133:"cp1133",1161:"cp1161",1162:"cp1162",1163:"cp1163",1250:"windows1250",1251:"windows1251",1252:"windows1252",1253:"windows1253",1254:"windows1254",1255:"windows1255",1256:"windows1256",1257:"windows1257",1258:"windows1258",28591:"iso88591",28592:"iso88592",28593:"iso88593",28594:"iso88594",28595:"iso88595",28596:"iso88596",28597:"iso88597",28598:"iso88598",28599:"iso88599",28600:"iso885910",28601:"iso885911",28603:"iso885913",28604:"iso885914",28605:"iso885915",28606:"iso885916",windows874:{type:"_sbcs",chars:"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},win874:"windows874",cp874:"windows874",windows1250:{type:"_sbcs",chars:"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"},win1250:"windows1250",cp1250:"windows1250",windows1251:{type:"_sbcs",chars:"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},win1251:"windows1251",cp1251:"windows1251",windows1252:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},win1252:"windows1252",cp1252:"windows1252",windows1253:{type:"_sbcs",chars:"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"},win1253:"windows1253",cp1253:"windows1253",windows1254:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"},win1254:"windows1254",cp1254:"windows1254",windows1255:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"},win1255:"windows1255",cp1255:"windows1255",windows1256:{type:"_sbcs",chars:"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے"},win1256:"windows1256",cp1256:"windows1256",windows1257:{type:"_sbcs",chars:"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙"},win1257:"windows1257",cp1257:"windows1257",windows1258:{type:"_sbcs",chars:"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},win1258:"windows1258",cp1258:"windows1258",iso88591:{type:"_sbcs",chars:" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},cp28591:"iso88591",iso88592:{type:"_sbcs",chars:" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙"},cp28592:"iso88592",iso88593:{type:"_sbcs",chars:" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙"},cp28593:"iso88593",iso88594:{type:"_sbcs",chars:" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙"},cp28594:"iso88594",iso88595:{type:"_sbcs",chars:" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ"},cp28595:"iso88595",iso88596:{type:"_sbcs",chars:" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������"},cp28596:"iso88596",iso88597:{type:"_sbcs",chars:" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�"},cp28597:"iso88597",iso88598:{type:"_sbcs",chars:" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�"},cp28598:"iso88598",iso88599:{type:"_sbcs",chars:" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ"},cp28599:"iso88599",iso885910:{type:"_sbcs",chars:" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ"},cp28600:"iso885910",iso885911:{type:"_sbcs",chars:" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},cp28601:"iso885911",iso885913:{type:"_sbcs",chars:" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’"},cp28603:"iso885913",iso885914:{type:"_sbcs",chars:" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ"},cp28604:"iso885914",iso885915:{type:"_sbcs",chars:" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},cp28605:"iso885915",iso885916:{type:"_sbcs",chars:" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ"},cp28606:"iso885916",cp437:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm437:"cp437",csibm437:"cp437",cp737:{type:"_sbcs",chars:"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ "},ibm737:"cp737",csibm737:"cp737",cp775:{type:"_sbcs",chars:"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ "},ibm775:"cp775",csibm775:"cp775",cp850:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "},ibm850:"cp850",csibm850:"cp850",cp852:{type:"_sbcs",chars:"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ "},ibm852:"cp852",csibm852:"cp852",cp855:{type:"_sbcs",chars:"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ "},ibm855:"cp855",csibm855:"cp855",cp856:{type:"_sbcs",chars:"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ "},ibm856:"cp856",csibm856:"cp856",cp857:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ "},ibm857:"cp857",csibm857:"cp857",cp858:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ "},ibm858:"cp858",csibm858:"cp858",cp860:{type:"_sbcs",chars:"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm860:"cp860",csibm860:"cp860",cp861:{type:"_sbcs",chars:"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm861:"cp861",csibm861:"cp861",cp862:{type:"_sbcs",chars:"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm862:"cp862",csibm862:"cp862",cp863:{type:"_sbcs",chars:"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm863:"cp863",csibm863:"cp863",cp864:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�"},ibm864:"cp864",csibm864:"cp864",cp865:{type:"_sbcs",chars:"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},ibm865:"cp865",csibm865:"cp865",cp866:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ "},ibm866:"cp866",csibm866:"cp866",cp869:{type:"_sbcs",chars:"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ "},ibm869:"cp869",csibm869:"cp869",cp922:{type:"_sbcs",chars:" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ"},ibm922:"cp922",csibm922:"cp922",cp1046:{type:"_sbcs",chars:"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�"},ibm1046:"cp1046",csibm1046:"cp1046",cp1124:{type:"_sbcs",chars:" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ"},ibm1124:"cp1124",csibm1124:"cp1124",cp1125:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ "},ibm1125:"cp1125",csibm1125:"cp1125",cp1129:{type:"_sbcs",chars:" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},ibm1129:"cp1129",csibm1129:"cp1129",cp1133:{type:"_sbcs",chars:" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�"},ibm1133:"cp1133",csibm1133:"cp1133",cp1161:{type:"_sbcs",chars:"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ "},ibm1161:"cp1161",csibm1161:"cp1161",cp1162:{type:"_sbcs",chars:"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"},ibm1162:"cp1162",csibm1162:"cp1162",cp1163:{type:"_sbcs",chars:" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ"},ibm1163:"cp1163",csibm1163:"cp1163",maccroatian:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ"},maccyrillic:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"},macgreek:{type:"_sbcs",chars:"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�"},maciceland:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},macroman:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},macromania:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},macthai:{type:"_sbcs",chars:"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู\ufeff​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����"},macturkish:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ"},macukraine:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤"},koi8r:{type:"_sbcs",chars:"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},koi8u:{type:"_sbcs",chars:"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},koi8ru:{type:"_sbcs",chars:"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},koi8t:{type:"_sbcs",chars:"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ"},armscii8:{type:"_sbcs",chars:" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�"},rk1048:{type:"_sbcs",chars:"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},tcvn:{type:"_sbcs",chars:"\0ÚỤỪỬỮ\b\t\n\v\f\rỨỰỲỶỸÝỴ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ"},georgianacademy:{type:"_sbcs",chars:"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},georgianps:{type:"_sbcs",chars:"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ"},pt154:{type:"_sbcs",chars:"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя"},viscii:{type:"_sbcs",chars:"\0ẲẴẪ\b\t\n\v\f\rỶỸỴ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ"},iso646cn:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"},iso646jp:{type:"_sbcs",chars:"\0\b\t\n\v\f\r !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������"},hproman8:{type:"_sbcs",chars:" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�"},macintosh:{type:"_sbcs",chars:"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ"},ascii:{type:"_sbcs",chars:"��������������������������������������������������������������������������������������������������������������������������������"},tis620:{type:"_sbcs",chars:"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����"}}},698:e=>{"use strict";e.exports={10029:"maccenteuro",maccenteuro:{type:"_sbcs",chars:"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ"},808:"cp808",ibm808:"cp808",cp808:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ "},mik:{type:"_sbcs",chars:"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ "},cp720:{type:"_sbcs",chars:"éâàçêëèïîّْô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡ًٌٍَُِ≈°∙·√ⁿ²■ "},ascii8bit:"ascii",usascii:"ascii",ansix34:"ascii",ansix341968:"ascii",ansix341986:"ascii",csascii:"ascii",cp367:"ascii",ibm367:"ascii",isoir6:"ascii",iso646us:"ascii",iso646irv:"ascii",us:"ascii",latin1:"iso88591",latin2:"iso88592",latin3:"iso88593",latin4:"iso88594",latin5:"iso88599",latin6:"iso885910",latin7:"iso885913",latin8:"iso885914",latin9:"iso885915",latin10:"iso885916",csisolatin1:"iso88591",csisolatin2:"iso88592",csisolatin3:"iso88593",csisolatin4:"iso88594",csisolatincyrillic:"iso88595",csisolatinarabic:"iso88596",csisolatingreek:"iso88597",csisolatinhebrew:"iso88598",csisolatin5:"iso88599",csisolatin6:"iso885910",l1:"iso88591",l2:"iso88592",l3:"iso88593",l4:"iso88594",l5:"iso88599",l6:"iso885910",l7:"iso885913",l8:"iso885914",l9:"iso885915",l10:"iso885916",isoir14:"iso646jp",isoir57:"iso646cn",isoir100:"iso88591",isoir101:"iso88592",isoir109:"iso88593",isoir110:"iso88594",isoir144:"iso88595",isoir127:"iso88596",isoir126:"iso88597",isoir138:"iso88598",isoir148:"iso88599",isoir157:"iso885910",isoir166:"tis620",isoir179:"iso885913",isoir199:"iso885914",isoir203:"iso885915",isoir226:"iso885916",cp819:"iso88591",ibm819:"iso88591",cyrillic:"iso88595",arabic:"iso88596",arabic8:"iso88596",ecma114:"iso88596",asmo708:"iso88596",greek:"iso88597",greek8:"iso88597",ecma118:"iso88597",elot928:"iso88597",hebrew:"iso88598",hebrew8:"iso88598",turkish:"iso88599",turkish8:"iso88599",thai:"iso885911",thai8:"iso885911",celtic:"iso885914",celtic8:"iso885914",isoceltic:"iso885914",tis6200:"tis620",tis62025291:"tis620",tis62025330:"tis620",1e4:"macroman",10006:"macgreek",10007:"maccyrillic",10079:"maciceland",10081:"macturkish",cspc8codepage437:"cp437",cspc775baltic:"cp775",cspc850multilingual:"cp850",cspcp852:"cp852",cspc862latinhebrew:"cp862",cpgr:"cp869",msee:"cp1250",mscyrl:"cp1251",msansi:"cp1252",msgreek:"cp1253",msturk:"cp1254",mshebr:"cp1255",msarab:"cp1256",winbaltrim:"cp1257",cp20866:"koi8r",20866:"koi8r",ibm878:"koi8r",cskoi8r:"koi8r",cp21866:"koi8u",21866:"koi8u",ibm1168:"koi8u",strk10482002:"rk1048",tcvn5712:"tcvn",tcvn57121:"tcvn",gb198880:"iso646cn",cn:"iso646cn",csiso14jisc6220ro:"iso646jp",jisc62201969ro:"iso646jp",jp:"iso646jp",cshproman8:"hproman8",r8:"hproman8",roman8:"hproman8",xroman8:"hproman8",ibm1051:"hproman8",mac:"macintosh",csmacintosh:"macintosh"}},82:(e,t,a)=>{"use strict";var o=a(774).Buffer;function n(){}function i(){}function r(){this.overflowByte=-1}function l(e,t){this.iconv=t}function s(e,t){void 0===(e=e||{}).addBOM&&(e.addBOM=!0),this.encoder=t.iconv.getEncoder("utf-16le",e)}function d(e,t){this.decoder=null,this.initialBufs=[],this.initialBufsLen=0,this.options=e||{},this.iconv=t.iconv}function c(e,t){var a=[],o=0,n=0,i=0;e:for(var r=0;r<e.length;r++)for(var l=e[r],s=0;s<l.length;s++)if(a.push(l[s]),2===a.length){if(0===o){if(255===a[0]&&254===a[1])return"utf-16le";if(254===a[0]&&255===a[1])return"utf-16be"}if(0===a[0]&&0!==a[1]&&i++,0!==a[0]&&0===a[1]&&n++,a.length=0,++o>=100)break e}return i>n?"utf-16be":i<n?"utf-16le":t||"utf-16le"}t.utf16be=n,n.prototype.encoder=i,n.prototype.decoder=r,n.prototype.bomAware=!0,i.prototype.write=function(e){for(var t=o.from(e,"ucs2"),a=0;a<t.length;a+=2){var n=t[a];t[a]=t[a+1],t[a+1]=n}return t},i.prototype.end=function(){},r.prototype.write=function(e){if(0==e.length)return"";var t=o.alloc(e.length+1),a=0,n=0;for(-1!==this.overflowByte&&(t[0]=e[0],t[1]=this.overflowByte,a=1,n=2);a<e.length-1;a+=2,n+=2)t[n]=e[a+1],t[n+1]=e[a];return this.overflowByte=a==e.length-1?e[e.length-1]:-1,t.slice(0,n).toString("ucs2")},r.prototype.end=function(){this.overflowByte=-1},t.utf16=l,l.prototype.encoder=s,l.prototype.decoder=d,s.prototype.write=function(e){return this.encoder.write(e)},s.prototype.end=function(){return this.encoder.end()},d.prototype.write=function(e){if(!this.decoder){if(this.initialBufs.push(e),this.initialBufsLen+=e.length,this.initialBufsLen<16)return"";var t=c(this.initialBufs,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(t,this.options);for(var a="",o=0;o<this.initialBufs.length;o++)a+=this.decoder.write(this.initialBufs[o]);return this.initialBufs.length=this.initialBufsLen=0,a}return this.decoder.write(e)},d.prototype.end=function(){if(!this.decoder){var e=c(this.initialBufs,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(e,this.options);for(var t="",a=0;a<this.initialBufs.length;a++)t+=this.decoder.write(this.initialBufs[a]);var o=this.decoder.end();return o&&(t+=o),this.initialBufs.length=this.initialBufsLen=0,t}return this.decoder.end()}},172:(e,t,a)=>{"use strict";var o=a(774).Buffer;function n(e,t){this.iconv=t,this.bomAware=!0,this.isLE=e.isLE}function i(e,t){this.isLE=t.isLE,this.highSurrogate=0}function r(e,t){this.isLE=t.isLE,this.badChar=t.iconv.defaultCharUnicode.charCodeAt(0),this.overflow=[]}function l(e,t,a,o){if((a<0||a>1114111)&&(a=o),a>=65536){var n=55296|(a-=65536)>>10;e[t++]=255&n,e[t++]=n>>8,a=56320|1023&a}return e[t++]=255&a,e[t++]=a>>8,t}function s(e,t){this.iconv=t}function d(e,t){void 0===(e=e||{}).addBOM&&(e.addBOM=!0),this.encoder=t.iconv.getEncoder(e.defaultEncoding||"utf-32le",e)}function c(e,t){this.decoder=null,this.initialBufs=[],this.initialBufsLen=0,this.options=e||{},this.iconv=t.iconv}function h(e,t){var a=[],o=0,n=0,i=0,r=0,l=0;e:for(var s=0;s<e.length;s++)for(var d=e[s],c=0;c<d.length;c++)if(a.push(d[c]),4===a.length){if(0===o){if(255===a[0]&&254===a[1]&&0===a[2]&&0===a[3])return"utf-32le";if(0===a[0]&&0===a[1]&&254===a[2]&&255===a[3])return"utf-32be"}if((0!==a[0]||a[1]>16)&&i++,(0!==a[3]||a[2]>16)&&n++,0!==a[0]||0!==a[1]||0===a[2]&&0===a[3]||l++,0===a[0]&&0===a[1]||0!==a[2]||0!==a[3]||r++,a.length=0,++o>=100)break e}return l-i>r-n?"utf-32be":l-i<r-n?"utf-32le":t||"utf-32le"}t._utf32=n,t.utf32le={type:"_utf32",isLE:!0},t.utf32be={type:"_utf32",isLE:!1},t.ucs4le="utf32le",t.ucs4be="utf32be",n.prototype.encoder=i,n.prototype.decoder=r,i.prototype.write=function(e){for(var t=o.from(e,"ucs2"),a=o.alloc(2*t.length),n=this.isLE?a.writeUInt32LE:a.writeUInt32BE,i=0,r=0;r<t.length;r+=2){var l=t.readUInt16LE(r),s=55296<=l&&l<56320,d=56320<=l&&l<57344;if(this.highSurrogate){if(!s&&d){var c=65536+(this.highSurrogate-55296<<10|l-56320);n.call(a,c,i),i+=4,this.highSurrogate=0;continue}n.call(a,this.highSurrogate,i),i+=4}s?this.highSurrogate=l:(n.call(a,l,i),i+=4,this.highSurrogate=0)}return i<a.length&&(a=a.slice(0,i)),a},i.prototype.end=function(){if(this.highSurrogate){var e=o.alloc(4);return this.isLE?e.writeUInt32LE(this.highSurrogate,0):e.writeUInt32BE(this.highSurrogate,0),this.highSurrogate=0,e}},r.prototype.write=function(e){if(0===e.length)return"";var t=0,a=0,n=o.alloc(e.length+4),i=0,r=this.isLE,s=this.overflow,d=this.badChar;if(s.length>0){for(;t<e.length&&s.length<4;t++)s.push(e[t]);4===s.length&&(a=r?s[t]|s[t+1]<<8|s[t+2]<<16|s[t+3]<<24:s[t+3]|s[t+2]<<8|s[t+1]<<16|s[t]<<24,s.length=0,i=l(n,i,a,d))}for(;t<e.length-3;t+=4)i=l(n,i,a=r?e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24:e[t+3]|e[t+2]<<8|e[t+1]<<16|e[t]<<24,d);for(;t<e.length;t++)s.push(e[t]);return n.slice(0,i).toString("ucs2")},r.prototype.end=function(){this.overflow.length=0},t.utf32=s,t.ucs4="utf32",s.prototype.encoder=d,s.prototype.decoder=c,d.prototype.write=function(e){return this.encoder.write(e)},d.prototype.end=function(){return this.encoder.end()},c.prototype.write=function(e){if(!this.decoder){if(this.initialBufs.push(e),this.initialBufsLen+=e.length,this.initialBufsLen<32)return"";var t=h(this.initialBufs,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(t,this.options);for(var a="",o=0;o<this.initialBufs.length;o++)a+=this.decoder.write(this.initialBufs[o]);return this.initialBufs.length=this.initialBufsLen=0,a}return this.decoder.write(e)},c.prototype.end=function(){if(!this.decoder){var e=h(this.initialBufs,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(e,this.options);for(var t="",a=0;a<this.initialBufs.length;a++)t+=this.decoder.write(this.initialBufs[a]);var o=this.decoder.end();return o&&(t+=o),this.initialBufs.length=this.initialBufsLen=0,t}return this.decoder.end()}},955:(e,t,a)=>{"use strict";var o=a(774).Buffer;function n(e,t){this.iconv=t}t.utf7=n,t.unicode11utf7="utf7",n.prototype.encoder=r,n.prototype.decoder=l,n.prototype.bomAware=!0;var i=/[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;function r(e,t){this.iconv=t.iconv}function l(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=""}r.prototype.write=function(e){return o.from(e.replace(i,function(e){return"+"+("+"===e?"":this.iconv.encode(e,"utf16-be").toString("base64").replace(/=+$/,""))+"-"}.bind(this)))},r.prototype.end=function(){};for(var s=/[A-Za-z0-9\/+]/,d=[],c=0;c<256;c++)d[c]=s.test(String.fromCharCode(c));var h="+".charCodeAt(0),u="-".charCodeAt(0),m="&".charCodeAt(0);function p(e,t){this.iconv=t}function b(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=o.alloc(6),this.base64AccumIdx=0}function _(e,t){this.iconv=t.iconv,this.inBase64=!1,this.base64Accum=""}l.prototype.write=function(e){for(var t="",a=0,n=this.inBase64,i=this.base64Accum,r=0;r<e.length;r++)if(n){if(!d[e[r]]){if(r==a&&e[r]==u)t+="+";else{var l=i+this.iconv.decode(e.slice(a,r),"ascii");t+=this.iconv.decode(o.from(l,"base64"),"utf16-be")}e[r]!=u&&r--,a=r+1,n=!1,i=""}}else e[r]==h&&(t+=this.iconv.decode(e.slice(a,r),"ascii"),a=r+1,n=!0);if(n){var s=(l=i+this.iconv.decode(e.slice(a),"ascii")).length-l.length%8;i=l.slice(s),l=l.slice(0,s),t+=this.iconv.decode(o.from(l,"base64"),"utf16-be")}else t+=this.iconv.decode(e.slice(a),"ascii");return this.inBase64=n,this.base64Accum=i,t},l.prototype.end=function(){var e="";return this.inBase64&&this.base64Accum.length>0&&(e=this.iconv.decode(o.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",e},t.utf7imap=p,p.prototype.encoder=b,p.prototype.decoder=_,p.prototype.bomAware=!0,b.prototype.write=function(e){for(var t=this.inBase64,a=this.base64Accum,n=this.base64AccumIdx,i=o.alloc(5*e.length+10),r=0,l=0;l<e.length;l++){var s=e.charCodeAt(l);32<=s&&s<=126?(t&&(n>0&&(r+=i.write(a.slice(0,n).toString("base64").replace(/\//g,",").replace(/=+$/,""),r),n=0),i[r++]=u,t=!1),t||(i[r++]=s,s===m&&(i[r++]=u))):(t||(i[r++]=m,t=!0),t&&(a[n++]=s>>8,a[n++]=255&s,n==a.length&&(r+=i.write(a.toString("base64").replace(/\//g,","),r),n=0)))}return this.inBase64=t,this.base64AccumIdx=n,i.slice(0,r)},b.prototype.end=function(){var e=o.alloc(10),t=0;return this.inBase64&&(this.base64AccumIdx>0&&(t+=e.write(this.base64Accum.slice(0,this.base64AccumIdx).toString("base64").replace(/\//g,",").replace(/=+$/,""),t),this.base64AccumIdx=0),e[t++]=u,this.inBase64=!1),e.slice(0,t)};var f=d.slice();f[",".charCodeAt(0)]=!0,_.prototype.write=function(e){for(var t="",a=0,n=this.inBase64,i=this.base64Accum,r=0;r<e.length;r++)if(n){if(!f[e[r]]){if(r==a&&e[r]==u)t+="&";else{var l=i+this.iconv.decode(e.slice(a,r),"ascii").replace(/,/g,"/");t+=this.iconv.decode(o.from(l,"base64"),"utf16-be")}e[r]!=u&&r--,a=r+1,n=!1,i=""}}else e[r]==m&&(t+=this.iconv.decode(e.slice(a,r),"ascii"),a=r+1,n=!0);if(n){var s=(l=i+this.iconv.decode(e.slice(a),"ascii").replace(/,/g,"/")).length-l.length%8;i=l.slice(s),l=l.slice(0,s),t+=this.iconv.decode(o.from(l,"base64"),"utf16-be")}else t+=this.iconv.decode(e.slice(a),"ascii");return this.inBase64=n,this.base64Accum=i,t},_.prototype.end=function(){var e="";return this.inBase64&&this.base64Accum.length>0&&(e=this.iconv.decode(o.from(this.base64Accum,"base64"),"utf16-be")),this.inBase64=!1,this.base64Accum="",e}},557:(e,t)=>{"use strict";function a(e,t){this.encoder=e,this.addBOM=!0}function o(e,t){this.decoder=e,this.pass=!1,this.options=t||{}}t.PrependBOM=a,a.prototype.write=function(e){return this.addBOM&&(e="\ufeff"+e,this.addBOM=!1),this.encoder.write(e)},a.prototype.end=function(){return this.encoder.end()},t.StripBOM=o,o.prototype.write=function(e){var t=this.decoder.write(e);return this.pass||!t||("\ufeff"===t[0]&&(t=t.slice(1),"function"==typeof this.options.stripBOM&&this.options.stripBOM()),this.pass=!0),t},o.prototype.end=function(){return this.decoder.end()}},249:(e,t,a)=>{"use strict";var o,n=a(774).Buffer,i=a(557),r=e.exports;r.encodings=null,r.defaultCharUnicode="�",r.defaultCharSingleByte="?",r.encode=function(e,t,a){e=""+(e||"");var o=r.getEncoder(t,a),i=o.write(e),l=o.end();return l&&l.length>0?n.concat([i,l]):i},r.decode=function(e,t,a){"string"==typeof e&&(r.skipDecodeWarning||(console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding"),r.skipDecodeWarning=!0),e=n.from(""+(e||""),"binary"));var o=r.getDecoder(t,a),i=o.write(e),l=o.end();return l?i+l:i},r.encodingExists=function(e){try{return r.getCodec(e),!0}catch(e){return!1}},r.toEncoding=r.encode,r.fromEncoding=r.decode,r._codecDataCache={},r.getCodec=function(e){r.encodings||(r.encodings=a(336));for(var t=r._canonicalizeEncoding(e),o={};;){var n=r._codecDataCache[t];if(n)return n;var i=r.encodings[t];switch(typeof i){case"string":t=i;break;case"object":for(var l in i)o[l]=i[l];o.encodingName||(o.encodingName=t),t=i.type;break;case"function":return o.encodingName||(o.encodingName=t),n=new i(o,r),r._codecDataCache[o.encodingName]=n,n;default:throw new Error("Encoding not recognized: '"+e+"' (searched as: '"+t+"')")}}},r._canonicalizeEncoding=function(e){return(""+e).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g,"")},r.getEncoder=function(e,t){var a=r.getCodec(e),o=new a.encoder(t,a);return a.bomAware&&t&&t.addBOM&&(o=new i.PrependBOM(o,t)),o},r.getDecoder=function(e,t){var a=r.getCodec(e),o=new a.decoder(t,a);return!a.bomAware||t&&!1===t.stripBOM||(o=new i.StripBOM(o,t)),o},r.enableStreamingAPI=function(e){if(!r.supportsStreams){var t=a(792)(e);r.IconvLiteEncoderStream=t.IconvLiteEncoderStream,r.IconvLiteDecoderStream=t.IconvLiteDecoderStream,r.encodeStream=function(e,t){return new r.IconvLiteEncoderStream(r.getEncoder(e,t),t)},r.decodeStream=function(e,t){return new r.IconvLiteDecoderStream(r.getDecoder(e,t),t)},r.supportsStreams=!0}};try{o=a(203)}catch(e){}o&&o.Transform?r.enableStreamingAPI(o):r.encodeStream=r.decodeStream=function(){throw new Error("iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.")}},792:(e,t,a)=>{"use strict";var o=a(774).Buffer;e.exports=function(e){var t=e.Transform;function a(e,a){this.conv=e,(a=a||{}).decodeStrings=!1,t.call(this,a)}function n(e,a){this.conv=e,(a=a||{}).encoding=this.encoding="utf8",t.call(this,a)}return a.prototype=Object.create(t.prototype,{constructor:{value:a}}),a.prototype._transform=function(e,t,a){if("string"!=typeof e)return a(new Error("Iconv encoding stream needs strings as its input."));try{var o=this.conv.write(e);o&&o.length&&this.push(o),a()}catch(e){a(e)}},a.prototype._flush=function(e){try{var t=this.conv.end();t&&t.length&&this.push(t),e()}catch(t){e(t)}},a.prototype.collect=function(e){var t=[];return this.on("error",e),this.on("data",(function(e){t.push(e)})),this.on("end",(function(){e(null,o.concat(t))})),this},n.prototype=Object.create(t.prototype,{constructor:{value:n}}),n.prototype._transform=function(e,t,a){if(!(o.isBuffer(e)||e instanceof Uint8Array))return a(new Error("Iconv decoding stream needs buffers as its input."));try{var n=this.conv.write(e);n&&n.length&&this.push(n,this.encoding),a()}catch(e){a(e)}},n.prototype._flush=function(e){try{var t=this.conv.end();t&&t.length&&this.push(t,this.encoding),e()}catch(t){e(t)}},n.prototype.collect=function(e){var t="";return this.on("error",e),this.on("data",(function(e){t+=e})),this.on("end",(function(){e(null,t)})),this},{IconvLiteEncoderStream:a,IconvLiteDecoderStream:n}}},774:(e,t,a)=>{"use strict";var o,n=a(181),i=n.Buffer,r={};for(o in n)n.hasOwnProperty(o)&&"SlowBuffer"!==o&&"Buffer"!==o&&(r[o]=n[o]);var l=r.Buffer={};for(o in i)i.hasOwnProperty(o)&&"allocUnsafe"!==o&&"allocUnsafeSlow"!==o&&(l[o]=i[o]);if(r.Buffer.prototype=i.prototype,l.from&&l.from!==Uint8Array.from||(l.from=function(e,t,a){if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type '+typeof e);if(e&&void 0===e.length)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);return i(e,t,a)}),l.alloc||(l.alloc=function(e,t,a){if("number"!=typeof e)throw new TypeError('The "size" argument must be of type number. Received type '+typeof e);if(e<0||e>=2*(1<<30))throw new RangeError('The value "'+e+'" is invalid for option "size"');var o=i(e);return t&&0!==t.length?"string"==typeof a?o.fill(t,a):o.fill(t):o.fill(0),o}),!r.kStringMaxLength)try{r.kStringMaxLength=process.binding("buffer").kStringMaxLength}catch(e){}r.constants||(r.constants={MAX_LENGTH:r.kMaxLength},r.kStringMaxLength&&(r.constants.MAX_STRING_LENGTH=r.kStringMaxLength)),e.exports=r},398:e=>{"use strict";e.exports=require("vscode")},181:e=>{"use strict";e.exports=require("buffer")},317:e=>{"use strict";e.exports=require("child_process")},896:e=>{"use strict";e.exports=require("fs")},928:e=>{"use strict";e.exports=require("path")},203:e=>{"use strict";e.exports=require("stream")},193:e=>{"use strict";e.exports=require("string_decoder")},267:e=>{"use strict";e.exports=JSON.parse('[["8740","䏰䰲䘃䖦䕸𧉧䵷䖳𧲱䳢𧳅㮕䜶䝄䱇䱀𤊿𣘗𧍒𦺋𧃒䱗𪍑䝏䗚䲅𧱬䴇䪤䚡𦬣爥𥩔𡩣𣸆𣽡晍囻"],["8767","綕夝𨮹㷴霴𧯯寛𡵞媤㘥𩺰嫑宷峼杮薓𩥅瑡璝㡵𡵓𣚞𦀡㻬"],["87a1","𥣞㫵竼龗𤅡𨤍𣇪𠪊𣉞䌊蒄龖鐯䤰蘓墖靊鈘秐稲晠権袝瑌篅枂稬剏遆㓦珄𥶹瓆鿇垳䤯呌䄱𣚎堘穲𧭥讏䚮𦺈䆁𥶙箮𢒼鿈𢓁𢓉𢓌鿉蔄𣖻䂴鿊䓡𪷿拁灮鿋"],["8840","㇀",4,"𠄌㇅𠃑𠃍㇆㇇𠃋𡿨㇈𠃊㇉㇊㇋㇌𠄎㇍㇎ĀÁǍÀĒÉĚÈŌÓǑÒ࿿Ê̄Ế࿿Ê̌ỀÊāáǎàɑēéěèīíǐìōóǒòūúǔùǖǘǚ"],["88a1","ǜü࿿ê̄ế࿿ê̌ềêɡ⏚⏛"],["8940","𪎩𡅅"],["8943","攊"],["8946","丽滝鵎釟"],["894c","𧜵撑会伨侨兖兴农凤务动医华发变团声处备夲头学实実岚庆总斉柾栄桥济炼电纤纬纺织经统缆缷艺苏药视设询车轧轮"],["89a1","琑糼緍楆竉刧"],["89ab","醌碸酞肼"],["89b0","贋胶𠧧"],["89b5","肟黇䳍鷉鸌䰾𩷶𧀎鸊𪄳㗁"],["89c1","溚舾甙"],["89c5","䤑马骏龙禇𨑬𡷊𠗐𢫦两亁亀亇亿仫伷㑌侽㹈倃傈㑽㒓㒥円夅凛凼刅争剹劐匧㗇厩㕑厰㕓参吣㕭㕲㚁咓咣咴咹哐哯唘唣唨㖘唿㖥㖿嗗㗅"],["8a40","𧶄唥"],["8a43","𠱂𠴕𥄫喐𢳆㧬𠍁蹆𤶸𩓥䁓𨂾睺𢰸㨴䟕𨅝𦧲𤷪擝𠵼𠾴𠳕𡃴撍蹾𠺖𠰋𠽤𢲩𨉖𤓓"],["8a64","𠵆𩩍𨃩䟴𤺧𢳂骲㩧𩗴㿭㔆𥋇𩟔𧣈𢵄鵮頕"],["8a76","䏙𦂥撴哣𢵌𢯊𡁷㧻𡁯"],["8aa1","𦛚𦜖𧦠擪𥁒𠱃蹨𢆡𨭌𠜱"],["8aac","䠋𠆩㿺塳𢶍"],["8ab2","𤗈𠓼𦂗𠽌𠶖啹䂻䎺"],["8abb","䪴𢩦𡂝膪飵𠶜捹㧾𢝵跀嚡摼㹃"],["8ac9","𪘁𠸉𢫏𢳉"],["8ace","𡃈𣧂㦒㨆𨊛㕸𥹉𢃇噒𠼱𢲲𩜠㒼氽𤸻"],["8adf","𧕴𢺋𢈈𪙛𨳍𠹺𠰴𦠜羓𡃏𢠃𢤹㗻𥇣𠺌𠾍𠺪㾓𠼰𠵇𡅏𠹌"],["8af6","𠺫𠮩𠵈𡃀𡄽㿹𢚖搲𠾭"],["8b40","𣏴𧘹𢯎𠵾𠵿𢱑𢱕㨘𠺘𡃇𠼮𪘲𦭐𨳒𨶙𨳊閪哌苄喹"],["8b55","𩻃鰦骶𧝞𢷮煀腭胬尜𦕲脴㞗卟𨂽醶𠻺𠸏𠹷𠻻㗝𤷫㘉𠳖嚯𢞵𡃉𠸐𠹸𡁸𡅈𨈇𡑕𠹹𤹐𢶤婔𡀝𡀞𡃵𡃶垜𠸑"],["8ba1","𧚔𨋍𠾵𠹻𥅾㜃𠾶𡆀𥋘𪊽𤧚𡠺𤅷𨉼墙剨㘚𥜽箲孨䠀䬬鼧䧧鰟鮍𥭴𣄽嗻㗲嚉丨夂𡯁屮靑𠂆乛亻㔾尣彑忄㣺扌攵歺氵氺灬爫丬犭𤣩罒礻糹罓𦉪㓁"],["8bde","𦍋耂肀𦘒𦥑卝衤见𧢲讠贝钅镸长门𨸏韦页风飞饣𩠐鱼鸟黄歯龜丷𠂇阝户钢"],["8c40","倻淾𩱳龦㷉袏𤅎灷峵䬠𥇍㕙𥴰愢𨨲辧釶熑朙玺𣊁𪄇㲋𡦀䬐磤琂冮𨜏䀉橣𪊺䈣蘏𠩯稪𩥇𨫪靕灍匤𢁾鏴盙𨧣龧矝亣俰傼丯众龨吴綋墒壐𡶶庒庙忂𢜒斋"],["8ca1","𣏹椙橃𣱣泿"],["8ca7","爀𤔅玌㻛𤨓嬕璹讃𥲤𥚕窓篬糃繬苸薗龩袐龪躹龫迏蕟駠鈡龬𨶹𡐿䁱䊢娚"],["8cc9","顨杫䉶圽"],["8cce","藖𤥻芿𧄍䲁𦵴嵻𦬕𦾾龭龮宖龯曧繛湗秊㶈䓃𣉖𢞖䎚䔶"],["8ce6","峕𣬚諹屸㴒𣕑嵸龲煗䕘𤃬𡸣䱷㥸㑊𠆤𦱁諌侴𠈹妿腬顖𩣺弻"],["8d40","𠮟"],["8d42","𢇁𨥭䄂䚻𩁹㼇龳𪆵䃸㟖䛷𦱆䅼𨚲𧏿䕭㣔𥒚䕡䔛䶉䱻䵶䗪㿈𤬏㙡䓞䒽䇭崾嵈嵖㷼㠏嶤嶹㠠㠸幂庽弥徃㤈㤔㤿㥍惗愽峥㦉憷憹懏㦸戬抐拥挘㧸嚱"],["8da1","㨃揢揻搇摚㩋擀崕嘡龟㪗斆㪽旿晓㫲暒㬢朖㭂枤栀㭘桊梄㭲㭱㭻椉楃牜楤榟榅㮼槖㯝橥橴橱檂㯬檙㯲檫檵櫔櫶殁毁毪汵沪㳋洂洆洦涁㳯涤涱渕渘温溆𨧀溻滢滚齿滨滩漤漴㵆𣽁澁澾㵪㵵熷岙㶊瀬㶑灐灔灯灿炉𠌥䏁㗱𠻘"],["8e40","𣻗垾𦻓焾𥟠㙎榢𨯩孴穉𥣡𩓙穥穽𥦬窻窰竂竃燑𦒍䇊竚竝竪䇯咲𥰁笋筕笩𥌎𥳾箢筯莜𥮴𦱿篐萡箒箸𥴠㶭𥱥蒒篺簆簵𥳁籄粃𤢂粦晽𤕸糉糇糦籴糳糵糎"],["8ea1","繧䔝𦹄絝𦻖璍綉綫焵綳緒𤁗𦀩緤㴓緵𡟹緥𨍭縝𦄡𦅚繮纒䌫鑬縧罀罁罇礶𦋐駡羗𦍑羣𡙡𠁨䕜𣝦䔃𨌺翺𦒉者耈耝耨耯𪂇𦳃耻耼聡𢜔䦉𦘦𣷣𦛨朥肧𨩈脇脚墰𢛶汿𦒘𤾸擧𡒊舘𡡞橓𤩥𤪕䑺舩𠬍𦩒𣵾俹𡓽蓢荢𦬊𤦧𣔰𡝳𣷸芪椛芳䇛"],["8f40","蕋苐茚𠸖𡞴㛁𣅽𣕚艻苢茘𣺋𦶣𦬅𦮗𣗎㶿茝嗬莅䔋𦶥莬菁菓㑾𦻔橗蕚㒖𦹂𢻯葘𥯤葱㷓䓤檧葊𣲵祘蒨𦮖𦹷𦹃蓞萏莑䒠蒓蓤𥲑䉀𥳀䕃蔴嫲𦺙䔧蕳䔖枿蘖"],["8fa1","𨘥𨘻藁𧂈蘂𡖂𧃍䕫䕪蘨㙈𡢢号𧎚虾蝱𪃸蟮𢰧螱蟚蠏噡虬桖䘏衅衆𧗠𣶹𧗤衞袜䙛袴袵揁装睷𧜏覇覊覦覩覧覼𨨥觧𧤤𧪽誜瞓釾誐𧩙竩𧬺𣾏䜓𧬸煼謌謟𥐰𥕥謿譌譍誩𤩺讐讛誯𡛟䘕衏貛𧵔𧶏貫㜥𧵓賖𧶘𧶽贒贃𡤐賛灜贑𤳉㻐起"],["9040","趩𨀂𡀔𤦊㭼𨆼𧄌竧躭躶軃鋔輙輭𨍥𨐒辥錃𪊟𠩐辳䤪𨧞𨔽𣶻廸𣉢迹𪀔𨚼𨔁𢌥㦀𦻗逷𨔼𧪾遡𨕬𨘋邨𨜓郄𨛦邮都酧㫰醩釄粬𨤳𡺉鈎沟鉁鉢𥖹銹𨫆𣲛𨬌𥗛"],["90a1","𠴱錬鍫𨫡𨯫炏嫃𨫢𨫥䥥鉄𨯬𨰹𨯿鍳鑛躼閅閦鐦閠濶䊹𢙺𨛘𡉼𣸮䧟氜陻隖䅬隣𦻕懚隶磵𨫠隽双䦡𦲸𠉴𦐐𩂯𩃥𤫑𡤕𣌊霱虂霶䨏䔽䖅𤫩灵孁霛靜𩇕靗孊𩇫靟鐥僐𣂷𣂼鞉鞟鞱鞾韀韒韠𥑬韮琜𩐳響韵𩐝𧥺䫑頴頳顋顦㬎𧅵㵑𠘰𤅜"],["9140","𥜆飊颷飈飇䫿𦴧𡛓喰飡飦飬鍸餹𤨩䭲𩡗𩤅駵騌騻騐驘𥜥㛄𩂱𩯕髠髢𩬅髴䰎鬔鬭𨘀倴鬴𦦨㣃𣁽魐魀𩴾婅𡡣鮎𤉋鰂鯿鰌𩹨鷔𩾷𪆒𪆫𪃡𪄣𪇟鵾鶃𪄴鸎梈"],["91a1","鷄𢅛𪆓𪈠𡤻𪈳鴹𪂹𪊴麐麕麞麢䴴麪麯𤍤黁㭠㧥㴝伲㞾𨰫鼂鼈䮖鐤𦶢鼗鼖鼹嚟嚊齅馸𩂋韲葿齢齩竜龎爖䮾𤥵𤦻煷𤧸𤍈𤩑玞𨯚𡣺禟𨥾𨸶鍩鏳𨩄鋬鎁鏋𨥬𤒹爗㻫睲穃烐𤑳𤏸煾𡟯炣𡢾𣖙㻇𡢅𥐯𡟸㜢𡛻𡠹㛡𡝴𡣑𥽋㜣𡛀坛𤨥𡏾𡊨"],["9240","𡏆𡒶蔃𣚦蔃葕𤦔𧅥𣸱𥕜𣻻𧁒䓴𣛮𩦝𦼦柹㜳㰕㷧塬𡤢栐䁗𣜿𤃡𤂋𤄏𦰡哋嚞𦚱嚒𠿟𠮨𠸍鏆𨬓鎜仸儫㠙𤐶亼𠑥𠍿佋侊𥙑婨𠆫𠏋㦙𠌊𠐔㐵伩𠋀𨺳𠉵諚𠈌亘"],["92a1","働儍侢伃𤨎𣺊佂倮偬傁俌俥偘僼兙兛兝兞湶𣖕𣸹𣺿浲𡢄𣺉冨凃𠗠䓝𠒣𠒒𠒑赺𨪜𠜎剙劤𠡳勡鍮䙺熌𤎌𠰠𤦬𡃤槑𠸝瑹㻞璙琔瑖玘䮎𤪼𤂍叐㖄爏𤃉喴𠍅响𠯆圝鉝雴鍦埝垍坿㘾壋媙𨩆𡛺𡝯𡜐娬妸銏婾嫏娒𥥆𡧳𡡡𤊕㛵洅瑃娡𥺃"],["9340","媁𨯗𠐓鏠璌𡌃焅䥲鐈𨧻鎽㞠尞岞幞幈𡦖𡥼𣫮廍孏𡤃𡤄㜁𡢠㛝𡛾㛓脪𨩇𡶺𣑲𨦨弌弎𡤧𡞫婫𡜻孄蘔𧗽衠恾𢡠𢘫忛㺸𢖯𢖾𩂈𦽳懀𠀾𠁆𢘛憙憘恵𢲛𢴇𤛔𩅍"],["93a1","摱𤙥𢭪㨩𢬢𣑐𩣪𢹸挷𪑛撶挱揑𤧣𢵧护𢲡搻敫楲㯴𣂎𣊭𤦉𣊫唍𣋠𡣙𩐿曎𣊉𣆳㫠䆐𥖄𨬢𥖏𡛼𥕛𥐥磮𣄃𡠪𣈴㑤𣈏𣆂𤋉暎𦴤晫䮓昰𧡰𡷫晣𣋒𣋡昞𥡲㣑𣠺𣞼㮙𣞢𣏾瓐㮖枏𤘪梶栞㯄檾㡣𣟕𤒇樳橒櫉欅𡤒攑梘橌㯗橺歗𣿀𣲚鎠鋲𨯪𨫋"],["9440","銉𨀞𨧜鑧涥漋𤧬浧𣽿㶏渄𤀼娽渊塇洤硂焻𤌚𤉶烱牐犇犔𤞏𤜥兹𤪤𠗫瑺𣻸𣙟𤩊𤤗𥿡㼆㺱𤫟𨰣𣼵悧㻳瓌琼鎇琷䒟𦷪䕑疃㽣𤳙𤴆㽘畕癳𪗆㬙瑨𨫌𤦫𤦎㫻"],["94a1","㷍𤩎㻿𤧅𤣳釺圲鍂𨫣𡡤僟𥈡𥇧睸𣈲眎眏睻𤚗𣞁㩞𤣰琸璛㺿𤪺𤫇䃈𤪖𦆮錇𥖁砞碍碈磒珐祙𧝁𥛣䄎禛蒖禥樭𣻺稺秴䅮𡛦䄲鈵秱𠵌𤦌𠊙𣶺𡝮㖗啫㕰㚪𠇔𠰍竢婙𢛵𥪯𥪜娍𠉛磰娪𥯆竾䇹籝籭䈑𥮳𥺼𥺦糍𤧹𡞰粎籼粮檲緜縇緓罎𦉡"],["9540","𦅜𧭈綗𥺂䉪𦭵𠤖柖𠁎𣗏埄𦐒𦏸𤥢翝笧𠠬𥫩𥵃笌𥸎駦虅驣樜𣐿㧢𤧷𦖭騟𦖠蒀𧄧𦳑䓪脷䐂胆脉腂𦞴飃𦩂艢艥𦩑葓𦶧蘐𧈛媆䅿𡡀嬫𡢡嫤𡣘蚠蜨𣶏蠭𧐢娂"],["95a1","衮佅袇袿裦襥襍𥚃襔𧞅𧞄𨯵𨯙𨮜𨧹㺭蒣䛵䛏㟲訽訜𩑈彍鈫𤊄旔焩烄𡡅鵭貟賩𧷜妚矃姰䍮㛔踪躧𤰉輰轊䋴汘澻𢌡䢛潹溋𡟚鯩㚵𤤯邻邗啱䤆醻鐄𨩋䁢𨫼鐧𨰝𨰻蓥訫閙閧閗閖𨴴瑅㻂𤣿𤩂𤏪㻧𣈥随𨻧𨹦𨹥㻌𤧭𤩸𣿮琒瑫㻼靁𩂰"],["9640","桇䨝𩂓𥟟靝鍨𨦉𨰦𨬯𦎾銺嬑譩䤼珹𤈛鞛靱餸𠼦巁𨯅𤪲頟𩓚鋶𩗗釥䓀𨭐𤩧𨭤飜𨩅㼀鈪䤥萔餻饍𧬆㷽馛䭯馪驜𨭥𥣈檏騡嫾騯𩣱䮐𩥈馼䮽䮗鍽塲𡌂堢𤦸"],["96a1","𡓨硄𢜟𣶸棅㵽鑘㤧慐𢞁𢥫愇鱏鱓鱻鰵鰐魿鯏𩸭鮟𪇵𪃾鴡䲮𤄄鸘䲰鴌𪆴𪃭𪃳𩤯鶥蒽𦸒𦿟𦮂藼䔳𦶤𦺄𦷰萠藮𦸀𣟗𦁤秢𣖜𣙀䤭𤧞㵢鏛銾鍈𠊿碹鉷鑍俤㑀遤𥕝砽硔碶硋𡝗𣇉𤥁㚚佲濚濙瀞瀞吔𤆵垻壳垊鴖埗焴㒯𤆬燫𦱀𤾗嬨𡞵𨩉"],["9740","愌嫎娋䊼𤒈㜬䭻𨧼鎻鎸𡣖𠼝葲𦳀𡐓𤋺𢰦𤏁妔𣶷𦝁綨𦅛𦂤𤦹𤦋𨧺鋥珢㻩璴𨭣𡢟㻡𤪳櫘珳珻㻖𤨾𤪔𡟙𤩦𠎧𡐤𤧥瑈𤤖炥𤥶銄珦鍟𠓾錱𨫎𨨖鎆𨯧𥗕䤵𨪂煫"],["97a1","𤥃𠳿嚤𠘚𠯫𠲸唂秄𡟺緾𡛂𤩐𡡒䔮鐁㜊𨫀𤦭妰𡢿𡢃𧒄媡㛢𣵛㚰鉟婹𨪁𡡢鍴㳍𠪴䪖㦊僴㵩㵌𡎜煵䋻𨈘渏𩃤䓫浗𧹏灧沯㳖𣿭𣸭渂漌㵯𠏵畑㚼㓈䚀㻚䡱姄鉮䤾轁𨰜𦯀堒埈㛖𡑒烾𤍢𤩱𢿣𡊰𢎽梹楧𡎘𣓥𧯴𣛟𨪃𣟖𣏺𤲟樚𣚭𦲷萾䓟䓎"],["9840","𦴦𦵑𦲂𦿞漗𧄉茽𡜺菭𦲀𧁓𡟛妉媂𡞳婡婱𡤅𤇼㜭姯𡜼㛇熎鎐暚𤊥婮娫𤊓樫𣻹𧜶𤑛𤋊焝𤉙𨧡侰𦴨峂𤓎𧹍𤎽樌𤉖𡌄炦焳𤏩㶥泟勇𤩏繥姫崯㷳彜𤩝𡟟綤萦"],["98a1","咅𣫺𣌀𠈔坾𠣕𠘙㿥𡾞𪊶瀃𩅛嵰玏糓𨩙𩐠俈翧狍猐𧫴猸猹𥛶獁獈㺩𧬘遬燵𤣲珡臶㻊県㻑沢国琙琞琟㻢㻰㻴㻺瓓㼎㽓畂畭畲疍㽼痈痜㿀癍㿗癴㿜発𤽜熈嘣覀塩䀝睃䀹条䁅㗛瞘䁪䁯属瞾矋売砘点砜䂨砹硇硑硦葈𥔵礳栃礲䄃"],["9940","䄉禑禙辻稆込䅧窑䆲窼艹䇄竏竛䇏両筢筬筻簒簛䉠䉺类粜䊌粸䊔糭输烀𠳏総緔緐緽羮羴犟䎗耠耥笹耮耱联㷌垴炠肷胩䏭脌猪脎脒畠脔䐁㬹腖腙腚"],["99a1","䐓堺腼膄䐥膓䐭膥埯臁臤艔䒏芦艶苊苘苿䒰荗险榊萅烵葤惣蒈䔄蒾蓡蓸蔐蔸蕒䔻蕯蕰藠䕷虲蚒蚲蛯际螋䘆䘗袮裿褤襇覑𧥧訩訸誔誴豑賔賲贜䞘塟跃䟭仮踺嗘坔蹱嗵躰䠷軎転軤軭軲辷迁迊迌逳駄䢭飠鈓䤞鈨鉘鉫銱銮銿"],["9a40","鋣鋫鋳鋴鋽鍃鎄鎭䥅䥑麿鐗匁鐝鐭鐾䥪鑔鑹锭関䦧间阳䧥枠䨤靀䨵鞲韂噔䫤惨颹䬙飱塄餎餙冴餜餷饂饝饢䭰駅䮝騼鬏窃魩鮁鯝鯱鯴䱭鰠㝯𡯂鵉鰺"],["9aa1","黾噐鶓鶽鷀鷼银辶鹻麬麱麽黆铜黢黱黸竈齄𠂔𠊷𠎠椚铃妬𠓗塀铁㞹𠗕𠘕𠙶𡚺块煳𠫂𠫍𠮿呪吆𠯋咞𠯻𠰻𠱓𠱥𠱼惧𠲍噺𠲵𠳝𠳭𠵯𠶲𠷈楕鰯螥𠸄𠸎𠻗𠾐𠼭𠹳尠𠾼帋𡁜𡁏𡁶朞𡁻𡂈𡂖㙇𡂿𡃓𡄯𡄻卤蒭𡋣𡍵𡌶讁𡕷𡘙𡟃𡟇乸炻𡠭𡥪"],["9b40","𡨭𡩅𡰪𡱰𡲬𡻈拃𡻕𡼕熘桕𢁅槩㛈𢉼𢏗𢏺𢜪𢡱𢥏苽𢥧𢦓𢫕覥𢫨辠𢬎鞸𢬿顇骽𢱌"],["9b62","𢲈𢲷𥯨𢴈𢴒𢶷𢶕𢹂𢽴𢿌𣀳𣁦𣌟𣏞徱晈暿𧩹𣕧𣗳爁𤦺矗𣘚𣜖纇𠍆墵朎"],["9ba1","椘𣪧𧙗𥿢𣸑𣺹𧗾𢂚䣐䪸𤄙𨪚𤋮𤌍𤀻𤌴𤎖𤩅𠗊凒𠘑妟𡺨㮾𣳿𤐄𤓖垈𤙴㦛𤜯𨗨𩧉㝢𢇃譞𨭎駖𤠒𤣻𤨕爉𤫀𠱸奥𤺥𤾆𠝹軚𥀬劏圿煱𥊙𥐙𣽊𤪧喼𥑆𥑮𦭒釔㑳𥔿𧘲𥕞䜘𥕢𥕦𥟇𤤿𥡝偦㓻𣏌惞𥤃䝼𨥈𥪮𥮉𥰆𡶐垡煑澶𦄂𧰒遖𦆲𤾚譢𦐂𦑊"],["9c40","嵛𦯷輶𦒄𡤜諪𤧶𦒈𣿯𦔒䯀𦖿𦚵𢜛鑥𥟡憕娧晉侻嚹𤔡𦛼乪𤤴陖涏𦲽㘘襷𦞙𦡮𦐑𦡞營𦣇筂𩃀𠨑𦤦鄄𦤹穅鷰𦧺騦𦨭㙟𦑩𠀡禃𦨴𦭛崬𣔙菏𦮝䛐𦲤画补𦶮墶"],["9ca1","㜜𢖍𧁋𧇍㱔𧊀𧊅銁𢅺𧊋錰𧋦𤧐氹钟𧑐𠻸蠧裵𢤦𨑳𡞱溸𤨪𡠠㦤㚹尐秣䔿暶𩲭𩢤襃𧟌𧡘囖䃟𡘊㦡𣜯𨃨𡏅熭荦𧧝𩆨婧䲷𧂯𨦫𧧽𧨊𧬋𧵦𤅺筃祾𨀉澵𪋟樃𨌘厢𦸇鎿栶靝𨅯𨀣𦦵𡏭𣈯𨁈嶅𨰰𨂃圕頣𨥉嶫𤦈斾槕叒𤪥𣾁㰑朶𨂐𨃴𨄮𡾡𨅏"],["9d40","𨆉𨆯𨈚𨌆𨌯𨎊㗊𨑨𨚪䣺揦𨥖砈鉕𨦸䏲𨧧䏟𨧨𨭆𨯔姸𨰉輋𨿅𩃬筑𩄐𩄼㷷𩅞𤫊运犏嚋𩓧𩗩𩖰𩖸𩜲𩣑𩥉𩥪𩧃𩨨𩬎𩵚𩶛纟𩻸𩼣䲤镇𪊓熢𪋿䶑递𪗋䶜𠲜达嗁"],["9da1","辺𢒰边𤪓䔉繿潖檱仪㓤𨬬𧢝㜺躀𡟵𨀤𨭬𨮙𧨾𦚯㷫𧙕𣲷𥘵𥥖亚𥺁𦉘嚿𠹭踎孭𣺈𤲞揞拐𡟶𡡻攰嘭𥱊吚𥌑㷆𩶘䱽嘢嘞罉𥻘奵𣵀蝰东𠿪𠵉𣚺脗鵞贘瘻鱅癎瞹鍅吲腈苷嘥脲萘肽嗪祢噃吖𠺝㗎嘅嗱曱𨋢㘭甴嗰喺咗啲𠱁𠲖廐𥅈𠹶𢱢"],["9e40","𠺢麫絚嗞𡁵抝靭咔賍燶酶揼掹揾啩𢭃鱲𢺳冚㓟𠶧冧呍唞唓癦踭𦢊疱肶蠄螆裇膶萜𡃁䓬猄𤜆宐茋𦢓噻𢛴𧴯𤆣𧵳𦻐𧊶酰𡇙鈈𣳼𪚩𠺬𠻹牦𡲢䝎𤿂𧿹𠿫䃺"],["9ea1","鱝攟𢶠䣳𤟠𩵼𠿬𠸊恢𧖣𠿭"],["9ead","𦁈𡆇熣纎鵐业丄㕷嬍沲卧㚬㧜卽㚥𤘘墚𤭮舭呋垪𥪕𠥹"],["9ec5","㩒𢑥獴𩺬䴉鯭𣳾𩼰䱛𤾩𩖞𩿞葜𣶶𧊲𦞳𣜠挮紥𣻷𣸬㨪逈勌㹴㙺䗩𠒎癀嫰𠺶硺𧼮墧䂿噼鮋嵴癔𪐴麅䳡痹㟻愙𣃚𤏲"],["9ef5","噝𡊩垧𤥣𩸆刴𧂮㖭汊鵼"],["9f40","籖鬹埞𡝬屓擓𩓐𦌵𧅤蚭𠴨𦴢𤫢𠵱"],["9f4f","凾𡼏嶎霃𡷑麁遌笟鬂峑箣扨挵髿篏鬪籾鬮籂粆鰕篼鬉鼗鰛𤤾齚啳寃俽麘俲剠㸆勑坧偖妷帒韈鶫轜呩鞴饀鞺匬愰"],["9fa1","椬叚鰊鴂䰻陁榀傦畆𡝭駚剳"],["9fae","酙隁酜"],["9fb2","酑𨺗捿𦴣櫊嘑醎畺抅𠏼獏籰𥰡𣳽"],["9fc1","𤤙盖鮝个𠳔莾衂"],["9fc9","届槀僭坺刟巵从氱𠇲伹咜哚劚趂㗾弌㗳"],["9fdb","歒酼龥鮗頮颴骺麨麄煺笔"],["9fe7","毺蠘罸"],["9feb","嘠𪙊蹷齓"],["9ff0","跔蹏鸜踁抂𨍽踨蹵竓𤩷稾磘泪詧瘇"],["a040","𨩚鼦泎蟖痃𪊲硓咢贌狢獱謭猂瓱賫𤪻蘯徺袠䒷"],["a055","𡠻𦸅"],["a058","詾𢔛"],["a05b","惽癧髗鵄鍮鮏蟵"],["a063","蠏賷猬霡鮰㗖犲䰇籑饊𦅙慙䰄麖慽"],["a073","坟慯抦戹拎㩜懢厪𣏵捤栂㗒"],["a0a1","嵗𨯂迚𨸹"],["a0a6","僙𡵆礆匲阸𠼻䁥"],["a0ae","矾"],["a0b0","糂𥼚糚稭聦聣絍甅瓲覔舚朌聢𧒆聛瓰脃眤覉𦟌畓𦻑螩蟎臈螌詉貭譃眫瓸蓚㘵榲趦"],["a0d4","覩瑨涹蟁𤀑瓧㷛煶悤憜㳑煢恷"],["a0e2","罱𨬭牐惩䭾删㰘𣳇𥻗𧙖𥔱𡥄𡋾𩤃𦷜𧂭峁𦆭𨨏𣙷𠃮𦡆𤼎䕢嬟𦍌齐麦𦉫"],["a3c0","␀",31,"␡"],["c6a1","①",9,"⑴",9,"ⅰ",9,"丶丿亅亠冂冖冫勹匸卩厶夊宀巛⼳广廴彐彡攴无疒癶辵隶¨ˆヽヾゝゞ〃仝々〆〇ー［］✽ぁ",23],["c740","す",58,"ァアィイ"],["c7a1","ゥ",81,"А",5,"ЁЖ",4],["c840","Л",26,"ёж",25,"⇧↸↹㇏𠃌乚𠂊刂䒑"],["c8a1","龰冈龱𧘇"],["c8cd","￢￤＇＂㈱№℡゛゜⺀⺄⺆⺇⺈⺊⺌⺍⺕⺜⺝⺥⺧⺪⺬⺮⺶⺼⺾⻆⻊⻌⻍⻏⻖⻗⻞⻣"],["c8f5","ʃɐɛɔɵœøŋʊɪ"],["f9fe","￭"],["fa40","𠕇鋛𠗟𣿅蕌䊵珯况㙉𤥂𨧤鍄𡧛苮𣳈砼杄拟𤤳𨦪𠊠𦮳𡌅侫𢓭倈𦴩𧪄𣘀𤪱𢔓倩𠍾徤𠎀𠍇滛𠐟偽儁㑺儎顬㝃萖𤦤𠒇兠𣎴兪𠯿𢃼𠋥𢔰𠖎𣈳𡦃宂蝽𠖳𣲙冲冸"],["faa1","鴴凉减凑㳜凓𤪦决凢卂凭菍椾𣜭彻刋刦刼劵剗劔効勅簕蕂勠蘍𦬓包𨫞啉滙𣾀𠥔𣿬匳卄𠯢泋𡜦栛珕恊㺪㣌𡛨燝䒢卭却𨚫卾卿𡖖𡘓矦厓𨪛厠厫厮玧𥝲㽙玜叁叅汉义埾叙㪫𠮏叠𣿫𢶣叶𠱷吓灹唫晗浛呭𦭓𠵴啝咏咤䞦𡜍𠻝㶴𠵍"],["fb40","𨦼𢚘啇䳭启琗喆喩嘅𡣗𤀺䕒𤐵暳𡂴嘷曍𣊊暤暭噍噏磱囱鞇叾圀囯园𨭦㘣𡉏坆𤆥汮炋坂㚱𦱾埦𡐖堃𡑔𤍣堦𤯵塜墪㕡壠壜𡈼壻寿坃𪅐𤉸鏓㖡够梦㛃湙"],["fba1","𡘾娤啓𡚒蔅姉𠵎𦲁𦴪𡟜姙𡟻𡞲𦶦浱𡠨𡛕姹𦹅媫婣㛦𤦩婷㜈媖瑥嫓𦾡𢕔㶅𡤑㜲𡚸広勐孶斈孼𧨎䀄䡝𠈄寕慠𡨴𥧌𠖥寳宝䴐尅𡭄尓珎尔𡲥𦬨屉䣝岅峩峯嶋𡷹𡸷崐崘嵆𡺤岺巗苼㠭𤤁𢁉𢅳芇㠶㯂帮檊幵幺𤒼𠳓厦亷廐厨𡝱帉廴𨒂"],["fc40","廹廻㢠廼栾鐛弍𠇁弢㫞䢮𡌺强𦢈𢏐彘𢑱彣鞽𦹮彲鍀𨨶徧嶶㵟𥉐𡽪𧃸𢙨釖𠊞𨨩怱暅𡡷㥣㷇㘹垐𢞴祱㹀悞悤悳𤦂𤦏𧩓璤僡媠慤萤慂慈𦻒憁凴𠙖憇宪𣾷"],["fca1","𢡟懓𨮝𩥝懐㤲𢦀𢣁怣慜攞掋𠄘担𡝰拕𢸍捬𤧟㨗搸揸𡎎𡟼撐澊𢸶頔𤂌𥜝擡擥鑻㩦携㩗敍漖𤨨𤨣斅敭敟𣁾斵𤥀䬷旑䃘𡠩无旣忟𣐀昘𣇷𣇸晄𣆤𣆥晋𠹵晧𥇦晳晴𡸽𣈱𨗴𣇈𥌓矅𢣷馤朂𤎜𤨡㬫槺𣟂杞杧杢𤇍𩃭柗䓩栢湐鈼栁𣏦𦶠桝"],["fd40","𣑯槡樋𨫟楳棃𣗍椁椀㴲㨁𣘼㮀枬楡𨩊䋼椶榘㮡𠏉荣傐槹𣙙𢄪橅𣜃檝㯳枱櫈𩆜㰍欝𠤣惞欵歴𢟍溵𣫛𠎵𡥘㝀吡𣭚毡𣻼毜氷𢒋𤣱𦭑汚舦汹𣶼䓅𣶽𤆤𤤌𤤀"],["fda1","𣳉㛥㳫𠴲鮃𣇹𢒑羏样𦴥𦶡𦷫涖浜湼漄𤥿𤂅𦹲蔳𦽴凇沜渝萮𨬡港𣸯瑓𣾂秌湏媑𣁋濸㜍澝𣸰滺𡒗𤀽䕕鏰潄潜㵎潴𩅰㴻澟𤅄濓𤂑𤅕𤀹𣿰𣾴𤄿凟𤅖𤅗𤅀𦇝灋灾炧炁烌烕烖烟䄄㷨熴熖𤉷焫煅媈煊煮岜𤍥煏鍢𤋁焬𤑚𤨧𤨢熺𨯨炽爎"],["fe40","鑂爕夑鑃爤鍁𥘅爮牀𤥴梽牕牗㹕𣁄栍漽犂猪猫𤠣𨠫䣭𨠄猨献珏玪𠰺𦨮珉瑉𤇢𡛧𤨤昣㛅𤦷𤦍𤧻珷琕椃𤨦琹𠗃㻗瑜𢢭瑠𨺲瑇珤瑶莹瑬㜰瑴鏱樬璂䥓𤪌"],["fea1","𤅟𤩹𨮏孆𨰃𡢞瓈𡦈甎瓩甞𨻙𡩋寗𨺬鎅畍畊畧畮𤾂㼄𤴓疎瑝疞疴瘂瘬癑癏癯癶𦏵皐臯㟸𦤑𦤎皡皥皷盌𦾟葢𥂝𥅽𡸜眞眦着撯𥈠睘𣊬瞯𨥤𨥨𡛁矴砉𡍶𤨒棊碯磇磓隥礮𥗠磗礴碱𧘌辸袄𨬫𦂃𢘜禆褀椂禀𥡗禝𧬹礼禩渪𧄦㺨秆𩄍秔"]]')},488:e=>{"use strict";e.exports=JSON.parse('[["0","\\u0000",127,"€"],["8140","丂丄丅丆丏丒丗丟丠両丣並丩丮丯丱丳丵丷丼乀乁乂乄乆乊乑乕乗乚乛乢乣乤乥乧乨乪",5,"乲乴",9,"乿",6,"亇亊"],["8180","亐亖亗亙亜亝亞亣亪亯亰亱亴亶亷亸亹亼亽亾仈仌仏仐仒仚仛仜仠仢仦仧仩仭仮仯仱仴仸仹仺仼仾伀伂",6,"伋伌伒",4,"伜伝伡伣伨伩伬伭伮伱伳伵伷伹伻伾",4,"佄佅佇",5,"佒佔佖佡佢佦佨佪佫佭佮佱佲併佷佸佹佺佽侀侁侂侅來侇侊侌侎侐侒侓侕侖侘侙侚侜侞侟価侢"],["8240","侤侫侭侰",4,"侶",8,"俀俁係俆俇俈俉俋俌俍俒",4,"俙俛俠俢俤俥俧俫俬俰俲俴俵俶俷俹俻俼俽俿",11],["8280","個倎倐們倓倕倖倗倛倝倞倠倢倣値倧倫倯",10,"倻倽倿偀偁偂偄偅偆偉偊偋偍偐",4,"偖偗偘偙偛偝",7,"偦",5,"偭",8,"偸偹偺偼偽傁傂傃傄傆傇傉傊傋傌傎",20,"傤傦傪傫傭",4,"傳",6,"傼"],["8340","傽",17,"僐",5,"僗僘僙僛",10,"僨僩僪僫僯僰僱僲僴僶",4,"僼",9,"儈"],["8380","儉儊儌",5,"儓",13,"儢",28,"兂兇兊兌兎兏児兒兓兗兘兙兛兝",4,"兣兤兦內兩兪兯兲兺兾兿冃冄円冇冊冋冎冏冐冑冓冔冘冚冝冞冟冡冣冦",4,"冭冮冴冸冹冺冾冿凁凂凃凅凈凊凍凎凐凒",5],["8440","凘凙凚凜凞凟凢凣凥",5,"凬凮凱凲凴凷凾刄刅刉刋刌刏刐刓刔刕刜刞刟刡刢刣別刦刧刪刬刯刱刲刴刵刼刾剄",5,"剋剎剏剒剓剕剗剘"],["8480","剙剚剛剝剟剠剢剣剤剦剨剫剬剭剮剰剱剳",9,"剾劀劃",4,"劉",6,"劑劒劔",6,"劜劤劥劦劧劮劯劰労",9,"勀勁勂勄勅勆勈勊勌勍勎勏勑勓勔動勗務",5,"勠勡勢勣勥",10,"勱",7,"勻勼勽匁匂匃匄匇匉匊匋匌匎"],["8540","匑匒匓匔匘匛匜匞匟匢匤匥匧匨匩匫匬匭匯",9,"匼匽區卂卄卆卋卌卍卐協単卙卛卝卥卨卪卬卭卲卶卹卻卼卽卾厀厁厃厇厈厊厎厏"],["8580","厐",4,"厖厗厙厛厜厞厠厡厤厧厪厫厬厭厯",6,"厷厸厹厺厼厽厾叀參",4,"収叏叐叒叓叕叚叜叝叞叡叢叧叴叺叾叿吀吂吅吇吋吔吘吙吚吜吢吤吥吪吰吳吶吷吺吽吿呁呂呄呅呇呉呌呍呎呏呑呚呝",4,"呣呥呧呩",7,"呴呹呺呾呿咁咃咅咇咈咉咊咍咑咓咗咘咜咞咟咠咡"],["8640","咢咥咮咰咲咵咶咷咹咺咼咾哃哅哊哋哖哘哛哠",4,"哫哬哯哰哱哴",5,"哻哾唀唂唃唄唅唈唊",4,"唒唓唕",5,"唜唝唞唟唡唥唦"],["8680","唨唩唫唭唲唴唵唶唸唹唺唻唽啀啂啅啇啈啋",4,"啑啒啓啔啗",4,"啝啞啟啠啢啣啨啩啫啯",5,"啹啺啽啿喅喆喌喍喎喐喒喓喕喖喗喚喛喞喠",6,"喨",8,"喲喴営喸喺喼喿",4,"嗆嗇嗈嗊嗋嗎嗏嗐嗕嗗",4,"嗞嗠嗢嗧嗩嗭嗮嗰嗱嗴嗶嗸",4,"嗿嘂嘃嘄嘅"],["8740","嘆嘇嘊嘋嘍嘐",7,"嘙嘚嘜嘝嘠嘡嘢嘥嘦嘨嘩嘪嘫嘮嘯嘰嘳嘵嘷嘸嘺嘼嘽嘾噀",11,"噏",4,"噕噖噚噛噝",4],["8780","噣噥噦噧噭噮噯噰噲噳噴噵噷噸噹噺噽",7,"嚇",6,"嚐嚑嚒嚔",14,"嚤",10,"嚰",6,"嚸嚹嚺嚻嚽",12,"囋",8,"囕囖囘囙囜団囥",5,"囬囮囯囲図囶囷囸囻囼圀圁圂圅圇國",6],["8840","園",9,"圝圞圠圡圢圤圥圦圧圫圱圲圴",4,"圼圽圿坁坃坄坅坆坈坉坋坒",4,"坘坙坢坣坥坧坬坮坰坱坲坴坵坸坹坺坽坾坿垀"],["8880","垁垇垈垉垊垍",4,"垔",6,"垜垝垞垟垥垨垪垬垯垰垱垳垵垶垷垹",8,"埄",6,"埌埍埐埑埓埖埗埛埜埞埡埢埣埥",7,"埮埰埱埲埳埵埶執埻埼埾埿堁堃堄堅堈堉堊堌堎堏堐堒堓堔堖堗堘堚堛堜堝堟堢堣堥",4,"堫",4,"報堲堳場堶",7],["8940","堾",5,"塅",6,"塎塏塐塒塓塕塖塗塙",4,"塟",5,"塦",4,"塭",16,"塿墂墄墆墇墈墊墋墌"],["8980","墍",4,"墔",4,"墛墜墝墠",7,"墪",17,"墽墾墿壀壂壃壄壆",10,"壒壓壔壖",13,"壥",5,"壭壯壱売壴壵壷壸壺",7,"夃夅夆夈",4,"夎夐夑夒夓夗夘夛夝夞夠夡夢夣夦夨夬夰夲夳夵夶夻"],["8a40","夽夾夿奀奃奅奆奊奌奍奐奒奓奙奛",4,"奡奣奤奦",12,"奵奷奺奻奼奾奿妀妅妉妋妌妎妏妐妑妔妕妘妚妛妜妝妟妠妡妢妦"],["8a80","妧妬妭妰妱妳",5,"妺妼妽妿",6,"姇姈姉姌姍姎姏姕姖姙姛姞",4,"姤姦姧姩姪姫姭",11,"姺姼姽姾娀娂娊娋娍娎娏娐娒娔娕娖娗娙娚娛娝娞娡娢娤娦娧娨娪",6,"娳娵娷",4,"娽娾娿婁",4,"婇婈婋",9,"婖婗婘婙婛",5],["8b40","婡婣婤婥婦婨婩婫",8,"婸婹婻婼婽婾媀",17,"媓",6,"媜",13,"媫媬"],["8b80","媭",4,"媴媶媷媹",4,"媿嫀嫃",5,"嫊嫋嫍",4,"嫓嫕嫗嫙嫚嫛嫝嫞嫟嫢嫤嫥嫧嫨嫪嫬",4,"嫲",22,"嬊",11,"嬘",25,"嬳嬵嬶嬸",7,"孁",6],["8c40","孈",7,"孒孖孞孠孡孧孨孫孭孮孯孲孴孶孷學孹孻孼孾孿宂宆宊宍宎宐宑宒宔宖実宧宨宩宬宭宮宯宱宲宷宺宻宼寀寁寃寈寉寊寋寍寎寏"],["8c80","寑寔",8,"寠寢寣實寧審",4,"寯寱",6,"寽対尀専尃尅將專尋尌對導尐尒尓尗尙尛尞尟尠尡尣尦尨尩尪尫尭尮尯尰尲尳尵尶尷屃屄屆屇屌屍屒屓屔屖屗屘屚屛屜屝屟屢層屧",6,"屰屲",6,"屻屼屽屾岀岃",4,"岉岊岋岎岏岒岓岕岝",4,"岤",4],["8d40","岪岮岯岰岲岴岶岹岺岻岼岾峀峂峃峅",5,"峌",5,"峓",5,"峚",6,"峢峣峧峩峫峬峮峯峱",9,"峼",4],["8d80","崁崄崅崈",5,"崏",4,"崕崗崘崙崚崜崝崟",4,"崥崨崪崫崬崯",4,"崵",7,"崿",7,"嵈嵉嵍",10,"嵙嵚嵜嵞",10,"嵪嵭嵮嵰嵱嵲嵳嵵",12,"嶃",21,"嶚嶛嶜嶞嶟嶠"],["8e40","嶡",21,"嶸",12,"巆",6,"巎",12,"巜巟巠巣巤巪巬巭"],["8e80","巰巵巶巸",4,"巿帀帄帇帉帊帋帍帎帒帓帗帞",7,"帨",4,"帯帰帲",4,"帹帺帾帿幀幁幃幆",5,"幍",6,"幖",4,"幜幝幟幠幣",14,"幵幷幹幾庁庂広庅庈庉庌庍庎庒庘庛庝庡庢庣庤庨",4,"庮",4,"庴庺庻庼庽庿",6],["8f40","廆廇廈廋",5,"廔廕廗廘廙廚廜",11,"廩廫",8,"廵廸廹廻廼廽弅弆弇弉弌弍弎弐弒弔弖弙弚弜弝弞弡弢弣弤"],["8f80","弨弫弬弮弰弲",6,"弻弽弾弿彁",14,"彑彔彙彚彛彜彞彟彠彣彥彧彨彫彮彯彲彴彵彶彸彺彽彾彿徃徆徍徎徏徑従徔徖徚徛徝從徟徠徢",5,"復徫徬徯",5,"徶徸徹徺徻徾",4,"忇忈忊忋忎忓忔忕忚忛応忞忟忢忣忥忦忨忩忬忯忰忲忳忴忶忷忹忺忼怇"],["9040","怈怉怋怌怐怑怓怗怘怚怞怟怢怣怤怬怭怮怰",4,"怶",4,"怽怾恀恄",6,"恌恎恏恑恓恔恖恗恘恛恜恞恟恠恡恥恦恮恱恲恴恵恷恾悀"],["9080","悁悂悅悆悇悈悊悋悎悏悐悑悓悕悗悘悙悜悞悡悢悤悥悧悩悪悮悰悳悵悶悷悹悺悽",7,"惇惈惉惌",4,"惒惓惔惖惗惙惛惞惡",4,"惪惱惲惵惷惸惻",4,"愂愃愄愅愇愊愋愌愐",4,"愖愗愘愙愛愜愝愞愡愢愥愨愩愪愬",18,"慀",6],["9140","慇慉態慍慏慐慒慓慔慖",6,"慞慟慠慡慣慤慥慦慩",6,"慱慲慳慴慶慸",18,"憌憍憏",4,"憕"],["9180","憖",6,"憞",8,"憪憫憭",9,"憸",5,"憿懀懁懃",4,"應懌",4,"懓懕",16,"懧",13,"懶",8,"戀",5,"戇戉戓戔戙戜戝戞戠戣戦戧戨戩戫戭戯戰戱戲戵戶戸",4,"扂扄扅扆扊"],["9240","扏扐払扖扗扙扚扜",6,"扤扥扨扱扲扴扵扷扸扺扻扽抁抂抃抅抆抇抈抋",5,"抔抙抜抝択抣抦抧抩抪抭抮抯抰抲抳抴抶抷抸抺抾拀拁"],["9280","拃拋拏拑拕拝拞拠拡拤拪拫拰拲拵拸拹拺拻挀挃挄挅挆挊挋挌挍挏挐挒挓挔挕挗挘挙挜挦挧挩挬挭挮挰挱挳",5,"挻挼挾挿捀捁捄捇捈捊捑捒捓捔捖",7,"捠捤捥捦捨捪捫捬捯捰捲捳捴捵捸捹捼捽捾捿掁掃掄掅掆掋掍掑掓掔掕掗掙",6,"採掤掦掫掯掱掲掵掶掹掻掽掿揀"],["9340","揁揂揃揅揇揈揊揋揌揑揓揔揕揗",6,"揟揢揤",4,"揫揬揮揯揰揱揳揵揷揹揺揻揼揾搃搄搆",4,"損搎搑搒搕",5,"搝搟搢搣搤"],["9380","搥搧搨搩搫搮",5,"搵",4,"搻搼搾摀摂摃摉摋",6,"摓摕摖摗摙",4,"摟",7,"摨摪摫摬摮",9,"摻",6,"撃撆撈",8,"撓撔撗撘撚撛撜撝撟",4,"撥撦撧撨撪撫撯撱撲撳撴撶撹撻撽撾撿擁擃擄擆",6,"擏擑擓擔擕擖擙據"],["9440","擛擜擝擟擠擡擣擥擧",24,"攁",7,"攊",7,"攓",4,"攙",8],["9480","攢攣攤攦",4,"攬攭攰攱攲攳攷攺攼攽敀",4,"敆敇敊敋敍敎敐敒敓敔敗敘敚敜敟敠敡敤敥敧敨敩敪敭敮敯敱敳敵敶數",14,"斈斉斊斍斎斏斒斔斕斖斘斚斝斞斠斢斣斦斨斪斬斮斱",7,"斺斻斾斿旀旂旇旈旉旊旍旐旑旓旔旕旘",7,"旡旣旤旪旫"],["9540","旲旳旴旵旸旹旻",4,"昁昄昅昇昈昉昋昍昐昑昒昖昗昘昚昛昜昞昡昢昣昤昦昩昪昫昬昮昰昲昳昷",4,"昽昿晀時晄",6,"晍晎晐晑晘"],["9580","晙晛晜晝晞晠晢晣晥晧晩",4,"晱晲晳晵晸晹晻晼晽晿暀暁暃暅暆暈暉暊暋暍暎暏暐暒暓暔暕暘",4,"暞",8,"暩",4,"暯",4,"暵暶暷暸暺暻暼暽暿",25,"曚曞",7,"曧曨曪",5,"曱曵曶書曺曻曽朁朂會"],["9640","朄朅朆朇朌朎朏朑朒朓朖朘朙朚朜朞朠",5,"朧朩朮朰朲朳朶朷朸朹朻朼朾朿杁杄杅杇杊杋杍杒杔杕杗",4,"杝杢杣杤杦杧杫杬杮東杴杶"],["9680","杸杹杺杻杽枀枂枃枅枆枈枊枌枍枎枏枑枒枓枔枖枙枛枟枠枡枤枦枩枬枮枱枲枴枹",7,"柂柅",9,"柕柖柗柛柟柡柣柤柦柧柨柪柫柭柮柲柵",7,"柾栁栂栃栄栆栍栐栒栔栕栘",4,"栞栟栠栢",6,"栫",6,"栴栵栶栺栻栿桇桋桍桏桒桖",5],["9740","桜桝桞桟桪桬",7,"桵桸",8,"梂梄梇",7,"梐梑梒梔梕梖梘",9,"梣梤梥梩梪梫梬梮梱梲梴梶梷梸"],["9780","梹",6,"棁棃",5,"棊棌棎棏棐棑棓棔棖棗棙棛",4,"棡棢棤",9,"棯棲棳棴棶棷棸棻棽棾棿椀椂椃椄椆",4,"椌椏椑椓",11,"椡椢椣椥",7,"椮椯椱椲椳椵椶椷椸椺椻椼椾楀楁楃",16,"楕楖楘楙楛楜楟"],["9840","楡楢楤楥楧楨楩楪楬業楯楰楲",4,"楺楻楽楾楿榁榃榅榊榋榌榎",5,"榖榗榙榚榝",9,"榩榪榬榮榯榰榲榳榵榶榸榹榺榼榽"],["9880","榾榿槀槂",7,"構槍槏槑槒槓槕",5,"槜槝槞槡",11,"槮槯槰槱槳",9,"槾樀",9,"樋",11,"標",5,"樠樢",5,"権樫樬樭樮樰樲樳樴樶",6,"樿",4,"橅橆橈",7,"橑",6,"橚"],["9940","橜",4,"橢橣橤橦",10,"橲",6,"橺橻橽橾橿檁檂檃檅",8,"檏檒",4,"檘",7,"檡",5],["9980","檧檨檪檭",114,"欥欦欨",6],["9a40","欯欰欱欳欴欵欶欸欻欼欽欿歀歁歂歄歅歈歊歋歍",11,"歚",7,"歨歩歫",13,"歺歽歾歿殀殅殈"],["9a80","殌殎殏殐殑殔殕殗殘殙殜",4,"殢",7,"殫",7,"殶殸",6,"毀毃毄毆",4,"毌毎毐毑毘毚毜",4,"毢",7,"毬毭毮毰毱毲毴毶毷毸毺毻毼毾",6,"氈",4,"氎氒気氜氝氞氠氣氥氫氬氭氱氳氶氷氹氺氻氼氾氿汃汄汅汈汋",4,"汑汒汓汖汘"],["9b40","汙汚汢汣汥汦汧汫",4,"汱汳汵汷汸決汻汼汿沀沄沇沊沋沍沎沑沒沕沖沗沘沚沜沝沞沠沢沨沬沯沰沴沵沶沷沺泀況泂泃泆泇泈泋泍泎泏泑泒泘"],["9b80","泙泚泜泝泟泤泦泧泩泬泭泲泴泹泿洀洂洃洅洆洈洉洊洍洏洐洑洓洔洕洖洘洜洝洟",5,"洦洨洩洬洭洯洰洴洶洷洸洺洿浀浂浄浉浌浐浕浖浗浘浛浝浟浡浢浤浥浧浨浫浬浭浰浱浲浳浵浶浹浺浻浽",4,"涃涄涆涇涊涋涍涏涐涒涖",4,"涜涢涥涬涭涰涱涳涴涶涷涹",5,"淁淂淃淈淉淊"],["9c40","淍淎淏淐淒淓淔淕淗淚淛淜淟淢淣淥淧淨淩淪淭淯淰淲淴淵淶淸淺淽",7,"渆渇済渉渋渏渒渓渕渘渙減渜渞渟渢渦渧渨渪測渮渰渱渳渵"],["9c80","渶渷渹渻",7,"湅",7,"湏湐湑湒湕湗湙湚湜湝湞湠",10,"湬湭湯",14,"満溁溂溄溇溈溊",4,"溑",6,"溙溚溛溝溞溠溡溣溤溦溨溩溫溬溭溮溰溳溵溸溹溼溾溿滀滃滄滅滆滈滉滊滌滍滎滐滒滖滘滙滛滜滝滣滧滪",5],["9d40","滰滱滲滳滵滶滷滸滺",7,"漃漄漅漇漈漊",4,"漐漑漒漖",9,"漡漢漣漥漦漧漨漬漮漰漲漴漵漷",6,"漿潀潁潂"],["9d80","潃潄潅潈潉潊潌潎",9,"潙潚潛潝潟潠潡潣潤潥潧",5,"潯潰潱潳潵潶潷潹潻潽",6,"澅澆澇澊澋澏",12,"澝澞澟澠澢",4,"澨",10,"澴澵澷澸澺",5,"濁濃",5,"濊",6,"濓",10,"濟濢濣濤濥"],["9e40","濦",7,"濰",32,"瀒",7,"瀜",6,"瀤",6],["9e80","瀫",9,"瀶瀷瀸瀺",17,"灍灎灐",13,"灟",11,"灮灱灲灳灴灷灹灺灻災炁炂炃炄炆炇炈炋炌炍炏炐炑炓炗炘炚炛炞",12,"炰炲炴炵炶為炾炿烄烅烆烇烉烋",12,"烚"],["9f40","烜烝烞烠烡烢烣烥烪烮烰",6,"烸烺烻烼烾",10,"焋",4,"焑焒焔焗焛",10,"焧",7,"焲焳焴"],["9f80","焵焷",13,"煆煇煈煉煋煍煏",12,"煝煟",4,"煥煩",4,"煯煰煱煴煵煶煷煹煻煼煾",5,"熅",4,"熋熌熍熎熐熑熒熓熕熖熗熚",4,"熡",6,"熩熪熫熭",5,"熴熶熷熸熺",8,"燄",9,"燏",4],["a040","燖",9,"燡燢燣燤燦燨",5,"燯",9,"燺",11,"爇",19],["a080","爛爜爞",9,"爩爫爭爮爯爲爳爴爺爼爾牀",6,"牉牊牋牎牏牐牑牓牔牕牗牘牚牜牞牠牣牤牥牨牪牫牬牭牰牱牳牴牶牷牸牻牼牽犂犃犅",4,"犌犎犐犑犓",11,"犠",11,"犮犱犲犳犵犺",6,"狅狆狇狉狊狋狌狏狑狓狔狕狖狘狚狛"],["a1a1","　、。·ˉˇ¨〃々—～‖…‘’“”〔〕〈",7,"〖〗【】±×÷∶∧∨∑∏∪∩∈∷√⊥∥∠⌒⊙∫∮≡≌≈∽∝≠≮≯≤≥∞∵∴♂♀°′″℃＄¤￠￡‰§№☆★○●◎◇◆□■△▲※→←↑↓〓"],["a2a1","ⅰ",9],["a2b1","⒈",19,"⑴",19,"①",9],["a2e5","㈠",9],["a2f1","Ⅰ",11],["a3a1","！＂＃￥％",88,"￣"],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a6e0","︵︶︹︺︿﹀︽︾﹁﹂﹃﹄"],["a6ee","︻︼︷︸︱"],["a6f4","︳︴"],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a840","ˊˋ˙–―‥‵℅℉↖↗↘↙∕∟∣≒≦≧⊿═",35,"▁",6],["a880","█",7,"▓▔▕▼▽◢◣◤◥☉⊕〒〝〞"],["a8a1","āáǎàēéěèīíǐìōóǒòūúǔùǖǘǚǜüêɑ"],["a8bd","ńň"],["a8c0","ɡ"],["a8c5","ㄅ",36],["a940","〡",8,"㊣㎎㎏㎜㎝㎞㎡㏄㏎㏑㏒㏕︰￢￤"],["a959","℡㈱"],["a95c","‐"],["a960","ー゛゜ヽヾ〆ゝゞ﹉",9,"﹔﹕﹖﹗﹙",8],["a980","﹢",4,"﹨﹩﹪﹫"],["a996","〇"],["a9a4","─",75],["aa40","狜狝狟狢",5,"狪狫狵狶狹狽狾狿猀猂猄",5,"猋猌猍猏猐猑猒猔猘猙猚猟猠猣猤猦猧猨猭猯猰猲猳猵猶猺猻猼猽獀",8],["aa80","獉獊獋獌獎獏獑獓獔獕獖獘",7,"獡",10,"獮獰獱"],["ab40","獲",11,"獿",4,"玅玆玈玊玌玍玏玐玒玓玔玕玗玘玙玚玜玝玞玠玡玣",5,"玪玬玭玱玴玵玶玸玹玼玽玾玿珁珃",4],["ab80","珋珌珎珒",6,"珚珛珜珝珟珡珢珣珤珦珨珪珫珬珮珯珰珱珳",4],["ac40","珸",10,"琄琇琈琋琌琍琎琑",8,"琜",5,"琣琤琧琩琫琭琯琱琲琷",4,"琽琾琿瑀瑂",11],["ac80","瑎",6,"瑖瑘瑝瑠",12,"瑮瑯瑱",4,"瑸瑹瑺"],["ad40","瑻瑼瑽瑿璂璄璅璆璈璉璊璌璍璏璑",10,"璝璟",7,"璪",15,"璻",12],["ad80","瓈",9,"瓓",8,"瓝瓟瓡瓥瓧",6,"瓰瓱瓲"],["ae40","瓳瓵瓸",6,"甀甁甂甃甅",7,"甎甐甒甔甕甖甗甛甝甞甠",4,"甦甧甪甮甴甶甹甼甽甿畁畂畃畄畆畇畉畊畍畐畑畒畓畕畖畗畘"],["ae80","畝",7,"畧畨畩畫",6,"畳畵當畷畺",4,"疀疁疂疄疅疇"],["af40","疈疉疊疌疍疎疐疓疕疘疛疜疞疢疦",4,"疭疶疷疺疻疿痀痁痆痋痌痎痏痐痑痓痗痙痚痜痝痟痠痡痥痩痬痭痮痯痲痳痵痶痷痸痺痻痽痾瘂瘄瘆瘇"],["af80","瘈瘉瘋瘍瘎瘏瘑瘒瘓瘔瘖瘚瘜瘝瘞瘡瘣瘧瘨瘬瘮瘯瘱瘲瘶瘷瘹瘺瘻瘽癁療癄"],["b040","癅",6,"癎",5,"癕癗",4,"癝癟癠癡癢癤",6,"癬癭癮癰",7,"癹発發癿皀皁皃皅皉皊皌皍皏皐皒皔皕皗皘皚皛"],["b080","皜",7,"皥",8,"皯皰皳皵",9,"盀盁盃啊阿埃挨哎唉哀皑癌蔼矮艾碍爱隘鞍氨安俺按暗岸胺案肮昂盎凹敖熬翱袄傲奥懊澳芭捌扒叭吧笆八疤巴拔跋靶把耙坝霸罢爸白柏百摆佰败拜稗斑班搬扳般颁板版扮拌伴瓣半办绊邦帮梆榜膀绑棒磅蚌镑傍谤苞胞包褒剥"],["b140","盄盇盉盋盌盓盕盙盚盜盝盞盠",4,"盦",7,"盰盳盵盶盷盺盻盽盿眀眂眃眅眆眊県眎",10,"眛眜眝眞眡眣眤眥眧眪眫"],["b180","眬眮眰",4,"眹眻眽眾眿睂睄睅睆睈",7,"睒",7,"睜薄雹保堡饱宝抱报暴豹鲍爆杯碑悲卑北辈背贝钡倍狈备惫焙被奔苯本笨崩绷甭泵蹦迸逼鼻比鄙笔彼碧蓖蔽毕毙毖币庇痹闭敝弊必辟壁臂避陛鞭边编贬扁便变卞辨辩辫遍标彪膘表鳖憋别瘪彬斌濒滨宾摈兵冰柄丙秉饼炳"],["b240","睝睞睟睠睤睧睩睪睭",11,"睺睻睼瞁瞂瞃瞆",5,"瞏瞐瞓",11,"瞡瞣瞤瞦瞨瞫瞭瞮瞯瞱瞲瞴瞶",4],["b280","瞼瞾矀",12,"矎",8,"矘矙矚矝",4,"矤病并玻菠播拨钵波博勃搏铂箔伯帛舶脖膊渤泊驳捕卜哺补埠不布步簿部怖擦猜裁材才财睬踩采彩菜蔡餐参蚕残惭惨灿苍舱仓沧藏操糙槽曹草厕策侧册测层蹭插叉茬茶查碴搽察岔差诧拆柴豺搀掺蝉馋谗缠铲产阐颤昌猖"],["b340","矦矨矪矯矰矱矲矴矵矷矹矺矻矼砃",5,"砊砋砎砏砐砓砕砙砛砞砠砡砢砤砨砪砫砮砯砱砲砳砵砶砽砿硁硂硃硄硆硈硉硊硋硍硏硑硓硔硘硙硚"],["b380","硛硜硞",11,"硯",7,"硸硹硺硻硽",6,"场尝常长偿肠厂敞畅唱倡超抄钞朝嘲潮巢吵炒车扯撤掣彻澈郴臣辰尘晨忱沉陈趁衬撑称城橙成呈乘程惩澄诚承逞骋秤吃痴持匙池迟弛驰耻齿侈尺赤翅斥炽充冲虫崇宠抽酬畴踌稠愁筹仇绸瞅丑臭初出橱厨躇锄雏滁除楚"],["b440","碄碅碆碈碊碋碏碐碒碔碕碖碙碝碞碠碢碤碦碨",7,"碵碶碷碸確碻碼碽碿磀磂磃磄磆磇磈磌磍磎磏磑磒磓磖磗磘磚",9],["b480","磤磥磦磧磩磪磫磭",4,"磳磵磶磸磹磻",5,"礂礃礄礆",6,"础储矗搐触处揣川穿椽传船喘串疮窗幢床闯创吹炊捶锤垂春椿醇唇淳纯蠢戳绰疵茨磁雌辞慈瓷词此刺赐次聪葱囱匆从丛凑粗醋簇促蹿篡窜摧崔催脆瘁粹淬翠村存寸磋撮搓措挫错搭达答瘩打大呆歹傣戴带殆代贷袋待逮"],["b540","礍",5,"礔",9,"礟",4,"礥",14,"礵",4,"礽礿祂祃祄祅祇祊",8,"祔祕祘祙祡祣"],["b580","祤祦祩祪祫祬祮祰",6,"祹祻",4,"禂禃禆禇禈禉禋禌禍禎禐禑禒怠耽担丹单郸掸胆旦氮但惮淡诞弹蛋当挡党荡档刀捣蹈倒岛祷导到稻悼道盗德得的蹬灯登等瞪凳邓堤低滴迪敌笛狄涤翟嫡抵底地蒂第帝弟递缔颠掂滇碘点典靛垫电佃甸店惦奠淀殿碉叼雕凋刁掉吊钓调跌爹碟蝶迭谍叠"],["b640","禓",6,"禛",11,"禨",10,"禴",4,"禼禿秂秄秅秇秈秊秌秎秏秐秓秔秖秗秙",5,"秠秡秢秥秨秪"],["b680","秬秮秱",6,"秹秺秼秾秿稁稄稅稇稈稉稊稌稏",4,"稕稖稘稙稛稜丁盯叮钉顶鼎锭定订丢东冬董懂动栋侗恫冻洞兜抖斗陡豆逗痘都督毒犊独读堵睹赌杜镀肚度渡妒端短锻段断缎堆兑队对墩吨蹲敦顿囤钝盾遁掇哆多夺垛躲朵跺舵剁惰堕蛾峨鹅俄额讹娥恶厄扼遏鄂饿恩而儿耳尔饵洱二"],["b740","稝稟稡稢稤",14,"稴稵稶稸稺稾穀",5,"穇",9,"穒",4,"穘",16],["b780","穩",6,"穱穲穳穵穻穼穽穾窂窅窇窉窊窋窌窎窏窐窓窔窙窚窛窞窡窢贰发罚筏伐乏阀法珐藩帆番翻樊矾钒繁凡烦反返范贩犯饭泛坊芳方肪房防妨仿访纺放菲非啡飞肥匪诽吠肺废沸费芬酚吩氛分纷坟焚汾粉奋份忿愤粪丰封枫蜂峰锋风疯烽逢冯缝讽奉凤佛否夫敷肤孵扶拂辐幅氟符伏俘服"],["b840","窣窤窧窩窪窫窮",4,"窴",10,"竀",10,"竌",9,"竗竘竚竛竜竝竡竢竤竧",5,"竮竰竱竲竳"],["b880","竴",4,"竻竼竾笀笁笂笅笇笉笌笍笎笐笒笓笖笗笘笚笜笝笟笡笢笣笧笩笭浮涪福袱弗甫抚辅俯釜斧脯腑府腐赴副覆赋复傅付阜父腹负富讣附妇缚咐噶嘎该改概钙盖溉干甘杆柑竿肝赶感秆敢赣冈刚钢缸肛纲岗港杠篙皋高膏羔糕搞镐稿告哥歌搁戈鸽胳疙割革葛格蛤阁隔铬个各给根跟耕更庚羹"],["b940","笯笰笲笴笵笶笷笹笻笽笿",5,"筆筈筊筍筎筓筕筗筙筜筞筟筡筣",10,"筯筰筳筴筶筸筺筼筽筿箁箂箃箄箆",6,"箎箏"],["b980","箑箒箓箖箘箙箚箛箞箟箠箣箤箥箮箯箰箲箳箵箶箷箹",7,"篂篃範埂耿梗工攻功恭龚供躬公宫弓巩汞拱贡共钩勾沟苟狗垢构购够辜菇咕箍估沽孤姑鼓古蛊骨谷股故顾固雇刮瓜剐寡挂褂乖拐怪棺关官冠观管馆罐惯灌贯光广逛瑰规圭硅归龟闺轨鬼诡癸桂柜跪贵刽辊滚棍锅郭国果裹过哈"],["ba40","篅篈築篊篋篍篎篏篐篒篔",4,"篛篜篞篟篠篢篣篤篧篨篩篫篬篭篯篰篲",4,"篸篹篺篻篽篿",7,"簈簉簊簍簎簐",5,"簗簘簙"],["ba80","簚",4,"簠",5,"簨簩簫",12,"簹",5,"籂骸孩海氦亥害骇酣憨邯韩含涵寒函喊罕翰撼捍旱憾悍焊汗汉夯杭航壕嚎豪毫郝好耗号浩呵喝荷菏核禾和何合盒貉阂河涸赫褐鹤贺嘿黑痕很狠恨哼亨横衡恒轰哄烘虹鸿洪宏弘红喉侯猴吼厚候后呼乎忽瑚壶葫胡蝴狐糊湖"],["bb40","籃",9,"籎",36,"籵",5,"籾",9],["bb80","粈粊",6,"粓粔粖粙粚粛粠粡粣粦粧粨粩粫粬粭粯粰粴",4,"粺粻弧虎唬护互沪户花哗华猾滑画划化话槐徊怀淮坏欢环桓还缓换患唤痪豢焕涣宦幻荒慌黄磺蝗簧皇凰惶煌晃幌恍谎灰挥辉徽恢蛔回毁悔慧卉惠晦贿秽会烩汇讳诲绘荤昏婚魂浑混豁活伙火获或惑霍货祸击圾基机畸稽积箕"],["bc40","粿糀糂糃糄糆糉糋糎",6,"糘糚糛糝糞糡",6,"糩",5,"糰",7,"糹糺糼",13,"紋",5],["bc80","紑",14,"紡紣紤紥紦紨紩紪紬紭紮細",6,"肌饥迹激讥鸡姬绩缉吉极棘辑籍集及急疾汲即嫉级挤几脊己蓟技冀季伎祭剂悸济寄寂计记既忌际妓继纪嘉枷夹佳家加荚颊贾甲钾假稼价架驾嫁歼监坚尖笺间煎兼肩艰奸缄茧检柬碱硷拣捡简俭剪减荐槛鉴践贱见键箭件"],["bd40","紷",54,"絯",7],["bd80","絸",32,"健舰剑饯渐溅涧建僵姜将浆江疆蒋桨奖讲匠酱降蕉椒礁焦胶交郊浇骄娇嚼搅铰矫侥脚狡角饺缴绞剿教酵轿较叫窖揭接皆秸街阶截劫节桔杰捷睫竭洁结解姐戒藉芥界借介疥诫届巾筋斤金今津襟紧锦仅谨进靳晋禁近烬浸"],["be40","継",12,"綧",6,"綯",42],["be80","線",32,"尽劲荆兢茎睛晶鲸京惊精粳经井警景颈静境敬镜径痉靖竟竞净炯窘揪究纠玖韭久灸九酒厩救旧臼舅咎就疚鞠拘狙疽居驹菊局咀矩举沮聚拒据巨具距踞锯俱句惧炬剧捐鹃娟倦眷卷绢撅攫抉掘倔爵觉决诀绝均菌钧军君峻"],["bf40","緻",62],["bf80","縺縼",4,"繂",4,"繈",21,"俊竣浚郡骏喀咖卡咯开揩楷凯慨刊堪勘坎砍看康慷糠扛抗亢炕考拷烤靠坷苛柯棵磕颗科壳咳可渴克刻客课肯啃垦恳坑吭空恐孔控抠口扣寇枯哭窟苦酷库裤夸垮挎跨胯块筷侩快宽款匡筐狂框矿眶旷况亏盔岿窥葵奎魁傀"],["c040","繞",35,"纃",23,"纜纝纞"],["c080","纮纴纻纼绖绤绬绹缊缐缞缷缹缻",6,"罃罆",9,"罒罓馈愧溃坤昆捆困括扩廓阔垃拉喇蜡腊辣啦莱来赖蓝婪栏拦篮阑兰澜谰揽览懒缆烂滥琅榔狼廊郎朗浪捞劳牢老佬姥酪烙涝勒乐雷镭蕾磊累儡垒擂肋类泪棱楞冷厘梨犁黎篱狸离漓理李里鲤礼莉荔吏栗丽厉励砾历利傈例俐"],["c140","罖罙罛罜罝罞罠罣",4,"罫罬罭罯罰罳罵罶罷罸罺罻罼罽罿羀羂",7,"羋羍羏",4,"羕",4,"羛羜羠羢羣羥羦羨",6,"羱"],["c180","羳",4,"羺羻羾翀翂翃翄翆翇翈翉翋翍翏",4,"翖翗翙",5,"翢翣痢立粒沥隶力璃哩俩联莲连镰廉怜涟帘敛脸链恋炼练粮凉梁粱良两辆量晾亮谅撩聊僚疗燎寥辽潦了撂镣廖料列裂烈劣猎琳林磷霖临邻鳞淋凛赁吝拎玲菱零龄铃伶羚凌灵陵岭领另令溜琉榴硫馏留刘瘤流柳六龙聋咙笼窿"],["c240","翤翧翨翪翫翬翭翯翲翴",6,"翽翾翿耂耇耈耉耊耎耏耑耓耚耛耝耞耟耡耣耤耫",5,"耲耴耹耺耼耾聀聁聄聅聇聈聉聎聏聐聑聓聕聖聗"],["c280","聙聛",13,"聫",5,"聲",11,"隆垄拢陇楼娄搂篓漏陋芦卢颅庐炉掳卤虏鲁麓碌露路赂鹿潞禄录陆戮驴吕铝侣旅履屡缕虑氯律率滤绿峦挛孪滦卵乱掠略抡轮伦仑沦纶论萝螺罗逻锣箩骡裸落洛骆络妈麻玛码蚂马骂嘛吗埋买麦卖迈脉瞒馒蛮满蔓曼慢漫"],["c340","聾肁肂肅肈肊肍",5,"肔肕肗肙肞肣肦肧肨肬肰肳肵肶肸肹肻胅胇",4,"胏",6,"胘胟胠胢胣胦胮胵胷胹胻胾胿脀脁脃脄脅脇脈脋"],["c380","脌脕脗脙脛脜脝脟",12,"脭脮脰脳脴脵脷脹",4,"脿谩芒茫盲氓忙莽猫茅锚毛矛铆卯茂冒帽貌贸么玫枚梅酶霉煤没眉媒镁每美昧寐妹媚门闷们萌蒙檬盟锰猛梦孟眯醚靡糜迷谜弥米秘觅泌蜜密幂棉眠绵冕免勉娩缅面苗描瞄藐秒渺庙妙蔑灭民抿皿敏悯闽明螟鸣铭名命谬摸"],["c440","腀",5,"腇腉腍腎腏腒腖腗腘腛",4,"腡腢腣腤腦腨腪腫腬腯腲腳腵腶腷腸膁膃",4,"膉膋膌膍膎膐膒",5,"膙膚膞",4,"膤膥"],["c480","膧膩膫",7,"膴",5,"膼膽膾膿臄臅臇臈臉臋臍",6,"摹蘑模膜磨摩魔抹末莫墨默沫漠寞陌谋牟某拇牡亩姆母墓暮幕募慕木目睦牧穆拿哪呐钠那娜纳氖乃奶耐奈南男难囊挠脑恼闹淖呢馁内嫩能妮霓倪泥尼拟你匿腻逆溺蔫拈年碾撵捻念娘酿鸟尿捏聂孽啮镊镍涅您柠狞凝宁"],["c540","臔",14,"臤臥臦臨臩臫臮",4,"臵",5,"臽臿舃與",4,"舎舏舑舓舕",5,"舝舠舤舥舦舧舩舮舲舺舼舽舿"],["c580","艀艁艂艃艅艆艈艊艌艍艎艐",7,"艙艛艜艝艞艠",7,"艩拧泞牛扭钮纽脓浓农弄奴努怒女暖虐疟挪懦糯诺哦欧鸥殴藕呕偶沤啪趴爬帕怕琶拍排牌徘湃派攀潘盘磐盼畔判叛乓庞旁耪胖抛咆刨炮袍跑泡呸胚培裴赔陪配佩沛喷盆砰抨烹澎彭蓬棚硼篷膨朋鹏捧碰坯砒霹批披劈琵毗"],["c640","艪艫艬艭艱艵艶艷艸艻艼芀芁芃芅芆芇芉芌芐芓芔芕芖芚芛芞芠芢芣芧芲芵芶芺芻芼芿苀苂苃苅苆苉苐苖苙苚苝苢苧苨苩苪苬苭苮苰苲苳苵苶苸"],["c680","苺苼",4,"茊茋茍茐茒茓茖茘茙茝",9,"茩茪茮茰茲茷茻茽啤脾疲皮匹痞僻屁譬篇偏片骗飘漂瓢票撇瞥拼频贫品聘乒坪苹萍平凭瓶评屏坡泼颇婆破魄迫粕剖扑铺仆莆葡菩蒲埔朴圃普浦谱曝瀑期欺栖戚妻七凄漆柒沏其棋奇歧畦崎脐齐旗祈祁骑起岂乞企启契砌器气迄弃汽泣讫掐"],["c740","茾茿荁荂荄荅荈荊",4,"荓荕",4,"荝荢荰",6,"荹荺荾",6,"莇莈莊莋莌莍莏莐莑莔莕莖莗莙莚莝莟莡",6,"莬莭莮"],["c780","莯莵莻莾莿菂菃菄菆菈菉菋菍菎菐菑菒菓菕菗菙菚菛菞菢菣菤菦菧菨菫菬菭恰洽牵扦钎铅千迁签仟谦乾黔钱钳前潜遣浅谴堑嵌欠歉枪呛腔羌墙蔷强抢橇锹敲悄桥瞧乔侨巧鞘撬翘峭俏窍切茄且怯窃钦侵亲秦琴勤芹擒禽寝沁青轻氢倾卿清擎晴氰情顷请庆琼穷秋丘邱球求囚酋泅趋区蛆曲躯屈驱渠"],["c840","菮華菳",4,"菺菻菼菾菿萀萂萅萇萈萉萊萐萒",5,"萙萚萛萞",5,"萩",7,"萲",5,"萹萺萻萾",7,"葇葈葉"],["c880","葊",6,"葒",4,"葘葝葞葟葠葢葤",4,"葪葮葯葰葲葴葷葹葻葼取娶龋趣去圈颧权醛泉全痊拳犬券劝缺炔瘸却鹊榷确雀裙群然燃冉染瓤壤攘嚷让饶扰绕惹热壬仁人忍韧任认刃妊纫扔仍日戎茸蓉荣融熔溶容绒冗揉柔肉茹蠕儒孺如辱乳汝入褥软阮蕊瑞锐闰润若弱撒洒萨腮鳃塞赛三叁"],["c940","葽",4,"蒃蒄蒅蒆蒊蒍蒏",7,"蒘蒚蒛蒝蒞蒟蒠蒢",12,"蒰蒱蒳蒵蒶蒷蒻蒼蒾蓀蓂蓃蓅蓆蓇蓈蓋蓌蓎蓏蓒蓔蓕蓗"],["c980","蓘",4,"蓞蓡蓢蓤蓧",4,"蓭蓮蓯蓱",10,"蓽蓾蔀蔁蔂伞散桑嗓丧搔骚扫嫂瑟色涩森僧莎砂杀刹沙纱傻啥煞筛晒珊苫杉山删煽衫闪陕擅赡膳善汕扇缮墒伤商赏晌上尚裳梢捎稍烧芍勺韶少哨邵绍奢赊蛇舌舍赦摄射慑涉社设砷申呻伸身深娠绅神沈审婶甚肾慎渗声生甥牲升绳"],["ca40","蔃",8,"蔍蔎蔏蔐蔒蔔蔕蔖蔘蔙蔛蔜蔝蔞蔠蔢",8,"蔭",9,"蔾",4,"蕄蕅蕆蕇蕋",10],["ca80","蕗蕘蕚蕛蕜蕝蕟",4,"蕥蕦蕧蕩",8,"蕳蕵蕶蕷蕸蕼蕽蕿薀薁省盛剩胜圣师失狮施湿诗尸虱十石拾时什食蚀实识史矢使屎驶始式示士世柿事拭誓逝势是嗜噬适仕侍释饰氏市恃室视试收手首守寿授售受瘦兽蔬枢梳殊抒输叔舒淑疏书赎孰熟薯暑曙署蜀黍鼠属术述树束戍竖墅庶数漱"],["cb40","薂薃薆薈",6,"薐",10,"薝",6,"薥薦薧薩薫薬薭薱",5,"薸薺",6,"藂",6,"藊",4,"藑藒"],["cb80","藔藖",5,"藝",6,"藥藦藧藨藪",14,"恕刷耍摔衰甩帅栓拴霜双爽谁水睡税吮瞬顺舜说硕朔烁斯撕嘶思私司丝死肆寺嗣四伺似饲巳松耸怂颂送宋讼诵搜艘擞嗽苏酥俗素速粟僳塑溯宿诉肃酸蒜算虽隋随绥髓碎岁穗遂隧祟孙损笋蓑梭唆缩琐索锁所塌他它她塔"],["cc40","藹藺藼藽藾蘀",4,"蘆",10,"蘒蘓蘔蘕蘗",15,"蘨蘪",13,"蘹蘺蘻蘽蘾蘿虀"],["cc80","虁",11,"虒虓處",4,"虛虜虝號虠虡虣",7,"獭挞蹋踏胎苔抬台泰酞太态汰坍摊贪瘫滩坛檀痰潭谭谈坦毯袒碳探叹炭汤塘搪堂棠膛唐糖倘躺淌趟烫掏涛滔绦萄桃逃淘陶讨套特藤腾疼誊梯剔踢锑提题蹄啼体替嚏惕涕剃屉天添填田甜恬舔腆挑条迢眺跳贴铁帖厅听烃"],["cd40","虭虯虰虲",6,"蚃",6,"蚎",4,"蚔蚖",5,"蚞",4,"蚥蚦蚫蚭蚮蚲蚳蚷蚸蚹蚻",4,"蛁蛂蛃蛅蛈蛌蛍蛒蛓蛕蛖蛗蛚蛜"],["cd80","蛝蛠蛡蛢蛣蛥蛦蛧蛨蛪蛫蛬蛯蛵蛶蛷蛺蛻蛼蛽蛿蜁蜄蜅蜆蜋蜌蜎蜏蜐蜑蜔蜖汀廷停亭庭挺艇通桐酮瞳同铜彤童桶捅筒统痛偷投头透凸秃突图徒途涂屠土吐兔湍团推颓腿蜕褪退吞屯臀拖托脱鸵陀驮驼椭妥拓唾挖哇蛙洼娃瓦袜歪外豌弯湾玩顽丸烷完碗挽晚皖惋宛婉万腕汪王亡枉网往旺望忘妄威"],["ce40","蜙蜛蜝蜟蜠蜤蜦蜧蜨蜪蜫蜬蜭蜯蜰蜲蜳蜵蜶蜸蜹蜺蜼蜽蝀",6,"蝊蝋蝍蝏蝐蝑蝒蝔蝕蝖蝘蝚",5,"蝡蝢蝦",7,"蝯蝱蝲蝳蝵"],["ce80","蝷蝸蝹蝺蝿螀螁螄螆螇螉螊螌螎",4,"螔螕螖螘",6,"螠",4,"巍微危韦违桅围唯惟为潍维苇萎委伟伪尾纬未蔚味畏胃喂魏位渭谓尉慰卫瘟温蚊文闻纹吻稳紊问嗡翁瓮挝蜗涡窝我斡卧握沃巫呜钨乌污诬屋无芜梧吾吴毋武五捂午舞伍侮坞戊雾晤物勿务悟误昔熙析西硒矽晰嘻吸锡牺"],["cf40","螥螦螧螩螪螮螰螱螲螴螶螷螸螹螻螼螾螿蟁",4,"蟇蟈蟉蟌",4,"蟔",6,"蟜蟝蟞蟟蟡蟢蟣蟤蟦蟧蟨蟩蟫蟬蟭蟯",9],["cf80","蟺蟻蟼蟽蟿蠀蠁蠂蠄",5,"蠋",7,"蠔蠗蠘蠙蠚蠜",4,"蠣稀息希悉膝夕惜熄烯溪汐犀檄袭席习媳喜铣洗系隙戏细瞎虾匣霞辖暇峡侠狭下厦夏吓掀锨先仙鲜纤咸贤衔舷闲涎弦嫌显险现献县腺馅羡宪陷限线相厢镶香箱襄湘乡翔祥详想响享项巷橡像向象萧硝霄削哮嚣销消宵淆晓"],["d040","蠤",13,"蠳",5,"蠺蠻蠽蠾蠿衁衂衃衆",5,"衎",5,"衕衖衘衚",6,"衦衧衪衭衯衱衳衴衵衶衸衹衺"],["d080","衻衼袀袃袆袇袉袊袌袎袏袐袑袓袔袕袗",4,"袝",4,"袣袥",5,"小孝校肖啸笑效楔些歇蝎鞋协挟携邪斜胁谐写械卸蟹懈泄泻谢屑薪芯锌欣辛新忻心信衅星腥猩惺兴刑型形邢行醒幸杏性姓兄凶胸匈汹雄熊休修羞朽嗅锈秀袖绣墟戌需虚嘘须徐许蓄酗叙旭序畜恤絮婿绪续轩喧宣悬旋玄"],["d140","袬袮袯袰袲",4,"袸袹袺袻袽袾袿裀裃裄裇裈裊裋裌裍裏裐裑裓裖裗裚",4,"裠裡裦裧裩",6,"裲裵裶裷裺裻製裿褀褁褃",5],["d180","褉褋",4,"褑褔",4,"褜",4,"褢褣褤褦褧褨褩褬褭褮褯褱褲褳褵褷选癣眩绚靴薛学穴雪血勋熏循旬询寻驯巡殉汛训讯逊迅压押鸦鸭呀丫芽牙蚜崖衙涯雅哑亚讶焉咽阉烟淹盐严研蜒岩延言颜阎炎沿奄掩眼衍演艳堰燕厌砚雁唁彦焰宴谚验殃央鸯秧杨扬佯疡羊洋阳氧仰痒养样漾邀腰妖瑶"],["d240","褸",8,"襂襃襅",24,"襠",5,"襧",19,"襼"],["d280","襽襾覀覂覄覅覇",26,"摇尧遥窑谣姚咬舀药要耀椰噎耶爷野冶也页掖业叶曳腋夜液一壹医揖铱依伊衣颐夷遗移仪胰疑沂宜姨彝椅蚁倚已乙矣以艺抑易邑屹亿役臆逸肄疫亦裔意毅忆义益溢诣议谊译异翼翌绎茵荫因殷音阴姻吟银淫寅饮尹引隐"],["d340","覢",30,"觃觍觓觔觕觗觘觙觛觝觟觠觡觢觤觧觨觩觪觬觭觮觰觱觲觴",6],["d380","觻",4,"訁",5,"計",21,"印英樱婴鹰应缨莹萤营荧蝇迎赢盈影颖硬映哟拥佣臃痈庸雍踊蛹咏泳涌永恿勇用幽优悠忧尤由邮铀犹油游酉有友右佑釉诱又幼迂淤于盂榆虞愚舆余俞逾鱼愉渝渔隅予娱雨与屿禹宇语羽玉域芋郁吁遇喻峪御愈欲狱育誉"],["d440","訞",31,"訿",8,"詉",21],["d480","詟",25,"詺",6,"浴寓裕预豫驭鸳渊冤元垣袁原援辕园员圆猿源缘远苑愿怨院曰约越跃钥岳粤月悦阅耘云郧匀陨允运蕴酝晕韵孕匝砸杂栽哉灾宰载再在咱攒暂赞赃脏葬遭糟凿藻枣早澡蚤躁噪造皂灶燥责择则泽贼怎增憎曾赠扎喳渣札轧"],["d540","誁",7,"誋",7,"誔",46],["d580","諃",32,"铡闸眨栅榨咋乍炸诈摘斋宅窄债寨瞻毡詹粘沾盏斩辗崭展蘸栈占战站湛绽樟章彰漳张掌涨杖丈帐账仗胀瘴障招昭找沼赵照罩兆肇召遮折哲蛰辙者锗蔗这浙珍斟真甄砧臻贞针侦枕疹诊震振镇阵蒸挣睁征狰争怔整拯正政"],["d640","諤",34,"謈",27],["d680","謤謥謧",30,"帧症郑证芝枝支吱蜘知肢脂汁之织职直植殖执值侄址指止趾只旨纸志挚掷至致置帜峙制智秩稚质炙痔滞治窒中盅忠钟衷终种肿重仲众舟周州洲诌粥轴肘帚咒皱宙昼骤珠株蛛朱猪诸诛逐竹烛煮拄瞩嘱主著柱助蛀贮铸筑"],["d740","譆",31,"譧",4,"譭",25],["d780","讇",24,"讬讱讻诇诐诪谉谞住注祝驻抓爪拽专砖转撰赚篆桩庄装妆撞壮状椎锥追赘坠缀谆准捉拙卓桌琢茁酌啄着灼浊兹咨资姿滋淄孜紫仔籽滓子自渍字鬃棕踪宗综总纵邹走奏揍租足卒族祖诅阻组钻纂嘴醉最罪尊遵昨左佐柞做作坐座"],["d840","谸",8,"豂豃豄豅豈豊豋豍",7,"豖豗豘豙豛",5,"豣",6,"豬",6,"豴豵豶豷豻",6,"貃貄貆貇"],["d880","貈貋貍",6,"貕貖貗貙",20,"亍丌兀丐廿卅丕亘丞鬲孬噩丨禺丿匕乇夭爻卮氐囟胤馗毓睾鼗丶亟鼐乜乩亓芈孛啬嘏仄厍厝厣厥厮靥赝匚叵匦匮匾赜卦卣刂刈刎刭刳刿剀剌剞剡剜蒯剽劂劁劐劓冂罔亻仃仉仂仨仡仫仞伛仳伢佤仵伥伧伉伫佞佧攸佚佝"],["d940","貮",62],["d980","賭",32,"佟佗伲伽佶佴侑侉侃侏佾佻侪佼侬侔俦俨俪俅俚俣俜俑俟俸倩偌俳倬倏倮倭俾倜倌倥倨偾偃偕偈偎偬偻傥傧傩傺僖儆僭僬僦僮儇儋仝氽佘佥俎龠汆籴兮巽黉馘冁夔勹匍訇匐凫夙兕亠兖亳衮袤亵脔裒禀嬴蠃羸冫冱冽冼"],["da40","贎",14,"贠赑赒赗赟赥赨赩赪赬赮赯赱赲赸",8,"趂趃趆趇趈趉趌",4,"趒趓趕",9,"趠趡"],["da80","趢趤",12,"趲趶趷趹趻趽跀跁跂跅跇跈跉跊跍跐跒跓跔凇冖冢冥讠讦讧讪讴讵讷诂诃诋诏诎诒诓诔诖诘诙诜诟诠诤诨诩诮诰诳诶诹诼诿谀谂谄谇谌谏谑谒谔谕谖谙谛谘谝谟谠谡谥谧谪谫谮谯谲谳谵谶卩卺阝阢阡阱阪阽阼陂陉陔陟陧陬陲陴隈隍隗隰邗邛邝邙邬邡邴邳邶邺"],["db40","跕跘跙跜跠跡跢跥跦跧跩跭跮跰跱跲跴跶跼跾",6,"踆踇踈踋踍踎踐踑踒踓踕",7,"踠踡踤",4,"踫踭踰踲踳踴踶踷踸踻踼踾"],["db80","踿蹃蹅蹆蹌",4,"蹓",5,"蹚",11,"蹧蹨蹪蹫蹮蹱邸邰郏郅邾郐郄郇郓郦郢郜郗郛郫郯郾鄄鄢鄞鄣鄱鄯鄹酃酆刍奂劢劬劭劾哿勐勖勰叟燮矍廴凵凼鬯厶弁畚巯坌垩垡塾墼壅壑圩圬圪圳圹圮圯坜圻坂坩垅坫垆坼坻坨坭坶坳垭垤垌垲埏垧垴垓垠埕埘埚埙埒垸埴埯埸埤埝"],["dc40","蹳蹵蹷",4,"蹽蹾躀躂躃躄躆躈",6,"躑躒躓躕",6,"躝躟",11,"躭躮躰躱躳",6,"躻",7],["dc80","軃",10,"軏",21,"堋堍埽埭堀堞堙塄堠塥塬墁墉墚墀馨鼙懿艹艽艿芏芊芨芄芎芑芗芙芫芸芾芰苈苊苣芘芷芮苋苌苁芩芴芡芪芟苄苎芤苡茉苷苤茏茇苜苴苒苘茌苻苓茑茚茆茔茕苠苕茜荑荛荜茈莒茼茴茱莛荞茯荏荇荃荟荀茗荠茭茺茳荦荥"],["dd40","軥",62],["dd80","輤",32,"荨茛荩荬荪荭荮莰荸莳莴莠莪莓莜莅荼莶莩荽莸荻莘莞莨莺莼菁萁菥菘堇萘萋菝菽菖萜萸萑萆菔菟萏萃菸菹菪菅菀萦菰菡葜葑葚葙葳蒇蒈葺蒉葸萼葆葩葶蒌蒎萱葭蓁蓍蓐蓦蒽蓓蓊蒿蒺蓠蒡蒹蒴蒗蓥蓣蔌甍蔸蓰蔹蔟蔺"],["de40","轅",32,"轪辀辌辒辝辠辡辢辤辥辦辧辪辬辭辮辯農辳辴辵辷辸辺辻込辿迀迃迆"],["de80","迉",4,"迏迒迖迗迚迠迡迣迧迬迯迱迲迴迵迶迺迻迼迾迿逇逈逌逎逓逕逘蕖蔻蓿蓼蕙蕈蕨蕤蕞蕺瞢蕃蕲蕻薤薨薇薏蕹薮薜薅薹薷薰藓藁藜藿蘧蘅蘩蘖蘼廾弈夼奁耷奕奚奘匏尢尥尬尴扌扪抟抻拊拚拗拮挢拶挹捋捃掭揶捱捺掎掴捭掬掊捩掮掼揲揸揠揿揄揞揎摒揆掾摅摁搋搛搠搌搦搡摞撄摭撖"],["df40","這逜連逤逥逧",5,"逰",4,"逷逹逺逽逿遀遃遅遆遈",4,"過達違遖遙遚遜",5,"遤遦遧適遪遫遬遯",4,"遶",6,"遾邁"],["df80","還邅邆邇邉邊邌",4,"邒邔邖邘邚邜邞邟邠邤邥邧邨邩邫邭邲邷邼邽邿郀摺撷撸撙撺擀擐擗擤擢攉攥攮弋忒甙弑卟叱叽叩叨叻吒吖吆呋呒呓呔呖呃吡呗呙吣吲咂咔呷呱呤咚咛咄呶呦咝哐咭哂咴哒咧咦哓哔呲咣哕咻咿哌哙哚哜咩咪咤哝哏哞唛哧唠哽唔哳唢唣唏唑唧唪啧喏喵啉啭啁啕唿啐唼"],["e040","郂郃郆郈郉郋郌郍郒郔郕郖郘郙郚郞郟郠郣郤郥郩郪郬郮郰郱郲郳郵郶郷郹郺郻郼郿鄀鄁鄃鄅",19,"鄚鄛鄜"],["e080","鄝鄟鄠鄡鄤",10,"鄰鄲",6,"鄺",8,"酄唷啖啵啶啷唳唰啜喋嗒喃喱喹喈喁喟啾嗖喑啻嗟喽喾喔喙嗪嗷嗉嘟嗑嗫嗬嗔嗦嗝嗄嗯嗥嗲嗳嗌嗍嗨嗵嗤辔嘞嘈嘌嘁嘤嘣嗾嘀嘧嘭噘嘹噗嘬噍噢噙噜噌噔嚆噤噱噫噻噼嚅嚓嚯囔囗囝囡囵囫囹囿圄圊圉圜帏帙帔帑帱帻帼"],["e140","酅酇酈酑酓酔酕酖酘酙酛酜酟酠酦酧酨酫酭酳酺酻酼醀",4,"醆醈醊醎醏醓",6,"醜",5,"醤",5,"醫醬醰醱醲醳醶醷醸醹醻"],["e180","醼",10,"釈釋釐釒",9,"針",8,"帷幄幔幛幞幡岌屺岍岐岖岈岘岙岑岚岜岵岢岽岬岫岱岣峁岷峄峒峤峋峥崂崃崧崦崮崤崞崆崛嵘崾崴崽嵬嵛嵯嵝嵫嵋嵊嵩嵴嶂嶙嶝豳嶷巅彳彷徂徇徉後徕徙徜徨徭徵徼衢彡犭犰犴犷犸狃狁狎狍狒狨狯狩狲狴狷猁狳猃狺"],["e240","釦",62],["e280","鈥",32,"狻猗猓猡猊猞猝猕猢猹猥猬猸猱獐獍獗獠獬獯獾舛夥飧夤夂饣饧",5,"饴饷饽馀馄馇馊馍馐馑馓馔馕庀庑庋庖庥庠庹庵庾庳赓廒廑廛廨廪膺忄忉忖忏怃忮怄忡忤忾怅怆忪忭忸怙怵怦怛怏怍怩怫怊怿怡恸恹恻恺恂"],["e340","鉆",45,"鉵",16],["e380","銆",7,"銏",24,"恪恽悖悚悭悝悃悒悌悛惬悻悱惝惘惆惚悴愠愦愕愣惴愀愎愫慊慵憬憔憧憷懔懵忝隳闩闫闱闳闵闶闼闾阃阄阆阈阊阋阌阍阏阒阕阖阗阙阚丬爿戕氵汔汜汊沣沅沐沔沌汨汩汴汶沆沩泐泔沭泷泸泱泗沲泠泖泺泫泮沱泓泯泾"],["e440","銨",5,"銯",24,"鋉",31],["e480","鋩",32,"洹洧洌浃浈洇洄洙洎洫浍洮洵洚浏浒浔洳涑浯涞涠浞涓涔浜浠浼浣渚淇淅淞渎涿淠渑淦淝淙渖涫渌涮渫湮湎湫溲湟溆湓湔渲渥湄滟溱溘滠漭滢溥溧溽溻溷滗溴滏溏滂溟潢潆潇漤漕滹漯漶潋潴漪漉漩澉澍澌潸潲潼潺濑"],["e540","錊",51,"錿",10],["e580","鍊",31,"鍫濉澧澹澶濂濡濮濞濠濯瀚瀣瀛瀹瀵灏灞宀宄宕宓宥宸甯骞搴寤寮褰寰蹇謇辶迓迕迥迮迤迩迦迳迨逅逄逋逦逑逍逖逡逵逶逭逯遄遑遒遐遨遘遢遛暹遴遽邂邈邃邋彐彗彖彘尻咫屐屙孱屣屦羼弪弩弭艴弼鬻屮妁妃妍妩妪妣"],["e640","鍬",34,"鎐",27],["e680","鎬",29,"鏋鏌鏍妗姊妫妞妤姒妲妯姗妾娅娆姝娈姣姘姹娌娉娲娴娑娣娓婀婧婊婕娼婢婵胬媪媛婷婺媾嫫媲嫒嫔媸嫠嫣嫱嫖嫦嫘嫜嬉嬗嬖嬲嬷孀尕尜孚孥孳孑孓孢驵驷驸驺驿驽骀骁骅骈骊骐骒骓骖骘骛骜骝骟骠骢骣骥骧纟纡纣纥纨纩"],["e740","鏎",7,"鏗",54],["e780","鐎",32,"纭纰纾绀绁绂绉绋绌绐绔绗绛绠绡绨绫绮绯绱绲缍绶绺绻绾缁缂缃缇缈缋缌缏缑缒缗缙缜缛缟缡",6,"缪缫缬缭缯",4,"缵幺畿巛甾邕玎玑玮玢玟珏珂珑玷玳珀珉珈珥珙顼琊珩珧珞玺珲琏琪瑛琦琥琨琰琮琬"],["e840","鐯",14,"鐿",43,"鑬鑭鑮鑯"],["e880","鑰",20,"钑钖钘铇铏铓铔铚铦铻锜锠琛琚瑁瑜瑗瑕瑙瑷瑭瑾璜璎璀璁璇璋璞璨璩璐璧瓒璺韪韫韬杌杓杞杈杩枥枇杪杳枘枧杵枨枞枭枋杷杼柰栉柘栊柩枰栌柙枵柚枳柝栀柃枸柢栎柁柽栲栳桠桡桎桢桄桤梃栝桕桦桁桧桀栾桊桉栩梵梏桴桷梓桫棂楮棼椟椠棹"],["e940","锧锳锽镃镈镋镕镚镠镮镴镵長",7,"門",42],["e980","閫",32,"椤棰椋椁楗棣椐楱椹楠楂楝榄楫榀榘楸椴槌榇榈槎榉楦楣楹榛榧榻榫榭槔榱槁槊槟榕槠榍槿樯槭樗樘橥槲橄樾檠橐橛樵檎橹樽樨橘橼檑檐檩檗檫猷獒殁殂殇殄殒殓殍殚殛殡殪轫轭轱轲轳轵轶轸轷轹轺轼轾辁辂辄辇辋"],["ea40","闌",27,"闬闿阇阓阘阛阞阠阣",6,"阫阬阭阯阰阷阸阹阺阾陁陃陊陎陏陑陒陓陖陗"],["ea80","陘陙陚陜陝陞陠陣陥陦陫陭",4,"陳陸",12,"隇隉隊辍辎辏辘辚軎戋戗戛戟戢戡戥戤戬臧瓯瓴瓿甏甑甓攴旮旯旰昊昙杲昃昕昀炅曷昝昴昱昶昵耆晟晔晁晏晖晡晗晷暄暌暧暝暾曛曜曦曩贲贳贶贻贽赀赅赆赈赉赇赍赕赙觇觊觋觌觎觏觐觑牮犟牝牦牯牾牿犄犋犍犏犒挈挲掰"],["eb40","隌階隑隒隓隕隖隚際隝",9,"隨",7,"隱隲隴隵隷隸隺隻隿雂雃雈雊雋雐雑雓雔雖",9,"雡",6,"雫"],["eb80","雬雭雮雰雱雲雴雵雸雺電雼雽雿霂霃霅霊霋霌霐霑霒霔霕霗",4,"霝霟霠搿擘耄毪毳毽毵毹氅氇氆氍氕氘氙氚氡氩氤氪氲攵敕敫牍牒牖爰虢刖肟肜肓肼朊肽肱肫肭肴肷胧胨胩胪胛胂胄胙胍胗朐胝胫胱胴胭脍脎胲胼朕脒豚脶脞脬脘脲腈腌腓腴腙腚腱腠腩腼腽腭腧塍媵膈膂膑滕膣膪臌朦臊膻"],["ec40","霡",8,"霫霬霮霯霱霳",4,"霺霻霼霽霿",18,"靔靕靗靘靚靜靝靟靣靤靦靧靨靪",7],["ec80","靲靵靷",4,"靽",7,"鞆",4,"鞌鞎鞏鞐鞓鞕鞖鞗鞙",4,"臁膦欤欷欹歃歆歙飑飒飓飕飙飚殳彀毂觳斐齑斓於旆旄旃旌旎旒旖炀炜炖炝炻烀炷炫炱烨烊焐焓焖焯焱煳煜煨煅煲煊煸煺熘熳熵熨熠燠燔燧燹爝爨灬焘煦熹戾戽扃扈扉礻祀祆祉祛祜祓祚祢祗祠祯祧祺禅禊禚禧禳忑忐"],["ed40","鞞鞟鞡鞢鞤",6,"鞬鞮鞰鞱鞳鞵",46],["ed80","韤韥韨韮",4,"韴韷",23,"怼恝恚恧恁恙恣悫愆愍慝憩憝懋懑戆肀聿沓泶淼矶矸砀砉砗砘砑斫砭砜砝砹砺砻砟砼砥砬砣砩硎硭硖硗砦硐硇硌硪碛碓碚碇碜碡碣碲碹碥磔磙磉磬磲礅磴礓礤礞礴龛黹黻黼盱眄眍盹眇眈眚眢眙眭眦眵眸睐睑睇睃睚睨"],["ee40","頏",62],["ee80","顎",32,"睢睥睿瞍睽瞀瞌瞑瞟瞠瞰瞵瞽町畀畎畋畈畛畲畹疃罘罡罟詈罨罴罱罹羁罾盍盥蠲钅钆钇钋钊钌钍钏钐钔钗钕钚钛钜钣钤钫钪钭钬钯钰钲钴钶",4,"钼钽钿铄铈",6,"铐铑铒铕铖铗铙铘铛铞铟铠铢铤铥铧铨铪"],["ef40","顯",5,"颋颎颒颕颙颣風",37,"飏飐飔飖飗飛飜飝飠",4],["ef80","飥飦飩",30,"铩铫铮铯铳铴铵铷铹铼铽铿锃锂锆锇锉锊锍锎锏锒",4,"锘锛锝锞锟锢锪锫锩锬锱锲锴锶锷锸锼锾锿镂锵镄镅镆镉镌镎镏镒镓镔镖镗镘镙镛镞镟镝镡镢镤",8,"镯镱镲镳锺矧矬雉秕秭秣秫稆嵇稃稂稞稔"],["f040","餈",4,"餎餏餑",28,"餯",26],["f080","饊",9,"饖",12,"饤饦饳饸饹饻饾馂馃馉稹稷穑黏馥穰皈皎皓皙皤瓞瓠甬鸠鸢鸨",4,"鸲鸱鸶鸸鸷鸹鸺鸾鹁鹂鹄鹆鹇鹈鹉鹋鹌鹎鹑鹕鹗鹚鹛鹜鹞鹣鹦",6,"鹱鹭鹳疒疔疖疠疝疬疣疳疴疸痄疱疰痃痂痖痍痣痨痦痤痫痧瘃痱痼痿瘐瘀瘅瘌瘗瘊瘥瘘瘕瘙"],["f140","馌馎馚",10,"馦馧馩",47],["f180","駙",32,"瘛瘼瘢瘠癀瘭瘰瘿瘵癃瘾瘳癍癞癔癜癖癫癯翊竦穸穹窀窆窈窕窦窠窬窨窭窳衤衩衲衽衿袂袢裆袷袼裉裢裎裣裥裱褚裼裨裾裰褡褙褓褛褊褴褫褶襁襦襻疋胥皲皴矜耒耔耖耜耠耢耥耦耧耩耨耱耋耵聃聆聍聒聩聱覃顸颀颃"],["f240","駺",62],["f280","騹",32,"颉颌颍颏颔颚颛颞颟颡颢颥颦虍虔虬虮虿虺虼虻蚨蚍蚋蚬蚝蚧蚣蚪蚓蚩蚶蛄蚵蛎蚰蚺蚱蚯蛉蛏蚴蛩蛱蛲蛭蛳蛐蜓蛞蛴蛟蛘蛑蜃蜇蛸蜈蜊蜍蜉蜣蜻蜞蜥蜮蜚蜾蝈蜴蜱蜩蜷蜿螂蜢蝽蝾蝻蝠蝰蝌蝮螋蝓蝣蝼蝤蝙蝥螓螯螨蟒"],["f340","驚",17,"驲骃骉骍骎骔骕骙骦骩",6,"骲骳骴骵骹骻骽骾骿髃髄髆",4,"髍髎髏髐髒體髕髖髗髙髚髛髜"],["f380","髝髞髠髢髣髤髥髧髨髩髪髬髮髰",8,"髺髼",6,"鬄鬅鬆蟆螈螅螭螗螃螫蟥螬螵螳蟋蟓螽蟑蟀蟊蟛蟪蟠蟮蠖蠓蟾蠊蠛蠡蠹蠼缶罂罄罅舐竺竽笈笃笄笕笊笫笏筇笸笪笙笮笱笠笥笤笳笾笞筘筚筅筵筌筝筠筮筻筢筲筱箐箦箧箸箬箝箨箅箪箜箢箫箴篑篁篌篝篚篥篦篪簌篾篼簏簖簋"],["f440","鬇鬉",5,"鬐鬑鬒鬔",10,"鬠鬡鬢鬤",10,"鬰鬱鬳",7,"鬽鬾鬿魀魆魊魋魌魎魐魒魓魕",5],["f480","魛",32,"簟簪簦簸籁籀臾舁舂舄臬衄舡舢舣舭舯舨舫舸舻舳舴舾艄艉艋艏艚艟艨衾袅袈裘裟襞羝羟羧羯羰羲籼敉粑粝粜粞粢粲粼粽糁糇糌糍糈糅糗糨艮暨羿翎翕翥翡翦翩翮翳糸絷綦綮繇纛麸麴赳趄趔趑趱赧赭豇豉酊酐酎酏酤"],["f540","魼",62],["f580","鮻",32,"酢酡酰酩酯酽酾酲酴酹醌醅醐醍醑醢醣醪醭醮醯醵醴醺豕鹾趸跫踅蹙蹩趵趿趼趺跄跖跗跚跞跎跏跛跆跬跷跸跣跹跻跤踉跽踔踝踟踬踮踣踯踺蹀踹踵踽踱蹉蹁蹂蹑蹒蹊蹰蹶蹼蹯蹴躅躏躔躐躜躞豸貂貊貅貘貔斛觖觞觚觜"],["f640","鯜",62],["f680","鰛",32,"觥觫觯訾謦靓雩雳雯霆霁霈霏霎霪霭霰霾龀龃龅",5,"龌黾鼋鼍隹隼隽雎雒瞿雠銎銮鋈錾鍪鏊鎏鐾鑫鱿鲂鲅鲆鲇鲈稣鲋鲎鲐鲑鲒鲔鲕鲚鲛鲞",5,"鲥",4,"鲫鲭鲮鲰",7,"鲺鲻鲼鲽鳄鳅鳆鳇鳊鳋"],["f740","鰼",62],["f780","鱻鱽鱾鲀鲃鲄鲉鲊鲌鲏鲓鲖鲗鲘鲙鲝鲪鲬鲯鲹鲾",4,"鳈鳉鳑鳒鳚鳛鳠鳡鳌",4,"鳓鳔鳕鳗鳘鳙鳜鳝鳟鳢靼鞅鞑鞒鞔鞯鞫鞣鞲鞴骱骰骷鹘骶骺骼髁髀髅髂髋髌髑魅魃魇魉魈魍魑飨餍餮饕饔髟髡髦髯髫髻髭髹鬈鬏鬓鬟鬣麽麾縻麂麇麈麋麒鏖麝麟黛黜黝黠黟黢黩黧黥黪黯鼢鼬鼯鼹鼷鼽鼾齄"],["f840","鳣",62],["f880","鴢",32],["f940","鵃",62],["f980","鶂",32],["fa40","鶣",62],["fa80","鷢",32],["fb40","鸃",27,"鸤鸧鸮鸰鸴鸻鸼鹀鹍鹐鹒鹓鹔鹖鹙鹝鹟鹠鹡鹢鹥鹮鹯鹲鹴",9,"麀"],["fb80","麁麃麄麅麆麉麊麌",5,"麔",8,"麞麠",5,"麧麨麩麪"],["fc40","麫",8,"麵麶麷麹麺麼麿",4,"黅黆黇黈黊黋黌黐黒黓黕黖黗黙黚點黡黣黤黦黨黫黬黭黮黰",8,"黺黽黿",6],["fc80","鼆",4,"鼌鼏鼑鼒鼔鼕鼖鼘鼚",5,"鼡鼣",8,"鼭鼮鼰鼱"],["fd40","鼲",4,"鼸鼺鼼鼿",4,"齅",10,"齒",38],["fd80","齹",5,"龁龂龍",11,"龜龝龞龡",4,"郎凉秊裏隣"],["fe40","兀嗀﨎﨏﨑﨓﨔礼﨟蘒﨡﨣﨤﨧﨨﨩"]]')},166:e=>{"use strict";e.exports=JSON.parse('[["0","\\u0000",127],["8141","갂갃갅갆갋",4,"갘갞갟갡갢갣갥",6,"갮갲갳갴"],["8161","갵갶갷갺갻갽갾갿걁",9,"걌걎",5,"걕"],["8181","걖걗걙걚걛걝",18,"걲걳걵걶걹걻",4,"겂겇겈겍겎겏겑겒겓겕",6,"겞겢",5,"겫겭겮겱",6,"겺겾겿곀곂곃곅곆곇곉곊곋곍",7,"곖곘",7,"곢곣곥곦곩곫곭곮곲곴곷",4,"곾곿괁괂괃괅괇",4,"괎괐괒괓"],["8241","괔괕괖괗괙괚괛괝괞괟괡",7,"괪괫괮",5],["8261","괶괷괹괺괻괽",6,"굆굈굊",5,"굑굒굓굕굖굗"],["8281","굙",7,"굢굤",7,"굮굯굱굲굷굸굹굺굾궀궃",4,"궊궋궍궎궏궑",10,"궞",5,"궥",17,"궸",7,"귂귃귅귆귇귉",6,"귒귔",7,"귝귞귟귡귢귣귥",18],["8341","귺귻귽귾긂",5,"긊긌긎",5,"긕",7],["8361","긝",18,"긲긳긵긶긹긻긼"],["8381","긽긾긿깂깄깇깈깉깋깏깑깒깓깕깗",4,"깞깢깣깤깦깧깪깫깭깮깯깱",6,"깺깾",5,"꺆",5,"꺍",46,"꺿껁껂껃껅",6,"껎껒",5,"껚껛껝",8],["8441","껦껧껩껪껬껮",5,"껵껶껷껹껺껻껽",8],["8461","꼆꼉꼊꼋꼌꼎꼏꼑",18],["8481","꼤",7,"꼮꼯꼱꼳꼵",6,"꼾꽀꽄꽅꽆꽇꽊",5,"꽑",10,"꽞",5,"꽦",18,"꽺",5,"꾁꾂꾃꾅꾆꾇꾉",6,"꾒꾓꾔꾖",5,"꾝",26,"꾺꾻꾽꾾"],["8541","꾿꿁",5,"꿊꿌꿏",4,"꿕",6,"꿝",4],["8561","꿢",5,"꿪",5,"꿲꿳꿵꿶꿷꿹",6,"뀂뀃"],["8581","뀅",6,"뀍뀎뀏뀑뀒뀓뀕",6,"뀞",9,"뀩",26,"끆끇끉끋끍끏끐끑끒끖끘끚끛끜끞",29,"끾끿낁낂낃낅",6,"낎낐낒",5,"낛낝낞낣낤"],["8641","낥낦낧낪낰낲낶낷낹낺낻낽",6,"냆냊",5,"냒"],["8661","냓냕냖냗냙",6,"냡냢냣냤냦",10],["8681","냱",22,"넊넍넎넏넑넔넕넖넗넚넞",4,"넦넧넩넪넫넭",6,"넶넺",5,"녂녃녅녆녇녉",6,"녒녓녖녗녙녚녛녝녞녟녡",22,"녺녻녽녾녿놁놃",4,"놊놌놎놏놐놑놕놖놗놙놚놛놝"],["8741","놞",9,"놩",15],["8761","놹",18,"뇍뇎뇏뇑뇒뇓뇕"],["8781","뇖",5,"뇞뇠",7,"뇪뇫뇭뇮뇯뇱",7,"뇺뇼뇾",5,"눆눇눉눊눍",6,"눖눘눚",5,"눡",18,"눵",6,"눽",26,"뉙뉚뉛뉝뉞뉟뉡",6,"뉪",4],["8841","뉯",4,"뉶",5,"뉽",6,"늆늇늈늊",4],["8861","늏늒늓늕늖늗늛",4,"늢늤늧늨늩늫늭늮늯늱늲늳늵늶늷"],["8881","늸",15,"닊닋닍닎닏닑닓",4,"닚닜닞닟닠닡닣닧닩닪닰닱닲닶닼닽닾댂댃댅댆댇댉",6,"댒댖",5,"댝",54,"덗덙덚덝덠덡덢덣"],["8941","덦덨덪덬덭덯덲덳덵덶덷덹",6,"뎂뎆",5,"뎍"],["8961","뎎뎏뎑뎒뎓뎕",10,"뎢",5,"뎩뎪뎫뎭"],["8981","뎮",21,"돆돇돉돊돍돏돑돒돓돖돘돚돜돞돟돡돢돣돥돦돧돩",18,"돽",18,"됑",6,"됙됚됛됝됞됟됡",6,"됪됬",7,"됵",15],["8a41","둅",10,"둒둓둕둖둗둙",6,"둢둤둦"],["8a61","둧",4,"둭",18,"뒁뒂"],["8a81","뒃",4,"뒉",19,"뒞",5,"뒥뒦뒧뒩뒪뒫뒭",7,"뒶뒸뒺",5,"듁듂듃듅듆듇듉",6,"듑듒듓듔듖",5,"듞듟듡듢듥듧",4,"듮듰듲",5,"듹",26,"딖딗딙딚딝"],["8b41","딞",5,"딦딫",4,"딲딳딵딶딷딹",6,"땂땆"],["8b61","땇땈땉땊땎땏땑땒땓땕",6,"땞땢",8],["8b81","땫",52,"떢떣떥떦떧떩떬떭떮떯떲떶",4,"떾떿뗁뗂뗃뗅",6,"뗎뗒",5,"뗙",18,"뗭",18],["8c41","똀",15,"똒똓똕똖똗똙",4],["8c61","똞",6,"똦",5,"똭",6,"똵",5],["8c81","똻",12,"뙉",26,"뙥뙦뙧뙩",50,"뚞뚟뚡뚢뚣뚥",5,"뚭뚮뚯뚰뚲",16],["8d41","뛃",16,"뛕",8],["8d61","뛞",17,"뛱뛲뛳뛵뛶뛷뛹뛺"],["8d81","뛻",4,"뜂뜃뜄뜆",33,"뜪뜫뜭뜮뜱",6,"뜺뜼",7,"띅띆띇띉띊띋띍",6,"띖",9,"띡띢띣띥띦띧띩",6,"띲띴띶",5,"띾띿랁랂랃랅",6,"랎랓랔랕랚랛랝랞"],["8e41","랟랡",6,"랪랮",5,"랶랷랹",8],["8e61","럂",4,"럈럊",19],["8e81","럞",13,"럮럯럱럲럳럵",6,"럾렂",4,"렊렋렍렎렏렑",6,"렚렜렞",5,"렦렧렩렪렫렭",6,"렶렺",5,"롁롂롃롅",11,"롒롔",7,"롞롟롡롢롣롥",6,"롮롰롲",5,"롹롺롻롽",7],["8f41","뢅",7,"뢎",17],["8f61","뢠",7,"뢩",6,"뢱뢲뢳뢵뢶뢷뢹",4],["8f81","뢾뢿룂룄룆",5,"룍룎룏룑룒룓룕",7,"룞룠룢",5,"룪룫룭룮룯룱",6,"룺룼룾",5,"뤅",18,"뤙",6,"뤡",26,"뤾뤿륁륂륃륅",6,"륍륎륐륒",5],["9041","륚륛륝륞륟륡",6,"륪륬륮",5,"륶륷륹륺륻륽"],["9061","륾",5,"릆릈릋릌릏",15],["9081","릟",12,"릮릯릱릲릳릵",6,"릾맀맂",5,"맊맋맍맓",4,"맚맜맟맠맢맦맧맩맪맫맭",6,"맶맻",4,"먂",5,"먉",11,"먖",33,"먺먻먽먾먿멁멃멄멅멆"],["9141","멇멊멌멏멐멑멒멖멗멙멚멛멝",6,"멦멪",5],["9161","멲멳멵멶멷멹",9,"몆몈몉몊몋몍",5],["9181","몓",20,"몪몭몮몯몱몳",4,"몺몼몾",5,"뫅뫆뫇뫉",14,"뫚",33,"뫽뫾뫿묁묂묃묅",7,"묎묐묒",5,"묙묚묛묝묞묟묡",6],["9241","묨묪묬",7,"묷묹묺묿",4,"뭆뭈뭊뭋뭌뭎뭑뭒"],["9261","뭓뭕뭖뭗뭙",7,"뭢뭤",7,"뭭",4],["9281","뭲",21,"뮉뮊뮋뮍뮎뮏뮑",18,"뮥뮦뮧뮩뮪뮫뮭",6,"뮵뮶뮸",7,"믁믂믃믅믆믇믉",6,"믑믒믔",35,"믺믻믽믾밁"],["9341","밃",4,"밊밎밐밒밓밙밚밠밡밢밣밦밨밪밫밬밮밯밲밳밵"],["9361","밶밷밹",6,"뱂뱆뱇뱈뱊뱋뱎뱏뱑",8],["9381","뱚뱛뱜뱞",37,"벆벇벉벊벍벏",4,"벖벘벛",4,"벢벣벥벦벩",6,"벲벶",5,"벾벿볁볂볃볅",7,"볎볒볓볔볖볗볙볚볛볝",22,"볷볹볺볻볽"],["9441","볾",5,"봆봈봊",5,"봑봒봓봕",8],["9461","봞",5,"봥",6,"봭",12],["9481","봺",5,"뵁",6,"뵊뵋뵍뵎뵏뵑",6,"뵚",9,"뵥뵦뵧뵩",22,"붂붃붅붆붋",4,"붒붔붖붗붘붛붝",6,"붥",10,"붱",6,"붹",24],["9541","뷒뷓뷖뷗뷙뷚뷛뷝",11,"뷪",5,"뷱"],["9561","뷲뷳뷵뷶뷷뷹",6,"븁븂븄븆",5,"븎븏븑븒븓"],["9581","븕",6,"븞븠",35,"빆빇빉빊빋빍빏",4,"빖빘빜빝빞빟빢빣빥빦빧빩빫",4,"빲빶",4,"빾빿뺁뺂뺃뺅",6,"뺎뺒",5,"뺚",13,"뺩",14],["9641","뺸",23,"뻒뻓"],["9661","뻕뻖뻙",6,"뻡뻢뻦",5,"뻭",8],["9681","뻶",10,"뼂",5,"뼊",13,"뼚뼞",33,"뽂뽃뽅뽆뽇뽉",6,"뽒뽓뽔뽖",44],["9741","뾃",16,"뾕",8],["9761","뾞",17,"뾱",7],["9781","뾹",11,"뿆",5,"뿎뿏뿑뿒뿓뿕",6,"뿝뿞뿠뿢",89,"쀽쀾쀿"],["9841","쁀",16,"쁒",5,"쁙쁚쁛"],["9861","쁝쁞쁟쁡",6,"쁪",15],["9881","쁺",21,"삒삓삕삖삗삙",6,"삢삤삦",5,"삮삱삲삷",4,"삾샂샃샄샆샇샊샋샍샎샏샑",6,"샚샞",5,"샦샧샩샪샫샭",6,"샶샸샺",5,"섁섂섃섅섆섇섉",6,"섑섒섓섔섖",5,"섡섢섥섨섩섪섫섮"],["9941","섲섳섴섵섷섺섻섽섾섿셁",6,"셊셎",5,"셖셗"],["9961","셙셚셛셝",6,"셦셪",5,"셱셲셳셵셶셷셹셺셻"],["9981","셼",8,"솆",5,"솏솑솒솓솕솗",4,"솞솠솢솣솤솦솧솪솫솭솮솯솱",11,"솾",5,"쇅쇆쇇쇉쇊쇋쇍",6,"쇕쇖쇙",6,"쇡쇢쇣쇥쇦쇧쇩",6,"쇲쇴",7,"쇾쇿숁숂숃숅",6,"숎숐숒",5,"숚숛숝숞숡숢숣"],["9a41","숤숥숦숧숪숬숮숰숳숵",16],["9a61","쉆쉇쉉",6,"쉒쉓쉕쉖쉗쉙",6,"쉡쉢쉣쉤쉦"],["9a81","쉧",4,"쉮쉯쉱쉲쉳쉵",6,"쉾슀슂",5,"슊",5,"슑",6,"슙슚슜슞",5,"슦슧슩슪슫슮",5,"슶슸슺",33,"싞싟싡싢싥",5,"싮싰싲싳싴싵싷싺싽싾싿쌁",6,"쌊쌋쌎쌏"],["9b41","쌐쌑쌒쌖쌗쌙쌚쌛쌝",6,"쌦쌧쌪",8],["9b61","쌳",17,"썆",7],["9b81","썎",25,"썪썫썭썮썯썱썳",4,"썺썻썾",5,"쎅쎆쎇쎉쎊쎋쎍",50,"쏁",22,"쏚"],["9c41","쏛쏝쏞쏡쏣",4,"쏪쏫쏬쏮",5,"쏶쏷쏹",5],["9c61","쏿",8,"쐉",6,"쐑",9],["9c81","쐛",8,"쐥",6,"쐭쐮쐯쐱쐲쐳쐵",6,"쐾",9,"쑉",26,"쑦쑧쑩쑪쑫쑭",6,"쑶쑷쑸쑺",5,"쒁",18,"쒕",6,"쒝",12],["9d41","쒪",13,"쒹쒺쒻쒽",8],["9d61","쓆",25],["9d81","쓠",8,"쓪",5,"쓲쓳쓵쓶쓷쓹쓻쓼쓽쓾씂",9,"씍씎씏씑씒씓씕",6,"씝",10,"씪씫씭씮씯씱",6,"씺씼씾",5,"앆앇앋앏앐앑앒앖앚앛앜앟앢앣앥앦앧앩",6,"앲앶",5,"앾앿얁얂얃얅얆얈얉얊얋얎얐얒얓얔"],["9e41","얖얙얚얛얝얞얟얡",7,"얪",9,"얶"],["9e61","얷얺얿",4,"엋엍엏엒엓엕엖엗엙",6,"엢엤엦엧"],["9e81","엨엩엪엫엯엱엲엳엵엸엹엺엻옂옃옄옉옊옋옍옎옏옑",6,"옚옝",6,"옦옧옩옪옫옯옱옲옶옸옺옼옽옾옿왂왃왅왆왇왉",6,"왒왖",5,"왞왟왡",10,"왭왮왰왲",5,"왺왻왽왾왿욁",6,"욊욌욎",5,"욖욗욙욚욛욝",6,"욦"],["9f41","욨욪",5,"욲욳욵욶욷욻",4,"웂웄웆",5,"웎"],["9f61","웏웑웒웓웕",6,"웞웟웢",5,"웪웫웭웮웯웱웲"],["9f81","웳",4,"웺웻웼웾",5,"윆윇윉윊윋윍",6,"윖윘윚",5,"윢윣윥윦윧윩",6,"윲윴윶윸윹윺윻윾윿읁읂읃읅",4,"읋읎읐읙읚읛읝읞읟읡",6,"읩읪읬",7,"읶읷읹읺읻읿잀잁잂잆잋잌잍잏잒잓잕잙잛",4,"잢잧",4,"잮잯잱잲잳잵잶잷"],["a041","잸잹잺잻잾쟂",5,"쟊쟋쟍쟏쟑",6,"쟙쟚쟛쟜"],["a061","쟞",5,"쟥쟦쟧쟩쟪쟫쟭",13],["a081","쟻",4,"젂젃젅젆젇젉젋",4,"젒젔젗",4,"젞젟젡젢젣젥",6,"젮젰젲",5,"젹젺젻젽젾젿졁",6,"졊졋졎",5,"졕",26,"졲졳졵졶졷졹졻",4,"좂좄좈좉좊좎",5,"좕",7,"좞좠좢좣좤"],["a141","좥좦좧좩",18,"좾좿죀죁"],["a161","죂죃죅죆죇죉죊죋죍",6,"죖죘죚",5,"죢죣죥"],["a181","죦",14,"죶",5,"죾죿줁줂줃줇",4,"줎　、。·‥…¨〃­―∥＼∼‘’“”〔〕〈",9,"±×÷≠≤≥∞∴°′″℃Å￠￡￥♂♀∠⊥⌒∂∇≡≒§※☆★○●◎◇◆□■△▲▽▼→←↑↓↔〓≪≫√∽∝∵∫∬∈∋⊆⊇⊂⊃∪∩∧∨￢"],["a241","줐줒",5,"줙",18],["a261","줭",6,"줵",18],["a281","쥈",7,"쥒쥓쥕쥖쥗쥙",6,"쥢쥤",7,"쥭쥮쥯⇒⇔∀∃´～ˇ˘˝˚˙¸˛¡¿ː∮∑∏¤℉‰◁◀▷▶♤♠♡♥♧♣⊙◈▣◐◑▒▤▥▨▧▦▩♨☏☎☜☞¶†‡↕↗↙↖↘♭♩♪♬㉿㈜№㏇™㏂㏘℡€®"],["a341","쥱쥲쥳쥵",6,"쥽",10,"즊즋즍즎즏"],["a361","즑",6,"즚즜즞",16],["a381","즯",16,"짂짃짅짆짉짋",4,"짒짔짗짘짛！",58,"￦］",32,"￣"],["a441","짞짟짡짣짥짦짨짩짪짫짮짲",5,"짺짻짽짾짿쨁쨂쨃쨄"],["a461","쨅쨆쨇쨊쨎",5,"쨕쨖쨗쨙",12],["a481","쨦쨧쨨쨪",28,"ㄱ",93],["a541","쩇",4,"쩎쩏쩑쩒쩓쩕",6,"쩞쩢",5,"쩩쩪"],["a561","쩫",17,"쩾",5,"쪅쪆"],["a581","쪇",16,"쪙",14,"ⅰ",9],["a5b0","Ⅰ",9],["a5c1","Α",16,"Σ",6],["a5e1","α",16,"σ",6],["a641","쪨",19,"쪾쪿쫁쫂쫃쫅"],["a661","쫆",5,"쫎쫐쫒쫔쫕쫖쫗쫚",5,"쫡",6],["a681","쫨쫩쫪쫫쫭",6,"쫵",18,"쬉쬊─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂┒┑┚┙┖┕┎┍┞┟┡┢┦┧┩┪┭┮┱┲┵┶┹┺┽┾╀╁╃",7],["a741","쬋",4,"쬑쬒쬓쬕쬖쬗쬙",6,"쬢",7],["a761","쬪",22,"쭂쭃쭄"],["a781","쭅쭆쭇쭊쭋쭍쭎쭏쭑",6,"쭚쭛쭜쭞",5,"쭥",7,"㎕㎖㎗ℓ㎘㏄㎣㎤㎥㎦㎙",9,"㏊㎍㎎㎏㏏㎈㎉㏈㎧㎨㎰",9,"㎀",4,"㎺",5,"㎐",4,"Ω㏀㏁㎊㎋㎌㏖㏅㎭㎮㎯㏛㎩㎪㎫㎬㏝㏐㏓㏃㏉㏜㏆"],["a841","쭭",10,"쭺",14],["a861","쮉",18,"쮝",6],["a881","쮤",19,"쮹",11,"ÆÐªĦ"],["a8a6","Ĳ"],["a8a8","ĿŁØŒºÞŦŊ"],["a8b1","㉠",27,"ⓐ",25,"①",14,"½⅓⅔¼¾⅛⅜⅝⅞"],["a941","쯅",14,"쯕",10],["a961","쯠쯡쯢쯣쯥쯦쯨쯪",18],["a981","쯽",14,"찎찏찑찒찓찕",6,"찞찟찠찣찤æđðħıĳĸŀłøœßþŧŋŉ㈀",27,"⒜",25,"⑴",14,"¹²³⁴ⁿ₁₂₃₄"],["aa41","찥찦찪찫찭찯찱",6,"찺찿",4,"챆챇챉챊챋챍챎"],["aa61","챏",4,"챖챚",5,"챡챢챣챥챧챩",6,"챱챲"],["aa81","챳챴챶",29,"ぁ",82],["ab41","첔첕첖첗첚첛첝첞첟첡",6,"첪첮",5,"첶첷첹"],["ab61","첺첻첽",6,"쳆쳈쳊",5,"쳑쳒쳓쳕",5],["ab81","쳛",8,"쳥",6,"쳭쳮쳯쳱",12,"ァ",85],["ac41","쳾쳿촀촂",5,"촊촋촍촎촏촑",6,"촚촜촞촟촠"],["ac61","촡촢촣촥촦촧촩촪촫촭",11,"촺",4],["ac81","촿",28,"쵝쵞쵟А",5,"ЁЖ",25],["acd1","а",5,"ёж",25],["ad41","쵡쵢쵣쵥",6,"쵮쵰쵲",5,"쵹",7],["ad61","춁",6,"춉",10,"춖춗춙춚춛춝춞춟"],["ad81","춠춡춢춣춦춨춪",5,"춱",18,"췅"],["ae41","췆",5,"췍췎췏췑",16],["ae61","췢",5,"췩췪췫췭췮췯췱",6,"췺췼췾",4],["ae81","츃츅츆츇츉츊츋츍",6,"츕츖츗츘츚",5,"츢츣츥츦츧츩츪츫"],["af41","츬츭츮츯츲츴츶",19],["af61","칊",13,"칚칛칝칞칢",5,"칪칬"],["af81","칮",5,"칶칷칹칺칻칽",6,"캆캈캊",5,"캒캓캕캖캗캙"],["b041","캚",5,"캢캦",5,"캮",12],["b061","캻",5,"컂",19],["b081","컖",13,"컦컧컩컪컭",6,"컶컺",5,"가각간갇갈갉갊감",7,"같",4,"갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆"],["b141","켂켃켅켆켇켉",6,"켒켔켖",5,"켝켞켟켡켢켣"],["b161","켥",6,"켮켲",5,"켹",11],["b181","콅",14,"콖콗콙콚콛콝",6,"콦콨콪콫콬괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸"],["b241","콭콮콯콲콳콵콶콷콹",6,"쾁쾂쾃쾄쾆",5,"쾍"],["b261","쾎",18,"쾢",5,"쾩"],["b281","쾪",5,"쾱",18,"쿅",6,"깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙"],["b341","쿌",19,"쿢쿣쿥쿦쿧쿩"],["b361","쿪",5,"쿲쿴쿶",5,"쿽쿾쿿퀁퀂퀃퀅",5],["b381","퀋",5,"퀒",5,"퀙",19,"끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫",4,"낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝"],["b441","퀮",5,"퀶퀷퀹퀺퀻퀽",6,"큆큈큊",5],["b461","큑큒큓큕큖큗큙",6,"큡",10,"큮큯"],["b481","큱큲큳큵",6,"큾큿킀킂",18,"뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫",4,"닳담답닷",4,"닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥"],["b541","킕",14,"킦킧킩킪킫킭",5],["b561","킳킶킸킺",5,"탂탃탅탆탇탊",5,"탒탖",4],["b581","탛탞탟탡탢탣탥",6,"탮탲",5,"탹",11,"덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸"],["b641","턅",7,"턎",17],["b661","턠",15,"턲턳턵턶턷턹턻턼턽턾"],["b681","턿텂텆",5,"텎텏텑텒텓텕",6,"텞텠텢",5,"텩텪텫텭땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗"],["b741","텮",13,"텽",6,"톅톆톇톉톊"],["b761","톋",20,"톢톣톥톦톧"],["b781","톩",6,"톲톴톶톷톸톹톻톽톾톿퇁",14,"래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩"],["b841","퇐",7,"퇙",17],["b861","퇫",8,"퇵퇶퇷퇹",13],["b881","툈툊",5,"툑",24,"륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많",4,"맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼"],["b941","툪툫툮툯툱툲툳툵",6,"툾퉀퉂",5,"퉉퉊퉋퉌"],["b961","퉍",14,"퉝",6,"퉥퉦퉧퉨"],["b981","퉩",22,"튂튃튅튆튇튉튊튋튌묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바",4,"받",4,"밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗"],["ba41","튍튎튏튒튓튔튖",5,"튝튞튟튡튢튣튥",6,"튭"],["ba61","튮튯튰튲",5,"튺튻튽튾틁틃",4,"틊틌",5],["ba81","틒틓틕틖틗틙틚틛틝",6,"틦",9,"틲틳틵틶틷틹틺벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗빙빚빛빠빡빤"],["bb41","틻",4,"팂팄팆",5,"팏팑팒팓팕팗",4,"팞팢팣"],["bb61","팤팦팧팪팫팭팮팯팱",6,"팺팾",5,"퍆퍇퍈퍉"],["bb81","퍊",31,"빨빪빰빱빳빴빵빻빼빽뺀뺄뺌뺍뺏뺐뺑뺘뺙뺨뻐뻑뻔뻗뻘뻠뻣뻤뻥뻬뼁뼈뼉뼘뼙뼛뼜뼝뽀뽁뽄뽈뽐뽑뽕뾔뾰뿅뿌뿍뿐뿔뿜뿟뿡쀼쁑쁘쁜쁠쁨쁩삐삑삔삘삠삡삣삥사삭삯산삳살삵삶삼삽삿샀상샅새색샌샐샘샙샛샜생샤"],["bc41","퍪",17,"퍾퍿펁펂펃펅펆펇"],["bc61","펈펉펊펋펎펒",5,"펚펛펝펞펟펡",6,"펪펬펮"],["bc81","펯",4,"펵펶펷펹펺펻펽",6,"폆폇폊",5,"폑",5,"샥샨샬샴샵샷샹섀섄섈섐섕서",4,"섣설섦섧섬섭섯섰성섶세섹센셀셈셉셋셌셍셔셕션셜셤셥셧셨셩셰셴셸솅소속솎손솔솖솜솝솟송솥솨솩솬솰솽쇄쇈쇌쇔쇗쇘쇠쇤쇨쇰쇱쇳쇼쇽숀숄숌숍숏숑수숙순숟술숨숩숫숭"],["bd41","폗폙",7,"폢폤",7,"폮폯폱폲폳폵폶폷"],["bd61","폸폹폺폻폾퐀퐂",5,"퐉",13],["bd81","퐗",5,"퐞",25,"숯숱숲숴쉈쉐쉑쉔쉘쉠쉥쉬쉭쉰쉴쉼쉽쉿슁슈슉슐슘슛슝스슥슨슬슭슴습슷승시식신싣실싫심십싯싱싶싸싹싻싼쌀쌈쌉쌌쌍쌓쌔쌕쌘쌜쌤쌥쌨쌩썅써썩썬썰썲썸썹썼썽쎄쎈쎌쏀쏘쏙쏜쏟쏠쏢쏨쏩쏭쏴쏵쏸쐈쐐쐤쐬쐰"],["be41","퐸",7,"푁푂푃푅",14],["be61","푔",7,"푝푞푟푡푢푣푥",7,"푮푰푱푲"],["be81","푳",4,"푺푻푽푾풁풃",4,"풊풌풎",5,"풕",8,"쐴쐼쐽쑈쑤쑥쑨쑬쑴쑵쑹쒀쒔쒜쒸쒼쓩쓰쓱쓴쓸쓺쓿씀씁씌씐씔씜씨씩씬씰씸씹씻씽아악안앉않알앍앎앓암압앗았앙앝앞애액앤앨앰앱앳앴앵야약얀얄얇얌얍얏양얕얗얘얜얠얩어억언얹얻얼얽얾엄",6,"엌엎"],["bf41","풞",10,"풪",14],["bf61","풹",18,"퓍퓎퓏퓑퓒퓓퓕"],["bf81","퓖",5,"퓝퓞퓠",7,"퓩퓪퓫퓭퓮퓯퓱",6,"퓹퓺퓼에엑엔엘엠엡엣엥여역엮연열엶엷염",5,"옅옆옇예옌옐옘옙옛옜오옥온올옭옮옰옳옴옵옷옹옻와왁완왈왐왑왓왔왕왜왝왠왬왯왱외왹왼욀욈욉욋욍요욕욘욜욤욥욧용우욱운울욹욺움웁웃웅워웍원월웜웝웠웡웨"],["c041","퓾",5,"픅픆픇픉픊픋픍",6,"픖픘",5],["c061","픞",25],["c081","픸픹픺픻픾픿핁핂핃핅",6,"핎핐핒",5,"핚핛핝핞핟핡핢핣웩웬웰웸웹웽위윅윈윌윔윕윗윙유육윤율윰윱윳융윷으윽은을읊음읍읏응",7,"읜읠읨읫이익인일읽읾잃임입잇있잉잊잎자작잔잖잗잘잚잠잡잣잤장잦재잭잰잴잼잽잿쟀쟁쟈쟉쟌쟎쟐쟘쟝쟤쟨쟬저적전절젊"],["c141","핤핦핧핪핬핮",5,"핶핷핹핺핻핽",6,"햆햊햋"],["c161","햌햍햎햏햑",19,"햦햧"],["c181","햨",31,"점접젓정젖제젝젠젤젬젭젯젱져젼졀졈졉졌졍졔조족존졸졺좀좁좃종좆좇좋좌좍좔좝좟좡좨좼좽죄죈죌죔죕죗죙죠죡죤죵주죽준줄줅줆줌줍줏중줘줬줴쥐쥑쥔쥘쥠쥡쥣쥬쥰쥴쥼즈즉즌즐즘즙즛증지직진짇질짊짐집짓"],["c241","헊헋헍헎헏헑헓",4,"헚헜헞",5,"헦헧헩헪헫헭헮"],["c261","헯",4,"헶헸헺",5,"혂혃혅혆혇혉",6,"혒"],["c281","혖",5,"혝혞혟혡혢혣혥",7,"혮",9,"혺혻징짖짙짚짜짝짠짢짤짧짬짭짯짰짱째짹짼쨀쨈쨉쨋쨌쨍쨔쨘쨩쩌쩍쩐쩔쩜쩝쩟쩠쩡쩨쩽쪄쪘쪼쪽쫀쫄쫌쫍쫏쫑쫓쫘쫙쫠쫬쫴쬈쬐쬔쬘쬠쬡쭁쭈쭉쭌쭐쭘쭙쭝쭤쭸쭹쮜쮸쯔쯤쯧쯩찌찍찐찔찜찝찡찢찧차착찬찮찰참찹찻"],["c341","혽혾혿홁홂홃홄홆홇홊홌홎홏홐홒홓홖홗홙홚홛홝",4],["c361","홢",4,"홨홪",5,"홲홳홵",11],["c381","횁횂횄횆",5,"횎횏횑횒횓횕",7,"횞횠횢",5,"횩횪찼창찾채책챈챌챔챕챗챘챙챠챤챦챨챰챵처척천철첨첩첫첬청체첵첸첼쳄쳅쳇쳉쳐쳔쳤쳬쳰촁초촉촌촐촘촙촛총촤촨촬촹최쵠쵤쵬쵭쵯쵱쵸춈추축춘출춤춥춧충춰췄췌췐취췬췰췸췹췻췽츄츈츌츔츙츠측츤츨츰츱츳층"],["c441","횫횭횮횯횱",7,"횺횼",7,"훆훇훉훊훋"],["c461","훍훎훏훐훒훓훕훖훘훚",5,"훡훢훣훥훦훧훩",4],["c481","훮훯훱훲훳훴훶",5,"훾훿휁휂휃휅",11,"휒휓휔치칙친칟칠칡침칩칫칭카칵칸칼캄캅캇캉캐캑캔캘캠캡캣캤캥캬캭컁커컥컨컫컬컴컵컷컸컹케켁켄켈켐켑켓켕켜켠켤켬켭켯켰켱켸코콕콘콜콤콥콧콩콰콱콴콸쾀쾅쾌쾡쾨쾰쿄쿠쿡쿤쿨쿰쿱쿳쿵쿼퀀퀄퀑퀘퀭퀴퀵퀸퀼"],["c541","휕휖휗휚휛휝휞휟휡",6,"휪휬휮",5,"휶휷휹"],["c561","휺휻휽",6,"흅흆흈흊",5,"흒흓흕흚",4],["c581","흟흢흤흦흧흨흪흫흭흮흯흱흲흳흵",6,"흾흿힀힂",5,"힊힋큄큅큇큉큐큔큘큠크큭큰클큼큽킁키킥킨킬킴킵킷킹타탁탄탈탉탐탑탓탔탕태택탠탤탬탭탯탰탱탸턍터턱턴털턺텀텁텃텄텅테텍텐텔템텝텟텡텨텬텼톄톈토톡톤톨톰톱톳통톺톼퇀퇘퇴퇸툇툉툐투툭툰툴툼툽툿퉁퉈퉜"],["c641","힍힎힏힑",6,"힚힜힞",5],["c6a1","퉤튀튁튄튈튐튑튕튜튠튤튬튱트특튼튿틀틂틈틉틋틔틘틜틤틥티틱틴틸팀팁팃팅파팍팎판팔팖팜팝팟팠팡팥패팩팬팰팸팹팻팼팽퍄퍅퍼퍽펀펄펌펍펏펐펑페펙펜펠펨펩펫펭펴편펼폄폅폈평폐폘폡폣포폭폰폴폼폽폿퐁"],["c7a1","퐈퐝푀푄표푠푤푭푯푸푹푼푿풀풂품풉풋풍풔풩퓌퓐퓔퓜퓟퓨퓬퓰퓸퓻퓽프픈플픔픕픗피픽핀필핌핍핏핑하학한할핥함합핫항해핵핸핼햄햅햇했행햐향허헉헌헐헒험헙헛헝헤헥헨헬헴헵헷헹혀혁현혈혐협혓혔형혜혠"],["c8a1","혤혭호혹혼홀홅홈홉홋홍홑화확환활홧황홰홱홴횃횅회획횐횔횝횟횡효횬횰횹횻후훅훈훌훑훔훗훙훠훤훨훰훵훼훽휀휄휑휘휙휜휠휨휩휫휭휴휵휸휼흄흇흉흐흑흔흖흗흘흙흠흡흣흥흩희흰흴흼흽힁히힉힌힐힘힙힛힝"],["caa1","伽佳假價加可呵哥嘉嫁家暇架枷柯歌珂痂稼苛茄街袈訶賈跏軻迦駕刻却各恪慤殼珏脚覺角閣侃刊墾奸姦干幹懇揀杆柬桿澗癎看磵稈竿簡肝艮艱諫間乫喝曷渴碣竭葛褐蝎鞨勘坎堪嵌感憾戡敢柑橄減甘疳監瞰紺邯鑑鑒龕"],["cba1","匣岬甲胛鉀閘剛堈姜岡崗康强彊慷江畺疆糠絳綱羌腔舡薑襁講鋼降鱇介价個凱塏愷愾慨改槪漑疥皆盖箇芥蓋豈鎧開喀客坑更粳羹醵倨去居巨拒据據擧渠炬祛距踞車遽鉅鋸乾件健巾建愆楗腱虔蹇鍵騫乞傑杰桀儉劍劒檢"],["cca1","瞼鈐黔劫怯迲偈憩揭擊格檄激膈覡隔堅牽犬甄絹繭肩見譴遣鵑抉決潔結缺訣兼慊箝謙鉗鎌京俓倞傾儆勁勍卿坰境庚徑慶憬擎敬景暻更梗涇炅烱璟璥瓊痙硬磬竟競絅經耕耿脛莖警輕逕鏡頃頸驚鯨係啓堺契季屆悸戒桂械"],["cda1","棨溪界癸磎稽系繫繼計誡谿階鷄古叩告呱固姑孤尻庫拷攷故敲暠枯槁沽痼皐睾稿羔考股膏苦苽菰藁蠱袴誥賈辜錮雇顧高鼓哭斛曲梏穀谷鵠困坤崑昆梱棍滾琨袞鯤汨滑骨供公共功孔工恐恭拱控攻珙空蚣貢鞏串寡戈果瓜"],["cea1","科菓誇課跨過鍋顆廓槨藿郭串冠官寬慣棺款灌琯瓘管罐菅觀貫關館刮恝括适侊光匡壙廣曠洸炚狂珖筐胱鑛卦掛罫乖傀塊壞怪愧拐槐魁宏紘肱轟交僑咬喬嬌嶠巧攪敎校橋狡皎矯絞翹膠蕎蛟較轎郊餃驕鮫丘久九仇俱具勾"],["cfa1","區口句咎嘔坵垢寇嶇廐懼拘救枸柩構歐毆毬求溝灸狗玖球瞿矩究絿耉臼舅舊苟衢謳購軀逑邱鉤銶駒驅鳩鷗龜國局菊鞠鞫麴君窘群裙軍郡堀屈掘窟宮弓穹窮芎躬倦券勸卷圈拳捲權淃眷厥獗蕨蹶闕机櫃潰詭軌饋句晷歸貴"],["d0a1","鬼龜叫圭奎揆槻珪硅窺竅糾葵規赳逵閨勻均畇筠菌鈞龜橘克剋劇戟棘極隙僅劤勤懃斤根槿瑾筋芹菫覲謹近饉契今妗擒昑檎琴禁禽芩衾衿襟金錦伋及急扱汲級給亘兢矜肯企伎其冀嗜器圻基埼夔奇妓寄岐崎己幾忌技旗旣"],["d1a1","朞期杞棋棄機欺氣汽沂淇玘琦琪璂璣畸畿碁磯祁祇祈祺箕紀綺羈耆耭肌記譏豈起錡錤飢饑騎騏驥麒緊佶吉拮桔金喫儺喇奈娜懦懶拏拿癩",5,"那樂",4,"諾酪駱亂卵暖欄煖爛蘭難鸞捏捺南嵐枏楠湳濫男藍襤拉"],["d2a1","納臘蠟衲囊娘廊",4,"乃來內奈柰耐冷女年撚秊念恬拈捻寧寗努勞奴弩怒擄櫓爐瑙盧",5,"駑魯",10,"濃籠聾膿農惱牢磊腦賂雷尿壘",7,"嫩訥杻紐勒",5,"能菱陵尼泥匿溺多茶"],["d3a1","丹亶但單團壇彖斷旦檀段湍短端簞緞蛋袒鄲鍛撻澾獺疸達啖坍憺擔曇淡湛潭澹痰聃膽蕁覃談譚錟沓畓答踏遝唐堂塘幢戇撞棠當糖螳黨代垈坮大對岱帶待戴擡玳臺袋貸隊黛宅德悳倒刀到圖堵塗導屠島嶋度徒悼挑掉搗桃"],["d4a1","棹櫂淘渡滔濤燾盜睹禱稻萄覩賭跳蹈逃途道都鍍陶韜毒瀆牘犢獨督禿篤纛讀墩惇敦旽暾沌焞燉豚頓乭突仝冬凍動同憧東桐棟洞潼疼瞳童胴董銅兜斗杜枓痘竇荳讀豆逗頭屯臀芚遁遯鈍得嶝橙燈登等藤謄鄧騰喇懶拏癩羅"],["d5a1","蘿螺裸邏樂洛烙珞絡落諾酪駱丹亂卵欄欒瀾爛蘭鸞剌辣嵐擥攬欖濫籃纜藍襤覽拉臘蠟廊朗浪狼琅瑯螂郞來崍徠萊冷掠略亮倆兩凉梁樑粮粱糧良諒輛量侶儷勵呂廬慮戾旅櫚濾礪藜蠣閭驢驪麗黎力曆歷瀝礫轢靂憐戀攣漣"],["d6a1","煉璉練聯蓮輦連鍊冽列劣洌烈裂廉斂殮濂簾獵令伶囹寧岺嶺怜玲笭羚翎聆逞鈴零靈領齡例澧禮醴隷勞怒撈擄櫓潞瀘爐盧老蘆虜路輅露魯鷺鹵碌祿綠菉錄鹿麓論壟弄朧瀧瓏籠聾儡瀨牢磊賂賚賴雷了僚寮廖料燎療瞭聊蓼"],["d7a1","遼鬧龍壘婁屢樓淚漏瘻累縷蔞褸鏤陋劉旒柳榴流溜瀏琉瑠留瘤硫謬類六戮陸侖倫崙淪綸輪律慄栗率隆勒肋凜凌楞稜綾菱陵俚利厘吏唎履悧李梨浬犁狸理璃異痢籬罹羸莉裏裡里釐離鯉吝潾燐璘藺躪隣鱗麟林淋琳臨霖砬"],["d8a1","立笠粒摩瑪痲碼磨馬魔麻寞幕漠膜莫邈万卍娩巒彎慢挽晩曼滿漫灣瞞萬蔓蠻輓饅鰻唜抹末沫茉襪靺亡妄忘忙望網罔芒茫莽輞邙埋妹媒寐昧枚梅每煤罵買賣邁魅脈貊陌驀麥孟氓猛盲盟萌冪覓免冕勉棉沔眄眠綿緬面麵滅"],["d9a1","蔑冥名命明暝椧溟皿瞑茗蓂螟酩銘鳴袂侮冒募姆帽慕摸摹暮某模母毛牟牡瑁眸矛耗芼茅謀謨貌木沐牧目睦穆鶩歿沒夢朦蒙卯墓妙廟描昴杳渺猫竗苗錨務巫憮懋戊拇撫无楙武毋無珷畝繆舞茂蕪誣貿霧鵡墨默們刎吻問文"],["daa1","汶紊紋聞蚊門雯勿沕物味媚尾嵋彌微未梶楣渼湄眉米美薇謎迷靡黴岷悶愍憫敏旻旼民泯玟珉緡閔密蜜謐剝博拍搏撲朴樸泊珀璞箔粕縛膊舶薄迫雹駁伴半反叛拌搬攀斑槃泮潘班畔瘢盤盼磐磻礬絆般蟠返頒飯勃拔撥渤潑"],["dba1","發跋醱鉢髮魃倣傍坊妨尨幇彷房放方旁昉枋榜滂磅紡肪膀舫芳蒡蚌訪謗邦防龐倍俳北培徘拜排杯湃焙盃背胚裴裵褙賠輩配陪伯佰帛柏栢白百魄幡樊煩燔番磻繁蕃藩飜伐筏罰閥凡帆梵氾汎泛犯範范法琺僻劈壁擘檗璧癖"],["dca1","碧蘗闢霹便卞弁變辨辯邊別瞥鱉鼈丙倂兵屛幷昞昺柄棅炳甁病秉竝輧餠騈保堡報寶普步洑湺潽珤甫菩補褓譜輔伏僕匐卜宓復服福腹茯蔔複覆輹輻馥鰒本乶俸奉封峯峰捧棒烽熢琫縫蓬蜂逢鋒鳳不付俯傅剖副否咐埠夫婦"],["dda1","孚孵富府復扶敷斧浮溥父符簿缶腐腑膚艀芙莩訃負賦賻赴趺部釜阜附駙鳧北分吩噴墳奔奮忿憤扮昐汾焚盆粉糞紛芬賁雰不佛弗彿拂崩朋棚硼繃鵬丕備匕匪卑妃婢庇悲憊扉批斐枇榧比毖毗毘沸泌琵痺砒碑秕秘粃緋翡肥"],["dea1","脾臂菲蜚裨誹譬費鄙非飛鼻嚬嬪彬斌檳殯浜濱瀕牝玭貧賓頻憑氷聘騁乍事些仕伺似使俟僿史司唆嗣四士奢娑寫寺射巳師徙思捨斜斯柶査梭死沙泗渣瀉獅砂社祀祠私篩紗絲肆舍莎蓑蛇裟詐詞謝賜赦辭邪飼駟麝削數朔索"],["dfa1","傘刪山散汕珊産疝算蒜酸霰乷撒殺煞薩三參杉森渗芟蔘衫揷澁鈒颯上傷像償商喪嘗孀尙峠常床庠廂想桑橡湘爽牀狀相祥箱翔裳觴詳象賞霜塞璽賽嗇塞穡索色牲生甥省笙墅壻嶼序庶徐恕抒捿敍暑曙書栖棲犀瑞筮絮緖署"],["e0a1","胥舒薯西誓逝鋤黍鼠夕奭席惜昔晳析汐淅潟石碩蓆釋錫仙僊先善嬋宣扇敾旋渲煽琁瑄璇璿癬禪線繕羨腺膳船蘚蟬詵跣選銑鐥饍鮮卨屑楔泄洩渫舌薛褻設說雪齧剡暹殲纖蟾贍閃陝攝涉燮葉城姓宬性惺成星晟猩珹盛省筬"],["e1a1","聖聲腥誠醒世勢歲洗稅笹細說貰召嘯塑宵小少巢所掃搔昭梳沼消溯瀟炤燒甦疏疎瘙笑篠簫素紹蔬蕭蘇訴逍遡邵銷韶騷俗屬束涑粟續謖贖速孫巽損蓀遜飡率宋悚松淞訟誦送頌刷殺灑碎鎖衰釗修受嗽囚垂壽嫂守岫峀帥愁"],["e2a1","戍手授搜收數樹殊水洙漱燧狩獸琇璲瘦睡秀穗竪粹綏綬繡羞脩茱蒐蓚藪袖誰讐輸遂邃酬銖銹隋隧隨雖需須首髓鬚叔塾夙孰宿淑潚熟琡璹肅菽巡徇循恂旬栒楯橓殉洵淳珣盾瞬筍純脣舜荀蓴蕣詢諄醇錞順馴戌術述鉥崇崧"],["e3a1","嵩瑟膝蝨濕拾習褶襲丞乘僧勝升承昇繩蠅陞侍匙嘶始媤尸屎屍市弑恃施是時枾柴猜矢示翅蒔蓍視試詩諡豕豺埴寔式息拭植殖湜熄篒蝕識軾食飾伸侁信呻娠宸愼新晨燼申神紳腎臣莘薪藎蜃訊身辛辰迅失室實悉審尋心沁"],["e4a1","沈深瀋甚芯諶什十拾雙氏亞俄兒啞娥峨我牙芽莪蛾衙訝阿雅餓鴉鵝堊岳嶽幄惡愕握樂渥鄂鍔顎鰐齷安岸按晏案眼雁鞍顔鮟斡謁軋閼唵岩巖庵暗癌菴闇壓押狎鴨仰央怏昻殃秧鴦厓哀埃崖愛曖涯碍艾隘靄厄扼掖液縊腋額"],["e5a1","櫻罌鶯鸚也倻冶夜惹揶椰爺耶若野弱掠略約若葯蒻藥躍亮佯兩凉壤孃恙揚攘敭暘梁楊樣洋瀁煬痒瘍禳穰糧羊良襄諒讓釀陽量養圄御於漁瘀禦語馭魚齬億憶抑檍臆偃堰彦焉言諺孼蘖俺儼嚴奄掩淹嶪業円予余勵呂女如廬"],["e6a1","旅歟汝濾璵礖礪與艅茹輿轝閭餘驪麗黎亦力域役易曆歷疫繹譯轢逆驛嚥堧姸娟宴年延憐戀捐挻撚椽沇沿涎涓淵演漣烟然煙煉燃燕璉硏硯秊筵緣練縯聯衍軟輦蓮連鉛鍊鳶列劣咽悅涅烈熱裂說閱厭廉念捻染殮炎焰琰艶苒"],["e7a1","簾閻髥鹽曄獵燁葉令囹塋寧嶺嶸影怜映暎楹榮永泳渶潁濚瀛瀯煐營獰玲瑛瑩瓔盈穎纓羚聆英詠迎鈴鍈零霙靈領乂倪例刈叡曳汭濊猊睿穢芮藝蘂禮裔詣譽豫醴銳隸霓預五伍俉傲午吾吳嗚塢墺奧娛寤悟惡懊敖旿晤梧汚澳"],["e8a1","烏熬獒筽蜈誤鰲鼇屋沃獄玉鈺溫瑥瘟穩縕蘊兀壅擁瓮甕癰翁邕雍饔渦瓦窩窪臥蛙蝸訛婉完宛梡椀浣玩琓琬碗緩翫脘腕莞豌阮頑曰往旺枉汪王倭娃歪矮外嵬巍猥畏了僚僥凹堯夭妖姚寥寮尿嶢拗搖撓擾料曜樂橈燎燿瑤療"],["e9a1","窈窯繇繞耀腰蓼蟯要謠遙遼邀饒慾欲浴縟褥辱俑傭冗勇埇墉容庸慂榕涌湧溶熔瑢用甬聳茸蓉踊鎔鏞龍于佑偶優又友右宇寓尤愚憂旴牛玗瑀盂祐禑禹紆羽芋藕虞迂遇郵釪隅雨雩勖彧旭昱栯煜稶郁頊云暈橒殞澐熉耘芸蕓"],["eaa1","運隕雲韻蔚鬱亐熊雄元原員圓園垣媛嫄寃怨愿援沅洹湲源爰猿瑗苑袁轅遠阮院願鴛月越鉞位偉僞危圍委威尉慰暐渭爲瑋緯胃萎葦蔿蝟衛褘謂違韋魏乳侑儒兪劉唯喩孺宥幼幽庾悠惟愈愉揄攸有杻柔柚柳楡楢油洧流游溜"],["eba1","濡猶猷琉瑜由留癒硫紐維臾萸裕誘諛諭踰蹂遊逾遺酉釉鍮類六堉戮毓肉育陸倫允奫尹崙淪潤玧胤贇輪鈗閏律慄栗率聿戎瀜絨融隆垠恩慇殷誾銀隱乙吟淫蔭陰音飮揖泣邑凝應膺鷹依倚儀宜意懿擬椅毅疑矣義艤薏蟻衣誼"],["eca1","議醫二以伊利吏夷姨履已弛彛怡易李梨泥爾珥理異痍痢移罹而耳肄苡荑裏裡貽貳邇里離飴餌匿溺瀷益翊翌翼謚人仁刃印吝咽因姻寅引忍湮燐璘絪茵藺蚓認隣靭靷鱗麟一佚佾壹日溢逸鎰馹任壬妊姙恁林淋稔臨荏賃入卄"],["eda1","立笠粒仍剩孕芿仔刺咨姉姿子字孜恣慈滋炙煮玆瓷疵磁紫者自茨蔗藉諮資雌作勺嚼斫昨灼炸爵綽芍酌雀鵲孱棧殘潺盞岑暫潛箴簪蠶雜丈仗匠場墻壯奬將帳庄張掌暲杖樟檣欌漿牆狀獐璋章粧腸臟臧莊葬蔣薔藏裝贓醬長"],["eea1","障再哉在宰才材栽梓渽滓災縡裁財載齋齎爭箏諍錚佇低儲咀姐底抵杵楮樗沮渚狙猪疽箸紵苧菹著藷詛貯躇這邸雎齟勣吊嫡寂摘敵滴狄炙的積笛籍績翟荻謫賊赤跡蹟迪迹適鏑佃佺傳全典前剪塡塼奠專展廛悛戰栓殿氈澱"],["efa1","煎琠田甸畑癲筌箋箭篆纏詮輾轉鈿銓錢鐫電顚顫餞切截折浙癤竊節絶占岾店漸点粘霑鮎點接摺蝶丁井亭停偵呈姃定幀庭廷征情挺政整旌晶晸柾楨檉正汀淀淨渟湞瀞炡玎珽町睛碇禎程穽精綎艇訂諪貞鄭酊釘鉦鋌錠霆靖"],["f0a1","靜頂鼎制劑啼堤帝弟悌提梯濟祭第臍薺製諸蹄醍除際霽題齊俎兆凋助嘲弔彫措操早晁曺曹朝條棗槽漕潮照燥爪璪眺祖祚租稠窕粗糟組繰肇藻蚤詔調趙躁造遭釣阻雕鳥族簇足鏃存尊卒拙猝倧宗從悰慫棕淙琮種終綜縱腫"],["f1a1","踪踵鍾鐘佐坐左座挫罪主住侏做姝胄呪周嗾奏宙州廚晝朱柱株注洲湊澍炷珠疇籌紂紬綢舟蛛註誅走躊輳週酎酒鑄駐竹粥俊儁准埈寯峻晙樽浚準濬焌畯竣蠢逡遵雋駿茁中仲衆重卽櫛楫汁葺增憎曾拯烝甑症繒蒸證贈之只"],["f2a1","咫地址志持指摯支旨智枝枳止池沚漬知砥祉祗紙肢脂至芝芷蜘誌識贄趾遲直稙稷織職唇嗔塵振搢晉晋桭榛殄津溱珍瑨璡畛疹盡眞瞋秦縉縝臻蔯袗診賑軫辰進鎭陣陳震侄叱姪嫉帙桎瓆疾秩窒膣蛭質跌迭斟朕什執潗緝輯"],["f3a1","鏶集徵懲澄且侘借叉嗟嵯差次此磋箚茶蹉車遮捉搾着窄錯鑿齪撰澯燦璨瓚竄簒纂粲纘讚贊鑽餐饌刹察擦札紮僭參塹慘慙懺斬站讒讖倉倡創唱娼廠彰愴敞昌昶暢槍滄漲猖瘡窓脹艙菖蒼債埰寀寨彩採砦綵菜蔡采釵冊柵策"],["f4a1","責凄妻悽處倜刺剔尺慽戚拓擲斥滌瘠脊蹠陟隻仟千喘天川擅泉淺玔穿舛薦賤踐遷釧闡阡韆凸哲喆徹撤澈綴輟轍鐵僉尖沾添甛瞻簽籤詹諂堞妾帖捷牒疊睫諜貼輒廳晴淸聽菁請靑鯖切剃替涕滯締諦逮遞體初剿哨憔抄招梢"],["f5a1","椒楚樵炒焦硝礁礎秒稍肖艸苕草蕉貂超酢醋醮促囑燭矗蜀觸寸忖村邨叢塚寵悤憁摠總聰蔥銃撮催崔最墜抽推椎楸樞湫皺秋芻萩諏趨追鄒酋醜錐錘鎚雛騶鰍丑畜祝竺筑築縮蓄蹙蹴軸逐春椿瑃出朮黜充忠沖蟲衝衷悴膵萃"],["f6a1","贅取吹嘴娶就炊翠聚脆臭趣醉驟鷲側仄厠惻測層侈値嗤峙幟恥梔治淄熾痔痴癡稚穉緇緻置致蚩輜雉馳齒則勅飭親七柒漆侵寢枕沈浸琛砧針鍼蟄秤稱快他咤唾墮妥惰打拖朶楕舵陀馱駝倬卓啄坼度托拓擢晫柝濁濯琢琸託"],["f7a1","鐸呑嘆坦彈憚歎灘炭綻誕奪脫探眈耽貪塔搭榻宕帑湯糖蕩兌台太怠態殆汰泰笞胎苔跆邰颱宅擇澤撑攄兎吐土討慟桶洞痛筒統通堆槌腿褪退頹偸套妬投透鬪慝特闖坡婆巴把播擺杷波派爬琶破罷芭跛頗判坂板版瓣販辦鈑"],["f8a1","阪八叭捌佩唄悖敗沛浿牌狽稗覇貝彭澎烹膨愎便偏扁片篇編翩遍鞭騙貶坪平枰萍評吠嬖幣廢弊斃肺蔽閉陛佈包匍匏咆哺圃布怖抛抱捕暴泡浦疱砲胞脯苞葡蒲袍褒逋鋪飽鮑幅暴曝瀑爆輻俵剽彪慓杓標漂瓢票表豹飇飄驃"],["f9a1","品稟楓諷豊風馮彼披疲皮被避陂匹弼必泌珌畢疋筆苾馝乏逼下何厦夏廈昰河瑕荷蝦賀遐霞鰕壑學虐謔鶴寒恨悍旱汗漢澣瀚罕翰閑閒限韓割轄函含咸啣喊檻涵緘艦銜陷鹹合哈盒蛤閤闔陜亢伉姮嫦巷恒抗杭桁沆港缸肛航"],["faa1","行降項亥偕咳垓奚孩害懈楷海瀣蟹解該諧邂駭骸劾核倖幸杏荇行享向嚮珦鄕響餉饗香噓墟虛許憲櫶獻軒歇險驗奕爀赫革俔峴弦懸晛泫炫玄玹現眩睍絃絢縣舷衒見賢鉉顯孑穴血頁嫌俠協夾峽挾浹狹脅脇莢鋏頰亨兄刑型"],["fba1","形泂滎瀅灐炯熒珩瑩荊螢衡逈邢鎣馨兮彗惠慧暳蕙蹊醯鞋乎互呼壕壺好岵弧戶扈昊晧毫浩淏湖滸澔濠濩灝狐琥瑚瓠皓祜糊縞胡芦葫蒿虎號蝴護豪鎬頀顥惑或酷婚昏混渾琿魂忽惚笏哄弘汞泓洪烘紅虹訌鴻化和嬅樺火畵"],["fca1","禍禾花華話譁貨靴廓擴攫確碻穫丸喚奐宦幻患換歡晥桓渙煥環紈還驩鰥活滑猾豁闊凰幌徨恍惶愰慌晃晄榥況湟滉潢煌璜皇篁簧荒蝗遑隍黃匯回廻徊恢悔懷晦會檜淮澮灰獪繪膾茴蛔誨賄劃獲宖橫鐄哮嚆孝效斅曉梟涍淆"],["fda1","爻肴酵驍侯候厚后吼喉嗅帿後朽煦珝逅勛勳塤壎焄熏燻薰訓暈薨喧暄煊萱卉喙毁彙徽揮暉煇諱輝麾休携烋畦虧恤譎鷸兇凶匈洶胸黑昕欣炘痕吃屹紇訖欠欽歆吸恰洽翕興僖凞喜噫囍姬嬉希憙憘戱晞曦熙熹熺犧禧稀羲詰"]]')},324:e=>{"use strict";e.exports=JSON.parse('[["0","\\u0000",127],["a140","　，、。．‧；：？！︰…‥﹐﹑﹒·﹔﹕﹖﹗｜–︱—︳╴︴﹏（）︵︶｛｝︷︸〔〕︹︺【】︻︼《》︽︾〈〉︿﹀「」﹁﹂『』﹃﹄﹙﹚"],["a1a1","﹛﹜﹝﹞‘’“”〝〞‵′＃＆＊※§〃○●△▲◎☆★◇◆□■▽▼㊣℅¯￣＿ˍ﹉﹊﹍﹎﹋﹌﹟﹠﹡＋－×÷±√＜＞＝≦≧≠∞≒≡﹢",4,"～∩∪⊥∠∟⊿㏒㏑∫∮∵∴♀♂⊕⊙↑↓←→↖↗↙↘∥∣／"],["a240","＼∕﹨＄￥〒￠￡％＠℃℉﹩﹪﹫㏕㎜㎝㎞㏎㎡㎎㎏㏄°兙兛兞兝兡兣嗧瓩糎▁",7,"▏▎▍▌▋▊▉┼┴┬┤├▔─│▕┌┐└┘╭"],["a2a1","╮╰╯═╞╪╡◢◣◥◤╱╲╳０",9,"Ⅰ",9,"〡",8,"十卄卅Ａ",25,"ａ",21],["a340","ｗｘｙｚΑ",16,"Σ",6,"α",16,"σ",6,"ㄅ",10],["a3a1","ㄐ",25,"˙ˉˊˇˋ"],["a3e1","€"],["a440","一乙丁七乃九了二人儿入八几刀刁力匕十卜又三下丈上丫丸凡久么也乞于亡兀刃勺千叉口土士夕大女子孑孓寸小尢尸山川工己已巳巾干廾弋弓才"],["a4a1","丑丐不中丰丹之尹予云井互五亢仁什仃仆仇仍今介仄元允內六兮公冗凶分切刈勻勾勿化匹午升卅卞厄友及反壬天夫太夭孔少尤尺屯巴幻廿弔引心戈戶手扎支文斗斤方日曰月木欠止歹毋比毛氏水火爪父爻片牙牛犬王丙"],["a540","世丕且丘主乍乏乎以付仔仕他仗代令仙仞充兄冉冊冬凹出凸刊加功包匆北匝仟半卉卡占卯卮去可古右召叮叩叨叼司叵叫另只史叱台句叭叻四囚外"],["a5a1","央失奴奶孕它尼巨巧左市布平幼弁弘弗必戊打扔扒扑斥旦朮本未末札正母民氐永汁汀氾犯玄玉瓜瓦甘生用甩田由甲申疋白皮皿目矛矢石示禾穴立丞丟乒乓乩亙交亦亥仿伉伙伊伕伍伐休伏仲件任仰仳份企伋光兇兆先全"],["a640","共再冰列刑划刎刖劣匈匡匠印危吉吏同吊吐吁吋各向名合吃后吆吒因回囝圳地在圭圬圯圩夙多夷夸妄奸妃好她如妁字存宇守宅安寺尖屹州帆并年"],["a6a1","式弛忙忖戎戌戍成扣扛托收早旨旬旭曲曳有朽朴朱朵次此死氖汝汗汙江池汐汕污汛汍汎灰牟牝百竹米糸缶羊羽老考而耒耳聿肉肋肌臣自至臼舌舛舟艮色艾虫血行衣西阡串亨位住佇佗佞伴佛何估佐佑伽伺伸佃佔似但佣"],["a740","作你伯低伶余佝佈佚兌克免兵冶冷別判利刪刨劫助努劬匣即卵吝吭吞吾否呎吧呆呃吳呈呂君吩告吹吻吸吮吵吶吠吼呀吱含吟听囪困囤囫坊坑址坍"],["a7a1","均坎圾坐坏圻壯夾妝妒妨妞妣妙妖妍妤妓妊妥孝孜孚孛完宋宏尬局屁尿尾岐岑岔岌巫希序庇床廷弄弟彤形彷役忘忌志忍忱快忸忪戒我抄抗抖技扶抉扭把扼找批扳抒扯折扮投抓抑抆改攻攸旱更束李杏材村杜杖杞杉杆杠"],["a840","杓杗步每求汞沙沁沈沉沅沛汪決沐汰沌汨沖沒汽沃汲汾汴沆汶沍沔沘沂灶灼災灸牢牡牠狄狂玖甬甫男甸皂盯矣私秀禿究系罕肖肓肝肘肛肚育良芒"],["a8a1","芋芍見角言谷豆豕貝赤走足身車辛辰迂迆迅迄巡邑邢邪邦那酉釆里防阮阱阪阬並乖乳事些亞享京佯依侍佳使佬供例來侃佰併侈佩佻侖佾侏侑佺兔兒兕兩具其典冽函刻券刷刺到刮制剁劾劻卒協卓卑卦卷卸卹取叔受味呵"],["a940","咖呸咕咀呻呷咄咒咆呼咐呱呶和咚呢周咋命咎固垃坷坪坩坡坦坤坼夜奉奇奈奄奔妾妻委妹妮姑姆姐姍始姓姊妯妳姒姅孟孤季宗定官宜宙宛尚屈居"],["a9a1","屆岷岡岸岩岫岱岳帘帚帖帕帛帑幸庚店府底庖延弦弧弩往征彿彼忝忠忽念忿怏怔怯怵怖怪怕怡性怩怫怛或戕房戾所承拉拌拄抿拂抹拒招披拓拔拋拈抨抽押拐拙拇拍抵拚抱拘拖拗拆抬拎放斧於旺昔易昌昆昂明昀昏昕昊"],["aa40","昇服朋杭枋枕東果杳杷枇枝林杯杰板枉松析杵枚枓杼杪杲欣武歧歿氓氛泣注泳沱泌泥河沽沾沼波沫法泓沸泄油況沮泗泅泱沿治泡泛泊沬泯泜泖泠"],["aaa1","炕炎炒炊炙爬爭爸版牧物狀狎狙狗狐玩玨玟玫玥甽疝疙疚的盂盲直知矽社祀祁秉秈空穹竺糾罔羌羋者肺肥肢肱股肫肩肴肪肯臥臾舍芳芝芙芭芽芟芹花芬芥芯芸芣芰芾芷虎虱初表軋迎返近邵邸邱邶采金長門阜陀阿阻附"],["ab40","陂隹雨青非亟亭亮信侵侯便俠俑俏保促侶俘俟俊俗侮俐俄係俚俎俞侷兗冒冑冠剎剃削前剌剋則勇勉勃勁匍南卻厚叛咬哀咨哎哉咸咦咳哇哂咽咪品"],["aba1","哄哈咯咫咱咻咩咧咿囿垂型垠垣垢城垮垓奕契奏奎奐姜姘姿姣姨娃姥姪姚姦威姻孩宣宦室客宥封屎屏屍屋峙峒巷帝帥帟幽庠度建弈弭彥很待徊律徇後徉怒思怠急怎怨恍恰恨恢恆恃恬恫恪恤扁拜挖按拼拭持拮拽指拱拷"],["ac40","拯括拾拴挑挂政故斫施既春昭映昧是星昨昱昤曷柿染柱柔某柬架枯柵柩柯柄柑枴柚查枸柏柞柳枰柙柢柝柒歪殃殆段毒毗氟泉洋洲洪流津洌洱洞洗"],["aca1","活洽派洶洛泵洹洧洸洩洮洵洎洫炫為炳炬炯炭炸炮炤爰牲牯牴狩狠狡玷珊玻玲珍珀玳甚甭畏界畎畋疫疤疥疢疣癸皆皇皈盈盆盃盅省盹相眉看盾盼眇矜砂研砌砍祆祉祈祇禹禺科秒秋穿突竿竽籽紂紅紀紉紇約紆缸美羿耄"],["ad40","耐耍耑耶胖胥胚胃胄背胡胛胎胞胤胝致舢苧范茅苣苛苦茄若茂茉苒苗英茁苜苔苑苞苓苟苯茆虐虹虻虺衍衫要觔計訂訃貞負赴赳趴軍軌述迦迢迪迥"],["ada1","迭迫迤迨郊郎郁郃酋酊重閂限陋陌降面革韋韭音頁風飛食首香乘亳倌倍倣俯倦倥俸倩倖倆值借倚倒們俺倀倔倨俱倡個候倘俳修倭倪俾倫倉兼冤冥冢凍凌准凋剖剜剔剛剝匪卿原厝叟哨唐唁唷哼哥哲唆哺唔哩哭員唉哮哪"],["ae40","哦唧唇哽唏圃圄埂埔埋埃堉夏套奘奚娑娘娜娟娛娓姬娠娣娩娥娌娉孫屘宰害家宴宮宵容宸射屑展屐峭峽峻峪峨峰島崁峴差席師庫庭座弱徒徑徐恙"],["aea1","恣恥恐恕恭恩息悄悟悚悍悔悌悅悖扇拳挈拿捎挾振捕捂捆捏捉挺捐挽挪挫挨捍捌效敉料旁旅時晉晏晃晒晌晅晁書朔朕朗校核案框桓根桂桔栩梳栗桌桑栽柴桐桀格桃株桅栓栘桁殊殉殷氣氧氨氦氤泰浪涕消涇浦浸海浙涓"],["af40","浬涉浮浚浴浩涌涊浹涅浥涔烊烘烤烙烈烏爹特狼狹狽狸狷玆班琉珮珠珪珞畔畝畜畚留疾病症疲疳疽疼疹痂疸皋皰益盍盎眩真眠眨矩砰砧砸砝破砷"],["afa1","砥砭砠砟砲祕祐祠祟祖神祝祗祚秤秣秧租秦秩秘窄窈站笆笑粉紡紗紋紊素索純紐紕級紜納紙紛缺罟羔翅翁耆耘耕耙耗耽耿胱脂胰脅胭胴脆胸胳脈能脊胼胯臭臬舀舐航舫舨般芻茫荒荔荊茸荐草茵茴荏茲茹茶茗荀茱茨荃"],["b040","虔蚊蚪蚓蚤蚩蚌蚣蚜衰衷袁袂衽衹記訐討訌訕訊託訓訖訏訑豈豺豹財貢起躬軒軔軏辱送逆迷退迺迴逃追逅迸邕郡郝郢酒配酌釘針釗釜釙閃院陣陡"],["b0a1","陛陝除陘陞隻飢馬骨高鬥鬲鬼乾偺偽停假偃偌做偉健偶偎偕偵側偷偏倏偯偭兜冕凰剪副勒務勘動匐匏匙匿區匾參曼商啪啦啄啞啡啃啊唱啖問啕唯啤唸售啜唬啣唳啁啗圈國圉域堅堊堆埠埤基堂堵執培夠奢娶婁婉婦婪婀"],["b140","娼婢婚婆婊孰寇寅寄寂宿密尉專將屠屜屝崇崆崎崛崖崢崑崩崔崙崤崧崗巢常帶帳帷康庸庶庵庾張強彗彬彩彫得徙從徘御徠徜恿患悉悠您惋悴惦悽"],["b1a1","情悻悵惜悼惘惕惆惟悸惚惇戚戛扈掠控捲掖探接捷捧掘措捱掩掉掃掛捫推掄授掙採掬排掏掀捻捩捨捺敝敖救教敗啟敏敘敕敔斜斛斬族旋旌旎晝晚晤晨晦晞曹勗望梁梯梢梓梵桿桶梱梧梗械梃棄梭梆梅梔條梨梟梡梂欲殺"],["b240","毫毬氫涎涼淳淙液淡淌淤添淺清淇淋涯淑涮淞淹涸混淵淅淒渚涵淚淫淘淪深淮淨淆淄涪淬涿淦烹焉焊烽烯爽牽犁猜猛猖猓猙率琅琊球理現琍瓠瓶"],["b2a1","瓷甜產略畦畢異疏痔痕疵痊痍皎盔盒盛眷眾眼眶眸眺硫硃硎祥票祭移窒窕笠笨笛第符笙笞笮粒粗粕絆絃統紮紹紼絀細紳組累終紲紱缽羞羚翌翎習耜聊聆脯脖脣脫脩脰脤舂舵舷舶船莎莞莘荸莢莖莽莫莒莊莓莉莠荷荻荼"],["b340","莆莧處彪蛇蛀蚶蛄蚵蛆蛋蚱蚯蛉術袞袈被袒袖袍袋覓規訪訝訣訥許設訟訛訢豉豚販責貫貨貪貧赧赦趾趺軛軟這逍通逗連速逝逐逕逞造透逢逖逛途"],["b3a1","部郭都酗野釵釦釣釧釭釩閉陪陵陳陸陰陴陶陷陬雀雪雩章竟頂頃魚鳥鹵鹿麥麻傢傍傅備傑傀傖傘傚最凱割剴創剩勞勝勛博厥啻喀喧啼喊喝喘喂喜喪喔喇喋喃喳單喟唾喲喚喻喬喱啾喉喫喙圍堯堪場堤堰報堡堝堠壹壺奠"],["b440","婷媚婿媒媛媧孳孱寒富寓寐尊尋就嵌嵐崴嵇巽幅帽幀幃幾廊廁廂廄弼彭復循徨惑惡悲悶惠愜愣惺愕惰惻惴慨惱愎惶愉愀愒戟扉掣掌描揀揩揉揆揍"],["b4a1","插揣提握揖揭揮捶援揪換摒揚揹敞敦敢散斑斐斯普晰晴晶景暑智晾晷曾替期朝棺棕棠棘棗椅棟棵森棧棹棒棲棣棋棍植椒椎棉棚楮棻款欺欽殘殖殼毯氮氯氬港游湔渡渲湧湊渠渥渣減湛湘渤湖湮渭渦湯渴湍渺測湃渝渾滋"],["b540","溉渙湎湣湄湲湩湟焙焚焦焰無然煮焜牌犄犀猶猥猴猩琺琪琳琢琥琵琶琴琯琛琦琨甥甦畫番痢痛痣痙痘痞痠登發皖皓皴盜睏短硝硬硯稍稈程稅稀窘"],["b5a1","窗窖童竣等策筆筐筒答筍筋筏筑粟粥絞結絨絕紫絮絲絡給絢絰絳善翔翕耋聒肅腕腔腋腑腎脹腆脾腌腓腴舒舜菩萃菸萍菠菅萋菁華菱菴著萊菰萌菌菽菲菊萸萎萄菜萇菔菟虛蛟蛙蛭蛔蛛蛤蛐蛞街裁裂袱覃視註詠評詞証詁"],["b640","詔詛詐詆訴診訶詖象貂貯貼貳貽賁費賀貴買貶貿貸越超趁跎距跋跚跑跌跛跆軻軸軼辜逮逵週逸進逶鄂郵鄉郾酣酥量鈔鈕鈣鈉鈞鈍鈐鈇鈑閔閏開閑"],["b6a1","間閒閎隊階隋陽隅隆隍陲隄雁雅雄集雇雯雲韌項順須飧飪飯飩飲飭馮馭黃黍黑亂傭債傲傳僅傾催傷傻傯僇剿剷剽募勦勤勢勣匯嗟嗨嗓嗦嗎嗜嗇嗑嗣嗤嗯嗚嗡嗅嗆嗥嗉園圓塞塑塘塗塚塔填塌塭塊塢塒塋奧嫁嫉嫌媾媽媼"],["b740","媳嫂媲嵩嵯幌幹廉廈弒彙徬微愚意慈感想愛惹愁愈慎慌慄慍愾愴愧愍愆愷戡戢搓搾搞搪搭搽搬搏搜搔損搶搖搗搆敬斟新暗暉暇暈暖暄暘暍會榔業"],["b7a1","楚楷楠楔極椰概楊楨楫楞楓楹榆楝楣楛歇歲毀殿毓毽溢溯滓溶滂源溝滇滅溥溘溼溺溫滑準溜滄滔溪溧溴煎煙煩煤煉照煜煬煦煌煥煞煆煨煖爺牒猷獅猿猾瑯瑚瑕瑟瑞瑁琿瑙瑛瑜當畸瘀痰瘁痲痱痺痿痴痳盞盟睛睫睦睞督"],["b840","睹睪睬睜睥睨睢矮碎碰碗碘碌碉硼碑碓硿祺祿禁萬禽稜稚稠稔稟稞窟窠筷節筠筮筧粱粳粵經絹綑綁綏絛置罩罪署義羨群聖聘肆肄腱腰腸腥腮腳腫"],["b8a1","腹腺腦舅艇蒂葷落萱葵葦葫葉葬葛萼萵葡董葩葭葆虞虜號蛹蜓蜈蜇蜀蛾蛻蜂蜃蜆蜊衙裟裔裙補裘裝裡裊裕裒覜解詫該詳試詩詰誇詼詣誠話誅詭詢詮詬詹詻訾詨豢貊貉賊資賈賄貲賃賂賅跡跟跨路跳跺跪跤跦躲較載軾輊"],["b940","辟農運遊道遂達逼違遐遇遏過遍遑逾遁鄒鄗酬酪酩釉鈷鉗鈸鈽鉀鈾鉛鉋鉤鉑鈴鉉鉍鉅鈹鈿鉚閘隘隔隕雍雋雉雊雷電雹零靖靴靶預頑頓頊頒頌飼飴"],["b9a1","飽飾馳馱馴髡鳩麂鼎鼓鼠僧僮僥僖僭僚僕像僑僱僎僩兢凳劃劂匱厭嗾嘀嘛嘗嗽嘔嘆嘉嘍嘎嗷嘖嘟嘈嘐嗶團圖塵塾境墓墊塹墅塽壽夥夢夤奪奩嫡嫦嫩嫗嫖嫘嫣孵寞寧寡寥實寨寢寤察對屢嶄嶇幛幣幕幗幔廓廖弊彆彰徹慇"],["ba40","愿態慷慢慣慟慚慘慵截撇摘摔撤摸摟摺摑摧搴摭摻敲斡旗旖暢暨暝榜榨榕槁榮槓構榛榷榻榫榴槐槍榭槌榦槃榣歉歌氳漳演滾漓滴漩漾漠漬漏漂漢"],["baa1","滿滯漆漱漸漲漣漕漫漯澈漪滬漁滲滌滷熔熙煽熊熄熒爾犒犖獄獐瑤瑣瑪瑰瑭甄疑瘧瘍瘋瘉瘓盡監瞄睽睿睡磁碟碧碳碩碣禎福禍種稱窪窩竭端管箕箋筵算箝箔箏箸箇箄粹粽精綻綰綜綽綾綠緊綴網綱綺綢綿綵綸維緒緇綬"],["bb40","罰翠翡翟聞聚肇腐膀膏膈膊腿膂臧臺與舔舞艋蓉蒿蓆蓄蒙蒞蒲蒜蓋蒸蓀蓓蒐蒼蓑蓊蜿蜜蜻蜢蜥蜴蜘蝕蜷蜩裳褂裴裹裸製裨褚裯誦誌語誣認誡誓誤"],["bba1","說誥誨誘誑誚誧豪貍貌賓賑賒赫趙趕跼輔輒輕輓辣遠遘遜遣遙遞遢遝遛鄙鄘鄞酵酸酷酴鉸銀銅銘銖鉻銓銜銨鉼銑閡閨閩閣閥閤隙障際雌雒需靼鞅韶頗領颯颱餃餅餌餉駁骯骰髦魁魂鳴鳶鳳麼鼻齊億儀僻僵價儂儈儉儅凜"],["bc40","劇劈劉劍劊勰厲嘮嘻嘹嘲嘿嘴嘩噓噎噗噴嘶嘯嘰墀墟增墳墜墮墩墦奭嬉嫻嬋嫵嬌嬈寮寬審寫層履嶝嶔幢幟幡廢廚廟廝廣廠彈影德徵慶慧慮慝慕憂"],["bca1","慼慰慫慾憧憐憫憎憬憚憤憔憮戮摩摯摹撞撲撈撐撰撥撓撕撩撒撮播撫撚撬撙撢撳敵敷數暮暫暴暱樣樟槨樁樞標槽模樓樊槳樂樅槭樑歐歎殤毅毆漿潼澄潑潦潔澆潭潛潸潮澎潺潰潤澗潘滕潯潠潟熟熬熱熨牖犛獎獗瑩璋璃"],["bd40","瑾璀畿瘠瘩瘟瘤瘦瘡瘢皚皺盤瞎瞇瞌瞑瞋磋磅確磊碾磕碼磐稿稼穀稽稷稻窯窮箭箱範箴篆篇篁箠篌糊締練緯緻緘緬緝編緣線緞緩綞緙緲緹罵罷羯"],["bda1","翩耦膛膜膝膠膚膘蔗蔽蔚蓮蔬蔭蔓蔑蔣蔡蔔蓬蔥蓿蔆螂蝴蝶蝠蝦蝸蝨蝙蝗蝌蝓衛衝褐複褒褓褕褊誼諒談諄誕請諸課諉諂調誰論諍誶誹諛豌豎豬賠賞賦賤賬賭賢賣賜質賡赭趟趣踫踐踝踢踏踩踟踡踞躺輝輛輟輩輦輪輜輞"],["be40","輥適遮遨遭遷鄰鄭鄧鄱醇醉醋醃鋅銻銷鋪銬鋤鋁銳銼鋒鋇鋰銲閭閱霄霆震霉靠鞍鞋鞏頡頫頜颳養餓餒餘駝駐駟駛駑駕駒駙骷髮髯鬧魅魄魷魯鴆鴉"],["bea1","鴃麩麾黎墨齒儒儘儔儐儕冀冪凝劑劓勳噙噫噹噩噤噸噪器噥噱噯噬噢噶壁墾壇壅奮嬝嬴學寰導彊憲憑憩憊懍憶憾懊懈戰擅擁擋撻撼據擄擇擂操撿擒擔撾整曆曉暹曄曇暸樽樸樺橙橫橘樹橄橢橡橋橇樵機橈歙歷氅濂澱澡"],["bf40","濃澤濁澧澳激澹澶澦澠澴熾燉燐燒燈燕熹燎燙燜燃燄獨璜璣璘璟璞瓢甌甍瘴瘸瘺盧盥瞠瞞瞟瞥磨磚磬磧禦積穎穆穌穋窺篙簑築篤篛篡篩篦糕糖縊"],["bfa1","縑縈縛縣縞縝縉縐罹羲翰翱翮耨膳膩膨臻興艘艙蕊蕙蕈蕨蕩蕃蕉蕭蕪蕞螃螟螞螢融衡褪褲褥褫褡親覦諦諺諫諱謀諜諧諮諾謁謂諷諭諳諶諼豫豭貓賴蹄踱踴蹂踹踵輻輯輸輳辨辦遵遴選遲遼遺鄴醒錠錶鋸錳錯錢鋼錫錄錚"],["c040","錐錦錡錕錮錙閻隧隨險雕霎霑霖霍霓霏靛靜靦鞘頰頸頻頷頭頹頤餐館餞餛餡餚駭駢駱骸骼髻髭鬨鮑鴕鴣鴦鴨鴒鴛默黔龍龜優償儡儲勵嚎嚀嚐嚅嚇"],["c0a1","嚏壕壓壑壎嬰嬪嬤孺尷屨嶼嶺嶽嶸幫彌徽應懂懇懦懋戲戴擎擊擘擠擰擦擬擱擢擭斂斃曙曖檀檔檄檢檜櫛檣橾檗檐檠歜殮毚氈濘濱濟濠濛濤濫濯澀濬濡濩濕濮濰燧營燮燦燥燭燬燴燠爵牆獰獲璩環璦璨癆療癌盪瞳瞪瞰瞬"],["c140","瞧瞭矯磷磺磴磯礁禧禪穗窿簇簍篾篷簌篠糠糜糞糢糟糙糝縮績繆縷縲繃縫總縱繅繁縴縹繈縵縿縯罄翳翼聱聲聰聯聳臆臃膺臂臀膿膽臉膾臨舉艱薪"],["c1a1","薄蕾薜薑薔薯薛薇薨薊虧蟀蟑螳蟒蟆螫螻螺蟈蟋褻褶襄褸褽覬謎謗謙講謊謠謝謄謐豁谿豳賺賽購賸賻趨蹉蹋蹈蹊轄輾轂轅輿避遽還邁邂邀鄹醣醞醜鍍鎂錨鍵鍊鍥鍋錘鍾鍬鍛鍰鍚鍔闊闋闌闈闆隱隸雖霜霞鞠韓顆颶餵騁"],["c240","駿鮮鮫鮪鮭鴻鴿麋黏點黜黝黛鼾齋叢嚕嚮壙壘嬸彝懣戳擴擲擾攆擺擻擷斷曜朦檳檬櫃檻檸櫂檮檯歟歸殯瀉瀋濾瀆濺瀑瀏燻燼燾燸獷獵璧璿甕癖癘"],["c2a1","癒瞽瞿瞻瞼礎禮穡穢穠竄竅簫簧簪簞簣簡糧織繕繞繚繡繒繙罈翹翻職聶臍臏舊藏薩藍藐藉薰薺薹薦蟯蟬蟲蟠覆覲觴謨謹謬謫豐贅蹙蹣蹦蹤蹟蹕軀轉轍邇邃邈醫醬釐鎔鎊鎖鎢鎳鎮鎬鎰鎘鎚鎗闔闖闐闕離雜雙雛雞霤鞣鞦"],["c340","鞭韹額顏題顎顓颺餾餿餽餮馥騎髁鬃鬆魏魎魍鯊鯉鯽鯈鯀鵑鵝鵠黠鼕鼬儳嚥壞壟壢寵龐廬懲懷懶懵攀攏曠曝櫥櫝櫚櫓瀛瀟瀨瀚瀝瀕瀘爆爍牘犢獸"],["c3a1","獺璽瓊瓣疇疆癟癡矇礙禱穫穩簾簿簸簽簷籀繫繭繹繩繪羅繳羶羹羸臘藩藝藪藕藤藥藷蟻蠅蠍蟹蟾襠襟襖襞譁譜識證譚譎譏譆譙贈贊蹼蹲躇蹶蹬蹺蹴轔轎辭邊邋醱醮鏡鏑鏟鏃鏈鏜鏝鏖鏢鏍鏘鏤鏗鏨關隴難霪霧靡韜韻類"],["c440","願顛颼饅饉騖騙鬍鯨鯧鯖鯛鶉鵡鵲鵪鵬麒麗麓麴勸嚨嚷嚶嚴嚼壤孀孃孽寶巉懸懺攘攔攙曦朧櫬瀾瀰瀲爐獻瓏癢癥礦礪礬礫竇競籌籃籍糯糰辮繽繼"],["c4a1","纂罌耀臚艦藻藹蘑藺蘆蘋蘇蘊蠔蠕襤覺觸議譬警譯譟譫贏贍躉躁躅躂醴釋鐘鐃鏽闡霰飄饒饑馨騫騰騷騵鰓鰍鹹麵黨鼯齟齣齡儷儸囁囀囂夔屬巍懼懾攝攜斕曩櫻欄櫺殲灌爛犧瓖瓔癩矓籐纏續羼蘗蘭蘚蠣蠢蠡蠟襪襬覽譴"],["c540","護譽贓躊躍躋轟辯醺鐮鐳鐵鐺鐸鐲鐫闢霸霹露響顧顥饗驅驃驀騾髏魔魑鰭鰥鶯鶴鷂鶸麝黯鼙齜齦齧儼儻囈囊囉孿巔巒彎懿攤權歡灑灘玀瓤疊癮癬"],["c5a1","禳籠籟聾聽臟襲襯觼讀贖贗躑躓轡酈鑄鑑鑒霽霾韃韁顫饕驕驍髒鬚鱉鰱鰾鰻鷓鷗鼴齬齪龔囌巖戀攣攫攪曬欐瓚竊籤籣籥纓纖纔臢蘸蘿蠱變邐邏鑣鑠鑤靨顯饜驚驛驗髓體髑鱔鱗鱖鷥麟黴囑壩攬灞癱癲矗罐羈蠶蠹衢讓讒"],["c640","讖艷贛釀鑪靂靈靄韆顰驟鬢魘鱟鷹鷺鹼鹽鼇齷齲廳欖灣籬籮蠻觀躡釁鑲鑰顱饞髖鬣黌灤矚讚鑷韉驢驥纜讜躪釅鑽鑾鑼鱷鱸黷豔鑿鸚爨驪鬱鸛鸞籲"],["c940","乂乜凵匚厂万丌乇亍囗兀屮彳丏冇与丮亓仂仉仈冘勼卬厹圠夃夬尐巿旡殳毌气爿丱丼仨仜仩仡仝仚刌匜卌圢圣夗夯宁宄尒尻屴屳帄庀庂忉戉扐氕"],["c9a1","氶汃氿氻犮犰玊禸肊阞伎优伬仵伔仱伀价伈伝伂伅伢伓伄仴伒冱刓刉刐劦匢匟卍厊吇囡囟圮圪圴夼妀奼妅奻奾奷奿孖尕尥屼屺屻屾巟幵庄异弚彴忕忔忏扜扞扤扡扦扢扙扠扚扥旯旮朾朹朸朻机朿朼朳氘汆汒汜汏汊汔汋"],["ca40","汌灱牞犴犵玎甪癿穵网艸艼芀艽艿虍襾邙邗邘邛邔阢阤阠阣佖伻佢佉体佤伾佧佒佟佁佘伭伳伿佡冏冹刜刞刡劭劮匉卣卲厎厏吰吷吪呔呅吙吜吥吘"],["caa1","吽呏呁吨吤呇囮囧囥坁坅坌坉坋坒夆奀妦妘妠妗妎妢妐妏妧妡宎宒尨尪岍岏岈岋岉岒岊岆岓岕巠帊帎庋庉庌庈庍弅弝彸彶忒忑忐忭忨忮忳忡忤忣忺忯忷忻怀忴戺抃抌抎抏抔抇扱扻扺扰抁抈扷扽扲扴攷旰旴旳旲旵杅杇"],["cb40","杙杕杌杈杝杍杚杋毐氙氚汸汧汫沄沋沏汱汯汩沚汭沇沕沜汦汳汥汻沎灴灺牣犿犽狃狆狁犺狅玕玗玓玔玒町甹疔疕皁礽耴肕肙肐肒肜芐芏芅芎芑芓"],["cba1","芊芃芄豸迉辿邟邡邥邞邧邠阰阨阯阭丳侘佼侅佽侀侇佶佴侉侄佷佌侗佪侚佹侁佸侐侜侔侞侒侂侕佫佮冞冼冾刵刲刳剆刱劼匊匋匼厒厔咇呿咁咑咂咈呫呺呾呥呬呴呦咍呯呡呠咘呣呧呤囷囹坯坲坭坫坱坰坶垀坵坻坳坴坢"],["cc40","坨坽夌奅妵妺姏姎妲姌姁妶妼姃姖妱妽姀姈妴姇孢孥宓宕屄屇岮岤岠岵岯岨岬岟岣岭岢岪岧岝岥岶岰岦帗帔帙弨弢弣弤彔徂彾彽忞忥怭怦怙怲怋"],["cca1","怴怊怗怳怚怞怬怢怍怐怮怓怑怌怉怜戔戽抭抴拑抾抪抶拊抮抳抯抻抩抰抸攽斨斻昉旼昄昒昈旻昃昋昍昅旽昑昐曶朊枅杬枎枒杶杻枘枆构杴枍枌杺枟枑枙枃杽极杸杹枔欥殀歾毞氝沓泬泫泮泙沶泔沭泧沷泐泂沺泃泆泭泲"],["cd40","泒泝沴沊沝沀泞泀洰泍泇沰泹泏泩泑炔炘炅炓炆炄炑炖炂炚炃牪狖狋狘狉狜狒狔狚狌狑玤玡玭玦玢玠玬玝瓝瓨甿畀甾疌疘皯盳盱盰盵矸矼矹矻矺"],["cda1","矷祂礿秅穸穻竻籵糽耵肏肮肣肸肵肭舠芠苀芫芚芘芛芵芧芮芼芞芺芴芨芡芩苂芤苃芶芢虰虯虭虮豖迒迋迓迍迖迕迗邲邴邯邳邰阹阽阼阺陃俍俅俓侲俉俋俁俔俜俙侻侳俛俇俖侺俀侹俬剄剉勀勂匽卼厗厖厙厘咺咡咭咥哏"],["ce40","哃茍咷咮哖咶哅哆咠呰咼咢咾呲哞咰垵垞垟垤垌垗垝垛垔垘垏垙垥垚垕壴复奓姡姞姮娀姱姝姺姽姼姶姤姲姷姛姩姳姵姠姾姴姭宨屌峐峘峌峗峋峛"],["cea1","峞峚峉峇峊峖峓峔峏峈峆峎峟峸巹帡帢帣帠帤庰庤庢庛庣庥弇弮彖徆怷怹恔恲恞恅恓恇恉恛恌恀恂恟怤恄恘恦恮扂扃拏挍挋拵挎挃拫拹挏挌拸拶挀挓挔拺挕拻拰敁敃斪斿昶昡昲昵昜昦昢昳昫昺昝昴昹昮朏朐柁柲柈枺"],["cf40","柜枻柸柘柀枷柅柫柤柟枵柍枳柷柶柮柣柂枹柎柧柰枲柼柆柭柌枮柦柛柺柉柊柃柪柋欨殂殄殶毖毘毠氠氡洨洴洭洟洼洿洒洊泚洳洄洙洺洚洑洀洝浂"],["cfa1","洁洘洷洃洏浀洇洠洬洈洢洉洐炷炟炾炱炰炡炴炵炩牁牉牊牬牰牳牮狊狤狨狫狟狪狦狣玅珌珂珈珅玹玶玵玴珫玿珇玾珃珆玸珋瓬瓮甮畇畈疧疪癹盄眈眃眄眅眊盷盻盺矧矨砆砑砒砅砐砏砎砉砃砓祊祌祋祅祄秕种秏秖秎窀"],["d040","穾竑笀笁籺籸籹籿粀粁紃紈紁罘羑羍羾耇耎耏耔耷胘胇胠胑胈胂胐胅胣胙胜胊胕胉胏胗胦胍臿舡芔苙苾苹茇苨茀苕茺苫苖苴苬苡苲苵茌苻苶苰苪"],["d0a1","苤苠苺苳苭虷虴虼虳衁衎衧衪衩觓訄訇赲迣迡迮迠郱邽邿郕郅邾郇郋郈釔釓陔陏陑陓陊陎倞倅倇倓倢倰倛俵俴倳倷倬俶俷倗倜倠倧倵倯倱倎党冔冓凊凄凅凈凎剡剚剒剞剟剕剢勍匎厞唦哢唗唒哧哳哤唚哿唄唈哫唑唅哱"],["d140","唊哻哷哸哠唎唃唋圁圂埌堲埕埒垺埆垽垼垸垶垿埇埐垹埁夎奊娙娖娭娮娕娏娗娊娞娳孬宧宭宬尃屖屔峬峿峮峱峷崀峹帩帨庨庮庪庬弳弰彧恝恚恧"],["d1a1","恁悢悈悀悒悁悝悃悕悛悗悇悜悎戙扆拲挐捖挬捄捅挶捃揤挹捋捊挼挩捁挴捘捔捙挭捇挳捚捑挸捗捀捈敊敆旆旃旄旂晊晟晇晑朒朓栟栚桉栲栳栻桋桏栖栱栜栵栫栭栯桎桄栴栝栒栔栦栨栮桍栺栥栠欬欯欭欱欴歭肂殈毦毤"],["d240","毨毣毢毧氥浺浣浤浶洍浡涒浘浢浭浯涑涍淯浿涆浞浧浠涗浰浼浟涂涘洯浨涋浾涀涄洖涃浻浽浵涐烜烓烑烝烋缹烢烗烒烞烠烔烍烅烆烇烚烎烡牂牸"],["d2a1","牷牶猀狺狴狾狶狳狻猁珓珙珥珖玼珧珣珩珜珒珛珔珝珚珗珘珨瓞瓟瓴瓵甡畛畟疰痁疻痄痀疿疶疺皊盉眝眛眐眓眒眣眑眕眙眚眢眧砣砬砢砵砯砨砮砫砡砩砳砪砱祔祛祏祜祓祒祑秫秬秠秮秭秪秜秞秝窆窉窅窋窌窊窇竘笐"],["d340","笄笓笅笏笈笊笎笉笒粄粑粊粌粈粍粅紞紝紑紎紘紖紓紟紒紏紌罜罡罞罠罝罛羖羒翃翂翀耖耾耹胺胲胹胵脁胻脀舁舯舥茳茭荄茙荑茥荖茿荁茦茜茢"],["d3a1","荂荎茛茪茈茼荍茖茤茠茷茯茩荇荅荌荓茞茬荋茧荈虓虒蚢蚨蚖蚍蚑蚞蚇蚗蚆蚋蚚蚅蚥蚙蚡蚧蚕蚘蚎蚝蚐蚔衃衄衭衵衶衲袀衱衿衯袃衾衴衼訒豇豗豻貤貣赶赸趵趷趶軑軓迾迵适迿迻逄迼迶郖郠郙郚郣郟郥郘郛郗郜郤酐"],["d440","酎酏釕釢釚陜陟隼飣髟鬯乿偰偪偡偞偠偓偋偝偲偈偍偁偛偊偢倕偅偟偩偫偣偤偆偀偮偳偗偑凐剫剭剬剮勖勓匭厜啵啶唼啍啐唴唪啑啢唶唵唰啒啅"],["d4a1","唌唲啥啎唹啈唭唻啀啋圊圇埻堔埢埶埜埴堀埭埽堈埸堋埳埏堇埮埣埲埥埬埡堎埼堐埧堁堌埱埩埰堍堄奜婠婘婕婧婞娸娵婭婐婟婥婬婓婤婗婃婝婒婄婛婈媎娾婍娹婌婰婩婇婑婖婂婜孲孮寁寀屙崞崋崝崚崠崌崨崍崦崥崏"],["d540","崰崒崣崟崮帾帴庱庴庹庲庳弶弸徛徖徟悊悐悆悾悰悺惓惔惏惤惙惝惈悱惛悷惊悿惃惍惀挲捥掊掂捽掽掞掭掝掗掫掎捯掇掐据掯捵掜捭掮捼掤挻掟"],["d5a1","捸掅掁掑掍捰敓旍晥晡晛晙晜晢朘桹梇梐梜桭桮梮梫楖桯梣梬梩桵桴梲梏桷梒桼桫桲梪梀桱桾梛梖梋梠梉梤桸桻梑梌梊桽欶欳欷欸殑殏殍殎殌氪淀涫涴涳湴涬淩淢涷淶淔渀淈淠淟淖涾淥淜淝淛淴淊涽淭淰涺淕淂淏淉"],["d640","淐淲淓淽淗淍淣涻烺焍烷焗烴焌烰焄烳焐烼烿焆焓焀烸烶焋焂焎牾牻牼牿猝猗猇猑猘猊猈狿猏猞玈珶珸珵琄琁珽琇琀珺珼珿琌琋珴琈畤畣痎痒痏"],["d6a1","痋痌痑痐皏皉盓眹眯眭眱眲眴眳眽眥眻眵硈硒硉硍硊硌砦硅硐祤祧祩祪祣祫祡离秺秸秶秷窏窔窐笵筇笴笥笰笢笤笳笘笪笝笱笫笭笯笲笸笚笣粔粘粖粣紵紽紸紶紺絅紬紩絁絇紾紿絊紻紨罣羕羜羝羛翊翋翍翐翑翇翏翉耟"],["d740","耞耛聇聃聈脘脥脙脛脭脟脬脞脡脕脧脝脢舑舸舳舺舴舲艴莐莣莨莍荺荳莤荴莏莁莕莙荵莔莩荽莃莌莝莛莪莋荾莥莯莈莗莰荿莦莇莮荶莚虙虖蚿蚷"],["d7a1","蛂蛁蛅蚺蚰蛈蚹蚳蚸蛌蚴蚻蚼蛃蚽蚾衒袉袕袨袢袪袚袑袡袟袘袧袙袛袗袤袬袌袓袎覂觖觙觕訰訧訬訞谹谻豜豝豽貥赽赻赹趼跂趹趿跁軘軞軝軜軗軠軡逤逋逑逜逌逡郯郪郰郴郲郳郔郫郬郩酖酘酚酓酕釬釴釱釳釸釤釹釪"],["d840","釫釷釨釮镺閆閈陼陭陫陱陯隿靪頄飥馗傛傕傔傞傋傣傃傌傎傝偨傜傒傂傇兟凔匒匑厤厧喑喨喥喭啷噅喢喓喈喏喵喁喣喒喤啽喌喦啿喕喡喎圌堩堷"],["d8a1","堙堞堧堣堨埵塈堥堜堛堳堿堶堮堹堸堭堬堻奡媯媔媟婺媢媞婸媦婼媥媬媕媮娷媄媊媗媃媋媩婻婽媌媜媏媓媝寪寍寋寔寑寊寎尌尰崷嵃嵫嵁嵋崿崵嵑嵎嵕崳崺嵒崽崱嵙嵂崹嵉崸崼崲崶嵀嵅幄幁彘徦徥徫惉悹惌惢惎惄愔"],["d940","惲愊愖愅惵愓惸惼惾惁愃愘愝愐惿愄愋扊掔掱掰揎揥揨揯揃撝揳揊揠揶揕揲揵摡揟掾揝揜揄揘揓揂揇揌揋揈揰揗揙攲敧敪敤敜敨敥斌斝斞斮旐旒"],["d9a1","晼晬晻暀晱晹晪晲朁椌棓椄棜椪棬棪棱椏棖棷棫棤棶椓椐棳棡椇棌椈楰梴椑棯棆椔棸棐棽棼棨椋椊椗棎棈棝棞棦棴棑椆棔棩椕椥棇欹欻欿欼殔殗殙殕殽毰毲毳氰淼湆湇渟湉溈渼渽湅湢渫渿湁湝湳渜渳湋湀湑渻渃渮湞"],["da40","湨湜湡渱渨湠湱湫渹渢渰湓湥渧湸湤湷湕湹湒湦渵渶湚焠焞焯烻焮焱焣焥焢焲焟焨焺焛牋牚犈犉犆犅犋猒猋猰猢猱猳猧猲猭猦猣猵猌琮琬琰琫琖"],["daa1","琚琡琭琱琤琣琝琩琠琲瓻甯畯畬痧痚痡痦痝痟痤痗皕皒盚睆睇睄睍睅睊睎睋睌矞矬硠硤硥硜硭硱硪确硰硩硨硞硢祴祳祲祰稂稊稃稌稄窙竦竤筊笻筄筈筌筎筀筘筅粢粞粨粡絘絯絣絓絖絧絪絏絭絜絫絒絔絩絑絟絎缾缿罥"],["db40","罦羢羠羡翗聑聏聐胾胔腃腊腒腏腇脽腍脺臦臮臷臸臹舄舼舽舿艵茻菏菹萣菀菨萒菧菤菼菶萐菆菈菫菣莿萁菝菥菘菿菡菋菎菖菵菉萉萏菞萑萆菂菳"],["dba1","菕菺菇菑菪萓菃菬菮菄菻菗菢萛菛菾蛘蛢蛦蛓蛣蛚蛪蛝蛫蛜蛬蛩蛗蛨蛑衈衖衕袺裗袹袸裀袾袶袼袷袽袲褁裉覕覘覗觝觚觛詎詍訹詙詀詗詘詄詅詒詈詑詊詌詏豟貁貀貺貾貰貹貵趄趀趉跘跓跍跇跖跜跏跕跙跈跗跅軯軷軺"],["dc40","軹軦軮軥軵軧軨軶軫軱軬軴軩逭逴逯鄆鄬鄄郿郼鄈郹郻鄁鄀鄇鄅鄃酡酤酟酢酠鈁鈊鈥鈃鈚鈦鈏鈌鈀鈒釿釽鈆鈄鈧鈂鈜鈤鈙鈗鈅鈖镻閍閌閐隇陾隈"],["dca1","隉隃隀雂雈雃雱雰靬靰靮頇颩飫鳦黹亃亄亶傽傿僆傮僄僊傴僈僂傰僁傺傱僋僉傶傸凗剺剸剻剼嗃嗛嗌嗐嗋嗊嗝嗀嗔嗄嗩喿嗒喍嗏嗕嗢嗖嗈嗲嗍嗙嗂圔塓塨塤塏塍塉塯塕塎塝塙塥塛堽塣塱壼嫇嫄嫋媺媸媱媵媰媿嫈媻嫆"],["dd40","媷嫀嫊媴媶嫍媹媐寖寘寙尟尳嵱嵣嵊嵥嵲嵬嵞嵨嵧嵢巰幏幎幊幍幋廅廌廆廋廇彀徯徭惷慉慊愫慅愶愲愮慆愯慏愩慀戠酨戣戥戤揅揱揫搐搒搉搠搤"],["dda1","搳摃搟搕搘搹搷搢搣搌搦搰搨摁搵搯搊搚摀搥搧搋揧搛搮搡搎敯斒旓暆暌暕暐暋暊暙暔晸朠楦楟椸楎楢楱椿楅楪椹楂楗楙楺楈楉椵楬椳椽楥棰楸椴楩楀楯楄楶楘楁楴楌椻楋椷楜楏楑椲楒椯楻椼歆歅歃歂歈歁殛嗀毻毼"],["de40","毹毷毸溛滖滈溏滀溟溓溔溠溱溹滆滒溽滁溞滉溷溰滍溦滏溲溾滃滜滘溙溒溎溍溤溡溿溳滐滊溗溮溣煇煔煒煣煠煁煝煢煲煸煪煡煂煘煃煋煰煟煐煓"],["dea1","煄煍煚牏犍犌犑犐犎猼獂猻猺獀獊獉瑄瑊瑋瑒瑑瑗瑀瑏瑐瑎瑂瑆瑍瑔瓡瓿瓾瓽甝畹畷榃痯瘏瘃痷痾痼痹痸瘐痻痶痭痵痽皙皵盝睕睟睠睒睖睚睩睧睔睙睭矠碇碚碔碏碄碕碅碆碡碃硹碙碀碖硻祼禂祽祹稑稘稙稒稗稕稢稓"],["df40","稛稐窣窢窞竫筦筤筭筴筩筲筥筳筱筰筡筸筶筣粲粴粯綈綆綀綍絿綅絺綎絻綃絼綌綔綄絽綒罭罫罧罨罬羦羥羧翛翜耡腤腠腷腜腩腛腢腲朡腞腶腧腯"],["dfa1","腄腡舝艉艄艀艂艅蓱萿葖葶葹蒏蒍葥葑葀蒆葧萰葍葽葚葙葴葳葝蔇葞萷萺萴葺葃葸萲葅萩菙葋萯葂萭葟葰萹葎葌葒葯蓅蒎萻葇萶萳葨葾葄萫葠葔葮葐蜋蜄蛷蜌蛺蛖蛵蝍蛸蜎蜉蜁蛶蜍蜅裖裋裍裎裞裛裚裌裐覅覛觟觥觤"],["e040","觡觠觢觜触詶誆詿詡訿詷誂誄詵誃誁詴詺谼豋豊豥豤豦貆貄貅賌赨赩趑趌趎趏趍趓趔趐趒跰跠跬跱跮跐跩跣跢跧跲跫跴輆軿輁輀輅輇輈輂輋遒逿"],["e0a1","遄遉逽鄐鄍鄏鄑鄖鄔鄋鄎酮酯鉈鉒鈰鈺鉦鈳鉥鉞銃鈮鉊鉆鉭鉬鉏鉠鉧鉯鈶鉡鉰鈱鉔鉣鉐鉲鉎鉓鉌鉖鈲閟閜閞閛隒隓隑隗雎雺雽雸雵靳靷靸靲頏頍頎颬飶飹馯馲馰馵骭骫魛鳪鳭鳧麀黽僦僔僗僨僳僛僪僝僤僓僬僰僯僣僠"],["e140","凘劀劁勩勫匰厬嘧嘕嘌嘒嗼嘏嘜嘁嘓嘂嗺嘝嘄嗿嗹墉塼墐墘墆墁塿塴墋塺墇墑墎塶墂墈塻墔墏壾奫嫜嫮嫥嫕嫪嫚嫭嫫嫳嫢嫠嫛嫬嫞嫝嫙嫨嫟孷寠"],["e1a1","寣屣嶂嶀嵽嶆嵺嶁嵷嶊嶉嶈嵾嵼嶍嵹嵿幘幙幓廘廑廗廎廜廕廙廒廔彄彃彯徶愬愨慁慞慱慳慒慓慲慬憀慴慔慺慛慥愻慪慡慖戩戧戫搫摍摛摝摴摶摲摳摽摵摦撦摎撂摞摜摋摓摠摐摿搿摬摫摙摥摷敳斠暡暠暟朅朄朢榱榶槉"],["e240","榠槎榖榰榬榼榑榙榎榧榍榩榾榯榿槄榽榤槔榹槊榚槏榳榓榪榡榞槙榗榐槂榵榥槆歊歍歋殞殟殠毃毄毾滎滵滱漃漥滸漷滻漮漉潎漙漚漧漘漻漒滭漊"],["e2a1","漶潳滹滮漭潀漰漼漵滫漇漎潃漅滽滶漹漜滼漺漟漍漞漈漡熇熐熉熀熅熂熏煻熆熁熗牄牓犗犕犓獃獍獑獌瑢瑳瑱瑵瑲瑧瑮甀甂甃畽疐瘖瘈瘌瘕瘑瘊瘔皸瞁睼瞅瞂睮瞀睯睾瞃碲碪碴碭碨硾碫碞碥碠碬碢碤禘禊禋禖禕禔禓"],["e340","禗禈禒禐稫穊稰稯稨稦窨窫窬竮箈箜箊箑箐箖箍箌箛箎箅箘劄箙箤箂粻粿粼粺綧綷緂綣綪緁緀緅綝緎緄緆緋緌綯綹綖綼綟綦綮綩綡緉罳翢翣翥翞"],["e3a1","耤聝聜膉膆膃膇膍膌膋舕蒗蒤蒡蒟蒺蓎蓂蒬蒮蒫蒹蒴蓁蓍蒪蒚蒱蓐蒝蒧蒻蒢蒔蓇蓌蒛蒩蒯蒨蓖蒘蒶蓏蒠蓗蓔蓒蓛蒰蒑虡蜳蜣蜨蝫蝀蜮蜞蜡蜙蜛蝃蜬蝁蜾蝆蜠蜲蜪蜭蜼蜒蜺蜱蜵蝂蜦蜧蜸蜤蜚蜰蜑裷裧裱裲裺裾裮裼裶裻"],["e440","裰裬裫覝覡覟覞觩觫觨誫誙誋誒誏誖谽豨豩賕賏賗趖踉踂跿踍跽踊踃踇踆踅跾踀踄輐輑輎輍鄣鄜鄠鄢鄟鄝鄚鄤鄡鄛酺酲酹酳銥銤鉶銛鉺銠銔銪銍"],["e4a1","銦銚銫鉹銗鉿銣鋮銎銂銕銢鉽銈銡銊銆銌銙銧鉾銇銩銝銋鈭隞隡雿靘靽靺靾鞃鞀鞂靻鞄鞁靿韎韍頖颭颮餂餀餇馝馜駃馹馻馺駂馽駇骱髣髧鬾鬿魠魡魟鳱鳲鳵麧僿儃儰僸儆儇僶僾儋儌僽儊劋劌勱勯噈噂噌嘵噁噊噉噆噘"],["e540","噚噀嘳嘽嘬嘾嘸嘪嘺圚墫墝墱墠墣墯墬墥墡壿嫿嫴嫽嫷嫶嬃嫸嬂嫹嬁嬇嬅嬏屧嶙嶗嶟嶒嶢嶓嶕嶠嶜嶡嶚嶞幩幝幠幜緳廛廞廡彉徲憋憃慹憱憰憢憉"],["e5a1","憛憓憯憭憟憒憪憡憍慦憳戭摮摰撖撠撅撗撜撏撋撊撌撣撟摨撱撘敶敺敹敻斲斳暵暰暩暲暷暪暯樀樆樗槥槸樕槱槤樠槿槬槢樛樝槾樧槲槮樔槷槧橀樈槦槻樍槼槫樉樄樘樥樏槶樦樇槴樖歑殥殣殢殦氁氀毿氂潁漦潾澇濆澒"],["e640","澍澉澌潢潏澅潚澖潶潬澂潕潲潒潐潗澔澓潝漀潡潫潽潧澐潓澋潩潿澕潣潷潪潻熲熯熛熰熠熚熩熵熝熥熞熤熡熪熜熧熳犘犚獘獒獞獟獠獝獛獡獚獙"],["e6a1","獢璇璉璊璆璁瑽璅璈瑼瑹甈甇畾瘥瘞瘙瘝瘜瘣瘚瘨瘛皜皝皞皛瞍瞏瞉瞈磍碻磏磌磑磎磔磈磃磄磉禚禡禠禜禢禛歶稹窲窴窳箷篋箾箬篎箯箹篊箵糅糈糌糋緷緛緪緧緗緡縃緺緦緶緱緰緮緟罶羬羰羭翭翫翪翬翦翨聤聧膣膟"],["e740","膞膕膢膙膗舖艏艓艒艐艎艑蔤蔻蔏蔀蔩蔎蔉蔍蔟蔊蔧蔜蓻蔫蓺蔈蔌蓴蔪蓲蔕蓷蓫蓳蓼蔒蓪蓩蔖蓾蔨蔝蔮蔂蓽蔞蓶蔱蔦蓧蓨蓰蓯蓹蔘蔠蔰蔋蔙蔯虢"],["e7a1","蝖蝣蝤蝷蟡蝳蝘蝔蝛蝒蝡蝚蝑蝞蝭蝪蝐蝎蝟蝝蝯蝬蝺蝮蝜蝥蝏蝻蝵蝢蝧蝩衚褅褌褔褋褗褘褙褆褖褑褎褉覢覤覣觭觰觬諏諆誸諓諑諔諕誻諗誾諀諅諘諃誺誽諙谾豍貏賥賟賙賨賚賝賧趠趜趡趛踠踣踥踤踮踕踛踖踑踙踦踧"],["e840","踔踒踘踓踜踗踚輬輤輘輚輠輣輖輗遳遰遯遧遫鄯鄫鄩鄪鄲鄦鄮醅醆醊醁醂醄醀鋐鋃鋄鋀鋙銶鋏鋱鋟鋘鋩鋗鋝鋌鋯鋂鋨鋊鋈鋎鋦鋍鋕鋉鋠鋞鋧鋑鋓"],["e8a1","銵鋡鋆銴镼閬閫閮閰隤隢雓霅霈霂靚鞊鞎鞈韐韏頞頝頦頩頨頠頛頧颲餈飺餑餔餖餗餕駜駍駏駓駔駎駉駖駘駋駗駌骳髬髫髳髲髱魆魃魧魴魱魦魶魵魰魨魤魬鳼鳺鳽鳿鳷鴇鴀鳹鳻鴈鴅鴄麃黓鼏鼐儜儓儗儚儑凞匴叡噰噠噮"],["e940","噳噦噣噭噲噞噷圜圛壈墽壉墿墺壂墼壆嬗嬙嬛嬡嬔嬓嬐嬖嬨嬚嬠嬞寯嶬嶱嶩嶧嶵嶰嶮嶪嶨嶲嶭嶯嶴幧幨幦幯廩廧廦廨廥彋徼憝憨憖懅憴懆懁懌憺"],["e9a1","憿憸憌擗擖擐擏擉撽撉擃擛擳擙攳敿敼斢曈暾曀曊曋曏暽暻暺曌朣樴橦橉橧樲橨樾橝橭橶橛橑樨橚樻樿橁橪橤橐橏橔橯橩橠樼橞橖橕橍橎橆歕歔歖殧殪殫毈毇氄氃氆澭濋澣濇澼濎濈潞濄澽澞濊澨瀄澥澮澺澬澪濏澿澸"],["ea40","澢濉澫濍澯澲澰燅燂熿熸燖燀燁燋燔燊燇燏熽燘熼燆燚燛犝犞獩獦獧獬獥獫獪瑿璚璠璔璒璕璡甋疀瘯瘭瘱瘽瘳瘼瘵瘲瘰皻盦瞚瞝瞡瞜瞛瞢瞣瞕瞙"],["eaa1","瞗磝磩磥磪磞磣磛磡磢磭磟磠禤穄穈穇窶窸窵窱窷篞篣篧篝篕篥篚篨篹篔篪篢篜篫篘篟糒糔糗糐糑縒縡縗縌縟縠縓縎縜縕縚縢縋縏縖縍縔縥縤罃罻罼罺羱翯耪耩聬膱膦膮膹膵膫膰膬膴膲膷膧臲艕艖艗蕖蕅蕫蕍蕓蕡蕘"],["eb40","蕀蕆蕤蕁蕢蕄蕑蕇蕣蔾蕛蕱蕎蕮蕵蕕蕧蕠薌蕦蕝蕔蕥蕬虣虥虤螛螏螗螓螒螈螁螖螘蝹螇螣螅螐螑螝螄螔螜螚螉褞褦褰褭褮褧褱褢褩褣褯褬褟觱諠"],["eba1","諢諲諴諵諝謔諤諟諰諈諞諡諨諿諯諻貑貒貐賵賮賱賰賳赬赮趥趧踳踾踸蹀蹅踶踼踽蹁踰踿躽輶輮輵輲輹輷輴遶遹遻邆郺鄳鄵鄶醓醐醑醍醏錧錞錈錟錆錏鍺錸錼錛錣錒錁鍆錭錎錍鋋錝鋺錥錓鋹鋷錴錂錤鋿錩錹錵錪錔錌"],["ec40","錋鋾錉錀鋻錖閼闍閾閹閺閶閿閵閽隩雔霋霒霐鞙鞗鞔韰韸頵頯頲餤餟餧餩馞駮駬駥駤駰駣駪駩駧骹骿骴骻髶髺髹髷鬳鮀鮅鮇魼魾魻鮂鮓鮒鮐魺鮕"],["eca1","魽鮈鴥鴗鴠鴞鴔鴩鴝鴘鴢鴐鴙鴟麈麆麇麮麭黕黖黺鼒鼽儦儥儢儤儠儩勴嚓嚌嚍嚆嚄嚃噾嚂噿嚁壖壔壏壒嬭嬥嬲嬣嬬嬧嬦嬯嬮孻寱寲嶷幬幪徾徻懃憵憼懧懠懥懤懨懞擯擩擣擫擤擨斁斀斶旚曒檍檖檁檥檉檟檛檡檞檇檓檎"],["ed40","檕檃檨檤檑橿檦檚檅檌檒歛殭氉濌澩濴濔濣濜濭濧濦濞濲濝濢濨燡燱燨燲燤燰燢獳獮獯璗璲璫璐璪璭璱璥璯甐甑甒甏疄癃癈癉癇皤盩瞵瞫瞲瞷瞶"],["eda1","瞴瞱瞨矰磳磽礂磻磼磲礅磹磾礄禫禨穜穛穖穘穔穚窾竀竁簅簏篲簀篿篻簎篴簋篳簂簉簃簁篸篽簆篰篱簐簊糨縭縼繂縳顈縸縪繉繀繇縩繌縰縻縶繄縺罅罿罾罽翴翲耬膻臄臌臊臅臇膼臩艛艚艜薃薀薏薧薕薠薋薣蕻薤薚薞"],["ee40","蕷蕼薉薡蕺蕸蕗薎薖薆薍薙薝薁薢薂薈薅蕹蕶薘薐薟虨螾螪螭蟅螰螬螹螵螼螮蟉蟃蟂蟌螷螯蟄蟊螴螶螿螸螽蟞螲褵褳褼褾襁襒褷襂覭覯覮觲觳謞"],["eea1","謘謖謑謅謋謢謏謒謕謇謍謈謆謜謓謚豏豰豲豱豯貕貔賹赯蹎蹍蹓蹐蹌蹇轃轀邅遾鄸醚醢醛醙醟醡醝醠鎡鎃鎯鍤鍖鍇鍼鍘鍜鍶鍉鍐鍑鍠鍭鎏鍌鍪鍹鍗鍕鍒鍏鍱鍷鍻鍡鍞鍣鍧鎀鍎鍙闇闀闉闃闅閷隮隰隬霠霟霘霝霙鞚鞡鞜"],["ef40","鞞鞝韕韔韱顁顄顊顉顅顃餥餫餬餪餳餲餯餭餱餰馘馣馡騂駺駴駷駹駸駶駻駽駾駼騃骾髾髽鬁髼魈鮚鮨鮞鮛鮦鮡鮥鮤鮆鮢鮠鮯鴳鵁鵧鴶鴮鴯鴱鴸鴰"],["efa1","鵅鵂鵃鴾鴷鵀鴽翵鴭麊麉麍麰黈黚黻黿鼤鼣鼢齔龠儱儭儮嚘嚜嚗嚚嚝嚙奰嬼屩屪巀幭幮懘懟懭懮懱懪懰懫懖懩擿攄擽擸攁攃擼斔旛曚曛曘櫅檹檽櫡櫆檺檶檷櫇檴檭歞毉氋瀇瀌瀍瀁瀅瀔瀎濿瀀濻瀦濼濷瀊爁燿燹爃燽獶"],["f040","璸瓀璵瓁璾璶璻瓂甔甓癜癤癙癐癓癗癚皦皽盬矂瞺磿礌礓礔礉礐礒礑禭禬穟簜簩簙簠簟簭簝簦簨簢簥簰繜繐繖繣繘繢繟繑繠繗繓羵羳翷翸聵臑臒"],["f0a1","臐艟艞薴藆藀藃藂薳薵薽藇藄薿藋藎藈藅薱薶藒蘤薸薷薾虩蟧蟦蟢蟛蟫蟪蟥蟟蟳蟤蟔蟜蟓蟭蟘蟣螤蟗蟙蠁蟴蟨蟝襓襋襏襌襆襐襑襉謪謧謣謳謰謵譇謯謼謾謱謥謷謦謶謮謤謻謽謺豂豵貙貘貗賾贄贂贀蹜蹢蹠蹗蹖蹞蹥蹧"],["f140","蹛蹚蹡蹝蹩蹔轆轇轈轋鄨鄺鄻鄾醨醥醧醯醪鎵鎌鎒鎷鎛鎝鎉鎧鎎鎪鎞鎦鎕鎈鎙鎟鎍鎱鎑鎲鎤鎨鎴鎣鎥闒闓闑隳雗雚巂雟雘雝霣霢霥鞬鞮鞨鞫鞤鞪"],["f1a1","鞢鞥韗韙韖韘韺顐顑顒颸饁餼餺騏騋騉騍騄騑騊騅騇騆髀髜鬈鬄鬅鬩鬵魊魌魋鯇鯆鯃鮿鯁鮵鮸鯓鮶鯄鮹鮽鵜鵓鵏鵊鵛鵋鵙鵖鵌鵗鵒鵔鵟鵘鵚麎麌黟鼁鼀鼖鼥鼫鼪鼩鼨齌齕儴儵劖勷厴嚫嚭嚦嚧嚪嚬壚壝壛夒嬽嬾嬿巃幰"],["f240","徿懻攇攐攍攉攌攎斄旞旝曞櫧櫠櫌櫑櫙櫋櫟櫜櫐櫫櫏櫍櫞歠殰氌瀙瀧瀠瀖瀫瀡瀢瀣瀩瀗瀤瀜瀪爌爊爇爂爅犥犦犤犣犡瓋瓅璷瓃甖癠矉矊矄矱礝礛"],["f2a1","礡礜礗礞禰穧穨簳簼簹簬簻糬糪繶繵繸繰繷繯繺繲繴繨罋罊羃羆羷翽翾聸臗臕艤艡艣藫藱藭藙藡藨藚藗藬藲藸藘藟藣藜藑藰藦藯藞藢蠀蟺蠃蟶蟷蠉蠌蠋蠆蟼蠈蟿蠊蠂襢襚襛襗襡襜襘襝襙覈覷覶觶譐譈譊譀譓譖譔譋譕"],["f340","譑譂譒譗豃豷豶貚贆贇贉趬趪趭趫蹭蹸蹳蹪蹯蹻軂轒轑轏轐轓辴酀鄿醰醭鏞鏇鏏鏂鏚鏐鏹鏬鏌鏙鎩鏦鏊鏔鏮鏣鏕鏄鏎鏀鏒鏧镽闚闛雡霩霫霬霨霦"],["f3a1","鞳鞷鞶韝韞韟顜顙顝顗颿颽颻颾饈饇饃馦馧騚騕騥騝騤騛騢騠騧騣騞騜騔髂鬋鬊鬎鬌鬷鯪鯫鯠鯞鯤鯦鯢鯰鯔鯗鯬鯜鯙鯥鯕鯡鯚鵷鶁鶊鶄鶈鵱鶀鵸鶆鶋鶌鵽鵫鵴鵵鵰鵩鶅鵳鵻鶂鵯鵹鵿鶇鵨麔麑黀黼鼭齀齁齍齖齗齘匷嚲"],["f440","嚵嚳壣孅巆巇廮廯忀忁懹攗攖攕攓旟曨曣曤櫳櫰櫪櫨櫹櫱櫮櫯瀼瀵瀯瀷瀴瀱灂瀸瀿瀺瀹灀瀻瀳灁爓爔犨獽獼璺皫皪皾盭矌矎矏矍矲礥礣礧礨礤礩"],["f4a1","禲穮穬穭竷籉籈籊籇籅糮繻繾纁纀羺翿聹臛臙舋艨艩蘢藿蘁藾蘛蘀藶蘄蘉蘅蘌藽蠙蠐蠑蠗蠓蠖襣襦覹觷譠譪譝譨譣譥譧譭趮躆躈躄轙轖轗轕轘轚邍酃酁醷醵醲醳鐋鐓鏻鐠鐏鐔鏾鐕鐐鐨鐙鐍鏵鐀鏷鐇鐎鐖鐒鏺鐉鏸鐊鏿"],["f540","鏼鐌鏶鐑鐆闞闠闟霮霯鞹鞻韽韾顠顢顣顟飁飂饐饎饙饌饋饓騲騴騱騬騪騶騩騮騸騭髇髊髆鬐鬒鬑鰋鰈鯷鰅鰒鯸鱀鰇鰎鰆鰗鰔鰉鶟鶙鶤鶝鶒鶘鶐鶛"],["f5a1","鶠鶔鶜鶪鶗鶡鶚鶢鶨鶞鶣鶿鶩鶖鶦鶧麙麛麚黥黤黧黦鼰鼮齛齠齞齝齙龑儺儹劘劗囃嚽嚾孈孇巋巏廱懽攛欂櫼欃櫸欀灃灄灊灈灉灅灆爝爚爙獾甗癪矐礭礱礯籔籓糲纊纇纈纋纆纍罍羻耰臝蘘蘪蘦蘟蘣蘜蘙蘧蘮蘡蘠蘩蘞蘥"],["f640","蠩蠝蠛蠠蠤蠜蠫衊襭襩襮襫觺譹譸譅譺譻贐贔趯躎躌轞轛轝酆酄酅醹鐿鐻鐶鐩鐽鐼鐰鐹鐪鐷鐬鑀鐱闥闤闣霵霺鞿韡顤飉飆飀饘饖騹騽驆驄驂驁騺"],["f6a1","騿髍鬕鬗鬘鬖鬺魒鰫鰝鰜鰬鰣鰨鰩鰤鰡鶷鶶鶼鷁鷇鷊鷏鶾鷅鷃鶻鶵鷎鶹鶺鶬鷈鶱鶭鷌鶳鷍鶲鹺麜黫黮黭鼛鼘鼚鼱齎齥齤龒亹囆囅囋奱孋孌巕巑廲攡攠攦攢欋欈欉氍灕灖灗灒爞爟犩獿瓘瓕瓙瓗癭皭礵禴穰穱籗籜籙籛籚"],["f740","糴糱纑罏羇臞艫蘴蘵蘳蘬蘲蘶蠬蠨蠦蠪蠥襱覿覾觻譾讄讂讆讅譿贕躕躔躚躒躐躖躗轠轢酇鑌鑐鑊鑋鑏鑇鑅鑈鑉鑆霿韣顪顩飋饔饛驎驓驔驌驏驈驊"],["f7a1","驉驒驐髐鬙鬫鬻魖魕鱆鱈鰿鱄鰹鰳鱁鰼鰷鰴鰲鰽鰶鷛鷒鷞鷚鷋鷐鷜鷑鷟鷩鷙鷘鷖鷵鷕鷝麶黰鼵鼳鼲齂齫龕龢儽劙壨壧奲孍巘蠯彏戁戃戄攩攥斖曫欑欒欏毊灛灚爢玂玁玃癰矔籧籦纕艬蘺虀蘹蘼蘱蘻蘾蠰蠲蠮蠳襶襴襳觾"],["f840","讌讎讋讈豅贙躘轤轣醼鑢鑕鑝鑗鑞韄韅頀驖驙鬞鬟鬠鱒鱘鱐鱊鱍鱋鱕鱙鱌鱎鷻鷷鷯鷣鷫鷸鷤鷶鷡鷮鷦鷲鷰鷢鷬鷴鷳鷨鷭黂黐黲黳鼆鼜鼸鼷鼶齃齏"],["f8a1","齱齰齮齯囓囍孎屭攭曭曮欓灟灡灝灠爣瓛瓥矕礸禷禶籪纗羉艭虃蠸蠷蠵衋讔讕躞躟躠躝醾醽釂鑫鑨鑩雥靆靃靇韇韥驞髕魙鱣鱧鱦鱢鱞鱠鸂鷾鸇鸃鸆鸅鸀鸁鸉鷿鷽鸄麠鼞齆齴齵齶囔攮斸欘欙欗欚灢爦犪矘矙礹籩籫糶纚"],["f940","纘纛纙臠臡虆虇虈襹襺襼襻觿讘讙躥躤躣鑮鑭鑯鑱鑳靉顲饟鱨鱮鱭鸋鸍鸐鸏鸒鸑麡黵鼉齇齸齻齺齹圞灦籯蠼趲躦釃鑴鑸鑶鑵驠鱴鱳鱱鱵鸔鸓黶鼊"],["f9a1","龤灨灥糷虪蠾蠽蠿讞貜躩軉靋顳顴飌饡馫驤驦驧鬤鸕鸗齈戇欞爧虌躨钂钀钁驩驨鬮鸙爩虋讟钃鱹麷癵驫鱺鸝灩灪麤齾齉龘碁銹裏墻恒粧嫺╔╦╗╠╬╣╚╩╝╒╤╕╞╪╡╘╧╛╓╥╖╟╫╢╙╨╜║═╭╮╰╯▓"]]')},406:e=>{"use strict";e.exports=JSON.parse('[["0","\\u0000",127],["8ea1","｡",62],["a1a1","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇"],["a2a1","◆□■△▲▽▼※〒→←↑↓〓"],["a2ba","∈∋⊆⊇⊂⊃∪∩"],["a2ca","∧∨￢⇒⇔∀∃"],["a2dc","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["a2f2","Å‰♯♭♪†‡¶"],["a2fe","◯"],["a3b0","０",9],["a3c1","Ａ",25],["a3e1","ａ",25],["a4a1","ぁ",82],["a5a1","ァ",85],["a6a1","Α",16,"Σ",6],["a6c1","α",16,"σ",6],["a7a1","А",5,"ЁЖ",25],["a7d1","а",5,"ёж",25],["a8a1","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["ada1","①",19,"Ⅰ",9],["adc0","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["addf","㍻〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["b0a1","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["b1a1","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応"],["b2a1","押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["b3a1","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱"],["b4a1","粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["b5a1","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京"],["b6a1","供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["b7a1","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲"],["b8a1","検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["b9a1","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込"],["baa1","此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["bba1","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時"],["bca1","次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["bda1","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償"],["bea1","勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["bfa1","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾"],["c0a1","澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["c1a1","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎"],["c2a1","臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["c3a1","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵"],["c4a1","帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["c5a1","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到"],["c6a1","董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["c7a1","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦"],["c8a1","函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["c9a1","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服"],["caa1","福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["cba1","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満"],["cca1","漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["cda1","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃"],["cea1","痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["cfa1","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["d0a1","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["d1a1","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨"],["d2a1","辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["d3a1","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉"],["d4a1","圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["d5a1","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓"],["d6a1","屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["d7a1","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚"],["d8a1","悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["d9a1","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼"],["daa1","據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["dba1","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍"],["dca1","棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["dda1","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾"],["dea1","沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["dfa1","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼"],["e0a1","燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e1a1","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰"],["e2a1","癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e3a1","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐"],["e4a1","筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e5a1","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺"],["e6a1","罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e7a1","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙"],["e8a1","茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e9a1","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙"],["eaa1","蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["eba1","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫"],["eca1","譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["eda1","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸"],["eea1","遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["efa1","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞"],["f0a1","陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["f1a1","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷"],["f2a1","髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["f3a1","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠"],["f4a1","堯槇遙瑤凜熙"],["f9a1","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德"],["faa1","忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["fba1","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚"],["fca1","釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["fcf1","ⅰ",9,"￢￤＇＂"],["8fa2af","˘ˇ¸˙˝¯˛˚～΄΅"],["8fa2c2","¡¦¿"],["8fa2eb","ºª©®™¤№"],["8fa6e1","ΆΈΉΊΪ"],["8fa6e7","Ό"],["8fa6e9","ΎΫ"],["8fa6ec","Ώ"],["8fa6f1","άέήίϊΐόςύϋΰώ"],["8fa7c2","Ђ",10,"ЎЏ"],["8fa7f2","ђ",10,"ўџ"],["8fa9a1","ÆĐ"],["8fa9a4","Ħ"],["8fa9a6","Ĳ"],["8fa9a8","ŁĿ"],["8fa9ab","ŊØŒ"],["8fa9af","ŦÞ"],["8fa9c1","æđðħıĳĸłŀŉŋøœßŧþ"],["8faaa1","ÁÀÄÂĂǍĀĄÅÃĆĈČÇĊĎÉÈËÊĚĖĒĘ"],["8faaba","ĜĞĢĠĤÍÌÏÎǏİĪĮĨĴĶĹĽĻŃŇŅÑÓÒÖÔǑŐŌÕŔŘŖŚŜŠŞŤŢÚÙÜÛŬǓŰŪŲŮŨǗǛǙǕŴÝŸŶŹŽŻ"],["8faba1","áàäâăǎāąåãćĉčçċďéèëêěėēęǵĝğ"],["8fabbd","ġĥíìïîǐ"],["8fabc5","īįĩĵķĺľļńňņñóòöôǒőōõŕřŗśŝšşťţúùüûŭǔűūųůũǘǜǚǖŵýÿŷźžż"],["8fb0a1","丂丄丅丌丒丟丣两丨丫丮丯丰丵乀乁乄乇乑乚乜乣乨乩乴乵乹乿亍亖亗亝亯亹仃仐仚仛仠仡仢仨仯仱仳仵份仾仿伀伂伃伈伋伌伒伕伖众伙伮伱你伳伵伷伹伻伾佀佂佈佉佋佌佒佔佖佘佟佣佪佬佮佱佷佸佹佺佽佾侁侂侄"],["8fb1a1","侅侉侊侌侎侐侒侓侔侗侙侚侞侟侲侷侹侻侼侽侾俀俁俅俆俈俉俋俌俍俏俒俜俠俢俰俲俼俽俿倀倁倄倇倊倌倎倐倓倗倘倛倜倝倞倢倧倮倰倲倳倵偀偁偂偅偆偊偌偎偑偒偓偗偙偟偠偢偣偦偧偪偭偰偱倻傁傃傄傆傊傎傏傐"],["8fb2a1","傒傓傔傖傛傜傞",4,"傪傯傰傹傺傽僀僃僄僇僌僎僐僓僔僘僜僝僟僢僤僦僨僩僯僱僶僺僾儃儆儇儈儋儌儍儎僲儐儗儙儛儜儝儞儣儧儨儬儭儯儱儳儴儵儸儹兂兊兏兓兕兗兘兟兤兦兾冃冄冋冎冘冝冡冣冭冸冺冼冾冿凂"],["8fb3a1","凈减凑凒凓凕凘凞凢凥凮凲凳凴凷刁刂刅划刓刕刖刘刢刨刱刲刵刼剅剉剕剗剘剚剜剟剠剡剦剮剷剸剹劀劂劅劊劌劓劕劖劗劘劚劜劤劥劦劧劯劰劶劷劸劺劻劽勀勄勆勈勌勏勑勔勖勛勜勡勥勨勩勪勬勰勱勴勶勷匀匃匊匋"],["8fb4a1","匌匑匓匘匛匜匞匟匥匧匨匩匫匬匭匰匲匵匼匽匾卂卌卋卙卛卡卣卥卬卭卲卹卾厃厇厈厎厓厔厙厝厡厤厪厫厯厲厴厵厷厸厺厽叀叅叏叒叓叕叚叝叞叠另叧叵吂吓吚吡吧吨吪启吱吴吵呃呄呇呍呏呞呢呤呦呧呩呫呭呮呴呿"],["8fb5a1","咁咃咅咈咉咍咑咕咖咜咟咡咦咧咩咪咭咮咱咷咹咺咻咿哆哊响哎哠哪哬哯哶哼哾哿唀唁唅唈唉唌唍唎唕唪唫唲唵唶唻唼唽啁啇啉啊啍啐啑啘啚啛啞啠啡啤啦啿喁喂喆喈喎喏喑喒喓喔喗喣喤喭喲喿嗁嗃嗆嗉嗋嗌嗎嗑嗒"],["8fb6a1","嗓嗗嗘嗛嗞嗢嗩嗶嗿嘅嘈嘊嘍",5,"嘙嘬嘰嘳嘵嘷嘹嘻嘼嘽嘿噀噁噃噄噆噉噋噍噏噔噞噠噡噢噣噦噩噭噯噱噲噵嚄嚅嚈嚋嚌嚕嚙嚚嚝嚞嚟嚦嚧嚨嚩嚫嚬嚭嚱嚳嚷嚾囅囉囊囋囏囐囌囍囙囜囝囟囡囤",4,"囱囫园"],["8fb7a1","囶囷圁圂圇圊圌圑圕圚圛圝圠圢圣圤圥圩圪圬圮圯圳圴圽圾圿坅坆坌坍坒坢坥坧坨坫坭",4,"坳坴坵坷坹坺坻坼坾垁垃垌垔垗垙垚垜垝垞垟垡垕垧垨垩垬垸垽埇埈埌埏埕埝埞埤埦埧埩埭埰埵埶埸埽埾埿堃堄堈堉埡"],["8fb8a1","堌堍堛堞堟堠堦堧堭堲堹堿塉塌塍塏塐塕塟塡塤塧塨塸塼塿墀墁墇墈墉墊墌墍墏墐墔墖墝墠墡墢墦墩墱墲壄墼壂壈壍壎壐壒壔壖壚壝壡壢壩壳夅夆夋夌夒夓夔虁夝夡夣夤夨夯夰夳夵夶夿奃奆奒奓奙奛奝奞奟奡奣奫奭"],["8fb9a1","奯奲奵奶她奻奼妋妌妎妒妕妗妟妤妧妭妮妯妰妳妷妺妼姁姃姄姈姊姍姒姝姞姟姣姤姧姮姯姱姲姴姷娀娄娌娍娎娒娓娞娣娤娧娨娪娭娰婄婅婇婈婌婐婕婞婣婥婧婭婷婺婻婾媋媐媓媖媙媜媞媟媠媢媧媬媱媲媳媵媸媺媻媿"],["8fbaa1","嫄嫆嫈嫏嫚嫜嫠嫥嫪嫮嫵嫶嫽嬀嬁嬈嬗嬴嬙嬛嬝嬡嬥嬭嬸孁孋孌孒孖孞孨孮孯孼孽孾孿宁宄宆宊宎宐宑宓宔宖宨宩宬宭宯宱宲宷宺宼寀寁寍寏寖",4,"寠寯寱寴寽尌尗尞尟尣尦尩尫尬尮尰尲尵尶屙屚屜屢屣屧屨屩"],["8fbba1","屭屰屴屵屺屻屼屽岇岈岊岏岒岝岟岠岢岣岦岪岲岴岵岺峉峋峒峝峗峮峱峲峴崁崆崍崒崫崣崤崦崧崱崴崹崽崿嵂嵃嵆嵈嵕嵑嵙嵊嵟嵠嵡嵢嵤嵪嵭嵰嵹嵺嵾嵿嶁嶃嶈嶊嶒嶓嶔嶕嶙嶛嶟嶠嶧嶫嶰嶴嶸嶹巃巇巋巐巎巘巙巠巤"],["8fbca1","巩巸巹帀帇帍帒帔帕帘帟帠帮帨帲帵帾幋幐幉幑幖幘幛幜幞幨幪",4,"幰庀庋庎庢庤庥庨庪庬庱庳庽庾庿廆廌廋廎廑廒廔廕廜廞廥廫异弆弇弈弎弙弜弝弡弢弣弤弨弫弬弮弰弴弶弻弽弿彀彄彅彇彍彐彔彘彛彠彣彤彧"],["8fbda1","彯彲彴彵彸彺彽彾徉徍徏徖徜徝徢徧徫徤徬徯徰徱徸忄忇忈忉忋忐",4,"忞忡忢忨忩忪忬忭忮忯忲忳忶忺忼怇怊怍怓怔怗怘怚怟怤怭怳怵恀恇恈恉恌恑恔恖恗恝恡恧恱恾恿悂悆悈悊悎悑悓悕悘悝悞悢悤悥您悰悱悷"],["8fbea1","悻悾惂惄惈惉惊惋惎惏惔惕惙惛惝惞惢惥惲惵惸惼惽愂愇愊愌愐",4,"愖愗愙愜愞愢愪愫愰愱愵愶愷愹慁慅慆慉慞慠慬慲慸慻慼慿憀憁憃憄憋憍憒憓憗憘憜憝憟憠憥憨憪憭憸憹憼懀懁懂懎懏懕懜懝懞懟懡懢懧懩懥"],["8fbfa1","懬懭懯戁戃戄戇戓戕戜戠戢戣戧戩戫戹戽扂扃扄扆扌扐扑扒扔扖扚扜扤扭扯扳扺扽抍抎抏抐抦抨抳抶抷抺抾抿拄拎拕拖拚拪拲拴拼拽挃挄挊挋挍挐挓挖挘挩挪挭挵挶挹挼捁捂捃捄捆捊捋捎捒捓捔捘捛捥捦捬捭捱捴捵"],["8fc0a1","捸捼捽捿掂掄掇掊掐掔掕掙掚掞掤掦掭掮掯掽揁揅揈揎揑揓揔揕揜揠揥揪揬揲揳揵揸揹搉搊搐搒搔搘搞搠搢搤搥搩搪搯搰搵搽搿摋摏摑摒摓摔摚摛摜摝摟摠摡摣摭摳摴摻摽撅撇撏撐撑撘撙撛撝撟撡撣撦撨撬撳撽撾撿"],["8fc1a1","擄擉擊擋擌擎擐擑擕擗擤擥擩擪擭擰擵擷擻擿攁攄攈攉攊攏攓攔攖攙攛攞攟攢攦攩攮攱攺攼攽敃敇敉敐敒敔敟敠敧敫敺敽斁斅斊斒斕斘斝斠斣斦斮斲斳斴斿旂旈旉旎旐旔旖旘旟旰旲旴旵旹旾旿昀昄昈昉昍昑昒昕昖昝"],["8fc2a1","昞昡昢昣昤昦昩昪昫昬昮昰昱昳昹昷晀晅晆晊晌晑晎晗晘晙晛晜晠晡曻晪晫晬晾晳晵晿晷晸晹晻暀晼暋暌暍暐暒暙暚暛暜暟暠暤暭暱暲暵暻暿曀曂曃曈曌曎曏曔曛曟曨曫曬曮曺朅朇朎朓朙朜朠朢朳朾杅杇杈杌杔杕杝"],["8fc3a1","杦杬杮杴杶杻极构枎枏枑枓枖枘枙枛枰枱枲枵枻枼枽柹柀柂柃柅柈柉柒柗柙柜柡柦柰柲柶柷桒栔栙栝栟栨栧栬栭栯栰栱栳栻栿桄桅桊桌桕桗桘桛桫桮",4,"桵桹桺桻桼梂梄梆梈梖梘梚梜梡梣梥梩梪梮梲梻棅棈棌棏"],["8fc4a1","棐棑棓棖棙棜棝棥棨棪棫棬棭棰棱棵棶棻棼棽椆椉椊椐椑椓椖椗椱椳椵椸椻楂楅楉楎楗楛楣楤楥楦楨楩楬楰楱楲楺楻楿榀榍榒榖榘榡榥榦榨榫榭榯榷榸榺榼槅槈槑槖槗槢槥槮槯槱槳槵槾樀樁樃樏樑樕樚樝樠樤樨樰樲"],["8fc5a1","樴樷樻樾樿橅橆橉橊橎橐橑橒橕橖橛橤橧橪橱橳橾檁檃檆檇檉檋檑檛檝檞檟檥檫檯檰檱檴檽檾檿櫆櫉櫈櫌櫐櫔櫕櫖櫜櫝櫤櫧櫬櫰櫱櫲櫼櫽欂欃欆欇欉欏欐欑欗欛欞欤欨欫欬欯欵欶欻欿歆歊歍歒歖歘歝歠歧歫歮歰歵歽"],["8fc6a1","歾殂殅殗殛殟殠殢殣殨殩殬殭殮殰殸殹殽殾毃毄毉毌毖毚毡毣毦毧毮毱毷毹毿氂氄氅氉氍氎氐氒氙氟氦氧氨氬氮氳氵氶氺氻氿汊汋汍汏汒汔汙汛汜汫汭汯汴汶汸汹汻沅沆沇沉沔沕沗沘沜沟沰沲沴泂泆泍泏泐泑泒泔泖"],["8fc7a1","泚泜泠泧泩泫泬泮泲泴洄洇洊洎洏洑洓洚洦洧洨汧洮洯洱洹洼洿浗浞浟浡浥浧浯浰浼涂涇涑涒涔涖涗涘涪涬涴涷涹涽涿淄淈淊淎淏淖淛淝淟淠淢淥淩淯淰淴淶淼渀渄渞渢渧渲渶渹渻渼湄湅湈湉湋湏湑湒湓湔湗湜湝湞"],["8fc8a1","湢湣湨湳湻湽溍溓溙溠溧溭溮溱溳溻溿滀滁滃滇滈滊滍滎滏滫滭滮滹滻滽漄漈漊漌漍漖漘漚漛漦漩漪漯漰漳漶漻漼漭潏潑潒潓潗潙潚潝潞潡潢潨潬潽潾澃澇澈澋澌澍澐澒澓澔澖澚澟澠澥澦澧澨澮澯澰澵澶澼濅濇濈濊"],["8fc9a1","濚濞濨濩濰濵濹濼濽瀀瀅瀆瀇瀍瀗瀠瀣瀯瀴瀷瀹瀼灃灄灈灉灊灋灔灕灝灞灎灤灥灬灮灵灶灾炁炅炆炔",4,"炛炤炫炰炱炴炷烊烑烓烔烕烖烘烜烤烺焃",4,"焋焌焏焞焠焫焭焯焰焱焸煁煅煆煇煊煋煐煒煗煚煜煞煠"],["8fcaa1","煨煹熀熅熇熌熒熚熛熠熢熯熰熲熳熺熿燀燁燄燋燌燓燖燙燚燜燸燾爀爇爈爉爓爗爚爝爟爤爫爯爴爸爹牁牂牃牅牎牏牐牓牕牖牚牜牞牠牣牨牫牮牯牱牷牸牻牼牿犄犉犍犎犓犛犨犭犮犱犴犾狁狇狉狌狕狖狘狟狥狳狴狺狻"],["8fcba1","狾猂猄猅猇猋猍猒猓猘猙猞猢猤猧猨猬猱猲猵猺猻猽獃獍獐獒獖獘獝獞獟獠獦獧獩獫獬獮獯獱獷獹獼玀玁玃玅玆玎玐玓玕玗玘玜玞玟玠玢玥玦玪玫玭玵玷玹玼玽玿珅珆珉珋珌珏珒珓珖珙珝珡珣珦珧珩珴珵珷珹珺珻珽"],["8fcca1","珿琀琁琄琇琊琑琚琛琤琦琨",9,"琹瑀瑃瑄瑆瑇瑋瑍瑑瑒瑗瑝瑢瑦瑧瑨瑫瑭瑮瑱瑲璀璁璅璆璇璉璏璐璑璒璘璙璚璜璟璠璡璣璦璨璩璪璫璮璯璱璲璵璹璻璿瓈瓉瓌瓐瓓瓘瓚瓛瓞瓟瓤瓨瓪瓫瓯瓴瓺瓻瓼瓿甆"],["8fcda1","甒甖甗甠甡甤甧甩甪甯甶甹甽甾甿畀畃畇畈畎畐畒畗畞畟畡畯畱畹",5,"疁疅疐疒疓疕疙疜疢疤疴疺疿痀痁痄痆痌痎痏痗痜痟痠痡痤痧痬痮痯痱痹瘀瘂瘃瘄瘇瘈瘊瘌瘏瘒瘓瘕瘖瘙瘛瘜瘝瘞瘣瘥瘦瘩瘭瘲瘳瘵瘸瘹"],["8fcea1","瘺瘼癊癀癁癃癄癅癉癋癕癙癟癤癥癭癮癯癱癴皁皅皌皍皕皛皜皝皟皠皢",6,"皪皭皽盁盅盉盋盌盎盔盙盠盦盨盬盰盱盶盹盼眀眆眊眎眒眔眕眗眙眚眜眢眨眭眮眯眴眵眶眹眽眾睂睅睆睊睍睎睏睒睖睗睜睞睟睠睢"],["8fcfa1","睤睧睪睬睰睲睳睴睺睽瞀瞄瞌瞍瞔瞕瞖瞚瞟瞢瞧瞪瞮瞯瞱瞵瞾矃矉矑矒矕矙矞矟矠矤矦矪矬矰矱矴矸矻砅砆砉砍砎砑砝砡砢砣砭砮砰砵砷硃硄硇硈硌硎硒硜硞硠硡硣硤硨硪确硺硾碊碏碔碘碡碝碞碟碤碨碬碭碰碱碲碳"],["8fd0a1","碻碽碿磇磈磉磌磎磒磓磕磖磤磛磟磠磡磦磪磲磳礀磶磷磺磻磿礆礌礐礚礜礞礟礠礥礧礩礭礱礴礵礻礽礿祄祅祆祊祋祏祑祔祘祛祜祧祩祫祲祹祻祼祾禋禌禑禓禔禕禖禘禛禜禡禨禩禫禯禱禴禸离秂秄秇秈秊秏秔秖秚秝秞"],["8fd1a1","秠秢秥秪秫秭秱秸秼稂稃稇稉稊稌稑稕稛稞稡稧稫稭稯稰稴稵稸稹稺穄穅穇穈穌穕穖穙穜穝穟穠穥穧穪穭穵穸穾窀窂窅窆窊窋窐窑窔窞窠窣窬窳窵窹窻窼竆竉竌竎竑竛竨竩竫竬竱竴竻竽竾笇笔笟笣笧笩笪笫笭笮笯笰"],["8fd2a1","笱笴笽笿筀筁筇筎筕筠筤筦筩筪筭筯筲筳筷箄箉箎箐箑箖箛箞箠箥箬箯箰箲箵箶箺箻箼箽篂篅篈篊篔篖篗篙篚篛篨篪篲篴篵篸篹篺篼篾簁簂簃簄簆簉簋簌簎簏簙簛簠簥簦簨簬簱簳簴簶簹簺籆籊籕籑籒籓籙",5],["8fd3a1","籡籣籧籩籭籮籰籲籹籼籽粆粇粏粔粞粠粦粰粶粷粺粻粼粿糄糇糈糉糍糏糓糔糕糗糙糚糝糦糩糫糵紃紇紈紉紏紑紒紓紖紝紞紣紦紪紭紱紼紽紾絀絁絇絈絍絑絓絗絙絚絜絝絥絧絪絰絸絺絻絿綁綂綃綅綆綈綋綌綍綑綖綗綝"],["8fd4a1","綞綦綧綪綳綶綷綹緂",4,"緌緍緎緗緙縀緢緥緦緪緫緭緱緵緶緹緺縈縐縑縕縗縜縝縠縧縨縬縭縯縳縶縿繄繅繇繎繐繒繘繟繡繢繥繫繮繯繳繸繾纁纆纇纊纍纑纕纘纚纝纞缼缻缽缾缿罃罄罇罏罒罓罛罜罝罡罣罤罥罦罭"],["8fd5a1","罱罽罾罿羀羋羍羏羐羑羖羗羜羡羢羦羪羭羴羼羿翀翃翈翎翏翛翟翣翥翨翬翮翯翲翺翽翾翿耇耈耊耍耎耏耑耓耔耖耝耞耟耠耤耦耬耮耰耴耵耷耹耺耼耾聀聄聠聤聦聭聱聵肁肈肎肜肞肦肧肫肸肹胈胍胏胒胔胕胗胘胠胭胮"],["8fd6a1","胰胲胳胶胹胺胾脃脋脖脗脘脜脞脠脤脧脬脰脵脺脼腅腇腊腌腒腗腠腡腧腨腩腭腯腷膁膐膄膅膆膋膎膖膘膛膞膢膮膲膴膻臋臃臅臊臎臏臕臗臛臝臞臡臤臫臬臰臱臲臵臶臸臹臽臿舀舃舏舓舔舙舚舝舡舢舨舲舴舺艃艄艅艆"],["8fd7a1","艋艎艏艑艖艜艠艣艧艭艴艻艽艿芀芁芃芄芇芉芊芎芑芔芖芘芚芛芠芡芣芤芧芨芩芪芮芰芲芴芷芺芼芾芿苆苐苕苚苠苢苤苨苪苭苯苶苷苽苾茀茁茇茈茊茋荔茛茝茞茟茡茢茬茭茮茰茳茷茺茼茽荂荃荄荇荍荎荑荕荖荗荰荸"],["8fd8a1","荽荿莀莂莄莆莍莒莔莕莘莙莛莜莝莦莧莩莬莾莿菀菇菉菏菐菑菔菝荓菨菪菶菸菹菼萁萆萊萏萑萕萙莭萯萹葅葇葈葊葍葏葑葒葖葘葙葚葜葠葤葥葧葪葰葳葴葶葸葼葽蒁蒅蒒蒓蒕蒞蒦蒨蒩蒪蒯蒱蒴蒺蒽蒾蓀蓂蓇蓈蓌蓏蓓"],["8fd9a1","蓜蓧蓪蓯蓰蓱蓲蓷蔲蓺蓻蓽蔂蔃蔇蔌蔎蔐蔜蔞蔢蔣蔤蔥蔧蔪蔫蔯蔳蔴蔶蔿蕆蕏",4,"蕖蕙蕜",6,"蕤蕫蕯蕹蕺蕻蕽蕿薁薅薆薉薋薌薏薓薘薝薟薠薢薥薧薴薶薷薸薼薽薾薿藂藇藊藋藎薭藘藚藟藠藦藨藭藳藶藼"],["8fdaa1","藿蘀蘄蘅蘍蘎蘐蘑蘒蘘蘙蘛蘞蘡蘧蘩蘶蘸蘺蘼蘽虀虂虆虒虓虖虗虘虙虝虠",4,"虩虬虯虵虶虷虺蚍蚑蚖蚘蚚蚜蚡蚦蚧蚨蚭蚱蚳蚴蚵蚷蚸蚹蚿蛀蛁蛃蛅蛑蛒蛕蛗蛚蛜蛠蛣蛥蛧蚈蛺蛼蛽蜄蜅蜇蜋蜎蜏蜐蜓蜔蜙蜞蜟蜡蜣"],["8fdba1","蜨蜮蜯蜱蜲蜹蜺蜼蜽蜾蝀蝃蝅蝍蝘蝝蝡蝤蝥蝯蝱蝲蝻螃",6,"螋螌螐螓螕螗螘螙螞螠螣螧螬螭螮螱螵螾螿蟁蟈蟉蟊蟎蟕蟖蟙蟚蟜蟟蟢蟣蟤蟪蟫蟭蟱蟳蟸蟺蟿蠁蠃蠆蠉蠊蠋蠐蠙蠒蠓蠔蠘蠚蠛蠜蠞蠟蠨蠭蠮蠰蠲蠵"],["8fdca1","蠺蠼衁衃衅衈衉衊衋衎衑衕衖衘衚衜衟衠衤衩衱衹衻袀袘袚袛袜袟袠袨袪袺袽袾裀裊",4,"裑裒裓裛裞裧裯裰裱裵裷褁褆褍褎褏褕褖褘褙褚褜褠褦褧褨褰褱褲褵褹褺褾襀襂襅襆襉襏襒襗襚襛襜襡襢襣襫襮襰襳襵襺"],["8fdda1","襻襼襽覉覍覐覔覕覛覜覟覠覥覰覴覵覶覷覼觔",4,"觥觩觫觭觱觳觶觹觽觿訄訅訇訏訑訒訔訕訞訠訢訤訦訫訬訯訵訷訽訾詀詃詅詇詉詍詎詓詖詗詘詜詝詡詥詧詵詶詷詹詺詻詾詿誀誃誆誋誏誐誒誖誗誙誟誧誩誮誯誳"],["8fdea1","誶誷誻誾諃諆諈諉諊諑諓諔諕諗諝諟諬諰諴諵諶諼諿謅謆謋謑謜謞謟謊謭謰謷謼譂",4,"譈譒譓譔譙譍譞譣譭譶譸譹譼譾讁讄讅讋讍讏讔讕讜讞讟谸谹谽谾豅豇豉豋豏豑豓豔豗豘豛豝豙豣豤豦豨豩豭豳豵豶豻豾貆"],["8fdfa1","貇貋貐貒貓貙貛貜貤貹貺賅賆賉賋賏賖賕賙賝賡賨賬賯賰賲賵賷賸賾賿贁贃贉贒贗贛赥赩赬赮赿趂趄趈趍趐趑趕趞趟趠趦趫趬趯趲趵趷趹趻跀跅跆跇跈跊跎跑跔跕跗跙跤跥跧跬跰趼跱跲跴跽踁踄踅踆踋踑踔踖踠踡踢"],["8fe0a1","踣踦踧踱踳踶踷踸踹踽蹀蹁蹋蹍蹎蹏蹔蹛蹜蹝蹞蹡蹢蹩蹬蹭蹯蹰蹱蹹蹺蹻躂躃躉躐躒躕躚躛躝躞躢躧躩躭躮躳躵躺躻軀軁軃軄軇軏軑軔軜軨軮軰軱軷軹軺軭輀輂輇輈輏輐輖輗輘輞輠輡輣輥輧輨輬輭輮輴輵輶輷輺轀轁"],["8fe1a1","轃轇轏轑",4,"轘轝轞轥辝辠辡辤辥辦辵辶辸达迀迁迆迊迋迍运迒迓迕迠迣迤迨迮迱迵迶迻迾适逄逈逌逘逛逨逩逯逪逬逭逳逴逷逿遃遄遌遛遝遢遦遧遬遰遴遹邅邈邋邌邎邐邕邗邘邙邛邠邡邢邥邰邲邳邴邶邽郌邾郃"],["8fe2a1","郄郅郇郈郕郗郘郙郜郝郟郥郒郶郫郯郰郴郾郿鄀鄄鄅鄆鄈鄍鄐鄔鄖鄗鄘鄚鄜鄞鄠鄥鄢鄣鄧鄩鄮鄯鄱鄴鄶鄷鄹鄺鄼鄽酃酇酈酏酓酗酙酚酛酡酤酧酭酴酹酺酻醁醃醅醆醊醎醑醓醔醕醘醞醡醦醨醬醭醮醰醱醲醳醶醻醼醽醿"],["8fe3a1","釂釃釅釓釔釗釙釚釞釤釥釩釪釬",5,"釷釹釻釽鈀鈁鈄鈅鈆鈇鈉鈊鈌鈐鈒鈓鈖鈘鈜鈝鈣鈤鈥鈦鈨鈮鈯鈰鈳鈵鈶鈸鈹鈺鈼鈾鉀鉂鉃鉆鉇鉊鉍鉎鉏鉑鉘鉙鉜鉝鉠鉡鉥鉧鉨鉩鉮鉯鉰鉵",4,"鉻鉼鉽鉿銈銉銊銍銎銒銗"],["8fe4a1","銙銟銠銤銥銧銨銫銯銲銶銸銺銻銼銽銿",4,"鋅鋆鋇鋈鋋鋌鋍鋎鋐鋓鋕鋗鋘鋙鋜鋝鋟鋠鋡鋣鋥鋧鋨鋬鋮鋰鋹鋻鋿錀錂錈錍錑錔錕錜錝錞錟錡錤錥錧錩錪錳錴錶錷鍇鍈鍉鍐鍑鍒鍕鍗鍘鍚鍞鍤鍥鍧鍩鍪鍭鍯鍰鍱鍳鍴鍶"],["8fe5a1","鍺鍽鍿鎀鎁鎂鎈鎊鎋鎍鎏鎒鎕鎘鎛鎞鎡鎣鎤鎦鎨鎫鎴鎵鎶鎺鎩鏁鏄鏅鏆鏇鏉",4,"鏓鏙鏜鏞鏟鏢鏦鏧鏹鏷鏸鏺鏻鏽鐁鐂鐄鐈鐉鐍鐎鐏鐕鐖鐗鐟鐮鐯鐱鐲鐳鐴鐻鐿鐽鑃鑅鑈鑊鑌鑕鑙鑜鑟鑡鑣鑨鑫鑭鑮鑯鑱鑲钄钃镸镹"],["8fe6a1","镾閄閈閌閍閎閝閞閟閡閦閩閫閬閴閶閺閽閿闆闈闉闋闐闑闒闓闙闚闝闞闟闠闤闦阝阞阢阤阥阦阬阱阳阷阸阹阺阼阽陁陒陔陖陗陘陡陮陴陻陼陾陿隁隂隃隄隉隑隖隚隝隟隤隥隦隩隮隯隳隺雊雒嶲雘雚雝雞雟雩雯雱雺霂"],["8fe7a1","霃霅霉霚霛霝霡霢霣霨霱霳靁靃靊靎靏靕靗靘靚靛靣靧靪靮靳靶靷靸靻靽靿鞀鞉鞕鞖鞗鞙鞚鞞鞟鞢鞬鞮鞱鞲鞵鞶鞸鞹鞺鞼鞾鞿韁韄韅韇韉韊韌韍韎韐韑韔韗韘韙韝韞韠韛韡韤韯韱韴韷韸韺頇頊頙頍頎頔頖頜頞頠頣頦"],["8fe8a1","頫頮頯頰頲頳頵頥頾顄顇顊顑顒顓顖顗顙顚顢顣顥顦顪顬颫颭颮颰颴颷颸颺颻颿飂飅飈飌飡飣飥飦飧飪飳飶餂餇餈餑餕餖餗餚餛餜餟餢餦餧餫餱",4,"餹餺餻餼饀饁饆饇饈饍饎饔饘饙饛饜饞饟饠馛馝馟馦馰馱馲馵"],["8fe9a1","馹馺馽馿駃駉駓駔駙駚駜駞駧駪駫駬駰駴駵駹駽駾騂騃騄騋騌騐騑騖騞騠騢騣騤騧騭騮騳騵騶騸驇驁驄驊驋驌驎驑驔驖驝骪骬骮骯骲骴骵骶骹骻骾骿髁髃髆髈髎髐髒髕髖髗髛髜髠髤髥髧髩髬髲髳髵髹髺髽髿",4],["8feaa1","鬄鬅鬈鬉鬋鬌鬍鬎鬐鬒鬖鬙鬛鬜鬠鬦鬫鬭鬳鬴鬵鬷鬹鬺鬽魈魋魌魕魖魗魛魞魡魣魥魦魨魪",4,"魳魵魷魸魹魿鮀鮄鮅鮆鮇鮉鮊鮋鮍鮏鮐鮔鮚鮝鮞鮦鮧鮩鮬鮰鮱鮲鮷鮸鮻鮼鮾鮿鯁鯇鯈鯎鯐鯗鯘鯝鯟鯥鯧鯪鯫鯯鯳鯷鯸"],["8feba1","鯹鯺鯽鯿鰀鰂鰋鰏鰑鰖鰘鰙鰚鰜鰞鰢鰣鰦",4,"鰱鰵鰶鰷鰽鱁鱃鱄鱅鱉鱊鱎鱏鱐鱓鱔鱖鱘鱛鱝鱞鱟鱣鱩鱪鱜鱫鱨鱮鱰鱲鱵鱷鱻鳦鳲鳷鳹鴋鴂鴑鴗鴘鴜鴝鴞鴯鴰鴲鴳鴴鴺鴼鵅鴽鵂鵃鵇鵊鵓鵔鵟鵣鵢鵥鵩鵪鵫鵰鵶鵷鵻"],["8feca1","鵼鵾鶃鶄鶆鶊鶍鶎鶒鶓鶕鶖鶗鶘鶡鶪鶬鶮鶱鶵鶹鶼鶿鷃鷇鷉鷊鷔鷕鷖鷗鷚鷞鷟鷠鷥鷧鷩鷫鷮鷰鷳鷴鷾鸊鸂鸇鸎鸐鸑鸒鸕鸖鸙鸜鸝鹺鹻鹼麀麂麃麄麅麇麎麏麖麘麛麞麤麨麬麮麯麰麳麴麵黆黈黋黕黟黤黧黬黭黮黰黱黲黵"],["8feda1","黸黿鼂鼃鼉鼏鼐鼑鼒鼔鼖鼗鼙鼚鼛鼟鼢鼦鼪鼫鼯鼱鼲鼴鼷鼹鼺鼼鼽鼿齁齃",4,"齓齕齖齗齘齚齝齞齨齩齭",4,"齳齵齺齽龏龐龑龒龔龖龗龞龡龢龣龥"]]')},129:e=>{"use strict";e.exports=JSON.parse('{"uChars":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],"gbChars":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}')},914:e=>{"use strict";e.exports=JSON.parse('[["a140","",62],["a180","",32],["a240","",62],["a280","",32],["a2ab","",5],["a2e3","€"],["a2ef",""],["a2fd",""],["a340","",62],["a380","",31,"　"],["a440","",62],["a480","",32],["a4f4","",10],["a540","",62],["a580","",32],["a5f7","",7],["a640","",62],["a680","",32],["a6b9","",7],["a6d9","",6],["a6ec",""],["a6f3",""],["a6f6","",8],["a740","",62],["a780","",32],["a7c2","",14],["a7f2","",12],["a896","",10],["a8bc","ḿ"],["a8bf","ǹ"],["a8c1",""],["a8ea","",20],["a958",""],["a95b",""],["a95d",""],["a989","〾⿰",11],["a997","",12],["a9f0","",14],["aaa1","",93],["aba1","",93],["aca1","",93],["ada1","",93],["aea1","",93],["afa1","",93],["d7fa","",4],["f8a1","",93],["f9a1","",93],["faa1","",93],["fba1","",93],["fca1","",93],["fda1","",93],["fe50","⺁⺄㑳㑇⺈⺋㖞㘚㘎⺌⺗㥮㤘㧏㧟㩳㧐㭎㱮㳠⺧⺪䁖䅟⺮䌷⺳⺶⺷䎱䎬⺻䏝䓖䙡䙌"],["fe80","䜣䜩䝼䞍⻊䥇䥺䥽䦂䦃䦅䦆䦟䦛䦷䦶䲣䲟䲠䲡䱷䲢䴓",6,"䶮",93],["8135f437",""]]')},679:e=>{"use strict";e.exports=JSON.parse('[["0","\\u0000",128],["a1","｡",62],["8140","　、。，．・：；？！゛゜´｀¨＾￣＿ヽヾゝゞ〃仝々〆〇ー―‐／＼～∥｜…‥‘’“”（）〔〕［］｛｝〈",9,"＋－±×"],["8180","÷＝≠＜＞≦≧∞∴♂♀°′″℃￥＄￠￡％＃＆＊＠§☆★○●◎◇◆□■△▲▽▼※〒→←↑↓〓"],["81b8","∈∋⊆⊇⊂⊃∪∩"],["81c8","∧∨￢⇒⇔∀∃"],["81da","∠⊥⌒∂∇≡≒≪≫√∽∝∵∫∬"],["81f0","Å‰♯♭♪†‡¶"],["81fc","◯"],["824f","０",9],["8260","Ａ",25],["8281","ａ",25],["829f","ぁ",82],["8340","ァ",62],["8380","ム",22],["839f","Α",16,"Σ",6],["83bf","α",16,"σ",6],["8440","А",5,"ЁЖ",25],["8470","а",5,"ёж",7],["8480","о",17],["849f","─│┌┐┘└├┬┤┴┼━┃┏┓┛┗┣┳┫┻╋┠┯┨┷┿┝┰┥┸╂"],["8740","①",19,"Ⅰ",9],["875f","㍉㌔㌢㍍㌘㌧㌃㌶㍑㍗㌍㌦㌣㌫㍊㌻㎜㎝㎞㎎㎏㏄㎡"],["877e","㍻"],["8780","〝〟№㏍℡㊤",4,"㈱㈲㈹㍾㍽㍼≒≡∫∮∑√⊥∠∟⊿∵∩∪"],["889f","亜唖娃阿哀愛挨姶逢葵茜穐悪握渥旭葦芦鯵梓圧斡扱宛姐虻飴絢綾鮎或粟袷安庵按暗案闇鞍杏以伊位依偉囲夷委威尉惟意慰易椅為畏異移維緯胃萎衣謂違遺医井亥域育郁磯一壱溢逸稲茨芋鰯允印咽員因姻引飲淫胤蔭"],["8940","院陰隠韻吋右宇烏羽迂雨卯鵜窺丑碓臼渦嘘唄欝蔚鰻姥厩浦瓜閏噂云運雲荏餌叡営嬰影映曳栄永泳洩瑛盈穎頴英衛詠鋭液疫益駅悦謁越閲榎厭円"],["8980","園堰奄宴延怨掩援沿演炎焔煙燕猿縁艶苑薗遠鉛鴛塩於汚甥凹央奥往応押旺横欧殴王翁襖鴬鴎黄岡沖荻億屋憶臆桶牡乙俺卸恩温穏音下化仮何伽価佳加可嘉夏嫁家寡科暇果架歌河火珂禍禾稼箇花苛茄荷華菓蝦課嘩貨迦過霞蚊俄峨我牙画臥芽蛾賀雅餓駕介会解回塊壊廻快怪悔恢懐戒拐改"],["8a40","魁晦械海灰界皆絵芥蟹開階貝凱劾外咳害崖慨概涯碍蓋街該鎧骸浬馨蛙垣柿蛎鈎劃嚇各廓拡撹格核殻獲確穫覚角赫較郭閣隔革学岳楽額顎掛笠樫"],["8a80","橿梶鰍潟割喝恰括活渇滑葛褐轄且鰹叶椛樺鞄株兜竃蒲釜鎌噛鴨栢茅萱粥刈苅瓦乾侃冠寒刊勘勧巻喚堪姦完官寛干幹患感慣憾換敢柑桓棺款歓汗漢澗潅環甘監看竿管簡緩缶翰肝艦莞観諌貫還鑑間閑関陥韓館舘丸含岸巌玩癌眼岩翫贋雁頑顔願企伎危喜器基奇嬉寄岐希幾忌揮机旗既期棋棄"],["8b40","機帰毅気汽畿祈季稀紀徽規記貴起軌輝飢騎鬼亀偽儀妓宜戯技擬欺犠疑祇義蟻誼議掬菊鞠吉吃喫桔橘詰砧杵黍却客脚虐逆丘久仇休及吸宮弓急救"],["8b80","朽求汲泣灸球究窮笈級糾給旧牛去居巨拒拠挙渠虚許距鋸漁禦魚亨享京供侠僑兇競共凶協匡卿叫喬境峡強彊怯恐恭挟教橋況狂狭矯胸脅興蕎郷鏡響饗驚仰凝尭暁業局曲極玉桐粁僅勤均巾錦斤欣欽琴禁禽筋緊芹菌衿襟謹近金吟銀九倶句区狗玖矩苦躯駆駈駒具愚虞喰空偶寓遇隅串櫛釧屑屈"],["8c40","掘窟沓靴轡窪熊隈粂栗繰桑鍬勲君薫訓群軍郡卦袈祁係傾刑兄啓圭珪型契形径恵慶慧憩掲携敬景桂渓畦稽系経継繋罫茎荊蛍計詣警軽頚鶏芸迎鯨"],["8c80","劇戟撃激隙桁傑欠決潔穴結血訣月件倹倦健兼券剣喧圏堅嫌建憲懸拳捲検権牽犬献研硯絹県肩見謙賢軒遣鍵険顕験鹸元原厳幻弦減源玄現絃舷言諺限乎個古呼固姑孤己庫弧戸故枯湖狐糊袴股胡菰虎誇跨鈷雇顧鼓五互伍午呉吾娯後御悟梧檎瑚碁語誤護醐乞鯉交佼侯候倖光公功効勾厚口向"],["8d40","后喉坑垢好孔孝宏工巧巷幸広庚康弘恒慌抗拘控攻昂晃更杭校梗構江洪浩港溝甲皇硬稿糠紅紘絞綱耕考肯肱腔膏航荒行衡講貢購郊酵鉱砿鋼閤降"],["8d80","項香高鴻剛劫号合壕拷濠豪轟麹克刻告国穀酷鵠黒獄漉腰甑忽惚骨狛込此頃今困坤墾婚恨懇昏昆根梱混痕紺艮魂些佐叉唆嵯左差査沙瑳砂詐鎖裟坐座挫債催再最哉塞妻宰彩才採栽歳済災采犀砕砦祭斎細菜裁載際剤在材罪財冴坂阪堺榊肴咲崎埼碕鷺作削咋搾昨朔柵窄策索錯桜鮭笹匙冊刷"],["8e40","察拶撮擦札殺薩雑皐鯖捌錆鮫皿晒三傘参山惨撒散桟燦珊産算纂蚕讃賛酸餐斬暫残仕仔伺使刺司史嗣四士始姉姿子屍市師志思指支孜斯施旨枝止"],["8e80","死氏獅祉私糸紙紫肢脂至視詞詩試誌諮資賜雌飼歯事似侍児字寺慈持時次滋治爾璽痔磁示而耳自蒔辞汐鹿式識鴫竺軸宍雫七叱執失嫉室悉湿漆疾質実蔀篠偲柴芝屡蕊縞舎写射捨赦斜煮社紗者謝車遮蛇邪借勺尺杓灼爵酌釈錫若寂弱惹主取守手朱殊狩珠種腫趣酒首儒受呪寿授樹綬需囚収周"],["8f40","宗就州修愁拾洲秀秋終繍習臭舟蒐衆襲讐蹴輯週酋酬集醜什住充十従戎柔汁渋獣縦重銃叔夙宿淑祝縮粛塾熟出術述俊峻春瞬竣舜駿准循旬楯殉淳"],["8f80","準潤盾純巡遵醇順処初所暑曙渚庶緒署書薯藷諸助叙女序徐恕鋤除傷償勝匠升召哨商唱嘗奨妾娼宵将小少尚庄床廠彰承抄招掌捷昇昌昭晶松梢樟樵沼消渉湘焼焦照症省硝礁祥称章笑粧紹肖菖蒋蕉衝裳訟証詔詳象賞醤鉦鍾鐘障鞘上丈丞乗冗剰城場壌嬢常情擾条杖浄状畳穣蒸譲醸錠嘱埴飾"],["9040","拭植殖燭織職色触食蝕辱尻伸信侵唇娠寝審心慎振新晋森榛浸深申疹真神秦紳臣芯薪親診身辛進針震人仁刃塵壬尋甚尽腎訊迅陣靭笥諏須酢図厨"],["9080","逗吹垂帥推水炊睡粋翠衰遂酔錐錘随瑞髄崇嵩数枢趨雛据杉椙菅頗雀裾澄摺寸世瀬畝是凄制勢姓征性成政整星晴棲栖正清牲生盛精聖声製西誠誓請逝醒青静斉税脆隻席惜戚斥昔析石積籍績脊責赤跡蹟碩切拙接摂折設窃節説雪絶舌蝉仙先千占宣専尖川戦扇撰栓栴泉浅洗染潜煎煽旋穿箭線"],["9140","繊羨腺舛船薦詮賎践選遷銭銑閃鮮前善漸然全禅繕膳糎噌塑岨措曾曽楚狙疏疎礎祖租粗素組蘇訴阻遡鼠僧創双叢倉喪壮奏爽宋層匝惣想捜掃挿掻"],["9180","操早曹巣槍槽漕燥争痩相窓糟総綜聡草荘葬蒼藻装走送遭鎗霜騒像増憎臓蔵贈造促側則即息捉束測足速俗属賊族続卒袖其揃存孫尊損村遜他多太汰詑唾堕妥惰打柁舵楕陀駄騨体堆対耐岱帯待怠態戴替泰滞胎腿苔袋貸退逮隊黛鯛代台大第醍題鷹滝瀧卓啄宅托択拓沢濯琢託鐸濁諾茸凧蛸只"],["9240","叩但達辰奪脱巽竪辿棚谷狸鱈樽誰丹単嘆坦担探旦歎淡湛炭短端箪綻耽胆蛋誕鍛団壇弾断暖檀段男談値知地弛恥智池痴稚置致蜘遅馳築畜竹筑蓄"],["9280","逐秩窒茶嫡着中仲宙忠抽昼柱注虫衷註酎鋳駐樗瀦猪苧著貯丁兆凋喋寵帖帳庁弔張彫徴懲挑暢朝潮牒町眺聴脹腸蝶調諜超跳銚長頂鳥勅捗直朕沈珍賃鎮陳津墜椎槌追鎚痛通塚栂掴槻佃漬柘辻蔦綴鍔椿潰坪壷嬬紬爪吊釣鶴亭低停偵剃貞呈堤定帝底庭廷弟悌抵挺提梯汀碇禎程締艇訂諦蹄逓"],["9340","邸鄭釘鼎泥摘擢敵滴的笛適鏑溺哲徹撤轍迭鉄典填天展店添纏甜貼転顛点伝殿澱田電兎吐堵塗妬屠徒斗杜渡登菟賭途都鍍砥砺努度土奴怒倒党冬"],["9380","凍刀唐塔塘套宕島嶋悼投搭東桃梼棟盗淘湯涛灯燈当痘祷等答筒糖統到董蕩藤討謄豆踏逃透鐙陶頭騰闘働動同堂導憧撞洞瞳童胴萄道銅峠鴇匿得徳涜特督禿篤毒独読栃橡凸突椴届鳶苫寅酉瀞噸屯惇敦沌豚遁頓呑曇鈍奈那内乍凪薙謎灘捺鍋楢馴縄畷南楠軟難汝二尼弐迩匂賑肉虹廿日乳入"],["9440","如尿韮任妊忍認濡禰祢寧葱猫熱年念捻撚燃粘乃廼之埜嚢悩濃納能脳膿農覗蚤巴把播覇杷波派琶破婆罵芭馬俳廃拝排敗杯盃牌背肺輩配倍培媒梅"],["9480","楳煤狽買売賠陪這蝿秤矧萩伯剥博拍柏泊白箔粕舶薄迫曝漠爆縛莫駁麦函箱硲箸肇筈櫨幡肌畑畠八鉢溌発醗髪伐罰抜筏閥鳩噺塙蛤隼伴判半反叛帆搬斑板氾汎版犯班畔繁般藩販範釆煩頒飯挽晩番盤磐蕃蛮匪卑否妃庇彼悲扉批披斐比泌疲皮碑秘緋罷肥被誹費避非飛樋簸備尾微枇毘琵眉美"],["9540","鼻柊稗匹疋髭彦膝菱肘弼必畢筆逼桧姫媛紐百謬俵彪標氷漂瓢票表評豹廟描病秒苗錨鋲蒜蛭鰭品彬斌浜瀕貧賓頻敏瓶不付埠夫婦富冨布府怖扶敷"],["9580","斧普浮父符腐膚芙譜負賦赴阜附侮撫武舞葡蕪部封楓風葺蕗伏副復幅服福腹複覆淵弗払沸仏物鮒分吻噴墳憤扮焚奮粉糞紛雰文聞丙併兵塀幣平弊柄並蔽閉陛米頁僻壁癖碧別瞥蔑箆偏変片篇編辺返遍便勉娩弁鞭保舗鋪圃捕歩甫補輔穂募墓慕戊暮母簿菩倣俸包呆報奉宝峰峯崩庖抱捧放方朋"],["9640","法泡烹砲縫胞芳萌蓬蜂褒訪豊邦鋒飽鳳鵬乏亡傍剖坊妨帽忘忙房暴望某棒冒紡肪膨謀貌貿鉾防吠頬北僕卜墨撲朴牧睦穆釦勃没殆堀幌奔本翻凡盆"],["9680","摩磨魔麻埋妹昧枚毎哩槙幕膜枕鮪柾鱒桝亦俣又抹末沫迄侭繭麿万慢満漫蔓味未魅巳箕岬密蜜湊蓑稔脈妙粍民眠務夢無牟矛霧鵡椋婿娘冥名命明盟迷銘鳴姪牝滅免棉綿緬面麺摸模茂妄孟毛猛盲網耗蒙儲木黙目杢勿餅尤戻籾貰問悶紋門匁也冶夜爺耶野弥矢厄役約薬訳躍靖柳薮鑓愉愈油癒"],["9740","諭輸唯佑優勇友宥幽悠憂揖有柚湧涌猶猷由祐裕誘遊邑郵雄融夕予余与誉輿預傭幼妖容庸揚揺擁曜楊様洋溶熔用窯羊耀葉蓉要謡踊遥陽養慾抑欲"],["9780","沃浴翌翼淀羅螺裸来莱頼雷洛絡落酪乱卵嵐欄濫藍蘭覧利吏履李梨理璃痢裏裡里離陸律率立葎掠略劉流溜琉留硫粒隆竜龍侶慮旅虜了亮僚両凌寮料梁涼猟療瞭稜糧良諒遼量陵領力緑倫厘林淋燐琳臨輪隣鱗麟瑠塁涙累類令伶例冷励嶺怜玲礼苓鈴隷零霊麗齢暦歴列劣烈裂廉恋憐漣煉簾練聯"],["9840","蓮連錬呂魯櫓炉賂路露労婁廊弄朗楼榔浪漏牢狼篭老聾蝋郎六麓禄肋録論倭和話歪賄脇惑枠鷲亙亘鰐詫藁蕨椀湾碗腕"],["989f","弌丐丕个丱丶丼丿乂乖乘亂亅豫亊舒弍于亞亟亠亢亰亳亶从仍仄仆仂仗仞仭仟价伉佚估佛佝佗佇佶侈侏侘佻佩佰侑佯來侖儘俔俟俎俘俛俑俚俐俤俥倚倨倔倪倥倅伜俶倡倩倬俾俯們倆偃假會偕偐偈做偖偬偸傀傚傅傴傲"],["9940","僉僊傳僂僖僞僥僭僣僮價僵儉儁儂儖儕儔儚儡儺儷儼儻儿兀兒兌兔兢竸兩兪兮冀冂囘册冉冏冑冓冕冖冤冦冢冩冪冫决冱冲冰况冽凅凉凛几處凩凭"],["9980","凰凵凾刄刋刔刎刧刪刮刳刹剏剄剋剌剞剔剪剴剩剳剿剽劍劔劒剱劈劑辨辧劬劭劼劵勁勍勗勞勣勦飭勠勳勵勸勹匆匈甸匍匐匏匕匚匣匯匱匳匸區卆卅丗卉卍凖卞卩卮夘卻卷厂厖厠厦厥厮厰厶參簒雙叟曼燮叮叨叭叺吁吽呀听吭吼吮吶吩吝呎咏呵咎呟呱呷呰咒呻咀呶咄咐咆哇咢咸咥咬哄哈咨"],["9a40","咫哂咤咾咼哘哥哦唏唔哽哮哭哺哢唹啀啣啌售啜啅啖啗唸唳啝喙喀咯喊喟啻啾喘喞單啼喃喩喇喨嗚嗅嗟嗄嗜嗤嗔嘔嗷嘖嗾嗽嘛嗹噎噐營嘴嘶嘲嘸"],["9a80","噫噤嘯噬噪嚆嚀嚊嚠嚔嚏嚥嚮嚶嚴囂嚼囁囃囀囈囎囑囓囗囮囹圀囿圄圉圈國圍圓團圖嗇圜圦圷圸坎圻址坏坩埀垈坡坿垉垓垠垳垤垪垰埃埆埔埒埓堊埖埣堋堙堝塲堡塢塋塰毀塒堽塹墅墹墟墫墺壞墻墸墮壅壓壑壗壙壘壥壜壤壟壯壺壹壻壼壽夂夊夐夛梦夥夬夭夲夸夾竒奕奐奎奚奘奢奠奧奬奩"],["9b40","奸妁妝佞侫妣妲姆姨姜妍姙姚娥娟娑娜娉娚婀婬婉娵娶婢婪媚媼媾嫋嫂媽嫣嫗嫦嫩嫖嫺嫻嬌嬋嬖嬲嫐嬪嬶嬾孃孅孀孑孕孚孛孥孩孰孳孵學斈孺宀"],["9b80","它宦宸寃寇寉寔寐寤實寢寞寥寫寰寶寳尅將專對尓尠尢尨尸尹屁屆屎屓屐屏孱屬屮乢屶屹岌岑岔妛岫岻岶岼岷峅岾峇峙峩峽峺峭嶌峪崋崕崗嵜崟崛崑崔崢崚崙崘嵌嵒嵎嵋嵬嵳嵶嶇嶄嶂嶢嶝嶬嶮嶽嶐嶷嶼巉巍巓巒巖巛巫已巵帋帚帙帑帛帶帷幄幃幀幎幗幔幟幢幤幇幵并幺麼广庠廁廂廈廐廏"],["9c40","廖廣廝廚廛廢廡廨廩廬廱廳廰廴廸廾弃弉彝彜弋弑弖弩弭弸彁彈彌彎弯彑彖彗彙彡彭彳彷徃徂彿徊很徑徇從徙徘徠徨徭徼忖忻忤忸忱忝悳忿怡恠"],["9c80","怙怐怩怎怱怛怕怫怦怏怺恚恁恪恷恟恊恆恍恣恃恤恂恬恫恙悁悍惧悃悚悄悛悖悗悒悧悋惡悸惠惓悴忰悽惆悵惘慍愕愆惶惷愀惴惺愃愡惻惱愍愎慇愾愨愧慊愿愼愬愴愽慂慄慳慷慘慙慚慫慴慯慥慱慟慝慓慵憙憖憇憬憔憚憊憑憫憮懌懊應懷懈懃懆憺懋罹懍懦懣懶懺懴懿懽懼懾戀戈戉戍戌戔戛"],["9d40","戞戡截戮戰戲戳扁扎扞扣扛扠扨扼抂抉找抒抓抖拔抃抔拗拑抻拏拿拆擔拈拜拌拊拂拇抛拉挌拮拱挧挂挈拯拵捐挾捍搜捏掖掎掀掫捶掣掏掉掟掵捫"],["9d80","捩掾揩揀揆揣揉插揶揄搖搴搆搓搦搶攝搗搨搏摧摯摶摎攪撕撓撥撩撈撼據擒擅擇撻擘擂擱擧舉擠擡抬擣擯攬擶擴擲擺攀擽攘攜攅攤攣攫攴攵攷收攸畋效敖敕敍敘敞敝敲數斂斃變斛斟斫斷旃旆旁旄旌旒旛旙无旡旱杲昊昃旻杳昵昶昴昜晏晄晉晁晞晝晤晧晨晟晢晰暃暈暎暉暄暘暝曁暹曉暾暼"],["9e40","曄暸曖曚曠昿曦曩曰曵曷朏朖朞朦朧霸朮朿朶杁朸朷杆杞杠杙杣杤枉杰枩杼杪枌枋枦枡枅枷柯枴柬枳柩枸柤柞柝柢柮枹柎柆柧檜栞框栩桀桍栲桎"],["9e80","梳栫桙档桷桿梟梏梭梔條梛梃檮梹桴梵梠梺椏梍桾椁棊椈棘椢椦棡椌棍棔棧棕椶椒椄棗棣椥棹棠棯椨椪椚椣椡棆楹楷楜楸楫楔楾楮椹楴椽楙椰楡楞楝榁楪榲榮槐榿槁槓榾槎寨槊槝榻槃榧樮榑榠榜榕榴槞槨樂樛槿權槹槲槧樅榱樞槭樔槫樊樒櫁樣樓橄樌橲樶橸橇橢橙橦橈樸樢檐檍檠檄檢檣"],["9f40","檗蘗檻櫃櫂檸檳檬櫞櫑櫟檪櫚櫪櫻欅蘖櫺欒欖鬱欟欸欷盜欹飮歇歃歉歐歙歔歛歟歡歸歹歿殀殄殃殍殘殕殞殤殪殫殯殲殱殳殷殼毆毋毓毟毬毫毳毯"],["9f80","麾氈氓气氛氤氣汞汕汢汪沂沍沚沁沛汾汨汳沒沐泄泱泓沽泗泅泝沮沱沾沺泛泯泙泪洟衍洶洫洽洸洙洵洳洒洌浣涓浤浚浹浙涎涕濤涅淹渕渊涵淇淦涸淆淬淞淌淨淒淅淺淙淤淕淪淮渭湮渮渙湲湟渾渣湫渫湶湍渟湃渺湎渤滿渝游溂溪溘滉溷滓溽溯滄溲滔滕溏溥滂溟潁漑灌滬滸滾漿滲漱滯漲滌"],["e040","漾漓滷澆潺潸澁澀潯潛濳潭澂潼潘澎澑濂潦澳澣澡澤澹濆澪濟濕濬濔濘濱濮濛瀉瀋濺瀑瀁瀏濾瀛瀚潴瀝瀘瀟瀰瀾瀲灑灣炙炒炯烱炬炸炳炮烟烋烝"],["e080","烙焉烽焜焙煥煕熈煦煢煌煖煬熏燻熄熕熨熬燗熹熾燒燉燔燎燠燬燧燵燼燹燿爍爐爛爨爭爬爰爲爻爼爿牀牆牋牘牴牾犂犁犇犒犖犢犧犹犲狃狆狄狎狒狢狠狡狹狷倏猗猊猜猖猝猴猯猩猥猾獎獏默獗獪獨獰獸獵獻獺珈玳珎玻珀珥珮珞璢琅瑯琥珸琲琺瑕琿瑟瑙瑁瑜瑩瑰瑣瑪瑶瑾璋璞璧瓊瓏瓔珱"],["e140","瓠瓣瓧瓩瓮瓲瓰瓱瓸瓷甄甃甅甌甎甍甕甓甞甦甬甼畄畍畊畉畛畆畚畩畤畧畫畭畸當疆疇畴疊疉疂疔疚疝疥疣痂疳痃疵疽疸疼疱痍痊痒痙痣痞痾痿"],["e180","痼瘁痰痺痲痳瘋瘍瘉瘟瘧瘠瘡瘢瘤瘴瘰瘻癇癈癆癜癘癡癢癨癩癪癧癬癰癲癶癸發皀皃皈皋皎皖皓皙皚皰皴皸皹皺盂盍盖盒盞盡盥盧盪蘯盻眈眇眄眩眤眞眥眦眛眷眸睇睚睨睫睛睥睿睾睹瞎瞋瞑瞠瞞瞰瞶瞹瞿瞼瞽瞻矇矍矗矚矜矣矮矼砌砒礦砠礪硅碎硴碆硼碚碌碣碵碪碯磑磆磋磔碾碼磅磊磬"],["e240","磧磚磽磴礇礒礑礙礬礫祀祠祗祟祚祕祓祺祿禊禝禧齋禪禮禳禹禺秉秕秧秬秡秣稈稍稘稙稠稟禀稱稻稾稷穃穗穉穡穢穩龝穰穹穽窈窗窕窘窖窩竈窰"],["e280","窶竅竄窿邃竇竊竍竏竕竓站竚竝竡竢竦竭竰笂笏笊笆笳笘笙笞笵笨笶筐筺笄筍笋筌筅筵筥筴筧筰筱筬筮箝箘箟箍箜箚箋箒箏筝箙篋篁篌篏箴篆篝篩簑簔篦篥籠簀簇簓篳篷簗簍篶簣簧簪簟簷簫簽籌籃籔籏籀籐籘籟籤籖籥籬籵粃粐粤粭粢粫粡粨粳粲粱粮粹粽糀糅糂糘糒糜糢鬻糯糲糴糶糺紆"],["e340","紂紜紕紊絅絋紮紲紿紵絆絳絖絎絲絨絮絏絣經綉絛綏絽綛綺綮綣綵緇綽綫總綢綯緜綸綟綰緘緝緤緞緻緲緡縅縊縣縡縒縱縟縉縋縢繆繦縻縵縹繃縷"],["e380","縲縺繧繝繖繞繙繚繹繪繩繼繻纃緕繽辮繿纈纉續纒纐纓纔纖纎纛纜缸缺罅罌罍罎罐网罕罔罘罟罠罨罩罧罸羂羆羃羈羇羌羔羞羝羚羣羯羲羹羮羶羸譱翅翆翊翕翔翡翦翩翳翹飜耆耄耋耒耘耙耜耡耨耿耻聊聆聒聘聚聟聢聨聳聲聰聶聹聽聿肄肆肅肛肓肚肭冐肬胛胥胙胝胄胚胖脉胯胱脛脩脣脯腋"],["e440","隋腆脾腓腑胼腱腮腥腦腴膃膈膊膀膂膠膕膤膣腟膓膩膰膵膾膸膽臀臂膺臉臍臑臙臘臈臚臟臠臧臺臻臾舁舂舅與舊舍舐舖舩舫舸舳艀艙艘艝艚艟艤"],["e480","艢艨艪艫舮艱艷艸艾芍芒芫芟芻芬苡苣苟苒苴苳苺莓范苻苹苞茆苜茉苙茵茴茖茲茱荀茹荐荅茯茫茗茘莅莚莪莟莢莖茣莎莇莊荼莵荳荵莠莉莨菴萓菫菎菽萃菘萋菁菷萇菠菲萍萢萠莽萸蔆菻葭萪萼蕚蒄葷葫蒭葮蒂葩葆萬葯葹萵蓊葢蒹蒿蒟蓙蓍蒻蓚蓐蓁蓆蓖蒡蔡蓿蓴蔗蔘蔬蔟蔕蔔蓼蕀蕣蕘蕈"],["e540","蕁蘂蕋蕕薀薤薈薑薊薨蕭薔薛藪薇薜蕷蕾薐藉薺藏薹藐藕藝藥藜藹蘊蘓蘋藾藺蘆蘢蘚蘰蘿虍乕虔號虧虱蚓蚣蚩蚪蚋蚌蚶蚯蛄蛆蚰蛉蠣蚫蛔蛞蛩蛬"],["e580","蛟蛛蛯蜒蜆蜈蜀蜃蛻蜑蜉蜍蛹蜊蜴蜿蜷蜻蜥蜩蜚蝠蝟蝸蝌蝎蝴蝗蝨蝮蝙蝓蝣蝪蠅螢螟螂螯蟋螽蟀蟐雖螫蟄螳蟇蟆螻蟯蟲蟠蠏蠍蟾蟶蟷蠎蟒蠑蠖蠕蠢蠡蠱蠶蠹蠧蠻衄衂衒衙衞衢衫袁衾袞衵衽袵衲袂袗袒袮袙袢袍袤袰袿袱裃裄裔裘裙裝裹褂裼裴裨裲褄褌褊褓襃褞褥褪褫襁襄褻褶褸襌褝襠襞"],["e640","襦襤襭襪襯襴襷襾覃覈覊覓覘覡覩覦覬覯覲覺覽覿觀觚觜觝觧觴觸訃訖訐訌訛訝訥訶詁詛詒詆詈詼詭詬詢誅誂誄誨誡誑誥誦誚誣諄諍諂諚諫諳諧"],["e680","諤諱謔諠諢諷諞諛謌謇謚諡謖謐謗謠謳鞫謦謫謾謨譁譌譏譎證譖譛譚譫譟譬譯譴譽讀讌讎讒讓讖讙讚谺豁谿豈豌豎豐豕豢豬豸豺貂貉貅貊貍貎貔豼貘戝貭貪貽貲貳貮貶賈賁賤賣賚賽賺賻贄贅贊贇贏贍贐齎贓賍贔贖赧赭赱赳趁趙跂趾趺跏跚跖跌跛跋跪跫跟跣跼踈踉跿踝踞踐踟蹂踵踰踴蹊"],["e740","蹇蹉蹌蹐蹈蹙蹤蹠踪蹣蹕蹶蹲蹼躁躇躅躄躋躊躓躑躔躙躪躡躬躰軆躱躾軅軈軋軛軣軼軻軫軾輊輅輕輒輙輓輜輟輛輌輦輳輻輹轅轂輾轌轉轆轎轗轜"],["e780","轢轣轤辜辟辣辭辯辷迚迥迢迪迯邇迴逅迹迺逑逕逡逍逞逖逋逧逶逵逹迸遏遐遑遒逎遉逾遖遘遞遨遯遶隨遲邂遽邁邀邊邉邏邨邯邱邵郢郤扈郛鄂鄒鄙鄲鄰酊酖酘酣酥酩酳酲醋醉醂醢醫醯醪醵醴醺釀釁釉釋釐釖釟釡釛釼釵釶鈞釿鈔鈬鈕鈑鉞鉗鉅鉉鉤鉈銕鈿鉋鉐銜銖銓銛鉚鋏銹銷鋩錏鋺鍄錮"],["e840","錙錢錚錣錺錵錻鍜鍠鍼鍮鍖鎰鎬鎭鎔鎹鏖鏗鏨鏥鏘鏃鏝鏐鏈鏤鐚鐔鐓鐃鐇鐐鐶鐫鐵鐡鐺鑁鑒鑄鑛鑠鑢鑞鑪鈩鑰鑵鑷鑽鑚鑼鑾钁鑿閂閇閊閔閖閘閙"],["e880","閠閨閧閭閼閻閹閾闊濶闃闍闌闕闔闖關闡闥闢阡阨阮阯陂陌陏陋陷陜陞陝陟陦陲陬隍隘隕隗險隧隱隲隰隴隶隸隹雎雋雉雍襍雜霍雕雹霄霆霈霓霎霑霏霖霙霤霪霰霹霽霾靄靆靈靂靉靜靠靤靦靨勒靫靱靹鞅靼鞁靺鞆鞋鞏鞐鞜鞨鞦鞣鞳鞴韃韆韈韋韜韭齏韲竟韶韵頏頌頸頤頡頷頽顆顏顋顫顯顰"],["e940","顱顴顳颪颯颱颶飄飃飆飩飫餃餉餒餔餘餡餝餞餤餠餬餮餽餾饂饉饅饐饋饑饒饌饕馗馘馥馭馮馼駟駛駝駘駑駭駮駱駲駻駸騁騏騅駢騙騫騷驅驂驀驃"],["e980","騾驕驍驛驗驟驢驥驤驩驫驪骭骰骼髀髏髑髓體髞髟髢髣髦髯髫髮髴髱髷髻鬆鬘鬚鬟鬢鬣鬥鬧鬨鬩鬪鬮鬯鬲魄魃魏魍魎魑魘魴鮓鮃鮑鮖鮗鮟鮠鮨鮴鯀鯊鮹鯆鯏鯑鯒鯣鯢鯤鯔鯡鰺鯲鯱鯰鰕鰔鰉鰓鰌鰆鰈鰒鰊鰄鰮鰛鰥鰤鰡鰰鱇鰲鱆鰾鱚鱠鱧鱶鱸鳧鳬鳰鴉鴈鳫鴃鴆鴪鴦鶯鴣鴟鵄鴕鴒鵁鴿鴾鵆鵈"],["ea40","鵝鵞鵤鵑鵐鵙鵲鶉鶇鶫鵯鵺鶚鶤鶩鶲鷄鷁鶻鶸鶺鷆鷏鷂鷙鷓鷸鷦鷭鷯鷽鸚鸛鸞鹵鹹鹽麁麈麋麌麒麕麑麝麥麩麸麪麭靡黌黎黏黐黔黜點黝黠黥黨黯"],["ea80","黴黶黷黹黻黼黽鼇鼈皷鼕鼡鼬鼾齊齒齔齣齟齠齡齦齧齬齪齷齲齶龕龜龠堯槇遙瑤凜熙"],["ed40","纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏"],["ed80","塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱"],["ee40","犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙"],["ee80","蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"],["eeef","ⅰ",9,"￢￤＇＂"],["f040","",62],["f080","",124],["f140","",62],["f180","",124],["f240","",62],["f280","",124],["f340","",62],["f380","",124],["f440","",62],["f480","",124],["f540","",62],["f580","",124],["f640","",62],["f680","",124],["f740","",62],["f780","",124],["f840","",62],["f880","",124],["f940",""],["fa40","ⅰ",9,"Ⅰ",9,"￢￤＇＂㈱№℡∵纊褜鍈銈蓜俉炻昱棈鋹曻彅丨仡仼伀伃伹佖侒侊侚侔俍偀倢俿倞偆偰偂傔僴僘兊"],["fa80","兤冝冾凬刕劜劦勀勛匀匇匤卲厓厲叝﨎咜咊咩哿喆坙坥垬埈埇﨏塚增墲夋奓奛奝奣妤妺孖寀甯寘寬尞岦岺峵崧嵓﨑嵂嵭嶸嶹巐弡弴彧德忞恝悅悊惞惕愠惲愑愷愰憘戓抦揵摠撝擎敎昀昕昻昉昮昞昤晥晗晙晴晳暙暠暲暿曺朎朗杦枻桒柀栁桄棏﨓楨﨔榘槢樰橫橆橳橾櫢櫤毖氿汜沆汯泚洄涇浯"],["fb40","涖涬淏淸淲淼渹湜渧渼溿澈澵濵瀅瀇瀨炅炫焏焄煜煆煇凞燁燾犱犾猤猪獷玽珉珖珣珒琇珵琦琪琩琮瑢璉璟甁畯皂皜皞皛皦益睆劯砡硎硤硺礰礼神"],["fb80","祥禔福禛竑竧靖竫箞精絈絜綷綠緖繒罇羡羽茁荢荿菇菶葈蒴蕓蕙蕫﨟薰蘒﨡蠇裵訒訷詹誧誾諟諸諶譓譿賰賴贒赶﨣軏﨤逸遧郞都鄕鄧釚釗釞釭釮釤釥鈆鈐鈊鈺鉀鈼鉎鉙鉑鈹鉧銧鉷鉸鋧鋗鋙鋐﨧鋕鋠鋓錥錡鋻﨨錞鋿錝錂鍰鍗鎤鏆鏞鏸鐱鑅鑈閒隆﨩隝隯霳霻靃靍靏靑靕顗顥飯飼餧館馞驎髙"],["fc40","髜魵魲鮏鮱鮻鰀鵰鵫鶴鸙黑"]]')},330:e=>{"use strict";e.exports=JSON.parse('{"name":"autoit","displayName":"AutoIt","description":"AutoIt language extension for Visual Studio Code","icon":"img/ai_icon.png","version":"1.0.14","publisher":"Damien","galleryBanner":{"color":"#254768","theme":"dark"},"engines":{"vscode":"^1.96.0"},"categories":["Programming Languages","Snippets"],"keywords":["AutoIt","scripting","au3","AutoIt3"],"dependencies":{"iconv-lite":"^0.6.3","jsonc-parser":"^3.3.1"},"devDependencies":{"@babel/core":"^7.26.7","@babel/preset-env":"^7.26.7","@types/vscode":"^1.96.0","babel-loader":"^9.2.1","eslint":"^5.16.0","eslint-config-airbnb-base":"^13.2.0","eslint-config-prettier":"^6.15.0","eslint-plugin-import":"^2.31.0","eslint-plugin-prettier":"^3.3.1","prettier":"^3.4.2","typescript":"^3.5.3","webpack":"^5.97.1","webpack-cli":"^4.3.1"},"license":"MIT","main":"./dist/extension","activationEvents":[],"repository":{"type":"git","url":"https://github.com/loganch/AutoIt-VSCode.git"},"homepage":"https://github.com/loganch/AutoIt-VSCode/blob/master/README.md","contributes":{"languages":[{"id":"autoit","aliases":["AutoIt","Autoit"],"extensions":[".au3"],"configuration":"./syntaxes/autoit-language-configuration.json"},{"id":"vscode-autoit-output","aliases":[],"mimetypes":["text/x-code-output"]}],"menus":{"commandPalette":[{"when":"editorLangId == autoit","command":"extension.runScript"},{"when":"editorLangId == autoit","command":"extension.compile"},{"command":"extension.tidy","when":"editorLangId == autoit"},{"command":"extension.check","when":"editorLangId == autoit"},{"command":"extension.build","when":"editorLangId == autoit"},{"command":"extension.launchHelp","when":"editorLangId == autoit"},{"command":"extension.launchInfo","when":"editorLangId == autoit"},{"command":"extension.debugMsgBox","when":"editorLangId == autoit"},{"command":"extension.debugConsole","when":"editorLangId == autoit"},{"command":"extension.launchKoda","when":"editorLangId == autoit"},{"command":"extension.killScript","when":"editorLangId == autoit"},{"command":"extension.killScriptOpened","when":"editorLangId == autoit"},{"command":"extension.insertHeader","when":"editorLangId == autoit"},{"command":"extension.openInclude","when":"editorLangId == autoit"},{"command":"extension.restartScript","when":"editorLangId == autoit"},{"command":"extension.debugRemove","when":"editorLangId == autoit"},{"command":"extension.traceRemove","when":"editorLangId == autoit"}]},"commands":[{"command":"extension.runScript","title":"AutoIt: Run Script"},{"command":"extension.compile","title":"AutoIt: Compile"},{"command":"extension.tidy","title":"AutoIt: Tidy"},{"command":"extension.check","title":"AutoIt: Check"},{"command":"extension.build","title":"AutoIt: Build"},{"command":"extension.launchHelp","title":"AutoIt: Help"},{"command":"extension.launchInfo","title":"AutoIt: Au3Info"},{"command":"extension.debugMsgBox","title":"AutoIt: Debug to MsgBox"},{"command":"extension.debugConsole","title":"AutoIt: Debug to Console"},{"command":"extension.launchKoda","title":"AutoIt: Koda Form Designer"},{"command":"extension.changeParams","title":"AutoIt: Change Console Parameters"},{"command":"extension.killScript","title":"AutoIt: Kill Running Script"},{"command":"extension.killScriptOpened","title":"AutoIt: Kill Running Opened Script"},{"command":"extension.insertHeader","title":"AutoIt: Insert Function Header"},{"command":"extension.openInclude","title":"AutoIt: Open Include File"},{"command":"extension.restartScript","title":"AutoIt: Restart script"},{"command":"extension.debugRemove","title":"AutoIt: Debug Remove lines"},{"command":"extension.functionTraceAdd","title":"AutoIt: Trace: Add Func Trace lines"},{"command":"extension.traceRemove","title":"AutoIt: Trace: Remove ALL Trace lines"}],"grammars":[{"language":"autoit","scopeName":"source.autoit","path":"./syntaxes/autoit.tmLanguage"},{"language":"vscode-autoit-output","scopeName":"source.vscode_autoit_output","path":"syntaxes/vscode-autoit-output.tmLanguage.json"}],"snippets":[{"language":"autoit","path":"./snippets/autoit.json"},{"language":"autoit","path":"./snippets/abbreviations.json"}],"keybindings":[{"command":"extension.runScript","key":"f5","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.check","key":"ctrl+f5","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.compile","key":"ctrl+f7","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.build","key":"f7","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.launchHelp","key":"ctrl+f1","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.launchInfo","key":"ctrl+f6","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.debugMsgBox","key":"ctrl+shift+d","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.debugConsole","key":"alt+d","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.launchKoda","key":"alt+m","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.changeParams","key":"shift+f8","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.killScript","key":"ctrl+pausebreak"},{"command":"extension.killScriptOpened","key":"shift+pausebreak","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.insertHeader","key":"ctrl+alt+H","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.openInclude","key":"alt+i","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.restartScript","key":"ctrl+alt+pausebreak","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.debugRemove","key":"ctrl+alt+z","when":"editorTextFocus && editorLangId == autoit"},{"command":"extension.functionTraceAdd","when":"editorTextFocus && editorLangId == autoit"}],"configuration":{"type":"object","title":"AutoIt","properties":{"autoit.aiPath":{"order":1,"type":"string","default":"C:\\\\Program Files (x86)\\\\AutoIt3\\\\AutoIt3.exe","markdownDescription":"Full path to the AutoIt executable, e.g. `C:\\\\Program Files (x86)\\\\AutoIt3\\\\` or `C:\\\\Program Files (x86)\\\\AutoIt3\\\\AutoIt3.exe`","format":"uri"},"autoit.wrapperPath":{"order":1,"type":"string","default":"","markdownDescription":"Full or relative path to the AutoIt3Wrapper script, e.g. `C:\\\\Program Files (x86)\\\\AutoIt3\\\\SciTE\\\\AutoIt3Wrapper\\\\AutoIt3Wrapper.au3`\\n\\nLeave blank to use default, relative to `#autoit.aiPath#` path."},"autoit.checkPath":{"order":1,"type":"string","default":"","markdownDescription":"Full or relative path to the AutoIt syntax Checker (Au3Check) executable, e.g. `C:\\\\Program Files (x86)\\\\AutoIt3\\\\AU3Check.exe`\\n\\nLeave blank to use default, relative to `#autoit.aiPath#` path."},"autoit.helpPath":{"order":1,"type":"string","default":"","markdownDescription":"Full or relative path to the AutoIt3Help executable, e.g. `C:\\\\Program Files (x86)\\\\AutoIt3\\\\AutoIt3Help.exe`\\n\\nLeave blank to use default, relative to `#autoit.aiPath#` path."},"autoit.infoPath":{"order":1,"type":"string","default":"","markdownDescription":"Full or relative path to the AutoIt Window Info executable, e.g. `C:\\\\Program Files (x86)\\\\AutoIt3\\\\Au3Info.exe`\\n\\nLeave blank to use default, relative to `#autoit.aiPath#` path."},"autoit.kodaPath":{"order":1,"type":"string","default":"","markdownDescription":"Full or relative path to the Koda FormDesigner executable, e.g. `C:\\\\Program Files (x86)\\\\AutoIt3\\\\SciTE\\\\Koda\\\\FD.exe`\\n\\nLeave blank to use default, relative to `#autoit.aiPath#` path."},"autoit.smartHelp":{"order":1,"type":"object","description":"Defines prefixes, paths & udf sources for additional help files","patternProperties":{"^(_[^_]+_|[^_]+)$":{"type":"object","additionalProperties":false,"properties":{"chmPath":{"type":"string"},"udfPath":{"type":["array","string"],"items":{"type":"string"}},"required":["chmPath","udfPath"]}}},"additionalProperties":false,"default":{"_yourUdfFuncPrefix_":{"chmPath":"","udfPath":[""]}}},"autoit.includePaths":{"order":1,"type":"array","default":[""],"description":"File paths for additional include folders"},"autoit.showVariablesInGoToSymbol":{"type":"boolean","default":true,"description":"Determines whether variables show up when you use Ctrl+Shift+O to find symbols within a script"},"autoit.showRegionsInGoToSymbol":{"type":"boolean","default":true,"description":"Determines whether regions show up when you use Ctrl+Shift+O to find symbols within a script"},"autoit.consoleParams":{"type":"string","default":"","description":"Sets the parameters that get passed when scripts are run"},"autoit.enableDiagnostics":{"type":"boolean","default":true,"description":"Tells AutoIt-VSCode to provide diagnostics from Au3Check on document open, switch or save"},"autoit.UDFCreator":{"type":"string","default":"Your Name","description":"The name that will be added as Author when Insert Function Header is used"},"autoit.multiOutput":{"type":"boolean","default":true,"description":"Enable separate output panel for each running script"},"autoit.multiOutputMaxFinished":{"type":"number","default":2,"min":0,"description":"How many output panels to keep after script finished"},"autoit.multiOutputFinishedTimeout":{"type":"number","default":0,"min":0,"description":"How long (in seconds) to wait until output panels of finished scripts discarded\\n0 = indefinitely"},"autoit.multiOutputReuseOutput":{"type":"boolean","default":false,"description":"Reuse output for the same file"},"autoit.clearOutput":{"type":"boolean","default":true,"markdownDescription":"Clear output panel before each run. (only applicable when `#autoit.multiOutput#` is `disabled` or `#autoit.multiOutputReuseOutput#` is `enabled`)"},"autoit.terminateRunningOnClose":{"type":"boolean","default":true,"description":"Terminate running script when script file is closed"},"autoit.outputCodePage":{"type":"string","description":"If you see incorrect text encoding in the output, set this option to match your system code page"},"autoit.multiOutputShowProcessId":{"type":"string","default":"Single","enum":["None","Single","Multi"],"enumDescriptions":["No process ID will be shown","Only on first line until another process\'s output","On each line"],"description":"Show process ID in the Autoit (common) output"},"autoit.outputShowTime":{"type":"string","default":"None","enum":["None","Global","Process","All"],"enumDescriptions":["Don\'t time for each message","Show time in global output","Show time in process output","Show time in all outputs"],"description":"Show time when each output line was received"},"autoit.outputMaxHistoryLines":{"type":"number","default":5000,"description":"Number of output lines to keep"},"autoit.enableParenTriggerForFunctions":{"type":"boolean","default":true,"description":"Adds the ability to use \'(\' to select a function completion suggestion, which will add the function with open and closed parens, place the cursor between them and trigger signature help. Requires window reload to take full effect."}}},"configurationDefaults":{"[autoit]":{"editor.minimap.showRegionSectionHeaders":false},"editor.tokenColorCustomizations":{"textMateRules":[{"scope":"vscode-autoit-output-olive","settings":{"foreground":"#808000"}},{"scope":"vscode-autoit-output-SCE_ERR_CMD","settings":{"foreground":"#3d85c6"}},{"scope":"vscode-autoit-output-SCE_ERR_DIFF_CHANGED","settings":{"foreground":"#f70000","fontStyle":"bold"}},{"scope":"vscode-autoit-output-SCE_ERR_DIFF_ADDITION","settings":{"foreground":"#6aa84f"}},{"scope":"vscode-autoit-output-SCE_ERR_DIFF_DELETION","settings":{"foreground":"#ff8800"}},{"scope":"vscode-autoit-output-SCE_ERR_DIFF_MESSAGE","settings":{"foreground":"#7F0000"}},{"scope":"vscode-autoit-output-date","settings":{"foreground":"#7a837f"}},{"scope":"vscode-autoit-output-debug","settings":{"foreground":"#d6ae5d"}},{"scope":"vscode-autoit-output-process","settings":{"foreground":"#a7a061","fontStyle":"italic"}},{"scope":"vscode-autoit-output-process-id","settings":{"foreground":"#d65d81","fontStyle":"italic"}},{"scope":"vscode-autoit-output-process-file","settings":{"foreground":"#81b2c7"}},{"scope":"vscode-autoit-output-process-pid","settings":{"foreground":"#56bf00"}},{"scope":"vscode-autoit-output-SCE_ERR_BORLAND","settings":{"foreground":"#B06000"}},{"scope":"vscode-autoit-output-SCE_ERR_IFC","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_GCC_INCLUDED_FROM","settings":{"foreground":"#800080"}},{"scope":"vscode-autoit-output-SCE_ERR_GCC_INCLUDED_FROM","settings":{"foreground":"#800080"}},{"scope":"vscode-autoit-output-SCE_ERR_IFORT","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_PYTHON","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_PERL","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_NET","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_LUA","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_ELF","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_TIDY","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_JAVA_STACK","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_PHP","settings":{"foreground":"#FF0000"}},{"scope":"vscode-autoit-output-SCE_ERR_MS","settings":{"foreground":"#808000"}},{"scope":"vscode-autoit-output-SCE_ERR_GCC","settings":{"foreground":"#800080"}},{"scope":"vscode-autoit-output-SCE_ERR_GCC_EXCERPT","settings":{"foreground":"#B06000"}},{"scope":"vscode-autoit-output-SCE_ERR_CTAG","settings":{"foreground":"#FF00FF"}},{"scope":"vscode-autoit-output-EXIT","settings":{"foreground":"#3d85c6"}},{"scope":"vscode-autoit-output-EXIT_ERROR","settings":{"foreground":"#f70000","fontStyle":"bold"}},{"scope":"vscode-autoit-output-EXIT_WARNING","settings":{"foreground":"#ff8800"}},{"scope":"vscode-autoit-output-SCE_ERR_ABSF","settings":{"foreground":"#FF0000"}}]}}},"scripts":{"webpack":"webpack --mode development","webpack-dev":"webpack --mode development --watch","vscode:prepublish":"webpack --mode production","build":"npm run vscode:prepublish && bash ./copy-extensionsjs-to-vscode-extension-dist-folder.sh"}}')}},t={};function a(o){var n=t[o];if(void 0!==n)return n.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,a),i.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{"use strict";a.r(o),a.d(o,{activate:()=>bd,deactivate:()=>_d});var e={};a.r(e),a.d(e,{build:()=>xs,changeParams:()=>Fs,check:()=>Rs,compile:()=>Ws,debugConsole:()=>vs,debugMsgBox:()=>Ds,debugRemove:()=>Wl,functionTraceAdd:()=>Hl,insertHeader:()=>Os,killScript:()=>Ts,killScriptOpened:()=>Ls,launchHelp:()=>Ps,launchInfo:()=>ws,launchKoda:()=>Us,openInclude:()=>Bs,restartScript:()=>Ms,runScript:()=>Gs,tidy:()=>Es,traceRemove:()=>Fl});var t=a(398),n=a(928),i=a.n(n),r=a(896),l=a.n(r),s=a(317);const d={indentationRules:{increaseIndentPattern:/^\s*(For|Func|If|ElseIf|Else|Select|While|Case|Switch|With)\b/i,decreaseIndentPattern:/^\s*(Next|EndFunc|EndIf|ElseIf|Else|EndSelect|EndSwitch|WEnd|EndWith)\b/i,unIndentedLinePattern:/^\s*((;|#include).*)?$/}},c=JSON.parse('{"Abs":["Calculates the absolute value of a number.","```\\rAbs ( expression )\\r```"],"ACos":["Calculates the arcCosine of a number.","```\\rACos ( expression )\\r```"],"AdlibRegister":["Registers an Adlib function.","```\\rAdlibRegister ( \\"function\\" [, time = 250] )\\r```"],"AdlibUnRegister":["Unregisters an adlib function.","```\\rAdlibUnRegister ( [\\"function\\"] )\\r```"],"Asc":["Returns the ASCII code of a character.","```\\rAsc ( \\"char\\" )\\r```"],"AscW":["Returns the unicode code of a character.","```\\rAscW ( \\"char\\" )\\r```"],"ASin":["Calculates the arcsine of a number.","```\\rASin ( expression )\\r```"],"Assign":["Assigns a variable by name with the data.","```\\rAssign ( \\"varname\\", \\"data\\" [, flag = 0] )\\r```"],"ATan":["Calculates the arctangent of a number.","```\\rATan ( expression )\\r```"],"AutoItSetOption":["Changes the operation of various AutoIt functions/parameters.","```\\rAutoItSetOption ( \\"option\\" [, param] )\\r```"],"AutoItWinGetTitle":["Retrieves the title of the AutoIt window.","```\\rAutoItWinGetTitle ( )\\r```"],"AutoItWinSetTitle":["Changes the title of the AutoIt window.","```\\rAutoItWinSetTitle ( \\"newtitle\\" )\\r```"],"Beep":["Plays back a beep to the user.","```\\rBeep ( [Frequency = 500 [, Duration = 1000]] )\\r```"],"Binary":["Returns the binary representation of an expression.","```\\rBinary ( expression )\\r```"],"BinaryLen":["Returns the number of bytes in a binary variant.","```\\rBinaryLen ( binary )\\r```"],"BinaryMid":["Extracts a number of bytes from a binary variant.","```\\rBinaryMid ( binary, start [, count] )\\r```"],"BinaryToString":["Converts a binary variant into a string.","```\\rBinaryToString ( expression [, flag = 1] )\\r```"],"BitAND":["Performs a bitwise AND operation.","```\\rBitAND ( value1, value2 [, value n] )\\r```"],"BitNOT":["Performs a bitwise NOT operation.","```\\rBitNOT ( value )\\r```"],"BitOR":["Performs a bitwise OR operation.","```\\rBitOR ( value1, value2 [, value n] )\\r```"],"BitRotate":["Performs a bit shifting operation, with rotation.","```\\rBitRotate ( value [, shift = 1 [, size = \\"W\\"]] )\\r```"],"BitShift":["Performs a bit shifting operation.","```\\rBitShift ( value, shift )\\r```"],"BitXOR":["Performs a bitwise exclusive OR (XOR) operation.","```\\rBitXOR ( value1, value2 [, value n] )\\r```"],"BlockInput":["Disable/enable the mouse and keyboard.","```\\rBlockInput ( flag )\\r```"],"Break":["Enables or disables the users\' ability to exit a script from the tray icon menu.","```\\rBreak ( mode )\\r```"],"Call":["Calls a user-defined or built-in function contained in first parameter.","```\\rCall ( \\"function\\" [, param1 [, param2 [, paramN]]] )\\r```"],"CDTray":["Opens or closes the CD tray.","```\\rCDTray ( \\"drive\\", \\"status\\" )\\r```"],"Ceiling":["Returns a number rounded up to the next integer.","```\\rCeiling ( expression )\\r```"],"Chr":["Returns a character corresponding to an ASCII code.","```\\rChr ( ASCIIcode )\\r```"],"ChrW":["Returns a character corresponding to a unicode code.","```\\rChrW ( UNICODEcode )\\r```"],"ClipGet":["Retrieves text from the clipboard.","```\\rClipGet ( )\\r```"],"ClipPut":["Writes text to the clipboard.","```\\rClipPut ( \\"value\\" )\\r```"],"ConsoleRead":["Read from the STDIN stream of the AutoIt script process.","```\\rConsoleRead ( [peek = False [, binary = False]] )\\r```"],"ConsoleWrite":["Writes data to the STDOUT stream. Some text editors can read this stream as can other programs which may be expecting data on this stream.","```\\rConsoleWrite ( \\"data\\" )\\r```"],"ConsoleWriteError":["Writes data to the STDERR stream. Some text editors can read this stream as can other programs which may be expecting data on this stream.","```\\rConsoleWriteError ( \\"data\\" )\\r```"],"ControlClick":["Sends a mouse click command to a given control.","```\\rControlClick ( \\"title\\", \\"text\\", controlID [, button = \\"left\\" [, clicks = 1 [, x [, y]]]] )\\r```"],"ControlCommand":["Sends a command to a control.","```\\rControlCommand ( \\"title\\", \\"text\\", controlID, \\"command\\" [, \\"option\\"] )\\r```"],"ControlDisable":["Disables or \\"grays-out\\" a control.","```\\rControlDisable ( \\"title\\", \\"text\\", controlID )\\r```"],"ControlEnable":["Enables a \\"grayed-out\\" control.","```\\rControlEnable ( \\"title\\", \\"text\\", controlID )\\r```"],"ControlFocus":["Sets input focus to a given control on a window.","```\\rControlFocus ( \\"title\\", \\"text\\", controlID )\\r```"],"ControlGetFocus":["Returns the ControlRef# of the control that has keyboard focus within a specified window.","```\\rControlGetFocus ( \\"title\\" [, \\"text\\"] )\\r```"],"ControlGetHandle":["Retrieves the internal handle of a control.","```\\rControlGetHandle ( \\"title\\", \\"text\\", controlID )\\r```"],"ControlGetPos":["Retrieves the position and size of a control relative to its window.","```\\rControlGetPos ( \\"title\\", \\"text\\", controlID )\\r```"],"ControlGetText":["Retrieves text from a control.","```\\rControlGetText ( \\"title\\", \\"text\\", controlID )\\r```"],"ControlHide":["Hides a control.","```\\rControlHide ( \\"title\\", \\"text\\", controlID )\\r```"],"ControlListView":["Sends a command to a ListView32 control.","```\\rControlListView ( \\"title\\", \\"text\\", controlID, \\"command\\" [, option1 [, option2]] )\\r```"],"ControlMove":["Moves a control within a window.","```\\rControlMove ( \\"title\\", \\"text\\", controlID, x, y [, width [, height]] )\\r```"],"ControlSend":["Sends a string of characters to a control.","```\\rControlSend ( \\"title\\", \\"text\\", controlID, \\"string\\" [, flag = 0] )\\r```"],"ControlSetText":["Sets text of a control.","```\\rControlSetText ( \\"title\\", \\"text\\", controlID, \\"new text\\" [, flag = 0] )\\r```"],"ControlShow":["Shows a control that was hidden.","```\\rControlShow ( \\"title\\", \\"text\\", controlID )\\r```"],"ControlTreeView":["Sends a command to a TreeView32 control.","```\\rControlTreeView ( \\"title\\", \\"text\\", controlID, \\"command\\" [, option1] )\\r```"],"Cos":["Calculates the cosine of a number.","```\\rCos ( expression )\\r```"],"Dec":["Returns a numeric representation of a hexadecimal string.","```\\rDec ( \\"hex\\" [, flag = 0] )\\r```"],"DirCopy":["Copies a directory and all sub-directories and files (Similar to xcopy).","```\\rDirCopy ( \\"source dir\\", \\"dest dir\\" [, flag = 0] )\\r```"],"DirCreate":["Creates a directory/folder.","```\\rDirCreate ( \\"path\\" )\\r```"],"DirGetSize":["Returns the size in bytes of a given directory.","```\\rDirGetSize ( \\"path\\" [, flag = 0] )\\r```"],"DirMove":["Moves a directory and all sub-directories and files.","```\\rDirMove ( \\"source dir\\", \\"dest dir\\" [, flag = 0] )\\r```"],"DirRemove":["Deletes a directory/folder.","```\\rDirRemove ( \\"path\\" [, recurse = 0] )\\r```"],"DllCall":["Dynamically calls a function in a DLL.","```\\rDllCall ( \\"dll\\", \\"return type\\", \\"function\\" [, type1, param1 [, type n, param n]] )\\r```"],"DllCallAddress":["Dynamically calls a function at a specific memory address.","```\\rDllCallAddress ( \\"return type\\", address [, type1, param1 [, type n, param n]] )\\r```"],"DllCallbackFree":["Frees a previously created handle created with DllCallbackRegister.","```\\rDllCallbackFree ( handle )\\r```"],"DllCallbackGetPtr":["Returns the pointer to a callback function that can be passed to the Win32 API.","```\\rDllCallbackGetPtr ( handle )\\r```"],"DllStructGetSize":["Returns the size of the struct in bytes.","```\\rDllStructGetSize ( Struct )\\r```"],"DllStructSetData":["Sets the data of an element in the struct.","```\\rDllStructSetData ( Struct, Element, value [, index] )\\r```"],"DriveGetDrive":["Returns an array containing the enumerated drives.","```\\rDriveGetDrive ( \\"type\\" )\\r```"],"DriveGetFileSystem":["Returns File System Type of a drive.","```\\rDriveGetFileSystem ( \\"path\\" )\\r```"],"DriveGetLabel":["Returns Volume Label of a drive, if it has one.","```\\rDriveGetLabel ( \\"path\\" )\\r```"],"DriveGetSerial":["Returns Serial Number of a drive.","```\\rDriveGetSerial ( \\"path\\" )\\r```"],"DriveGetType":["Returns drive type.","```\\rDriveGetType ( \\"path\\" [, operation = 1] )\\r```"],"DriveMapAdd":["Maps a network drive.","```\\rDriveMapAdd ( \\"device\\", \\"remote share\\" [, flags = 0 [, \\"user\\" [, \\"password\\"]]] )\\r```"],"DriveMapDel":["Disconnects a network drive.","```\\rDriveMapDel ( \\"drive\\" )\\r```"],"DriveMapGet":["Retrieves the details of a mapped drive.","```\\rDriveMapGet ( \\"device\\" )\\r```"],"DriveSetLabel":["Sets the Volume Label of a drive.","```\\rDriveSetLabel ( \\"path\\", \\"label\\" )\\r```"],"DriveSpaceFree":["Returns the free disk space of a path in Megabytes.","```\\rDriveSpaceFree ( \\"path\\" )\\r```"],"DriveSpaceTotal":["Returns the total disk space of a path in Megabytes.","```\\rDriveSpaceTotal ( \\"path\\" )\\r```"],"DriveStatus":["Returns the status of the drive as a string.","```\\rDriveStatus ( \\"path\\" )\\r```"],"EnvGet":["Retrieves an environment variable.","```\\rEnvGet ( \\"envvariable\\" )\\r```"],"EnvSet":["Writes an environment variable.","```\\rEnvSet ( \\"envvariable\\" [, \\"value\\"] )\\r```"],"EnvUpdate":["Refreshes the OS environment.","```\\rEnvUpdate ( )\\r```"],"Eval":["Return the value of the variable defined by a string.","```\\rEval ( string )\\r```"],"Execute":["Execute an expression.","```\\rExecute ( string )\\r```"],"Exp":["Calculates e to the power of a number.","```\\rExp ( expression )\\r```"],"FileChangeDir":["Changes the current working directory.","```\\rFileChangeDir ( \\"path\\" )\\r```"],"FileClose":["Closes a previously opened file.","```\\rFileClose ( \\"filehandle\\" )\\r```"],"FileCopy":["Copies one or more files.","```\\rFileCopy ( \\"source\\", \\"dest\\" [, flag = 0] )\\r```"],"FileCreateNTFSLink":["Creates an NTFS hardlink to a file or a directory.","```\\rFileCreateNTFSLink ( \\"source\\", \\"hardlink\\" [, flag = 0] )\\r```"],"FileCreateShortcut":["Creates a shortcut (.lnk) to a file.","```\\rFileCreateShortcut ( \\"file\\", \\"lnk\\" [, \\"workdir\\" [, \\"args\\" [, \\"desc\\" [, \\"icon\\" [, \\"hotkey\\" [, icon number [, state]]]]]]] )\\r```"],"FileDelete":["Delete one or more files.","```\\rFileDelete ( \\"filename\\" )\\r```"],"FileExists":["Checks if a file or directory exists.","```\\rFileExists ( \\"path\\" )\\r```"],"FileFindFirstFile":["Creates a search handle, defined by a path and file mask.","```\\rFileFindFirstFile ( \\"filename\\" )\\r```"],"FileFindNextFile":["Returns the next filename defined by the search handle.","```\\rFileFindNextFile ( search [, flag = 0])\\r```"],"FileFlush":["Flushes the file\'s buffer to disk.","```\\rFileFlush ( \\"filehandle\\" )\\r```"],"FileGetAttrib":["Returns a code string representing a file\'s attributes.","```\\rFileGetAttrib ( \\"filename\\" )\\r```"],"FileGetEncoding":["Determines the text encoding used in a file.","```\\rFileGetEncoding ( \\"filehandle/filename\\" [, mode = 1] )\\r```"],"FileGetLongName":["Returns the long path+name of the path+name passed.","```\\rFileGetLongName ( \\"filename\\" [, flag = 0] )\\r```"],"FileGetPos":["Retrieves the current file position.","```\\rFileGetPos ( \\"filehandle\\" )\\r```"],"FileGetShortcut":["Retrieves details about a shortcut.","```\\rFileGetShortcut ( \\"lnk\\" )\\r```"],"FileGetShortName":["Returns the 8.3 short path+name of the path+name passed.","```\\rFileGetShortName ( \\"filename\\" [, flag = 0] )\\r```"],"FileGetSize":["Returns the size of a file in bytes.","```\\rFileGetSize ( \\"filename\\" )\\r```"],"FileGetTime":["Returns the time and date information for a file.","```\\rFileGetTime ( \\"filename\\" [, option = 0 [, format = 0]] )\\r```"],"FileGetVersion":["Returns version information stored in a file.","```\\rFileGetVersion ( \\"filename\\" [, \\"stringname\\"] )\\r```"],"FileInstall":["Include and install a file with the compiled script.","```\\rFileInstall ( \\"source\\", \\"dest\\" [, flag = 0] )\\r```"],"FileMove":["Moves one or more files.","```\\rFileMove ( \\"source\\", \\"dest\\" [, flag = 0] )\\r```"],"FileOpen":["Opens a file for reading or writing.","```\\rFileOpen ( \\"filename\\" [, mode = 0] )\\r```"],"FileOpenDialog":["Initiates a Open File Dialog.","```\\rFileOpenDialog ( \\"title\\", \\"init dir\\", \\"filter\\" [, options = 0 [, \\"default name\\" [, hwnd]]] )\\r```"],"FileRead":["Read in a number of characters from a previously opened file.","```\\rFileRead ( \\"filehandle/filename\\" [, count] )\\r```"],"FileReadLine":["Read in a line of text from a previously opened text file.","```\\rFileReadLine ( \\"filehandle/filename\\" [, line = 1] )\\r```"],"FileReadToArray":["Reads the specified file into an array.","```\\rFileReadToArray ( \\"filehandle/filename\\" )\\r```"],"FileRecycle":["Sends a file or directory to the recycle bin.","```\\rFileRecycle ( \\"source\\" )\\r```"],"FileRecycleEmpty":["Empties the recycle bin.","```\\rFileRecycleEmpty ( [\\"source\\"] )\\r```"],"FileSaveDialog":["Initiates a Save File Dialog.","```\\rFileSaveDialog ( \\"title\\", \\"init dir\\", \\"filter\\" [, options = 0 [, \\"default name\\" [, hwnd]]] )\\r```"],"FileSelectFolder":["Initiates a Browse For Folder dialog.","```\\rFileSelectFolder ( \\"dialog text\\", \\"root dir\\" [, flag = 0 [, \\"initial dir\\" [, hwnd]]] )\\r```"],"FileSetAttrib":["Sets the attributes of one or more files/directories.","```\\rFileSetAttrib ( \\"file pattern\\", \\"+-RASHNOT\\" [, recurse = 0] )\\r```"],"FileSetEnd":["Sets the end of the file at the current file position.","```\\rFileSetEnd ( \\"filehandle\\" )\\r```"],"FileSetPos":["Sets the current file position.","```\\rFileSetPos ( \\"filehandle\\", offset, origin )\\r```"],"FileSetTime":["Sets the timestamp of one of more files.","```\\rFileSetTime ( \\"file pattern\\", \\"time\\" [, type = 0 [, recurse = 0]] )\\r```"],"FileWrite":["Write text/data to the end of a previously opened file.","```\\rFileWrite ( \\"filehandle/filename\\", \\"text/data\\" )\\r```"],"FileWriteLine":["Append a line of text to the end of a previously opened text file.","```\\rFileWriteLine ( \\"filehandle/filename\\", \\"line\\" )\\r```"],"Floor":["Returns a number rounded down to the closest integer.","```\\rFloor ( expression )\\r```"],"FtpSetProxy":["Sets the internet proxy to use for ftp access.","```\\rFtpSetProxy ( mode = 0 [, \\"proxy:port\\" [, \\"username\\" [, \\"password\\"]]] )\\r```"],"FuncName":["Returns the name of a function stored in a variable.","```\\rFuncName ( $Functionvariable )\\r```"],"GUICreate":["Create a GUI window.","```\\rGUICreate ( \\"title\\" [, width [, height [, left = -1 [, top = -1 [, style = -1 [, exStyle = -1 [, parent = 0]]]]]]] )\\r```"],"GUICtrlCreateAvi":["Creates an AVI video control for the GUI.","```\\rGUICtrlCreateAvi ( filename, subfileid, left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateButton":["Creates a Button control for the GUI.","```\\rGUICtrlCreateButton ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateCheckbox":["Creates a Checkbox control for the GUI.","```\\rGUICtrlCreateCheckbox ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateCombo":["Creates a ComboBox control for the GUI.","```\\rGUICtrlCreateCombo ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateContextMenu":["Creates a context menu for a control or entire GUI window.","```\\rGUICtrlCreateContextMenu ( [controlID] )\\r```"],"GUICtrlCreateDate":["Creates a date control for the GUI.","```\\rGUICtrlCreateDate ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateDummy":["Creates a Dummy control for the GUI.","```\\rGUICtrlCreateDummy ( )\\r```"],"GUICtrlCreateEdit":["Creates an Edit control for the GUI.","```\\rGUICtrlCreateEdit ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateGraphic":["Creates a Graphic control for the GUI.","```\\rGUICtrlCreateGraphic ( left, top [, width [, height [, style]]] )\\r```"],"GUICtrlCreateGroup":["Creates a Group control for the GUI.","```\\rGUICtrlCreateGroup ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateIcon":["Creates an Icon control for the GUI.","```\\rGUICtrlCreateIcon ( filename, iconName, left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateInput":["Creates an Input control for the GUI.","```\\rGUICtrlCreateInput ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateLabel":["Creates a static Label control for the GUI.","```\\rGUICtrlCreateLabel ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateList":["Creates a List control for the GUI.","```\\rGUICtrlCreateList ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateListView":["Creates a ListView control for the GUI.","```\\rGUICtrlCreateListView ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateListViewItem":["Creates a ListView item.","```\\rGUICtrlCreateListViewItem ( \\"text\\", listviewID )\\r```"],"GUICtrlCreateMenu":["Creates a Menu control for the GUI.","```\\rGUICtrlCreateMenu ( \\"submenutext\\" [, menuID = -1 [, menuentry = -1]] )\\r```"],"GUICtrlCreateMenuItem":["Creates a MenuItem control for the GUI.","```\\rGUICtrlCreateMenuItem ( \\"text\\", menuID [, menuentry = -1 [, menuradioitem = 0]] )\\r```"],"GUICtrlCreateMonthCal":["Creates a month calendar control for the GUI.","```\\rGUICtrlCreateMonthCal ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateObj":["Creates an ActiveX control in the GUI.","```\\rGUICtrlCreateObj ( ObjectVar, left, top [, width [, height]] )\\r```"],"GUICtrlCreatePic":["Creates a Picture control for the GUI.","```\\rGUICtrlCreatePic ( filename, left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateProgress":["Creates a Progress control for the GUI.","```\\rGUICtrlCreateProgress ( left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateRadio":["Creates a Radio button control for the GUI.","```\\rGUICtrlCreateRadio ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateSlider":["Creates a Slider control for the GUI.","```\\rGUICtrlCreateSlider ( left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateTab":["Creates a Tab control for the GUI.","```\\rGUICtrlCreateTab ( left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateTabItem":["Creates a TabItem control within an existing tab control in the GUI.","```\\rGUICtrlCreateTabItem ( \\"text\\" )\\r```"],"GUICtrlCreateTreeView":["Creates a TreeView control for the GUI.","```\\rGUICtrlCreateTreeView ( left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )\\r```"],"GUICtrlCreateTreeViewItem":["Creates a TreeViewItem control for the GUI.","```\\rGUICtrlCreateTreeViewItem ( \\"text\\", treeviewID )\\r```"],"GUICtrlCreateUpdown":["Creates an UpDown control for the GUI.","```\\rGUICtrlCreateUpdown ( inputcontrolID [, style = -1] )\\r```"],"GUICtrlDelete":["Deletes a control.","```\\rGUICtrlDelete ( controlID )\\r```"],"GUICtrlGetHandle":["Returns the handle for a control and some special (item) handles (Menu, ContextMenu, TreeViewItem).","```\\rGUICtrlGetHandle ( controlID )\\r```"],"GUICtrlGetState":["Gets the current state of a control.","```\\rGUICtrlGetState ( controlID )\\r```"],"GUICtrlRead":["Read state or data of a control.","```\\rGUICtrlRead ( controlID [, advanced = 0] )\\r```"],"GUICtrlRecvMsg":["Send a message to a control and retrieve information in lParam.","```\\rGUICtrlRecvMsg ( controlID , msg [, wParam [, lParamType]] )\\r```"],"GUICtrlRegisterListViewSort":["Register a user defined function for an internal listview sorting callback function.","```\\rGUICtrlRegisterListViewSort ( controlID, \\"function\\" )\\r```"],"GUICtrlSendMsg":["Send a message to a control.","```\\rGUICtrlSendMsg ( controlID, msg , wParam, lParam )\\r```"],"GUICtrlSendToDummy":["Sends a message to a Dummy control.","```\\rGUICtrlSendToDummy ( controlID [, state] )\\r```"],"GUICtrlSetBkColor":["Sets the background color of a control.","```\\rGUICtrlSetBkColor ( controlID, backgroundcolor )\\r```"],"GUICtrlSetColor":["Sets the text color of a control.","```\\rGUICtrlSetColor ( controlID, textcolor )\\r```"],"GUICtrlSetCursor":["Sets the mouse cursor icon for a particular control.","```\\rGUICtrlSetCursor ( controlID, cursorID )\\r```"],"GUICtrlSetData":["Modifies the data for a control.","```\\rGUICtrlSetData ( controlID, data [, default] )\\r```"],"GUICtrlSetDefBkColor":["Sets the default background color of all the controls of the GUI window.","```\\rGUICtrlSetDefBkColor ( defbkcolor [, winhandle] )\\r```"],"GUICtrlSetDefColor":["Sets the default text color of all the controls of the GUI window.","```\\rGUICtrlSetDefColor ( deftextcolor [, winhandle] )\\r```"],"GUICtrlSetFont":["Sets the font for a control.","```\\rGUICtrlSetFont ( controlID, size [, weight [, attribute [, fontname [, quality]]]] )\\r```"],"GUICtrlSetGraphic":["Modifies the data for a control.","```\\rGUICtrlSetGraphic ( controlID, type [, par1 [, ... par6]] )\\r```"],"GUICtrlSetImage":["Sets the bitmap or icon image to use for a control.","```\\rGUICtrlSetImage ( controlID, filename [, iconname [, icontype]] )\\r```"],"GUICtrlSetLimit":["Limits the number of characters/pixels for a control.","```\\rGUICtrlSetLimit ( controlID, max [, min = 0] )\\r```"],"GUICtrlSetOnEvent":["Defines a user-defined function to be called when a control is clicked.","```\\rGUICtrlSetOnEvent ( controlID, \\"function\\" )\\r```"],"GUICtrlSetPos":["Changes the position of a control within the GUI window.","```\\rGUICtrlSetPos ( controlID, left [, top [, width [, height]]] )\\r```"],"GUICtrlSetResizing":["Defines the resizing method used by a control.","```\\rGUICtrlSetResizing ( controlID, resizing )\\r```"],"GUICtrlSetState":["Changes the state of a control.","```\\rGUICtrlSetState ( controlID, state )\\r```"],"GUICtrlSetStyle":["Changes the style of a control.","```\\rGUICtrlSetStyle ( controlID, style [, exStyle] )\\r```"],"GUICtrlSetTip":["Sets the tip text associated with a control.","```\\rGUICtrlSetTip ( controlID, tiptext [, \\"title\\" [, icon [, options]]] )\\r```"],"GUIDelete":["Deletes a GUI window and all controls that it contains.","```\\rGUIDelete ( [winhandle] )\\r```"],"GUIGetCursorInfo":["Gets the mouse cursor position relative to GUI window.","```\\rGUIGetCursorInfo ( [winhandle] )\\r```"],"GUIGetMsg":["Polls the GUI to see if any events have occurred.","```\\rGUIGetMsg ( [advanced = 0] )\\r```"],"GUIGetStyle":["Retrieves the styles of a GUI window.","```\\rGUIGetStyle ( [winhandle] )\\r```"],"GUIRegisterMsg":["Register a user defined function for a known Windows Message ID (WM_MSG).","```\\rGUIRegisterMsg ( msgID, \\"function\\" )\\r```"],"GUISetAccelerators":["Sets the accelerator table to be used in a GUI window.","```\\rGUISetAccelerators ( accelerators [, winhandle] )\\r```"],"GUISetBkColor":["Sets the background color of the GUI window.","```\\rGUISetBkColor ( background [, winhandle] )\\r```"],"GUISetCoord":["Sets absolute coordinates for the next control.","```\\rGUISetCoord ( left, top [, width [, height [, winhandle]]] )\\r```"],"GUISetCursor":["Sets the mouse cursor icon for a GUI window.","```\\rGUISetCursor ( [cursorID [, override = 0 [, winhandle]]] )\\r```"],"GUISetFont":["Sets the default font for a GUI window.","```\\rGUISetFont ( size [, weight [, attribute [, fontname [, winhandle [, quality]]]]] )\\r```"],"GUISetHelp":["Sets an executable file that will be run when F1 is pressed.","```\\rGUISetHelp ( helpfile [, winhandle] )\\r```"],"GUISetIcon":["Sets the icon used in a GUI window.","```\\rGUISetIcon ( iconfile [, iconID [, winhandle]] )\\r```"],"GUISetOnEvent":["Defines a user function to be called when a system button is clicked.","```\\rGUISetOnEvent ( specialID, \\"function\\" [, winhandle] )\\r```"],"GUISetState":["Changes the state of a GUI window.","```\\rGUISetState ( [flag [, winhandle]] )\\r```"],"GUISetStyle":["Changes the styles of a GUI window.","```\\rGUISetStyle ( Style [, ExStyle [, winhandle]] )\\r```"],"GUIStartGroup":["Defines that any subsequent controls that are created will be \\"grouped\\" together.","```\\rGUIStartGroup ( [winhandle] )\\r```"],"GUISwitch":["Switches the current window used for GUI functions.","```\\rGUISwitch ( winhandle [, tabitemID] )\\r```"],"Hex":["Returns a string representation of an integer or of a binary type converted to hexadecimal.","```\\rHex ( expression [, length] )\\r```"],"HotKeySet":["Sets a hotkey that calls a user function.","```\\rHotKeySet ( \\"key\\" [, \\"function\\"] )\\r```"],"HttpSetProxy":["Sets the internet proxy to use for http access.","```\\rHttpSetProxy ( mode = 0 [, \\"proxy:port\\" [, \\"username\\" [, \\"password\\"]]] )\\r```"],"HttpSetUserAgent":["Sets the HTTP user-agent string which is sent with all Inet requests.","```\\rHttpSetUserAgent ( \\"user agent\\" )\\r```"],"HWnd":["Converts an expression into an HWND handle.","```\\rHWnd ( expression )\\r```"],"InetClose":["Closes a handle returned from `InetGet()`.","```\\rInetClose ( handle )\\r```"],"InetGet":["Downloads a file from the internet using the HTTP, HTTPS or FTP protocol.","```\\rInetGet ( \\"URL\\", \\"filename\\" [, options = 0 [, background = 0]] )\\r```"],"InetGetInfo":["Returns detailed data for a handle returned from `InetGet()`.","```\\rInetGetInfo ( [handle [, index = -1]] )\\r```"],"InetGetSize":["Returns the size (in bytes) of a file located on the internet.","```\\rInetGetSize ( \\"URL\\" [, options = 0] )\\r```"],"InetRead":["Downloads a file from the internet using the HTTP, HTTPS or FTP protocol.","```\\rInetRead ( \\"URL\\" [, options = 0] )\\r```"],"IniDelete":["Deletes a value from a standard format .ini file.","```\\rIniDelete ( \\"filename\\", \\"section\\" [, \\"key\\"] )\\r```"],"IniRead":["Reads a value from a standard format .ini file.","```\\rIniRead ( \\"filename\\", \\"section\\", \\"key\\", \\"default\\" )\\r```"],"IniReadSection":["Reads all key/value pairs from a section in a standard format .ini file.","```\\rIniReadSection ( \\"filename\\", \\"section\\" )\\r```"],"IniReadSectionNames":["Reads all sections in a standard format .ini file.","```\\rIniReadSectionNames ( \\"filename\\" )\\r```"],"IniRenameSection":["Renames a section in a standard format .ini file.","```\\rIniRenameSection ( \\"filename\\", \\"section\\", \\"new section\\" [, flag = 0] )\\r```"],"IniWrite":["Writes a value to a standard format .ini file.","```\\rIniWrite ( \\"filename\\", \\"section\\", \\"key\\", \\"value\\" )\\r```"],"IniWriteSection":["Writes a section to a standard format .ini file.","```\\rIniWriteSection ( \\"filename\\", \\"section\\", \\"data\\" [, index = 1] )\\r```"],"InputBox":["Displays an input box to ask the user to enter a string.","```\\rInputBox ( \\"title\\", \\"prompt\\" [, \\"default\\" [, \\"password char\\" [, width = -1 [, height = -1 [, left = Default [, top = Default [, timeout = 0 [, hwnd]]]]]]]] )\\r```"],"Int":["Returns the integer (whole number) representation of an expression.","```\\rInt ( expression [, flag = 0] )\\r```"],"IsAdmin":["Checks if the current user has full administrator privileges.","```\\rIsAdmin ( )\\r```"],"IsArray":["Checks if a variable is an array type.","```\\rIsArray ( variable )\\r```"],"IsBinary":["Checks if a variable or expression is a binary type.","```\\rIsBinary ( expression )\\r```"],"IsBool":["Checks if a variable\'s base type is boolean.","```\\rIsBool ( variable )\\r```"],"IsDeclared":["Check if a variable has been declared.","```\\rIsDeclared ( expression )\\r```"],"IsDllStruct":["Checks if a variable is a DllStruct type.","```\\rIsDllStruct ( variable )\\r```"],"IsFloat":["Checks if the value of a variable or expression has a fractional component.","```\\rIsFloat ( variable )\\r```"],"IsFunc":["Checks if a variable or expression is a function type.","```\\rIsFunc ( expression )\\r```"],"IsHWnd":["Checks if a variable\'s base type is a pointer and window handle.","```\\rIsHWnd ( variable )\\r```"],"IsInt":["Checks if the value of a variable or expression has no fractional component.","```\\rIsInt ( variable )\\r```"],"IsKeyword":["Checks if a variable is a keyword (for example, Default).","```\\rIsKeyword ( variable )\\r```"],"IsMap":["Checks if a variables is a Map type.","```\\rIsMap ( variable )\\r```"],"IsNumber":["Checks if a variable\'s base type is numeric.","```\\rIsNumber ( variable )\\r```"],"IsObj":["Checks if a variable or expression is an object type.","```\\rIsObj ( variable )\\r```"],"IsPtr":["Checks if a variable\'s base type is a pointer.","```\\rIsPtr ( variable )\\r```"],"IsString":["Checks if a variable is a string type.","```\\rIsString ( variable )\\r```"],"Log":["Calculates the natural logarithm of a number.","```\\rLog ( expression )\\r```"],"MapAppend":["Add an element to a Map variable.","```\\rMapAppend ( map, value )\\r```"],"MapExists":["Determine whether a key exists within a Map.","```\\rMapExists ( map, key )\\r```"],"MapKeys":["Returns an array holding the keys within a Map.","```\\rMapKeys ( map )\\r```"],"MapRemove":["Remove a key and its associated value from a Map.","```\\rMapRemove ( map, key )\\r```"],"MemGetStats":["Retrieves memory related information.","```\\rMemGetStats ( )\\r```"],"Mod":["Performs the modulus operation.","```\\rMod ( value1, value2 )\\r```"],"MouseClick":["Perform a mouse click operation.","```\\rMouseClick ( \\"button\\" [, x, y [, clicks = 1 [, speed = 10]]] )\\r```"],"MouseClickDrag":["Perform a mouse click and drag operation.","```\\rMouseClickDrag ( \\"button\\", x1, y1, x2, y2 [, speed = 10] )\\r```"],"MouseDown":["Perform a mouse down event at the current mouse position.","```\\rMouseDown ( \\"button\\" )\\r```"],"MouseGetCursor":["Returns the cursor ID Number for the current Mouse Cursor.","```\\rMouseGetCursor ( )\\r```"],"MouseGetPos":["Retrieves the current position of the mouse cursor.","```\\rMouseGetPos ( [dimension] )\\r```"],"MouseMove":["Moves the mouse pointer.","```\\rMouseMove ( x, y [, speed = 10] )\\r```"],"MouseUp":["Perform a mouse up event at the current mouse position.","```\\rMouseUp ( \\"button\\" )\\r```"],"MouseWheel":["Moves the mouse wheel up or down.","```\\rMouseWheel ( \\"direction\\" [, clicks = 1] )\\r```"],"MsgBox":["Displays a simple message box with optional timeout.","```\\rMsgBox ( flag, \\"title\\", \\"text\\" [, timeout = 0 [, hwnd]] )\\r```"],"Number":["Returns the numeric representation of an expression.","```\\rNumber ( expression [, flag = 0] )\\r```"],"ObjCreate":["Creates a reference to a COM object from the given classname.","```\\rObjCreate ( \\"classname\\" [, \\"servername\\" [, \\"username\\" [, \\"password\\"]]] )\\r```"],"ObjCreateInterface":["Creates a reference to an object from the given classname/object pointer, interface identifier and description string. _(Experimental)_","```\\rObjCreateInterface ( \\"CLSID\\" , \\"IID\\" [, \\"interface_description\\",[flag = True]] )\\r```"],"ObjEvent":["Handles incoming events from the given Object.","```\\rObjEvent ( $ObjectVar, \\"functionprefix\\" [, \\"interface name\\"] )\\rObjEvent ( \\"AutoIt.Error\\" [, \\"function\\"] )\\r```"],"ObjGet":["Retrieves a reference to a COM object from an existing process or filename.","```\\rObjGet ( \\"filename\\" [, \\"classname\\" [, instance]] )\\r```"],"ObjName":["Returns the name or interface description of an Object.","```\\rObjName ( $Objectvariable [, Flag = 1] )\\r```"],"OnAutoItExitRegister":["Registers a function to be called when AutoIt exits.","```\\rOnAutoItExitRegister ( \\"function\\" )\\r```"],"OnAutoItExitUnRegister":["UnRegisters a function that was called when AutoIt exits.","```\\rOnAutoItExitUnRegister ( \\"function\\" )\\r```"],"Ping":["Pings a host and returns the roundtrip-time.","```\\rPing ( \\"address/hostname\\" [, timeout = 4000] )\\r```"],"PixelChecksum":["Generates a checksum for a region of pixels.","```\\rPixelChecksum ( left, top, right, bottom [, step = 1 [, hwnd [, mode = 0]]] )\\r```"],"PixelGetColor":["Returns a pixel color according to x,y pixel coordinates.","```\\rPixelGetColor ( x , y [, hwnd] )\\r```"],"PixelSearch":["Searches a rectangle of pixels for the pixel color provided.","```\\rPixelSearch ( left, top, right, bottom, color [, shade-variation = 0 [, step = 1 [, hwnd]]] )\\r```"],"ProcessClose":["Terminates a named process.","```\\rProcessClose ( \\"process\\" )\\r```"],"ProcessExists":["Checks to see if a specified process exists.","```\\rProcessExists ( \\"process\\" )\\r```"],"ProcessGetStats":["Returns an array about Memory or IO infos of a running process.","```\\rProcessGetStats ( [\\"process\\" [, type = 0]] )\\r```"],"ProcessList":["Returns an array listing the currently running processes (names and PIDs).","```\\rProcessList ( [\\"name\\"] )\\r```"],"ProcessSetPriority":["Changes the priority of a process.","```\\rProcessSetPriority ( \\"process\\", priority )\\r```"],"ProcessWait":["Pauses script execution until a given process exists.","```\\rProcessWait ( \\"process\\" [, timeout = 0] )\\r```"],"ProcessWaitClose":["Pauses script execution until a given process does not exist.","```\\rProcessWaitClose ( \\"process\\" [, timeout = 0] )\\r```"],"ProgressOff":["Turns Progress window off.","```\\rProgressOff ( )\\r```"],"ProgressOn":["Creates a customizable progress bar window.","```\\rProgressOn ( \\"title\\", \\"maintext\\" [, \\"subtext\\" [, x pos [, y pos [, opt]]]] )\\r```"],"ProgressSet":["Sets the position and/or text of a previously created Progress bar window.","```\\rProgressSet ( percent [, \\"subtext\\" [, \\"maintext\\"]] )\\r```"],"Ptr":["Converts an expression into a pointer variant.","```\\rPtr ( expression )\\r```"],"Random":["Generates a pseudo-random float-type number.","```\\rRandom ( [Min = 0 [, Max = 1 [, Flag = 0]]] )\\r```"],"RegDelete":["Deletes a key or value from the registry.","```\\rRegDelete ( \\"keyname\\" [, \\"valuename\\"] )\\r```"],"RegEnumKey":["Reads the name of a subkey according to its instance.","```\\rRegEnumKey ( \\"keyname\\", instance )\\r```"],"RegEnumVal":["Reads the name of a value according to its instance.","```\\rRegEnumVal ( \\"keyname\\", instance )\\r```"],"RegRead":["Reads a value from the registry.","```\\rRegRead ( \\"keyname\\", \\"valuename\\" )\\r```"],"RegWrite":["Creates a key or value in the registry.","```\\rRegWrite ( \\"keyname\\" [, \\"valuename\\", \\"type\\", value] )\\r```"],"Round":["Returns a number rounded to a specified number of decimal places.","```\\rRound ( expression [, decimalplaces] )\\r```"],"Run":["Runs an external program.","```\\rRun ( \\"program\\" [, \\"workingdir\\" [, show_flag [, opt_flag]]] )\\r```"],"RunAs":["Runs an external program under the context of a different user.","```\\rRunAs ( \\"username\\", \\"domain\\", \\"password\\", logon_flag, \\"program\\" [, \\"workingdir\\" [, show_flag [, opt_flag]]] )\\r```"],"RunAsWait":["Runs an external program under the context of a different user and pauses script execution until the program finishes.","```\\rRunAsWait ( \\"username\\", \\"domain\\", \\"password\\", logon_flag, \\"program\\" [, \\"workingdir\\" [, show_flag [, opt_flag]]] )\\r```"],"RunWait":["Runs an external program and pauses script execution until the program finishes.","```\\rRunWait ( \\"program\\" [, \\"workingdir\\" [, show_flag [, opt_flag]]] )\\r```"],"Send":["Sends simulated keystrokes to the active window.","```\\rSend ( \\"keys\\" [, flag = 0] )\\r```"],"SendKeepActive":["Attempts to keep a specified window active during `Send()`.","```\\rSendKeepActive ( \\"title\\" [, \\"text\\"] )\\r```"],"SetError":["Manually set the value of the `@error` macro (and optionally @extended, and \\"Return Value\\").","```\\rSetError ( code [, extended = 0 [, return value]] )\\r```"],"SetExtended":["Manually set the value of the @extended macro.","```\\rSetExtended ( code [, return value] )\\r```"],"ShellExecute":["Runs an external program using the ShellExecute API.","```\\rShellExecute ( \\"filename\\" [, \\"parameters\\" [, \\"workingdir\\" [, \\"verb\\" [, showflag]]]] )\\r```"],"ShellExecuteWait":["Runs an external program using the ShellExecute API and pauses script execution until it finishes.","```\\rShellExecuteWait ( \\"filename\\" [, \\"parameters\\" [, \\"workingdir\\" [, \\"verb\\" [, showflag]]]] )\\r```"],"Shutdown":["Shuts down the system.","```\\rShutdown ( code )\\r```"],"Sin":["Calculates the sine of a number.","```\\rSin ( expression )\\r```"],"Sleep":["Pause script execution.","```\\rSleep ( delay )\\r```"],"SoundPlay":["Play a sound file.","```\\rSoundPlay ( \\"filename\\" [, wait = 0] )\\r```"],"SoundSetWaveVolume":["Sets the system wave volume by percent.","```\\rSoundSetWaveVolume ( percent )\\r```"],"SplashImageOn":["Creates a customizable image popup window.","```\\rSplashImageOn ( \\"title\\", \\"file\\" [, width [, height [, x pos [, y pos [, opt]]]]] )\\r```"],"SplashOff":["Turns `SplashText` or `SplashImage` off.","```\\rSplashOff ( )\\r```"],"SplashTextOn":["Creates a customizable text popup window.","```\\rSplashTextOn ( \\"title\\", \\"text\\" [, w = 500 [, h = 400 [, x pos [, y pos [, opt = 0 [, \\"fontname\\" [, fontsz = 12 [, fontwt]]]]]]]] )\\r```"],"Sqrt":["Calculates the square-root of a number.","```\\rSqrt ( expression )\\r```"],"SRandom":["Set Seed for random number generation.","```\\rSRandom ( Seed )\\r```"],"StatusbarGetText":["Retrieves the text from a standard status bar control.","```\\rStatusbarGetText ( \\"title\\" [, \\"text\\" [, part = 1]] )\\r```"],"StderrRead":["Reads from the STDERR stream of a previously run child process.","```\\rStderrRead ( process_id [, peek = False [, binary = False]] )\\r```"],"StdinWrite":["Writes a number of characters to the STDIN stream of a previously run child process.","```\\rStdinWrite ( process_id [, data] )\\r```"],"StdioClose":["Closes all resources associated with a process previously run with STDIO redirection.","```\\rStdioClose ( process_id )\\r```"],"StdoutRead":["Reads from the STDOUT stream of a previously run child process.","```\\rStdoutRead ( process_id [, peek = False [, binary = False]] )\\r```"],"String":["Returns the string representation of an expression.","```\\rString ( expression )\\r```"],"StringAddCR":["Takes a string and prefixes all linefeed characters ( `Chr(10)` ) with a carriage return character ( `Chr(13)` ).","```\\rStringAddCR ( \\"string\\" )\\r```"],"StringCompare":["Compares two strings with options.","```\\rStringCompare ( \\"string1\\", \\"string2\\" [, casesense = 0] )\\r```"],"StringFormat":["Returns a formatted string (similar to the C sprintf() function).","```\\rStringFormat ( \\"format control\\", var1 [, ... var32] )\\r```"],"StringFromASCIIArray":["Converts an array of ASCII codes to a string.","```\\rStringFromASCIIArray ( array,[start = 0 [, end = -1 [, encoding = 0]]] )\\r```"],"StringInStr":["Checks if a string contains a given substring.","```\\rStringInStr ( \\"string\\", \\"substring\\" [, casesense = 0 [, occurrence = 1 [, start = 1 [, count]]]] )\\r```"],"StringIsAlNum":["Checks if a string contains only alphanumeric characters.","```\\rStringIsAlNum ( \\"string\\" )\\r```"],"StringIsAlpha":["Checks if a string contains only alphabetic characters.","```\\rStringIsAlpha ( \\"string\\" )\\r```"],"StringIsASCII":["Checks if a string contains only ASCII characters in the range 0x00 - 0x7f (0 - 127).","```\\rStringIsASCII ( \\"string\\" )\\r```"],"StringIsDigit":["Checks if a string contains only digit (0-9) characters.","```\\rStringIsDigit ( \\"string\\" )\\r```"],"StringIsFloat":["Checks if a string is a floating point number.","```\\rStringIsFloat ( \\"string\\" )\\r```"],"StringIsInt":["Checks if a string is an integer.","```\\rStringIsInt ( \\"string\\" )\\r```"],"StringIsLower":["Checks if a string contains only lowercase characters.","```\\rStringIsLower ( \\"string\\" )\\r```"],"StringIsSpace":["Checks if a string contains only whitespace characters.","```\\rStringIsSpace ( \\"string\\" )\\r```"],"StringIsUpper":["Checks if a string contains only uppercase characters.","```\\rStringIsUpper ( \\"string\\" )\\r```"],"StringIsXDigit":["Checks if a string contains only hexadecimal digit (0-9, A-F) characters.","```\\rStringIsXDigit ( \\"string\\" )\\r```"],"StringLeft":["Returns a number of characters from the left-hand side of a string.","```\\rStringLeft ( \\"string\\", count )\\r```"],"StringLen":["Returns the number of characters in a string.","```\\rStringLen ( \\"string\\" )\\r```"],"StringLower":["Converts a string to lowercase.","```\\rStringLower ( \\"string\\" )\\r```"],"StringMid":["Extracts a number of characters from a string.","```\\rStringMid ( \\"string\\", start [, count = -1] )\\r```"],"StringRegExp":["Check if a string fits a given regular expression pattern.","```\\rStringRegExp ( \\"test\\", \\"pattern\\" [, flag = 0 [, offset = 1]] )\\r```"],"StringRegExpReplace":["Replace text in a string based on regular expressions.","```\\rStringRegExpReplace ( \\"test\\", \\"pattern\\", \\"replace\\" [, count = 0] )\\r```"],"StringReplace":["Replaces substrings in a string.","```\\rStringReplace ( \\"string\\", \\"searchstring/start\\", \\"replacestring\\" [, occurrence = 0 [, casesense = 0]] )\\r```"],"StringReverse":["Reverses the contents of the specified string.","```\\rStringReverse ( \\"string\\" [, flag = 0] )\\r```"],"StringRight":["Returns a number of characters from the right-hand side of a string.","```\\rStringRight ( \\"string\\", count )\\r```"],"StringSplit":["Splits up a string into substrings depending on the given delimiters.","```\\rStringSplit ( \\"string\\", \\"delimiters\\" [, flag = 0] )\\r```"],"StringStripCR":["Removes all carriage return values ( `Chr(13)` ) from a string.","```\\rStringStripCR ( \\"string\\" )\\r```"],"StringStripWS":["Strips the white space in a string.","```\\rStringStripWS ( \\"string\\", flag )\\r```"],"StringToASCIIArray":["Converts a string to an array containing the ASCII code of each character.","```\\rStringToASCIIArray ( \\"string\\",[start = 0 [, end [, encoding = 0]]] )\\r```"],"StringToBinary":["Converts a string into binary data.","```\\rStringToBinary ( expression [, flag = 1] )\\r```"],"StringTrimLeft":["Trims a number of characters from the left hand side of a string.","```\\rStringTrimLeft ( \\"string\\", count )\\r```"],"StringTrimRight":["Trims a number of characters from the right hand side of a string.","```\\rStringTrimRight ( \\"string\\", count )\\r```"],"StringUpper":["Converts a string to uppercase.","```\\rStringUpper ( \\"string\\" )\\r```"],"Tan":["Calculates the tangent of a number.","```\\rTan ( expression )\\r```"],"TCPAccept":["Permits an incoming connection attempt on a socket.","```\\rTCPAccept ( mainsocket )\\r```"],"TCPCloseSocket":["Closes a TCP socket.","```\\rTCPCloseSocket ( socket )\\r```"],"TCPConnect":["Create a socket connected to an existing server.","```\\rTCPConnect ( IPAddr, port )\\r```"],"TCPListen":["Creates a socket listening for an incoming connection.","```\\rTCPListen ( IPAddr, port [, MaxPendingConnection] )\\r```"],"TCPNameToIP":["Converts an Internet name to IP address.","```\\rTCPNameToIP ( name )\\r```"],"TCPRecv":["Receives data from a connected socket.","```\\rTCPRecv ( mainsocket, maxlen [, flag = 0] )\\r```"],"TCPSend":["Sends data on a connected socket.","```\\rTCPSend ( mainsocket, data )\\r```"],"TCPShutdown":["Stops TCP services.","```\\rTCPShutdown ( )\\r```"],"TCPStartup":["Starts TCP services.","```\\rTCPStartup ( )\\r```"],"TimerDiff":["Returns the difference in time from a previous call to `TimerInit()`.","```\\rTimerDiff ( handle )\\r```"],"TimerInit":["Returns a handle that can be passed to `TimerDiff()` to calculate the difference in milliseconds.","```\\rTimerInit ( )\\r```"],"ToolTip":["Creates a tooltip anywhere on the screen.","```\\rToolTip ( \\"text\\" [, x [, y [, \\"title\\" [, icon = 0 [, options]]]]] )\\r```"],"TrayCreateItem":["Creates a menuitem control for the tray.","```\\rTrayCreateItem ( \\"text\\" [, menuID = -1 [, menuentry = -1 [, menuradioitem = 0]]] )\\r```"],"TrayCreateMenu":["Creates a menu control for the tray menu.","```\\rTrayCreateMenu ( \\"sub/menutext\\" [, menuID = -1 [, menuentry = -1]] )\\r```"],"TrayGetMsg":["Polls the tray to see if any events have occurred.","```\\rTrayGetMsg ( )\\r```"],"TrayItemDelete":["Deletes a menu/item control from the tray menu.","```\\rTrayItemDelete ( controlID )\\r```"],"TrayItemGetHandle":["Returns the handle for a tray menu(item).","```\\rTrayItemGetHandle ( controlID )\\r```"],"TrayItemGetState":["Gets the current state of a control.","```\\rTrayItemGetState ( [controlID] )\\r```"],"TrayItemGetText":["Gets the itemtext of a tray menu/item control.","```\\rTrayItemGetText ( controlID )\\r```"],"TrayItemSetOnEvent":["Defines a user-defined function to be called when a tray item is clicked.","```\\rTrayItemSetOnEvent ( itemID, \\"function\\" )\\r```"],"TrayItemSetState":["Sets the state of a tray menu/item control.","```\\rTrayItemSetState ( controlID, state )\\r```"],"TrayItemSetText":["Sets the itemtext of a tray menu/item control.","```\\rTrayItemSetText ( controlID, text )\\r```"],"TraySetClick":["Sets the clickmode of the tray icon - what mouseclicks will display the tray menu.","```\\rTraySetClick ( flag )\\r```"],"TraySetIcon":["Loads/Sets a specified tray icon.","```\\rTraySetIcon ( [filename [, iconID]] )\\r```"],"TraySetOnEvent":["Defines a user function to be called when a special tray action happens.","```\\rTraySetOnEvent ( specialID, \\"function\\" )\\r```"],"TraySetPauseIcon":["Loads/Sets a specified tray pause icon.","```\\rTraySetPauseIcon ( [filename [, iconID]] )\\r```"],"TraySetState":["Sets the state of the tray icon.","```\\rTraySetState ( [flag = 1] )\\r```"],"TraySetToolTip":["(Re)Sets the tooltip text for the tray icon.","```\\rTraySetToolTip ( [text] )\\r```"],"TrayTip":["Displays a balloon tip from the AutoIt Icon.","```\\rTrayTip ( \\"title\\", \\"text\\", timeout [, option = 0] )\\r```"],"UBound":["Returns the size of array dimensions or the number of keys in a map.","```\\rUBound ( Variable [, Dimension = 1] )\\r```"],"UDPBind":["Create a socket bound to an incoming connection.","```\\rUDPBind ( IPAddr, port )\\r```"],"UDPCloseSocket":["Close a UDP socket.","```\\rUDPCloseSocket ( socketarray )\\r```"],"UDPOpen":["Open a socket connected to an existing server .","```\\rUDPOpen ( IPAddr, port [, flag = 0] )\\r```"],"UDPRecv":["Receives data from an opened socket.","```\\rUDPRecv ( socketarray, maxlen [, flag = 0] )\\r```"],"UDPSend":["Sends data on an opened socket.","```\\rUDPSend ( socketarray, data )\\r```"],"UDPShutdown":["Stops UDP services.","```\\rUDPShutdown ( )\\r```"],"UDPStartup":["Starts UDP services.","```\\rUDPStartup ( )\\r```"],"VarGetType":["Returns the internal type representation of a variant.","```\\rVarGetType ( expression )\\r```"],"WinActivate":["Activates (gives focus to) a window.","```\\rWinActivate ( \\"title\\" [, \\"text\\"] )\\r```"],"WinActive":["Checks to see if a specified window exists and is currently active.","```\\rWinActive ( \\"title\\" [, \\"text\\"] )\\r```"],"WinClose":["Closes a window.","```\\rWinClose ( \\"title\\" [, \\"text\\"] )\\r```"],"WinExists":["Checks to see if a specified window exists.","```\\rWinExists ( \\"title\\" [, \\"text\\"] )\\r```"],"WinFlash":["Flashes a window in the taskbar.","```\\rWinFlash ( \\"title\\" [, \\"text\\" [, flashes = 4 [, delay = 500]]] )\\r```"],"WinGetCaretPos":["Returns the coordinates of the caret in the foreground window.","```\\rWinGetCaretPos ( )\\r```"],"WinGetClassList":["Retrieves the classes from a window.","```\\rWinGetClassList ( \\"title\\" [, \\"text\\"] )\\r```"],"WinGetClientSize":["Retrieves the size of a given window\'s client area.","```\\rWinGetClientSize ( \\"title\\" [, \\"text\\"] )\\r```"],"WinGetHandle":["Retrieves the internal handle of a window.","```\\rWinGetHandle ( \\"title\\" [, \\"text\\"] )\\r```"],"WinGetPos":["Retrieves the position and size of a given window.","```\\rWinGetPos ( \\"title\\" [, \\"text\\"] )\\r```"],"WinGetProcess":["Retrieves the Process ID (PID) associated with a window.","```\\rWinGetProcess ( \\"title\\" [, \\"text\\"] )\\r```"],"WinGetState":["Retrieves the state of a given window.","```\\rWinGetState ( \\"title\\" [, \\"text\\"] )\\r```"],"WinGetText":["Retrieves the text from a window.","```\\rWinGetText ( \\"title\\" [, \\"text\\"] )\\r```"],"WinGetTitle":["Retrieves the full title from a window.","```\\rWinGetTitle ( \\"title\\" [, \\"text\\"] )\\r```"],"WinKill":["Forces a window to close.","```\\rWinKill ( \\"title\\" [, \\"text\\"] )\\r```"],"WinList":["Retrieves a list of windows.","```\\rWinList ( [\\"title\\" [, \\"text\\"]] )\\r```"],"WinMenuSelectItem":["Invokes a menu item of a window.","```\\rWinMenuSelectItem ( \\"title\\", \\"text\\", \\"item\\" [, \\"item\\" [, \\"item\\" [, \\"item\\" [, \\"item\\" [, \\"item\\" [, \\"item\\"]]]]]] )\\r```"],"WinMinimizeAll":["Minimizes all windows.","```\\rWinMinimizeAll ( )\\r```"],"WinMinimizeAllUndo":["Undoes a previous WinMinimizeAll function.","```\\rWinMinimizeAllUndo ( )\\r```"],"WinMove":["Moves and/or resizes a window.","```\\rWinMove ( \\"title\\", \\"text\\", x, y [, width [, height [, speed]]] )\\r```"],"WinSetOnTop":["Change a window\'s \\"Always On Top\\" attribute.","```\\rWinSetOnTop ( \\"title\\", \\"text\\", flag )\\r```"],"WinSetState":["Shows, hides, minimizes, maximizes, or restores a window.","```\\rWinSetState ( \\"title\\", \\"text\\", flag )\\r```"],"WinSetTitle":["Changes the title of a window.","```\\rWinSetTitle ( \\"title\\", \\"text\\", \\"newtitle\\" )\\r```"],"WinSetTrans":["Sets the transparency of a window.","```\\rWinSetTrans ( \\"title\\", \\"text\\", transparency )\\r```"],"WinWait":["Pauses execution of the script until the requested window exists.","```\\rWinWait ( \\"title\\" [, \\"text\\" [, timeout = 0]] )\\r```"],"WinWaitActive":["Pauses execution of the script until the requested window is active.","```\\rWinWaitActive ( \\"title\\" [, \\"text\\" [, timeout = 0]] )\\r```"],"WinWaitClose":["Pauses execution of the script until the requested window does not exist.","```\\rWinWaitClose ( \\"title\\" [, \\"text\\" [, timeout = 0]] )\\r```"],"WinWaitNotActive":["Pauses execution of the script until the requested window is not active.","```\\rWinWaitNotActive ( \\"title\\" [, \\"text\\" [, timeout = 0]] )\\r```"]}'),h=JSON.parse('{"#NoTrayIcon":["Indicates that the AutoIt tray icon will not be shown when the script starts."],"#RequireAdmin":["Specifies that the current script requires full administrator rights to run."],"#include":["Includes a file in the current script."],"#include-once":["Specifies that the current file should only be included once."],"#OnAutoItStartRegister":["Registers a function to be called when AutoIt starts."]}'),u=JSON.parse('{"@AppDataCommonDir":["Path to Application Data"],"@AppDataDir":["Path to current user\'s Roaming Application Data"],"@AutoItExe":["The full path and filename of the AutoIt executable currently running. For compiled scripts it is the path of the compiled script; for .a3x and .au3 files it is the path of the interpreter running the file."],"@AutoItPID":["Process identifier (PID) of the current script."],"@AutoItVersion":["Version number of AutoIt such as 3.3.10.2"],"@AutoItX64":["Returns 1 if the script is running under the native x64 version of AutoIt."],"@COM_EventObj":["Object the COM event is being fired on. Only valid in a COM event function."],"@CommonFilesDir":["Path to Common Files folder"],"@Compiled":["Returns 1 if script is a compiled executable or an .a3x file; returns 0 if an .au3 file."],"@ComputerName":["Computer\'s network name"],"@ComSpec":["Value of %COMSPEC%, the SPECified secondary COMmand interpreter;  \\rprimary for command line uses, e.g. `Run(@ComSpec & \\" /k help | more\\")`"],"@CPUArch":["Returns \\"X86\\" when the CPU is a 32-bit CPU and \\"X64\\" when the CPU is 64-bit."],"@CR":["Carriage return, `Chr(13)`; occasionally used for line breaks."],"@CRLF":["`@CR` & `@LF`; typically used for line breaks."],"@DesktopCommonDir":["Path to Desktop"],"@DesktopDepth":["Depth of the primary display in bits per pixel."],"@DesktopDir":["Path to current user\'s Desktop"],"@DesktopHeight":["Height of the primary display in pixels. (Vertical resolution)"],"@DesktopRefresh":["Refresh rate of the primary display in hertz."],"@DesktopWidth":["Width of the primary display in pixels. (Horizontal resolution)"],"@DocumentsCommonDir":["Path to Documents"],"@error":["Status of the error flag. See the function `SetError()`."],"@exitCode":["Exit code as set by `Exit` statement."],"@exitMethod":["Exit method. See the function `OnAutoItExitRegister()`."],"@extended":["Extended function return - used in certain functions such as `StringReplace()`."],"@FavoritesCommonDir":["Path to Favorites"],"@FavoritesDir":["Path to current user\'s Favorites"],"@GUI_CtrlHandle":["Last click GUI Control handle. Only valid in an event Function. See the `GUICtrlSetOnEvent()` function."],"@GUI_CtrlId":["Last click GUI Control identifier. Only valid in an event Function. See the `GUICtrlSetOnEvent()` function."],"@GUI_DragFile":["Filename of the file being dropped. Only valid on Drop Event. See the `GUISetOnEvent()` function."],"@GUI_DragId":["Drag GUI Control identifier. Only valid on Drop Event. See the `GUISetOnEvent()` function."],"@GUI_WinHandle":["Last click GUI window handle. Only valid in an event Function. See the `GUICtrlSetOnEvent()` function."],"@HomeDrive":["Drive letter of drive containing current user\'s home directory."],"@HomePath":["Directory part of current user\'s home directory. To get the full path, use in conjunction with `@HomeDrive`."],"@HomeShare":["Server and share name containing current user\'s home directory."],"@HotKeyPressed":["Last hotkey pressed. See the `HotKeySet()` function."],"@HOUR":["Hours value of clock in 24-hour format. Range is 00 to 23"],"@IPAddress1":["IP address of first network adapter. Tends to return 127.0.0.1 on some computers."],"@IPAddress2":["IP address of second network adapter. Returns 0.0.0.0 if not applicable."],"@IPAddress3":["IP address of third network adapter. Returns 0.0.0.0 if not applicable."],"@IPAddress4":["IP address of fourth network adapter. Returns 0.0.0.0 if not applicable."],"@KBLayout":["Returns code denoting Keyboard Layout. See Appendix for possible values."],"@LF":["Line feed, `Chr(10)`; occasionally used for line breaks."],"@LocalAppDataDir":["Path to current user\'s Local Application Data"],"@LogonDNSDomain":["Logon DNS Domain."],"@LogonDomain":["Logon Domain."],"@LogonServer":["Logon server."],"@MDAY":["Current day of month. Range is 01 to 31"],"@MIN":["Minutes value of clock. Range is 00 to 59"],"@MON":["Current month. Range is 01 to 12"],"@MSEC":["Milliseconds value of clock. Range is 000 to 999. The update frequency of this value depends on the timer resolution of the hardware and may not update every millisecond."],"@MUILang":["Returns code denoting Multi Language if available (Vista is OK by default)."],"@MyDocumentsDir":["Path to My Documents target"],"@NumParams":["Number of parameters used in calling the user function."],"@OSArch":["Returns one of the following: \\"X86\\", \\"IA64\\", \\"X64\\" - this is the architecture type of the currently running operating system."],"@OSBuild":["Returns the OS build number. For example, Windows 2003 Server returns 3790"],"@OSLang":["Returns code denoting OS Language."],"@OSServicePack":["Service pack info in the form of \\"Service Pack 3\\"."],"@OSType":["Returns \\"WIN32_NT\\" for XP/2003/Vista/2008/Win7/2008R2/Win8/2012/Win8.1/2012R2."],"@OSVersion":["Returns one of the following: \\"WIN_10\\", \\"WIN_81\\", \\"WIN_8\\", \\"WIN_7\\", \\"WIN_VISTA\\", \\"WIN_XP\\", \\"WIN_XPe\\", for Windows servers: \\"WIN_2016\\", \\"WIN_2012R2\\", \\"WIN_2012\\", \\"WIN_2008R2\\", \\"WIN_2008\\", \\"WIN_2003\\"."],"@ProgramFilesDir":["Path to Program Files folder"],"@ProgramsCommonDir":["Path to Start Menu\'s Programs folder"],"@ProgramsDir":["Path to current user\'s Programs (folder on Start Menu)"],"@ScriptDir":["Directory containing the running script. Only includes a trailing backslash when the script is located in the root of a drive."],"@ScriptFullPath":["Equivalent to `@ScriptDir & \\"\\\\\\" & @ScriptName`"],"@ScriptLineNumber":["Line number being executed - useful for debug statements (e.g. location of function call). Only significant in uncompiled scripts - note that #include files return their internal line numbering"],"@ScriptName":["Filename of the running script."],"@SEC":["Seconds value of clock. Range is 00 to 59"],"@StartMenuCommonDir":["Path to Start Menu folder"],"@StartMenuDir":["Path to current user\'s Start Menu"],"@StartupCommonDir":["Path to Startup folder"],"@StartupDir":["current user\'s Startup folder"],"@SW_DISABLE":["Disables the window."],"@SW_HIDE":["Hides the window and activates another window."],"@SW_LOCK":["Lock the window to avoid repainting."],"@SW_MAXIMIZE":["Activates the window and displays it as a maximized window."],"@SW_MINIMIZE":["Minimizes the specified window and activates the next top-level window in the Z order."],"@SW_RESTORE":["Activates and displays the window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when restoring a minimized window."],"@SW_SHOW":["Activates the window and displays it in its current size and position."],"@SW_SHOWDEFAULT":["Sets the show state based on the SW_ value specified by the program that started the application."],"@SW_SHOWMAXIMIZED":["Activates the window and displays it as a maximized window."],"@SW_SHOWMINIMIZED":["Activates the window and displays it as a minimized window."],"@SW_SHOWMINNOACTIVE":["Displays the window as a minimized window. This value is similar to `@SW_SHOWMINIMIZED`, except the window is not activated."],"@SW_SHOWNA":["Displays the window in its current size and position. This value is similar to `@SW_SHOW`, except the window is not activated."],"@SW_SHOWNOACTIVATE":["Displays a window in its most recent size and position. This value is similar to `@SW_SHOWNORMAL`, except the window is not activated."],"@SW_SHOWNORMAL":["Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time."],"@SW_UNLOCK":["Unlock window to allow painting."],"@SystemDir":["Path to the Windows\' System (or System32) folder."],"@TAB":["Tab character, `Chr(9)`"],"@TempDir":["Path to the temporary files folder."],"@TRAY_ID":["Last clicked item identifier during a `TraySetOnEvent()` or `TrayItemSetOnEvent()` action."],"@TrayIconFlashing":["Returns 1 if tray icon is flashing; otherwise, returns 0."],"@TrayIconVisible":["Returns 1 if tray icon is visible; otherwise, returns 0."],"@UserName":["ID of the currently logged on user."],"@UserProfileDir":["Path to current user\'s Profile folder."],"@WDAY":["Numeric day of week. Range is 1 to 7 which corresponds to Sunday through Saturday."],"@WindowsDir":["Path to Windows folder"],"@WorkingDir":["Current/active working directory. Only includes a trailing backslash when the script is located in the root of a drive."],"@YDAY":["Current day of year. Range is 001 to 366 (or 001 to 365 if not a leap year)"],"@YEAR":["Current four-digit year"]}'),m=JSON.parse('{"_Array1DToHistogram":["Transform a 1D array to Histogram","```\\r#include <Array.au3>\\r_Array1DToHistogram ( $aArray [, $iSizing = 100] )\\r```"],"_ArrayAdd":["Adds a specified value at the end of an existing 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayAdd ( ByRef $aArray, $vValue [, $iStart = 0 [, $sDelim_Item = \\"|\\" [, $sDelim_Row = @CRLF [, $iForce = $ARRAYFILL_FORCE_DEFAULT]]]] )\\r```"],"_ArrayBinarySearch":["Uses the binary search algorithm to search through a 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayBinarySearch ( Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iColumn = 0]]] )\\r```"],"_ArrayColDelete":["Deletes a specified column from a 2D array","```\\r#include <Array.au3>\\r_ArrayColDelete ( ByRef $aArray, $iColumn [, $bConvert = False] )\\r```"],"_ArrayColInsert":["Inserts a specified column into a 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayColInsert ( ByRef $aArray, $iColumn )\\r```"],"_ArrayCombinations":["Returns an array of the combinations of a set of elements from a selected 1D array","```\\r#include <Array.au3>\\r_ArrayCombinations ( Const ByRef $aArray, $iSet [, $sDelimiter = \\"\\"] )\\r```"],"_ArrayConcatenate":["Concatenate two arrays - either 1D or 2D with the same number of columns","```\\r#include <Array.au3>\\r_ArrayConcatenate ( Const ByRef $aArrayTarget, ByRef $aArraySource [, $iStart = 0] )\\r```"],"_ArrayDelete":["Deletes the specified element(s) from the specified 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayDelete ( ByRef $aArray, $vRange )\\r```"],"_ArrayDisplay":["Displays a 1D or 2D array in a ListView","```\\r#include <Array.au3>\\r_ArrayDisplay ( Const ByRef $aArray [, $sTitle = \\"ArrayDisplay\\" [, $sArrayRange = \\"\\" [, $iFlags = 0 [, $vUser_Separator = Default [, $sHeader = Default [, $iMax_ColWidth = Default [, $iAlt_Color = Default [, $hUser_Function = \\"\\"]]]]]]]] )\\r```"],"_ArrayExtract":["Extracts an array from the specified element(s) of a 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayExtract ( Const ByRef $aArray [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $iStart_Col = -1 [, $iEnd_Col = -1]]]] )\\r```"],"_ArrayFindAll":["Find the indices of all ocurrences of a search query between two points in a 1D or 2D array using `_ArraySearch()`","```\\r#include <Array.au3>\\r_ArrayFindAll ( Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iCase = 0 [, $iCompare = 0 [, $iSubItem = 0 [, $bRow = False]]]]]] )\\r```"],"_ArrayInsert":["Insert a new value at the specified position of a 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayInsert ( ByRef $aArray, $vRange [, $vValue = \\"\\" [, $iStart = 0 [, $sDelim_Item = \\"|\\" [, $sDelim_Row = @CRLF [, $iForce = $ARRAYFILL_FORCE_DEFAULT]]]]] )\\r```"],"_ArrayMax":["Returns the highest value held in a 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayMax ( Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]] )\\r```"],"_ArrayMaxIndex":["Returns the index where the highest value occurs in a 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayMaxIndex ( Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]] )\\r```"],"_ArrayMin":["Returns the lowest value held in a 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayMin ( Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]] )\\r```"],"_ArrayMinIndex":["Returns the index where the lowest value occurs in a 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayMinIndex ( Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]] )\\r```"],"_ArrayPermute":["Returns an array of the Permutations of all Elements in a 1D array","```\\r#include <Array.au3>\\r_ArrayPermute ( ByRef $aArray [, $sDelimiter = \\"\\"] )\\r```"],"_ArrayPop":["Returns the last element of an array, deleting that element from the array at the same time","```\\r#include <Array.au3>\\r_ArrayPop ( ByRef $aArray )\\r```"],"_ArrayPush":["Add new values without increasing array size by inserting at the end the new value and deleting the first one or vice versa","```\\r#include <Array.au3>\\r_ArrayPush ( ByRef $aArray, $vValue [, $iDirection = 0] )\\r```"],"_ArrayReverse":["Takes the given array and reverses the order in which the elements appear in a 1D array","```\\r#include <Array.au3>\\r_ArrayReverse ( ByRef $aArray [, $iStart = 0 [, $iEnd = 0]] )\\r```"],"_ArraySearch":["Finds an entry within a 1D or 2D array. Similar to `_ArrayBinarySearch()`, except that the array does not need to be sorted","```\\r#include <Array.au3>\\r_ArraySearch ( Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iCase = 0 [, $iCompare = 0 [, $iForward = 1 [, $iSubItem = -1 [, $bRow = False]]]]]]] )\\r```"],"_ArrayShuffle":["Shuffles selected rows of 1D or 2D arrays - can be limited to a specific column in 2D arrays","```\\r#include <Array.au3>\\r_ArrayShuffle ( ByRef $aArray [, $iStart_Row = 0 [, $iEnd_Row = 0 [, $iCol = -1]]] )\\r```"],"_ArraySort":["Sort a 1D or 2D array on a specific index using the dualpivotsort/quicksort/insertionsort algorithms","```\\r#include <Array.au3>\\r_ArraySort ( ByRef $aArray [, $iDescending = 0 [, $iStart = 0 [, $iEnd = 0 [, $iSubItem = 0 [, $iPivot = 0]]]]] )\\r```"],"_ArraySwap":["Swaps elements of a 1D array and full or part rows/columns of a 2D array","```\\r#include <Array.au3>\\r_ArraySwap ( ByRef $aArray, $iIndex_1, $iIndex_2 [, $bCol = False [, $iStart = -1 [, $iEnd = -1]]] )\\r```"],"_ArrayToClip":["Sends the contents of a 1D or 2D array to the clipboard, each element separated by a specified delimiter","```\\r#include <Array.au3>\\r_ArrayToClip ( Const ByRef $aArray [, $sDelim_Col = \\"|\\" [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $sDelim_Row = @CRLF [, $iStart_Col = -1 [, $iEnd_Col = -1]]]]]] )\\r```"],"_ArrayToString":["Places the elements of a 1D or 2D array into a single string, separated by the specified delimiters","```\\r#include <Array.au3>\\r_ArrayToString ( Const ByRef $aArray [, $sDelim_Col = \\"|\\" [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $sDelim_Row = @CRLF [, $iStart_Col = -1 [, $iEnd_Col = -1]]]]]] )\\r```"],"_ArrayTranspose":["Transposes a 1D or 2D array (swaps rows and columns)","```\\r#include <Array.au3>\\r_ArrayTranspose ( ByRef $aArray )\\r```"],"_ArrayTrim":["Trims a certain number of characters from all elements in a 1D or 2D array","```\\r#include <Array.au3>\\r_ArrayTrim ( ByRef $aArray, $iTrimNum [, $iDirection = 0 [, $iStart = 0 [, $iEnd = 0 [, $iSubItem = 0]]]] )\\r```"],"_ArrayUnique":["Returns the Elements from a column of a 1D or 2D array, removing all duplicates","```\\r#include <Array.au3>\\r_ArrayUnique ( Const ByRef $aArray [, $iColumn = 0 [, $iBase = 0 [, $iCase = 0 [, $iCount = $ARRAYUNIQUE_COUNT [, $iIntType = $ARRAYUNIQUE_AUTO]]]]] )\\r```"]}'),p=JSON.parse('{"_ClipBoard_ChangeChain":["Removes a specified window from the chain of clipboard viewers","```\\r#include <Clipboard.au3>\\r_ClipBoard_ChangeChain ( $hRemove, $hNewNext )\\r```"],"_ClipBoard_Close":["Closes the clipboard","```\\r#include <Clipboard.au3>\\r_ClipBoard_Close ( )\\r```"],"_ClipBoard_CountFormats":["Retrieves the number of different data formats currently on the clipboard","```\\r#include <Clipboard.au3>\\r_ClipBoard_CountFormats ( )\\r```"],"_ClipBoard_Empty":["Empties the clipboard and frees handles to data in the clipboard","```\\r#include <Clipboard.au3>\\r_ClipBoard_Empty ( )\\r```"],"_ClipBoard_EnumFormats":["Enumerates the data formats currently available on the clipboard","```\\r#include <Clipboard.au3>\\r_ClipBoard_EnumFormats ( $iFormat )\\r```"],"_ClipBoard_FormatStr":["Returns a string representation of a standard clipboard format","```\\r#include <Clipboard.au3>\\r_ClipBoard_FormatStr ( $iFormat )\\r```"],"_ClipBoard_GetData":["Retrieves data from the clipboard in a specified format","```\\r#include <Clipboard.au3>\\r_ClipBoard_GetData ( [$iFormat = 1] )\\r```"],"_ClipBoard_GetDataEx":["Retrieves data from the clipboard in a specified format","```\\r#include <Clipboard.au3>\\r_ClipBoard_GetDataEx ( [$iFormat = 1] )\\r```"],"_ClipBoard_GetFormatName":["Retrieves the name of the specified registered format","```\\r#include <Clipboard.au3>\\r_ClipBoard_GetFormatName ( $iFormat )\\r```"],"_ClipBoard_GetOpenWindow":["Retrieves the handle to the window that currently has the clipboard open","```\\r#include <Clipboard.au3>\\r_ClipBoard_GetOpenWindow ( )\\r```"],"_ClipBoard_GetOwner":["Retrieves the window handle of the current owner of the clipboard","```\\r#include <Clipboard.au3>\\r_ClipBoard_GetOwner ( )\\r```"],"_ClipBoard_GetPriorityFormat":["Retrieves the first available clipboard format in the specified list","```\\r#include <Clipboard.au3>\\r_ClipBoard_GetPriorityFormat ( $aFormats )\\r```"],"_ClipBoard_GetSequenceNumber":["Retrieves the clipboard sequence number for the current window station","```\\r#include <Clipboard.au3>\\r_ClipBoard_GetSequenceNumber ( )\\r```"],"_ClipBoard_GetViewer":["Retrieves the handle to the first window in the clipboard viewer chain","```\\r#include <Clipboard.au3>\\r_ClipBoard_GetViewer ( )\\r```"],"_ClipBoard_IsFormatAvailable":["Determines whether the clipboard contains data in the specified format","```\\r#include <Clipboard.au3>\\r_ClipBoard_IsFormatAvailable ( $iFormat )\\r```"],"_ClipBoard_Open":["Opens the clipboard and prevents other applications from modifying the clipboard","```\\r#include <Clipboard.au3>\\r_ClipBoard_Open ( $hOwner )\\r```"],"_ClipBoard_RegisterFormat":["Registers a new clipboard format","```\\r#include <Clipboard.au3>\\r_ClipBoard_RegisterFormat ( $sFormat )\\r```"],"_ClipBoard_SetData":["Places data on the clipboard in a specified clipboard format","```\\r#include <Clipboard.au3>\\r_ClipBoard_SetData ( $vData [, $iFormat = 1] )\\r```"],"_ClipBoard_SetDataEx":["Places data on the clipboard in a specified clipboard format","```\\r#include <Clipboard.au3>\\r_ClipBoard_SetDataEx ( ByRef $hMemory [, $iFormat = 1] )\\r```"],"_ClipBoard_SetViewer":["Adds the specified window to the chain of clipboard viewers","```\\r#include <Clipboard.au3>\\r_ClipBoard_SetViewer ( $hViewer )\\r```"]}'),b=JSON.parse('{"_ColorConvertHSLtoRGB":["Converts HSL to RGB","```\\r#include <Color.au3>\\r_ColorConvertHSLtoRGB ( $aArray )\\r```"],"_ColorConvertRGBtoHSL":["Converts RGB to HSL","```\\r#include <Color.au3>\\r_ColorConvertRGBtoHSL ( $aArray )\\r```"],"_ColorGetBlue":["Returns the blue component of a given color","```\\r#include <Color.au3>\\r_ColorGetBlue ( $iColor )\\r```"],"_ColorGetCOLORREF":["Returns the COLORREF color","```\\r#include <Color.au3>\\r_ColorGetCOLORREF ( $iColor )\\r```"],"_ColorGetGreen":["Returns the green component of a given color","```\\r#include <Color.au3>\\r_ColorGetGreen ( $iColor )\\r```"],"_ColorGetRed":["Returns the red component of a given color","```\\r#include <Color.au3>\\r_ColorGetRed ( $iColor )\\r```"],"_ColorGetRGB":["Returns an array containing RGB values in their respective positions","```\\r#include <Color.au3>\\r_ColorGetRGB ( $iColor )\\r```"],"_ColorSetCOLORREF":["Returns the COLORREF color","```\\r#include <Color.au3>\\r_ColorSetCOLORREF ( $aColor )\\r```"],"_ColorSetRGB":["Returns the RGB color","```\\r#include <Color.au3>\\r_ColorSetRGB ( $aColor )\\r```"]}'),_=JSON.parse('{"_Crypt_DecryptData":["Decrypts data using the supplied key","```\\r#include <Crypt.au3>\\r_Crypt_DecryptData ( $vData, $vCryptKey, $iAlgID [, $bFinal = True] )\\r```"],"_Crypt_DecryptFile":["Decrypts a file with specified key and algorithm","```\\r#include <Crypt.au3>\\r_Crypt_DecryptFile ( $sSourceFile, $sDestinationFile, $vCryptKey, $iAlgID )\\r```"],"_Crypt_DeriveKey":["Creates a key from algorithm and password","```\\r#include <Crypt.au3>\\r_Crypt_DeriveKey ( $vPassword, $iAlgID [, $iHashAlgID = $CALG_MD5] )\\r```"],"_Crypt_DestroyKey":["Frees the resources used by a key","```\\r#include <Crypt.au3>\\r_Crypt_DestroyKey ( $hCryptKey )\\r```"],"_Crypt_EncryptData":["Encrypts data using the supplied key","```\\r#include <Crypt.au3>\\r_Crypt_EncryptData ( $vData, $vCryptKey, $iAlgID [, $bFinal = True] )\\r```"],"_Crypt_EncryptFile":["Encrypts a file with specified key and algorithm","```\\r#include <Crypt.au3>\\r_Crypt_EncryptFile ( $sSourceFile, $sDestinationFile, $vCryptKey, $iAlgID )\\r```"],"_Crypt_GenRandom":["Fill a buffer with cryptographically random data","```\\r#include <Crypt.au3>\\r_Crypt_GenRandom ( $pBuffer, $iSize )\\r```"],"_Crypt_HashData":["Hash data with specified algorithm","```\\r#include <Crypt.au3>\\r_Crypt_HashData ( $vData, $iAlgID [, $bFinal = True [, $hCryptHash = 0]] )\\r```"],"_Crypt_HashFile":["Hash a string with specified algorithm","```\\r#include <Crypt.au3>\\r_Crypt_HashFile ( $sFilePath, $iAlgID )\\r```"],"_Crypt_Shutdown":["Uninitialize the Crypt library","```\\r#include <Crypt.au3>\\r_Crypt_Shutdown ( )\\r```"],"_Crypt_Startup":["Initialize the Crypt library","```\\r#include <Crypt.au3>\\r_Crypt_Startup ( )\\r```"]}'),f=JSON.parse('{"_Date_Time_CompareFileTime":["Compares two file times","```\\r#include <Date.au3>\\r_Date_Time_CompareFileTime ( $tFileTime1, $tFileTime2 )\\r```"],"_Date_Time_DOSDateTimeToArray":["Decode a DOS date/time to an array","```\\r#include <Date.au3>\\r_Date_Time_DOSDateTimeToArray ( $iDosDate, $iDosTime )\\r```"],"_Date_Time_DOSDateTimeToFileTime":["Converts MS-DOS date and time values to a file time","```\\r#include <Date.au3>\\r_Date_Time_DOSDateTimeToFileTime ( $iFatDate, $iFatTime )\\r```"],"_Date_Time_DOSDateTimeToStr":["Decode a DOS date to a string","```\\r#include <Date.au3>\\r_Date_Time_DOSDateTimeToStr ( $iDosDate, $iDosTime )\\r```"],"_Date_Time_DOSDateToArray":["Decode a DOS date to an array","```\\r#include <Date.au3>\\r_Date_Time_DOSDateToArray ( $iDosDate )\\r```"],"_Date_Time_DOSDateToStr":["Decode a DOS date to a string","```\\r#include <Date.au3>\\r_Date_Time_DOSDateToStr ( $iDosDate )\\r```"],"_Date_Time_DOSTimeToArray":["Decode a DOS time to an array","```\\r#include <Date.au3>\\r_Date_Time_DOSTimeToArray ( $iDosTime )\\r```"],"_Date_Time_DOSTimeToStr":["Decode a DOS time to a string","```\\r#include <Date.au3>\\r_Date_Time_DOSTimeToStr ( $iDosTime )\\r```"],"_Date_Time_EncodeFileTime":["Encodes and returns a $tagFILETIME structure","```\\r#include <Date.au3>\\r_Date_Time_EncodeFileTime ( $iMonth, $iDay, $iYear [, $iHour = 0 [, $iMinute = 0 [, $iSecond = 0 [, $iMSeconds = 0]]]] )\\r```"],"_Date_Time_EncodeSystemTime":["Encodes and returns a $tagSYSTEMTIME structure","```\\r#include <Date.au3>\\r_Date_Time_EncodeSystemTime ( $iMonth, $iDay, $iYear [, $iHour = 0 [, $iMinute = 0 [, $iSecond = 0 [, $iMSeconds = 0]]]] )\\r```"],"_Date_Time_FileTimeToArray":["Decode a file time to an array","```\\r#include <Date.au3>\\r_Date_Time_FileTimeToArray ( ByRef $tFileTime )\\r```"],"_Date_Time_FileTimeToDOSDateTime":["Converts MS-DOS date and time values to a file time","```\\r#include <Date.au3>\\r_Date_Time_FileTimeToDOSDateTime ( $tFileTime )\\r```"],"_Date_Time_FileTimeToLocalFileTime":["Converts a file time based on the Coordinated Universal Time to a local file time","```\\r#include <Date.au3>\\r_Date_Time_FileTimeToLocalFileTime ( $tFileTime )\\r```"],"_Date_Time_FileTimeToStr":["Decode a file time to a date/time string","```\\r#include <Date.au3>\\r_Date_Time_FileTimeToStr ( ByRef $tFileTime [, $iFmt = 0] )\\r```"],"_Date_Time_FileTimeToSystemTime":["Converts a file time to system time format","```\\r#include <Date.au3>\\r_Date_Time_FileTimeToSystemTime ( $tFileTime )\\r```"],"_Date_Time_GetFileTime":["Retrieves the date and time that a file was created, accessed and modified","```\\r#include <Date.au3>\\r_Date_Time_GetFileTime ( $hFile )\\r```"],"_Date_Time_GetLocalTime":["Retrieves the current local date and time","```\\r#include <Date.au3>\\r_Date_Time_GetLocalTime ( )\\r```"],"_Date_Time_GetSystemTime":["Retrieves the current system date and time expressed in UTC","```\\r#include <Date.au3>\\r_Date_Time_GetSystemTime ( )\\r```"],"_Date_Time_GetSystemTimeAdjustment":["Determines whether the system is applying periodic time adjustments","```\\r#include <Date.au3>\\r_Date_Time_GetSystemTimeAdjustment ( )\\r```"],"_Date_Time_GetSystemTimeAsFileTime":["Retrieves the current system date and time expressed in UTC","```\\r#include <Date.au3>\\r_Date_Time_GetSystemTimeAsFileTime ( )\\r```"],"_Date_Time_GetSystemTimes":["Retrieves system timing information","```\\r#include <Date.au3>\\r_Date_Time_GetSystemTimes ( )\\r```"],"_Date_Time_GetTickCount":["Retrieves the number of milliseconds that have elapsed since Windows was started","```\\r#include <Date.au3>\\r_Date_Time_GetTickCount ( )\\r```"],"_Date_Time_GetTimeZoneInformation":["Retrieves the current time zone settings","```\\r#include <Date.au3>\\r_Date_Time_GetTimeZoneInformation ( )\\r```"],"_Date_Time_LocalFileTimeToFileTime":["Converts a local file time to a file time based on UTC","```\\r#include <Date.au3>\\r_Date_Time_LocalFileTimeToFileTime ( $tLocalTime )\\r```"],"_Date_Time_SetFileTime":["Sets the date and time that a file was created, accessed and modified","```\\r#include <Date.au3>\\r_Date_Time_SetFileTime ( $hFile, $tCreateTime, $tLastAccess, $tLastWrite )\\r```"],"_Date_Time_SetLocalTime":["Sets the current local date and time","```\\r#include <Date.au3>\\r_Date_Time_SetLocalTime ( $tSYSTEMTIME )\\r```"],"_Date_Time_SetSystemTime":["Sets the current system time and date, expressed in UTC","```\\r#include <Date.au3>\\r_Date_Time_SetSystemTime ( $tSYSTEMTIME )\\r```"],"_Date_Time_SetSystemTimeAdjustment":["Enables or disables periodic time adjustments to the system\'s time of day clock","```\\r#include <Date.au3>\\r_Date_Time_SetSystemTimeAdjustment ( $iAdjustment, $bDisabled )\\r```"],"_Date_Time_SetTimeZoneInformation":["Sets the current time zone settings","```\\r#include <Date.au3>\\r_Date_Time_SetTimeZoneInformation ( $iBias, $sStdName, $tStdDate, $iStdBias, $sDayName, $tDayDate, $iDayBias )\\r```"],"_Date_Time_SystemTimeToArray":["Decode a system time to an array","```\\r#include <Date.au3>\\r_Date_Time_SystemTimeToArray ( ByRef $tSYSTEMTIME )\\r```"],"_Date_Time_SystemTimeToDateStr":["Decode a system time to a date string","```\\r#include <Date.au3>\\r_Date_Time_SystemTimeToDateStr ( ByRef $tSYSTEMTIME [, $iFmt = 0] )\\r```"],"_Date_Time_SystemTimeToDateTimeStr":["Decode a system time to a date/time string","```\\r#include <Date.au3>\\r_Date_Time_SystemTimeToDateTimeStr ( ByRef $tSYSTEMTIME [, $iFmt = 0] )\\r```"],"_Date_Time_SystemTimeToFileTime":["Converts a system time to file time format","```\\r#include <Date.au3>\\r_Date_Time_SystemTimeToFileTime ( $tSYSTEMTIME )\\r```"],"_Date_Time_SystemTimeToTimeStr":["Decode a system time to a time string","```\\r#include <Date.au3>\\r_Date_Time_SystemTimeToTimeStr ( ByRef $tSYSTEMTIME )\\r```"],"_Date_Time_SystemTimeToTzSpecificLocalTime":["Converts a UTC time to a specified time zone\'s corresponding local time","```\\r#include <Date.au3>\\r_Date_Time_SystemTimeToTzSpecificLocalTime ( $tUTC [, $tTimeZone = 0] )\\r```"],"_Date_Time_TzSpecificLocalTimeToSystemTime":["Converts a local time to a time in UTC","```\\r#include <Date.au3>\\r_Date_Time_TzSpecificLocalTimeToSystemTime ( $tLocalTime [, $tTimeZone = 0] )\\r```"],"_DateAdd":["Calculates a new date/time by adding/subtracting a specified number of time intervals from an initial date/time","```\\r#include <Date.au3>\\r_DateAdd ( $sType, $iNumber, $sDate )\\r```"],"_DateDayOfWeek":["Returns the name of the weekday, based on the specified day","```\\r#include <Date.au3>\\r_DateDayOfWeek ( $iDayNum [, $iFormat = 0] )\\r```"],"_DateDaysInMonth":["Returns the number of days in a month, based on the specified month and year","```\\r#include <Date.au3>\\r_DateDaysInMonth ( $iYear, $iMonthNum )\\r```"],"_DateDiff":["Returns the difference between 2 dates, expressed in the type requested","```\\r#include <Date.au3>\\r_DateDiff ( $sType, $sStartDate, $sEndDate )\\r```"],"_DateIsLeapYear":["Checks a given year to see if it is a leap year","```\\r#include <Date.au3>\\r_DateIsLeapYear ( $iYear )\\r```"],"_DateIsValid":["Checks the given date to determine if it is a valid date","```\\r#include <Date.au3>\\r_DateIsValid ( $sDate )\\r```"],"_DateTimeFormat":["Returns the date in the PC\'s regional settings format","```\\r#include <Date.au3>\\r_DateTimeFormat ( $sDate, $sType )\\r```"],"_DateTimeSplit":["Split a string containing Date and Time into two separate Arrays","```\\r#include <Date.au3>\\r_DateTimeSplit ( $sDate, ByRef $aDatePart, ByRef $iTimePart )\\r```"],"_DateToDayOfWeek":["Returns the weekday number for a given date","```\\r#include <Date.au3>\\r_DateToDayOfWeek ( $iYear, $iMonth, $iDay )\\r```"],"_DateToDayOfWeekISO":["Returns the ISO weekday number for a given date","```\\r#include <Date.au3>\\r_DateToDayOfWeekISO ( $iYear, $iMonth, $iDay )\\r```"],"_DateToDayValue":["Returns the day number since noon 4713 BC January 1 for a given Gregorian date","```\\r#include <Date.au3>\\r_DateToDayValue ( $iYear, $iMonth, $iDay )\\r```"],"_DateToMonth":["Returns the name of the month, based on the specified month","```\\r#include <Date.au3>\\r_DateToMonth ( $iMonNum [, $iFormat = 0] )\\r```"],"_DayValueToDate":["Add the given days since noon 4713 BC January 1 and returns the Gregorian date","```\\r#include <Date.au3>\\r_DayValueToDate ( $iJulianDate, ByRef $iYear, ByRef $iMonth, ByRef $iDay )\\r```"],"_Now":["Returns the current Date and Time in PC\'s format","```\\r#include <Date.au3>\\r_Now ( )\\r```"],"_NowCalc":["Returns the current Date and Time in format YYYY/MM/DD HH:MM:SS for use in date calculations","```\\r#include <Date.au3>\\r_NowCalc ( )\\r```"],"_NowCalcDate":["Returns the current Date in format YYYY/MM/DD","```\\r#include <Date.au3>\\r_NowCalcDate ( )\\r```"],"_NowDate":["Returns the current Date in the Pc\'s format","```\\r#include <Date.au3>\\r_NowDate ( )\\r```"],"_NowTime":["Returns the current Time in the requested format","```\\r#include <Date.au3>\\r_NowTime ( [$sType = 3] )\\r```"],"_SetDate":["Sets the current date of the system","```\\r#include <Date.au3>\\r_SetDate ( $iDay [, $iMonth = 0 [, $iYear = 0]] )\\r```"],"_SetTime":["Sets the current time of the system","```\\r#include <Date.au3>\\r_SetTime ( $iHour, $iMinute [, $iSecond = 0 [, $iMSeconds = 0]] )\\r```"],"_TicksToTime":["Converts the specified tick amount to hours, minutes and seconds","```\\r#include <Date.au3>\\r_TicksToTime ( $iTicks, ByRef $iHours, ByRef $iMins, ByRef $iSecs )\\r```"],"_TimeToTicks":["Converts the specified hours, minutes, and seconds to ticks","```\\r#include <Date.au3>\\r_TimeToTicks ( [$iHours = @HOUR [, $iMins = @MIN [, $iSecs = @SEC]]] )\\r```"],"_WeekNumberISO":["Calculate the weeknumber of a given date","```\\r#include <Date.au3>\\r_WeekNumberISO ( [$iYear = @YEAR [, $iMonth = @MON [, $iDay = @MDAY]]] )\\r```"]}'),I=JSON.parse('{"_EventLog__Backup":["Saves the event log to a backup file","```\\r#include <EventLog.au3>\\r_EventLog__Backup ( $hEventLog, $sFileName )\\r```"],"_EventLog__Clear":["Clears the event log","```\\r#include <EventLog.au3>\\r_EventLog__Clear ( $hEventLog, $sFileName )\\r```"],"_EventLog__Close":["Closes a read handle to the event log","```\\r#include <EventLog.au3>\\r_EventLog__Close ( $hEventLog )\\r```"],"_EventLog__Count":["Retrieves the number of records in the event log","```\\r#include <EventLog.au3>\\r_EventLog__Count ( $hEventLog )\\r```"],"_EventLog__DeregisterSource":["Closes a write handle to the event log","```\\r#include <EventLog.au3>\\r_EventLog__DeregisterSource ( $hEventLog )\\r```"],"_EventLog__Full":["Retrieves whether the event log is full","```\\r#include <EventLog.au3>\\r_EventLog__Full ( $hEventLog )\\r```"],"_EventLog__Notify":["Enables an application to receive event notifications","```\\r#include <EventLog.au3>\\r_EventLog__Notify ( $hEventLog, $hEvent )\\r```"],"_EventLog__Oldest":["Retrieves the absolute record number of the oldest record in the event log","```\\r#include <EventLog.au3>\\r_EventLog__Oldest ( $hEventLog )\\r```"],"_EventLog__Open":["Opens a handle to the event log","```\\r#include <EventLog.au3>\\r_EventLog__Open ( $sServerName, $sSourceName )\\r```"],"_EventLog__OpenBackup":["Opens a handle to a backup event log","```\\r#include <EventLog.au3>\\r_EventLog__OpenBackup ( $sServerName, $sFileName )\\r```"],"_EventLog__Read":["Reads an entry from the event log","```\\r#include <EventLog.au3>\\r_EventLog__Read ( $hEventLog [, $bRead = True [, $bForward = True [, $iOffset = 0]]] )\\r```"],"_EventLog__RegisterSource":["Retrieves a registered handle to the specified event log","```\\r#include <EventLog.au3>\\r_EventLog__RegisterSource ( $sServerName, $sSourceName )\\r```"],"_EventLog__Report":["Writes an entry at the end of the specified event log","```\\r#include <EventLog.au3>\\r_EventLog__Report ( $hEventLog, $iType, $iCategory, $iEventID, $sUserName, $sDesc, $aData )\\r```"]}'),$=JSON.parse('{"_Excel_BookAttach":["Attaches to the first instance of a workbook where the search string matches based on the selected mode","```\\r#include <Excel.au3>\\r_Excel_BookAttach ( $sString [, $sMode = \\"FilePath\\" [, $oInstance = Default]] )\\r```"],"_Excel_BookClose":["Closes the specified workbook","```\\r#include <Excel.au3>\\r_Excel_BookClose ( $oWorkbook [, $bSave = True] )\\r```"],"_Excel_BookList":["Returns a list of workbooks of a specified or all Excel instances","```\\r#include <Excel.au3>\\r_Excel_BookList ( [$oExcel = Default] )\\r```"],"_Excel_BookNew":["Creates a new workbook","```\\r#include <Excel.au3>\\r_Excel_BookNew ( $oExcel [, $iSheets = Default] )\\r```"],"_Excel_BookOpen":["Opens an existing workbook","```\\r#include <Excel.au3>\\r_Excel_BookOpen ( $oExcel, $sFilePath [, $bReadOnly = False [, $bVisible = True [, $sPassword = Default [, $sWritePassword = Default [, $bUpdateLinks = Default]]]]] )\\r```"],"_Excel_BookOpenText":["Opens a text file and parses the content to a new workbook with a single sheet","```\\r#include <Excel.au3>\\r_Excel_BookOpenText ( $oExcel, $sFilePath [, $iStartRow = 1 [, $iDataType = Default [, $sTextQualifier = $xlTextQualifierDoubleQuote [, $bConsecutiveDelimiter = False [, $sDelimiter = \\",\\" [, $aFieldInfo = \\"\\" [, $sDecimalSeparator = Default [, $sThousandsSeparator = Default [, $bTrailingMinusNumbers = True [, $iOrigin = Default]]]]]]]]]] )\\r```"],"_Excel_BookSave":["Saves the specified workbook","```\\r#include <Excel.au3>\\r_Excel_BookSave ( $oWorkbook )\\r```"],"_Excel_BookSaveAs":["Saves the specified workbook with a new filename and/or type","```\\r#include <Excel.au3>\\r_Excel_BookSaveAs ( $oWorkbook, $sFilePath [, $iFormat = $xlWorkbookDefault [, $bOverWrite = False [, $sPassword = Default [, $sWritePassword = Default [, $bReadOnlyRecommended = False]]]]] )\\r```"],"_Excel_Close":["Closes all worksheets and the instance of the Excel application","```\\r#include <Excel.au3>\\r_Excel_Close ( $oExcel [, $bSaveChanges = True [, $bForceClose = False]] )\\r```"],"_Excel_ColumnToLetter":["Converts the column number to letter(s)","```\\r#include <Excel.au3>\\r_Excel_ColumnToLetter ( $iColumn )\\r```"],"_Excel_ColumnToNumber":["Converts the column letter(s) to a number","```\\r#include <Excel.au3>\\r_Excel_ColumnToNumber ( $sColumn )\\r```"],"_Excel_ConvertFormula":["Converts cell references in a formula between A1 and R1C1 reference styles, relative and absolute reference type, or both","```\\r#include <Excel.au3>\\r_Excel_ConvertFormula ( $oExcel, $sFormula, $iFromStyle [, $iToStyle = Default [, $iToAbsolute = Default [, $vRelativeTo = Default]]] )\\r```"],"_Excel_Export":["Exports a workbook, worksheet, chart or range as PDF or XPS","```\\r#include <Excel.au3>\\r_Excel_Export ( $oExcel, $vObject, $sFileName [, $iType = $xlTypePDF [, $iQuality = $xlQualityStandard [, $bIncludeProperties = True [, $iFrom = Default [, $iTo = Default [, $bOpenAfterPublish = Default]]]]]] )\\r```"],"_Excel_FilterGet":["Returns a list of set filters","```\\r#include <Excel.au3>\\r_Excel_FilterGet ( $oWorkbook [, $vWorksheet = Default] )\\r```"],"_Excel_FilterSet":["Sets/unsets filter definitions and filters the range","```\\r#include <Excel.au3>\\r_Excel_FilterSet ( $oWorkbook, $vWorksheet, $vRange, $iField [, $sCriteria1 = Default [, $iOperator = Default [, $sCriteria2 = Default]]] )\\r```"],"_Excel_Open":["Connects to an existing Excel instance or creates a new one","```\\r#include <Excel.au3>\\r_Excel_Open ( [$bVisible = True [, $bDisplayAlerts = False [, $bScreenUpdating = True [, $bInteractive = True [, $bForceNew = False]]]]] )\\r```"],"_Excel_PictureAdd":["Adds a picture on the specified workbook and worksheet","```\\r#include <Excel.au3>\\r_Excel_PictureAdd ( $oWorkbook, $vWorksheet, $sFile, $vRangeOrLeft [, $iTop = Default [, $iWidth = Default [, $iHeight = Default [, $bKeepRatio = True]]]] )\\r```"],"_Excel_Print":["Prints a workbook, worksheet, chart or range","```\\r#include <Excel.au3>\\r_Excel_Print ( $oExcel, $vObject [, $iCopies = Default [, $sPrinter = Default [, $bPreview = Default [, $iFrom = Default [, $iTo = Default [, $bPrintToFile = Default [, $bCollate = Default [, $sPrToFileName = \\"\\"]]]]]]]] )\\r```"],"_Excel_RangeCopyPaste":["Cuts or copies one or multiple cells, rows or columns to a range or from/to the clipboard","```\\r#include <Excel.au3>\\r_Excel_RangeCopyPaste ( $oWorksheet, $vSourceRange [, $vTargetRange = Default [, $bCut = False [, $iPaste = Default [, $iOperation = Default [, $bSkipBlanks = False [, $bTranspose = False]]]]]] )\\r```"],"_Excel_RangeDelete":["Deletes one or multiple cells, rows or columns from the specified worksheet","```\\r#include <Excel.au3>\\r_Excel_RangeDelete ( $oWorksheet, $vRange [, $iShift = Default [, $iEntireRowCol = Default]] )\\r```"],"_Excel_RangeFind":["Finds matching cells in a range or workbook and returns an array with information about the found cells","```\\r#include <Excel.au3>\\r_Excel_RangeFind ( $oWorkbook, $sSearch [, $vRange = Default [, $iLookIn = $xlValues [, $iLookAt = $xlPart [, $bMatchcase = False]]]] )\\r```"],"_Excel_RangeInsert":["Inserts one or multiple empty cells, rows or columns into the specified worksheet","```\\r#include <Excel.au3>\\r_Excel_RangeInsert ( $oWorksheet, $vRange [, $iShift = Default [, $iCopyOrigin = Default]] )\\r```"],"_Excel_RangeLinkAddRemove":["Adds or removes a hyperlink to/from a specified range","```\\r#include <Excel.au3>\\r_Excel_RangeLinkAddRemove ( $oWorkbook, $vWorksheet, $vRange, $sAddress [, $sSubAddress = Default [, $sScreenTip = Default [, $sTextToDisplay = Default]]] )\\r```"],"_Excel_RangeRead":["Reads the value, formula or displayed text from a cell or range of cells of the specified workbook and worksheet","```\\r#include <Excel.au3>\\r_Excel_RangeRead ( $oWorkbook [, $vWorksheet = Default [, $vRange = Default [, $iReturn = 1 [, $bForceFunc = False]]]] )\\r```"],"_Excel_RangeReplace":["Finds and replaces matching strings in a range or worksheet","```\\r#include <Excel.au3>\\r_Excel_RangeReplace ( $oWorkbook, $vWorksheet, $vRange, $sSearch, $sReplace [, $iLookAt = $xlPart [, $bMatchcase = False]] )\\r```"],"_Excel_RangeSort":["Sorts a cell range","```\\r#include <Excel.au3>\\r_Excel_RangeSort ( $oWorkbook, $vWorksheet, $vRange, $vKey1 [, $iOrder1 = $xlAscending [, $iSortText = $xlSortNormal [, $iHeader = $xlNo [, $bMatchcase = False [, $iOrientation = $xlSortRows [, $vKey2 = Default [, $iOrder2 = Default [, $vKey3 = Default [, $iOrder3 = Default]]]]]]]]] )\\r```"],"_Excel_RangeValidate":["Adds data validation to the specified range","```\\r#include <Excel.au3>\\r_Excel_RangeValidate ( $oWorkbook, $vWorksheet, $vRange, $iType, $sFormula1 [, $iOperator = Default [, $sFormula2 = Default [, $bIgnoreBlank = True [, $iAlertStyle = $xlValidAlertStop [, $sErrorMessage = Default [, $sInputMessage = Default]]]]]] )\\r```"],"_Excel_RangeWrite":["Writes value(s) or formula(s) to a cell or a cell range on the specified workbook and worksheet","```\\r#include <Excel.au3>\\r_Excel_RangeWrite ( $oWorkbook, $vWorksheet, $vValue [, $vRange = \\"A1\\" [, $bValue = True [, $bForceFunc = False]]] )\\r```"],"_Excel_SheetAdd":["Adds new sheet(s) to a workbook and sets their names","```\\r#include <Excel.au3>\\r_Excel_SheetAdd ( $oWorkbook [, $vSheet = Default [, $bBefore = True [, $iCount = 1 [, $sName = \\"\\"]]]] )\\r```"],"_Excel_SheetCopyMove":["Copies or moves the specified sheet before or after a specified sheet in the same or a different workbook","```\\r#include <Excel.au3>\\r_Excel_SheetCopyMove ( $oSourceBook [, $vSourceSheet = Default [, $oTargetBook = $oSourceBook [, $vTargetSheet = 1 [, $bBefore = True [, $bCopy = True]]]]] )\\r```"],"_Excel_SheetDelete":["Deletes the specified sheet by object, string name or by number","```\\r#include <Excel.au3>\\r_Excel_SheetDelete ( $oWorkbook [, $vSheet = Default] )\\r```"],"_Excel_SheetList":["Returns a list of all sheets in the specified workbook","```\\r#include <Excel.au3>\\r_Excel_SheetList ( $oWorkbook )\\r```"]}'),g=JSON.parse('{"_FileCountLines":["Returns the number of lines in the specified file","```\\r#include <File.au3>\\r_FileCountLines ( $sFilePath )\\r```"],"_FileCreate":["Creates or zero\'s out the length of the file specified","```\\r#include <File.au3>\\r_FileCreate ( $sFilePath )\\r```"],"_FileListToArray":["Lists files and\\\\or folders in a specified folder (Similar to using Dir with the /B Switch)","```\\r#include <File.au3>\\r_FileListToArray ( $sFilePath [, $sFilter = \\"*\\" [, $iFlag = $FLTA_FILESFOLDERS [, $bReturnPath = False]]] )\\r```"],"_FileListToArrayRec":["Lists files and\\\\or folders in specified path with optional recursion to defined level and result sorting","```\\r#include <File.au3>\\r_FileListToArrayRec ( $sFilePath [, $sMask = \\"*\\" [, $iReturn = $FLTAR_FILESFOLDERS [, $iRecur = $FLTAR_NORECUR [, $iSort = $FLTAR_NOSORT [, $iReturnPath = $FLTAR_RELPATH]]]]] )\\r```"],"_FilePrint":["Prints a plain text file","```\\r#include <File.au3>\\r_FilePrint ( $sFilePath [, $iShow = @SW_HIDE] )\\r```"],"_FileReadToArray":["Reads the specified file into a 1D or 2D array","```\\r#include <File.au3>\\r_FileReadToArray ( $sFilePath, ByRef $vReturn [, $iFlags = $FRTA_COUNT [, $sDelimiter = \\"\\"]] )\\r```"],"_FileWriteFromArray":["Writes an array to a specified file","```\\r#include <File.au3>\\r_FileWriteFromArray ( $sFilePath, Const ByRef $aArray [, $iBase = Default [, $iUBound = Default [, $sDelimiter = \\"|\\"]]] )\\r```"],"_FileWriteLog":["Writes current date, time and the specified text to a log file","```\\r#include <File.au3>\\r_FileWriteLog ( $sLogPath, $sLogMsg [, $iFlag = -1] )\\r```"],"_FileWriteToLine":["Writes text to a specific line in a file","```\\r#include <File.au3>\\r_FileWriteToLine ( $sFilePath, $iLine, $sText [, $bOverWrite = False] )\\r```"],"_PathFull":["Creates a path based on the relative path you provide. The newly created absolute path is returned","```\\r#include <File.au3>\\r_PathFull ( $sRelativePath [, $sBasePath = @WorkingDir] )\\r```"],"_PathGetRelative":["Returns the relative path to a directory","```\\r#include <File.au3>\\r_PathGetRelative ( $sFrom, $sTo )\\r```"],"_PathMake":["Creates a path from drive, directory, file name and file extension parts","```\\r#include <File.au3>\\r_PathMake ( $sDrive, $sDir, $sFileName, $sExtension )\\r```"],"_PathSplit":["Splits a path into the drive, directory, file name and file extension parts. An empty string is set if a part is missing","```\\r#include <File.au3>\\r_PathSplit ( $sFilePath, ByRef $sDrive, ByRef $sDir, ByRef $sFileName, ByRef $sExtension )\\r```"],"_ReplaceStringInFile":["Replaces substrings in a file","```\\r#include <File.au3>\\r_ReplaceStringInFile ( $sFilePath, $sSearchString, $sReplaceString [, $iCaseSensitive = 0 [, $iOccurance = 1]] )\\r```"],"_TempFile":["Generate a name for a temporary file. The file is guaranteed not to exist yet","```\\r#include <File.au3>\\r_TempFile ( [$sDirectoryName = @TempDir [, $sFilePrefix = \\"~\\" [, $sFileExtension = \\".tmp\\" [, $iRandomLength = 7]]]] )\\r```"]}'),C=JSON.parse('{"_FTP_Close":["Closes the _FTP_Open or _FTP_Connect session","```\\r#include <FTPEx.au3>\\r_FTP_Close ( $hSession )\\r```"],"_FTP_Command":["Sends a command to an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_Command ( $hFTPSession, $sFTPCommand [, $iFlags = $FTP_TRANSFER_TYPE_ASCII [, $iExpectResponse = 0 [, $iContext = 0]]] )\\r```"],"_FTP_Connect":["Connects to an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_Connect ( $hInternetSession, $sServerName, $sUsername, $sPassword [, $iPassive = 0 [, $iServerPort = 0 [, $iService = $INTERNET_SERVICE_FTP [, $iFlags = 0 [, $fuContext = 0]]]]] )\\r```"],"_FTP_DecodeInternetStatus":["Decode a received Internet Status","```\\r#include <FTPEx.au3>\\r_FTP_DecodeInternetStatus ( $iInternetStatus )\\r```"],"_FTP_DirCreate":["Makes an Directory on an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_DirCreate ( $hFTPSession, $sRemote )\\r```"],"_FTP_DirDelete":["Delete\'s an Directory on an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_DirDelete ( $hFTPSession, $sRemote )\\r```"],"_FTP_DirGetCurrent":["Get Current Directory on an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_DirGetCurrent ( $hFTPSession )\\r```"],"_FTP_DirPutContents":["Puts an folder on an FTP server. Recursivley if selected","```\\r#include <FTPEx.au3>\\r_FTP_DirPutContents ( $hFTPSession, $sLocalFolder, $sRemoteFolder, $bRecursivePut [, $iContext = 0] )\\r```"],"_FTP_DirSetCurrent":["Set Current Directory on an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_DirSetCurrent ( $hFTPSession, $sRemote )\\r```"],"_FTP_FileClose":["Closes the Handle returned by _FTP_FileOpen","```\\r#include <FTPEx.au3>\\r_FTP_FileClose ( $hFTPFile )\\r```"],"_FTP_FileDelete":["Delete an file from an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_FileDelete ( $hFTPSession, $sRemoteFile )\\r```"],"_FTP_FileGet":["Get file from a FTP server","```\\r#include <FTPEx.au3>\\r_FTP_FileGet ( $hFTPSession, $sRemoteFile, $sLocalFile [, $bFailIfExists = False [, $iFlagsAndAttributes = 0 [, $iFlags = $FTP_TRANSFER_TYPE_UNKNOWN [, $iContext = 0]]]] )\\r```"],"_FTP_FileGetSize":["Gets filesize of a file on the FTP server","```\\r#include <FTPEx.au3>\\r_FTP_FileGetSize ( $hFTPSession, $sFileName )\\r```"],"_FTP_FileOpen":["Initiates access to a remote file on an FTP server for reading or writing","```\\r#include <FTPEx.au3>\\r_FTP_FileOpen ( $hConnect, $sFileName [, $iAccess = $GENERIC_READ [, $iFlags = $INTERNET_FLAG_TRANSFER_BINARY [, $iContext = 0]]] )\\r```"],"_FTP_FilePut":["Puts an file on an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_FilePut ( $hFTPSession, $sLocalFile, $sRemoteFile [, $iFlags = 0 [, $iContext = 0]] )\\r```"],"_FTP_FileRead":["Reads data from a handle opened by _FTP_FileOpen()","```\\r#include <FTPEx.au3>\\r_FTP_FileRead ( $hFTPFile, $iNumberOfBytesToRead )\\r```"],"_FTP_FileRename":["Renames an file on an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_FileRename ( $hFTPSession, $sExisting, $sNew )\\r```"],"_FTP_FileTimeLoHiToStr":["Converts filetime Loword and Hiword to a string","```\\r#include <FTPEx.au3>\\r_FTP_FileTimeLoHiToStr ( $iLoDWORD, $iHiDWORD [, $bFmt = 0] )\\r```"],"_FTP_FindFileClose":["Delete FindFile Handle","```\\r#include <FTPEx.au3>\\r_FTP_FindFileClose ( $hFTPFind )\\r```"],"_FTP_FindFileFirst":["Find First File on an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_FindFileFirst ( $hFTPSession, $sRemotePath, ByRef $hFTPFind [, $iFlags = 0 [, $iContext = 0]] )\\r```"],"_FTP_FindFileNext":["Find Next File on an FTP server","```\\r#include <FTPEx.au3>\\r_FTP_FindFileNext ( $hFTPFind )\\r```"],"_FTP_GetLastResponseInfo":["Retrieves the last error description or server response on the thread calling this function","```\\r#include <FTPEx.au3>\\r_FTP_GetLastResponseInfo ( ByRef $iError, ByRef $sMessage )\\r```"],"_FTP_ListToArray":["Get Filenames, Directories or Both of current remote directory","```\\r#include <FTPEx.au3>\\r_FTP_ListToArray ( $hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iContext = 0]]] )\\r```"],"_FTP_ListToArray2D":["Get Filenames and filesizes of current remote directory","```\\r#include <FTPEx.au3>\\r_FTP_ListToArray2D ( $hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iContext = 0]]] )\\r```"],"_FTP_ListToArrayEx":["Get names, sizes, attributes and times of files/dir of current remote directory","```\\r#include <FTPEx.au3>\\r_FTP_ListToArrayEx ( $hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iFmt = 1 [, $iContext = 0]]]] )\\r```"],"_FTP_Open":["Opens an FTP session","```\\r#include <FTPEx.au3>\\r_FTP_Open ( $sAgent [, $iAccessType = $INTERNET_OPEN_TYPE_DIRECT [, $sProxyName = \'\' [, $sProxyBypass = \'\' [, $iFlags = 0]]]] )\\r```"],"_FTP_ProgressDownload":["Downloads a file in Binary Mode and shows a Progress window or by Calling a User defined Function","```\\r#include <FTPEx.au3>\\r_FTP_ProgressDownload ( $hFTPSession, $sLocalFile, $sRemoteFile [, $hFunctionToCall = 0] )\\r```"],"_FTP_ProgressUpload":["Uploads a file in Binary Mode and shows a Progress window or by Calling a User defined Function","```\\r#include <FTPEx.au3>\\r_FTP_ProgressUpload ( $hFTPSession, $sLocalFile, $sRemoteFile [, $hFunctionToCall = 0] )\\r```"],"_FTP_SetStatusCallback":["Registers callback function that WinINet functions can call as progress is made during an operation","```\\r#include <FTPEx.au3>\\r_FTP_SetStatusCallback ( $hInternetSession, $sFunctionName )\\r```"]}'),S=JSON.parse('{"_GDIPlus_RectFCreate":["Create a $tagGDIPRECTF structure","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RectFCreate ( [$nX = 0 [, $nY = 0 [, $nWidth = 0 [, $nHeight = 0]]]] )\\r```"],"_GDIPlus_Shutdown":["Clean up resources used by Microsoft Windows GDI+","```\\r#include <GDIPlus.au3>\\r_GDIPlus_Shutdown ( )\\r```"],"_GDIPlus_Startup":["Initialize Microsoft Windows GDI+","```\\r#include <GDIPlus.au3>\\r_GDIPlus_Startup ( [$sGDIPDLL = Default [, $bRetDllHandle = False]] )\\r```"],"_GDIPlus_ArrowCapCreate":["Creates an adjustable arrow line cap with the specified height and width","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapCreate ( $fHeight, $fWidth [, $bFilled = True] )\\r```"],"_GDIPlus_ArrowCapDispose":["Release an adjustable arrow line cap object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapDispose ( $hCap )\\r```"],"_GDIPlus_ArrowCapGetFillState":["Determines whether the arrow cap is filled","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapGetFillState ( $hArrowCap )\\r```"],"_GDIPlus_ArrowCapGetHeight":["Gets the height of the arrow cap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapGetHeight ( $hArrowCap )\\r```"],"_GDIPlus_ArrowCapGetMiddleInset":["Gets the value of the inset","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapGetMiddleInset ( $hArrowCap )\\r```"],"_GDIPlus_ArrowCapGetWidth":["Gets the width of the arrow cap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapGetWidth ( $hArrowCap )\\r```"],"_GDIPlus_ArrowCapSetFillState":["Sets whether the arrow cap is filled","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapSetFillState ( $hArrowCap [, $bFilled = True] )\\r```"],"_GDIPlus_ArrowCapSetHeight":["Sets the height of the arrow cap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapSetHeight ( $hArrowCap, $fHeight )\\r```"],"_GDIPlus_ArrowCapSetMiddleInset":["Gets the value of the inset","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapSetMiddleInset ( $hArrowCap, $fInset )\\r```"],"_GDIPlus_ArrowCapSetWidth":["Sets the width of the arrow cap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ArrowCapSetWidth ( $hArrowCap, $fWidth )\\r```"],"_GDIPlus_CustomLineCapClone":["Clones a CustomLineCap object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_CustomLineCapClone ( $hCustomLineCap )\\r```"],"_GDIPlus_CustomLineCapCreate":["Creates a CustomLineCap object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_CustomLineCapCreate ( $hPathFill, $hPathStroke [, $iLineCap = 0 [, $nBaseInset = 0]] )\\r```"],"_GDIPlus_CustomLineCapDispose":["Release a custom line cap object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_CustomLineCapDispose ( $hCap )\\r```"],"_GDIPlus_CustomLineCapGetStrokeCaps":["Gets the end cap styles for both the start line cap and the end line cap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_CustomLineCapGetStrokeCaps ( $hCustomLineCap )\\r```"],"_GDIPlus_CustomLineCapSetStrokeCaps":["Sets the distance between the base cap to the start of the line","```\\r#include <GDIPlus.au3>\\r_GDIPlus_CustomLineCapSetStrokeCaps ( $hCustomLineCap, $iStartCap, $iEndCap )\\r```"],"_GDIPlus_BitmapApplyEffect":["Alters a Bitmap by applying a specified effect","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapApplyEffect ( $hBitmap, $hEffect [, $tRECT = Null] )\\r```"],"_GDIPlus_BitmapApplyEffectEx":["Alters a Bitmap by applying a specified effect","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapApplyEffectEx ( $hBitmap, $hEffect [, $iX = 0 [, $iY = 0 [, $iW = 0 [, $iH = 0]]]] )\\r```"],"_GDIPlus_BitmapCloneArea":["Create a clone of a Bitmap object from the coordinates and format specified","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCloneArea ( $hBitmap, $nLeft, $nTop, $nWidth, $nHeight [, $iFormat = 0x00021808] )\\r```"],"_GDIPlus_BitmapConvertFormat":["Converts a bitmap to a specified pixel format","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapConvertFormat ( $hBitmap, $iPixelFormat, $iDitherType, $iPaletteType, $tPalette [, $fAlphaThresholdPercent = 0.0] )\\r```"],"_GDIPlus_BitmapCreateApplyEffect":["Creates a new Bitmap by applying a specified effect to an existing Bitmap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateApplyEffect ( $hBitmap, $hEffect [, $tRECT = Null [, $tOutRECT = Null]] )\\r```"],"_GDIPlus_BitmapCreateApplyEffectEx":["Creates a new Bitmap by applying a specified effect to an existing Bitmap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateApplyEffectEx ( $hBitmap, $hEffect [, $iX = 0 [, $iY = 0 [, $iW = 0 [, $iH = 0]]]] )\\r```"],"_GDIPlus_BitmapCreateDIBFromBitmap":["Creates a DIB Section","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateDIBFromBitmap ( $hBitmap )\\r```"],"_GDIPlus_BitmapCreateFromFile":["Create a Bitmap object from file","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateFromFile ( $sFileName )\\r```"],"_GDIPlus_BitmapCreateFromGraphics":["Creates a Bitmap object based on a Graphics object, a width, and a height","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateFromGraphics ( $iWidth, $iHeight, $hGraphics )\\r```"],"_GDIPlus_BitmapCreateFromHBITMAP":["Create a Bitmap object from a bitmap handle","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateFromHBITMAP ( $hBitmap [, $hPal = 0] )\\r```"],"_GDIPlus_BitmapCreateFromHICON":["Creates a Bitmap object based on an icon","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateFromHICON ( $hIcon )\\r```"],"_GDIPlus_BitmapCreateFromHICON32":["Creates a Bitmap object based on a 32bit icon","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateFromHICON32 ( $hIcon )\\r```"],"_GDIPlus_BitmapCreateFromMemory":["Loads an image (JPG, BMP, PNG, etc.) which is saved as a binary string and converts it to a bitmap (GDI+) or hbitmap (GDI)","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateFromMemory ( $dImage [, $bHBITMAP = False] )\\r```"],"_GDIPlus_BitmapCreateFromResource":["Creates a Bitmap object based on an icon","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateFromResource ( $hInst, $vResourceName )\\r```"],"_GDIPlus_BitmapCreateFromScan0":["Creates a Bitmap object based on an array of bytes along with size and format information","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateFromScan0 ( $iWidth, $iHeight [, $iPixelFormat = $GDIP_PXF32ARGB [, $iStride = 0 [, $pScan0 = 0]]] )\\r```"],"_GDIPlus_BitmapCreateFromStream":["Creates a Bitmap object based on an IStream COM interface","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateFromStream ( $pStream )\\r```"],"_GDIPlus_BitmapCreateHBITMAPFromBitmap":["Create a handle to a bitmap from a bitmap object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapCreateHBITMAPFromBitmap ( $hBitmap [, $iARGB = 0xFF000000] )\\r```"],"_GDIPlus_BitmapDispose":["Release a bitmap object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapDispose ( $hBitmap )\\r```"],"_GDIPlus_BitmapGetHistogram":["Returns one or more histograms for specified color channels of the specified Bitmap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapGetHistogram ( $hBitmap, $iHistogramFormat, $iHistogramSize, $tChannel_0 [, $tChannel_1 = 0 [, $tChannel_2 = 0 [, $tChannel_3 = 0]]] )\\r```"],"_GDIPlus_BitmapGetHistogramEx":["Returns histograms for the Bitmap´s color channels: Red, Green, Blue, Alpha and Grey","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapGetHistogramEx ( $hBitmap )\\r```"],"_GDIPlus_BitmapGetHistogramSize":["Returns the number of elements for allocation by _GDIPlus_BitmapGetHistogramEx()","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapGetHistogramSize ( $iFormat )\\r```"],"_GDIPlus_BitmapGetPixel":["Gets the color of a specified pixel in this bitmap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapGetPixel ( $hBitmap, $iX, $iY )\\r```"],"_GDIPlus_BitmapLockBits":["Locks a portion of a bitmap for reading or writing","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapLockBits ( $hBitmap, $iLeft, $iTop, $iWidth, $iHeight [, $iFlags = $GDIP_ILMREAD [, $iFormat = $GDIP_PXF32RGB]] )\\r```"],"_GDIPlus_BitmapSetPixel":["Sets the color of a specified pixel in this bitmap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapSetPixel ( $hBitmap, $iX, $iY, $iARGB )\\r```"],"_GDIPlus_BitmapUnlockBits":["Unlocks a portion of a bitmap that was locked by _GDIPlus_BitmapLockBits","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BitmapUnlockBits ( $hBitmap, $tBitmapData )\\r```"],"_GDIPlus_HICONCreateFromBitmap":["Creates an icon handle from a bitmap object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_HICONCreateFromBitmap ( $hBitmap )\\r```"],"_GDIPlus_PaletteInitialize":["Initializes a standard, optimal, or custom color palette","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PaletteInitialize ( $iEntries [, $iPaletteType = $GDIP_PaletteTypeOptimal [, $iOptimalColors = 0 [, $bUseTransparentColor = True [, $hBitmap = Null]]]] )\\r```"],"_GDIPlus_BrushClone":["Clone a Brush object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BrushClone ( $hBrush )\\r```"],"_GDIPlus_BrushDispose":["Release a Brush object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BrushDispose ( $hBrush )\\r```"],"_GDIPlus_BrushGetType":["Retrieve the type of Brush object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BrushGetType ( $hBrush )\\r```"],"_GDIPlus_HatchBrushCreate":["Creates a HatchBrush object based on a hatch style, a foreground color, and a background color","```\\r#include <GDIPlus.au3>\\r_GDIPlus_HatchBrushCreate ( [$iHatchStyle = 0 [, $iARGBForeground = 0xFFFFFFFF [, $iARGBBackground = 0xFFFFFFFF]]] )\\r```"],"_GDIPlus_LineBrushCreate":["Creates a LinearGradientBrush object from a set of boundary points and boundary colors","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushCreate ( $nX1, $nY1, $nX2, $nY2, $iARGBClr1, $iARGBClr2 [, $iWrapMode = 0] )\\r```"],"_GDIPlus_LineBrushCreateFromRect":["Creates a LinearGradientBrush object from a rectangle and boundary colors","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushCreateFromRect ( $tRECTF, $iARGBClr1, $iARGBClr2 [, $iGradientMode = 0 [, $iWrapMode = 0]] )\\r```"],"_GDIPlus_LineBrushCreateFromRectWithAngle":["Creates a LinearGradientBrush object from a rectangle, boundary colors and angle of direction","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushCreateFromRectWithAngle ( $tRECTF, $iARGBClr1, $iARGBClr2, $fAngle [, $bIsAngleScalable = True [, $iWrapMode = 0]] )\\r```"],"_GDIPlus_LineBrushGetColors":["Gets the starting color and ending color of a linear gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushGetColors ( $hLineGradientBrush )\\r```"],"_GDIPlus_LineBrushGetRect":["Gets the rectangle that defines the boundaries of a linear gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushGetRect ( $hLineGradientBrush )\\r```"],"_GDIPlus_LineBrushMultiplyTransform":["Updates a brush\'s transformation matrix with the product of itself and another matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushMultiplyTransform ( $hLineGradientBrush, $hMatrix [, $iOrder = 0] )\\r```"],"_GDIPlus_LineBrushResetTransform":["Resets the transformation matrix of a linear gradient brush to the identity matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushResetTransform ( $hLineGradientBrush )\\r```"],"_GDIPlus_LineBrushSetBlend":["Sets the blend factors and the blend positions of a linear gradient brush to create a custom blend","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushSetBlend ( $hLineGradientBrush, $aBlends )\\r```"],"_GDIPlus_LineBrushSetColors":["Sets the starting color and ending color of a linear gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushSetColors ( $hLineGradientBrush, $iARGBStart, $iARGBEnd )\\r```"],"_GDIPlus_LineBrushSetGammaCorrection":["Specifies whether gamma correction is enabled for a linear gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushSetGammaCorrection ( $hLineGradientBrush [, $bUseGammaCorrection = True] )\\r```"],"_GDIPlus_LineBrushSetLinearBlend":["Sets the blend shape of a linear gradient brush to create a custom blend based on a triangular shape","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushSetLinearBlend ( $hLineGradientBrush, $fFocus [, $fScale = 1] )\\r```"],"_GDIPlus_LineBrushSetPresetBlend":["Sets the colors to be interpolated for a linear gradient brush and their corresponding blend positions","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushSetPresetBlend ( $hLineGradientBrush, $aInterpolations )\\r```"],"_GDIPlus_LineBrushSetSigmaBlend":["Sets the blend shape of a linear gradient brush to create a custom blend based on a bell-shaped curve","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushSetSigmaBlend ( $hLineGradientBrush, $fFocus [, $fScale = 1] )\\r```"],"_GDIPlus_LineBrushSetTransform":["Sets the transformation matrix of a linear gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_LineBrushSetTransform ( $hLineGradientBrush, $hMatrix )\\r```"],"_GDIPlus_BrushCreateSolid":["Create a solid Brush object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BrushCreateSolid ( [$iARGB = 0xFF000000] )\\r```"],"_GDIPlus_BrushGetSolidColor":["Get the color of a Solid Brush object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BrushGetSolidColor ( $hBrush )\\r```"],"_GDIPlus_BrushSetSolidColor":["Set the color of a Solid Brush object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_BrushSetSolidColor ( $hBrush [, $iARGB = 0xFF000000] )\\r```"],"_GDIPlus_TextureCreate":["Creates a TextureBrush object based on an image and a wrap mode","```\\r#include <GDIPlus.au3>\\r_GDIPlus_TextureCreate ( $hImage [, $iWrapMode = 0] )\\r```"],"_GDIPlus_TextureCreate2":["Creates a TextureBrush object based on an image, a wrap mode and a defining rectangle","```\\r#include <GDIPlus.au3>\\r_GDIPlus_TextureCreate2 ( $hImage, $nX, $nY, $nWidth, $nHeight [, $iWrapMode = 0] )\\r```"],"_GDIPlus_TextureCreateIA":["Creates a TextureBrush object based on an image, a defining rectangle, and a set of image properties","```\\r#include <GDIPlus.au3>\\r_GDIPlus_TextureCreateIA ( $hImage, $nX, $nY, $nWidth, $nHeight [, $pImageAttributes = 0] )\\r```"],"_GDIPlus_EffectCreate":["Creates an Effect object of the type specified by the guid parameter","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreate ( $sEffectGUID )\\r```"],"_GDIPlus_EffectCreateBlur":["Creates a Blur class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateBlur ( [$fRadius = 10.0 [, $bExpandEdge = False]] )\\r```"],"_GDIPlus_EffectCreateBrightnessContrast":["Creates a BrightnessContrast class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateBrightnessContrast ( [$iBrightnessLevel = 0 [, $iContrastLevel = 0]] )\\r```"],"_GDIPlus_EffectCreateColorBalance":["Creates a ColorBalance class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateColorBalance ( [$iCyanRed = 0 [, $iMagentaGreen = 0 [, $iYellowBlue = 0]]] )\\r```"],"_GDIPlus_EffectCreateColorCurve":["Creates a ColorBalance class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateColorCurve ( $iAdjustment, $iChannel, $iAdjustValue )\\r```"],"_GDIPlus_EffectCreateColorLUT":["Creates a ColorLUT class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateColorLUT ( $aColorLUT )\\r```"],"_GDIPlus_EffectCreateColorMatrix":["Creates a ColorMatrixEffect class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateColorMatrix ( $tColorMatrix )\\r```"],"_GDIPlus_EffectCreateHueSaturationLightness":["Creates a HueSaturationLightness class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateHueSaturationLightness ( [$iHueLevel = 0 [, $iSaturationLevel = 0 [, $iLightnessLevel = 0]]] )\\r```"],"_GDIPlus_EffectCreateLevels":["Creates a Levels class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateLevels ( [$iHighlight = 100 [, $iMidtone = 0 [, $iShadow = 0]]] )\\r```"],"_GDIPlus_EffectCreateRedEyeCorrection":["Creates a RedEyeCorrection class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateRedEyeCorrection ( $aAreas )\\r```"],"_GDIPlus_EffectCreateSharpen":["Creates a Sharpen class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateSharpen ( [$fRadius = 10.0 [, $fAmount = 50.0]] )\\r```"],"_GDIPlus_EffectCreateTint":["Creates a Tint class effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectCreateTint ( [$iHue = 0 [, $iAmount = 0]] )\\r```"],"_GDIPlus_EffectDispose":["Deletes the specified Effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectDispose ( $hEffect )\\r```"],"_GDIPlus_EffectGetParameters":["Returns the parameters for the specified Effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectGetParameters ( $hEffect, $tEffectParameters )\\r```"],"_GDIPlus_EffectSetParameters":["Sets the parameters for the specified Effect object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EffectSetParameters ( $hEffect, $tEffectParameters [, $iSizeAdjust = 1] )\\r```"],"_GDIPlus_FontCreate":["Create a Font object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontCreate ( $hFamily, $fSize [, $iStyle = 0 [, $iUnit = 3]] )\\r```"],"_GDIPlus_FontDispose":["Release a Font object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontDispose ( $hFont )\\r```"],"_GDIPlus_FontGetHeight":["Gets the line spacing of a font in the current unit of a specified Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontGetHeight ( $hFont, $hGraphics )\\r```"],"_GDIPlus_FontPrivateAddFont":["Adds a font file to the private font collection","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontPrivateAddFont ( $hFontCollection, $sFontFile )\\r```"],"_GDIPlus_FontPrivateAddMemoryFont":["Adds a font that is contained in system memory to a Microsoft® Windows® GDI+ font collection","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontPrivateAddMemoryFont ( $hFontCollection, $tFont )\\r```"],"_GDIPlus_FontPrivateCollectionDispose":["Deletes the specified PrivateFontCollection object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontPrivateCollectionDispose ( $hFontCollection )\\r```"],"_GDIPlus_FontPrivateCreateCollection":["Creates a PrivateFont Collection object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontPrivateCreateCollection ( )\\r```"],"_GDIPlus_FontFamilyCreate":["Create a Font Family object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontFamilyCreate ( $sFamily [, $pCollection = 0] )\\r```"],"_GDIPlus_FontFamilyCreateFromCollection":["Creates a FontFamily object based on a specified font family","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontFamilyCreateFromCollection ( $sFontName, $hFontCollection )\\r```"],"_GDIPlus_FontFamilyDispose":["Release a Font Family object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontFamilyDispose ( $hFamily )\\r```"],"_GDIPlus_FontFamilyGetCellAscent":["Gets the cell ascent, in design units, of a font family for the specified style or style combination","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontFamilyGetCellAscent ( $hFontFamily [, $iStyle = 0] )\\r```"],"_GDIPlus_FontFamilyGetCellDescent":["Gets the cell descent, in design units, of a font family for the specified style or style combination","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontFamilyGetCellDescent ( $hFontFamily [, $iStyle = 0] )\\r```"],"_GDIPlus_FontFamilyGetEmHeight":["Gets the size (commonly called em size or em height), in design units, of a font family","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontFamilyGetEmHeight ( $hFontFamily [, $iStyle = 0] )\\r```"],"_GDIPlus_FontFamilyGetLineSpacing":["Gets the line spacing, in design units, of this font family for the specified style or style combination","```\\r#include <GDIPlus.au3>\\r_GDIPlus_FontFamilyGetLineSpacing ( $hFontFamily [, $iStyle = 0] )\\r```"],"_GDIPlus_GraphicsClear":["Clears a Graphics object to a specified color","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsClear ( $hGraphics [, $iARGB = 0xFF000000] )\\r```"],"_GDIPlus_GraphicsCreateFromHDC":["Create a Graphics object from a device context (DC)","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsCreateFromHDC ( $hDC )\\r```"],"_GDIPlus_GraphicsCreateFromHWND":["Create a Graphics object from a window handle","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsCreateFromHWND ( $hWnd )\\r```"],"_GDIPlus_GraphicsDispose":["Release a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDispose ( $hGraphics )\\r```"],"_GDIPlus_GraphicsDrawArc":["Draw an arc","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawArc ( $hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawBezier":["Draw a bezier spline","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawBezier ( $hGraphics, $nX1, $nY1, $nX2, $nY2, $nX3, $nY3, $nX4, $nY4 [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawClosedCurve":["Draw a closed cardinal spline","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawClosedCurve ( $hGraphics, $aPoints [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawClosedCurve2":["Draws a closed cardinal spline","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawClosedCurve2 ( $hGraphics, $aPoints, $nTension [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawCurve":["Draw a cardinal spline","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawCurve ( $hGraphics, $aPoints [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawCurve2":["Draws a cardinal spline","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawCurve2 ( $hGraphics, $aPoints, $nTension [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawEllipse":["Draw an ellipse","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawEllipse ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawImage":["Draw an Image object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawImage ( $hGraphics, $hImage, $nX, $nY )\\r```"],"_GDIPlus_GraphicsDrawImagePointsRect":["Draws an image","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawImagePointsRect ( $hGraphics, $hImage, $nULX, $nULY, $nURX, $nURY, $nLLX, $nLLY, $nSrcX, $nSrcY, $nSrcWidth, $nSrcHeight [, $hImageAttributes = 0 [, $iUnit = 2]] )\\r```"],"_GDIPlus_GraphicsDrawImageRect":["Draws an image at a specified location","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawImageRect ( $hGraphics, $hImage, $nX, $nY, $nW, $nH )\\r```"],"_GDIPlus_GraphicsDrawImageRectRect":["Draw an Image object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawImageRectRect ( $hGraphics, $hImage, $nSrcX, $nSrcY, $nSrcWidth, $nSrcHeight, $nDstX, $nDstY, $nDstWidth, $nDstHeight [, $pAttributes = 0 [, $iUnit = 2]] )\\r```"],"_GDIPlus_GraphicsDrawLine":["Draw a line","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawLine ( $hGraphics, $nX1, $nY1, $nX2, $nY2 [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawPath":["Draws a sequence of lines and curves defined by a GraphicsPath object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawPath ( $hGraphics, $hPath [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawPie":["Draw a pie","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawPie ( $hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawPolygon":["Draw a polygon","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawPolygon ( $hGraphics, $aPoints [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsDrawRect":["Draw a rectangle","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawRect ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hPen = 0] )\\r```"],"_GDIPlus_GraphicsFillClosedCurve":["Fill a closed cardinal spline","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsFillClosedCurve ( $hGraphics, $aPoints [, $hBrush = 0] )\\r```"],"_GDIPlus_GraphicsFillClosedCurve2":["Creates a closed cardinal spline from an array of points and uses a brush to fill the interior of the spline","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsFillClosedCurve2 ( $hGraphics, $aPoints, $nTension [, $hBrush = 0 [, $iFillMode = 0]] )\\r```"],"_GDIPlus_GraphicsFillEllipse":["Fill an ellipse","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsFillEllipse ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hBrush = 0] )\\r```"],"_GDIPlus_GraphicsFillPath":["Uses a brush to fill the interior of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsFillPath ( $hGraphics, $hPath [, $hBrush = 0] )\\r```"],"_GDIPlus_GraphicsFillPie":["Fill a pie","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsFillPie ( $hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hBrush = 0] )\\r```"],"_GDIPlus_GraphicsFillPolygon":["Fill a polygon","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsFillPolygon ( $hGraphics, $aPoints [, $hBrush = 0] )\\r```"],"_GDIPlus_GraphicsFillRect":["Fill a rectangle","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsFillRect ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hBrush = 0] )\\r```"],"_GDIPlus_GraphicsFillRegion":["Uses a brush to fill a specified region","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsFillRegion ( $hGraphics, $hRegion [, $hBrush = 0] )\\r```"],"_GDIPlus_GraphicsGetCompositingMode":["Gets the compositing mode currently set for a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsGetCompositingMode ( $hGraphics )\\r```"],"_GDIPlus_GraphicsGetCompositingQuality":["Gets the compositing quality currently set for a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsGetCompositingQuality ( $hGraphics )\\r```"],"_GDIPlus_GraphicsGetDC":["Gets a handle to the device context of the Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsGetDC ( $hGraphics )\\r```"],"_GDIPlus_GraphicsGetInterpolationMode":["Gets the interpolation mode currently set for a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsGetInterpolationMode ( $hGraphics )\\r```"],"_GDIPlus_GraphicsGetSmoothingMode":["Gets the graphics object rendering quality","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsGetSmoothingMode ( $hGraphics )\\r```"],"_GDIPlus_GraphicsGetTransform":["Gets the world transformation matrix of a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsGetTransform ( $hGraphics, $hMatrix )\\r```"],"_GDIPlus_GraphicsReleaseDC":["Releases the device context of the Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsReleaseDC ( $hGraphics, $hDC )\\r```"],"_GDIPlus_GraphicsResetClip":["Sets the clipping region of a Graphics object to an infinite region","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsResetClip ( $hGraphics )\\r```"],"_GDIPlus_GraphicsResetTransform":["Sets the world transformation matrix of a Graphics object to the identity matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsResetTransform ( $hGraphics )\\r```"],"_GDIPlus_GraphicsRestore":["Restores the state of a Graphics object to the state stored by a previous call to the _GDIPlus_GraphicsSave method of the Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsRestore ( $hGraphics, $iState )\\r```"],"_GDIPlus_GraphicsRotateTransform":["Updates the world transformation matrix of a Graphics object with the product of itself and a rotation matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsRotateTransform ( $hGraphics, $fAngle [, $iOrder = 0] )\\r```"],"_GDIPlus_GraphicsSave":["Saves the current state (transformations, clipping region, and quality settings) of a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSave ( $hGraphics )\\r```"],"_GDIPlus_GraphicsScaleTransform":["Updates a Graphics object\'s world transformation matrix with the product of itself and a scaling matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsScaleTransform ( $hGraphics, $fScaleX, $fScaleY [, $iOrder = 0] )\\r```"],"_GDIPlus_GraphicsSetClipPath":["Updates the clipping region of this Graphics object to a region that is the combination of itself and the region specified by a graphics path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetClipPath ( $hGraphics, $hPath [, $iCombineMode = 0] )\\r```"],"_GDIPlus_GraphicsSetClipRect":["Updates the clipping region of a Graphics object to a region that is the combination of itself and a rectangle","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetClipRect ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $iCombineMode = 0] )\\r```"],"_GDIPlus_GraphicsSetClipRegion":["Updates the clipping region of a Graphics object to a region that is the combination of itself and the region specified by a Region object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetClipRegion ( $hGraphics, $hRegion [, $iCombineMode = 0] )\\r```"],"_GDIPlus_GraphicsSetCompositingMode":["Sets the compositing mode of a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetCompositingMode ( $hGraphics, $iCompositionMode )\\r```"],"_GDIPlus_GraphicsSetCompositingQuality":["Sets the compositing quality of a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetCompositingQuality ( $hGraphics, $iCompositionQuality )\\r```"],"_GDIPlus_GraphicsSetInterpolationMode":["Sets the interpolation mode of a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetInterpolationMode ( $hGraphics, $iInterpolationMode )\\r```"],"_GDIPlus_GraphicsSetPixelOffsetMode":["Sets the pixel offset mode of a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetPixelOffsetMode ( $hGraphics, $iPixelOffsetMode )\\r```"],"_GDIPlus_GraphicsSetSmoothingMode":["Sets the graphics object rendering quality","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetSmoothingMode ( $hGraphics, $iSmooth )\\r```"],"_GDIPlus_GraphicsSetTextRenderingHint":["Sets the contrast value of a Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetTextRenderingHint ( $hGraphics, $iTextRenderingHint )\\r```"],"_GDIPlus_GraphicsSetTransform":["Sets the world transformation for a graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsSetTransform ( $hGraphics, $hMatrix )\\r```"],"_GDIPlus_GraphicsTransformPoints":["Converts an array of points from one coordinate space to another","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsTransformPoints ( $hGraphics, ByRef $aPoints [, $iCoordSpaceTo = 0 [, $iCoordSpaceFrom = 1]] )\\r```"],"_GDIPlus_GraphicsTranslateTransform":["Updates a Graphics object\'s world transformation matrix with the product of itself and a translation matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsTranslateTransform ( $hGraphics, $nDX, $nDY [, $iOrder = 0] )\\r```"],"_GDIPlus_Decoders":["Get an array of information about the available image decoders","```\\r#include <GDIPlus.au3>\\r_GDIPlus_Decoders ( )\\r```"],"_GDIPlus_DecodersGetCount":["Get the number of available image decoders","```\\r#include <GDIPlus.au3>\\r_GDIPlus_DecodersGetCount ( )\\r```"],"_GDIPlus_DecodersGetSize":["Get the total size of the structure that is returned by _GDIPlus_GetImageDecoders","```\\r#include <GDIPlus.au3>\\r_GDIPlus_DecodersGetSize ( )\\r```"],"_GDIPlus_Encoders":["Get an array of information about the available image encoders","```\\r#include <GDIPlus.au3>\\r_GDIPlus_Encoders ( )\\r```"],"_GDIPlus_EncodersGetCLSID":["Return the encoder CLSID for a specific image file type","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EncodersGetCLSID ( $sFileExtension )\\r```"],"_GDIPlus_EncodersGetCount":["Get the number of available image encoders","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EncodersGetCount ( )\\r```"],"_GDIPlus_EncodersGetParamList":["Get the parameter list for a specified image encoder","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EncodersGetParamList ( $hImage, $sEncoder )\\r```"],"_GDIPlus_EncodersGetParamListSize":["Get the size of the parameter list for a specified image encoder","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EncodersGetParamListSize ( $hImage, $sEncoder )\\r```"],"_GDIPlus_EncodersGetSize":["Get the total size of the structure that is returned by _GDIPlus_GetImageEncoders","```\\r#include <GDIPlus.au3>\\r_GDIPlus_EncodersGetSize ( )\\r```"],"_GDIPlus_ParamAdd":["Add a value to an encoder parameter list","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ParamAdd ( ByRef $tParams, $sGUID, $iNbOfValues, $iType, $pValues )\\r```"],"_GDIPlus_ParamInit":["Allocate an empty encoder parameter list","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ParamInit ( $iCount )\\r```"],"_GDIPlus_ParamSize":["Get an encoder parameter size","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ParamSize ( )\\r```"],"_GDIPlus_PathAddArc":["Adds an elliptical arc to the current figure of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddArc ( $hPath, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle )\\r```"],"_GDIPlus_PathAddBezier":["Adds a bezier spline to the current figure of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddBezier ( $hPath, $nX1, $nY1, $nX2, $nY2, $nX3, $nY3, $nX4, $nY4 )\\r```"],"_GDIPlus_PathAddClosedCurve":["Adds a closed cardinal spline to a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddClosedCurve ( $hPath, $aPoints )\\r```"],"_GDIPlus_PathAddClosedCurve2":["Adds a closed cardinal spline to a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddClosedCurve2 ( $hPath, $aPoints [, $nTension = 0.5] )\\r```"],"_GDIPlus_PathAddCurve":["Adds a cardinal spline to the current figure of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddCurve ( $hPath, $aPoints )\\r```"],"_GDIPlus_PathAddCurve2":["Adds a cardinal spline to the current figure of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddCurve2 ( $hPath, $aPoints [, $nTension = 0.5] )\\r```"],"_GDIPlus_PathAddCurve3":["Adds a cardinal spline to the current figure of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddCurve3 ( $hPath, $aPoints, $iOffset, $iNumOfSegments [, $nTension = 0.5] )\\r```"],"_GDIPlus_PathAddEllipse":["Adds an ellipse to the current figure a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddEllipse ( $hPath, $nX, $nY, $nWidth, $nHeight )\\r```"],"_GDIPlus_PathAddLine":["Adds a line to the current figure of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddLine ( $hPath, $nX1, $nY1, $nX2, $nY2 )\\r```"],"_GDIPlus_PathAddLine2":["Adds a sequence of lines to the current figure of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddLine2 ( $hPath, $aPoints )\\r```"],"_GDIPlus_PathAddPath":["Adds a path to another path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddPath ( $hPath1, $hPath2 [, $bConnect = True] )\\r```"],"_GDIPlus_PathAddPie":["Adds a pie to a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddPie ( $hPath, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle )\\r```"],"_GDIPlus_PathAddPolygon":["Adds a polygon to a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddPolygon ( $hPath, $aPoints )\\r```"],"_GDIPlus_PathAddRectangle":["Adds a rectangle to a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddRectangle ( $hPath, $nX, $nY, $nWidth, $nHeight )\\r```"],"_GDIPlus_PathAddString":["Adds the outline of a string to a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathAddString ( $hPath, $sString, $tLayout, $hFamily [, $iStyle = 0 [, $fSize = 8.5 [, $hFormat = 0]]] )\\r```"],"_GDIPlus_PathClone":["Clones a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathClone ( $hPath )\\r```"],"_GDIPlus_PathCloseFigure":["Closes the current figure of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathCloseFigure ( $hPath )\\r```"],"_GDIPlus_PathCreate":["Creates a GraphicsPath object and initializes the fill mode","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathCreate ( [$iFillMode = 0] )\\r```"],"_GDIPlus_PathCreate2":["Creates a GraphicsPath object based on an array of points, an array of types, and a fill mode","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathCreate2 ( $aPathData [, $iFillMode = 0] )\\r```"],"_GDIPlus_PathDispose":["Releases a GraphicsPath object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathDispose ( $hPath )\\r```"],"_GDIPlus_PathFlatten":["Applies a transformation to a path and converts each curve in the path to a sequence of connected lines","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathFlatten ( $hPath [, $fFlatness = 0.25 [, $hMatrix = 0]] )\\r```"],"_GDIPlus_PathGetData":["Gets an array of points and types from a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathGetData ( $hPath )\\r```"],"_GDIPlus_PathGetFillMode":["Gets the fill mode of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathGetFillMode ( $hPath )\\r```"],"_GDIPlus_PathGetLastPoint":["Gets the ending point of the last figure in a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathGetLastPoint ( $hPath )\\r```"],"_GDIPlus_PathGetPointCount":["Gets the number of points in a path\'s array of data points","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathGetPointCount ( $hPath )\\r```"],"_GDIPlus_PathGetPoints":["Gets an array of points from a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathGetPoints ( $hPath )\\r```"],"_GDIPlus_PathGetWorldBounds":["Gets the bounding rectangle for a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathGetWorldBounds ( $hPath [, $hMatrix = 0 [, $hPen = 0]] )\\r```"],"_GDIPlus_PathIsOutlineVisiblePoint":["Determines whether a specified point touches the outline of a path with the specified Graphics and Pen","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathIsOutlineVisiblePoint ( $hPath, $nX, $nY [, $hPen = 0 [, $hGraphics = 0]] )\\r```"],"_GDIPlus_PathIsVisiblePoint":["Determines whether a specified point lies in the area that is filled when a path is filled by a specified Graphics object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathIsVisiblePoint ( $hPath, $nX, $nY [, $hGraphics = 0] )\\r```"],"_GDIPlus_PathReset":["Empties a path and sets the fill mode to alternate (0)","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathReset ( $hPath )\\r```"],"_GDIPlus_PathReverse":["Reverses the order of the points that define a path\'s lines and curves","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathReverse ( $hPath )\\r```"],"_GDIPlus_PathSetFillMode":["Sets the fill mode of a path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathSetFillMode ( $hPath, $iFillMode )\\r```"],"_GDIPlus_PathSetMarker":["Designates the last point in a path as a marker point","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathSetMarker ( $hPath )\\r```"],"_GDIPlus_PathStartFigure":["Starts a new figure without closing the current figure. Subsequent points added to a path are added to the new figure","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathStartFigure ( $hPath )\\r```"],"_GDIPlus_PathTransform":["Multiplies each of a path\'s data points by a specified matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathTransform ( $hPath, $hMatrix )\\r```"],"_GDIPlus_PathWarp":["Applies a warp transformation to a path. The function also flattens (converts to a sequence of straight lines) the path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathWarp ( $hPath, $hMatrix, $aPoints, $nX, $nY, $nWidth, $nHeight [, $iWarpMode = 0 [, $fFlatness = 0.25]] )\\r```"],"_GDIPlus_PathWiden":["Replaces a path with curves that enclose the area that is filled when the path is drawn by a specified pen. The function also flattens the path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathWiden ( $hPath, $hPen [, $hMatrix = 0 [, $fFlatness = 0.25]] )\\r```"],"_GDIPlus_PathWindingModeOutline":["Transforms and flattens a path, and then converts the path\'s data points so that they represent only the outline of the path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathWindingModeOutline ( $hPath [, $hMatrix = 0 [, $fFlatness = 0.25]] )\\r```"],"_GDIPlus_DrawImageFX":["Draws a portion of an image after applying a specified effect","```\\r#include <GDIPlus.au3>\\r_GDIPlus_DrawImageFX ( $hGraphics, $hImage, $hEffect [, $tRECTF = 0 [, $hMatrix = 0 [, $hImgAttributes = 0 [, $iUnit = 2]]]] )\\r```"],"_GDIPlus_DrawImageFXEx":["Draws a portion of an image after applying a specified effect","```\\r#include <GDIPlus.au3>\\r_GDIPlus_DrawImageFXEx ( $hGraphics, $hImage, $hEffect [, $nX = 0 [, $nY = 0 [, $nW = 0 [, $nH = 0 [, $hMatrix = 0 [, $hImgAttributes = 0 [, $iUnit = 2]]]]]]] )\\r```"],"_GDIPlus_DrawImagePoints":["Draws an image at a specified location","```\\r#include <GDIPlus.au3>\\r_GDIPlus_DrawImagePoints ( $hGraphic, $hImage, $nULX, $nULY, $nURX, $nURY, $nLLX, $nLLY [, $iCount = 3] )\\r```"],"_GDIPlus_ImageDispose":["Release an image object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageDispose ( $hImage )\\r```"],"_GDIPlus_ImageGetDimension":["Gets the width and height of an image which is supported by GDIPlus","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetDimension ( $hImage )\\r```"],"_GDIPlus_ImageGetFlags":["Returns enumeration of pixel data attributes contained in an image","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetFlags ( $hImage )\\r```"],"_GDIPlus_ImageGetGraphicsContext":["Get the graphics context of the image","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetGraphicsContext ( $hImage )\\r```"],"_GDIPlus_ImageGetHeight":["Get the image height","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetHeight ( $hImage )\\r```"],"_GDIPlus_ImageGetHorizontalResolution":["Returns horizontal resolution in DPI (pixels per inch) of an image","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetHorizontalResolution ( $hImage )\\r```"],"_GDIPlus_ImageGetPixelFormat":["Returns pixel format of an image: Bits per pixel, Alpha channels, RGB, Grayscale, Indexed etc","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetPixelFormat ( $hImage )\\r```"],"_GDIPlus_ImageGetRawFormat":["Returns file format GUID and image format name of an image","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetRawFormat ( $hImage )\\r```"],"_GDIPlus_ImageGetThumbnail":["Gets a thumbnail image from this Image object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetThumbnail ( $hImage [, $iWidth = 0 [, $iHeight = 0 [, $bKeepRatio = True [, $hCallback = Null [, $hCallbackData = Null]]]]] )\\r```"],"_GDIPlus_ImageGetType":["Returns type (bitmap or metafile) of an image","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetType ( $hImage )\\r```"],"_GDIPlus_ImageGetVerticalResolution":["Returns vertical resolution in DPI (pixels per inch) of an image","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetVerticalResolution ( $hImage )\\r```"],"_GDIPlus_ImageGetWidth":["Get the image width","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageGetWidth ( $hImage )\\r```"],"_GDIPlus_ImageLoadFromFile":["Create an image object based on a file","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageLoadFromFile ( $sFileName )\\r```"],"_GDIPlus_ImageLoadFromStream":["Creates an Image object based on a stream","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageLoadFromStream ( $pStream )\\r```"],"_GDIPlus_ImageResize":["Resize an image to a new given size","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageResize ( $hImage, $iNewWidth, $iNewHeight [, $iInterpolationMode = $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC] )\\r```"],"_GDIPlus_ImageRotateFlip":["Rotates and flips an image","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageRotateFlip ( $hImage, $iRotateFlipType )\\r```"],"_GDIPlus_ImageSaveToFile":["Save an image to file","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageSaveToFile ( $hImage, $sFileName )\\r```"],"_GDIPlus_ImageSaveToFileEx":["Save an image to file","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageSaveToFileEx ( $hImage, $sFileName, $sEncoder [, $tParams = 0] )\\r```"],"_GDIPlus_ImageSaveToStream":["Saves an Image object to a stream","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageSaveToStream ( $hImage, $pStream, $tEncoder [, $tParams = 0] )\\r```"],"_GDIPlus_ImageScale":["Scales an image by a given factor","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageScale ( $hImage, $iScaleW, $iScaleH [, $iInterpolationMode = $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC] )\\r```"],"_GDIPlus_ImageAttributesCreate":["Creates an ImageAttributes object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageAttributesCreate ( )\\r```"],"_GDIPlus_ImageAttributesDispose":["Releases an ImageAttributes object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageAttributesDispose ( $hImageAttributes )\\r```"],"_GDIPlus_ImageAttributesSetColorKeys":["Sets or clears the color key (transparency range) for a specified category","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageAttributesSetColorKeys ( $hImageAttributes [, $iColorAdjustType = 0 [, $bEnable = False [, $iARGBLow = 0 [, $iARGBHigh = 0]]]] )\\r```"],"_GDIPlus_ImageAttributesSetColorMatrix":["Sets or clears the color- and grayscale-adjustment matrices for a specified category","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ImageAttributesSetColorMatrix ( $hImageAttributes [, $iColorAdjustType = 0 [, $bEnable = False [, $tClrMatrix = 0 [, $tGrayMatrix = 0 [, $iColorMatrixFlags = 0]]]]] )\\r```"],"_GDIPlus_MatrixClone":["Clones a Matrix object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixClone ( $hMatrix )\\r```"],"_GDIPlus_MatrixCreate":["Creates and initializes a Matrix object that represents the identity matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixCreate ( )\\r```"],"_GDIPlus_MatrixDispose":["Release a matrix object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixDispose ( $hMatrix )\\r```"],"_GDIPlus_MatrixGetElements":["Gets the elements of a matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixGetElements ( $hMatrix )\\r```"],"_GDIPlus_MatrixInvert":["Replaces the elements of a matrix with the elements of its inverse","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixInvert ( $hMatrix )\\r```"],"_GDIPlus_MatrixMultiply":["Updates a matrix with the product of itself and another matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixMultiply ( $hMatrix1, $hMatrix2 [, $iOrder = 0] )\\r```"],"_GDIPlus_MatrixRotate":["Updates a matrix with the product of itself and a rotation matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixRotate ( $hMatrix, $fAngle [, $bAppend = False] )\\r```"],"_GDIPlus_MatrixScale":["Updates a matrix with the product of itself and a scaling matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixScale ( $hMatrix, $fScaleX, $fScaleY [, $bOrder = False] )\\r```"],"_GDIPlus_MatrixSetElements":["Sets the elements of a matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixSetElements ( $hMatrix [, $nM11 = 1 [, $nM12 = 0 [, $nM21 = 0 [, $nM22 = 1 [, $nDX = 0 [, $nDY = 0]]]]]] )\\r```"],"_GDIPlus_MatrixShear":["Updates a matrix with the product of itself and another matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixShear ( $hMatrix, $fShearX, $fShearY [, $iOrder = 0] )\\r```"],"_GDIPlus_MatrixTransformPoints":["Multiplies each point in an array by a matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixTransformPoints ( $hMatrix, ByRef $aPoints )\\r```"],"_GDIPlus_MatrixTranslate":["Updates a matrix with the product of itself and a translation matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_MatrixTranslate ( $hMatrix, $fOffsetX, $fOffsetY [, $bAppend = False] )\\r```"],"_GDIPlus_ColorMatrixCreate":["Creates and initializes an identity color matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ColorMatrixCreate ( )\\r```"],"_GDIPlus_ColorMatrixCreateGrayScale":["Creates and initializes a gray-scaling color matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ColorMatrixCreateGrayScale ( )\\r```"],"_GDIPlus_ColorMatrixCreateNegative":["Creates and initializes a negative color matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ColorMatrixCreateNegative ( )\\r```"],"_GDIPlus_ColorMatrixCreateSaturation":["Creates and initializes a saturation color matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ColorMatrixCreateSaturation ( $fSat )\\r```"],"_GDIPlus_ColorMatrixCreateScale":["Creates and initializes a scaling color matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ColorMatrixCreateScale ( $fRed, $fGreen, $fBlue [, $fAlpha = 1] )\\r```"],"_GDIPlus_ColorMatrixCreateTranslate":["Creates and initializes a translation color matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_ColorMatrixCreateTranslate ( $fRed, $fGreen, $fBlue [, $fAlpha = 0] )\\r```"],"_GDIPlus_PathBrushCreate":["Creates a PathGradientBrush object based on an array of points and initializes the wrap mode of the brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushCreate ( $aPoints [, $iWrapMode = 0] )\\r```"],"_GDIPlus_PathBrushCreateFromPath":["Creates a PathGradientBrush object based on a GraphicsPath object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushCreateFromPath ( $hPath )\\r```"],"_GDIPlus_PathBrushGetCenterPoint":["Gets the center point of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushGetCenterPoint ( $hPathGradientBrush )\\r```"],"_GDIPlus_PathBrushGetFocusScales":["Gets the focus scales of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushGetFocusScales ( $hPathGradientBrush )\\r```"],"_GDIPlus_PathBrushGetPointCount":["Gets the number of points in the array of points that defines a brush\'s boundary path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushGetPointCount ( $hPathGradientBrush )\\r```"],"_GDIPlus_PathBrushGetRect":["Gets the smallest rectangle that encloses the boundary path of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushGetRect ( $hPathGradientBrush )\\r```"],"_GDIPlus_PathBrushGetWrapMode":["Gets the wrap mode currently set for a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushGetWrapMode ( $hPathGradientBrush )\\r```"],"_GDIPlus_PathBrushMultiplyTransform":["Updates a brush\'s transformation matrix with the product of itself and another matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushMultiplyTransform ( $hPathGradientBrush, $hMatrix [, $iOrder = 0] )\\r```"],"_GDIPlus_PathBrushResetTransform":["Resets the transformation matrix of a path gradient brush to the identity matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushResetTransform ( $hPathGradientBrush )\\r```"],"_GDIPlus_PathBrushSetBlend":["Sets the blend factors and the blend positions of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetBlend ( $hPathGradientBrush, $aBlends )\\r```"],"_GDIPlus_PathBrushSetCenterColor":["Sets the color of the center point of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetCenterColor ( $hPathGradientBrush, $iARGB )\\r```"],"_GDIPlus_PathBrushSetCenterPoint":["Sets the center point of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetCenterPoint ( $hPathGradientBrush, $nX, $nY )\\r```"],"_GDIPlus_PathBrushSetFocusScales":["Sets the focus scales of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetFocusScales ( $hPathGradientBrush, $fScaleX, $fScaleY )\\r```"],"_GDIPlus_PathBrushSetGammaCorrection":["Specifies whether gamma correction is enabled for a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetGammaCorrection ( $hPathGradientBrush, $bUseGammaCorrection )\\r```"],"_GDIPlus_PathBrushSetLinearBlend":["Sets the blend shape of a path gradient brush to create a custom blend based on a triangular shape","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetLinearBlend ( $hPathGradientBrush, $fFocus [, $fScale = 1] )\\r```"],"_GDIPlus_PathBrushSetPresetBlend":["Sets the preset colors and the blend positions of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetPresetBlend ( $hPathGradientBrush, $aInterpolations )\\r```"],"_GDIPlus_PathBrushSetSigmaBlend":["Sets the blend shape of a path gradient brush to create a custom blend based on a bell-shaped curve","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetSigmaBlend ( $hPathGradientBrush, $fFocus [, $fScale = 1] )\\r```"],"_GDIPlus_PathBrushSetSurroundColor":["Sets the surround color for a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetSurroundColor ( $hPathGradientBrush, $iARGB )\\r```"],"_GDIPlus_PathBrushSetSurroundColorsWithCount":["Sets the surround colors currently specified for a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetSurroundColorsWithCount ( $hPathGradientBrush, $aColors )\\r```"],"_GDIPlus_PathBrushSetTransform":["Sets the transformation matrix of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetTransform ( $hPathGradientBrush, $hMatrix )\\r```"],"_GDIPlus_PathBrushSetWrapMode":["Sets the wrap mode of a path gradient brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathBrushSetWrapMode ( $hPathGradientBrush, $iWrapMode )\\r```"],"_GDIPlus_PathIterCreate":["Creates a new GraphicsPathIterator object and associates it with a GraphicsPath object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathIterCreate ( $hPath )\\r```"],"_GDIPlus_PathIterDispose":["Releases a GraphicsPathIterator object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathIterDispose ( $hPathIter )\\r```"],"_GDIPlus_PathIterGetSubpathCount":["Gets the number of subpaths (also called figures) in the path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathIterGetSubpathCount ( $hPathIter )\\r```"],"_GDIPlus_PathIterNextMarkerPath":["Gets the next marker-delimited section of an iterator\'s associated path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathIterNextMarkerPath ( $hPathIter, $hPath )\\r```"],"_GDIPlus_PathIterNextSubpathPath":["Gets the next figure (subpath) from an iterator\'s associated path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathIterNextSubpathPath ( $hPathIter, $hPath )\\r```"],"_GDIPlus_PathIterRewind":["Rewinds an iterator to the beginning of its associated path","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PathIterRewind ( $hPathIter )\\r```"],"_GDIPlus_PenCreate":["Create a pen object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenCreate ( [$iARGB = 0xFF000000 [, $nWidth = 1 [, $iUnit = 2]]] )\\r```"],"_GDIPlus_PenCreate2":["Creates a Pen object that uses the attributes of a brush","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenCreate2 ( $hBrush [, $nWidth = 1 [, $iUnit = 2]] )\\r```"],"_GDIPlus_PenDispose":["Release a pen object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenDispose ( $hPen )\\r```"],"_GDIPlus_PenGetAlignment":["Gets the pen alignment","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenGetAlignment ( $hPen )\\r```"],"_GDIPlus_PenGetColor":["Gets the pen color","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenGetColor ( $hPen )\\r```"],"_GDIPlus_PenGetCustomEndCap":["Gets the custom end cap for the pen","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenGetCustomEndCap ( $hPen )\\r```"],"_GDIPlus_PenGetDashCap":["Gets the pen dash cap style","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenGetDashCap ( $hPen )\\r```"],"_GDIPlus_PenGetDashStyle":["Gets the pen dash style","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenGetDashStyle ( $hPen )\\r```"],"_GDIPlus_PenGetEndCap":["Gets the pen end cap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenGetEndCap ( $hPen )\\r```"],"_GDIPlus_PenGetMiterLimit":["Gets the miter length currently set for a Pen object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenGetMiterLimit ( $hPen )\\r```"],"_GDIPlus_PenGetWidth":["Retrieve the width of a pen","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenGetWidth ( $hPen )\\r```"],"_GDIPlus_PenSetAlignment":["Sets the pen alignment","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetAlignment ( $hPen [, $iAlignment = 0] )\\r```"],"_GDIPlus_PenSetColor":["Sets the pen color","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetColor ( $hPen, $iARGB )\\r```"],"_GDIPlus_PenSetCustomEndCap":["Sets the custom end cap for the pen","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetCustomEndCap ( $hPen, $hEndCap )\\r```"],"_GDIPlus_PenSetDashCap":["Sets the pen dash cap style","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetDashCap ( $hPen [, $iDash = 0] )\\r```"],"_GDIPlus_PenSetDashStyle":["Sets the pen dash style","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetDashStyle ( $hPen [, $iStyle = 0] )\\r```"],"_GDIPlus_PenSetEndCap":["Sets the pen end cap","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetEndCap ( $hPen, $iEndCap )\\r```"],"_GDIPlus_PenSetLineCap":["Sets the cap styles for the start, end, and dashes in a line drawn with the pen","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetLineCap ( $hPen, $iStartCap, $iEndCap, $iDashCap )\\r```"],"_GDIPlus_PenSetLineJoin":["Sets the line join for a Pen object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetLineJoin ( $hPen, $iLineJoin )\\r```"],"_GDIPlus_PenSetMiterLimit":["Sets the miter limit of a Pen object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetMiterLimit ( $hPen, $fMiterLimit )\\r```"],"_GDIPlus_PenSetStartCap":["Sets the start cap for a Pen object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetStartCap ( $hPen, $iLineCap )\\r```"],"_GDIPlus_PenSetWidth":["Sets the width of a pen","```\\r#include <GDIPlus.au3>\\r_GDIPlus_PenSetWidth ( $hPen, $fWidth )\\r```"],"_GDIPlus_RegionClone":["Clones a Region object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionClone ( $hRegion )\\r```"],"_GDIPlus_RegionCombinePath":["Updates a region to the portion of itself that intersects the specified path\'s interior","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionCombinePath ( $hRegion, $hPath [, $iCombineMode = 2] )\\r```"],"_GDIPlus_RegionCombineRect":["Updates a region to the portion of itself that intersects the specified rectangle\'s interior","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionCombineRect ( $hRegion, $nX, $nY, $nWidth, $nHeight [, $iCombineMode = 2] )\\r```"],"_GDIPlus_RegionCombineRegion":["Updates a region to the portion of itself that intersects another region","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionCombineRegion ( $hRegionDst, $hRegionSrc [, $iCombineMode = 2] )\\r```"],"_GDIPlus_RegionCreate":["Creates a region that is infinite","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionCreate ( )\\r```"],"_GDIPlus_RegionCreateFromPath":["Creates a region that is defined by a path object and has a fill mode that is contained in the path object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionCreateFromPath ( $hPath )\\r```"],"_GDIPlus_RegionCreateFromRect":["Creates a region that is defined by a rectangle","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionCreateFromRect ( $nX, $nY, $nWidth, $nHeight )\\r```"],"_GDIPlus_RegionDispose":["Releases a Region object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionDispose ( $hRegion )\\r```"],"_GDIPlus_RegionGetBounds":["Gets a rectangle that encloses a region","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionGetBounds ( $hRegion, $hGraphics )\\r```"],"_GDIPlus_RegionGetHRgn":["Creates a GDI region from a GDI+ Region object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionGetHRgn ( $hRegion [, $hGraphics = 0] )\\r```"],"_GDIPlus_RegionTransform":["Tansforms a region by multiplying each of its data points by a specified matrix","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionTransform ( $hRegion, $hMatrix )\\r```"],"_GDIPlus_RegionTranslate":["Offsets a region by specified amounts in the horizontal and vertical directions","```\\r#include <GDIPlus.au3>\\r_GDIPlus_RegionTranslate ( $hRegion, $nDX, $nDY )\\r```"],"_GDIPlus_StringFormatCreate":["Create a String Format object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_StringFormatCreate ( [$iFormat = 0 [, $iLangID = 0]] )\\r```"],"_GDIPlus_StringFormatDispose":["Release a String Format object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_StringFormatDispose ( $hFormat )\\r```"],"_GDIPlus_StringFormatGetMeasurableCharacterRangeCount":["Gets the number of measurable character ranges that are currently set for a StringFormat object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_StringFormatGetMeasurableCharacterRangeCount ( $hStringFormat )\\r```"],"_GDIPlus_StringFormatSetAlign":["Sets the text alignment of a string format object","```\\r#include <GDIPlus.au3>\\r_GDIPlus_StringFormatSetAlign ( $hStringFormat, $iFlag )\\r```"],"_GDIPlus_StringFormatSetLineAlign":["Sets the line alignment of a StringFormat object in relation to the origin of a layout rectangle","```\\r#include <GDIPlus.au3>\\r_GDIPlus_StringFormatSetLineAlign ( $hStringFormat, $iStringAlign )\\r```"],"_GDIPlus_StringFormatSetMeasurableCharacterRanges":["Sets a series of character ranges for a StringFormat object that, when in a string, can be measured","```\\r#include <GDIPlus.au3>\\r_GDIPlus_StringFormatSetMeasurableCharacterRanges ( $hStringFormat, $aRanges )\\r```"],"_GDIPlus_GraphicsDrawString":["Draw a string","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawString ( $hGraphics, $sString, $nX, $nY [, $sFont = \\"Arial\\" [, $fSize = 10 [, $iFormat = 0]]] )\\r```"],"_GDIPlus_GraphicsDrawStringEx":["Draw a string","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsDrawStringEx ( $hGraphics, $sString, $hFont, $tLayout, $hFormat, $hBrush )\\r```"],"_GDIPlus_GraphicsMeasureCharacterRanges":["Gets a set of region objects each of which bounds a range of character positions within a string","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsMeasureCharacterRanges ( $hGraphics, $sString, $hFont, $tLayout, $hStringFormat )\\r```"],"_GDIPlus_GraphicsMeasureString":["Measures the size of a string","```\\r#include <GDIPlus.au3>\\r_GDIPlus_GraphicsMeasureString ( $hGraphics, $sString, $hFont, $tLayout, $hFormat )\\r```"]}'),T=JSON.parse('{"_GUICtrlAVI_Close":["Closes an AVI clip","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_Close ( $hWnd )\\r```"],"_GUICtrlAVI_Create":["Creates an AVI control","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_Create ( $hWnd [, $sFilePath = \\"\\" [, $iSubFileID = -1 [, $iX = 0 [, $iY = 0 [, $iWidth = 0 [, $iHeight = 0 [, $iStyle = 0x00000006 [, $iExStyle = 0x00000000]]]]]]]] )\\r```"],"_GUICtrlAVI_Destroy":["Delete the control","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlAVI_IsPlaying":["Checks whether an Audio-Video Interleaved (AVI) clip is playing","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_IsPlaying ( $hWnd )\\r```"],"_GUICtrlAVI_Open":["Opens an AVI clip and displays its first frame in an animation control","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_Open ( $hWnd, $sFileName )\\r```"],"_GUICtrlAVI_OpenEx":["Opens an AVI clip and displays its first frame in an animation control","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_OpenEx ( $hWnd, $sFileName, $iResourceID )\\r```"],"_GUICtrlAVI_Play":["Plays an AVI clip in an animation control","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_Play ( $hWnd [, $iFrom = 0 [, $iTo = -1 [, $iRepeat = -1]]] )\\r```"],"_GUICtrlAVI_Seek":["Directs an AVI control to display a particular frame of an AVI clip","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_Seek ( $hWnd, $iFrame )\\r```"],"_GUICtrlAVI_Show":["Show/Hide the AVI control","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_Show ( $hWnd, $iState )\\r```"],"_GUICtrlAVI_Stop":["Stops playing an AVI clip","```\\r#include <GuiAVI.au3>\\r_GUICtrlAVI_Stop ( $hWnd )\\r```"]}'),G=JSON.parse('{"_GUICtrlButton_Click":["Simulates the user clicking a button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_Click ( $hWnd )\\r```"],"_GUICtrlButton_Create":["Creates a Button control","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_Create ( $hWnd, $sText, $iX, $iY, $iWidth, $iHeight [, $iStyle = -1 [, $iExStyle = -1]] )\\r```"],"_GUICtrlButton_Destroy":["Delete the Button control","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlButton_Enable":["Enables or disables mouse and keyboard input to the specified button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_Enable ( $hWnd [, $bEnable = True] )\\r```"],"_GUICtrlButton_GetCheck":["Gets the check state of a radio button or check box","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetCheck ( $hWnd )\\r```"],"_GUICtrlButton_GetFocus":["Retrieves if the button has keyboard focus","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetFocus ( $hWnd )\\r```"],"_GUICtrlButton_GetIdealSize":["Gets the size of the button that best fits its text and image, if an image list is present","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetIdealSize ( $hWnd )\\r```"],"_GUICtrlButton_GetImage":["Retrieves a handle to the image (icon or bitmap) associated with the button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetImage ( $hWnd )\\r```"],"_GUICtrlButton_GetImageList":["Retrieves an array that describes the image list assigned to a button control","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetImageList ( $hWnd )\\r```"],"_GUICtrlButton_GetNote":["Gets the text of the note associated with the Command Link button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetNote ( $hWnd )\\r```"],"_GUICtrlButton_GetNoteLength":["Gets the length of the note text that may be displayed in the description for a command link button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetNoteLength ( $hWnd )\\r```"],"_GUICtrlButton_GetSplitInfo":["Gets information for a split button control","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetSplitInfo ( $hWnd )\\r```"],"_GUICtrlButton_GetState":["Determines the state of a button or check box","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetState ( $hWnd )\\r```"],"_GUICtrlButton_GetText":["Retrieve the text of the button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetText ( $hWnd )\\r```"],"_GUICtrlButton_GetTextMargin":["Gets the margins used to draw text in a button control","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_GetTextMargin ( $hWnd )\\r```"],"_GUICtrlButton_SetCheck":["Sets the check state of a radio button or check box","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetCheck ( $hWnd [, $iState = $BST_CHECKED] )\\r```"],"_GUICtrlButton_SetDontClick":["Sets the state of $BST_DONTCLICK flag on a button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetDontClick ( $hWnd [, $bState = True] )\\r```"],"_GUICtrlButton_SetFocus":["Sets the keyboard focus to the specified button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetFocus ( $hWnd [, $bFocus = True] )\\r```"],"_GUICtrlButton_SetImage":["Sets the image of a button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetImage ( $hWnd, $sImageFile [, $iIconID = -1 [, $bLarge = False]] )\\r```"],"_GUICtrlButton_SetImageList":["Assigns an image list to a button control","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetImageList ( $hWnd, $hImage [, $iAlign = 0 [, $iLeft = 1 [, $iTop = 1 [, $iRight = 1 [, $iBottom = 1]]]]] )\\r```"],"_GUICtrlButton_SetNote":["Sets the text of the note associated with a command link button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetNote ( $hWnd, $sNote )\\r```"],"_GUICtrlButton_SetShield":["Sets the elevation required state for a specified button or command link to display an elevated icon","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetShield ( $hWnd [, $bRequired = True] )\\r```"],"_GUICtrlButton_SetSize":["Sets the size of the button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetSize ( $hWnd, $iWidth, $iHeight )\\r```"],"_GUICtrlButton_SetSplitInfo":["Gets information for a split button control","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetSplitInfo ( $hWnd [, $hImlGlyph = -1 [, $iSplitStyle = $BCSS_ALIGNLEFT [, $iWidth = 0 [, $iHeight = 0]]]] )\\r```"],"_GUICtrlButton_SetState":["Sets the highlight state of a button. The highlight state indicates whether the button is highlighted as if the user had pushed it","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetState ( $hWnd [, $bHighlighted = True] )\\r```"],"_GUICtrlButton_SetStyle":["Sets the style of a button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetStyle ( $hWnd, $iStyle )\\r```"],"_GUICtrlButton_SetText":["Sets the text of the button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetText ( $hWnd, $sText )\\r```"],"_GUICtrlButton_SetTextMargin":["Sets the margins for drawing text in a button control","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_SetTextMargin ( $hWnd [, $iLeft = 1 [, $iTop = 1 [, $iRight = 1 [, $iBottom = 1]]]] )\\r```"],"_GUICtrlButton_Show":["Show/Hide button","```\\r#include <GuiButton.au3>\\r_GUICtrlButton_Show ( $hWnd [, $bShow = True] )\\r```"]}'),P=JSON.parse('{"_GUICtrlComboBox_AddDir":["Adds the names of directories and files","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_AddDir ( $hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]] )\\r```"],"_GUICtrlComboBox_AddString":["Add a string","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_AddString ( $hWnd, $sText )\\r```"],"_GUICtrlComboBox_AutoComplete":["AutoComplete a ComboBox edit control","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_AutoComplete ( $hWnd )\\r```"],"_GUICtrlComboBox_BeginUpdate":["Prevents updating of the control until the EndUpdate function is called","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_BeginUpdate ( $hWnd )\\r```"],"_GUICtrlComboBox_Create":["Create a ComboBox control","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_Create ( $hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 120 [, $iStyle = 0x00200042 [, $iExStyle = 0x00000000]]]] )\\r```"],"_GUICtrlComboBox_DeleteString":["Delete a string","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_DeleteString ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBox_Destroy":["Delete the control","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlComboBox_EndUpdate":["Enables screen repainting that was turned off with the BeginUpdate function","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_EndUpdate ( $hWnd )\\r```"],"_GUICtrlComboBox_FindString":["Search for a string","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_FindString ( $hWnd, $sText [, $iIndex = -1] )\\r```"],"_GUICtrlComboBox_FindStringExact":["Search for a string","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_FindStringExact ( $hWnd, $sText [, $iIndex = -1] )\\r```"],"_GUICtrlComboBox_GetComboBoxInfo":["Gets information about the specified ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetComboBoxInfo ( $hWnd, ByRef $tInfo )\\r```"],"_GUICtrlComboBox_GetCount":["Retrieve the number of items","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetCount ( $hWnd )\\r```"],"_GUICtrlComboBox_GetCueBanner":["Gets the cue banner text displayed in the edit control of a combo box","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetCueBanner ( $hWnd )\\r```"],"_GUICtrlComboBox_GetCurSel":["Retrieve the index of the currently selected item","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetCurSel ( $hWnd )\\r```"],"_GUICtrlComboBox_GetDroppedControlRect":["Retrieve the screen coordinates of a combo box in its dropped-down state","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetDroppedControlRect ( $hWnd )\\r```"],"_GUICtrlComboBox_GetDroppedControlRectEx":["Retrieve the screen coordinates of a combo box in its dropped-down state","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetDroppedControlRectEx ( $hWnd )\\r```"],"_GUICtrlComboBox_GetDroppedState":["Determines whether the ListBox of a ComboBox is dropped down","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetDroppedState ( $hWnd )\\r```"],"_GUICtrlComboBox_GetDroppedWidth":["Retrieve the minimum allowable width, of the ListBox of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetDroppedWidth ( $hWnd )\\r```"],"_GUICtrlComboBox_GetEditSel":["Gets the starting and ending character positions of the current selection in the edit control of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetEditSel ( $hWnd )\\r```"],"_GUICtrlComboBox_GetEditText":["Get the text from the edit control of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetEditText ( $hWnd )\\r```"],"_GUICtrlComboBox_GetExtendedUI":["Determines whether a ComboBox has the default user interface or the extended user interface","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetExtendedUI ( $hWnd )\\r```"],"_GUICtrlComboBox_GetHorizontalExtent":["Gets the width, in pixels, that the ListBox of a ComboBox control can be scrolled horizontally","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetHorizontalExtent ( $hWnd )\\r```"],"_GUICtrlComboBox_GetItemHeight":["Determines the height of list items or the selection field in a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetItemHeight ( $hWnd [, $iIndex = -1] )\\r```"],"_GUICtrlComboBox_GetLBText":["Retrieve a string from the list of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetLBText ( $hWnd, $iIndex, ByRef $sText )\\r```"],"_GUICtrlComboBox_GetLBTextLen":["Gets the length, in characters, of a string in the list of a combo box","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetLBTextLen ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBox_GetList":["Retrieves all items from the list portion of a ComboBox control","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetList ( $hWnd )\\r```"],"_GUICtrlComboBox_GetListArray":["Retrieves all items from the list portion of a ComboBox control","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetListArray ( $hWnd )\\r```"],"_GUICtrlComboBox_GetLocale":["Retrieves the current locale","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetLocale ( $hWnd )\\r```"],"_GUICtrlComboBox_GetLocaleCountry":["Retrieves the current country code","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetLocaleCountry ( $hWnd )\\r```"],"_GUICtrlComboBox_GetLocaleLang":["Retrieves the current language identifier","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetLocaleLang ( $hWnd )\\r```"],"_GUICtrlComboBox_GetLocalePrimLang":["Extract primary language id from a language id","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetLocalePrimLang ( $hWnd )\\r```"],"_GUICtrlComboBox_GetLocaleSubLang":["Extract sublanguage id from a language id","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetLocaleSubLang ( $hWnd )\\r```"],"_GUICtrlComboBox_GetMinVisible":["Retrieve the minimum number of visible items in the drop-down list of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetMinVisible ( $hWnd )\\r```"],"_GUICtrlComboBox_GetTopIndex":["Retrieve the 0-based index of the first visible item in the ListBox portion of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_GetTopIndex ( $hWnd )\\r```"],"_GUICtrlComboBox_InitStorage":["Allocates memory for storing ListBox items","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_InitStorage ( $hWnd, $iNum, $iBytes )\\r```"],"_GUICtrlComboBox_InsertString":["Insert a string","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_InsertString ( $hWnd, $sText [, $iIndex = -1] )\\r```"],"_GUICtrlComboBox_LimitText":["Limits the length of the text the user may type into the edit control of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_LimitText ( $hWnd [, $iLimit = 0] )\\r```"],"_GUICtrlComboBox_ReplaceEditSel":["Replace text selected in edit box","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_ReplaceEditSel ( $hWnd, $sText )\\r```"],"_GUICtrlComboBox_ResetContent":["Remove all items from the ListBox and edit control of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_ResetContent ( $hWnd )\\r```"],"_GUICtrlComboBox_SelectString":["Searches the ListBox of a ComboBox for an item that begins with the characters in a specified string","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SelectString ( $hWnd, $sText [, $iIndex = -1] )\\r```"],"_GUICtrlComboBox_SetCueBanner":["Sets the cue banner text that is displayed for the edit control of a combo box","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetCueBanner ( $hWnd, $sText )\\r```"],"_GUICtrlComboBox_SetCurSel":["Select a string in the list of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetCurSel ( $hWnd [, $iIndex = -1] )\\r```"],"_GUICtrlComboBox_SetDroppedWidth":["Set the maximum allowable width, in pixels, of the ListBox of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetDroppedWidth ( $hWnd, $iWidth )\\r```"],"_GUICtrlComboBox_SetEditSel":["Select characters in the edit control of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetEditSel ( $hWnd, $iStart, $iStop )\\r```"],"_GUICtrlComboBox_SetEditText":["Set the text of the edit control of the ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetEditText ( $hWnd, $sText )\\r```"],"_GUICtrlComboBox_SetExtendedUI":["Select either the default user interface or the extended user interface","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetExtendedUI ( $hWnd [, $bExtended = False] )\\r```"],"_GUICtrlComboBox_SetHorizontalExtent":["Set the width, in pixels, by which a list box can be scrolled horizontally","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetHorizontalExtent ( $hWnd, $iWidth )\\r```"],"_GUICtrlComboBox_SetItemHeight":["Set the height of list items or the selection field in a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetItemHeight ( $hWnd, $iHeight [, $iComponent = -1] )\\r```"],"_GUICtrlComboBox_SetMinVisible":["Set the minimum number of visible items in the drop-down list of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetMinVisible ( $hWnd, $iMinimum )\\r```"],"_GUICtrlComboBox_SetTopIndex":["Ensure that a particular item is visible in the ListBox of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_SetTopIndex ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBox_ShowDropDown":["Show or hide the ListBox of a ComboBox","```\\r#include <GuiComboBox.au3>\\r_GUICtrlComboBox_ShowDropDown ( $hWnd [, $bShow = False] )\\r```"]}'),w=JSON.parse('{"_GUICtrlComboBoxEx_AddDir":["Adds the names of directories and files","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_AddDir ( $hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]] )\\r```"],"_GUICtrlComboBoxEx_AddString":["Add a string","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_AddString ( $hWnd, $sText [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]] )\\r```"],"_GUICtrlComboBoxEx_BeginUpdate":["Prevents updating of the control until the EndUpdate function is called","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_BeginUpdate ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_Create":["Create a ComboBoxEx control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_Create ( $hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 200 [, $iStyle = 0x00200002 [, $iExStyle = 0x00000000]]]] )\\r```"],"_GUICtrlComboBoxEx_CreateSolidBitMap":["Creates a solid color bitmap","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_CreateSolidBitMap ( $hWnd, $iColor, $iWidth, $iHeight )\\r```"],"_GUICtrlComboBoxEx_DeleteString":["Removes an item from a ComboBoxEx control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_DeleteString ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBoxEx_Destroy":["Delete the control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlComboBoxEx_EndUpdate":["Enables screen repainting that was turned off with the BeginUpdate function","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_EndUpdate ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_FindStringExact":["Search for a string","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_FindStringExact ( $hWnd, $sText [, $iIndex = -1] )\\r```"],"_GUICtrlComboBoxEx_GetComboBoxInfo":["Gets information about the specified ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetComboBoxInfo ( $hWnd, ByRef $tInfo )\\r```"],"_GUICtrlComboBoxEx_GetComboControl":["Gets the handle to the child combo box control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetComboControl ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetCount":["Retrieve the number of items","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetCount ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetCurSel":["Retrieve the index of the currently selected item","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetCurSel ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetDroppedControlRect":["Retrieve the screen coordinates of a combo box in its dropped-down state","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetDroppedControlRect ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetDroppedControlRectEx":["Retrieve the screen coordinates of a combo box in its dropped-down state","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetDroppedControlRectEx ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetDroppedState":["Determines whether the ListBox of a ComboBox is dropped down","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetDroppedState ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetDroppedWidth":["Retrieve the minimum allowable width, of the ListBox of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetDroppedWidth ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetEditControl":["Gets the handle to the edit control portion of a ComboBoxEx control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetEditControl ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetEditSel":["Gets the starting and ending character positions of the current selection in the edit control of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetEditSel ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetEditText":["Get the text from the edit control of a ComboBoxEx","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetEditText ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetExtendedStyle":["Gets the extended styles that are in use for a ComboBoxEx control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetExtendedStyle ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetExtendedUI":["Determines whether a ComboBox has the default user interface or the extended user interface","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetExtendedUI ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetImageList":["Retrieves the handle to an image list assigned to a ComboBoxEx control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetImageList ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetItem":["Retrieves an item\'s attributes","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItem ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBoxEx_GetItemEx":["Retrieves some or all of an item\'s attributes","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItemEx ( $hWnd, ByRef $tItem )\\r```"],"_GUICtrlComboBoxEx_GetItemHeight":["Determines the height of list items or the selection field in a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItemHeight ( $hWnd [, $iComponent = -1] )\\r```"],"_GUICtrlComboBoxEx_GetItemImage":["Retrieves the index of the item\'s icon","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItemImage ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBoxEx_GetItemIndent":["Retrieves the number of image widths the item is indented","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItemIndent ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBoxEx_GetItemOverlayImage":["Retrieves the index of the item\'s overlay image icon","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItemOverlayImage ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBoxEx_GetItemParam":["Retrieves the application specific value of the item","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItemParam ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBoxEx_GetItemSelectedImage":["Retrieves the index of the item\'s selected image icon","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItemSelectedImage ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBoxEx_GetItemText":["Retrieve a string from the list of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItemText ( $hWnd, $iIndex, ByRef $sText )\\r```"],"_GUICtrlComboBoxEx_GetItemTextLen":["Gets the length, in characters, of a string in the list of a combo box","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetItemTextLen ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBoxEx_GetList":["Retrieves all items from the list portion of a ComboBox control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetList ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetListArray":["Retrieves all items from the list portion of a ComboBox control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetListArray ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetLocale":["Retrieves the current locale","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetLocale ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetLocaleCountry":["Retrieves the current country code","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetLocaleCountry ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetLocaleLang":["Retrieves the current language identifier","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetLocaleLang ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetLocalePrimLang":["Extract primary language id from a language id","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetLocalePrimLang ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetLocaleSubLang":["Extract sublanguage id from a language id","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetLocaleSubLang ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetMinVisible":["Retrieve the minimum number of visible items in the drop-down list of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetMinVisible ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetTopIndex":["Retrieve the 0-based index of the first visible item in the ListBox portion of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetTopIndex ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_GetUnicode":["Retrieves if control is using Unicode","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_GetUnicode ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_InitStorage":["Allocates memory for storing ListBox items","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_InitStorage ( $hWnd, $iNum, $iBytes )\\r```"],"_GUICtrlComboBoxEx_InsertString":["Inserts a new item in the control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_InsertString ( $hWnd, $sText [, $iIndex = -1 [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]]] )\\r```"],"_GUICtrlComboBoxEx_LimitText":["Limits the length of the text the user may type into the edit control of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_LimitText ( $hWnd [, $iLimit = 0] )\\r```"],"_GUICtrlComboBoxEx_ReplaceEditSel":["Replace text selected in edit box","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_ReplaceEditSel ( $hWnd, $sText )\\r```"],"_GUICtrlComboBoxEx_ResetContent":["Removes all items","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_ResetContent ( $hWnd )\\r```"],"_GUICtrlComboBoxEx_SetCurSel":["Select a string in the list of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetCurSel ( $hWnd [, $iIndex = -1] )\\r```"],"_GUICtrlComboBoxEx_SetDroppedWidth":["Set the maximum allowable width, in pixels, of the ListBox of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetDroppedWidth ( $hWnd, $iWidth )\\r```"],"_GUICtrlComboBoxEx_SetEditSel":["Select characters in the edit control of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetEditSel ( $hWnd, $iStart, $iStop )\\r```"],"_GUICtrlComboBoxEx_SetEditText":["Set the text of the edit control of the ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetEditText ( $hWnd, $sText )\\r```"],"_GUICtrlComboBoxEx_SetExtendedStyle":["Sets extended styles within a ComboBoxEx control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetExtendedStyle ( $hWnd, $iExStyle [, $iExMask = 0] )\\r```"],"_GUICtrlComboBoxEx_SetExtendedUI":["Select either the default user interface or the extended user interface","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetExtendedUI ( $hWnd [, $bExtended = False] )\\r```"],"_GUICtrlComboBoxEx_SetImageList":["Sets an image list for a ComboBoxEx control","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetImageList ( $hWnd, $hHandle )\\r```"],"_GUICtrlComboBoxEx_SetItem":["Sets some or all of a item\'s attributes","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetItem ( $hWnd, $sText [, $iIndex = 0 [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]]] )\\r```"],"_GUICtrlComboBoxEx_SetItemEx":["Sets some or all of a item\'s attributes","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetItemEx ( $hWnd, ByRef $tItem )\\r```"],"_GUICtrlComboBoxEx_SetItemHeight":["Set the height of list items or the selection field in a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetItemHeight ( $hWnd, $iComponent, $iHeight )\\r```"],"_GUICtrlComboBoxEx_SetItemImage":["Sets the index of the item\'s icon in the control\'s image list","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetItemImage ( $hWnd, $iIndex, $iImage )\\r```"],"_GUICtrlComboBoxEx_SetItemIndent":["Sets the number of image widths to indent the item","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetItemIndent ( $hWnd, $iIndex, $iIndent )\\r```"],"_GUICtrlComboBoxEx_SetItemOverlayImage":["Sets the index of the item\'s overlay icon in the control\'s image list","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetItemOverlayImage ( $hWnd, $iIndex, $iImage )\\r```"],"_GUICtrlComboBoxEx_SetItemParam":["Sets the value specific to the item","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetItemParam ( $hWnd, $iIndex, $iParam )\\r```"],"_GUICtrlComboBoxEx_SetItemSelectedImage":["Sets the index of the item\'s overlay icon in the control\'s image list","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetItemSelectedImage ( $hWnd, $iIndex, $iImage )\\r```"],"_GUICtrlComboBoxEx_SetMinVisible":["Set the minimum number of visible items in the drop-down list of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetMinVisible ( $hWnd, $iMinimum )\\r```"],"_GUICtrlComboBoxEx_SetTopIndex":["Ensure that a particular item is visible in the ListBox of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetTopIndex ( $hWnd, $iIndex )\\r```"],"_GUICtrlComboBoxEx_SetUnicode":["Sets if control is using Unicode","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_SetUnicode ( $hWnd [, $bUnicode = True] )\\r```"],"_GUICtrlComboBoxEx_ShowDropDown":["Show or hide the ListBox of a ComboBox","```\\r#include <GuiComboBoxEx.au3>\\r_GUICtrlComboBoxEx_ShowDropDown ( $hWnd [, $bShow = False] )\\r```"]}'),y=JSON.parse('{"_GUICtrlDTP_Create":["Create a DTP control","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_Create ( $hWnd, $iX, $iY [, $iWidth = 120 [, $iHeight = 21 [, $iStyle = 0x00000000 [, $iExStyle = 0x00000000]]]] )\\r```"],"_GUICtrlDTP_Destroy":["Delete the control","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlDTP_GetMCColor":["Retrieves the specified color","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_GetMCColor ( $hWnd, $iIndex )\\r```"],"_GUICtrlDTP_GetMCFont":["Retrieves the month calendar font handle","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_GetMCFont ( $hWnd )\\r```"],"_GUICtrlDTP_GetMonthCal":["Retrieves the handle to child month calendar control","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_GetMonthCal ( $hWnd )\\r```"],"_GUICtrlDTP_GetRange":["Retrieves the current minimum and maximum allowable system times","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_GetRange ( $hWnd )\\r```"],"_GUICtrlDTP_GetRangeEx":["Retrieves the current minimum and maximum allowable system times","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_GetRangeEx ( $hWnd )\\r```"],"_GUICtrlDTP_GetSystemTime":["Retrieves the currently selected date and time","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_GetSystemTime ( $hWnd )\\r```"],"_GUICtrlDTP_GetSystemTimeEx":["Retrieves the currently selected date and time","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_GetSystemTimeEx ( $hWnd )\\r```"],"_GUICtrlDTP_SetFormat":["Sets the display based on a given format string","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_SetFormat ( $hWnd, $sFormat )\\r```"],"_GUICtrlDTP_SetMCColor":["Sets the color for a given portion of the month calendar","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_SetMCColor ( $hWnd, $iIndex, $iColor )\\r```"],"_GUICtrlDTP_SetMCFont":["Sets the month calendar font","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_SetMCFont ( $hWnd, $hFont [, $bRedraw = True] )\\r```"],"_GUICtrlDTP_SetRange":["Sets the current minimum and maximum allowable system times","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_SetRange ( $hWnd, ByRef $aRange )\\r```"],"_GUICtrlDTP_SetRangeEx":["Sets the current minimum and maximum allowable system times","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_SetRangeEx ( $hWnd, ByRef $tRange )\\r```"],"_GUICtrlDTP_SetSystemTime":["Sets the currently selected date and time","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_SetSystemTime ( $hWnd, ByRef $aDate )\\r```"],"_GUICtrlDTP_SetSystemTimeEx":["Sets the currently selected date and time","```\\r#include <GuiDateTimePicker.au3>\\r_GUICtrlDTP_SetSystemTimeEx ( $hWnd, ByRef $tDate [, $bFlag = False] )\\r```"]}'),A=JSON.parse('{"_GUICtrlEdit_AppendText":["Append text","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_AppendText ( $hWnd, $sText )\\r```"],"_GUICtrlEdit_BeginUpdate":["Prevents updating of the control until the _GUICtrlEdit_EndUpdate function is called","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_BeginUpdate ( $hWnd )\\r```"],"_GUICtrlEdit_CanUndo":["Determines whether there are any actions in an edit control\'s undo queue","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_CanUndo ( $hWnd )\\r```"],"_GUICtrlEdit_CharFromPos":["Retrieve information about the character closest to a specified point in the client area","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_CharFromPos ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlEdit_Create":["Create an Edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_Create ( $hWnd, $sText, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x003010C4 [, $iExStyle = 0x00000200]]]] )\\r```"],"_GUICtrlEdit_Destroy":["Delete the Edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlEdit_EmptyUndoBuffer":["Resets the undo flag of an edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_EmptyUndoBuffer ( $hWnd )\\r```"],"_GUICtrlEdit_EndUpdate":["Enables screen repainting that was turned off with the _GUICtrlEdit_BeginUpdate function","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_EndUpdate ( $hWnd )\\r```"],"_GUICtrlEdit_Find":["Initiates a find dialog","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_Find ( $hWnd [, $bReplace = False] )\\r```"],"_GUICtrlEdit_FmtLines":["Determines whether an edit control includes soft line-break characters","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_FmtLines ( $hWnd [, $bSoftBreak = False] )\\r```"],"_GUICtrlEdit_GetCueBanner":["Gets the cue banner text displayed in the edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetCueBanner ( $hWnd )\\r```"],"_GUICtrlEdit_GetFirstVisibleLine":["Retrieves the 0-based index of the uppermost visible line in a multiline edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetFirstVisibleLine ( $hWnd )\\r```"],"_GUICtrlEdit_GetLimitText":["Gets the current text limit for an edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetLimitText ( $hWnd )\\r```"],"_GUICtrlEdit_GetLine":["Retrieves a line of text from an edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetLine ( $hWnd, $iLine )\\r```"],"_GUICtrlEdit_GetLineCount":["Retrieves the number of lines","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetLineCount ( $hWnd )\\r```"],"_GUICtrlEdit_GetMargins":["Retrieves the widths of the left and right margins","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetMargins ( $hWnd )\\r```"],"_GUICtrlEdit_GetModify":["Retrieves the state of an edit control\'s modification flag","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetModify ( $hWnd )\\r```"],"_GUICtrlEdit_GetPasswordChar":["Gets the password character that an edit control displays when the user enters text","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetPasswordChar ( $hWnd )\\r```"],"_GUICtrlEdit_GetRECT":["Retrieves the formatting rectangle of an edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetRECT ( $hWnd )\\r```"],"_GUICtrlEdit_GetRECTEx":["Retrieves the formatting rectangle of an edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetRECTEx ( $hWnd )\\r```"],"_GUICtrlEdit_GetSel":["Retrieves the starting and ending character positions of the current selection","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetSel ( $hWnd )\\r```"],"_GUICtrlEdit_GetText":["Get the text from the edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetText ( $hWnd )\\r```"],"_GUICtrlEdit_GetTextLen":["Get the length of all the text from the edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_GetTextLen ( $hWnd )\\r```"],"_GUICtrlEdit_HideBalloonTip":["Hides any balloon tip associated with an edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_HideBalloonTip ( $hWnd )\\r```"],"_GUICtrlEdit_InsertText":["Insert text","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_InsertText ( $hWnd, $sText [, $iIndex = -1] )\\r```"],"_GUICtrlEdit_LineFromChar":["Retrieves the index of the line that contains the specified character index","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_LineFromChar ( $hWnd [, $iIndex = -1] )\\r```"],"_GUICtrlEdit_LineIndex":["Retrieves the character index of the first character of a specified line","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_LineIndex ( $hWnd [, $iIndex = -1] )\\r```"],"_GUICtrlEdit_LineLength":["Retrieves the length, in characters, of a line","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_LineLength ( $hWnd [, $iIndex = -1] )\\r```"],"_GUICtrlEdit_LineScroll":["Scrolls the text","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_LineScroll ( $hWnd, $iHoriz, $iVert )\\r```"],"_GUICtrlEdit_PosFromChar":["Retrieves the client area coordinates of a specified character in an edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_PosFromChar ( $hWnd, $iIndex )\\r```"],"_GUICtrlEdit_ReplaceSel":["Replaces the current selection","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_ReplaceSel ( $hWnd, $sText [, $bUndo = True] )\\r```"],"_GUICtrlEdit_Scroll":["Scrolls the text vertically","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_Scroll ( $hWnd, $iDirection )\\r```"],"_GUICtrlEdit_SetCueBanner":["Sets the cue banner text that is displayed for the edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetCueBanner ( $hWnd, $sText [, $bOnFocus = False] )\\r```"],"_GUICtrlEdit_SetLimitText":["Sets the text limit","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetLimitText ( $hWnd, $iLimit )\\r```"],"_GUICtrlEdit_SetMargins":["Sets the widths of the left and right margins","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetMargins ( $hWnd [, $iMargin = 0x1 [, $iLeft = 0xFFFF [, $iRight = 0xFFFF]]] )\\r```"],"_GUICtrlEdit_SetModify":["Sets or clears the modification flag","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetModify ( $hWnd, $bModified )\\r```"],"_GUICtrlEdit_SetPasswordChar":["Sets or removes the password character for an edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetPasswordChar ( $hWnd [, $sDisplayChar = \\"0\\"] )\\r```"],"_GUICtrlEdit_SetReadOnly":["Sets or removes the read-only style ($ES_READONLY)","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetReadOnly ( $hWnd, $bReadOnly )\\r```"],"_GUICtrlEdit_SetRECT":["Sets the formatting rectangle of a multiline edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetRECT ( $hWnd, $aRect )\\r```"],"_GUICtrlEdit_SetRECTEx":["Sets the formatting rectangle of a multiline edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetRECTEx ( $hWnd, $tRECT )\\r```"],"_GUICtrlEdit_SetRECTNP":["Sets the formatting rectangle of a multiline edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetRECTNP ( $hWnd, $aRect )\\r```"],"_GUICtrlEdit_SetRectNPEx":["Sets the formatting rectangle of a multiline edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetRectNPEx ( $hWnd, $tRECT )\\r```"],"_GUICtrlEdit_SetSel":["Selects a range of characters","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetSel ( $hWnd, $iStart, $iEnd )\\r```"],"_GUICtrlEdit_SetTabStops":["Sets the tab stops","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetTabStops ( $hWnd, $aTabStops )\\r```"],"_GUICtrlEdit_SetText":["Set the text","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_SetText ( $hWnd, $sText )\\r```"],"_GUICtrlEdit_ShowBalloonTip":["Displays a balloon tip associated with an edit control","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_ShowBalloonTip ( $hWnd, $sTitle, $sText, $iIcon )\\r```"],"_GUICtrlEdit_Undo":["Undoes the last edit control operation in the control\'s undo queue","```\\r#include <GuiEdit.au3>\\r_GUICtrlEdit_Undo ( $hWnd )\\r```"]}'),D=JSON.parse('{"_GUICtrlHeader_AddItem":["Adds a new header item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_AddItem ( $hWnd, $sText [, $iWidth = 50 [, $iAlign = 0 [, $iImage = -1 [, $bOnRight = False]]]] )\\r```"],"_GUICtrlHeader_ClearFilter":["Clears the filter","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_ClearFilter ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_ClearFilterAll":["Clears all of the filters","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_ClearFilterAll ( $hWnd )\\r```"],"_GUICtrlHeader_Create":["Creates a Header control","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_Create ( $hWnd [, $iStyle = 0x00000046] )\\r```"],"_GUICtrlHeader_CreateDragImage":["Creates a semi-transparent version of an item\'s image for use as a dragging image","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_CreateDragImage ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_DeleteItem":["Deletes a header item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_DeleteItem ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_Destroy":["Delete the Header control","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlHeader_EditFilter":["Starts editing the specified filter","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_EditFilter ( $hWnd, $iIndex [, $bDiscard = True] )\\r```"],"_GUICtrlHeader_GetBitmapMargin":["Retrieves the width of the bitmap margin","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetBitmapMargin ( $hWnd )\\r```"],"_GUICtrlHeader_GetImageList":["Retrieves the handle to the image list","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetImageList ( $hWnd )\\r```"],"_GUICtrlHeader_GetItem":["Retrieves information about an item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItem ( $hWnd, $iIndex, ByRef $tItem )\\r```"],"_GUICtrlHeader_GetItemAlign":["Retrieves the item text alignment","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemAlign ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemBitmap":["Retrieves the item bitmap handle","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemBitmap ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemCount":["Retrieves a count of the items","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemCount ( $hWnd )\\r```"],"_GUICtrlHeader_GetItemDisplay":["Returns the item display information","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemDisplay ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemFlags":["Returns the item flag information","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemFlags ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemFormat":["Returns the format of the item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemFormat ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemImage":["Retrieves the index of an image within the image list","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemImage ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemOrder":["Retrieves the order in which the item appears","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemOrder ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemParam":["Retrieves the param value of the item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemParam ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemRect":["Retrieves the bounding rectangle for a given item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemRect ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemRectEx":["Retrieves the bounding rectangle for a given item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemRectEx ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemText":["Retrieves the item text","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemText ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetItemWidth":["Retrieves the item\'s width","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetItemWidth ( $hWnd, $iIndex )\\r```"],"_GUICtrlHeader_GetOrderArray":["Retrieves the current left-to-right order of items in a header control","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetOrderArray ( $hWnd )\\r```"],"_GUICtrlHeader_GetUnicodeFormat":["Retrieves the Unicode character format flag for the control","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_GetUnicodeFormat ( $hWnd )\\r```"],"_GUICtrlHeader_HitTest":["Tests a point to determine which item is at the specified point","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_HitTest ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlHeader_InsertItem":["Inserts a new header item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_InsertItem ( $hWnd, $iIndex, $sText [, $iWidth = 50 [, $iAlign = 0 [, $iImage = -1 [, $bOnRight = False]]]] )\\r```"],"_GUICtrlHeader_Layout":["Retrieves the correct size and position of the control","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_Layout ( $hWnd, ByRef $tRECT )\\r```"],"_GUICtrlHeader_OrderToIndex":["Retrieves an index value for an item based on its order","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_OrderToIndex ( $hWnd, $iOrder )\\r```"],"_GUICtrlHeader_SetBitmapMargin":["Sets the width of the margin, specified in pixels, of a bitmap","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetBitmapMargin ( $hWnd, $iWidth )\\r```"],"_GUICtrlHeader_SetFilterChangeTimeout":["Sets the filter change timeout interval","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetFilterChangeTimeout ( $hWnd, $iTimeOut )\\r```"],"_GUICtrlHeader_SetHotDivider":["Changes the hot divider color","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetHotDivider ( $hWnd, $iFlag, $iInputValue )\\r```"],"_GUICtrlHeader_SetImageList":["Assigns an image list","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetImageList ( $hWnd, $hImage )\\r```"],"_GUICtrlHeader_SetItem":["Sets information about an item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItem ( $hWnd, $iIndex, ByRef $tItem )\\r```"],"_GUICtrlHeader_SetItemAlign":["Sets the item text alignment","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemAlign ( $hWnd, $iIndex, $iAlign )\\r```"],"_GUICtrlHeader_SetItemBitmap":["Sets the item bitmap handle","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemBitmap ( $hWnd, $iIndex, $hBitmap )\\r```"],"_GUICtrlHeader_SetItemDisplay":["Returns the item display information","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemDisplay ( $hWnd, $iIndex, $iDisplay )\\r```"],"_GUICtrlHeader_SetItemFlags":["Returns the item flag information","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemFlags ( $hWnd, $iIndex, $iFlags )\\r```"],"_GUICtrlHeader_SetItemFormat":["Sets the format of the item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemFormat ( $hWnd, $iIndex, $iFormat )\\r```"],"_GUICtrlHeader_SetItemImage":["Sets the index of an image within the image list","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemImage ( $hWnd, $iIndex, $iImage )\\r```"],"_GUICtrlHeader_SetItemOrder":["Sets the order in which the item appears","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemOrder ( $hWnd, $iIndex, $iOrder )\\r```"],"_GUICtrlHeader_SetItemParam":["Sets the param value of the item","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemParam ( $hWnd, $iIndex, $iParam )\\r```"],"_GUICtrlHeader_SetItemText":["Sets the item text","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemText ( $hWnd, $iIndex, $sText )\\r```"],"_GUICtrlHeader_SetItemWidth":["Sets the item\'s width","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetItemWidth ( $hWnd, $iIndex, $iWidth )\\r```"],"_GUICtrlHeader_SetOrderArray":["Sets the current left-to-right order of items","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetOrderArray ( $hWnd, ByRef $aOrder )\\r```"],"_GUICtrlHeader_SetUnicodeFormat":["Sets the Unicode character format flag for the control","```\\r#include <GuiHeader.au3>\\r_GUICtrlHeader_SetUnicodeFormat ( $hWnd, $bUnicode )\\r```"]}'),W=JSON.parse('{"_GUIImageList_Add":["Adds an image or images to an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_Add ( $hWnd, $hImage [, $hMask = 0] )\\r```"],"_GUIImageList_AddBitmap":["Adds a bitmap to an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_AddBitmap ( $hWnd, $sImage [, $sMask = \\"\\"] )\\r```"],"_GUIImageList_AddIcon":["Adds an icon to an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_AddIcon ( $hWnd, $sFilePath [, $iIndex = 0 [, $bLarge = False]] )\\r```"],"_GUIImageList_AddMasked":["Adds an image or images to an image list, generating a mask from the specified bitmap","```\\r#include <GuiImageList.au3>\\r_GUIImageList_AddMasked ( $hWnd, $hImage [, $iMask = 0] )\\r```"],"_GUIImageList_BeginDrag":["Begins dragging an image","```\\r#include <GuiImageList.au3>\\r_GUIImageList_BeginDrag ( $hWnd, $iTrack, $iXHotSpot, $iYHotSpot )\\r```"],"_GUIImageList_Copy":["Source image is copied to the destination image\'s index","```\\r#include <GuiImageList.au3>\\r_GUIImageList_Copy ( $hWnd, $iSource, $iDestination )\\r```"],"_GUIImageList_Create":["Create an ImageList control","```\\r#include <GuiImageList.au3>\\r_GUIImageList_Create ( [$iCX = 16 [, $iCY = 16 [, $iColor = 4 [, $iOptions = 0 [, $iInitial = 4 [, $iGrow = 4]]]]]] )\\r```"],"_GUIImageList_Destroy":["Destroys an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_Destroy ( $hWnd )\\r```"],"_GUIImageList_DestroyIcon":["Destroys an icon and frees any memory the icon occupied","```\\r#include <GuiImageList.au3>\\r_GUIImageList_DestroyIcon ( $hIcon )\\r```"],"_GUIImageList_DragEnter":["Displays the drag image at the specified position within the window","```\\r#include <GuiImageList.au3>\\r_GUIImageList_DragEnter ( $hWnd, $iX, $iY )\\r```"],"_GUIImageList_DragLeave":["Unlocks the specified window and hides the drag image, allowing the window to be updated","```\\r#include <GuiImageList.au3>\\r_GUIImageList_DragLeave ( $hWnd )\\r```"],"_GUIImageList_DragMove":["Moves the image that is being dragged during a drag-and-drop operation","```\\r#include <GuiImageList.au3>\\r_GUIImageList_DragMove ( $iX, $iY )\\r```"],"_GUIImageList_Draw":["Draws an image list item in the specified device context","```\\r#include <GuiImageList.au3>\\r_GUIImageList_Draw ( $hWnd, $iIndex, $hDC, $iX, $iY [, $iStyle = 0] )\\r```"],"_GUIImageList_DrawEx":["Draws an image list item in the specified device context","```\\r#include <GuiImageList.au3>\\r_GUIImageList_DrawEx ( $hWnd, $iIndex, $hDC, $iX, $iY [, $iDX = 0 [, $iDY = 0 [, $iRGBBk = 0xFFFFFFFF [, $iRGBFg = 0xFFFFFFFF [, $iStyle = 0]]]]] )\\r```"],"_GUIImageList_Duplicate":["Creates a duplicate of an existing image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_Duplicate ( $hWnd )\\r```"],"_GUIImageList_EndDrag":["Ends a drag operation","```\\r#include <GuiImageList.au3>\\r_GUIImageList_EndDrag ( )\\r```"],"_GUIImageList_GetBkColor":["Retrieves the current background color for an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_GetBkColor ( $hWnd )\\r```"],"_GUIImageList_GetIcon":["Creates an icon from an image and mask in an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_GetIcon ( $hWnd, $iIndex [, $iStyle = 0] )\\r```"],"_GUIImageList_GetIconHeight":["Retrieves the height of the images in an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_GetIconHeight ( $hWnd )\\r```"],"_GUIImageList_GetIconSize":["Retrieves the dimensions of images in an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_GetIconSize ( $hWnd )\\r```"],"_GUIImageList_GetIconSizeEx":["Retrieves the dimensions of images in an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_GetIconSizeEx ( $hWnd )\\r```"],"_GUIImageList_GetIconWidth":["Retrieves the width of the images in an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_GetIconWidth ( $hWnd )\\r```"],"_GUIImageList_GetImageCount":["Retrieves the number of images in an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_GetImageCount ( $hWnd )\\r```"],"_GUIImageList_GetImageInfoEx":["Retrieves information about an image","```\\r#include <GuiImageList.au3>\\r_GUIImageList_GetImageInfoEx ( $hWnd, $iIndex )\\r```"],"_GUIImageList_Remove":["Remove Image(s) from the ImageList","```\\r#include <GuiImageList.au3>\\r_GUIImageList_Remove ( $hWnd [, $iIndex = -1] )\\r```"],"_GUIImageList_ReplaceIcon":["Replaces an image with an icon or cursor","```\\r#include <GuiImageList.au3>\\r_GUIImageList_ReplaceIcon ( $hWnd, $iIndex, $hIcon )\\r```"],"_GUIImageList_SetBkColor":["Sets the background color for an image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_SetBkColor ( $hWnd, $iClrBk )\\r```"],"_GUIImageList_SetIconSize":["Sets the dimensions of images in an image list and removes all images from the list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_SetIconSize ( $hWnd, $iCX, $iCY )\\r```"],"_GUIImageList_SetImageCount":["Resizes an existing image list","```\\r#include <GuiImageList.au3>\\r_GUIImageList_SetImageCount ( $hWnd, $iNewCount )\\r```"],"_GUIImageList_Swap":["Swap image between Source and Destination image\'s index","```\\r#include <GuiImageList.au3>\\r_GUIImageList_Swap ( $hWnd, $iSource, $iDestination )\\r```"]}'),E=JSON.parse('{"_GUICtrlIpAddress_ClearAddress":["Clears the contents of the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_ClearAddress ( $hWnd )\\r```"],"_GUICtrlIpAddress_Create":["Create a GUI IP Address Control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_Create ( $hWnd, $iX, $iY [, $iWidth = 125 [, $iHeight = 25 [, $iStyles = 0x00000000 [, $iExstyles = 0x00000000]]]] )\\r```"],"_GUICtrlIpAddress_Destroy":["Delete the IP Address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlIpAddress_Get":["Retrieves the address from the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_Get ( $hWnd )\\r```"],"_GUICtrlIpAddress_GetArray":["Retrieves the address from the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_GetArray ( $hWnd )\\r```"],"_GUICtrlIpAddress_GetEx":["Retrieves the address from the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_GetEx ( $hWnd )\\r```"],"_GUICtrlIpAddress_IsBlank":["Determines if all fields in the IP address control are blank","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_IsBlank ( $hWnd )\\r```"],"_GUICtrlIpAddress_Set":["Sets the address in the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_Set ( $hWnd, $sAddress )\\r```"],"_GUICtrlIpAddress_SetArray":["Sets the address in the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_SetArray ( $hWnd, $aAddress )\\r```"],"_GUICtrlIpAddress_SetEx":["Sets the address in the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_SetEx ( $hWnd, $tIP )\\r```"],"_GUICtrlIpAddress_SetFocus":["Sets the keyboard focus to the specified field in the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_SetFocus ( $hWnd, $iIndex )\\r```"],"_GUICtrlIpAddress_SetFont":["Set font of the control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_SetFont ( $hWnd [, $sFaceName = \\"Arial\\" [, $iFontSize = 12 [, $iFontWeight = 400 [, $bFontItalic = False]]]] )\\r```"],"_GUICtrlIpAddress_SetRange":["Sets the valid range for the specified field in the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_SetRange ( $hWnd, $iIndex [, $iLowRange = 0 [, $iHighRange = 255]] )\\r```"],"_GUICtrlIpAddress_ShowHide":["Shows/Hides the IP address control","```\\r#include <GuiIPAddress.au3>\\r_GUICtrlIpAddress_ShowHide ( $hWnd, $iState )\\r```"]}'),R=JSON.parse('{"_GUICtrlListBox_AddFile":["Adds the specified filename that contains a directory listing","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_AddFile ( $hWnd, $sFilePath )\\r```"],"_GUICtrlListBox_AddString":["Add a string","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_AddString ( $hWnd, $sText )\\r```"],"_GUICtrlListBox_BeginUpdate":["Prevents updating of the control until the EndUpdate function is called","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_BeginUpdate ( $hWnd )\\r```"],"_GUICtrlListBox_ClickItem":["Clicks an item","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_ClickItem ( $hWnd, $iIndex [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 0]]]] )\\r```"],"_GUICtrlListBox_Create":["Create a Listbox control","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_Create ( $hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 200 [, $iStyle = 0x00B00002 [, $iExStyle = 0x00000200]]]] )\\r```"],"_GUICtrlListBox_DeleteString":["Delete a string","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_DeleteString ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_Destroy":["Delete the control","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlListBox_Dir":["Adds the names of directories and files","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_Dir ( $hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]] )\\r```"],"_GUICtrlListBox_EndUpdate":["Enables screen repainting that was turned off with the BeginUpdate function","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_EndUpdate ( $hWnd )\\r```"],"_GUICtrlListBox_FindInText":["Searches for an item that contains the specified text anywhere in its text","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_FindInText ( $hWnd, $sText [, $iStart = -1 [, $bWrapOK = True]] )\\r```"],"_GUICtrlListBox_FindString":["Search for a string","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_FindString ( $hWnd, $sText [, $bExact = False] )\\r```"],"_GUICtrlListBox_GetAnchorIndex":["Retrieves the index of the anchor item","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetAnchorIndex ( $hWnd )\\r```"],"_GUICtrlListBox_GetCaretIndex":["Return index of item that has the focus rectangle","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetCaretIndex ( $hWnd )\\r```"],"_GUICtrlListBox_GetCount":["Retrieves the number of items","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetCount ( $hWnd )\\r```"],"_GUICtrlListBox_GetCurSel":["Retrieve the index of the currently selected item","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetCurSel ( $hWnd )\\r```"],"_GUICtrlListBox_GetHorizontalExtent":["Retrieve from a list box the the scrollable width","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetHorizontalExtent ( $hWnd )\\r```"],"_GUICtrlListBox_GetItemData":["Retrieves the application defined value associated with an item","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetItemData ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_GetItemHeight":["Retrieves the height of items","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetItemHeight ( $hWnd )\\r```"],"_GUICtrlListBox_GetItemRect":["Retrieves the rectangle that bounds an item","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetItemRect ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_GetItemRectEx":["Retrieves the rectangle that bounds an item","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetItemRectEx ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_GetListBoxInfo":["Retrieve the number of items per column in a specified list box","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetListBoxInfo ( $hWnd )\\r```"],"_GUICtrlListBox_GetLocale":["Retrieves the current locale","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetLocale ( $hWnd )\\r```"],"_GUICtrlListBox_GetLocaleCountry":["Retrieves the current country code","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetLocaleCountry ( $hWnd )\\r```"],"_GUICtrlListBox_GetLocaleLang":["Retrieves the current language identifier","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetLocaleLang ( $hWnd )\\r```"],"_GUICtrlListBox_GetLocalePrimLang":["Extract primary language id from a language id","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetLocalePrimLang ( $hWnd )\\r```"],"_GUICtrlListBox_GetLocaleSubLang":["Extract sublanguage id from a language id","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetLocaleSubLang ( $hWnd )\\r```"],"_GUICtrlListBox_GetSel":["Retrieves the selection state of an item","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetSel ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_GetSelCount":["Retrieves the total number of selected items","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetSelCount ( $hWnd )\\r```"],"_GUICtrlListBox_GetSelItems":["Fills a buffer with an array of selected items","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetSelItems ( $hWnd )\\r```"],"_GUICtrlListBox_GetSelItemsText":["Retrieves the text of selected items","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetSelItemsText ( $hWnd )\\r```"],"_GUICtrlListBox_GetText":["Returns the item (string) at the specified index","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetText ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_GetTextLen":["Gets the length of a string in a list box","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetTextLen ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_GetTopIndex":["Retrieve the index of the first visible item in a list","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_GetTopIndex ( $hWnd )\\r```"],"_GUICtrlListBox_InitStorage":["This message allocates memory for storing items","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_InitStorage ( $hWnd, $iItems, $iBytes )\\r```"],"_GUICtrlListBox_InsertString":["Insert a string into the list","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_InsertString ( $hWnd, $sText [, $iIndex = -1] )\\r```"],"_GUICtrlListBox_ItemFromPoint":["Retrieves the 0-based index of the item nearest the specified point","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_ItemFromPoint ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlListBox_ReplaceString":["Replaces the text of an item","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_ReplaceString ( $hWnd, $iIndex, $sText )\\r```"],"_GUICtrlListBox_ResetContent":["Remove all items from the list box","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_ResetContent ( $hWnd )\\r```"],"_GUICtrlListBox_SelectString":["Searchs for an item that begins with the specified string","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SelectString ( $hWnd, $sText [, $iIndex = -1] )\\r```"],"_GUICtrlListBox_SelItemRange":["Select one or more consecutive items in a multiple-selection list box","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SelItemRange ( $hWnd, $iFirst, $iLast [, $bSelect = True] )\\r```"],"_GUICtrlListBox_SelItemRangeEx":["Select one or more consecutive items in a multiple-selection list box","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SelItemRangeEx ( $hWnd, $iFirst, $iLast )\\r```"],"_GUICtrlListBox_SetAnchorIndex":["Set the anchor item—that is, the item from which a multiple selection starts","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetAnchorIndex ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_SetCaretIndex":["Set the focus rectangle to the item at the specified index in a multiple-selection list box","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetCaretIndex ( $hWnd, $iIndex [, $bPartial = False] )\\r```"],"_GUICtrlListBox_SetColumnWidth":["Set the width, in pixels, of all columns","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetColumnWidth ( $hWnd, $iWidth )\\r```"],"_GUICtrlListBox_SetCurSel":["Select a string and scroll it into view, if necessary","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetCurSel ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_SetHorizontalExtent":["Set the width, in pixels, by which a list box can be scrolled horizontally","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetHorizontalExtent ( $hWnd, $iWidth )\\r```"],"_GUICtrlListBox_SetItemData":["Sets the value associated with the specified item","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetItemData ( $hWnd, $iIndex, $iValue )\\r```"],"_GUICtrlListBox_SetItemHeight":["Sets the height, in pixels, of items","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetItemHeight ( $hWnd, $iHeight [, $iIndex = 0] )\\r```"],"_GUICtrlListBox_SetLocale":["Set the current locale","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetLocale ( $hWnd, $iLocal )\\r```"],"_GUICtrlListBox_SetSel":["Select a string(s) in a multiple-selection list box","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetSel ( $hWnd [, $iIndex = -1 [, $iSelect = -1]] )\\r```"],"_GUICtrlListBox_SetTabStops":["Sets the tab-stop positions","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetTabStops ( $hWnd, $aTabStops )\\r```"],"_GUICtrlListBox_SetTopIndex":["Ensure that a particular item in a list box is visible","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SetTopIndex ( $hWnd, $iIndex )\\r```"],"_GUICtrlListBox_Sort":["Re-sorts list box if it has the $LBS_SORT style","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_Sort ( $hWnd )\\r```"],"_GUICtrlListBox_SwapString":["Swaps the text of two items at the specified indices","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_SwapString ( $hWnd, $iIndexA, $iIndexB )\\r```"],"_GUICtrlListBox_UpdateHScroll":["Update the horizontal scroll bar based on the longest string","```\\r#include <GuiListBox.au3>\\r_GUICtrlListBox_UpdateHScroll ( $hWnd )\\r```"]}'),x=JSON.parse('{"_GUICtrlListView_AddArray":["Adds items from an array to the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_AddArray ( $hWnd, ByRef $aItems )\\r```"],"_GUICtrlListView_AddColumn":["Adds a new column in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_AddColumn ( $hWnd, $sText [, $iWidth = 50 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]] )\\r```"],"_GUICtrlListView_AddItem":["Adds a new item to the end of the list","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_AddItem ( $hWnd, $sText [, $iImage = -1 [, $iParam = 0]] )\\r```"],"_GUICtrlListView_AddSubItem":["Adds a new subitem to the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_AddSubItem ( $hWnd, $iIndex, $sText, $iSubItem [, $iImage = -1] )\\r```"],"_GUICtrlListView_ApproximateViewHeight":["Calculates the approximate height required to display a given number of items","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_ApproximateViewHeight ( $hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]] )\\r```"],"_GUICtrlListView_ApproximateViewRect":["Calculates the approximate size required to display a given number of items","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_ApproximateViewRect ( $hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]] )\\r```"],"_GUICtrlListView_ApproximateViewWidth":["Calculates the approximate width required to display a given number of items","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_ApproximateViewWidth ( $hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]] )\\r```"],"_GUICtrlListView_Arrange":["Arranges items in icon view","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_Arrange ( $hWnd [, $iArrange = 0] )\\r```"],"_GUICtrlListView_BeginUpdate":["Prevents updating of the control until the _GUICtrlListView_EndUpdate() function is called","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_BeginUpdate ( $hWnd )\\r```"],"_GUICtrlListView_CancelEditLabel":["Cancels an item text editing operation","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_CancelEditLabel ( $hWnd )\\r```"],"_GUICtrlListView_ClickItem":["Clicks an item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_ClickItem ( $hWnd, $iIndex [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )\\r```"],"_GUICtrlListView_CopyItems":["Copy Items between 2 list-view controls","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_CopyItems ( $hWnd_Source, $hWnd_Destination [, $bDelFlag = False] )\\r```"],"_GUICtrlListView_Create":["Create a ListView control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_Create ( $hWnd, $sHeaderText, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x0000000D [, $iExStyle = 0x00000000 [, $bCoInit = False]]]]] )\\r```"],"_GUICtrlListView_CreateDragImage":["Creates a drag image list for the specified item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_CreateDragImage ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_CreateSolidBitMap":["Creates a solid color bitmap","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_CreateSolidBitMap ( $hWnd, $iColor, $iWidth, $iHeight )\\r```"],"_GUICtrlListView_DeleteAllItems":["Removes all items from a list-view control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_DeleteAllItems ( $hWnd )\\r```"],"_GUICtrlListView_DeleteColumn":["Removes a column from a list-view control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_DeleteColumn ( $hWnd, $iCol )\\r```"],"_GUICtrlListView_DeleteItem":["Removes an item from a list-view control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_DeleteItem ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_DeleteItemsSelected":["Deletes item(s) selected","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_DeleteItemsSelected ( $hWnd )\\r```"],"_GUICtrlListView_Destroy":["Delete the listview control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlListView_DrawDragImage":["Draw the Drag Image","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_DrawDragImage ( ByRef $hWnd, ByRef $aDrag )\\r```"],"_GUICtrlListView_EditLabel":["Begins in place editing of the specified item text","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_EditLabel ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_EnableGroupView":["Enables or disables whether the items in the control display as a group","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_EnableGroupView ( $hWnd [, $bEnable = True] )\\r```"],"_GUICtrlListView_EndUpdate":["Enables screen repainting that was turned off with the _GUICtrlListView_BeginUpdate() function","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_EndUpdate ( $hWnd )\\r```"],"_GUICtrlListView_EnsureVisible":["Ensures that a list-view item is either entirely or partially visible","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_EnsureVisible ( $hWnd, $iIndex [, $bPartialOK = False] )\\r```"],"_GUICtrlListView_FindInText":["Searches for an item that contains the specified text anywhere in its text","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_FindInText ( $hWnd, $sText [, $iStart = -1 [, $bWrapOK = True [, $bReverse = False]]] )\\r```"],"_GUICtrlListView_FindItem":["Searches for an item with the specified characteristics","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_FindItem ( $hWnd, $iStart, ByRef $tFindInfo [, $sText = \\"\\"] )\\r```"],"_GUICtrlListView_FindNearest":["Finds the item nearest to the position specified","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_FindNearest ( $hWnd, $iX, $iY [, $iDir = 0 [, $iStart = -1 [, $bWrapOK = True]]] )\\r```"],"_GUICtrlListView_FindParam":["Searches for an item with the specified lParam","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_FindParam ( $hWnd, $iParam [, $iStart = -1] )\\r```"],"_GUICtrlListView_FindText":["Searches for an item with the specified text","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_FindText ( $hWnd, $sText [, $iStart = -1 [, $bPartialOK = True [, $bWrapOK = True]]] )\\r```"],"_GUICtrlListView_GetBkColor":["Retrieves the background color of a list-view control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetBkColor ( $hWnd )\\r```"],"_GUICtrlListView_GetBkImage":["Retrieves the background image in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetBkImage ( $hWnd )\\r```"],"_GUICtrlListView_GetCallbackMask":["Retrieves the callback mask for the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetCallbackMask ( $hWnd )\\r```"],"_GUICtrlListView_GetColumn":["Retrieves the attributes of a column","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetColumn ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetColumnCount":["Retrieve the number of columns","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetColumnCount ( $hWnd )\\r```"],"_GUICtrlListView_GetColumnOrder":["Retrieves the current left-to-right order of columns","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetColumnOrder ( $hWnd )\\r```"],"_GUICtrlListView_GetColumnOrderArray":["Retrieves the current left-to-right order of columns in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetColumnOrderArray ( $hWnd )\\r```"],"_GUICtrlListView_GetColumnWidth":["Retrieves the width of a column in report or list view","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetColumnWidth ( $hWnd, $iCol )\\r```"],"_GUICtrlListView_GetCounterPage":["Calculates the number of items that can fit vertically in the visible area","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetCounterPage ( $hWnd )\\r```"],"_GUICtrlListView_GetEditControl":["Retrieves the handle to the edit control being used to edit an item\'s text","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetEditControl ( $hWnd )\\r```"],"_GUICtrlListView_GetExtendedListViewStyle":["Retrieves the extended styles that are currently in use","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetExtendedListViewStyle ( $hWnd )\\r```"],"_GUICtrlListView_GetFocusedGroup":["Gets the group that has the focus","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetFocusedGroup ( $hWnd )\\r```"],"_GUICtrlListView_GetGroupCount":["Gets the number of groups","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetGroupCount ( $hWnd )\\r```"],"_GUICtrlListView_GetGroupInfo":["Retrieves group information","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetGroupInfo ( $hWnd, $iGroupID )\\r```"],"_GUICtrlListView_GetGroupInfoByIndex":["Retrieves group information","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetGroupInfoByIndex ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetGroupRect":["Gets the rectangle for a specified group","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetGroupRect ( $hWnd, $iGroupID [, $iGet = $LVGGR_GROUP] )\\r```"],"_GUICtrlListView_GetGroupViewEnabled":["Checks whether the control has group view enabled","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetGroupViewEnabled ( $hWnd )\\r```"],"_GUICtrlListView_GetHeader":["Retrieves the handle to the header control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetHeader ( $hWnd )\\r```"],"_GUICtrlListView_GetHotCursor":["Retrieves the HCURSOR value used when the pointer is over an item while hot tracking is enabled","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetHotCursor ( $hWnd )\\r```"],"_GUICtrlListView_GetHotItem":["Retrieves the index of the hot item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetHotItem ( $hWnd )\\r```"],"_GUICtrlListView_GetHoverTime":["Retrieves the amount of time that the mouse cursor must hover over an item before it is selected","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetHoverTime ( $hWnd )\\r```"],"_GUICtrlListView_GetImageList":["Retrieves the handle to an image list used for drawing listview items","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetImageList ( $hWnd, $iImageList )\\r```"],"_GUICtrlListView_GetISearchString":["Retrieves the incremental search string of the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetISearchString ( $hWnd )\\r```"],"_GUICtrlListView_GetItem":["Retrieves an item\'s attributes","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItem ( $hWnd, $iIndex [, $iSubItem = 0] )\\r```"],"_GUICtrlListView_GetItemChecked":["Returns the check state for a list-view control item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemChecked ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemCount":["Retrieves the number of items in a list-view control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemCount ( $hWnd )\\r```"],"_GUICtrlListView_GetItemCut":["Determines whether the item is marked for a cut and paste operation","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemCut ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemDropHilited":["Determines whether the item is highlighted as a drag-and-drop target","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemDropHilited ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemEx":["Retrieves some or all of an item\'s attributes","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemEx ( $hWnd, ByRef $tItem )\\r```"],"_GUICtrlListView_GetItemFocused":["Determines whether the item is highlighted as a drag-and-drop target","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemFocused ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemGroupID":["Gets the item group ID","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemGroupID ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemImage":["Retrieves the index of the item\'s icon","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemImage ( $hWnd, $iIndex [, $iSubItem = 0] )\\r```"],"_GUICtrlListView_GetItemIndent":["Retrieves the number of image widths the item is indented","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemIndent ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemParam":["Retrieves the application specific value of the item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemParam ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemPosition":["Retrieves the position of an item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemPosition ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemPositionX":["Retrieves the X position of an item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemPositionX ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemPositionY":["Retrieves the Y position of an item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemPositionY ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemRect":["Retrieves the bounding rectangle for all or part of an item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemRect ( $hWnd, $iIndex [, $iPart = 3] )\\r```"],"_GUICtrlListView_GetItemRectEx":["Retrieves the bounding rectangle for all or part of an item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemRectEx ( $hWnd, $iIndex [, $iPart = 3] )\\r```"],"_GUICtrlListView_GetItemSelected":["Determines whether the item is selected","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemSelected ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemSpacing":["Determines the spacing between items in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemSpacing ( $hWnd [, $bSmall = False] )\\r```"],"_GUICtrlListView_GetItemSpacingX":["Determines the horizontal spacing between items in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemSpacingX ( $hWnd [, $bSmall = False] )\\r```"],"_GUICtrlListView_GetItemSpacingY":["Determines the vertical spacing between items in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemSpacingY ( $hWnd [, $bSmall = False] )\\r```"],"_GUICtrlListView_GetItemState":["Retrieves the state of a listview item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemState ( $hWnd, $iIndex, $iMask )\\r```"],"_GUICtrlListView_GetItemStateImage":["Gets the state image that is displayed","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemStateImage ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_GetItemText":["Retrieves the text of an item or subitem","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemText ( $hWnd, $iIndex [, $iSubItem = 0] )\\r```"],"_GUICtrlListView_GetItemTextArray":["Retrieves all of a list-view item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemTextArray ( $hWnd [, $iItem = -1] )\\r```"],"_GUICtrlListView_GetItemTextString":["Retrieves all of a list-view item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetItemTextString ( $hWnd [, $iItem = -1] )\\r```"],"_GUICtrlListView_GetNextItem":["Searches for an item that has the specified properties","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetNextItem ( $hWnd [, $iStart = -1 [, $iSearch = 0 [, $iState = 8]]] )\\r```"],"_GUICtrlListView_GetNumberOfWorkAreas":["Retrieves the number of working areas in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetNumberOfWorkAreas ( $hWnd )\\r```"],"_GUICtrlListView_GetOrigin":["Retrieves the current view origin for the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetOrigin ( $hWnd )\\r```"],"_GUICtrlListView_GetOriginX":["Retrieves the current horizontal view origin for the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetOriginX ( $hWnd )\\r```"],"_GUICtrlListView_GetOriginY":["Retrieves the current vertical view origin for the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetOriginY ( $hWnd )\\r```"],"_GUICtrlListView_GetOutlineColor":["Retrieves the color of the border of the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetOutlineColor ( $hWnd )\\r```"],"_GUICtrlListView_GetSelectedColumn":["Retrieves the index of the selected column","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetSelectedColumn ( $hWnd )\\r```"],"_GUICtrlListView_GetSelectedCount":["Determines the number of selected items","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetSelectedCount ( $hWnd )\\r```"],"_GUICtrlListView_GetSelectedIndices":["Retrieve indices of selected item(s)","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetSelectedIndices ( $hWnd [, $bArray = False] )\\r```"],"_GUICtrlListView_GetSelectionMark":["Retrieves the selection mark from the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetSelectionMark ( $hWnd )\\r```"],"_GUICtrlListView_GetStringWidth":["Determines the width of a specified string","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetStringWidth ( $hWnd, $sString )\\r```"],"_GUICtrlListView_GetSubItemRect":["Retrieves information about an item bounding rectangle","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetSubItemRect ( $hWnd, $iIndex, $iSubItem [, $iPart = 0] )\\r```"],"_GUICtrlListView_GetTextBkColor":["Retrieves the text background color of the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetTextBkColor ( $hWnd )\\r```"],"_GUICtrlListView_GetTextColor":["Retrieves the text color of the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetTextColor ( $hWnd )\\r```"],"_GUICtrlListView_GetToolTips":["Retrieves the ToolTip control handle","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetToolTips ( $hWnd )\\r```"],"_GUICtrlListView_GetTopIndex":["Retrieves the index of the topmost visible item when in list or report view","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetTopIndex ( $hWnd )\\r```"],"_GUICtrlListView_GetUnicodeFormat":["Retrieves the Unicode character format flag for the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetUnicodeFormat ( $hWnd )\\r```"],"_GUICtrlListView_GetView":["Retrieves the current view of the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetView ( $hWnd )\\r```"],"_GUICtrlListView_GetViewDetails":["Determines whether the view mode is in detail mode","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetViewDetails ( $hWnd )\\r```"],"_GUICtrlListView_GetViewLarge":["Determines whether the view mode is in large icon mode","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetViewLarge ( $hWnd )\\r```"],"_GUICtrlListView_GetViewList":["Determines whether the view mode is in list mode","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetViewList ( $hWnd )\\r```"],"_GUICtrlListView_GetViewRect":["Retrieves the bounding rectangle of all items in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetViewRect ( $hWnd )\\r```"],"_GUICtrlListView_GetViewSmall":["Determines whether the view mode is in small icon mode","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetViewSmall ( $hWnd )\\r```"],"_GUICtrlListView_GetViewTile":["Determines whether the view mode is in tile mode","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_GetViewTile ( $hWnd )\\r```"],"_GUICtrlListView_HideColumn":["Hides the column \\"sets column width to zero\\"","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_HideColumn ( $hWnd, $iCol )\\r```"],"_GUICtrlListView_HitTest":["Determines which item is at a specified position","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_HitTest ( $hWnd [, $iX = -1 [, $iY = -1]] )\\r```"],"_GUICtrlListView_InsertColumn":["Inserts a new column in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_InsertColumn ( $hWnd, $iIndex, $sText [, $iWidth = 50 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]] )\\r```"],"_GUICtrlListView_InsertGroup":["Inserts a group","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_InsertGroup ( $hWnd, $iIndex, $iGroupID, $sHeader [, $iAlign = 0] )\\r```"],"_GUICtrlListView_InsertItem":["Inserts a new item in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_InsertItem ( $hWnd, $sText [, $iIndex = -1 [, $iImage = -1 [, $iParam = 0]]] )\\r```"],"_GUICtrlListView_JustifyColumn":["Set Justification of a column for a list-view control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_JustifyColumn ( $hWnd, $iIndex [, $iAlign = -1] )\\r```"],"_GUICtrlListView_MapIDToIndex":["Maps the ID of an item to an index","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_MapIDToIndex ( $hWnd, $iID )\\r```"],"_GUICtrlListView_MapIndexToID":["Maps an index to an item ID","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_MapIndexToID ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_RedrawItems":["Forces the control to redraw a range of items","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_RedrawItems ( $hWnd, $iFirst, $iLast )\\r```"],"_GUICtrlListView_RegisterSortCallBack":["Register the Simple Sort callback function","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_RegisterSortCallBack ( $hWnd [, $bNumbers = True [, $bArrows = True]] )\\r```"],"_GUICtrlListView_RemoveAllGroups":["Removes all groups from the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_RemoveAllGroups ( $hWnd )\\r```"],"_GUICtrlListView_RemoveGroup":["Removes a group from the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_RemoveGroup ( $hWnd, $iGroupID )\\r```"],"_GUICtrlListView_Scroll":["Scrolls the content of a list-view","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_Scroll ( $hWnd, $iDX, $iDY )\\r```"],"_GUICtrlListView_SetBkColor":["Sets the background color of the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetBkColor ( $hWnd, $iColor )\\r```"],"_GUICtrlListView_SetBkImage":["Sets the background image in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetBkImage ( $hWnd [, $sURL = \\"\\" [, $iStyle = 0 [, $iXOffset = 0 [, $iYOffset = 0]]]] )\\r```"],"_GUICtrlListView_SetCallBackMask":["Changes the callback mask for the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetCallBackMask ( $hWnd, $iMask )\\r```"],"_GUICtrlListView_SetColumn":["Sets the attributes of a column","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetColumn ( $hWnd, $iIndex, $sText [, $iWidth = -1 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]] )\\r```"],"_GUICtrlListView_SetColumnOrder":["Sets the left-to-right order of columns","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetColumnOrder ( $hWnd, $sOrder )\\r```"],"_GUICtrlListView_SetColumnOrderArray":["Sets the left-to-right order of columns in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetColumnOrderArray ( $hWnd, $aOrder )\\r```"],"_GUICtrlListView_SetColumnWidth":["Changes the width of a column","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetColumnWidth ( $hWnd, $iCol, $iWidth )\\r```"],"_GUICtrlListView_SetExtendedListViewStyle":["Sets extended styles","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetExtendedListViewStyle ( $hWnd, $iExStyle [, $iExMask = 0] )\\r```"],"_GUICtrlListView_SetGroupInfo":["Sets group information","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetGroupInfo ( $hWnd, $iGroupID, $sHeader [, $iAlign = 0 [, $iState = $LVGS_NORMAL]] )\\r```"],"_GUICtrlListView_SetHotItem":["Sets the hot item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetHotItem ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_SetHoverTime":["Sets the amount of time which the mouse cursor must hover over an item before it is selected","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetHoverTime ( $hWnd, $iTime )\\r```"],"_GUICtrlListView_SetIconSpacing":["Sets the spacing between icons where the style is large icon","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetIconSpacing ( $hWnd, $iCX, $iCY )\\r```"],"_GUICtrlListView_SetImageList":["Assigns an image list to the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetImageList ( $hWnd, $hHandle [, $iType = 0] )\\r```"],"_GUICtrlListView_SetItem":["Sets some or all of a item\'s attributes","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItem ( $hWnd, $sText [, $iIndex = 0 [, $iSubItem = 0 [, $iImage = -1 [, $iParam = -1 [, $iIndent = -1]]]]] )\\r```"],"_GUICtrlListView_SetItemChecked":["Sets the checked state","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemChecked ( $hWnd, $iIndex [, $bCheck = True] )\\r```"],"_GUICtrlListView_SetItemCount":["Causes the list-view control to allocate memory for the specified number of items","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemCount ( $hWnd, $iItems )\\r```"],"_GUICtrlListView_SetItemCut":["Sets whether the item is marked for a cut-and-paste operation","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemCut ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlListView_SetItemDropHilited":["Sets whether the item is highlighted as a drag-and-drop target","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemDropHilited ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlListView_SetItemEx":["Sets some or all of a item\'s attributes","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemEx ( $hWnd, ByRef $tItem )\\r```"],"_GUICtrlListView_SetItemFocused":["Sets whether the item has the focus","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemFocused ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlListView_SetItemGroupID":["Sets the item group ID","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemGroupID ( $hWnd, $iIndex, $iGroupID )\\r```"],"_GUICtrlListView_SetItemImage":["Sets the index of the item\'s icon in the control\'s image list","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemImage ( $hWnd, $iIndex, $iImage [, $iSubItem = 0] )\\r```"],"_GUICtrlListView_SetItemIndent":["Sets the number of image widths to indent the item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemIndent ( $hWnd, $iIndex, $iIndent )\\r```"],"_GUICtrlListView_SetItemParam":["Sets the value specific to the item","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemParam ( $hWnd, $iIndex, $iParam )\\r```"],"_GUICtrlListView_SetItemPosition":["Moves an item to a specified position in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemPosition ( $hWnd, $iIndex, $iCX, $iCY )\\r```"],"_GUICtrlListView_SetItemPosition32":["Moves an item to a specified position in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemPosition32 ( $hWnd, $iIndex, $iCX, $iCY )\\r```"],"_GUICtrlListView_SetItemSelected":["Sets whether the item is selected","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemSelected ( $hWnd, $iIndex [, $bSelected = True [, $bFocused = False]] )\\r```"],"_GUICtrlListView_SetItemState":["Changes the state of an item in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemState ( $hWnd, $iIndex, $iState, $iStateMask )\\r```"],"_GUICtrlListView_SetItemStateImage":["Sets the state image that is displayed","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemStateImage ( $hWnd, $iIndex, $iImage )\\r```"],"_GUICtrlListView_SetItemText":["Changes the text of an item or subitem","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetItemText ( $hWnd, $iIndex, $sText [, $iSubItem = 0] )\\r```"],"_GUICtrlListView_SetOutlineColor":["Sets the color of the border","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetOutlineColor ( $hWnd, $iColor )\\r```"],"_GUICtrlListView_SetSelectedColumn":["Sets the index of the selected column","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetSelectedColumn ( $hWnd, $iCol )\\r```"],"_GUICtrlListView_SetSelectionMark":["Sets the selection mark in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetSelectionMark ( $hWnd, $iIndex )\\r```"],"_GUICtrlListView_SetTextBkColor":["Sets the background color of text in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetTextBkColor ( $hWnd, $iColor )\\r```"],"_GUICtrlListView_SetTextColor":["Sets the color of text in the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetTextColor ( $hWnd, $iColor )\\r```"],"_GUICtrlListView_SetToolTips":["Sets the ToolTip control that the control will use to display ToolTips","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetToolTips ( $hWnd, $hToolTip )\\r```"],"_GUICtrlListView_SetUnicodeFormat":["Sets the UNICODE character format flag for the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetUnicodeFormat ( $hWnd, $bUnicode )\\r```"],"_GUICtrlListView_SetView":["Sets the view of the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetView ( $hWnd, $iView )\\r```"],"_GUICtrlListView_SetWorkAreas":["Creates a work area within the control","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SetWorkAreas ( $hWnd, $iLeft, $iTop, $iRight, $iBottom )\\r```"],"_GUICtrlListView_SimpleSort":["Sorts a list-view control (limited)","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SimpleSort ( $hWnd, ByRef $vSortSense, $iCol [, $bToggleSense = True] )\\r```"],"_GUICtrlListView_SortItems":["Starts the sort call back, also sets the Arrow in the Header","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SortItems ( $hWnd, $iCol )\\r```"],"_GUICtrlListView_SubItemHitTest":["Determines which listview item or subitem is at a given position","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_SubItemHitTest ( $hWnd [, $iX = -1 [, $iY = -1]] )\\r```"],"_GUICtrlListView_UnRegisterSortCallBack":["UnRegister the Sort callback function","```\\r#include <GuiListView.au3>\\r_GUICtrlListView_UnRegisterSortCallBack ( $hWnd )\\r```"]}'),v=JSON.parse('{"_GUICtrlMenu_AddMenuItem":["Adds a new menu item to the end of the menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_AddMenuItem ( $hMenu, $sText [, $iCmdID = 0 [, $hSubMenu = 0]] )\\r```"],"_GUICtrlMenu_AppendMenu":["Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_AppendMenu ( $hMenu, $iFlags, $iNewItem, $vNewItem )\\r```"],"_GUICtrlMenu_CalculatePopupWindowPosition":["Calculates an appropriate pop-up window position","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_CalculatePopupWindowPosition ( $iX, $iY, $iWidth, $iHeight [, $iFlags = 0 [, $tExclude = 0]] )\\r```"],"_GUICtrlMenu_CheckMenuItem":["Sets the state of the specified menu item\'s check mark attribute to either selected or clear","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_CheckMenuItem ( $hMenu, $iItem [, $bCheck = True [, $bByPos = True]] )\\r```"],"_GUICtrlMenu_CheckRadioItem":["Checks a specified menu item and makes it a radio item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_CheckRadioItem ( $hMenu, $iFirst, $iLast, $iCheck [, $bByPos = True] )\\r```"],"_GUICtrlMenu_CreateMenu":["Creates a menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_CreateMenu ( [$iStyle = $MNS_CHECKORBMP] )\\r```"],"_GUICtrlMenu_CreatePopup":["Creates a drop down menu, submenu, or shortcut menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_CreatePopup ( [$iStyle = $MNS_CHECKORBMP] )\\r```"],"_GUICtrlMenu_DeleteMenu":["Deletes an item from the specified menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_DeleteMenu ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_DestroyMenu":["Destroys the specified menu and frees any memory that the menu occupies","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_DestroyMenu ( $hMenu )\\r```"],"_GUICtrlMenu_DrawMenuBar":["Redraws the menu bar of the specified window","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_DrawMenuBar ( $hWnd )\\r```"],"_GUICtrlMenu_EnableMenuItem":["Enables, disables, or grays the specified menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_EnableMenuItem ( $hMenu, $iItem [, $iState = 0 [, $bByPos = True]] )\\r```"],"_GUICtrlMenu_FindItem":["Retrieves a menu item based on it\'s text","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_FindItem ( $hMenu, $sText [, $bInStr = False [, $iStart = 0]] )\\r```"],"_GUICtrlMenu_FindParent":["Retrieves the window to which a menu belongs","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_FindParent ( $hMenu )\\r```"],"_GUICtrlMenu_GetItemBmp":["Retrieves the bitmap displayed for the item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemBmp ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemBmpChecked":["Retrieves the bitmap displayed if the item is selected","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemBmpChecked ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemBmpUnchecked":["Retrieves the bitmap displayed if the item is not selected","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemBmpUnchecked ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemChecked":["Retrieves the status of the menu item checked state","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemChecked ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemCount":["Retrieves the number of items in the specified menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemCount ( $hMenu )\\r```"],"_GUICtrlMenu_GetItemData":["Retrieves the application defined value associated with the menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemData ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemDefault":["Retrieves the status of the menu item default state","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemDefault ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemDisabled":["Retrieves the status of the menu item disabled state","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemDisabled ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemEnabled":["Retrieves the status of the menu item enabled state","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemEnabled ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemGrayed":["Retrieves the status of the menu item grayed state","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemGrayed ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemHighlighted":["Retrieves the status of the menu item highlighted state","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemHighlighted ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemID":["Retrieves the menu item ID","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemID ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemInfo":["Retrieves information about a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemInfo ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemRect":["Retrieves the bounding rectangle for the specified menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemRect ( $hWnd, $hMenu, $iItem )\\r```"],"_GUICtrlMenu_GetItemRectEx":["Retrieves the bounding rectangle for the specified menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemRectEx ( $hWnd, $hMenu, $iItem )\\r```"],"_GUICtrlMenu_GetItemState":["Retrieves the menu item state","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemState ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemStateEx":["Retrieves the menu flags associated with the specified menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemStateEx ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemSubMenu":["Retrieves a the submenu activated by a specified item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemSubMenu ( $hMenu, $iItem )\\r```"],"_GUICtrlMenu_GetItemText":["Retrieves the text of the specified menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemText ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetItemType":["Retrieves the menu item type","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetItemType ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_GetMenu":["Retrieves the handle of the menu assigned to the given window","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetMenu ( $hWnd )\\r```"],"_GUICtrlMenu_GetMenuBackground":["Retrieves the brush to use for the menu\'s background","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetMenuBackground ( $hMenu )\\r```"],"_GUICtrlMenu_GetMenuBarInfo":["Retrieves information about the specified menu bar","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetMenuBarInfo ( $hWnd [, $iItem = 0 [, $iObject = 1]] )\\r```"],"_GUICtrlMenu_GetMenuContextHelpID":["Retrieves the context help identifier","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetMenuContextHelpID ( $hMenu )\\r```"],"_GUICtrlMenu_GetMenuData":["Retrieves the application defined value","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetMenuData ( $hMenu )\\r```"],"_GUICtrlMenu_GetMenuDefaultItem":["Retrieves the default menu item on the specified menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetMenuDefaultItem ( $hMenu [, $bByPos = True [, $iFlags = 0]] )\\r```"],"_GUICtrlMenu_GetMenuHeight":["Retrieves the maximum height of a menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetMenuHeight ( $hMenu )\\r```"],"_GUICtrlMenu_GetMenuInfo":["Retrieves information about a specified menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetMenuInfo ( $hMenu )\\r```"],"_GUICtrlMenu_GetMenuStyle":["Retrieves the style information for a menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetMenuStyle ( $hMenu )\\r```"],"_GUICtrlMenu_GetSystemMenu":["Allows the application to access the window menu for copying and modifying","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_GetSystemMenu ( $hWnd [, $bRevert = False] )\\r```"],"_GUICtrlMenu_InsertMenuItem":["Inserts a new menu item at the specified position","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_InsertMenuItem ( $hMenu, $iIndex, $sText [, $iCmdID = 0 [, $hSubMenu = 0]] )\\r```"],"_GUICtrlMenu_InsertMenuItemEx":["Inserts a new menu item at the specified position in a menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_InsertMenuItemEx ( $hMenu, $iIndex, ByRef $tMenu [, $bByPos = True] )\\r```"],"_GUICtrlMenu_IsMenu":["Determines whether a handle is a menu handle","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_IsMenu ( $hMenu )\\r```"],"_GUICtrlMenu_LoadMenu":["Loads the specified menu resource from the executable file associated with an application instance","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_LoadMenu ( $hInst, $sMenuName )\\r```"],"_GUICtrlMenu_MapAccelerator":["Maps a menu accelerator key to it\'s position in the menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_MapAccelerator ( $hMenu, $sAccelKey )\\r```"],"_GUICtrlMenu_MenuItemFromPoint":["Determines which menu item is at the specified location","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_MenuItemFromPoint ( $hWnd, $hMenu [, $iX = -1 [, $iY = -1]] )\\r```"],"_GUICtrlMenu_RemoveMenu":["Deletes a menu item or detaches a submenu from the specified menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_RemoveMenu ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemBitmaps":["Associates the specified bitmap with a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemBitmaps ( $hMenu, $iItem, $hChecked, $hUnChecked [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemBmp":["Sets the bitmap displayed for the item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemBmp ( $hMenu, $iItem, $hBitmap [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemBmpChecked":["Sets the bitmap displayed if the item is selected","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemBmpChecked ( $hMenu, $iItem, $hBitmap [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemBmpUnchecked":["Sets the bitmap displayed if the item is not selected","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemBmpUnchecked ( $hMenu, $iItem, $hBitmap [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemChecked":["Sets the checked state of a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemChecked ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )\\r```"],"_GUICtrlMenu_SetItemData":["Sets the application defined value for a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemData ( $hMenu, $iItem, $iData [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemDefault":["Sets the status of the menu item default state","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemDefault ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )\\r```"],"_GUICtrlMenu_SetItemDisabled":["Sets the disabled state of a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemDisabled ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )\\r```"],"_GUICtrlMenu_SetItemEnabled":["Sets the enabled state of a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemEnabled ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )\\r```"],"_GUICtrlMenu_SetItemGrayed":["Sets the grayed state of a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemGrayed ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )\\r```"],"_GUICtrlMenu_SetItemHighlighted":["Sets the highlighted state of a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemHighlighted ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )\\r```"],"_GUICtrlMenu_SetItemID":["Sets the menu item ID","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemID ( $hMenu, $iItem, $iID [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemInfo":["Changes information about a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemInfo ( $hMenu, $iItem, ByRef $tInfo [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemState":["Sets the state of a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemState ( $hMenu, $iItem, $iState [, $bState = True [, $bByPos = True]] )\\r```"],"_GUICtrlMenu_SetItemSubMenu":["Sets the drop down menu or submenu associated with the menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemSubMenu ( $hMenu, $iItem, $hSubMenu [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemText":["Sets the text for a menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemText ( $hMenu, $iItem, $sText [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetItemType":["Sets the menu item type","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetItemType ( $hMenu, $iItem, $iType [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetMenu":["Assigns a new menu to the specified window","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetMenu ( $hWnd, $hMenu )\\r```"],"_GUICtrlMenu_SetMenuBackground":["Sets the background brush for the menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetMenuBackground ( $hMenu, $hBrush )\\r```"],"_GUICtrlMenu_SetMenuContextHelpID":["Sets the context help identifier for the menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetMenuContextHelpID ( $hMenu, $iHelpID )\\r```"],"_GUICtrlMenu_SetMenuData":["Sets the application defined for the menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetMenuData ( $hMenu, $iData )\\r```"],"_GUICtrlMenu_SetMenuDefaultItem":["Sets the default menu item","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetMenuDefaultItem ( $hMenu, $iItem [, $bByPos = True] )\\r```"],"_GUICtrlMenu_SetMenuHeight":["Sets the maximum height of the menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetMenuHeight ( $hMenu, $iHeight )\\r```"],"_GUICtrlMenu_SetMenuInfo":["Sets information for a specified menu","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetMenuInfo ( $hMenu, ByRef $tInfo )\\r```"],"_GUICtrlMenu_SetMenuStyle":["Sets the menu style","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_SetMenuStyle ( $hMenu, $iStyle )\\r```"],"_GUICtrlMenu_TrackPopupMenu":["Displays a shortcut menu at the specified location","```\\r#include <GuiMenu.au3>\\r_GUICtrlMenu_TrackPopupMenu ( $hMenu, $hWnd [, $iX = -1 [, $iY = -1 [, $iAlignX = 1 [, $iAlignY = 1 [, $iNotify = 0 [, $iButtons = 0]]]]]] )\\r```"]}'),U=JSON.parse('{"_GUICtrlMonthCal_Create":["Creates a Month Calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_Create ( $hWnd, $iX, $iY [, $iStyle = 0x00000000 [, $iExStyle = 0x00000000]] )\\r```"],"_GUICtrlMonthCal_Destroy":["Delete the MonthCal control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlMonthCal_GetCalendarBorder":["Gets the size of the border, in pixels","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetCalendarBorder ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetCalendarCount":["Gets the number of calendars currently displayed in the calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetCalendarCount ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetColor":["Retrieves a given color for the control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetColor ( $hWnd, $iIndex )\\r```"],"_GUICtrlMonthCal_GetColorArray":["Retrieves the color for a given portion of a month calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetColorArray ( $hWnd, $iColor )\\r```"],"_GUICtrlMonthCal_GetCurSel":["Retrieves the currently selected date","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetCurSel ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetCurSelStr":["Retrieves the currently selected date in string format","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetCurSelStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )\\r```"],"_GUICtrlMonthCal_GetFirstDOW":["Retrieves the first day of the week","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetFirstDOW ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetFirstDOWStr":["Retrieves the first day of the week as a string","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetFirstDOWStr ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetMaxSelCount":["Retrieves the maximum date range that can be selected in a month calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMaxSelCount ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetMaxTodayWidth":["Retrieves the maximum width of the \\"today\\" string in a month calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMaxTodayWidth ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetMinReqHeight":["Retrieves the minimum height required to display a full month","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMinReqHeight ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetMinReqRect":["Retrieves the minimum size required to display a full month","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMinReqRect ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetMinReqRectArray":["Retrieves the minimum size required to display a full month in a month calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMinReqRectArray ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetMinReqWidth":["Retrieves the minimum width required to display a full month","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMinReqWidth ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetMonthDelta":["Retrieves the scroll rate for a month calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMonthDelta ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetMonthRange":["Retrieves date information that represents the high and low display limits","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMonthRange ( $hWnd [, $bPartial = False] )\\r```"],"_GUICtrlMonthCal_GetMonthRangeMax":["Retrieves date information that represents the high limit of the controls display","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMonthRangeMax ( $hWnd [, $bPartial = False] )\\r```"],"_GUICtrlMonthCal_GetMonthRangeMaxStr":["Retrieves date information that represents the high limit of the controls display in string format","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMonthRangeMaxStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )\\r```"],"_GUICtrlMonthCal_GetMonthRangeMin":["Retrieves date information that represents the low limit of the controls display","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMonthRangeMin ( $hWnd [, $bPartial = False] )\\r```"],"_GUICtrlMonthCal_GetMonthRangeMinStr":["Retrieves date information that represents the low limit of the controls display in string format","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMonthRangeMinStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )\\r```"],"_GUICtrlMonthCal_GetMonthRangeSpan":["Returns a value that represents the range, in months, spanned","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetMonthRangeSpan ( $hWnd [, $bPartial = False] )\\r```"],"_GUICtrlMonthCal_GetRange":["Retrieves the minimum and maximum allowable dates","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetRange ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetRangeMax":["Retrieves the upper limit date range","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetRangeMax ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetRangeMaxStr":["Retrieves the upper limit date range in string format","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetRangeMaxStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )\\r```"],"_GUICtrlMonthCal_GetRangeMin":["Retrieves the lower limit date range","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetRangeMin ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetRangeMinStr":["Retrieves the lower limit date range in string form","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetRangeMinStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )\\r```"],"_GUICtrlMonthCal_GetSelRange":["Retrieves the upper and lower limits of the date range currently selected","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetSelRange ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetSelRangeMax":["Retrieves the upper date range currently selected by the user","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetSelRangeMax ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetSelRangeMaxStr":["Retrieves the upper date range currently selected by the user in string form","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetSelRangeMaxStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )\\r```"],"_GUICtrlMonthCal_GetSelRangeMin":["Retrieves the lower date range currently selected by the user","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetSelRangeMin ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetSelRangeMinStr":["Retrieves the lower date range currently selected by the user in string form","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetSelRangeMinStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )\\r```"],"_GUICtrlMonthCal_GetToday":["Retrieves the date information for the date specified as \\"today\\"","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetToday ( $hWnd )\\r```"],"_GUICtrlMonthCal_GetTodayStr":["Retrieves the date information for the date specified as \\"today\\" in string format","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetTodayStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )\\r```"],"_GUICtrlMonthCal_GetUnicodeFormat":["Retrieves the Unicode character format flag for the control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_GetUnicodeFormat ( $hWnd )\\r```"],"_GUICtrlMonthCal_HitTest":["Determines which portion of a month calendar control is at a given point","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_HitTest ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlMonthCal_SetCalendarBorder":["Sets the size of the border, in pixels","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetCalendarBorder ( $hWnd [, $iBorderSize = 4 [, $bSetBorder = True]] )\\r```"],"_GUICtrlMonthCal_SetColor":["Sets the color for a given portion of the month calendar","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetColor ( $hWnd, $iIndex, $iColor )\\r```"],"_GUICtrlMonthCal_SetCurSel":["Sets the currently selected date","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetCurSel ( $hWnd, $iYear, $iMonth, $iDay )\\r```"],"_GUICtrlMonthCal_SetDayState":["Sets the day states for all months that are currently visible","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetDayState ( $hWnd, $aMasks )\\r```"],"_GUICtrlMonthCal_SetFirstDOW":["Sets the first day of the week for a month calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetFirstDOW ( $hWnd, $sDay )\\r```"],"_GUICtrlMonthCal_SetMaxSelCount":["Sets the maximum number of days that can be selected in a month calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetMaxSelCount ( $hWnd, $iMaxSel )\\r```"],"_GUICtrlMonthCal_SetMonthDelta":["Sets the scroll rate for a month calendar control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetMonthDelta ( $hWnd, $iDelta )\\r```"],"_GUICtrlMonthCal_SetRange":["Sets date information that represents the high and low limits","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetRange ( $hWnd, $iMinYear, $iMinMonth, $iMinDay, $iMaxYear, $iMaxMonth, $iMaxDay )\\r```"],"_GUICtrlMonthCal_SetSelRange":["Sets the selection for a month calendar control to a given date range","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetSelRange ( $hWnd, $iMinYear, $iMinMonth, $iMinDay, $iMaxYear, $iMaxMonth, $iMaxDay )\\r```"],"_GUICtrlMonthCal_SetToday":["Sets the date information for the date specified as \\"today\\"","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetToday ( $hWnd, $iYear, $iMonth, $iDay )\\r```"],"_GUICtrlMonthCal_SetUnicodeFormat":["Sets the Unicode character format flag for the control","```\\r#include <GuiMonthCal.au3>\\r_GUICtrlMonthCal_SetUnicodeFormat ( $hWnd [, $bUnicode = False] )\\r```"]}'),F=JSON.parse('{"_GUICtrlRebar_AddBand":["Adds a new band in a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_AddBand ( $hWndRebar, $hWndChild [, $iMinWidth = 100 [, $iDefaultWidth = 100 [, $sText = \\"\\" [, $iIndex = -1 [, $iStyle = -1]]]]] )\\r```"],"_GUICtrlRebar_AddToolBarBand":["Adds a new band in a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_AddToolBarBand ( $hWndRebar, $hWndToolbar [, $sText = \\"\\" [, $iIndex = -1 [, $iStyle = -1]]] )\\r```"],"_GUICtrlRebar_BeginDrag":["Adds a new band in a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_BeginDrag ( $hWnd, $iIndex [, $iPos = -1] )\\r```"],"_GUICtrlRebar_Create":["Create a Rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_Create ( $hWnd [, $iStyles = 0x513] )\\r```"],"_GUICtrlRebar_DeleteBand":["Deletes a band from a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_DeleteBand ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_Destroy":["Delete the control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlRebar_DragMove":["Updates the drag position in the rebar control after a previous _GUICtrlRebar_BeginDrag message","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_DragMove ( $hWnd [, $iPos = -1] )\\r```"],"_GUICtrlRebar_EndDrag":["Terminates the rebar control\'s drag-and-drop operation","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_EndDrag ( $hWnd )\\r```"],"_GUICtrlRebar_GetBandBackColor":["Retrieves the Band background color","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandBackColor ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandBorders":["Retrieves the borders of a band","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandBorders ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandBordersEx":["Retrieves the borders of a band","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandBordersEx ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandChildHandle":["Retrieves the Handle to the child window contained in the band, if any","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandChildHandle ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandChildSize":["Retrieves the Child size settings","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandChildSize ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandCount":["Retrieves the count of bands currently in the rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandCount ( $hWnd )\\r```"],"_GUICtrlRebar_GetBandForeColor":["Retrieves the Band foreground color","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandForeColor ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandHeaderSize":["Retrieves the size of the band\'s header, in pixels","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandHeaderSize ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandID":["Get the value that the control uses to identify this band for custom draw notification messages","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandID ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandIdealSize":["Get Ideal width of the band, in pixels","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandIdealSize ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandLength":["Get Length of the band, in pixels","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandLength ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandLParam":["Get Application-defined value","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandLParam ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandMargins":["Get Length of the band, in pixels","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandMargins ( $hWnd )\\r```"],"_GUICtrlRebar_GetBandMarginsEx":["Get Length of the band, in pixels","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandMarginsEx ( $hWnd )\\r```"],"_GUICtrlRebar_GetBandRect":["Retrieves the bounding rectangle for a given band in a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandRect ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandRectEx":["Retrieves the bounding rectangle for a given band in a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandRectEx ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyle":["Get the band style Flags","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyle ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleBreak":["Determine if band break flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleBreak ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleChildEdge":["Determine if band child edge flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleChildEdge ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleFixedBMP":["Determine if band fixed BMP flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleFixedBMP ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleFixedSize":["Determine if band fixed size flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleFixedSize ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleGripperAlways":["Determine if band gripper flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleGripperAlways ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleHidden":["Determine if band hidden flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleHidden ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleHideTitle":["Determine if band hide title flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleHideTitle ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleNoGripper":["Determine if band noGripper flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleNoGripper ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleTopAlign":["Determine if band top align flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleTopAlign ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleUseChevron":["Determine if band use chevron flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleUseChevron ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandStyleVariableHeight":["Determine if band variable height flag is set","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandStyleVariableHeight ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBandText":["Retrieves the display text for the band","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBandText ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetBarHeight":["Retrieves the height of the rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBarHeight ( $hWnd )\\r```"],"_GUICtrlRebar_GetBarInfo":["Retrieves information about the rebar control and the image list it uses","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBarInfo ( $hWnd )\\r```"],"_GUICtrlRebar_GetBKColor":["Retrieves a rebar control\'s default background color","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetBKColor ( $hWnd )\\r```"],"_GUICtrlRebar_GetColorScheme":["Retrieves the color scheme information from the rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetColorScheme ( $hWnd )\\r```"],"_GUICtrlRebar_GetRowCount":["Retrieves the number of rows of bands in a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetRowCount ( $hWnd )\\r```"],"_GUICtrlRebar_GetRowHeight":["Retrieves the height of a specified row in a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetRowHeight ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_GetTextColor":["Retrieves a rebar control\'s default text color","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetTextColor ( $hWnd )\\r```"],"_GUICtrlRebar_GetToolTips":["Retrieves the handle to any ToolTip control associated with the rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetToolTips ( $hWnd )\\r```"],"_GUICtrlRebar_GetUnicodeFormat":["Retrieves the Unicode character format flag for the control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_GetUnicodeFormat ( $hWnd )\\r```"],"_GUICtrlRebar_HitTest":["Determines which band is at a specified position","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_HitTest ( $hWnd [, $iX = -1 [, $iY = -1]] )\\r```"],"_GUICtrlRebar_IDToIndex":["Converts a band identifier to a band index in a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_IDToIndex ( $hWnd, $iID )\\r```"],"_GUICtrlRebar_MaximizeBand":["Resizes a band in a rebar control to either its ideal or largest size","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_MaximizeBand ( $hWnd, $iIndex [, $bIdeal = True] )\\r```"],"_GUICtrlRebar_MinimizeBand":["Resizes a band in a rebar control to its smallest size","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_MinimizeBand ( $hWnd, $iIndex )\\r```"],"_GUICtrlRebar_MoveBand":["Moves a band from one index to another","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_MoveBand ( $hWnd, $iIndexFrom, $iIndexTo )\\r```"],"_GUICtrlRebar_SetBandBackColor":["Set the Band background color","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandBackColor ( $hWnd, $iIndex, $iColor )\\r```"],"_GUICtrlRebar_SetBandForeColor":["Set the Band foreground color","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandForeColor ( $hWnd, $iIndex, $iColor )\\r```"],"_GUICtrlRebar_SetBandHeaderSize":["Set the size of the band\'s header, in pixels","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandHeaderSize ( $hWnd, $iIndex, $iNewSize )\\r```"],"_GUICtrlRebar_SetBandID":["Set the value that the control uses to identify this band for custom draw notification messages","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandID ( $hWnd, $iIndex, $iID )\\r```"],"_GUICtrlRebar_SetBandIdealSize":["Set Ideal width of the band, in pixels","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandIdealSize ( $hWnd, $iIndex, $iNewSize )\\r```"],"_GUICtrlRebar_SetBandLength":["Set the size length of the band","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandLength ( $hWnd, $iIndex, $iLength )\\r```"],"_GUICtrlRebar_SetBandLParam":["Set Application-defined value","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandLParam ( $hWnd, $iIndex, $lParam )\\r```"],"_GUICtrlRebar_SetBandStyle":["Set the band style Flags","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyle ( $hWnd, $iIndex, $iStyle )\\r```"],"_GUICtrlRebar_SetBandStyleBreak":["Set whether the band is on a new line","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleBreak ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleChildEdge":["Set whether the band has an edge at the top and bottom of the child window","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleChildEdge ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleFixedBMP":["Set whether the band background bitmap does not move when the band is resized","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleFixedBMP ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleFixedSize":["Set whether the band can\'t be sized. With this style, the sizing grip is not displayed on the band","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleFixedSize ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleGripperAlways":["Set whether the band will always have a sizing grip, even if it is the only band in the rebar","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleGripperAlways ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleHidden":["Set whether the band will not be visible","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleHidden ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleHideTitle":["Set whether to keep band title hidden","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleHideTitle ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleNoGripper":["Set whether the band will never have a sizing grip, even if there is more than one band in the rebar","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleNoGripper ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleTopAlign":["Set whether to keep band in top row","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleTopAlign ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleUseChevron":["Set whether to display drop-down button","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleUseChevron ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandStyleVariableHeight":["Set whether the band can be resized by the rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandStyleVariableHeight ( $hWnd, $iIndex [, $bEnabled = True] )\\r```"],"_GUICtrlRebar_SetBandText":["Sets the display text for the band of a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBandText ( $hWnd, $iIndex, $sText )\\r```"],"_GUICtrlRebar_SetBarInfo":["Sets the characteristics of a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBarInfo ( $hWnd, $hIml )\\r```"],"_GUICtrlRebar_SetBKColor":["Sets the default background color of a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetBKColor ( $hWnd, $iColor )\\r```"],"_GUICtrlRebar_SetColorScheme":["Sets the color scheme of a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetColorScheme ( $hWnd, $iBtnHighlight, $iBtnShadow )\\r```"],"_GUICtrlRebar_SetTextColor":["Sets a rebar control\'s default text color","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetTextColor ( $hWnd, $iColor )\\r```"],"_GUICtrlRebar_SetToolTips":["Associates a ToolTip control with the rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetToolTips ( $hWnd, $hToolTip )\\r```"],"_GUICtrlRebar_SetUnicodeFormat":["Sets the Unicode character format flag for the control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_SetUnicodeFormat ( $hWnd [, $bUnicode = True] )\\r```"],"_GUICtrlRebar_ShowBand":["Shows or hides a given band in a rebar control","```\\r#include <GuiReBar.au3>\\r_GUICtrlRebar_ShowBand ( $hWnd, $iIndex [, $bShow = True] )\\r```"]}'),L=JSON.parse('{"_GUICtrlRichEdit_AppendText":["Appends text at the end of the client area","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_AppendText ( $hWnd, $sText )\\r```"],"_GUICtrlRichEdit_AutoDetectURL":["Enables or disables automatic detection of URLS","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_AutoDetectURL ( $hWnd, $bState )\\r```"],"_GUICtrlRichEdit_CanPaste":["Can the contents of the clipboard be pasted into the control?","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_CanPaste ( $hWnd )\\r```"],"_GUICtrlRichEdit_CanPasteSpecial":["Can the contents of the clipboard be pasted into the control in both formats?","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_CanPasteSpecial ( $hWnd )\\r```"],"_GUICtrlRichEdit_CanRedo":["Can an undone action be redone?","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_CanRedo ( $hWnd )\\r```"],"_GUICtrlRichEdit_CanUndo":["Can an action be undone?","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_CanUndo ( $hWnd )\\r```"],"_GUICtrlRichEdit_ChangeFontSize":["Increment or decrement font size(s) of selected text","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_ChangeFontSize ( $hWnd, $iIncrement )\\r```"],"_GUICtrlRichEdit_Copy":["Copy text to clipboard","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_Copy ( $hWnd )\\r```"],"_GUICtrlRichEdit_Create":["Create an Edit control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_Create ( $hWnd, $sText, $iLeft, $iTop [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = -1 [, $iExStyle = -1]]]] )\\r```"],"_GUICtrlRichEdit_Cut":["Cut text to clipboard","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_Cut ( $hWnd )\\r```"],"_GUICtrlRichEdit_Deselect":["Deselects text, leaving none selected","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_Deselect ( $hWnd )\\r```"],"_GUICtrlRichEdit_Destroy":["Delete the Rich Edit control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlRichEdit_EmptyUndoBuffer":["Resets the undo flag of the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_EmptyUndoBuffer ( $hWnd )\\r```"],"_GUICtrlRichEdit_FindText":["Search for a text starting at insertion point or at anchor point of selection","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_FindText ( $hWnd, $sText [, $bForward = True [, $bMatchCase = False [, $bWholeWord = False [, $iBehavior = 0]]]] )\\r```"],"_GUICtrlRichEdit_FindTextInRange":["Search for a text in a range of inter-character positions","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_FindTextInRange ( $hWnd, $sText [, $iStart = 0 [, $iEnd = -1 [, $bMatchCase = False [, $bWholeWord = False [, $iBehavior = 0]]]]] )\\r```"],"_GUICtrlRichEdit_GetBkColor":["Gets the background color of the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetBkColor ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetCharAttributes":["Returns attributes of selected text","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetCharAttributes ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetCharBkColor":["Retrieves the background color of the selected text or, if none selected, of the character to the right of the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetCharBkColor ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetCharColor":["Retrieves the color of the selected text or, if none selected, of the character to the right of the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetCharColor ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetCharPosFromXY":["Gets inter-character position closest to a specified point in the client area","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetCharPosFromXY ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlRichEdit_GetCharPosOfNextWord":["Gets inter-character position before the next word","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetCharPosOfNextWord ( $hWnd, $iCpStart )\\r```"],"_GUICtrlRichEdit_GetCharPosOfPreviousWord":["Gets inter-character position before the Previous word","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetCharPosOfPreviousWord ( $hWnd, $iCpStart )\\r```"],"_GUICtrlRichEdit_GetCharWordBreakInfo":["Gets inter-character position before the Previous word","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetCharWordBreakInfo ( $hWnd, $iCp )\\r```"],"_GUICtrlRichEdit_GetFirstCharPosOnLine":["Retrieves the inter-character position preceding the first character of a line","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetFirstCharPosOnLine ( $hWnd [, $iLine = -1] )\\r```"],"_GUICtrlRichEdit_GetFont":["Gets the font attributes of a selection or, if no selection, at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetFont ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetLineCount":["Retrieves the number of lines in a multi-line edit control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetLineCount ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetLineLength":["Retrieves the length of a line","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetLineLength ( $hWnd, $iLine )\\r```"],"_GUICtrlRichEdit_GetLineNumberFromCharPos":["Retrieves the line number on which an inter-character position is found","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetLineNumberFromCharPos ( $hWnd, $iCharPos )\\r```"],"_GUICtrlRichEdit_GetNextRedo":["Retrieves the name or type ID of the next possible redo action","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetNextRedo ( $hWnd [, $bName = True] )\\r```"],"_GUICtrlRichEdit_GetNextUndo":["Retrieves the name or type ID of the next possible Undo action","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetNextUndo ( $hWnd [, $bName = True] )\\r```"],"_GUICtrlRichEdit_GetNumberOfFirstVisibleLine":["Gets number of the first line which is visible in the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetNumberOfFirstVisibleLine ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetParaAlignment":["Gets the alignment of selected paragraph(s), or (if no selection) of the current paragraph","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetParaAlignment ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetParaAttributes":["Gets the attributes of (first) selected paragraph or (if no selection) of the current paragraph","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetParaAttributes ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetParaBorder":["Gets the border settings of (first) selected paragraph or (if no selection) of the current paragraph","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetParaBorder ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetParaIndents":["Gets the border indent settings of (first) selected paragraph or (if no selection) of the current paragraph","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetParaIndents ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetParaNumbering":["Gets the numbering style of (first) selected paragraph or (if no selection) of the current paragraph","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetParaNumbering ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetParaShading":["Gets the shading settings of (first) selected paragraph or (if no selection) of the current paragraph","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetParaShading ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetParaSpacing":["Gets the spacing settings of (first) selected paragraph or (if no selection) of the current paragraph","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetParaSpacing ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetParaTabStops":["Gets the tabstops of (first) selected paragraph or (if no selection) of the current paragraph","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetParaTabStops ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetPasswordChar":["Gets the password character that a rich edit control displays when the user enters text","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetPasswordChar ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetRECT":["Retrieves the formatting rectangle of a control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetRECT ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetScrollPos":["Gets the Scrolling position of the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetScrollPos ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetSel":["Gets the low and high inter-character positions of a selection","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetSel ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetSelAA":["Gets the anchor and active inter-character positions of a selection, in that order","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetSelAA ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetSelText":["Retrieves the currently selected text","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetSelText ( $hWnd )\\r```"],"_GUICtrlRichEdit_GetSpaceUnit":["Gets the unit of measure of horizontal and vertical space used in parameters of various _GUICtrlRichEdit functions","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetSpaceUnit ( )\\r```"],"_GUICtrlRichEdit_GetText":["Get all of the text in the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetText ( $hWnd [, $bCrToCrLf = False [, $iCodePage = 0 [, $sReplChar = \\"\\"]]] )\\r```"],"_GUICtrlRichEdit_GetTextInLine":["Gets a line of text","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetTextInLine ( $hWnd, $iLine )\\r```"],"_GUICtrlRichEdit_GetTextInRange":["Gets the text from from one inter-character position to another","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetTextInRange ( $hWnd, $iStart, $iEnd )\\r```"],"_GUICtrlRichEdit_GetTextLength":["Get the length of the whole text in the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetTextLength ( $hWnd [, $bExact = True [, $bChars = False]] )\\r```"],"_GUICtrlRichEdit_GetVersion":["Retrieves the version of Rich Edit","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetVersion ( )\\r```"],"_GUICtrlRichEdit_GetXYFromCharPos":["Retrieves the XY coordinates of an inter-character position","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetXYFromCharPos ( $hWnd, $iCharPos )\\r```"],"_GUICtrlRichEdit_GetZoom":["Gets the zoom level of the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GetZoom ( $hWnd )\\r```"],"_GUICtrlRichEdit_GotoCharPos":["Moves the insertion point to an inter-character position","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_GotoCharPos ( $hWnd, $iCharPos )\\r```"],"_GUICtrlRichEdit_HideSelection":["Hides (or shows) a selection","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_HideSelection ( $hWnd [, $bHide = True] )\\r```"],"_GUICtrlRichEdit_InsertText":["Inserts text at insertion point or anchor point of selection","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_InsertText ( $hWnd, $sText )\\r```"],"_GUICtrlRichEdit_IsModified":["Retrieves the state of a rich edit control\'s modification flag","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_IsModified ( $hWnd )\\r```"],"_GUICtrlRichEdit_IsTextSelected":["Is text selected?","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_IsTextSelected ( $hWnd )\\r```"],"_GUICtrlRichEdit_Paste":["Paste RTF or RTF with Objects from clipboard","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_Paste ( $hWnd )\\r```"],"_GUICtrlRichEdit_PasteSpecial":["Paste RTF or RTF and Objects from clipboard","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_PasteSpecial ( $hWnd [, $bAndObjects = True] )\\r```"],"_GUICtrlRichEdit_PauseRedraw":["Pauses redrawing of the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_PauseRedraw ( $hWnd )\\r```"],"_GUICtrlRichEdit_Redo":["Redoes last undone action","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_Redo ( $hWnd )\\r```"],"_GUICtrlRichEdit_ReplaceText":["Replaces selected text","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_ReplaceText ( $hWnd, $sText [, $bCanUndo = True] )\\r```"],"_GUICtrlRichEdit_ResumeRedraw":["Resumes redrawing of the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_ResumeRedraw ( $hWnd )\\r```"],"_GUICtrlRichEdit_ScrollLineOrPage":["Scrolls the text down or up a line or a page","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_ScrollLineOrPage ( $hWnd, $sAction )\\r```"],"_GUICtrlRichEdit_ScrollLines":["Scrolls the text down or up a number of lines","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_ScrollLines ( $hWnd, $iQlines )\\r```"],"_GUICtrlRichEdit_ScrollToCaret":["Scrolls to show line on which caret (insertion point) is","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_ScrollToCaret ( $hWnd )\\r```"],"_GUICtrlRichEdit_SetBkColor":["Sets the background color of the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetBkColor ( $hWnd [, $iBngColor = Default] )\\r```"],"_GUICtrlRichEdit_SetCharAttributes":["Turns an attribute on or off for selected text or, if none selected, for text inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetCharAttributes ( $hWnd, $sStatesAndEffects [, $bWord = False] )\\r```"],"_GUICtrlRichEdit_SetCharBkColor":["Sets the background color of selected text or, if none selected, sets the background color of text inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetCharBkColor ( $hWnd [, $iBkColor = Default] )\\r```"],"_GUICtrlRichEdit_SetCharColor":["Sets the color of selected text or, if none selected, sets the background color of text inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetCharColor ( $hWnd [, $iColor = Default] )\\r```"],"_GUICtrlRichEdit_SetEventMask":["Specifies which notification messages are sent to the parent window","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetEventMask ( $hWnd, $iEventMask )\\r```"],"_GUICtrlRichEdit_SetFont":["Sets the font attributes of selected text or, if none selected, sets those of text inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetFont ( $hWnd [, $iPoints = Default [, $sName = Default [, $iCharset = Default [, $iLcid = Default]]]] )\\r```"],"_GUICtrlRichEdit_SetLimitOnText":["Change number of characters that can be typed, pasted or streamed in as Rich Text Format","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetLimitOnText ( $hWnd, $iNewLimit )\\r```"],"_GUICtrlRichEdit_SetModified":["Sets or clears the modification flag","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetModified ( $hWnd [, $bState = True] )\\r```"],"_GUICtrlRichEdit_SetParaAlignment":["Sets alignment of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetParaAlignment ( $hWnd, $sAlignment )\\r```"],"_GUICtrlRichEdit_SetParaAttributes":["Sets attributes of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetParaAttributes ( $hWnd, $sStatesAndAtts )\\r```"],"_GUICtrlRichEdit_SetParaBorder":["Sets the border of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetParaBorder ( $hWnd [, $sLocation = Default [, $vLineStyle = Default [, $sColor = Default [, $iSpace = Default]]]] )\\r```"],"_GUICtrlRichEdit_SetParaIndents":["Sets indents of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetParaIndents ( $hWnd [, $vLeft = Default [, $iRight = Default [, $iFirstLine = Default]]] )\\r```"],"_GUICtrlRichEdit_SetParaNumbering":["Sets numbering of paragraph(s) in the current selection or, if no selection, of paragraph(s) inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetParaNumbering ( $hWnd, $sStyle [, $iTextToNbrSpace = Default [, $bForceRoman = False]] )\\r```"],"_GUICtrlRichEdit_SetParaShading":["Sets the shading of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetParaShading ( $hWnd [, $iWeight = Default [, $sStyle = Default [, $sForeColor = Default [, $sBackColor = Default]]]] )\\r```"],"_GUICtrlRichEdit_SetParaSpacing":["Sets paragraph spacing of paragraphs having selected text or, if none selected, sets it for text inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetParaSpacing ( $hWnd [, $vInter = Default [, $iBefore = Default [, $iAfter = Default]]] )\\r```"],"_GUICtrlRichEdit_SetParaTabStops":["Sets tab stops of paragraphs having selected text or, if none selected, sets it for text inserted at the insertion point","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetParaTabStops ( $hWnd, $sTabStops )\\r```"],"_GUICtrlRichEdit_SetPasswordChar":["Sets the characters to be displayed instead of those typed, or causes typed characters to show","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetPasswordChar ( $hWnd [, $sDisplayChar = \\"*\\"] )\\r```"],"_GUICtrlRichEdit_SetReadOnly":["Sets or removes the read-only state","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetReadOnly ( $hWnd [, $bState = True] )\\r```"],"_GUICtrlRichEdit_SetRECT":["Sets the formatting rectangle of a Rich Edit control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetRECT ( $hWnd [, $iLeft = Default [, $iTop = Default [, $iRight = Default [, $iBottom = Default [, $bRedraw = True]]]]] )\\r```"],"_GUICtrlRichEdit_SetScrollPos":["Scrolls the display such that ($ix,$iY) is in the upper left corner of the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetScrollPos ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlRichEdit_SetSel":["Sets the low and high character position of a selection","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetSel ( $hWnd, $iAnchor, $iActive [, $bHideSel = False] )\\r```"],"_GUICtrlRichEdit_SetSpaceUnit":["Sets the unit of measure of horizontal and vertical space used in parameters of various _GUICtrlRichEdit functions","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetSpaceUnit ( $sUnit )\\r```"],"_GUICtrlRichEdit_SetTabStops":["Sets tab stops for the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetTabStops ( $hWnd, $vTabStops [, $bRedraw = True] )\\r```"],"_GUICtrlRichEdit_SetText":["Sets the text of a control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetText ( $hWnd, $sText )\\r```"],"_GUICtrlRichEdit_SetUndoLimit":["Sets the maximum number of actions that can stored in the undo queue","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetUndoLimit ( $hWnd, $iLimit )\\r```"],"_GUICtrlRichEdit_SetZoom":["Sets zoom level of the control","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_SetZoom ( $hWnd, $iPercent )\\r```"],"_GUICtrlRichEdit_StreamFromFile":["Sets text in a control from a file","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_StreamFromFile ( $hWnd, $sFileSpec )\\r```"],"_GUICtrlRichEdit_StreamFromVar":["Sets text in a control from a variable","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_StreamFromVar ( $hWnd, $sVar )\\r```"],"_GUICtrlRichEdit_StreamToFile":["Writes contents of a control to a file","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_StreamToFile ( $hWnd, $sFileSpec [, $bIncludeCOM = True [, $iOpts = 0 [, $iCodePage = 0]]] )\\r```"],"_GUICtrlRichEdit_StreamToVar":["Writes contents of a control to a variable","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_StreamToVar ( $hWnd [, $bRtf = True [, $bIncludeCOM = True [, $iOpts = 0 [, $iCodePage = 0]]]] )\\r```"],"_GUICtrlRichEdit_Undo":["Undoes the last edit control operation in the control\'s undo queue","```\\r#include <GuiRichEdit.au3>\\r_GUICtrlRichEdit_Undo ( $hWnd )\\r```"]}'),B=JSON.parse('{"_GUIScrollBars_EnableScrollBar":["Enable/Disable scrollbar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_EnableScrollBar ( $hWnd [, $iSBflags = $SB_BOTH [, $iArrows = $ESB_ENABLE_BOTH]] )\\r```"],"_GUIScrollBars_GetScrollBarInfoEx":["Retrieves information about the specified scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollBarInfoEx ( $hWnd, $iObject )\\r```"],"_GUIScrollBars_GetScrollBarRect":["Retrieves coordinates of the scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollBarRect ( $hWnd, $iObject )\\r```"],"_GUIScrollBars_GetScrollBarRGState":["Retrieves the state of a scroll bar component","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollBarRGState ( $hWnd, $iObject )\\r```"],"_GUIScrollBars_GetScrollBarXYLineButton":["Retrieves the Height or width of the thumb","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollBarXYLineButton ( $hWnd, $iObject )\\r```"],"_GUIScrollBars_GetScrollBarXYThumbBottom":["Retrieves the Position of the bottom or right of the thumb","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollBarXYThumbBottom ( $hWnd, $iObject )\\r```"],"_GUIScrollBars_GetScrollBarXYThumbTop":["Retrieves the Position of the top or left of the thumb","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollBarXYThumbTop ( $hWnd, $iObject )\\r```"],"_GUIScrollBars_GetScrollInfo":["Retrieves the parameters of a scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollInfo ( $hWnd, $iBar, ByRef $tSCROLLINFO )\\r```"],"_GUIScrollBars_GetScrollInfoEx":["Retrieves the parameters of a scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollInfoEx ( $hWnd, $iBar )\\r```"],"_GUIScrollBars_GetScrollInfoMax":["Retrieves the maximum scrolling position","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollInfoMax ( $hWnd, $iBar )\\r```"],"_GUIScrollBars_GetScrollInfoMin":["Retrieves the minimum scrolling position","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollInfoMin ( $hWnd, $iBar )\\r```"],"_GUIScrollBars_GetScrollInfoPage":["Retrieves the page size","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollInfoPage ( $hWnd, $iBar )\\r```"],"_GUIScrollBars_GetScrollInfoPos":["Retrieves the position of the scroll box","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollInfoPos ( $hWnd, $iBar )\\r```"],"_GUIScrollBars_GetScrollInfoTrackPos":["Retrieves the immediate position of a scroll box that the user is dragging","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollInfoTrackPos ( $hWnd, $iBar )\\r```"],"_GUIScrollBars_GetScrollPos":["Retrieves the current position of the scroll box (thumb) in the specified scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollPos ( $hWnd, $iBar )\\r```"],"_GUIScrollBars_GetScrollRange":["Retrieves the current minimum and maximum scroll box (thumb) positions for the specified scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_GetScrollRange ( $hWnd, $iBar )\\r```"],"_GUIScrollBars_Init":["Initialize the scrollbars for the window","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_Init ( $hWnd [, $iMaxH = -1 [, $iMaxV = -1]] )\\r```"],"_GUIScrollBars_ScrollWindow":["Scrolls the contents of the specified window\'s client area","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_ScrollWindow ( $hWnd, $iXAmount, $iYAmount )\\r```"],"_GUIScrollBars_SetScrollInfo":["Sets the parameters of a scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_SetScrollInfo ( $hWnd, $iBar, $tSCROLLINFO [, $bRedraw = True] )\\r```"],"_GUIScrollBars_SetScrollInfoMax":["Sets the maximum scrolling position","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_SetScrollInfoMax ( $hWnd, $iBar, $iMax )\\r```"],"_GUIScrollBars_SetScrollInfoMin":["Sets the minimum scrolling position","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_SetScrollInfoMin ( $hWnd, $iBar, $iMin )\\r```"],"_GUIScrollBars_SetScrollInfoPage":["Sets the page size","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_SetScrollInfoPage ( $hWnd, $iBar, $iPage )\\r```"],"_GUIScrollBars_SetScrollInfoPos":["Sets the position of the scroll box (thumb) in the specified scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_SetScrollInfoPos ( $hWnd, $iBar, $iPos )\\r```"],"_GUIScrollBars_SetScrollRange":["Sets the minimum and maximum scroll box positions for the specified scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_SetScrollRange ( $hWnd, $iBar, $iMinPos, $iMaxPos )\\r```"],"_GUIScrollBars_ShowScrollBar":["Shows or hides the specified scroll bar","```\\r#include <GuiScrollBars.au3>\\r_GUIScrollBars_ShowScrollBar ( $hWnd, $iBar [, $bShow = True] )\\r```"]}'),O=JSON.parse('{"_GUICtrlSlider_ClearSel":["Clears the current selection range","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_ClearSel ( $hWnd )\\r```"],"_GUICtrlSlider_ClearTics":["Removes the current tick marks from a slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_ClearTics ( $hWnd )\\r```"],"_GUICtrlSlider_Create":["Create a Slider control","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_Create ( $hWnd, $iX, $iY [, $iWidth = 100 [, $iHeight = 20 [, $iStyle = $TBS_AUTOTICKS [, $iExStyle = 0x00000000]]]] )\\r```"],"_GUICtrlSlider_Destroy":["Delete the control","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlSlider_GetBuddy":["Retrieves the handle to a slider control buddy window at a given location","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetBuddy ( $hWnd, $bLocation )\\r```"],"_GUICtrlSlider_GetChannelRect":["Retrieves the size and position of the bounding rectangle for a sliders\'s channel","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetChannelRect ( $hWnd )\\r```"],"_GUICtrlSlider_GetChannelRectEx":["Retrieves the size and position of the bounding rectangle for a sliders\'s channel","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetChannelRectEx ( $hWnd )\\r```"],"_GUICtrlSlider_GetLineSize":["Retrieves the number of logical positions the slider moves","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetLineSize ( $hWnd )\\r```"],"_GUICtrlSlider_GetLogicalTics":["Retrieves an array that contains the logical positions of the tick marks for a slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetLogicalTics ( $hWnd )\\r```"],"_GUICtrlSlider_GetNumTics":["Retrieves the number of tick marks from a slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetNumTics ( $hWnd )\\r```"],"_GUICtrlSlider_GetPageSize":["Retrieves the number of logical positions the slider moves","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetPageSize ( $hWnd )\\r```"],"_GUICtrlSlider_GetPos":["Retrieves the logical position the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetPos ( $hWnd )\\r```"],"_GUICtrlSlider_GetRange":["Retrieves the maximum and minimum position for the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetRange ( $hWnd )\\r```"],"_GUICtrlSlider_GetRangeMax":["Retrieves the maximum position for the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetRangeMax ( $hWnd )\\r```"],"_GUICtrlSlider_GetRangeMin":["Retrieves the minimum position for the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetRangeMin ( $hWnd )\\r```"],"_GUICtrlSlider_GetSel":["Retrieves the ending and starting position of the current selection range","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetSel ( $hWnd )\\r```"],"_GUICtrlSlider_GetSelEnd":["Retrieves the ending position of the current selection range","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetSelEnd ( $hWnd )\\r```"],"_GUICtrlSlider_GetSelStart":["Retrieves the starting position of the current selection range","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetSelStart ( $hWnd )\\r```"],"_GUICtrlSlider_GetThumbLength":["Retrieves the length of the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetThumbLength ( $hWnd )\\r```"],"_GUICtrlSlider_GetThumbRect":["Retrieves the size and position of the bounding rectangle for the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetThumbRect ( $hWnd )\\r```"],"_GUICtrlSlider_GetThumbRectEx":["Retrieves the size and position of the bounding rectangle for the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetThumbRectEx ( $hWnd )\\r```"],"_GUICtrlSlider_GetTic":["Retrieves the logical position of a tick mark","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetTic ( $hWnd, $iTic )\\r```"],"_GUICtrlSlider_GetTicPos":["Retrieves the current physical position of a tick mark","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetTicPos ( $hWnd, $iTic )\\r```"],"_GUICtrlSlider_GetToolTips":["Retrieves the handle to the ToolTip control assigned to the slider, if any","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetToolTips ( $hWnd )\\r```"],"_GUICtrlSlider_GetUnicodeFormat":["Retrieves the Unicode character format flag for the control","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_GetUnicodeFormat ( $hWnd )\\r```"],"_GUICtrlSlider_SetBuddy":["Assigns a window as the buddy window for a slider control","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetBuddy ( $hWnd, $bLocation, $hBuddy )\\r```"],"_GUICtrlSlider_SetLineSize":["Sets the number of logical positions the slider moves","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetLineSize ( $hWnd, $iLineSize )\\r```"],"_GUICtrlSlider_SetPageSize":["Sets the number of logical positions the slider moves","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetPageSize ( $hWnd, $iPageSize )\\r```"],"_GUICtrlSlider_SetPos":["Sets the current logical position of the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetPos ( $hWnd, $iPosition )\\r```"],"_GUICtrlSlider_SetRange":["Sets the range of minimum and maximum logical positions for the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetRange ( $hWnd, $iMinimum, $iMaximum )\\r```"],"_GUICtrlSlider_SetRangeMax":["Sets the maximum logical position for the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetRangeMax ( $hWnd, $iMaximum )\\r```"],"_GUICtrlSlider_SetRangeMin":["Sets the minimum logical position for the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetRangeMin ( $hWnd, $iMinimum )\\r```"],"_GUICtrlSlider_SetSel":["Sets the starting and ending positions for the available selection range","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetSel ( $hWnd, $iMinimum, $iMaximum )\\r```"],"_GUICtrlSlider_SetSelEnd":["Sets the ending logical position of the current selection range","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetSelEnd ( $hWnd, $iMaximum )\\r```"],"_GUICtrlSlider_SetSelStart":["Sets the starting logical position of the current selection range","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetSelStart ( $hWnd, $iMinimum )\\r```"],"_GUICtrlSlider_SetThumbLength":["Sets the length of the slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetThumbLength ( $hWnd, $iLength )\\r```"],"_GUICtrlSlider_SetTic":["Sets a tick mark in a slider at the specified logical position","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetTic ( $hWnd, $iPosition )\\r```"],"_GUICtrlSlider_SetTicFreq":["Sets the interval frequency for tick marks in a slider","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetTicFreq ( $hWnd, $iFreg )\\r```"],"_GUICtrlSlider_SetTipSide":["Positions a ToolTip control","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetTipSide ( $hWnd, $iLocation )\\r```"],"_GUICtrlSlider_SetToolTips":["Assigns a ToolTip control to a slider control","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetToolTips ( $hWnd, $hWndTT )\\r```"],"_GUICtrlSlider_SetUnicodeFormat":["Sets the Unicode character format flag for the control","```\\r#include <GuiSlider.au3>\\r_GUICtrlSlider_SetUnicodeFormat ( $hWnd, $bUnicode )\\r```"]}'),M=JSON.parse('{"_GUICtrlStatusBar_Create":["Create a statusbar","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_Create ( $hWnd [, $vPartEdge = -1 [, $vPartText = \\"\\" [, $iStyles = -1 [, $iExStyles = 0x00000000]]]] )\\r```"],"_GUICtrlStatusBar_Destroy":["Delete the control","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlStatusBar_EmbedControl":["Embeds a child control in the control","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_EmbedControl ( $hWnd, $iPart, $hControl [, $iFit = 4] )\\r```"],"_GUICtrlStatusBar_GetBorders":["Retrieves the current widths of the horizontal and vertical borders","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetBorders ( $hWnd )\\r```"],"_GUICtrlStatusBar_GetBordersHorz":["Retrieves the current width of the horizontal border","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetBordersHorz ( $hWnd )\\r```"],"_GUICtrlStatusBar_GetBordersRect":["Retrieves the current width of the rectangle border","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetBordersRect ( $hWnd )\\r```"],"_GUICtrlStatusBar_GetBordersVert":["Retrieves the current width of the vertical border","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetBordersVert ( $hWnd )\\r```"],"_GUICtrlStatusBar_GetCount":["Retrieves the number of parts","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetCount ( $hWnd )\\r```"],"_GUICtrlStatusBar_GetHeight":["Retrieves the height of the statusbar","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetHeight ( $hWnd )\\r```"],"_GUICtrlStatusBar_GetIcon":["Retrieves the icon for a part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetIcon ( $hWnd [, $iIndex = 0] )\\r```"],"_GUICtrlStatusBar_GetParts":["Retrieves the number of parts and the part edges","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetParts ( $hWnd )\\r```"],"_GUICtrlStatusBar_GetRect":["Retrieves the bounding rectangle of a part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetRect ( $hWnd, $iPart )\\r```"],"_GUICtrlStatusBar_GetRectEx":["Retrieves the bounding rectangle of a part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetRectEx ( $hWnd, $iPart )\\r```"],"_GUICtrlStatusBar_GetText":["Retrieves the text from the specified part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetText ( $hWnd, $iPart )\\r```"],"_GUICtrlStatusBar_GetTextFlags":["Retrieves the text length flags for a part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetTextFlags ( $hWnd, $iPart )\\r```"],"_GUICtrlStatusBar_GetTextLength":["Retrieves the length of a part text","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetTextLength ( $hWnd, $iPart )\\r```"],"_GUICtrlStatusBar_GetTextLengthEx":["Retrieves the uFlag of a part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetTextLengthEx ( $hWnd, $iPart )\\r```"],"_GUICtrlStatusBar_GetTipText":["Retrieves the ToolTip text for a part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetTipText ( $hWnd, $iPart )\\r```"],"_GUICtrlStatusBar_GetUnicodeFormat":["Retrieves the Unicode character format flag","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetUnicodeFormat ( $hWnd )\\r```"],"_GUICtrlStatusBar_GetWidth":["Retrieves the width of a part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_GetWidth ( $hWnd, $iPart )\\r```"],"_GUICtrlStatusBar_IsSimple":["Checks a status bar control to determine if it is in simple mode","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_IsSimple ( $hWnd )\\r```"],"_GUICtrlStatusBar_Resize":["Causes the status bar to resize itself","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_Resize ( $hWnd )\\r```"],"_GUICtrlStatusBar_SetBkColor":["Sets the background color","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_SetBkColor ( $hWnd, $iColor )\\r```"],"_GUICtrlStatusBar_SetIcon":["Sets the icon for a part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_SetIcon ( $hWnd, $iPart [, $hIcon = -1 [, $sIconFile = \\"\\"]] )\\r```"],"_GUICtrlStatusBar_SetMinHeight":["Sets the minimum height of a status window\'s drawing area","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_SetMinHeight ( $hWnd, $iMinHeight )\\r```"],"_GUICtrlStatusBar_SetParts":["Sets the number of parts and the part edges","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_SetParts ( $hWnd [, $aParts = -1 [, $aPartWidth = 25]] )\\r```"],"_GUICtrlStatusBar_SetSimple":["Specifies whether a status window displays simple text or displays all window parts","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_SetSimple ( $hWnd [, $bSimple = True] )\\r```"],"_GUICtrlStatusBar_SetText":["Sets the text in the specified part of a status window","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_SetText ( $hWnd [, $sText = \\"\\" [, $iPart = 0 [, $iUFlag = 0]]] )\\r```"],"_GUICtrlStatusBar_SetTipText":["Sets the ToolTip text for a part","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_SetTipText ( $hWnd, $iPart, $sText )\\r```"],"_GUICtrlStatusBar_SetUnicodeFormat":["Sets the Unicode character format flag","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_SetUnicodeFormat ( $hWnd [, $bUnicode = True] )\\r```"],"_GUICtrlStatusBar_ShowHide":["Show/Hide the StatusBar control","```\\r#include <GuiStatusBar.au3>\\r_GUICtrlStatusBar_ShowHide ( $hWnd, $iState )\\r```"]}'),N=JSON.parse('{"_GUICtrlTab_ActivateTab":["Activates a tab by its index","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_ActivateTab ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_ClickTab":["Clicks a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_ClickTab ( $hWnd, $iIndex [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )\\r```"],"_GUICtrlTab_Create":["Create a TabControl control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_Create ( $hWnd, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x00000040 [, $iExStyle = 0x00000000]]]] )\\r```"],"_GUICtrlTab_DeleteAllItems":["Deletes all tabs","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_DeleteAllItems ( $hWnd )\\r```"],"_GUICtrlTab_DeleteItem":["Deletes a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_DeleteItem ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_DeselectAll":["Resets tabs, clearing any that were set to the pressed state","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_DeselectAll ( $hWnd [, $bExclude = True] )\\r```"],"_GUICtrlTab_Destroy":["Delete the control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlTab_FindTab":["Searches for a tab with the specific text","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_FindTab ( $hWnd, $sText [, $bInStr = False [, $iStart = 0]] )\\r```"],"_GUICtrlTab_GetCurFocus":["Returns the index of the item that has the focus in a tab control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetCurFocus ( $hWnd )\\r```"],"_GUICtrlTab_GetCurSel":["Determines the currently selected tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetCurSel ( $hWnd )\\r```"],"_GUICtrlTab_GetDisplayRect":["Retrieves the display rectangle of the client area","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetDisplayRect ( $hWnd )\\r```"],"_GUICtrlTab_GetDisplayRectEx":["Retrieves the display rectangle of the client area","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetDisplayRectEx ( $hWnd )\\r```"],"_GUICtrlTab_GetExtendedStyle":["Retrieves the extended styles that are currently in use","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetExtendedStyle ( $hWnd )\\r```"],"_GUICtrlTab_GetImageList":["Retrieves the tab control image list","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetImageList ( $hWnd )\\r```"],"_GUICtrlTab_GetItem":["Retrieves information about a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetItem ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_GetItemCount":["Retrieves the number of tabs","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetItemCount ( $hWnd )\\r```"],"_GUICtrlTab_GetItemImage":["Retrieves the image index for a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetItemImage ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_GetItemParam":["Retrieves the param data for a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetItemParam ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_GetItemRect":["Retrieves the bounding rectangle for a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetItemRect ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_GetItemRectEx":["Retrieves the bounding rectangle for a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetItemRectEx ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_GetItemState":["Retrieves the state of a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetItemState ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_GetItemText":["Retrieves the text of a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetItemText ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_GetRowCount":["Retrieves the current number of rows of tabs","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetRowCount ( $hWnd )\\r```"],"_GUICtrlTab_GetToolTips":["Retrieves the handle to the ToolTip control associated with the control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetToolTips ( $hWnd )\\r```"],"_GUICtrlTab_GetUnicodeFormat":["Retrieves the Unicode character format flag for the control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_GetUnicodeFormat ( $hWnd )\\r```"],"_GUICtrlTab_HighlightItem":["Sets the highlight state of a tab item","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_HighlightItem ( $hWnd, $iIndex [, $bHighlight = True] )\\r```"],"_GUICtrlTab_HitTest":["Determines where a point lies control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_HitTest ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlTab_InsertItem":["Inserts a new tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_InsertItem ( $hWnd, $iIndex, $sText [, $iImage = -1 [, $iParam = 0]] )\\r```"],"_GUICtrlTab_RemoveImage":["Removes an image from the control\'s image list","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_RemoveImage ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_SetCurFocus":["Sets the focus to a specified tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetCurFocus ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_SetCurSel":["Selects a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetCurSel ( $hWnd, $iIndex )\\r```"],"_GUICtrlTab_SetExtendedStyle":["Sets the extended styles that are currently in use","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetExtendedStyle ( $hWnd, $iStyle )\\r```"],"_GUICtrlTab_SetImageList":["Sets the image list associated with a tab control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetImageList ( $hWnd, $hImage )\\r```"],"_GUICtrlTab_SetItem":["Sets information about a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetItem ( $hWnd, $iIndex [, $sText = -1 [, $iState = -1 [, $iImage = -1 [, $iParam = -1]]]] )\\r```"],"_GUICtrlTab_SetItemImage":["Sets the image of a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetItemImage ( $hWnd, $iIndex, $iImage )\\r```"],"_GUICtrlTab_SetItemParam":["Sets the param data of a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetItemParam ( $hWnd, $iIndex, $iParam )\\r```"],"_GUICtrlTab_SetItemSize":["Sets the width and height of tabs in a fixed width or owner drawn control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetItemSize ( $hWnd, $iWidth, $iHeight )\\r```"],"_GUICtrlTab_SetItemState":["Sets the state of a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetItemState ( $hWnd, $iIndex, $iState )\\r```"],"_GUICtrlTab_SetItemText":["Sets the text of a tab","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetItemText ( $hWnd, $iIndex, $sText )\\r```"],"_GUICtrlTab_SetMinTabWidth":["Sets the minimum width of items in a tab control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetMinTabWidth ( $hWnd, $iMinWidth )\\r```"],"_GUICtrlTab_SetPadding":["Sets the amount of space around each tab\'s icon and label","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetPadding ( $hWnd, $iHorz, $iVert )\\r```"],"_GUICtrlTab_SetToolTips":["Sets the handle to the ToolTip control associated with the control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetToolTips ( $hWnd, $hToolTip )\\r```"],"_GUICtrlTab_SetUnicodeFormat":["Sets the Unicode character format flag for the control","```\\r#include <GuiTab.au3>\\r_GUICtrlTab_SetUnicodeFormat ( $hWnd, $bUnicode )\\r```"]}'),H=JSON.parse('{"_GUICtrlToolbar_AddBitmap":["Adds images to the image list","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_AddBitmap ( $hWnd, $iButtons, $hInst, $iID )\\r```"],"_GUICtrlToolbar_AddButton":["Adds a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_AddButton ( $hWnd, $iID, $iImage [, $iString = 0 [, $iStyle = 0 [, $iState = 4 [, $iParam = 0]]]] )\\r```"],"_GUICtrlToolbar_AddButtonSep":["Adds a separator","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_AddButtonSep ( $hWnd [, $iWidth = 6] )\\r```"],"_GUICtrlToolbar_AddString":["Adds a new string to the toolbar\'s string pool","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_AddString ( $hWnd, $sString )\\r```"],"_GUICtrlToolbar_ButtonCount":["Retrieves a count of the buttons","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_ButtonCount ( $hWnd )\\r```"],"_GUICtrlToolbar_CheckButton":["Checks or unchecks a given button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_CheckButton ( $hWnd, $iCommandID [, $bCheck = True] )\\r```"],"_GUICtrlToolbar_ClickAccel":["Clicks a specific button using it\'s accelerator","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_ClickAccel ( $hWnd, $sAccelKey [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )\\r```"],"_GUICtrlToolbar_ClickButton":["Clicks a specific button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_ClickButton ( $hWnd, $iCommandID [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )\\r```"],"_GUICtrlToolbar_ClickIndex":["Clicks a specific button using it\'s index","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_ClickIndex ( $hWnd, $iIndex [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )\\r```"],"_GUICtrlToolbar_CommandToIndex":["Retrieves the index for the button associated with the specified command identifier","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_CommandToIndex ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_Create":["Create a Toolbar control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_Create ( $hWnd [, $iStyle = 0x00000800 [, $iExStyle = 0x00000000]] )\\r```"],"_GUICtrlToolbar_Customize":["Displays the Customize Toolbar dialog box","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_Customize ( $hWnd )\\r```"],"_GUICtrlToolbar_DeleteButton":["Deletes a button from the toolbar","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_DeleteButton ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_Destroy":["Delete the control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlToolbar_EnableButton":["Enables or disables the specified button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_EnableButton ( $hWnd, $iCommandID [, $bEnable = True] )\\r```"],"_GUICtrlToolbar_FindToolbar":["Finds a specific toolbar","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_FindToolbar ( $hWnd, $sText )\\r```"],"_GUICtrlToolbar_GetAnchorHighlight":["Retrieves the anchor highlight setting","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetAnchorHighlight ( $hWnd )\\r```"],"_GUICtrlToolbar_GetBitmapFlags":["Retrieves the flags that describe the type of bitmap to be used","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetBitmapFlags ( $hWnd )\\r```"],"_GUICtrlToolbar_GetButtonBitmap":["Retrieves the index of the bitmap associated with a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonBitmap ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_GetButtonInfo":["Retrieves information for a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonInfo ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_GetButtonInfoEx":["Retrieves extended information for a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonInfoEx ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_GetButtonParam":["Retrieves the button param value","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonParam ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_GetButtonRect":["Retrieves the bounding rectangle for a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonRect ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_GetButtonRectEx":["Retrieves the bounding rectangle for a specified toolbar button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonRectEx ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_GetButtonSize":["Retrieves the current button width and height, in pixels","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonSize ( $hWnd )\\r```"],"_GUICtrlToolbar_GetButtonState":["Retrieves information about the state of the specified button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonState ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_GetButtonStyle":["Retrieves the style flags of a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonStyle ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_GetButtonText":["Retrieves the display text of a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetButtonText ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_GetColorScheme":["Retrieves the color scheme information","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetColorScheme ( $hWnd )\\r```"],"_GUICtrlToolbar_GetDisabledImageList":["Retrieves the disabled button image list","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetDisabledImageList ( $hWnd )\\r```"],"_GUICtrlToolbar_GetExtendedStyle":["Retrieves the extended styles","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetExtendedStyle ( $hWnd )\\r```"],"_GUICtrlToolbar_GetHotImageList":["Retrieves the hot button image list","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetHotImageList ( $hWnd )\\r```"],"_GUICtrlToolbar_GetHotItem":["Retrieves the index of the hot item","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetHotItem ( $hWnd )\\r```"],"_GUICtrlToolbar_GetImageList":["Retrieves the default state image list","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetImageList ( $hWnd )\\r```"],"_GUICtrlToolbar_GetInsertMark":["Retrieves the current insertion mark","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetInsertMark ( $hWnd )\\r```"],"_GUICtrlToolbar_GetInsertMarkColor":["Retrieves the color used to draw the insertion mark","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetInsertMarkColor ( $hWnd )\\r```"],"_GUICtrlToolbar_GetMaxSize":["Retrieves the total size of all of the visible buttons and separators","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetMaxSize ( $hWnd )\\r```"],"_GUICtrlToolbar_GetMetrics":["Retrieves the metrics of a toolbar control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetMetrics ( $hWnd )\\r```"],"_GUICtrlToolbar_GetPadding":["Retrieves the horizontal and vertical padding","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetPadding ( $hWnd )\\r```"],"_GUICtrlToolbar_GetRows":["Retrieves the number of rows of buttons","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetRows ( $hWnd )\\r```"],"_GUICtrlToolbar_GetString":["Retrieves a string from the string pool","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetString ( $hWnd, $iIndex )\\r```"],"_GUICtrlToolbar_GetStyle":["Retrieves the styles currently in use for a toolbar control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetStyle ( $hWnd )\\r```"],"_GUICtrlToolbar_GetStyleAltDrag":["Indicates that the control allows buttons to be dragged","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetStyleAltDrag ( $hWnd )\\r```"],"_GUICtrlToolbar_GetStyleCustomErase":["Indicates that the control generates NM_CUSTOMDRAW notification messages","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetStyleCustomErase ( $hWnd )\\r```"],"_GUICtrlToolbar_GetStyleFlat":["Indicates that the control is flat","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetStyleFlat ( $hWnd )\\r```"],"_GUICtrlToolbar_GetStyleList":["Indicates that the control has button text to the right of the bitmap","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetStyleList ( $hWnd )\\r```"],"_GUICtrlToolbar_GetStyleRegisterDrop":["Indicates that the control generates TBN_GETOBJECT notification messages","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetStyleRegisterDrop ( $hWnd )\\r```"],"_GUICtrlToolbar_GetStyleToolTips":["Indicates that the control has tooltips","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetStyleToolTips ( $hWnd )\\r```"],"_GUICtrlToolbar_GetStyleTransparent":["Indicates that the control is transparent","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetStyleTransparent ( $hWnd )\\r```"],"_GUICtrlToolbar_GetStyleWrapable":["Indicates that the control is wrapable","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetStyleWrapable ( $hWnd )\\r```"],"_GUICtrlToolbar_GetTextRows":["Retrieves the maximum number of text rows that can be displayed on a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetTextRows ( $hWnd )\\r```"],"_GUICtrlToolbar_GetToolTips":["Retrieves the handle to the ToolTip control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetToolTips ( $hWnd )\\r```"],"_GUICtrlToolbar_GetUnicodeFormat":["Retrieves the Unicode character format flag","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_GetUnicodeFormat ( $hWnd )\\r```"],"_GUICtrlToolbar_HideButton":["Hides or shows the specified button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_HideButton ( $hWnd, $iCommandID [, $bHide = True] )\\r```"],"_GUICtrlToolbar_HighlightButton":["Sets the highlight state of a given button control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_HighlightButton ( $hWnd, $iCommandID [, $bHighlight = True] )\\r```"],"_GUICtrlToolbar_HitTest":["Determines where a point lies within the control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_HitTest ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlToolbar_IndexToCommand":["Retrieves the command identifier associated with the button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_IndexToCommand ( $hWnd, $iIndex )\\r```"],"_GUICtrlToolbar_InsertButton":["Inserts a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_InsertButton ( $hWnd, $iIndex, $iID, $iImage [, $sText = \\"\\" [, $iStyle = 0 [, $iState = 4 [, $iParam = 0]]]] )\\r```"],"_GUICtrlToolbar_InsertMarkHitTest":["Retrieves the insertion mark information for a point","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_InsertMarkHitTest ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlToolbar_IsButtonChecked":["Indicates whether the specified button is checked","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_IsButtonChecked ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_IsButtonEnabled":["Indicates whether the specified button is enabled","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_IsButtonEnabled ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_IsButtonHidden":["Indicates whether the specified button is hidden","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_IsButtonHidden ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_IsButtonHighlighted":["Indicates whether the specified button is hilighted","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_IsButtonHighlighted ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_IsButtonIndeterminate":["Indicates whether the specified button is indeterminate","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_IsButtonIndeterminate ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_IsButtonPressed":["Indicates that the button is being clicked","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_IsButtonPressed ( $hWnd, $iCommandID )\\r```"],"_GUICtrlToolbar_LoadBitmap":["Adds a bitmap to the image list from a file","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_LoadBitmap ( $hWnd, $sFileName )\\r```"],"_GUICtrlToolbar_LoadImages":["Loads system defined button images into a toolbar control\'s image list","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_LoadImages ( $hWnd, $iBitMapID )\\r```"],"_GUICtrlToolbar_MapAccelerator":["Determines the ID of the button that corresponds to the specified accelerator","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_MapAccelerator ( $hWnd, $sAccelKey )\\r```"],"_GUICtrlToolbar_MoveButton":["Moves a button from one index to another","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_MoveButton ( $hWnd, $iOldPos, $iNewPos )\\r```"],"_GUICtrlToolbar_PressButton":["Presses or releases the specified button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_PressButton ( $hWnd, $iCommandID [, $bPress = True] )\\r```"],"_GUICtrlToolbar_SetAnchorHighlight":["Sets the anchor highlight setting","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetAnchorHighlight ( $hWnd, $bAnchor )\\r```"],"_GUICtrlToolbar_SetBitmapSize":["Sets the size of the bitmapped images to be added to a toolbar","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetBitmapSize ( $hWnd, $iWidth, $iHeight )\\r```"],"_GUICtrlToolbar_SetButtonBitMap":["Sets the index of the bitmap associated with a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetButtonBitMap ( $hWnd, $iCommandID, $iIndex )\\r```"],"_GUICtrlToolbar_SetButtonInfo":["Sets information for a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetButtonInfo ( $hWnd, $iCommandID [, $iImage = -3 [, $iState = -1 [, $iStyle = -1 [, $iWidth = -1 [, $iParam = -1]]]]] )\\r```"],"_GUICtrlToolbar_SetButtonInfoEx":["Sets extended information for a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetButtonInfoEx ( $hWnd, $iCommandID, $tButton )\\r```"],"_GUICtrlToolbar_SetButtonParam":["Sets the button param value","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetButtonParam ( $hWnd, $iCommandID, $iParam )\\r```"],"_GUICtrlToolbar_SetButtonSize":["Sets the size of the buttons to be added to a toolbar","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetButtonSize ( $hWnd, $iHeight, $iWidth )\\r```"],"_GUICtrlToolbar_SetButtonState":["Sets information about the state of the specified button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetButtonState ( $hWnd, $iCommandID, $iState )\\r```"],"_GUICtrlToolbar_SetButtonStyle":["Sets the style flags of a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetButtonStyle ( $hWnd, $iCommandID, $iStyle )\\r```"],"_GUICtrlToolbar_SetButtonText":["Sets the display text of a button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetButtonText ( $hWnd, $iCommandID, $sText )\\r```"],"_GUICtrlToolbar_SetButtonWidth":["Sets the minimum and maximum button widths in the toolbar control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetButtonWidth ( $hWnd, $iMin, $iMax )\\r```"],"_GUICtrlToolbar_SetCmdID":["Sets the command identifier of a toolbar button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetCmdID ( $hWnd, $iIndex, $iCommandID )\\r```"],"_GUICtrlToolbar_SetColorScheme":["Sets the color scheme information","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetColorScheme ( $hWnd, $iHighlight, $iShadow )\\r```"],"_GUICtrlToolbar_SetDisabledImageList":["Sets the disabled image list","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetDisabledImageList ( $hWnd, $hImageList )\\r```"],"_GUICtrlToolbar_SetDrawTextFlags":["Sets the text drawing flags for the toolbar","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetDrawTextFlags ( $hWnd, $iMask, $iDTFlags )\\r```"],"_GUICtrlToolbar_SetExtendedStyle":["Sets the extended styles control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetExtendedStyle ( $hWnd, $iStyle )\\r```"],"_GUICtrlToolbar_SetHotImageList":["Sets the hot button image list","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetHotImageList ( $hWnd, $hImageList )\\r```"],"_GUICtrlToolbar_SetHotItem":["Sets the hot item","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetHotItem ( $hWnd, $iIndex )\\r```"],"_GUICtrlToolbar_SetImageList":["Sets the default button image list","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetImageList ( $hWnd, $hImageList )\\r```"],"_GUICtrlToolbar_SetIndent":["Sets the indentation for the first button control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetIndent ( $hWnd, $iIndent )\\r```"],"_GUICtrlToolbar_SetIndeterminate":["Sets or clears the indeterminate state of the specified button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetIndeterminate ( $hWnd, $iCommandID [, $bState = True] )\\r```"],"_GUICtrlToolbar_SetInsertMark":["Sets the current insertion mark for the toolbar","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetInsertMark ( $hWnd, $iButton [, $iFlags = 0] )\\r```"],"_GUICtrlToolbar_SetInsertMarkColor":["Sets the color used to draw the insertion mark","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetInsertMarkColor ( $hWnd, $iColor )\\r```"],"_GUICtrlToolbar_SetMaxTextRows":["Sets the maximum number of text rows displayed button","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetMaxTextRows ( $hWnd, $iMaxRows )\\r```"],"_GUICtrlToolbar_SetMetrics":["Sets the metrics of a toolbar control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetMetrics ( $hWnd, $iXPad, $iYPad, $iXSpacing, $iYSpacing )\\r```"],"_GUICtrlToolbar_SetPadding":["Sets the padding control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetPadding ( $hWnd, $iCX, $iCY )\\r```"],"_GUICtrlToolbar_SetParent":["Sets the window to which the control sends notification messages","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetParent ( $hWnd, $hParent )\\r```"],"_GUICtrlToolbar_SetRows":["Sets the number of rows of buttons","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetRows ( $hWnd, $iRows [, $bLarger = True] )\\r```"],"_GUICtrlToolbar_SetStyle":["Sets the style control","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetStyle ( $hWnd, $iStyle )\\r```"],"_GUICtrlToolbar_SetStyleAltDrag":["Sets whether that the control allows buttons to be dragged","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetStyleAltDrag ( $hWnd [, $bState = True] )\\r```"],"_GUICtrlToolbar_SetStyleCustomErase":["Sets whether the control generates NM_CUSTOMDRAW notification messages","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetStyleCustomErase ( $hWnd [, $bState = True] )\\r```"],"_GUICtrlToolbar_SetStyleFlat":["Sets whether the control is flat","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetStyleFlat ( $hWnd, $bState )\\r```"],"_GUICtrlToolbar_SetStyleList":["Sets whether the control has button text to the right of the bitmap","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetStyleList ( $hWnd, $bState )\\r```"],"_GUICtrlToolbar_SetStyleRegisterDrop":["Sets whether the control generates TBN_GETOBJECT notification messages","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetStyleRegisterDrop ( $hWnd, $bState )\\r```"],"_GUICtrlToolbar_SetStyleToolTips":["Sets whether the control has tooltips","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetStyleToolTips ( $hWnd, $bState )\\r```"],"_GUICtrlToolbar_SetStyleTransparent":["Sets whether the control is transparent","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetStyleTransparent ( $hWnd, $bState )\\r```"],"_GUICtrlToolbar_SetStyleWrapable":["Sets whether the control is wrapable","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetStyleWrapable ( $hWnd, $bState )\\r```"],"_GUICtrlToolbar_SetToolTips":["Associates a ToolTip control with a toolbar","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetToolTips ( $hWnd, $hToolTip )\\r```"],"_GUICtrlToolbar_SetUnicodeFormat":["Sets the Unicode character format flag","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetUnicodeFormat ( $hWnd [, $bUnicode = False] )\\r```"],"_GUICtrlToolbar_SetWindowTheme":["Sets the visual style","```\\r#include <GuiToolbar.au3>\\r_GUICtrlToolbar_SetWindowTheme ( $hWnd, $sTheme )\\r```"]}'),k=JSON.parse('{"_GUIToolTip_Activate":["Activates a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_Activate ( $hWnd )\\r```"],"_GUIToolTip_AddTool":["Registers a tool with the ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_AddTool ( $hTool, $hWnd, $sText [, $iID = 0 [, $iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0 [, $iFlags = Default [, $iParam = 0]]]]]]] )\\r```"],"_GUIToolTip_AdjustRect":["Calculates the text display rectangle from the window rectangle","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_AdjustRect ( $hWnd, ByRef $tRECT [, $bLarger = True] )\\r```"],"_GUIToolTip_BitsToTTF":["Decode bit flags to TTF_* strings","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_BitsToTTF ( $iFlags )\\r```"],"_GUIToolTip_Create":["Creates a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_Create ( $hWnd [, $iStyle = $_TT_ghTTDefaultStyle] )\\r```"],"_GUIToolTip_Deactivate":["Deactivates a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_Deactivate ( $hWnd )\\r```"],"_GUIToolTip_DelTool":["Deletes a tool from a tooltip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_DelTool ( $hWnd, $hTool [, $iID = 0] )\\r```"],"_GUIToolTip_Destroy":["Delete a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_Destroy ( ByRef $hWnd )\\r```"],"_GUIToolTip_EnumTools":["Retrieves information about the current tool","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_EnumTools ( $hWnd, $iIndex )\\r```"],"_GUIToolTip_GetBubbleHeight":["Returns the height of the control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetBubbleHeight ( $hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010] )\\r```"],"_GUIToolTip_GetBubbleSize":["Returns the width and height of a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetBubbleSize ( $hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010] )\\r```"],"_GUIToolTip_GetBubbleWidth":["Returns the width of a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetBubbleWidth ( $hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010] )\\r```"],"_GUIToolTip_GetCurrentTool":["Retrieves information for the current tool","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetCurrentTool ( $hWnd )\\r```"],"_GUIToolTip_GetDelayTime":["Retrieves the initial, pop-up or reshow durations of a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetDelayTime ( $hWnd, $iDuration )\\r```"],"_GUIToolTip_GetMargin":["Retrieves the top, left, bottom, and right margins of a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetMargin ( $hWnd )\\r```"],"_GUIToolTip_GetMarginEx":["Retrieves the top, left, bottom, and right margins of a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetMarginEx ( $hWnd )\\r```"],"_GUIToolTip_GetMaxTipWidth":["Retrieves the maximum width of a ToolTip window","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetMaxTipWidth ( $hWnd )\\r```"],"_GUIToolTip_GetText":["Retrieves the text of a tool","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetText ( $hWnd, $hTool, $iID )\\r```"],"_GUIToolTip_GetTipBkColor":["Retrieves the background color","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetTipBkColor ( $hWnd )\\r```"],"_GUIToolTip_GetTipTextColor":["Retrieves the text color of a ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetTipTextColor ( $hWnd )\\r```"],"_GUIToolTip_GetTitleBitMap":["Retrieves the title bitmap icon","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetTitleBitMap ( $hWnd )\\r```"],"_GUIToolTip_GetTitleText":["Retrieve the title","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetTitleText ( $hWnd )\\r```"],"_GUIToolTip_GetToolCount":["Returns the count of tools maintained by the ToolTip control","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetToolCount ( $hWnd )\\r```"],"_GUIToolTip_GetToolInfo":["Retrieves the information about a specific tool","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_GetToolInfo ( $hWnd, $hTool, $iID )\\r```"],"_GUIToolTip_HitTest":["Retrieves the information that a ToolTip control maintains about a tool","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_HitTest ( $hWnd, $hTool, $iX, $iY )\\r```"],"_GUIToolTip_NewToolRect":["Sets a new bounding rectangle for a tool","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_NewToolRect ( $hWnd, $hTool, $iID, $iLeft, $iTop, $iRight, $iBottom )\\r```"],"_GUIToolTip_Pop":["Removes a displayed ToolTip from view","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_Pop ( $hWnd )\\r```"],"_GUIToolTip_PopUp":["Causes the ToolTip to display at the coordinates of the last mouse message","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_PopUp ( $hWnd )\\r```"],"_GUIToolTip_SetDelayTime":["Sets the initial, pop-up, and reshow durations of a ToolTip","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_SetDelayTime ( $hWnd, $iDuration, $iTime )\\r```"],"_GUIToolTip_SetMargin":["Sets the top, left, bottom, and right margins of a ToolTip","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_SetMargin ( $hWnd, $iLeft, $iTop, $iRight, $iBottom )\\r```"],"_GUIToolTip_SetMaxTipWidth":["Sets the maximum width for a ToolTip window","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_SetMaxTipWidth ( $hWnd, $iWidth )\\r```"],"_GUIToolTip_SetTipBkColor":["Sets the background color of a ToolTip","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_SetTipBkColor ( $hWnd, $iColor )\\r```"],"_GUIToolTip_SetTipTextColor":["Sets the text color","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_SetTipTextColor ( $hWnd, $iColor )\\r```"],"_GUIToolTip_SetTitle":["Adds a standard icon and title string","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_SetTitle ( $hWnd, $sTitle [, $iIcon = 0] )\\r```"],"_GUIToolTip_SetToolInfo":["Sets the information for a tool","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_SetToolInfo ( $hWnd, $sText [, $iID = 0 [, $iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0 [, $iFlags = Default [, $iParam = 0]]]]]]] )\\r```"],"_GUIToolTip_SetWindowTheme":["Sets the visual style","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_SetWindowTheme ( $hWnd, $sStyle )\\r```"],"_GUIToolTip_ToolExists":["Determines whether a tool currently exists (is displayed)","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_ToolExists ( $hWnd )\\r```"],"_GUIToolTip_ToolToArray":["Transfers a ToolInfo structure to an array","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_ToolToArray ( $hWnd, ByRef $tToolInfo, $iError )\\r```"],"_GUIToolTip_TrackActivate":["Activates or deactivates a tracking ToolTip","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_TrackActivate ( $hWnd [, $bActivate = True [, $hTool = 0 [, $iID = 0]]] )\\r```"],"_GUIToolTip_TrackPosition":["Sets the position of a tracking ToolTip","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_TrackPosition ( $hWnd, $iX, $iY )\\r```"],"_GUIToolTip_Update":["Forces the current tool to be redrawn","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_Update ( $hWnd )\\r```"],"_GUIToolTip_UpdateTipText":["Sets the ToolTip text for a tool","```\\r#include <GuiToolTip.au3>\\r_GUIToolTip_UpdateTipText ( $hWnd, $hTool, $iID, $sText )\\r```"]}'),V=JSON.parse('{"_GUICtrlTreeView_Add":["Adds a new item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_Add ( $hWnd, $hSibling, $sText [, $iImage = -1 [, $iSelImage = -1]] )\\r```"],"_GUICtrlTreeView_AddChild":["Adds a new item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_AddChild ( $hWnd, $hParent, $sText [, $iImage = -1 [, $iSelImage = -1]] )\\r```"],"_GUICtrlTreeView_AddChildFirst":["Adds a new item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_AddChildFirst ( $hWnd, $hParent, $sText [, $iImage = -1 [, $iSelImage = -1]] )\\r```"],"_GUICtrlTreeView_AddFirst":["Adds a new item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_AddFirst ( $hWnd, $hSibling, $sText [, $iImage = -1 [, $iSelImage = -1]] )\\r```"],"_GUICtrlTreeView_BeginUpdate":["Prevents updating of the control until the EndUpdate function is called","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_BeginUpdate ( $hWnd )\\r```"],"_GUICtrlTreeView_ClickItem":["Click on a item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_ClickItem ( $hWnd, $hItem [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 0]]]] )\\r```"],"_GUICtrlTreeView_Create":["Create a TreeView control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_Create ( $hWnd, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x00000037 [, $iExStyle = 0x00000000]]]] )\\r```"],"_GUICtrlTreeView_CreateDragImage":["Creates a dragging bitmap for the specified item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_CreateDragImage ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_CreateSolidBitMap":["Creates a solid color bitmap","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_CreateSolidBitMap ( $hWnd, $iColor, $iWidth, $iHeight )\\r```"],"_GUICtrlTreeView_Delete":["Removes an item and all its children","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_Delete ( $hWnd [, $hItem = 0] )\\r```"],"_GUICtrlTreeView_DeleteAll":["Removes all items from a tree-view control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_DeleteAll ( $hWnd )\\r```"],"_GUICtrlTreeView_DeleteChildren":["Deletes all children of a item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_DeleteChildren ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_Destroy":["Delete the control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_Destroy ( ByRef $hWnd )\\r```"],"_GUICtrlTreeView_DisplayRect":["Returns the bounding rectangle for a tree item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_DisplayRect ( $hWnd, $hItem [, $bTextOnly = False] )\\r```"],"_GUICtrlTreeView_DisplayRectEx":["Returns the bounding rectangle for a tree item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_DisplayRectEx ( $hWnd, $hItem [, $bTextOnly = False] )\\r```"],"_GUICtrlTreeView_EditText":["Begins in-place editing of the specified item\'s text","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_EditText ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_EndEdit":["Ends the editing of the item\'s text","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_EndEdit ( $hWnd [, $bCancel = False] )\\r```"],"_GUICtrlTreeView_EndUpdate":["Enables screen repainting that was turned off with the BeginUpdate function","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_EndUpdate ( $hWnd )\\r```"],"_GUICtrlTreeView_EnsureVisible":["Ensures that a item is visible, expanding the parent item or scrolling the control if necessary","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_EnsureVisible ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_Expand":["Expands or collapses the list of child items associated with the specified parent item, if any","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_Expand ( $hWnd [, $hItem = 0 [, $bExpand = True]] )\\r```"],"_GUICtrlTreeView_ExpandedOnce":["Indicates if the item\'s list of child items has been expanded at least once","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_ExpandedOnce ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_FindItem":["Retrieves a item based on it\'s text","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_FindItem ( $hWnd, $sText [, $bInStr = False [, $hStart = 0]] )\\r```"],"_GUICtrlTreeView_FindItemEx":["Retrieves a item based on a tree path","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_FindItemEx ( $hWnd, $sTreePath [, $hStart = 0] )\\r```"],"_GUICtrlTreeView_GetBkColor":["Retrieve the text back color","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetBkColor ( $hWnd )\\r```"],"_GUICtrlTreeView_GetBold":["Indicates if the item is drawn in a bold style","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetBold ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetChecked":["Indicates if a item has its checkbox checked","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetChecked ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetChildCount":["Retrieves the number of children of an parent item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetChildCount ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetChildren":["Indicates whether the item children flag is set","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetChildren ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetCount":["Retrieves a count of the items","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetCount ( $hWnd )\\r```"],"_GUICtrlTreeView_GetCut":["Indicates if the item is drawn as if selected as part of a cut and paste operation","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetCut ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetDropTarget":["Indicates whether the item is drawn as a drag and drop target","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetDropTarget ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetEditControl":["Retrieves the handle to the edit control being used to edit a item\'s text","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetEditControl ( $hWnd )\\r```"],"_GUICtrlTreeView_GetExpanded":["Indicates whether the item is expanded","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetExpanded ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetFirstChild":["Retrieves the first child item of the specified item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetFirstChild ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetFirstItem":["Retrieves the topmost or very first item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetFirstItem ( $hWnd )\\r```"],"_GUICtrlTreeView_GetFirstVisible":["Retrieves the first visible item in the control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetFirstVisible ( $hWnd )\\r```"],"_GUICtrlTreeView_GetFocused":["Indicates whether the item has focus","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetFocused ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetHeight":["Retrieves the current height of the each item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetHeight ( $hWnd )\\r```"],"_GUICtrlTreeView_GetImageIndex":["Retrieves the normal state image index","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetImageIndex ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetImageListIconHandle":["Retrieve ImageList handle","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetImageListIconHandle ( $hWnd, $iIndex )\\r```"],"_GUICtrlTreeView_GetIndent":["Retrieves the amount, in pixels, that child items are indented relative to their parent items","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetIndent ( $hWnd )\\r```"],"_GUICtrlTreeView_GetInsertMarkColor":["Retrieves the color used to draw the insertion mark","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetInsertMarkColor ( $hWnd )\\r```"],"_GUICtrlTreeView_GetISearchString":["Retrieves the incremental search string","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetISearchString ( $hWnd )\\r```"],"_GUICtrlTreeView_GetItemByIndex":["Retrieve a item by its position in the list of child items","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetItemByIndex ( $hWnd, $hItem, $iIndex )\\r```"],"_GUICtrlTreeView_GetItemHandle":["Retrieve the item handle","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetItemHandle ( $hWnd [, $hItem = 0] )\\r```"],"_GUICtrlTreeView_GetItemParam":["Retrieves the application specific value of the item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetItemParam ( $hWnd [, $hItem = 0] )\\r```"],"_GUICtrlTreeView_GetLastChild":["Retrieves the last child item of the specified item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetLastChild ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetLineColor":["Retrieve the line color","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetLineColor ( $hWnd )\\r```"],"_GUICtrlTreeView_GetNext":["Retrieves the next item after the calling item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetNext ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetNextChild":["Returns the next item at the same level as the specified item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetNextChild ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetNextSibling":["Returns the next item at the same level as the specified item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetNextSibling ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetNextVisible":["Retrieves the next visible item that follows the specified item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetNextVisible ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetNormalImageList":["Retrieves the normal image list","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetNormalImageList ( $hWnd )\\r```"],"_GUICtrlTreeView_GetParentHandle":["Retrieve the parent handle of item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetParentHandle ( $hWnd [, $hItem = 0] )\\r```"],"_GUICtrlTreeView_GetParentParam":["Retrieve the parent control ID/Param of item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetParentParam ( $hWnd [, $hItem = 0] )\\r```"],"_GUICtrlTreeView_GetPrev":["Retrieves the previous item before the calling item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetPrev ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetPrevChild":["Retrieves the previous child item of a specified item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetPrevChild ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetPrevSibling":["Returns the previous item before the calling item at the same level","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetPrevSibling ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetPrevVisible":["Retrieves the first visible item that precedes the specified item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetPrevVisible ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetScrollTime":["Retrieves the maximum scroll time","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetScrollTime ( $hWnd )\\r```"],"_GUICtrlTreeView_GetSelected":["Indicates whether the item appears in the selected state","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetSelected ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetSelectedImageIndex":["Retrieves the index in the image list of the image displayed for the item when it is selected","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetSelectedImageIndex ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetSelection":["Retrieves the currently selected item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetSelection ( $hWnd )\\r```"],"_GUICtrlTreeView_GetSiblingCount":["Retrieves the number of siblings at the level of an item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetSiblingCount ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetState":["Retrieve the state of the item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetState ( $hWnd [, $hItem = 0] )\\r```"],"_GUICtrlTreeView_GetStateImageIndex":["Retrieves the index of the state image to display for the item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetStateImageIndex ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetStateImageList":["Retrieves the handle to the state image list","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetStateImageList ( $hWnd )\\r```"],"_GUICtrlTreeView_GetText":["Retrieve the item text","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetText ( $hWnd [, $hItem = 0] )\\r```"],"_GUICtrlTreeView_GetTextColor":["Retrieve the text color","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetTextColor ( $hWnd )\\r```"],"_GUICtrlTreeView_GetToolTips":["Retrieves the handle to the child ToolTip control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetToolTips ( $hWnd )\\r```"],"_GUICtrlTreeView_GetTree":["Retrieve all items text","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetTree ( $hWnd [, $hItem = 0] )\\r```"],"_GUICtrlTreeView_GetUnicodeFormat":["Retrieves the Unicode character format flag","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetUnicodeFormat ( $hWnd )\\r```"],"_GUICtrlTreeView_GetVisible":["Indicates whether the item is currently visible in the control image","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetVisible ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_GetVisibleCount":["Returns the number of items that can be fully visible in the control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_GetVisibleCount ( $hWnd )\\r```"],"_GUICtrlTreeView_HitTest":["Returns information about the location of a point relative to the control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_HitTest ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlTreeView_HitTestEx":["Returns information about the location of a point relative to the control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_HitTestEx ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlTreeView_HitTestItem":["Returns the item at the specified coordinates","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_HitTestItem ( $hWnd, $iX, $iY )\\r```"],"_GUICtrlTreeView_Index":["Retrieves the position of the item in the list","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_Index ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_InsertItem":["Insert an item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_InsertItem ( $hWnd, $sItem_Text [, $hItem_Parent = 0 [, $hItem_After = 0 [, $iImage = -1 [, $iSelImage = -1]]]] )\\r```"],"_GUICtrlTreeView_IsFirstItem":["Indicates whether the tree item is very first","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_IsFirstItem ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_IsParent":["Indicates whether one item is the parent of another item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_IsParent ( $hWnd, $hParent, $hItem )\\r```"],"_GUICtrlTreeView_Level":["Indicates the level of indentation of a item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_Level ( $hWnd, $hItem )\\r```"],"_GUICtrlTreeView_SelectItem":["Selects the specified item, scrolls the item into view, or redraws the item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SelectItem ( $hWnd, $hItem [, $iFlag = 0] )\\r```"],"_GUICtrlTreeView_SelectItemByIndex":["Selects the item based on it\'s index in the parent list","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SelectItemByIndex ( $hWnd, $hItem, $iIndex )\\r```"],"_GUICtrlTreeView_SetBkColor":["Sets the back color","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetBkColor ( $hWnd, $vRGBColor )\\r```"],"_GUICtrlTreeView_SetBold":["Sets whether the item is drawn using a bold sytle","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetBold ( $hWnd, $hItem [, $bFlag = True] )\\r```"],"_GUICtrlTreeView_SetChecked":["Sets whether a item has it\'s checkbox checked or not","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetChecked ( $hWnd, $hItem [, $bCheck = True] )\\r```"],"_GUICtrlTreeView_SetCheckedByIndex":["Sets whether an item has it\'s checkbox checked or not by it\'s index","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetCheckedByIndex ( $hWnd, $hItem, $iIndex [, $bCheck = True] )\\r```"],"_GUICtrlTreeView_SetChildren":["Sets whether the item children flag","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetChildren ( $hWnd, $hItem [, $bFlag = True] )\\r```"],"_GUICtrlTreeView_SetCut":["Sets whether the item is drawn as if selected as part of a cut and paste operation","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetCut ( $hWnd, $hItem [, $bFlag = True] )\\r```"],"_GUICtrlTreeView_SetDropTarget":["Sets whether the item is drawn as a drag and drop target","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetDropTarget ( $hWnd, $hItem [, $bFlag = True] )\\r```"],"_GUICtrlTreeView_SetFocused":["Sets whether the item appears to have focus","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetFocused ( $hWnd, $hItem [, $bFlag = True] )\\r```"],"_GUICtrlTreeView_SetHeight":["Sets the height of the each item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetHeight ( $hWnd, $iHeight )\\r```"],"_GUICtrlTreeView_SetIcon":["Set an item icon","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetIcon ( $hWnd [, $hItem = 0 [, $sIconFile = \\"\\" [, $iIconID = 0 [, $iImageMode = 6]]]] )\\r```"],"_GUICtrlTreeView_SetImageIndex":["Sets the index into image list for which image is displayed when a item is in its normal state","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetImageIndex ( $hWnd, $hItem, $iIndex )\\r```"],"_GUICtrlTreeView_SetIndent":["Sets the width of indentation for a tree-view control and redraws the control to reflect the new width","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetIndent ( $hWnd, $iIndent )\\r```"],"_GUICtrlTreeView_SetInsertMark":["Sets the insertion mark","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetInsertMark ( $hWnd, $hItem [, $bAfter = True] )\\r```"],"_GUICtrlTreeView_SetInsertMarkColor":["Sets the color used to draw the insertion mark","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetInsertMarkColor ( $hWnd, $iColor )\\r```"],"_GUICtrlTreeView_SetItemHeight":["Sets the height of an individual item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetItemHeight ( $hWnd, $hItem, $iIntegral )\\r```"],"_GUICtrlTreeView_SetItemParam":["Sets the value specific to the item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetItemParam ( $hWnd, $hItem, $iParam )\\r```"],"_GUICtrlTreeView_SetLineColor":["Sets the line color","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetLineColor ( $hWnd, $vRGBColor )\\r```"],"_GUICtrlTreeView_SetNormalImageList":["Sets the normal image list for the control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetNormalImageList ( $hWnd, $hImageList )\\r```"],"_GUICtrlTreeView_SetScrollTime":["Sets the maximum scroll time","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetScrollTime ( $hWnd, $iTime )\\r```"],"_GUICtrlTreeView_SetSelected":["Sets whether the item appears in the selected state","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetSelected ( $hWnd, $hItem [, $bFlag = True] )\\r```"],"_GUICtrlTreeView_SetSelectedImageIndex":["Sets the selected image index","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetSelectedImageIndex ( $hWnd, $hItem, $iIndex )\\r```"],"_GUICtrlTreeView_SetState":["Set the state of the specified item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetState ( $hWnd, $hItem [, $iState = 0 [, $bSetState = True]] )\\r```"],"_GUICtrlTreeView_SetStateImageIndex":["Sets the index into image list for the state image","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetStateImageIndex ( $hWnd, $hItem, $iIndex )\\r```"],"_GUICtrlTreeView_SetStateImageList":["Sets the state image list for the control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetStateImageList ( $hWnd, $hImageList )\\r```"],"_GUICtrlTreeView_SetText":["Set the text of an item","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetText ( $hWnd [, $hItem = 0 [, $sText = \\"\\"]] )\\r```"],"_GUICtrlTreeView_SetTextColor":["Sets the text color","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetTextColor ( $hWnd, $vRGBColor )\\r```"],"_GUICtrlTreeView_SetToolTips":["Sets the handle to the child ToolTip control","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetToolTips ( $hWnd, $hToolTip )\\r```"],"_GUICtrlTreeView_SetUnicodeFormat":["Sets the Unicode character format flag","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_SetUnicodeFormat ( $hWnd [, $bFormat = True] )\\r```"],"_GUICtrlTreeView_Sort":["Sorts the items","```\\r#include <GuiTreeView.au3>\\r_GUICtrlTreeView_Sort ( $hWnd )\\r```"]}'),j=JSON.parse('{"_IE_Example":["Display a new browser window pre-loaded with documents to be used in IE.au3 examples or your own testing","```\\r#include <IE.au3>\\r_IE_Example ( [$sModule = \\"basic\\"] )\\r```"],"_IE_Introduction":["Display introductory information about IE.au3 in a new browser window","```\\r#include <IE.au3>\\r_IE_Introduction ( [$sModule = \\"basic\\"] )\\r```"],"_IE_VersionInfo":["Returns an array of information about the IE.au3 version","```\\r#include <IE.au3>\\r_IE_VersionInfo ( )\\r```"],"_IEAction":["Perform any of a set of simple actions on the Browser","```\\r#include <IE.au3>\\r_IEAction ( ByRef $oObject, $sAction )\\r```"],"_IEAttach":["Attach to the specified instance of Internet Explorer where the search string sub-string matches (based on the selected mode)","```\\r#include <IE.au3>\\r_IEAttach ( $sString [, $sMode = \\"title\\" [, $iInstance = 1]] )\\r```"],"_IEBodyReadHTML":["Returns the HTML inside the <body> tag of the document","```\\r#include <IE.au3>\\r_IEBodyReadHTML ( ByRef $oObject )\\r```"],"_IEBodyReadText":["Returns the Text inside the <body> tag of the document","```\\r#include <IE.au3>\\r_IEBodyReadText ( ByRef $oObject )\\r```"],"_IEBodyWriteHTML":["Replaces the HTML inside the <body> tag of the document","```\\r#include <IE.au3>\\r_IEBodyWriteHTML ( ByRef $oObject, $sHTML )\\r```"],"_IECreate":["Create an Internet Explorer Browser Window","```\\r#include <IE.au3>\\r_IECreate ( [$sUrl = \\"about:blank\\" [, $iTryAttach = 0 [, $iVisible = 1 [, $iWait = 1 [, $iTakeFocus = 1]]]]] )\\r```"],"_IECreateEmbedded":["Create a Webbrowser object suitable for embedding in an AutoIt GUI with GUICtrlCreateObj()","```\\r#include <IE.au3>\\r_IECreateEmbedded ( )\\r```"],"_IEDocGetObj":["Given any DOM object, returns a reference to the associated document object","```\\r#include <IE.au3>\\r_IEDocGetObj ( ByRef $oObject )\\r```"],"_IEDocInsertHTML":["Inserts HTML Text in or around an element","```\\r#include <IE.au3>\\r_IEDocInsertHTML ( ByRef $oObject, $sString [, $sWhere = \\"beforeend\\"] )\\r```"],"_IEDocInsertText":["Inserts Text in or around an element","```\\r#include <IE.au3>\\r_IEDocInsertText ( ByRef $oObject, $sString [, $sWhere = \\"beforeend\\"] )\\r```"],"_IEDocReadHTML":["Returns the full HTML source of a document","```\\r#include <IE.au3>\\r_IEDocReadHTML ( ByRef $oObject )\\r```"],"_IEDocWriteHTML":["Replaces the HTML for the entire document","```\\r#include <IE.au3>\\r_IEDocWriteHTML ( ByRef $oObject, $sHTML )\\r```"],"_IEErrorNotify":["Specifies whether IE.au3 automatically notifies of Warnings and Errors (to the console)","```\\r#include <IE.au3>\\r_IEErrorNotify ( [$vNotify = Default] )\\r```"],"_IEFormElementCheckBoxSelect":["Set the value of a specified form element","```\\r#include <IE.au3>\\r_IEFormElementCheckBoxSelect ( ByRef $oObject, $sString [, $sName = \\"\\" [, $iSelect = 1 [, $sMode = \\"byValue\\" [, $iFireEvent = 1]]]] )\\r```"],"_IEFormElementGetCollection":["Returns a collection object variable representing all Form Elements within a given Form","```\\r#include <IE.au3>\\r_IEFormElementGetCollection ( ByRef $oObject [, $iIndex = -1] )\\r```"],"_IEFormElementGetObjByName":["Returns an object reference to a Form Element by name","```\\r#include <IE.au3>\\r_IEFormElementGetObjByName ( ByRef $oObject, $sName [, $iIndex = 0] )\\r```"],"_IEFormElementGetValue":["Returns the value of a given Form Element","```\\r#include <IE.au3>\\r_IEFormElementGetValue ( ByRef $oObject )\\r```"],"_IEFormElementOptionSelect":["Set the value of a specified form element","```\\r#include <IE.au3>\\r_IEFormElementOptionSelect ( ByRef $oObject, $sString [, $iSelect = 1 [, $sMode = \\"byValue\\" [, $iFireEvent = 1]]] )\\r```"],"_IEFormElementRadioSelect":["Set the value of a specified form element","```\\r#include <IE.au3>\\r_IEFormElementRadioSelect ( ByRef $oObject, $sString, $sName [, $iSelect = 1 [, $sMode = \\"byValue\\" [, $iFireEvent = 1]]] )\\r```"],"_IEFormElementSetValue":["Set the value of a specified Form Element","```\\r#include <IE.au3>\\r_IEFormElementSetValue ( ByRef $oObject, $sNewValue [, $iFireEvent = 1] )\\r```"],"_IEFormGetCollection":["Returns a collection object variable representing the Forms in the document or a single form by index","```\\r#include <IE.au3>\\r_IEFormGetCollection ( ByRef $oObject [, $iIndex = -1] )\\r```"],"_IEFormGetObjByName":["Returns an object reference to a Form by name","```\\r#include <IE.au3>\\r_IEFormGetObjByName ( ByRef $oObject, $sName [, $iIndex = 0] )\\r```"],"_IEFormImageClick":["Simulate a mouse click on an <input type=image>. Match by sub-string match of alt text, name or src","```\\r#include <IE.au3>\\r_IEFormImageClick ( ByRef $oObject, $sLinkText [, $sMode = \\"src\\" [, $iIndex = 0 [, $iWait = 1]]] )\\r```"],"_IEFormReset":["Reset a specified Form setting the values back to their loaded defaults","```\\r#include <IE.au3>\\r_IEFormReset ( ByRef $oObject )\\r```"],"_IEFormSubmit":["Submit a specified Form","```\\r#include <IE.au3>\\r_IEFormSubmit ( ByRef $oObject [, $iWait = 1] )\\r```"],"_IEFrameGetCollection":["Returns a collection object containing the frames in a FrameSet or the iFrames on a normal page or a single Frame or iFrame by index","```\\r#include <IE.au3>\\r_IEFrameGetCollection ( ByRef $oObject [, $iIndex = -1] )\\r```"],"_IEFrameGetObjByName":["Returns an object reference to a Frame or iFrame by name","```\\r#include <IE.au3>\\r_IEFrameGetObjByName ( ByRef $oObject, $sName )\\r```"],"_IEGetObjById":["Returns an object variable by id","```\\r#include <IE.au3>\\r_IEGetObjById ( ByRef $oObject, $sID )\\r```"],"_IEGetObjByName":["Returns an object variable by name","```\\r#include <IE.au3>\\r_IEGetObjByName ( ByRef $oObject, $sName [, $iIndex = 0] )\\r```"],"_IEHeadInsertEventScript":["Inserts a Javascript into the Head of the document","```\\r#include <IE.au3>\\r_IEHeadInsertEventScript ( ByRef $oObject, $sHTMLFor, $sEvent, $sScript )\\r```"],"_IEImgClick":["Simulate a mouse click on an image. Match by sub-string match of alt text, name, or src","```\\r#include <IE.au3>\\r_IEImgClick ( ByRef $oObject, $sLinkText [, $sMode = \\"src\\" [, $iIndex = 0 [, $iWait = 1]]] )\\r```"],"_IEImgGetCollection":["Returns a collection object variable representing the IMG tags in the document or a single image by index","```\\r#include <IE.au3>\\r_IEImgGetCollection ( ByRef $oObject [, $iIndex = -1] )\\r```"],"_IEIsFrameSet":["Checks to see if the specified Window contains a FrameSet","```\\r#include <IE.au3>\\r_IEIsFrameSet ( ByRef $oObject )\\r```"],"_IELinkClickByIndex":["Simulate a mouse click on a link by 0-based index (in source order)","```\\r#include <IE.au3>\\r_IELinkClickByIndex ( ByRef $oObject, $iIndex [, $iWait = 1] )\\r```"],"_IELinkClickByText":["Simulate a mouse click on a link with text sub-string matching the string provided","```\\r#include <IE.au3>\\r_IELinkClickByText ( ByRef $oObject, $sLinkText [, $iIndex = 0 [, $iWait = 1]] )\\r```"],"_IELinkGetCollection":["Returns a collection object containing all links in the document or a single link by index","```\\r#include <IE.au3>\\r_IELinkGetCollection ( ByRef $oObject [, $iIndex = -1] )\\r```"],"_IELoadWait":["Wait for a browser page load to complete before returning","```\\r#include <IE.au3>\\r_IELoadWait ( ByRef $oObject [, $iDelay = 0 [, $iTimeout = -1]] )\\r```"],"_IELoadWaitTimeout":["Retrieve or set the current value in milliseconds _IELoadWait() will try before timing out","```\\r#include <IE.au3>\\r_IELoadWaitTimeout ( [$iTimeout = -1] )\\r```"],"_IENavigate":["Directs an existing browser window to navigate to the specified URL","```\\r#include <IE.au3>\\r_IENavigate ( ByRef $oObject, $sUrl [, $iWait = 1] )\\r```"],"_IEPropertyGet":["Returns a select property of the Browser or DOM element","```\\r#include <IE.au3>\\r_IEPropertyGet ( ByRef $oObject, $sProperty )\\r```"],"_IEPropertySet":["Set a select property of the Browser or DOM element","```\\r#include <IE.au3>\\r_IEPropertySet ( ByRef $oObject, $sProperty, $vValue )\\r```"],"_IEQuit":["Close the browser and remove the object reference to it","```\\r#include <IE.au3>\\r_IEQuit ( ByRef $oObject )\\r```"],"_IETableGetCollection":["Returns a collection object variable representing all the tables in a document or a single table by index","```\\r#include <IE.au3>\\r_IETableGetCollection ( ByRef $oObject [, $iIndex = -1] )\\r```"],"_IETableWriteToArray":["Reads the contents of a Table into an array","```\\r#include <IE.au3>\\r_IETableWriteToArray ( ByRef $oObject [, $bTranspose = False] )\\r```"],"_IETagNameAllGetCollection":["Returns a collection object all elements in the document or document hierarchy in source order or a single element by index","```\\r#include <IE.au3>\\r_IETagNameAllGetCollection ( ByRef $oObject [, $iIndex = -1] )\\r```"],"_IETagNameGetCollection":["Returns a collection object of all elements in the object with the specified TagName or a single element by index","```\\r#include <IE.au3>\\r_IETagNameGetCollection ( ByRef $oObject, $sTagName [, $iIndex = -1] )\\r```"]}'),Y=JSON.parse('{"_GetIP":["Get public IP address of a network/computer","```\\r#include <Inet.au3>\\r_GetIP ( )\\r```"],"_INetExplorerCapable":["Converts a string to IE(Internet Explorer) capable line","```\\r#include <Inet.au3>\\r_INetExplorerCapable ( $sIEString )\\r```"],"_INetGetSource":["Gets the source from an URL without writing a temp file","```\\r#include <Inet.au3>\\r_INetGetSource ( $sURL [, $bString = True] )\\r```"],"_INetMail":["Opens default user\'s mail client with given address, subject, and body","```\\r#include <Inet.au3>\\r_INetMail ( $sMailTo, $sMailSubject, $sMailBody )\\r```"],"_INetSmtpMail":["Sends an email without using an external email program","```\\r#include <Inet.au3>\\r_INetSmtpMail ( $sSMTPServer, $sFromName, $sFromAddress, $sToAddress [, $sSubject = \\"\\" [, $aBody = \\"\\" [, $sEHLO = \\"\\" [, $sFirst = \\"\\" [, $bTrace = 0]]]]] )\\r```"],"_TCPIpToName":["Resolves IP address to Hostname(s)","```\\r#include <Inet.au3>\\r_TCPIpToName ( $sIp [, $iOption = 0 [, $hDll = \\"Ws2_32.dll\\"]] )\\r```"]}'),X=JSON.parse('{"_Degree":["Converts radians to degrees","```\\r#include <Math.au3>\\r_Degree ( $iRadians )\\r```"],"_MathCheckDiv":["Checks if first number is divisible by the second number","```\\r#include <Math.au3>\\r_MathCheckDiv ( $iNum1 [, $iNum2 = 2] )\\r```"],"_Max":["Evaluates which of the two numbers is higher","```\\r#include <Math.au3>\\r_Max ( $iNum1, $iNum2 )\\r```"],"_Min":["Evaluates which of the two numbers is lower","```\\r#include <Math.au3>\\r_Min ( $iNum1, $iNum2 )\\r```"],"_Radian":["Converts degrees to radians","```\\r#include <Math.au3>\\r_Radian ( $iDegrees )\\r```"]}'),z=JSON.parse('{"_MemGlobalAlloc":["Allocates the specified number of bytes from the heap","```\\r#include <Memory.au3>\\r_MemGlobalAlloc ( $iBytes [, $iFlags = 0] )\\r```"],"_MemGlobalFree":["Frees the specified global memory object and invalidates its handle","```\\r#include <Memory.au3>\\r_MemGlobalFree ( $hMemory )\\r```"],"_MemGlobalLock":["Locks a global memory object and returns a pointer to the first byte of the object\'s memory block","```\\r#include <Memory.au3>\\r_MemGlobalLock ( $hMemory )\\r```"],"_MemGlobalSize":["Retrieves the current size of the specified global memory object","```\\r#include <Memory.au3>\\r_MemGlobalSize ( $hMemory )\\r```"],"_MemGlobalUnlock":["Decrements the lock count associated with a memory object that was allocated with GMEM_MOVEABLE","```\\r#include <Memory.au3>\\r_MemGlobalUnlock ( $hMemory )\\r```"],"_MemMoveMemory":["Moves memory either forward or backward, aligned or unaligned","```\\r#include <Memory.au3>\\r_MemMoveMemory ( $pSource, $pDest, $iLength )\\r```"],"_MemVirtualAlloc":["Reserves or commits a region of pages in the virtual address space of the calling process","```\\r#include <Memory.au3>\\r_MemVirtualAlloc ( $pAddress, $iSize, $iAllocation, $iProtect )\\r```"],"_MemVirtualAllocEx":["Reserves a region of memory within the virtual address space of a specified process","```\\r#include <Memory.au3>\\r_MemVirtualAllocEx ( $hProcess, $pAddress, $iSize, $iAllocation, $iProtect )\\r```"],"_MemVirtualFree":["Releases a region of pages within the virtual address space of a process","```\\r#include <Memory.au3>\\r_MemVirtualFree ( $pAddress, $iSize, $iFreeType )\\r```"],"_MemVirtualFreeEx":["Releases a region of pages within the virtual address space of a process","```\\r#include <Memory.au3>\\r_MemVirtualFreeEx ( $hProcess, $pAddress, $iSize, $iFreeType )\\r```"]}'),K=JSON.parse('{"_ChooseColor":["Creates a Color dialog box that enables the user to select a color","```\\r#include <Misc.au3>\\r_ChooseColor ( [$iReturnType = 0 [, $iColorRef = 0 [, $iRefType = 0 [, $hWndOwnder = 0]]]] )\\r```"],"_ChooseFont":["Creates a Font dialog box that enables the user to choose attributes for a logical font","```\\r#include <Misc.au3>\\r_ChooseFont ( [$sFontName = \\"Courier New\\" [, $iPointSize = 10 [, $iFontColorRef = 0 [, $iFontWeight = 0 [, $bItalic = False [, $bUnderline = False [, $bStrikethru = False [, $hWndOwner = 0]]]]]]]] )\\r```"],"_ClipPutFile":["Copy Files to Clipboard Like Explorer does","```\\r#include <Misc.au3>\\r_ClipPutFile ( $sFilePath [, $sDelimiter = \\"|\\"] )\\r```"],"_IsPressed":["Check if key has been pressed","```\\r#include <Misc.au3>\\r_IsPressed ( $sHexKey [, $vDLL = \'user32.dll\'] )\\r```"],"_MouseTrap":["Confine the Mouse Cursor to specified coords","```\\r#include <Misc.au3>\\r_MouseTrap ( [$iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0]]]] )\\r```"],"_Singleton":["Enforce a design paradigm where only one instance of the script may be running","```\\r#include <Misc.au3>\\r_Singleton ( $sOccurrenceName [, $iFlag = 0] \\r```"],"_VersionCompare":["Compares two file versions for equality","```\\r#include <Misc.au3>\\r_VersionCompare ( $sVersion1, $sVersion2 )\\r```"]}'),q=JSON.parse('{"_NamedPipes_CallNamedPipe":["Performs a read/write operation on a named pipe","```\\r#include <NamedPipes.au3>\\r_NamedPipes_CallNamedPipe ( $sPipeName, $pInpBuf, $iInpSize, $pOutBuf, $iOutSize, ByRef $iRead [, $iTimeOut = 0] )\\r```"],"_NamedPipes_ConnectNamedPipe":["Enables a named pipe server process to wait for a client process to connect","```\\r#include <NamedPipes.au3>\\r_NamedPipes_ConnectNamedPipe ( $hNamedPipe [, $tOverlapped = 0] )\\r```"],"_NamedPipes_CreateNamedPipe":["Creates an instance of a named pipe","```\\r#include <NamedPipes.au3>\\r_NamedPipes_CreateNamedPipe ( $sName [, $iAccess = 2 [, $iFlags = 2 [, $iACL = 0 [, $iType = 1 [, $iRead = 1 [, $iWait = 0 [, $iMaxInst = 25 [, $iOutBufSize = 4096 [, $iInpBufSize = 4096 [, $iDefaultTimeout = 5000 [, $tSecurity = 0]]]]]]]]]]] )\\r```"],"_NamedPipes_CreatePipe":["Creates an anonymous pipe","```\\r#include <NamedPipes.au3>\\r_NamedPipes_CreatePipe ( ByRef $hReadPipe, ByRef $hWritePipe [, $tSecurity = 0 [, $iSize = 0]] )\\r```"],"_NamedPipes_DisconnectNamedPipe":["Disconnects the server end of a named pipe instance from a client process","```\\r#include <NamedPipes.au3>\\r_NamedPipes_DisconnectNamedPipe ( $hNamedPipe )\\r```"],"_NamedPipes_GetNamedPipeHandleState":["Retrieves information about a specified named pipe","```\\r#include <NamedPipes.au3>\\r_NamedPipes_GetNamedPipeHandleState ( $hNamedPipe )\\r```"],"_NamedPipes_GetNamedPipeInfo":["Retrieves information about the specified named pipe","```\\r#include <NamedPipes.au3>\\r_NamedPipes_GetNamedPipeInfo ( $hNamedPipe )\\r```"],"_NamedPipes_PeekNamedPipe":["Copies data from a pipe into a buffer without removing it from the pipe","```\\r#include <NamedPipes.au3>\\r_NamedPipes_PeekNamedPipe ( $hNamedPipe )\\r```"],"_NamedPipes_SetNamedPipeHandleState":["Sets the read mode and the blocking mode of the specified named pipe","```\\r#include <NamedPipes.au3>\\r_NamedPipes_SetNamedPipeHandleState ( $hNamedPipe, $iRead, $iWait [, $iBytes = 0 [, $iTimeOut = 0]] )\\r```"],"_NamedPipes_TransactNamedPipe":["Reads and writes to a named pipe in one network operation","```\\r#include <NamedPipes.au3>\\r_NamedPipes_TransactNamedPipe ( $hNamedPipe, $pInpBuf, $iInpSize, $pOutBuf, $iOutSize [, $tOverlapped = 0] )\\r```"],"_NamedPipes_WaitNamedPipe":["Waits for an instance of a named pipe to become available","```\\r#include <NamedPipes.au3>\\r_NamedPipes_WaitNamedPipe ( $sPipeName [, $iTimeOut = 0] )\\r```"]}'),Q=JSON.parse('{"_Net_Share_ConnectionEnum":["Lists all connections made to a shared resource","```\\r#include <NetShare.au3>\\r_Net_Share_ConnectionEnum ( $sServer, $sQualifier )\\r```"],"_Net_Share_FileClose":["Forces a resource to close","```\\r#include <NetShare.au3>\\r_Net_Share_FileClose ( $sServer, $iFileID )\\r```"],"_Net_Share_FileEnum":["Returns information about open files on a server","```\\r#include <NetShare.au3>\\r_Net_Share_FileEnum ( [$sServer = \\"\\" [, $sBaseName = \\"\\" [, $sUserName = \\"\\"]]] )\\r```"],"_Net_Share_FileGetInfo":["Retrieves information about a particular opening of a server resource","```\\r#include <NetShare.au3>\\r_Net_Share_FileGetInfo ( $sServer, $iFileID )\\r```"],"_Net_Share_PermStr":["Returns the string representation of a resource\'s permissions","```\\r#include <NetShare.au3>\\r_Net_Share_PermStr ( $iPerm )\\r```"],"_Net_Share_ResourceStr":["Returns the string representation of a resource","```\\r#include <NetShare.au3>\\r_Net_Share_ResourceStr ( $iResource )\\r```"],"_Net_Share_SessionDel":["Ends a network session between a server and a workstation","```\\r#include <NetShare.au3>\\r_Net_Share_SessionDel ( [$sServer = \\"\\" [, $sClientName = \\"\\" [, $sUserName = \\"\\"]]] )\\r```"],"_Net_Share_SessionEnum":["Provides information about sessions established on a server","```\\r#include <NetShare.au3>\\r_Net_Share_SessionEnum ( [$sServer = \\"\\" [, $sClientName = \\"\\" [, $sUserName = \\"\\"]]] )\\r```"],"_Net_Share_SessionGetInfo":["Retrieves information about a session established between a server and workstation","```\\r#include <NetShare.au3>\\r_Net_Share_SessionGetInfo ( $sServer, $sClientName, $sUserName )\\r```"],"_Net_Share_ShareAdd":["Shares a server resource","```\\r#include <NetShare.au3>\\r_Net_Share_ShareAdd ( $sServer, $sShare, $iType, $sResourcePath [, $sComment = \\"\\" [, $iMaxUses = -1]] )\\r```"],"_Net_Share_ShareCheck":["Checks whether or not a server is sharing a device","```\\r#include <NetShare.au3>\\r_Net_Share_ShareCheck ( $sServer, $sShare )\\r```"],"_Net_Share_ShareDel":["Deletes a share name from a server\'s list of shared resources","```\\r#include <NetShare.au3>\\r_Net_Share_ShareDel ( $sServer, $sShare )\\r```"],"_Net_Share_ShareEnum":["Retrieves information about each shared resource on a server","```\\r#include <NetShare.au3>\\r_Net_Share_ShareEnum ( [$sServer = \\"\\"] )\\r```"],"_Net_Share_ShareGetInfo":["Retrieves information about a particular shared resource on a server","```\\r#include <NetShare.au3>\\r_Net_Share_ShareGetInfo ( $sServer, $sShare )\\r```"],"_Net_Share_ShareSetInfo":["Shares a server resource","```\\r#include <NetShare.au3>\\r_Net_Share_ShareSetInfo ( $sServer, $sShare, $sComment, $iMaxUses )\\r```"],"_Net_Share_StatisticsGetSvr":["Retrieves operating statistics for a server","```\\r#include <NetShare.au3>\\r_Net_Share_StatisticsGetSvr ( [$sServer = \\"\\"] )\\r```"],"_Net_Share_StatisticsGetWrk":["Retrieves operating statistics for a workstation","```\\r#include <NetShare.au3>\\r_Net_Share_StatisticsGetWrk ( [$sWorkStation = \\"\\"] )\\r```"]}'),J=JSON.parse('{"_ProcessGetName":["Returns a string containing the process name that belongs to a given PID","```\\r#include <Process.au3>\\r_ProcessGetName ( $iPID )\\r```"],"_ProcessGetPriority":["Get the priority of an open process","```\\r#include <Process.au3>\\r_ProcessGetPriority ( $vProcess )\\r```"],"_RunDos":["Executes a DOS command in a hidden command window","```\\r#include <Process.au3>\\r_RunDos ( $sCommand )\\r```"]}'),Z=JSON.parse('{"_ScreenCapture_Capture":["Captures a region of the screen","```\\r#include <ScreenCapture.au3>\\r_ScreenCapture_Capture ( [$sFileName = \\"\\" [, $iLeft = 0 [, $iTop = 0 [, $iRight = -1 [, $iBottom = -1 [, $bCursor = True]]]]]] )\\r```"],"_ScreenCapture_CaptureWnd":["Captures a screen shot of a specified window or controlID","```\\r#include <ScreenCapture.au3>\\r_ScreenCapture_CaptureWnd ( $sFileName, $hWnd [, $iLeft = 0 [, $iTop = 0 [, $iRight = -1 [, $iBottom = -1 [, $bCursor = True]]]]] )\\r```"],"_ScreenCapture_SaveImage":["Saves an image to file","```\\r#include <ScreenCapture.au3>\\r_ScreenCapture_SaveImage ( $sFileName, $hBitmap [, $bFreeBmp = True] )\\r```"],"_ScreenCapture_SetBMPFormat":["Sets the bit format that will be used for BMP screen captures","```\\r#include <ScreenCapture.au3>\\r_ScreenCapture_SetBMPFormat ( $iFormat )\\r```"],"_ScreenCapture_SetJPGQuality":["Sets the quality level that will be used for JPEG screen captures","```\\r#include <ScreenCapture.au3>\\r_ScreenCapture_SetJPGQuality ( $iQuality )\\r```"],"_ScreenCapture_SetTIFColorDepth":["Sets the color depth used for TIFF screen captures","```\\r#include <ScreenCapture.au3>\\r_ScreenCapture_SetTIFColorDepth ( $iDepth )\\r```"],"_ScreenCapture_SetTIFCompression":["Sets the compression used for TIFF screen captures","```\\r#include <ScreenCapture.au3>\\r_ScreenCapture_SetTIFCompression ( $iCompress )\\r```"]}'),ee=JSON.parse('{"_Security__AdjustTokenPrivileges":["Enables or disables privileges in the specified access token","```\\r#include <Security.au3>\\r_Security__AdjustTokenPrivileges ( $hToken, $bDisableAll, $tNewState, $iBufferLen [, $tPrevState = 0 [, $pRequired = 0]] )\\r```"],"_Security__CreateProcessWithToken":["Creates a new process and its primary thread running in the security context of the specified token","```\\r#include <Security.au3>\\r_Security__CreateProcessWithToken ( $hToken, $iLogonFlags, $sCommandLine, $iCreationFlags, $sCurDir, $tSTARTUPINFO, $tPROCESS_INFORMATION )\\r```"],"_Security__DuplicateTokenEx":["Creates a new access token that duplicates an existing token","```\\r#include <Security.au3>\\r_Security__DuplicateTokenEx ( $hExistingToken, $iDesiredAccess, $iImpersonationLevel, $iTokenType )\\r```"],"_Security__GetAccountSid":["Retrieves the security identifier (SID) for an account","```\\r#include <Security.au3>\\r_Security__GetAccountSid ( $sAccount [, $sSystem = \\"\\"] )\\r```"],"_Security__GetLengthSid":["Returns the length, in bytes, of a valid SID","```\\r#include <Security.au3>\\r_Security__GetLengthSid ( $pSID )\\r```"],"_Security__GetTokenInformation":["Retrieves a specified type of information about an access token","```\\r#include <Security.au3>\\r_Security__GetTokenInformation ( $hToken, $iClass )\\r```"],"_Security__ImpersonateSelf":["Obtains an access token that impersonates the calling process security context","```\\r#include <Security.au3>\\r_Security__ImpersonateSelf ( [$iLevel = $SECURITYIMPERSONATION] )\\r```"],"_Security__IsValidSid":["Validates a SID","```\\r#include <Security.au3>\\r_Security__IsValidSid ( $pSID )\\r```"],"_Security__LookupAccountName":["Retrieves a security identifier (SID) for the account and the name of the domain","```\\r#include <Security.au3>\\r_Security__LookupAccountName ( $sAccount [, $sSystem = \\"\\"] )\\r```"],"_Security__LookupAccountSid":["Retrieves the name of the account for a SID","```\\r#include <Security.au3>\\r_Security__LookupAccountSid ( $vSID [, $sSystem = \\"\\"] )\\r```"],"_Security__LookupPrivilegeValue":["Retrieves the locally unique identifier (LUID) for a privilege value in form of 64bit integer","```\\r#include <Security.au3>\\r_Security__LookupPrivilegeValue ( $sSystem, $sName )\\r```"],"_Security__OpenProcessToken":["Returns the access token associated with a process","```\\r#include <Security.au3>\\r_Security__OpenProcessToken ( $hProcess, $iAccess )\\r```"],"_Security__OpenThreadToken":["Opens the access token associated with a thread","```\\r#include <Security.au3>\\r_Security__OpenThreadToken ( $iAccess [, $hThread = 0 [, $bOpenAsSelf = False]] )\\r```"],"_Security__OpenThreadTokenEx":["Opens the access token associated with a thread, impersonating the client\'s security context if required","```\\r#include <Security.au3>\\r_Security__OpenThreadTokenEx ( $iAccess [, $hThread = 0 [, $bOpenAsSelf = False]] )\\r```"],"_Security__SetPrivilege":["Enables or disables a local token privilege","```\\r#include <Security.au3>\\r_Security__SetPrivilege ( $hToken, $sPrivilege, $bEnable )\\r```"],"_Security__SetTokenInformation":["Sets various types of information for a specified access token","```\\r#include <Security.au3>\\r_Security__SetTokenInformation ( $hToken, $iTokenInformation, $vTokenInformation, $iTokenInformationLength )\\r```"],"_Security__SidToStringSid":["Converts a binary SID to a string","```\\r#include <Security.au3>\\r_Security__SidToStringSid ( $pSID )\\r```"],"_Security__SidTypeStr":["Converts a SID type to string form","```\\r#include <Security.au3>\\r_Security__SidTypeStr ( $iType )\\r```"],"_Security__StringSidToSid":["Converts a String SID to a binary SID","```\\r#include <Security.au3>\\r_Security__StringSidToSid ( $sSID )\\r```"]}'),te=JSON.parse('{"_SendMessage":["Wrapper for commonly used DLL Call","```\\r#include <SendMessage.au3>\\r_SendMessage ( $hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iReturn = 0 [, $wParamType = \\"wparam\\" [, $lParamType = \\"lparam\\" [, $sReturnType = \\"lresult\\"]]]]]] )\\r```"],"_SendMessageA":["Send a Message to a Window/Control (Force Ansi Call)","```\\r#include <SendMessage.au3>\\r_SendMessageA ( $hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iReturn = 0 [, $wParamType = \\"wparam\\" [, $lParamType = \\"lparam\\" [, $sReturnType = \\"lresult\\"]]]]]] )\\r```"]}'),ae=JSON.parse('{"_SoundClose":["Closes a sound previously opened with _SoundOpen","```\\r#include <Sound.au3>\\r_SoundClose ( $aSndID )\\r```"],"_SoundLength":["Returns the length of the soundfile","```\\r#include <Sound.au3>\\r_SoundLength ( $aSndID [, $iMode = 1] )\\r```"],"_SoundOpen":["Opens a sound file for use with other _Sound functions","```\\r#include <Sound.au3>\\r_SoundOpen ( $sFilePath )\\r```"],"_SoundPause":["Pause a playing sound","```\\r#include <Sound.au3>\\r_SoundPause ( $aSndID )\\r```"],"_SoundPlay":["Play a sound file","```\\r#include <Sound.au3>\\r_SoundPlay ( $aSndID [, $iWait = 0] )\\r```"],"_SoundPos":["Returns the current position of the sound","```\\r#include <Sound.au3>\\r_SoundPos ( $aSndID [, $iMode = 1] )\\r```"],"_SoundResume":["Resume a paused sound","```\\r#include <Sound.au3>\\r_SoundResume ( $aSndID )\\r```"],"_SoundSeek":["Seeks the sound to the specified position","```\\r#include <Sound.au3>\\r_SoundSeek ( ByRef $aSndID, $iHour, $iMin, $iSec )\\r```"],"_SoundStatus":["Returns the status of the sound","```\\r#include <Sound.au3>\\r_SoundStatus ( $aSndID )\\r```"],"_SoundStop":["Stop a playing sound","```\\r#include <Sound.au3>\\r_SoundStop ( ByRef $aSndID )\\r```"]}'),oe=JSON.parse('{"_SQLite_Changes":["Returns the number of database rows that were changed by the most recently completed statement with this connection","```\\r#include <SQLite.au3>\\r_SQLite_Changes ( [$hDB = -1] )\\r```"],"_SQLite_Close":["Close an open database","```\\r#include <SQLite.au3>\\r_SQLite_Close ( [$hDB = -1] )\\r```"],"_SQLite_Display2DResult":["Returns or prints to Console a formated display of a 2Dimensional array","```\\r#include <SQLite.au3>\\r_SQLite_Display2DResult ( $aResult [, $iCellWidth = 0 [, $bReturn = False]] )\\r```"],"_SQLite_Encode":["Binary encodes a string, number or binary data for use as BLOB in SQLite statements","```\\r#include <SQLite.au3>\\r_SQLite_Encode ( $vData )\\r```"],"_SQLite_ErrCode":["Returns last error code (numeric)","```\\r#include <SQLite.au3>\\r_SQLite_ErrCode ( [$hDB = -1] )\\r```"],"_SQLite_ErrMsg":["Returns a string describing in english the error condition for the most recent sqlite3_* API call","```\\r#include <SQLite.au3>\\r_SQLite_ErrMsg ( [$hDB = -1] )\\r```"],"_SQLite_Escape":["Escapes a string or number for use as TEXT in SQLite statements","```\\r#include <SQLite.au3>\\r_SQLite_Escape ( $sString [, $iBuffSize = Default] )\\r```"],"_SQLite_Exec":["Executes a SQLite query, does not handle results","```\\r#include <SQLite.au3>\\r_SQLite_Exec ( $hDB, $sSQL [, $sCallBack = \\"\\"] )\\r```"],"_SQLite_FastEncode":["Fast encodes binary data (exclusively) for use in SQLite statements","```\\r#include <SQLite.au3>\\r_SQLite_FastEncode ( $vData )\\r```"],"_SQLite_FastEscape":["Fast escapes a string or number for use as TEXT in SQLite statements","```\\r#include <SQLite.au3>\\r_SQLite_FastEscape ( $sString )\\r```"],"_SQLite_FetchData":["Fetches 1 row of data from a _SQLite_Query() based query","```\\r#include <SQLite.au3>\\r_SQLite_FetchData ( $hQuery, ByRef $aRow [, $bBinary = False [, $bDoNotFinalize = False [, $iColumns = 0]]] )\\r```"],"_SQLite_FetchNames":["Read out the Column names of a _SQLite_Query() based query","```\\r#include <SQLite.au3>\\r_SQLite_FetchNames ( $hQuery, ByRef $aNames )\\r```"],"_SQLite_GetTable":["Passes Out a 1Dimensional Array Containing Tablenames and Data of Executed Query","```\\r#include <SQLite.au3>\\r_SQLite_GetTable ( $hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1] )\\r```"],"_SQLite_GetTable2d":["Passes out a 2Dimensional array containing column names and data of executed query","```\\r#include <SQLite.au3>\\r_SQLite_GetTable2d ( $hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1 [, $bSwichDimensions = False]] )\\r```"],"_SQLite_LastInsertRowID":["Returns the ROWID of the most recent insert in the database by this connection","```\\r#include <SQLite.au3>\\r_SQLite_LastInsertRowID ( [$hDB = -1] )\\r```"],"_SQLite_LibVersion":["Returns the version number of the library","```\\r#include <SQLite.au3>\\r_SQLite_LibVersion ( )\\r```"],"_SQLite_Open":["Opens/creates a SQLite database","```\\r#include <SQLite.au3>\\r_SQLite_Open ( [$sDatabase_Filename = \\":memory:\\" [, $iAccessMode = Default [, $iEncoding = $SQLITE_ENCODING_UTF8]]] )\\r```"],"_SQLite_Query":["Prepares a SQLite Query","```\\r#include <SQLite.au3>\\r_SQLite_Query ( $hDB, $sSQL, ByRef $hQuery )\\r```"],"_SQLite_QueryFinalize":["Finalizes an _SQLite_Query() based query. The query is interrupted","```\\r#include <SQLite.au3>\\r_SQLite_QueryFinalize ( $hQuery )\\r```"],"_SQLite_QueryReset":["Reset a _SQLite_Query() based query","```\\r#include <SQLite.au3>\\r_SQLite_QueryReset ( $hQuery )\\r```"],"_SQLite_QuerySingleRow":["Read out the first row of the result from the specified query","```\\r#include <SQLite.au3>\\r_SQLite_QuerySingleRow ( $hDB, $sSQL, ByRef $aRow )\\r```"],"_SQLite_SafeMode":["Disable or Enable Safe mode","```\\r#include <SQLite.au3>\\r_SQLite_SafeMode ( $bSafeModeState )\\r```"],"_SQLite_SetTimeout":["Sets timeout for busy handler","```\\r#include <SQLite.au3>\\r_SQLite_SetTimeout ( [$hDB = -1 [, $iTimeout = 1000]] )\\r```"],"_SQLite_Shutdown":["Unloads SQLite.dll","```\\r#include <SQLite.au3>\\r_SQLite_Shutdown ( )\\r```"],"_SQLite_SQLiteExe":["Executes commands in sqlite3.exe","```\\r#include <SQLite.au3>\\r_SQLite_SQLiteExe ( $sDatabaseFile, $sInput, ByRef $sOutput [, $sSQLiteExeFilename = \\"sqlite3.exe\\" [, $bDebug = False]] )\\r```"],"_SQLite_Startup":["Loads SQLite3.dll","```\\r#include <SQLite.au3>\\r_SQLite_Startup ( [$sDll_Filename = \\"\\" [, $bUTF8ErrorMsg = False [, $iForceLocal = 0 [, $hPrintCallback = $__g_hPrintCallback_SQLite]]]] )\\r```"],"_SQLite_TotalChanges":["Returns number of all changes (including via triggers and foreign keys) from start of connection","```\\r#include <SQLite.au3>\\r_SQLite_TotalChanges ( [$hDB = -1] )\\r```"]}'),ne=JSON.parse('{"_HexToString":["Convert a hex string to a string","```\\r#include <String.au3>\\r_HexToString ( $sHex )\\r```"],"_StringBetween":["Find strings between two string delimiters","```\\r#include <String.au3>\\r_StringBetween ( $sString, $sStart, $sEnd [, $iMode = $STR_ENDISSTART [, $bCase = False]] )\\r```"],"_StringExplode":["Splits up a string into substrings depending on the given delimiters as PHP Explode v5","```\\r#include <String.au3>\\r_StringExplode ( $sString, $sDelimiter [, $iLimit = 0] )\\r```"],"_StringInsert":["Inserts a string within another string","```\\r#include <String.au3>\\r_StringInsert ( $sString, $sInsertString, $iPosition )\\r```"],"_StringProper":["Changes a string to proper case, same as the =Proper function in Excel","```\\r#include <String.au3>\\r_StringProper ( $sString )\\r```"],"_StringRepeat":["Repeats a string a specified number of times","```\\r#include <String.au3>\\r_StringRepeat ( $sString, $iRepeatCount )\\r```"],"_StringTitleCase":["Changes a string to a title case string","```\\r#include <String.au3>\\r_StringTitleCase ( $sString )\\r```"],"_StringToHex":["Convert a string to a hex string","```\\r#include <String.au3>\\r_StringToHex ( $sString )\\r```"]}'),ie=JSON.parse('{"_Timer_Diff":["Returns the difference in time from a previous call to _Timer_Init","```\\r#include <Timers.au3>\\r_Timer_Diff ( $iTimeStamp )\\r```"],"_Timer_GetIdleTime":["Returns the number of ticks since last user activity (i.e. KYBD/Mouse)","```\\r#include <Timers.au3>\\r_Timer_GetIdleTime ( )\\r```"],"_Timer_GetTimerID":["Returns the Timer ID from $wParam","```\\r#include <Timers.au3>\\r_Timer_GetTimerID ( $wParam )\\r```"],"_Timer_Init":["Returns a timestamp (in milliseconds)","```\\r#include <Timers.au3>\\r_Timer_Init ( )\\r```"],"_Timer_KillAllTimers":["Destroys all the timers","```\\r#include <Timers.au3>\\r_Timer_KillAllTimers ( $hWnd )\\r```"],"_Timer_KillTimer":["Destroys the specified timer","```\\r#include <Timers.au3>\\r_Timer_KillTimer ( $hWnd, $iTimerID )\\r```"],"_Timer_SetTimer":["Creates a timer with the specified time-out value","```\\r#include <Timers.au3>\\r_Timer_SetTimer ( $hWnd [, $iElapse = 250 [, $sTimerFunc = \\"\\" [, $iTimerID = -1]]] )\\r```"]}'),re=JSON.parse('{"_viClose":["Closes a VISA connection to an Instrument/Device","```\\r#include <Visa.au3>\\r_viClose ( $hSession )\\r```"],"_viExecCommand":["Send a Command/Query to an Instrument/Device through the VISA interface (GPIB / TCP)","```\\r#include <Visa.au3>\\r_viExecCommand ( $hSession, $sCommand [, $iTimeoutMS = -1 [, $sMode = @LF]] )\\r```"],"_viFindGpib":["Send a Command/Query to an Instrument/Device through the VISA interface (GPIB / TCP)","```\\r#include <Visa.au3>\\r_viFindGpib ( ByRef $aDescriptorList, ByRef $aIDNList [, $iShow_Search_Results = 0] )\\r```"],"_viGpibBusReset":["GPIB BUS \\"reset\\": Use this function when the GPIB BUS gets stuck for some reason. You might be lucky and resolve the problem by calling this function","```\\r#include <Visa.au3>\\r_viGpibBusReset ( )\\r```"],"_viGTL":["Go To Local mode: Instruments that accept this command will exit the \\"Remote Control mode\\" and go to \\"Local mode\\". If the instrument is already in \\"Local mode\\" this is simply ignored. Normally, if an instrument does not support this command it will simply stay in the \\"Remote Control mode\\"","```\\r#include <Visa.au3>\\r_viGTL ( $hSession )\\r```"],"_viInteractiveControl":["Interactive VISA control to test your SCPI commands","```\\r#include <Visa.au3>\\r_viInteractiveControl ( [$sCommand_Save_FilePath = \\"\\"] )\\r```"],"_viOpen":["Opens a VISA connection to an Instrument/Device","```\\r#include <Visa.au3>\\r_viOpen ( $sVisa_Address [, $sVisa_Secondary_Address = 0] )\\r```"],"_viSetAttribute":["Set any VISA attribute This function, which is called by _viSetTimeout, can ALSO be used to set the other VISA specific attributes. Read the VISA documentation for more information and a list of VISA attributes and their corresponding values","```\\r#include <Visa.au3>\\r_viSetAttribute ( $hSession, $iAttribute, $iValue )\\r```"],"_viSetTimeout":["Sets the VISA timeout in MILISECONDS","```\\r#include <Visa.au3>\\r_viSetTimeout ( $hSession, $iTimeoutMS )\\r```"]}'),le=JSON.parse('{"_WinAPI_AttachConsole":["Attaches the calling process to the console of the specified process","```\\r#include <WinAPI.au3>\\r_WinAPI_AttachConsole ( [$iPID = -1] )\\r```"],"_WinAPI_AttachThreadInput":["Attaches the input processing mechanism of one thread to that of another thread","```\\r#include <WinAPI.au3>\\r_WinAPI_AttachThreadInput ( $iAttach, $iAttachTo, $bAttach )\\r```"],"_WinAPI_Beep":["Generates simple tones on the speaker","```\\r#include <WinAPI.au3>\\r_WinAPI_Beep ( [$iFreq = 500 [, $iDuration = 1000]] )\\r```"],"_WinAPI_BitBlt":["Performs a bit-block transfer of color data","```\\r#include <WinAPI.au3>\\r_WinAPI_BitBlt ( $hDestDC, $iXDest, $iYDest, $iWidth, $iHeight, $hSrcDC, $iXSrc, $iYSrc, $iROP )\\r```"],"_WinAPI_CallNextHookEx":["Passes the hook information to the next hook procedure in the current hook chain","```\\r#include <WinAPI.au3>\\r_WinAPI_CallNextHookEx ( $hHook, $iCode, $wParam, $lParam )\\r```"],"_WinAPI_CallWindowProc":["Passes the hook information to the next hook procedure in the current hook chain","```\\r#include <WinAPI.au3>\\r_WinAPI_CallWindowProc ( $pPrevWndFunc, $hWnd, $iMsg, $wParam, $lParam )\\r```"],"_WinAPI_ClientToScreen":["Converts the client coordinates of a specified point to screen coordinates","```\\r#include <WinAPI.au3>\\r_WinAPI_ClientToScreen ( $hWnd, ByRef $tPoint )\\r```"],"_WinAPI_CloseHandle":["Closes an open object handle","```\\r#include <WinAPI.au3>\\r_WinAPI_CloseHandle ( $hObject )\\r```"],"_WinAPI_CombineRgn":["Combines two regions and stores the result in a third region","```\\r#include <WinAPI.au3>\\r_WinAPI_CombineRgn ( $hRgnDest, $hRgnSrc1, $hRgnSrc2, $iCombineMode )\\r```"],"_WinAPI_CommDlgExtendedError":["Returns a common dialog box error string. This string indicates the most recent error to occur during the execution of one of the common dialog box functions","```\\r#include <WinAPI.au3>\\r_WinAPI_CommDlgExtendedError ( )\\r```"],"_WinAPI_CopyIcon":["Copies the specified icon from another module","```\\r#include <WinAPI.au3>\\r_WinAPI_CopyIcon ( $hIcon )\\r```"],"_WinAPI_CreateBitmap":["Creates a bitmap with the specified width, height, and color format","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateBitmap ( $iWidth, $iHeight [, $iPlanes = 1 [, $iBitsPerPel = 1 [, $pBits = 0]]] )\\r```"],"_WinAPI_CreateCompatibleBitmap":["Creates a bitmap compatible with the specified device context","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateCompatibleBitmap ( $hDC, $iWidth, $iHeight )\\r```"],"_WinAPI_CreateCompatibleDC":["Creates a memory device context compatible with the specified device","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateCompatibleDC ( $hDC )\\r```"],"_WinAPI_CreateEvent":["Creates or opens a named or unnamed event object","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateEvent ( [$tAttributes = 0 [, $bManualReset = True [, $bInitialState = True [, $sName = \\"\\"]]]] )\\r```"],"_WinAPI_CreateFile":["Creates or opens a file or other device","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateFile ( $sFileName, $iCreation [, $iAccess = 4 [, $iShare = 0 [, $iAttributes = 0 [, $tSecurity = 0]]]] )\\r```"],"_WinAPI_CreateFont":["Creates a logical font with the specified characteristics","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateFont ( $iHeight, $iWidth [, $iEscape = 0 [, $iOrientn = 0 [, $iWeight = $FW_NORMAL [, $bItalic = False [, $bUnderline = False [, $bStrikeout = False [, $iCharset = $DEFAULT_CHARSET [, $iOutputPrec = $OUT_DEFAULT_PRECIS [, $iClipPrec = $CLIP_DEFAULT_PRECIS [, $iQuality = $DEFAULT_QUALITY [, $iPitch = 0 [, $sFace = \'Arial\']]]]]]]]]]]] )\\r```"],"_WinAPI_CreateFontIndirect":["Creates a logical font that has specific characteristics","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateFontIndirect ( $tLogFont )\\r```"],"_WinAPI_CreatePen":["Creates a logical pen that has the specified style, width, and color","```\\r#include <WinAPI.au3>\\r_WinAPI_CreatePen ( $iPenStyle, $iWidth, $iColor )\\r```"],"_WinAPI_CreateProcess":["Creates a new process and its primary thread","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateProcess ( $sAppName, $sCommand, $tSecurity, $tThread, $bInherit, $iFlags, $pEnviron, $sDir, $tStartupInfo, $tProcess )\\r```"],"_WinAPI_CreateRectRgn":["Creates a rectangular region","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateRectRgn ( $iLeftRect, $iTopRect, $iRightRect, $iBottomRect )\\r```"],"_WinAPI_CreateRoundRectRgn":["Creates a rectangular region with rounded corners","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateRoundRectRgn ( $iLeftRect, $iTopRect, $iRightRect, $iBottomRect, $iWidthEllipse, $iHeightEllipse )\\r```"],"_WinAPI_CreateSolidBitmap":["Creates a solid color bitmap","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateSolidBitmap ( $hWnd, $iColor, $iWidth, $iHeight [, $bRGB = 1] )\\r```"],"_WinAPI_CreateSolidBrush":["Creates a logical brush that has the specified solid color","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateSolidBrush ( $iColor )\\r```"],"_WinAPI_CreateWindowEx":["Creates an overlapped, pop-up, or child window","```\\r#include <WinAPI.au3>\\r_WinAPI_CreateWindowEx ( $iExStyle, $sClass, $sName, $iStyle, $iX, $iY, $iWidth, $iHeight, $hParent [, $hMenu = 0 [, $hInstance = 0 [, $pParam = 0]]] )\\r```"],"_WinAPI_DefWindowProc":["Call the default window procedure to provide default processing","```\\r#include <WinAPI.au3>\\r_WinAPI_DefWindowProc ( $hWnd, $iMsg, $wParam, $lParam )\\r```"],"_WinAPI_DeleteDC":["Deletes the specified device context","```\\r#include <WinAPI.au3>\\r_WinAPI_DeleteDC ( $hDC )\\r```"],"_WinAPI_DeleteObject":["Deletes a logical pen, brush, font, bitmap, region, or palette","```\\r#include <WinAPI.au3>\\r_WinAPI_DeleteObject ( $hObject )\\r```"],"_WinAPI_DestroyIcon":["Destroys an icon and frees any memory the icon occupied","```\\r#include <WinAPI.au3>\\r_WinAPI_DestroyIcon ( $hIcon )\\r```"],"_WinAPI_DestroyWindow":["Destroys the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_DestroyWindow ( $hWnd )\\r```"],"_WinAPI_DrawEdge":["Draws one or more edges of rectangle","```\\r#include <WinAPI.au3>\\r_WinAPI_DrawEdge ( $hDC, $tRECT, $iEdgeType, $iFlags )\\r```"],"_WinAPI_DrawFrameControl":["Draws a frame control of the specified type and style","```\\r#include <WinAPI.au3>\\r_WinAPI_DrawFrameControl ( $hDC, $tRECT, $iType, $iState )\\r```"],"_WinAPI_DrawIcon":["Draws an icon or cursor into the specified device context","```\\r#include <WinAPI.au3>\\r_WinAPI_DrawIcon ( $hDC, $iX, $iY, $hIcon )\\r```"],"_WinAPI_DrawIconEx":["Draws an icon or cursor into the specified device context","```\\r#include <WinAPI.au3>\\r_WinAPI_DrawIconEx ( $hDC, $iX, $iY, $hIcon [, $iWidth = 0 [, $iHeight = 0 [, $iStep = 0 [, $hBrush = 0 [, $iFlags = 3]]]]] )\\r```"],"_WinAPI_DrawLine":["Draws a line","```\\r#include <WinAPI.au3>\\r_WinAPI_DrawLine ( $hDC, $iX1, $iY1, $iX2, $iY2 )\\r```"],"_WinAPI_DrawText":["Draws formatted text in the specified rectangle","```\\r#include <WinAPI.au3>\\r_WinAPI_DrawText ( $hDC, $sText, ByRef $tRECT, $iFlags )\\r```"],"_WinAPI_DuplicateHandle":["Duplicates an object handle","```\\r#include <WinAPI.au3>\\r_WinAPI_DuplicateHandle ( $hSourceProcessHandle, $hSourceHandle, $hTargetProcessHandle, $iDesiredAccess, $iInheritHandle, $iOptions )\\r```"],"_WinAPI_EnableWindow":["Enables or disables mouse and keyboard input to the specified window or control","```\\r#include <WinAPI.au3>\\r_WinAPI_EnableWindow ( $hWnd [, $bEnable = True] )\\r```"],"_WinAPI_EnumDisplayDevices":["Obtains information about the display devices in a system","```\\r#include <WinAPI.au3>\\r_WinAPI_EnumDisplayDevices ( $sDevice, $iDevNum )\\r```"],"_WinAPI_EnumWindows":["Enumerates all windows","```\\r#include <WinAPI.au3>\\r_WinAPI_EnumWindows ( [$bVisible = True [, $hWnd = Default]] )\\r```"],"_WinAPI_EnumWindowsPopup":["Enumerates popup windows","```\\r#include <WinAPI.au3>\\r_WinAPI_EnumWindowsPopup ( )\\r```"],"_WinAPI_EnumWindowsTop":["Enumerates all top level windows","```\\r#include <WinAPI.au3>\\r_WinAPI_EnumWindowsTop ( )\\r```"],"_WinAPI_ExpandEnvironmentStrings":["Expands environment variable strings and replaces them with their defined values","```\\r#include <WinAPI.au3>\\r_WinAPI_ExpandEnvironmentStrings ( $sString )\\r```"],"_WinAPI_ExtractIconEx":["Creates an array of handles to large or small icons extracted from a file","```\\r#include <WinAPI.au3>\\r_WinAPI_ExtractIconEx ( $sFilePath, $iIndex, $paLarge, $paSmall, $iIcons )\\r```"],"_WinAPI_FatalAppExit":["Displays a message box and terminates the application","```\\r#include <WinAPI.au3>\\r_WinAPI_FatalAppExit ( $sMessage )\\r```"],"_WinAPI_FillRect":["Fills a rectangle by using the specified brush","```\\r#include <WinAPI.au3>\\r_WinAPI_FillRect ( $hDC, $tRECT, $hBrush )\\r```"],"_WinAPI_FindExecutable":["Retrieves the name of the executable file associated with the specified file name","```\\r#include <WinAPI.au3>\\r_WinAPI_FindExecutable ( $sFileName [, $sDirectory = \\"\\"] )\\r```"],"_WinAPI_FindWindow":["Retrieves the handle to the top-level window whose class name and window name match","```\\r#include <WinAPI.au3>\\r_WinAPI_FindWindow ( $sClassName, $sWindowName )\\r```"],"_WinAPI_FlashWindow":["Flashes the specified window one time","```\\r#include <WinAPI.au3>\\r_WinAPI_FlashWindow ( $hWnd [, $bInvert = True] )\\r```"],"_WinAPI_FlashWindowEx":["Flashes the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_FlashWindowEx ( $hWnd [, $iFlags = 3 [, $iCount = 3 [, $iTimeout = 0]]] )\\r```"],"_WinAPI_FloatToInt":["Returns a 4 byte float as an integer value","```\\r#include <WinAPI.au3>\\r_WinAPI_FloatToInt ( $nFloat )\\r```"],"_WinAPI_FlushFileBuffers":["Flushes the buffers of a specified file and causes all buffered data to be written","```\\r#include <WinAPI.au3>\\r_WinAPI_FlushFileBuffers ( $hFile )\\r```"],"_WinAPI_FormatMessage":["Formats a message string","```\\r#include <WinAPI.au3>\\r_WinAPI_FormatMessage ( $iFlags, $pSource, $iMessageID, $iLanguageID, ByRef $pBuffer, $iSize, $vArguments )\\r```"],"_WinAPI_FrameRect":["Draws a border around the specified rectangle by using the specified brush","```\\r#include <WinAPI.au3>\\r_WinAPI_FrameRect ( $hDC, $tRECT, $hBrush )\\r```"],"_WinAPI_FreeLibrary":["Decrements the reference count of the loaded dynamic-link library (DLL) module","```\\r#include <WinAPI.au3>\\r_WinAPI_FreeLibrary ( $hModule )\\r```"],"_WinAPI_GetAncestor":["Retrieves the handle to the ancestor of the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetAncestor ( $hWnd [, $iFlags = 1] )\\r```"],"_WinAPI_GetAsyncKeyState":["Determines whether a key is up or down at the time the function is called","```\\r#include <WinAPI.au3>\\r_WinAPI_GetAsyncKeyState ( $iKey )\\r```"],"_WinAPI_GetBkMode":["Returns the current background mix mode for a specified device context","```\\r#include <WinAPI.au3>\\r_WinAPI_GetBkMode ( $hDC )\\r```"],"_WinAPI_GetClassName":["Retrieves the name of the class to which the specified window belongs","```\\r#include <WinAPI.au3>\\r_WinAPI_GetClassName ( $hWnd )\\r```"],"_WinAPI_GetClientHeight":["Retrieves the height of a window\'s client area","```\\r#include <WinAPI.au3>\\r_WinAPI_GetClientHeight ( $hWnd )\\r```"],"_WinAPI_GetClientRect":["Retrieves the coordinates of a window\'s client area","```\\r#include <WinAPI.au3>\\r_WinAPI_GetClientRect ( $hWnd )\\r```"],"_WinAPI_GetClientWidth":["Retrieves the width of a window\'s client area","```\\r#include <WinAPI.au3>\\r_WinAPI_GetClientWidth ( $hWnd )\\r```"],"_WinAPI_GetCurrentProcess":["Returns the process handle of the calling process","```\\r#include <WinAPI.au3>\\r_WinAPI_GetCurrentProcess ( )\\r```"],"_WinAPI_GetCurrentProcessID":["Returns the process identifier of the calling process","```\\r#include <WinAPI.au3>\\r_WinAPI_GetCurrentProcessID ( )\\r```"],"_WinAPI_GetCurrentThread":["Retrieves a pseudo handle for the calling thread","```\\r#include <WinAPI.au3>\\r_WinAPI_GetCurrentThread ( )\\r```"],"_WinAPI_GetCurrentThreadId":["Returns the thread identifier of the calling thread","```\\r#include <WinAPI.au3>\\r_WinAPI_GetCurrentThreadId ( )\\r```"],"_WinAPI_GetCursorInfo":["Retrieves information about the global cursor","```\\r#include <WinAPI.au3>\\r_WinAPI_GetCursorInfo ( )\\r```"],"_WinAPI_GetDC":["Retrieves a handle of a display device context for the client area a window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetDC ( $hWnd )\\r```"],"_WinAPI_GetDesktopWindow":["Returns the handle of the Windows desktop window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetDesktopWindow ( )\\r```"],"_WinAPI_GetDeviceCaps":["Retrieves device specific information about a specified device","```\\r#include <WinAPI.au3>\\r_WinAPI_GetDeviceCaps ( $hDC, $iIndex )\\r```"],"_WinAPI_GetDIBits":["Retrieves the bits of the specified bitmap and copies them into a buffer as a DIB","```\\r#include <WinAPI.au3>\\r_WinAPI_GetDIBits ( $hDC, $hBitmap, $iStartScan, $iScanLines, $pBits, $tBI, $iUsage )\\r```"],"_WinAPI_GetDlgCtrlID":["Returns the identifier of the specified control","```\\r#include <WinAPI.au3>\\r_WinAPI_GetDlgCtrlID ( $hWnd )\\r```"],"_WinAPI_GetDlgItem":["Retrieves the handle of a control in the specified dialog box","```\\r#include <WinAPI.au3>\\r_WinAPI_GetDlgItem ( $hWnd, $iItemID )\\r```"],"_WinAPI_GetFileSizeEx":["Retrieves the size of the specified file","```\\r#include <WinAPI.au3>\\r_WinAPI_GetFileSizeEx ( $hFile )\\r```"],"_WinAPI_GetFocus":["Retrieves the handle of the window that has the keyboard focus","```\\r#include <WinAPI.au3>\\r_WinAPI_GetFocus ( )\\r```"],"_WinAPI_GetForegroundWindow":["Returns the handle of the foreground window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetForegroundWindow ( )\\r```"],"_WinAPI_GetGuiResources":["Retrieves the count of handles to graphical user interface (GUI) objects in use by the specified process","```\\r#include <WinAPI.au3>\\r_WinAPI_GetGuiResources ( [$iFlag = 0 [, $hProcess = -1]] )\\r```"],"_WinAPI_GetIconInfo":["Retrieves information about the specified icon or cursor","```\\r#include <WinAPI.au3>\\r_WinAPI_GetIconInfo ( $hIcon )\\r```"],"_WinAPI_GetLastError":["Returns the calling thread\'s lasterror code value","```\\r#include <WinAPI.au3>\\r_WinAPI_GetLastError ( )\\r```"],"_WinAPI_GetLastErrorMessage":["Returns the calling threads last error message","```\\r#include <WinAPI.au3>\\r_WinAPI_GetLastErrorMessage ( )\\r```"],"_WinAPI_GetLayeredWindowAttributes":["Gets Layered Window Attributes","```\\r#include <WinAPI.au3>\\r_WinAPI_GetLayeredWindowAttributes ( $hWnd, ByRef $iTransColor, ByRef $iTransGUI [, $bColorRef = False] )\\r```"],"_WinAPI_GetModuleHandle":["Returns a module handle for the specified module","```\\r#include <WinAPI.au3>\\r_WinAPI_GetModuleHandle ( $sModuleName )\\r```"],"_WinAPI_GetMousePos":["Returns the current mouse position","```\\r#include <WinAPI.au3>\\r_WinAPI_GetMousePos ( [$bToClient = False [, $hWnd = 0]] )\\r```"],"_WinAPI_GetMousePosX":["Returns the current mouse X position","```\\r#include <WinAPI.au3>\\r_WinAPI_GetMousePosX ( [$bToClient = False [, $hWnd = 0]] )\\r```"],"_WinAPI_GetMousePosY":["Returns the current mouse Y position","```\\r#include <WinAPI.au3>\\r_WinAPI_GetMousePosY ( [$bToClient = False [, $hWnd = 0]] )\\r```"],"_WinAPI_GetObject":["Retrieves information for the specified graphics object","```\\r#include <WinAPI.au3>\\r_WinAPI_GetObject ( $hObject, $iSize, $pObject )\\r```"],"_WinAPI_GetOpenFileName":["Creates an Open dialog box that lets the user specify the drive, directory, and the name of a file or set of files to open","```\\r#include <WinAPI.au3>\\r_WinAPI_GetOpenFileName ( [$sTitle = \\"\\" [, $sFilter = \\"All files (*.*)\\" [, $sInitalDir = \\".\\" [, $sDefaultFile = \\"\\" [, $sDefaultExt = \\"\\" [, $iFilterIndex = 1 [, $iFlags = 0 [, $iFlagsEx = 0 [, $hWndOwner = 0]]]]]]]]] )\\r```"],"_WinAPI_GetOverlappedResult":["Retrieves the results of an overlapped operation","```\\r#include <WinAPI.au3>\\r_WinAPI_GetOverlappedResult ( $hFile, $tOverlapped, ByRef $iBytes [, $bWait = False] )\\r```"],"_WinAPI_GetParent":["Retrieves the handle of the specified child window\'s parent window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetParent ( $hWnd )\\r```"],"_WinAPI_GetProcAddress":["Retrieves the address of an exported function or variable from the specified module","```\\r#include <WinAPI.au3>\\r_WinAPI_GetProcAddress ( $hModule, $vName )\\r```"],"_WinAPI_GetProcessAffinityMask":["Obtains the affinity masks for the process and the system","```\\r#include <WinAPI.au3>\\r_WinAPI_GetProcessAffinityMask ( $hProcess )\\r```"],"_WinAPI_GetSaveFileName":["Creates a Save dialog box that lets the user specify the drive, directory, and name of a file to save","```\\r#include <WinAPI.au3>\\r_WinAPI_GetSaveFileName ( [$sTitle = \\"\\" [, $sFilter = \\"All files (*.*)\\" [, $sInitalDir = \\".\\" [, $sDefaultFile = \\"\\" [, $sDefaultExt = \\"\\" [, $iFilterIndex = 1 [, $iFlags = 0 [, $iFlagsEx = 0 [, $hWndOwner = 0]]]]]]]]] )\\r```"],"_WinAPI_GetStdHandle":["Retrieves a handle for the standard input, standard output, or standard error device","```\\r#include <WinAPI.au3>\\r_WinAPI_GetStdHandle ( $iStdHandle )\\r```"],"_WinAPI_GetStockObject":["Retrieves a handle to one of the predefined stock pens, brushes, fonts, or palettes","```\\r#include <WinAPI.au3>\\r_WinAPI_GetStockObject ( $iObject )\\r```"],"_WinAPI_GetSysColor":["Retrieves the current color of the specified display element","```\\r#include <WinAPI.au3>\\r_WinAPI_GetSysColor ( $iIndex )\\r```"],"_WinAPI_GetSysColorBrush":["Retrieves a handle identifying a logical brush that corresponds to the specified color index","```\\r#include <WinAPI.au3>\\r_WinAPI_GetSysColorBrush ( $iIndex )\\r```"],"_WinAPI_GetSystemMetrics":["Retrieves the specified system metric or system configuration setting","```\\r#include <WinAPI.au3>\\r_WinAPI_GetSystemMetrics ( $iIndex )\\r```"],"_WinAPI_GetTextExtentPoint32":["Computes the width and height of the specified string of text","```\\r#include <WinAPI.au3>\\r_WinAPI_GetTextExtentPoint32 ( $hDC, $sText )\\r```"],"_WinAPI_GetTextMetrics":["Retrieves basic information for the currently selected font","```\\r#include <WinAPI.au3>\\r_WinAPI_GetTextMetrics ( $hDC )\\r```"],"_WinAPI_GetWindow":["Retrieves the handle of a window that has a specified relationship to the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindow ( $hWnd, $iCmd )\\r```"],"_WinAPI_GetWindowDC":["Retrieves the device context (DC) for the entire window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindowDC ( $hWnd )\\r```"],"_WinAPI_GetWindowHeight":["Returns the height of the window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindowHeight ( $hWnd )\\r```"],"_WinAPI_GetWindowLong":["Retrieves information about the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindowLong ( $hWnd, $iIndex )\\r```"],"_WinAPI_GetWindowPlacement":["Retrieves the placement of the window for Min, Max, and normal positions","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindowPlacement ( $hWnd )\\r```"],"_WinAPI_GetWindowRect":["Retrieves the dimensions of the bounding rectangle of the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindowRect ( $hWnd )\\r```"],"_WinAPI_GetWindowRgn":["Obtains a copy of the window region of a window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindowRgn ( $hWnd, $hRgn )\\r```"],"_WinAPI_GetWindowText":["Retrieves the text of the specified window\'s title bar","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindowText ( $hWnd )\\r```"],"_WinAPI_GetWindowThreadProcessId":["Retrieves the identifier of the thread that created the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindowThreadProcessId ( $hWnd, ByRef $iPID )\\r```"],"_WinAPI_GetWindowWidth":["Returns the width of the window","```\\r#include <WinAPI.au3>\\r_WinAPI_GetWindowWidth ( $hWnd )\\r```"],"_WinAPI_GetXYFromPoint":["Returns the X/Y values from a $tagPOINT structure","```\\r#include <WinAPI.au3>\\r_WinAPI_GetXYFromPoint ( ByRef $tPoint, ByRef $iX, ByRef $iY )\\r```"],"_WinAPI_GlobalMemoryStatus":["Retrieves information about current available memory","```\\r#include <WinAPI.au3>\\r_WinAPI_GlobalMemoryStatus ( )\\r```"],"_WinAPI_GUIDFromString":["Converts a string GUID to binary form","```\\r#include <WinAPI.au3>\\r_WinAPI_GUIDFromString ( $sGUID )\\r```"],"_WinAPI_GUIDFromStringEx":["Converts a string GUID to binary form","```\\r#include <WinAPI.au3>\\r_WinAPI_GUIDFromStringEx ( $sGUID, $tGUID )\\r```"],"_WinAPI_HiWord":["Returns the high word of a longword value","```\\r#include <WinAPI.au3>\\r_WinAPI_HiWord ( $iLong )\\r```"],"_WinAPI_InProcess":["Determines whether a window belongs to the current process","```\\r#include <WinAPI.au3>\\r_WinAPI_InProcess ( $hWnd, ByRef $hLastWnd )\\r```"],"_WinAPI_IntToFloat":["Returns a 4 byte integer as a float value","```\\r#include <WinAPI.au3>\\r_WinAPI_IntToFloat ( $iInt )\\r```"],"_WinAPI_InvalidateRect":["Adds a rectangle to the specified window\'s update region","```\\r#include <WinAPI.au3>\\r_WinAPI_InvalidateRect ( $hWnd [, $tRECT = 0 [, $bErase = True]] )\\r```"],"_WinAPI_IsClassName":["Wrapper to check ClassName of the control","```\\r#include <WinAPI.au3>\\r_WinAPI_IsClassName ( $hWnd, $sClassName )\\r```"],"_WinAPI_IsWindow":["Determines whether the specified window handle identifies an existing window","```\\r#include <WinAPI.au3>\\r_WinAPI_IsWindow ( $hWnd )\\r```"],"_WinAPI_IsWindowVisible":["Retrieves the visibility state of the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_IsWindowVisible ( $hWnd )\\r```"],"_WinAPI_LineTo":["Draws a line from the current position up to, but not including, the specified point","```\\r#include <WinAPI.au3>\\r_WinAPI_LineTo ( $hDC, $iX, $iY )\\r```"],"_WinAPI_LoadBitmap":["Loads the specified bitmap resource from a module\'s executable file","```\\r#include <WinAPI.au3>\\r_WinAPI_LoadBitmap ( $hInstance, $sBitmap )\\r```"],"_WinAPI_LoadImage":["Loads an icon, cursor, or bitmap","```\\r#include <WinAPI.au3>\\r_WinAPI_LoadImage ( $hInstance, $sImage, $iType, $iXDesired, $iYDesired, $iLoad )\\r```"],"_WinAPI_LoadLibrary":["Maps a specified executable module into the address space of the calling process","```\\r#include <WinAPI.au3>\\r_WinAPI_LoadLibrary ( $sFileName )\\r```"],"_WinAPI_LoadLibraryEx":["Maps a specified executable module into the address space of the calling process","```\\r#include <WinAPI.au3>\\r_WinAPI_LoadLibraryEx ( $sFileName [, $iFlags = 0] )\\r```"],"_WinAPI_LoadShell32Icon":["Extracts an icon from the shell32.dll file","```\\r#include <WinAPI.au3>\\r_WinAPI_LoadShell32Icon ( $iIconID )\\r```"],"_WinAPI_LoadString":["loads a string resource from the executable file associated with a specified module","```\\r#include <WinAPI.au3>\\r_WinAPI_LoadString ( $hInstance, $iStringID )\\r```"],"_WinAPI_LocalFree":["Frees the specified local memory object and invalidates its handle","```\\r#include <WinAPI.au3>\\r_WinAPI_LocalFree ( $hMemory )\\r```"],"_WinAPI_LoWord":["Returns the low word of a longword","```\\r#include <WinAPI.au3>\\r_WinAPI_LoWord ( $iLong )\\r```"],"_WinAPI_MAKELANGID":["Construct language id from a primary language id and a sublanguage id","```\\r#include <WinAPI.au3>\\r_WinAPI_MAKELANGID ( $iLngIDPrimary, $iLngIDSub )\\r```"],"_WinAPI_MAKELCID":["Construct locale id from a language id and a sort id","```\\r#include <WinAPI.au3>\\r_WinAPI_MAKELCID ( $iLngID, $iSortID )\\r```"],"_WinAPI_MakeLong":["Returns a long int value from two int values","```\\r#include <WinAPI.au3>\\r_WinAPI_MakeLong ( $iLo, $iHi )\\r```"],"_WinAPI_MakeQWord":["Returns a QWORD value from two int values","```\\r#include <WinAPI.au3>\\r_WinAPI_MakeQWord ( $iLoDWORD, $iHiDWORD )\\r```"],"_WinAPI_MessageBeep":["Plays a waveform sound","```\\r#include <WinAPI.au3>\\r_WinAPI_MessageBeep ( [$iType = 1] )\\r```"],"_WinAPI_Mouse_Event":["Synthesizes mouse motion and button clicks","```\\r#include <WinAPI.au3>\\r_WinAPI_Mouse_Event ( $iFlags [, $iX = 0 [, $iY = 0 [, $iData = 0 [, $iExtraInfo = 0]]]] )\\r```"],"_WinAPI_MoveTo":["Updates the current position to the specified point","```\\r#include <WinAPI.au3>\\r_WinAPI_MoveTo ( $hDC, $iX, $iY )\\r```"],"_WinAPI_MoveWindow":["Changes the position and dimensions of the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_MoveWindow ( $hWnd, $iX, $iY, $iWidth, $iHeight [, $bRepaint = True] )\\r```"],"_WinAPI_MsgBox":["Displays a message box with wider margin than original","```\\r#include <WinAPI.au3>\\r_WinAPI_MsgBox ( $iFlags, $sTitle, $sText )\\r```"],"_WinAPI_MulDiv":["Multiplies two 32-bit values and then divides the 64-bit result by a third 32-bit value","```\\r#include <WinAPI.au3>\\r_WinAPI_MulDiv ( $iNumber, $iNumerator, $iDenominator )\\r```"],"_WinAPI_MultiByteToWideChar":["Maps a character string to a wide-character (Unicode) string","```\\r#include <WinAPI.au3>\\r_WinAPI_MultiByteToWideChar ( $vText [, $iCodePage = 0 [, $iFlags = 0 [, $bRetString = False]]] )\\r```"],"_WinAPI_MultiByteToWideCharEx":["Maps a character string to a wide-character (Unicode) string","```\\r#include <WinAPI.au3>\\r_WinAPI_MultiByteToWideCharEx ( $sText, $pText [, $iCodePage = 0 [, $iFlags = 0]] )\\r```"],"_WinAPI_OpenProcess":["Returns a handle of an existing process object","```\\r#include <WinAPI.au3>\\r_WinAPI_OpenProcess ( $iAccess, $bInherit, $iPID [, $bDebugPriv = False] )\\r```"],"_WinAPI_PathFindOnPath":["Searchs for a file in the default system paths","```\\r#include <WinAPI.au3>\\r_WinAPI_PathFindOnPath ( $sFilePath [, $aExtraPaths = \\"\\" [, $sPathDelimiter = @LF]] )\\r```"],"_WinAPI_PointFromRect":["Returns the top/left coordinates of a $tagRECT as a $tagPOINT structure","```\\r#include <WinAPI.au3>\\r_WinAPI_PointFromRect ( ByRef $tRECT [, $bCenter = True] )\\r```"],"_WinAPI_PostMessage":["Places a message in the message queue and then returns","```\\r#include <WinAPI.au3>\\r_WinAPI_PostMessage ( $hWnd, $iMsg, $wParam, $lParam )\\r```"],"_WinAPI_PrimaryLangId":["Extract primary language id from a language id","```\\r#include <WinAPI.au3>\\r_WinAPI_PrimaryLangId ( $iLngID )\\r```"],"_WinAPI_PtInRect":["Determines whether the specified point lies within the specified rectangle","```\\r#include <WinAPI.au3>\\r_WinAPI_PtInRect ( ByRef $tRECT, ByRef $tPoint )\\r```"],"_WinAPI_ReadFile":["Reads data from a file","```\\r#include <WinAPI.au3>\\r_WinAPI_ReadFile ( $hFile, $pBuffer, $iToRead, ByRef $iRead [, $tOverlapped = 0] )\\r```"],"_WinAPI_ReadProcessMemory":["Reads memory in a specified process","```\\r#include <WinAPI.au3>\\r_WinAPI_ReadProcessMemory ( $hProcess, $pBaseAddress, $pBuffer, $iSize, ByRef $iRead )\\r```"],"_WinAPI_RectIsEmpty":["Determins whether a rectangle is empty","```\\r#include <WinAPI.au3>\\r_WinAPI_RectIsEmpty ( ByRef $tRECT )\\r```"],"_WinAPI_RedrawWindow":["Updates the specified rectangle or region in a window\'s client area","```\\r#include <WinAPI.au3>\\r_WinAPI_RedrawWindow ( $hWnd [, $tRECT = 0 [, $hRegion = 0 [, $iFlags = 5]]] )\\r```"],"_WinAPI_RegisterWindowMessage":["Defines a new window message that is guaranteed to be unique throughout the system","```\\r#include <WinAPI.au3>\\r_WinAPI_RegisterWindowMessage ( $sMessage )\\r```"],"_WinAPI_ReleaseCapture":["Releases the mouse capture from a window in the current thread and restores normal mouse input processing","```\\r#include <WinAPI.au3>\\r_WinAPI_ReleaseCapture ( )\\r```"],"_WinAPI_ReleaseDC":["Releases a device context","```\\r#include <WinAPI.au3>\\r_WinAPI_ReleaseDC ( $hWnd, $hDC )\\r```"],"_WinAPI_ScreenToClient":["Converts screen coordinates of a specified point on the screen to client coordinates","```\\r#include <WinAPI.au3>\\r_WinAPI_ScreenToClient ( $hWnd, ByRef $tPoint )\\r```"],"_WinAPI_SelectObject":["Selects an object into the specified device context","```\\r#include <WinAPI.au3>\\r_WinAPI_SelectObject ( $hDC, $hGDIObj )\\r```"],"_WinAPI_SetBkColor":["Sets the current background color to the specified color value","```\\r#include <WinAPI.au3>\\r_WinAPI_SetBkColor ( $hDC, $iColor )\\r```"],"_WinAPI_SetBkMode":["Sets the background mix mode of the specified device context","```\\r#include <WinAPI.au3>\\r_WinAPI_SetBkMode ( $hDC, $iBkMode )\\r```"],"_WinAPI_SetCapture":["Sets the mouse capture to the specified window belonging to the current thread","```\\r#include <WinAPI.au3>\\r_WinAPI_SetCapture ( $hWnd )\\r```"],"_WinAPI_SetCursor":["Establishes the cursor shape","```\\r#include <WinAPI.au3>\\r_WinAPI_SetCursor ( $hCursor )\\r```"],"_WinAPI_SetDefaultPrinter":["Sets the default printer for the current user on the local computer","```\\r#include <WinAPI.au3>\\r_WinAPI_SetDefaultPrinter ( $sPrinter )\\r```"],"_WinAPI_SetDIBits":["Sets the pixels in a compatible bitmap using the color data found in a DIB","```\\r#include <WinAPI.au3>\\r_WinAPI_SetDIBits ( $hDC, $hBitmap, $iStartScan, $iScanLines, $pBits, $tBMI [, $iColorUse = 0] )\\r```"],"_WinAPI_SetEndOfFile":["Sets the physical file size for the specified file to the current position of the file pointer","```\\r#include <WinAPI.au3>\\r_WinAPI_SetEndOfFile ( $hFile )\\r```"],"_WinAPI_SetEvent":["Sets the specified event object to the signaled state","```\\r#include <WinAPI.au3>\\r_WinAPI_SetEvent ( $hEvent )\\r```"],"_WinAPI_SetFilePointer":["Moves the file pointer of the specified file","```\\r#include <WinAPI.au3>\\r_WinAPI_SetFilePointer ( $hFile, $iPos [, $iMethod = 0] )\\r```"],"_WinAPI_SetFocus":["Sets the keyboard focus to the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_SetFocus ( $hWnd )\\r```"],"_WinAPI_SetFont":["Sets a window font","```\\r#include <WinAPI.au3>\\r_WinAPI_SetFont ( $hWnd, $hFont [, $bRedraw = True] )\\r```"],"_WinAPI_SetHandleInformation":["Sets certain properties of an object handle","```\\r#include <WinAPI.au3>\\r_WinAPI_SetHandleInformation ( $hObject, $iMask, $iFlags )\\r```"],"_WinAPI_SetLastError":["Sets the last-error code for the calling thread","```\\r#include <WinAPI.au3>\\r_WinAPI_SetLastError ( $iErrorCode )\\r```"],"_WinAPI_SetLayeredWindowAttributes":["Sets Layered Window Attributes","```\\r#include <WinAPI.au3>\\r_WinAPI_SetLayeredWindowAttributes ( $hWnd, $iTransColor [, $iTransGUI = 255 [, $iFlags = 0x03 [, $bColorRef = False]]] )\\r```"],"_WinAPI_SetParent":["Changes the parent window of the specified child window","```\\r#include <WinAPI.au3>\\r_WinAPI_SetParent ( $hWndChild, $hWndParent )\\r```"],"_WinAPI_SetProcessAffinityMask":["Sets a processor affinity mask for the threads of a specified process","```\\r#include <WinAPI.au3>\\r_WinAPI_SetProcessAffinityMask ( $hProcess, $iMask )\\r```"],"_WinAPI_SetSysColors":["Obtains information about the display devices in a system","```\\r#include <WinAPI.au3>\\r_WinAPI_SetSysColors ( $vElements, $vColors )\\r```"],"_WinAPI_SetTextColor":["Sets the current text color to the specified color value","```\\r#include <WinAPI.au3>\\r_WinAPI_SetTextColor ( $hDC, $iColor )\\r```"],"_WinAPI_SetWindowLong":["Sets information about the specified window","```\\r#include <WinAPI.au3>\\r_WinAPI_SetWindowLong ( $hWnd, $iIndex, $iValue )\\r```"],"_WinAPI_SetWindowPlacement":["Sets the placement of the window for Min, Max, and normal positions","```\\r#include <WinAPI.au3>\\r_WinAPI_SetWindowPlacement ( $hWnd, $tWindowPlacement )\\r```"],"_WinAPI_SetWindowPos":["Changes the size, position, and Z order of a child, pop-up, or top-level window","```\\r#include <WinAPI.au3>\\r_WinAPI_SetWindowPos ( $hWnd, $hAfter, $iX, $iY, $iCX, $iCY, $iFlags )\\r```"],"_WinAPI_SetWindowRgn":["Sets the window region of a window","```\\r#include <WinAPI.au3>\\r_WinAPI_SetWindowRgn ( $hWnd, $hRgn [, $bRedraw = True] )\\r```"],"_WinAPI_SetWindowsHookEx":["Installs an application-defined hook procedure into a hook chain","```\\r#include <WinAPI.au3>\\r_WinAPI_SetWindowsHookEx ( $iHook, $pProc, $hDll [, $iThreadId = 0] )\\r```"],"_WinAPI_SetWindowText":["Changes the text of the specified window\'s title bar","```\\r#include <WinAPI.au3>\\r_WinAPI_SetWindowText ( $hWnd, $sText )\\r```"],"_WinAPI_ShowCursor":["Displays or hides the cursor","```\\r#include <WinAPI.au3>\\r_WinAPI_ShowCursor ( $bShow )\\r```"],"_WinAPI_ShowError":["Displays an error message box with an optional exit","```\\r#include <WinAPI.au3>\\r_WinAPI_ShowError ( $sText [, $bExit = True] )\\r```"],"_WinAPI_ShowMsg":["Displays an \\"Information\\" message box","```\\r#include <WinAPI.au3>\\r_WinAPI_ShowMsg ( $sText )\\r```"],"_WinAPI_ShowWindow":["Sets the specified window\'s show state","```\\r#include <WinAPI.au3>\\r_WinAPI_ShowWindow ( $hWnd [, $iCmdShow = 5] )\\r```"],"_WinAPI_StringFromGUID":["Converts a binary GUID to string form","```\\r#include <WinAPI.au3>\\r_WinAPI_StringFromGUID ( $tGUID )\\r```"],"_WinAPI_StringLenA":["Calculates the size of ANSI string","```\\r#include <WinAPI.au3>\\r_WinAPI_StringLenA ( Const ByRef $tString )\\r```"],"_WinAPI_StringLenW":["Calculates the size of wide string","```\\r#include <WinAPI.au3>\\r_WinAPI_StringLenW ( Const ByRef $tString )\\r```"],"_WinAPI_SubLangId":["Extract sublanguage id from a language id","```\\r#include <WinAPI.au3>\\r_WinAPI_SubLangId ( $iLngID )\\r```"],"_WinAPI_SystemParametersInfo":["Retrieves or sets the value of one of the system-wide parameters","```\\r#include <WinAPI.au3>\\r_WinAPI_SystemParametersInfo ( $iAction [, $iParam = 0 [, $vParam = 0 [, $iWinIni = 0]]] )\\r```"],"_WinAPI_TwipsPerPixelX":["Returns the width of a pixel, in twips","```\\r#include <WinAPI.au3>\\r_WinAPI_TwipsPerPixelX ( )\\r```"],"_WinAPI_TwipsPerPixelY":["Returns the height of a pixel, in twips","```\\r#include <WinAPI.au3>\\r_WinAPI_TwipsPerPixelY ( )\\r```"],"_WinAPI_UnhookWindowsHookEx":["Removes a hook procedure installed in a hook chain by the _WinAPI_SetWindowsHookEx function","```\\r#include <WinAPI.au3>\\r_WinAPI_UnhookWindowsHookEx ( $hHook )\\r```"],"_WinAPI_UpdateLayeredWindow":["Updates the position, size, shape, content, and translucency of a layered window","```\\r#include <WinAPI.au3>\\r_WinAPI_UpdateLayeredWindow ( $hWnd, $hDestDC, $tPTDest, $tSize, $hSrcDC, $tPTSrce, $iRGB, $tBlend, $iFlags )\\r```"],"_WinAPI_UpdateWindow":["Updates the client area of a window by sending a WM_PAINT message to the window","```\\r#include <WinAPI.au3>\\r_WinAPI_UpdateWindow ( $hWnd )\\r```"],"_WinAPI_WaitForInputIdle":["Waits until a process is waiting for user input with no input pending, or a time out","```\\r#include <WinAPI.au3>\\r_WinAPI_WaitForInputIdle ( $hProcess [, $iTimeout = -1] )\\r```"],"_WinAPI_WaitForMultipleObjects":["Waits until one or all of the specified objects are in the signaled state","```\\r#include <WinAPI.au3>\\r_WinAPI_WaitForMultipleObjects ( $iCount, $paHandles [, $bWaitAll = False [, $iTimeout = -1]] )\\r```"],"_WinAPI_WaitForSingleObject":["Waits until the specified object is in the signaled state","```\\r#include <WinAPI.au3>\\r_WinAPI_WaitForSingleObject ( $hHandle [, $iTimeout = -1] )\\r```"],"_WinAPI_WideCharToMultiByte":["Converts a Unicode string to a multibyte string","```\\r#include <WinAPI.au3>\\r_WinAPI_WideCharToMultiByte ( $vUnicode [, $iCodePage = 0 [, $bRetString = True]] )\\r```"],"_WinAPI_WindowFromPoint":["Retrieves the handle of the window that contains the specified point","```\\r#include <WinAPI.au3>\\r_WinAPI_WindowFromPoint ( ByRef $tPoint )\\r```"],"_WinAPI_WriteConsole":["Writes a character string to a console screen buffer","```\\r#include <WinAPI.au3>\\r_WinAPI_WriteConsole ( $hConsole, $sText )\\r```"],"_WinAPI_WriteFile":["Writes data to a file at the position specified by the file pointer","```\\r#include <WinAPI.au3>\\r_WinAPI_WriteFile ( $hFile, $pBuffer, $iToWrite, ByRef $iWritten [, $tOverlapped = 0] )\\r```"],"_WinAPI_WriteProcessMemory":["Writes memory in a specified process","```\\r#include <WinAPI.au3>\\r_WinAPI_WriteProcessMemory ( $hProcess, $pBaseAddress, $pBuffer, $iSize, ByRef $iWritten [, $sBuffer = \\"ptr\\"] )\\r```"]}'),se=JSON.parse('{"_WinAPI_CLSIDFromProgID":["Looks up a CLSID in the registry, given a ProgID","```\\r#include <WinAPICom.au3>\\r_WinAPI_CLSIDFromProgID ( $sProgID )\\r```"],"_WinAPI_CoInitialize":["Initializes the COM library for use by the calling process","```\\r#include <WinAPICom.au3>\\r_WinAPI_CoInitialize ( [$iFlags = 0] )\\r```"],"_WinAPI_CoTaskMemAlloc":["Allocates a block of task memory","```\\r#include <WinAPICom.au3>\\r_WinAPI_CoTaskMemAlloc ( $iSize )\\r```"],"_WinAPI_CoTaskMemFree":["Frees a block of task memory","```\\r#include <WinAPICom.au3>\\r_WinAPI_CoTaskMemFree ( $pMemory )\\r```"],"_WinAPI_CoTaskMemRealloc":["Changes the size of a previously allocated block of task memory","```\\r#include <WinAPICom.au3>\\r_WinAPI_CoTaskMemRealloc ( $pMemory, $iSize )\\r```"],"_WinAPI_CoUninitialize":["Closes the COM library on the current process","```\\r#include <WinAPICom.au3>\\r_WinAPI_CoUninitialize ( )\\r```"],"_WinAPI_CreateGUID":["Creates a globally unique identifier (GUID)","```\\r#include <WinAPICom.au3>\\r_WinAPI_CreateGUID ( )\\r```"],"_WinAPI_CreateStreamOnHGlobal":["Creates a stream object that uses a memory handle to store the stream contents","```\\r#include <WinAPICom.au3>\\r_WinAPI_CreateStreamOnHGlobal ( [$hGlobal = 0 [, $bDeleteOnRelease = True]] )\\r```"],"_WinAPI_GetHGlobalFromStream":["Retrieves the global memory handle to a stream","```\\r#include <WinAPICom.au3>\\r_WinAPI_GetHGlobalFromStream ( $pStream )\\r```"],"_WinAPI_ProgIDFromCLSID":["Retrieves the ProgID for a given CLSID","```\\r#include <WinAPICom.au3>\\r_WinAPI_ProgIDFromCLSID ( $sCLSID )\\r```"],"_WinAPI_ReleaseStream":["Releases a stream object","```\\r#include <WinAPICom.au3>\\r_WinAPI_ReleaseStream ( $pStream )\\r```"]}'),de=JSON.parse('{"_WinAPI_DisplayStruct":["Displays data from the specified structure or memory address as a list","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_DisplayStruct ( $tStruct [, $sStruct = \'\' [, $sTitle = \'\' [, $iItem = 0 [, $iSubItem = 0 [, $iFlags = 0 [, $bTop = True [, $hParent = 0]]]]]]] )\\r```"],"_WinAPI_EnumDllProc":["Enumerates an exported functions of the specified dynamic-link library (DLL)","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_EnumDllProc ( $sFilePath [, $sMask = \'\' [, $iFlags = 0]] )\\r```"],"_WinAPI_FatalExit":["Transfers execution control to the debugger","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_FatalExit ( $iCode )\\r```"],"_WinAPI_GetApplicationRestartSettings":["Retrieves the restart information registered for the specified process","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_GetApplicationRestartSettings ( [$iPID = 0] )\\r```"],"_WinAPI_GetErrorMessage":["Retrieves a text error message for the specified system error code","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_GetErrorMessage ( $iCode [, $iLanguage = 0] )\\r```"],"_WinAPI_GetErrorMode":["Retrieves the error mode for the current process","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_GetErrorMode ( )\\r```"],"_WinAPI_IsInternetConnected":["Determines whether the current user is connected to the Internet","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_IsInternetConnected ( )\\r```"],"_WinAPI_IsNetworkAlive":["Determines whether or not a local system is connected to a network, and identifies the type of network connection","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_IsNetworkAlive ( )\\r```"],"_WinAPI_NtStatusToDosError":["Converts the specified NTSTATUS error code to its equivalent system error code","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_NtStatusToDosError ( $iStatus )\\r```"],"_WinAPI_RegisterApplicationRestart":["Registers the active instance of an application for restart","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_RegisterApplicationRestart ( [$iFlags = 0 [, $sCmd = \'\']] )\\r```"],"_WinAPI_SetErrorMode":["Controls whether the system will handle the specified types of serious errors or whether the process will handle them","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_SetErrorMode ( $iMode )\\r```"],"_WinAPI_ShowLastError":["Shows the last error code and message","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_ShowLastError ( [$sText = \'\' [, $bAbort = False [, $iLanguage = 0]]] )\\r```"],"_WinAPI_UniqueHardwareID":["Generates a unique hardware identifier (ID) for local computer","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_UniqueHardwareID ( [$iFlags = 0] )\\r```"],"_WinAPI_UnregisterApplicationRestart":["Removes the active instance of an application from the restart list","```\\r#include <WinAPIDiag.au3>\\r_WinAPI_UnregisterApplicationRestart ( )\\r```"]}'),ce=JSON.parse('{"_WinAPI_BrowseForFolderDlg":["Displays a dialog box that enables the user to select a Shell folder","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_BrowseForFolderDlg ( [$sRoot = \'\' [, $sText = \'\' [, $iFlags = 0 [, $pBrowseProc = 0 [, $lParam = 0 [, $hParent = 0]]]]]] )\\r```"],"_WinAPI_CommDlgExtendedErrorEx":["Returns a common dialog box error code","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_CommDlgExtendedErrorEx ( )\\r```"],"_WinAPI_ConfirmCredentials":["Confirms the validity of the credential harvested","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_ConfirmCredentials ( $sTarget, $bConfirm )\\r```"],"_WinAPI_FindTextDlg":["Creates a system-defined modeless Find dialog box to search for text in a document","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_FindTextDlg ( $hOwner [, $sFindWhat = \'\' [, $iFlags = 0 [, $pFindProc = 0 [, $lParam = 0]]]] )\\r```"],"_WinAPI_FlushFRBuffer":["Destroys the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_FlushFRBuffer ( )\\r```"],"_WinAPI_FormatDriveDlg":["Opens the Shell\'s Format dialog","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_FormatDriveDlg ( $sDrive [, $iOption = 0 [, $hParent = 0]] )\\r```"],"_WinAPI_GetConnectedDlg":["Launches the Get Connected wizard within the calling application to enable network connectivity","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_GetConnectedDlg ( $iDlg [, $iFlags = 0 [, $hParent = 0]] )\\r```"],"_WinAPI_GetFRBuffer":["Retrieves the current size of the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_GetFRBuffer ( )\\r```"],"_WinAPI_MessageBoxCheck":["Displays a message box that gives the user the option of suppressing further occurrences","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_MessageBoxCheck ( $iType, $sTitle, $sText, $sRegVal [, $iDefault = -1 [, $hParent = 0]] )\\r```"],"_WinAPI_MessageBoxIndirect":["Creates, displays, and operates a message box","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_MessageBoxIndirect ( $tMSGBOXPARAMS )\\r```"],"_WinAPI_OpenFileDlg":["Creates a dialog box that lets the user specify the drive, directory, and the name of a file or set of files to be opened","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_OpenFileDlg ( [$sTitle = \'\' [, $sInitDir = \'\' [, $sFilters = \'\' [, $iDefaultFilter = 0 [, $sDefaultFilePath = \'\' [, $sDefaultExt = \'\' [, $iFlags = 0 [, $iFlagsEx = 0 [, $pOFNProc = 0 [, $pData = 0 [, $hParent = 0]]]]]]]]]]] )\\r```"],"_WinAPI_PageSetupDlg":["Creates a Page Setup dialog box that enables the user to specify the attributes of a printed page","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_PageSetupDlg ( ByRef $tPAGESETUPDLG )\\r```"],"_WinAPI_PickIconDlg":["Displays a dialog box that allows the user to choose an icon","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_PickIconDlg ( [$sIcon = \'\' [, $iIndex = 0 [, $hParent = 0]]] )\\r```"],"_WinAPI_PrintDlg":["Displays a Print dialog box","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_PrintDlg ( ByRef $tPRINTDLG )\\r```"],"_WinAPI_PrintDlgEx":["Displays a Print property sheet that enables the user to specify the properties of a particular print job","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_PrintDlgEx ( ByRef $tPRINTDLGEX )\\r```"],"_WinAPI_ReplaceTextDlg":["Creates a system-defined modeless dialog box that lets the user specify a string to search for and a replacement string","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_ReplaceTextDlg ( $hOwner [, $sFindWhat = \'\' [, $sReplaceWith = \'\' [, $iFlags = 0 [, $pReplaceProc = 0 [, $lParam = 0]]]]] )\\r```"],"_WinAPI_RestartDlg":["Displays a dialog box that prompts the user to restart Microsoft Windows","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_RestartDlg ( [$sText = \'\' [, $iFlags = 2 [, $hParent = 0]]] )\\r```"],"_WinAPI_SaveFileDlg":["Creates a dialog box that lets the user specify the drive, directory, and name of a file to save","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_SaveFileDlg ( [$sTitle = \\"\\" [, $sInitDir = \\"\\" [, $sFilters = \\"\\" [, $iDefaultFilter = 0 [, $sDefaultFilePath = \\"\\" [, $sDefaultExt = \\"\\" [, $iFlags = 0 [, $iFlagsEx = 0 [, $pOFNProc = 0 [, $pData = 0 [, $hParent = 0]]]]]]]]]]] )\\r```"],"_WinAPI_SetFRBuffer":["Sets the size of the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_SetFRBuffer ( $iChars )\\r```"],"_WinAPI_ShellAboutDlg":["Displays a Windows About dialog box","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_ShellAboutDlg ( $sTitle, $sName, $sText [, $hIcon = 0 [, $hParent = 0]] )\\r```"],"_WinAPI_ShellOpenWithDlg":["Displays the Open With dialog box","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_ShellOpenWithDlg ( $sFilePath [, $iFlags = 0 [, $hParent = 0]] )\\r```"],"_WinAPI_ShellStartNetConnectionDlg":["Displays a general browsing dialog box for a network resource connection","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_ShellStartNetConnectionDlg ( [$sRemote = \'\' [, $iFlags = 0 [, $hParent = 0]]] )\\r```"],"_WinAPI_ShellUserAuthenticationDlg":["Creates and displays a configurable dialog box that accepts credentials information from a user","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_ShellUserAuthenticationDlg ( $sCaption, $sMessage, $sUser, $sPassword, $sTarget [, $iFlags = 0 [, $iError = 0 [, $bSave = False [, $hBitmap = 0 [, $hParent = 0]]]]] )\\r```"],"_WinAPI_ShellUserAuthenticationDlgEx":["Creates and displays a configurable dialog box that accepts credentials information from a user","```\\r#include <WinAPIDlg.au3>\\r_WinAPI_ShellUserAuthenticationDlgEx ( $sCaption, $sMessage, $sUser, $sPassword [, $iFlags = 0 [, $iAuthError = 0 [, $bSave = False [, $iPackage = 0 [, $hParent = 0]]]]] )\\r```"]}'),he=JSON.parse('{"_WinAPI_BackupRead":["Backs up a file or directory, including the security information","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_BackupRead ( $hFile, $pBuffer, $iLength, ByRef $iBytes, ByRef $pContext [, $bSecurity = False] )\\r```"],"_WinAPI_BackupReadAbort":["Finishes the use of _WinAPI_BackupRead() on the handle","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_BackupReadAbort ( ByRef $pContext )\\r```"],"_WinAPI_BackupSeek":["Seeks forward in a data stream initially accessed by using the _WinAPI_BackupRead() or _WinAPI_BackupWrite() function","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_BackupSeek ( $hFile, $iSeek, ByRef $iBytes, ByRef $pContext )\\r```"],"_WinAPI_BackupWrite":["Restore a file or directory that was backed up using _WinAPI_BackupRead()","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_BackupWrite ( $hFile, $pBuffer, $iLength, ByRef $iBytes, ByRef $pContext [, $bSecurity = False] )\\r```"],"_WinAPI_BackupWriteAbort":["Finishes the use of _WinAPI_BackupWrite() on the handle","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_BackupWriteAbort ( ByRef $pContext )\\r```"],"_WinAPI_DefineDosDevice":["Defines, redefines, or deletes MS-DOS device names","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_DefineDosDevice ( $sDevice, $iFlags [, $sFilePath = \'\'] )\\r```"],"_WinAPI_GetDriveType":["Determines whether a disk drive is a removable, fixed, CD-ROM, RAM disk, or network drive","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetDriveType ( [$sDrive = \'\'] )\\r```"],"_WinAPI_GetLogicalDrives":["Retrieves a bitmask representing the currently available disk drives","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetLogicalDrives ( )\\r```"],"_WinAPI_GetPEType":["Retrieves a type of the machine for the specified portable executable (PE)","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetPEType ( $sFilePath )\\r```"],"_WinAPI_QueryDosDevice":["Retrieves the current mapping for a particular MS-DOS device name","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_QueryDosDevice ( $sDevice )\\r```"],"_WinAPI_Wow64EnableWow64FsRedirection":["Enables or disables file system redirection for the calling thread","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_Wow64EnableWow64FsRedirection ( $bEnable )\\r```"],"_WinAPI_CreateObjectID":["Creates or retrieves the object identifier for the specified file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_CreateObjectID ( $sFilePath )\\r```"],"_WinAPI_DeleteObjectID":["Removes the object identifier from a specified file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_DeleteObjectID ( $sFilePath )\\r```"],"_WinAPI_DeviceIoControl":["Sends a control code directly to a specified device driver","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_DeviceIoControl ( $hDevice, $iControlCode [, $pInBuffer = 0 [, $iInBufferSize = 0 [, $pOutBuffer = 0 [, $iOutBufferSize = 0]]]] )\\r```"],"_WinAPI_EjectMedia":["Ejects media from a device","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_EjectMedia ( $sDrive )\\r```"],"_WinAPI_GetCDType":["Retrieves a type of the media which is loaded into a specified CD-ROM device","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetCDType ( $sDrive )\\r```"],"_WinAPI_GetDriveBusType":["Retrieves a bus type for the specified drive","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetDriveBusType ( $sDrive )\\r```"],"_WinAPI_GetDriveGeometryEx":["Retrieves extended information about the disk\'s geometry","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetDriveGeometryEx ( $iDrive )\\r```"],"_WinAPI_GetDriveNumber":["Retrieves a device type, device number, and partition number for the specified drive","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetDriveNumber ( $sDrive )\\r```"],"_WinAPI_GetObjectID":["Retrieves the object identifier for the specified file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetObjectID ( $sFilePath )\\r```"],"_WinAPI_IOCTL":["Create a unique system I/O control code (IOCTL)","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_IOCTL ( $iDeviceType, $iFunction, $iMethod, $iAccess )\\r```"],"_WinAPI_IsDoorOpen":["Checks if a CD (DVD) tray is open","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_IsDoorOpen ( $sDrive )\\r```"],"_WinAPI_IsWritable":["Determines whether a disk is writable","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_IsWritable ( $sDrive )\\r```"],"_WinAPI_LoadMedia":["Loads media into a device","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_LoadMedia ( $sDrive )\\r```"],"_WinAPI_CopyFileEx":["Copies an existing file to a new file, notifying the application of its progress through a callback function","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_CopyFileEx ( $sExistingFile, $sNewFile [, $iFlags = 0 [, $pProgressProc = 0 [, $pData = 0]]] )\\r```"],"_WinAPI_CreateDirectory":["Creates a new directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_CreateDirectory ( $sDir [, $tSecurity = 0] )\\r```"],"_WinAPI_CreateDirectoryEx":["Creates a new directory with the attributes of a specified template directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_CreateDirectoryEx ( $sNewDir, $sTemplateDir [, $tSecurity = 0] )\\r```"],"_WinAPI_CreateFileEx":["Creates or opens a file or I/O device","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_CreateFileEx ( $sFilePath, $iCreation [, $iAccess = 0 [, $iShare = 0 [, $iFlagsAndAttributes = 0 [, $tSecurity = 0 [, $hTemplate = 0]]]]] )\\r```"],"_WinAPI_CreateFileMapping":["Creates or opens a named or unnamed file mapping object for a specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_CreateFileMapping ( $hFile [, $iSize = 0 [, $sName = \'\' [, $iProtect = 0x0004 [, $tSecurity = 0]]]] )\\r```"],"_WinAPI_CreateHardLink":["Establishes a hard link between an existing file and a new file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_CreateHardLink ( $sNewFile, $sExistingFile )\\r```"],"_WinAPI_CreateSymbolicLink":["Creates a symbolic link","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_CreateSymbolicLink ( $sSymlink, $sTarget [, $bDirectory = False] )\\r```"],"_WinAPI_DecryptFile":["Decrypts an encrypted file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_DecryptFile ( $sFilePath )\\r```"],"_WinAPI_DeleteFile":["Deletes an existing file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_DeleteFile ( $sFilePath )\\r```"],"_WinAPI_DeleteVolumeMountPoint":["Deletes a drive letter or mounted folder","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_DeleteVolumeMountPoint ( $sMountedPath )\\r```"],"_WinAPI_DuplicateEncryptionInfoFile":["Copies the EFS metadata from one file or directory to another","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_DuplicateEncryptionInfoFile ( $sSrcFilePath, $sDestFilePath [, $iCreation = 2 [, $iAttributes = 0 [, $tSecurity = 0]]] )\\r```"],"_WinAPI_EncryptFile":["Encrypts a file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_EncryptFile ( $sFilePath )\\r```"],"_WinAPI_EncryptionDisable":["Disables or enables encryption of the specified directory and the files in it","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_EncryptionDisable ( $sDir, $bDisable )\\r```"],"_WinAPI_EnumFiles":["Enumerates the files and subdirectories for the specified directory with a name that matches the template","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_EnumFiles ( $sDir [, $iFlag = 0 [, $sTemplate = \'\' [, $bExclude = False]]] )\\r```"],"_WinAPI_EnumFileStreams":["Enumerates all streams with a ::$DATA stream type in the specified file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_EnumFileStreams ( $sFilePath )\\r```"],"_WinAPI_EnumHardLinks":["Enumerates all the hard links to the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_EnumHardLinks ( $sFilePath )\\r```"],"_WinAPI_FileEncryptionStatus":["Retrieves the encryption status of the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FileEncryptionStatus ( $sFilePath )\\r```"],"_WinAPI_FileExists":["Tests whether the specified path is existing file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FileExists ( $sFilePath )\\r```"],"_WinAPI_FileInUse":["Tests whether the specified file in use by another application","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FileInUse ( $sFilePath )\\r```"],"_WinAPI_FindClose":["Closes a file search handle","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindClose ( $hSearch )\\r```"],"_WinAPI_FindCloseChangeNotification":["Stops change notification handle monitoring","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindCloseChangeNotification ( $hChange )\\r```"],"_WinAPI_FindFirstChangeNotification":["Creates a change notification handle and sets up initial change notification filter conditions","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindFirstChangeNotification ( $sDirectory, $iFlags [, $bSubtree = False] )\\r```"],"_WinAPI_FindFirstFile":["Searches a directory for a file or subdirectory with a name that matches a specific name","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindFirstFile ( $sFilePath, $tData )\\r```"],"_WinAPI_FindFirstFileName":["Creates an enumeration of all the hard links to the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindFirstFileName ( $sFilePath, ByRef $sLink )\\r```"],"_WinAPI_FindFirstStream":["Enumerates the first stream with a ::$DATA stream type in the specified file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindFirstStream ( $sFilePath, $tData )\\r```"],"_WinAPI_FindNextChangeNotification":["Requests that the operating system signal a change notification handle the next time it detects an appropriate change","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindNextChangeNotification ( $hChange )\\r```"],"_WinAPI_FindNextFile":["Continues a file or directory search","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindNextFile ( $hSearch, $tData )\\r```"],"_WinAPI_FindNextFileName":["Continues enumerating the hard links","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindNextFileName ( $hSearch, ByRef $sLink )\\r```"],"_WinAPI_FindNextStream":["Continues a stream search","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FindNextStream ( $hSearch, $tData )\\r```"],"_WinAPI_FlushViewOfFile":["Writes to the disk a byte range within a mapped view of a file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_FlushViewOfFile ( $pAddress [, $iBytes = 0] )\\r```"],"_WinAPI_GetBinaryType":["Determines whether a file is an executable (.exe) file, and if so, which subsystem runs the executable file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetBinaryType ( $sFilePath )\\r```"],"_WinAPI_GetCompressedFileSize":["Retrieves the actual number of bytes of disk storage used to store a specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetCompressedFileSize ( $sFilePath )\\r```"],"_WinAPI_GetCompression":["Retrieves the current compression state of a file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetCompression ( $sFilePath )\\r```"],"_WinAPI_GetCurrentDirectory":["Retrieves the current directory for the current process","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetCurrentDirectory ( )\\r```"],"_WinAPI_GetDiskFreeSpaceEx":["Retrieves information about the amount of space that is available on a disk volume","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetDiskFreeSpaceEx ( $sDrive )\\r```"],"_WinAPI_GetFileAttributes":["Retrieves file system attributes for a specified file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFileAttributes ( $sFilePath )\\r```"],"_WinAPI_GetFileID":["Retrieves the file system\'s 8-byte file reference number for a file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFileID ( $hFile )\\r```"],"_WinAPI_GetFileInformationByHandle":["Retrieves file information for the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFileInformationByHandle ( $hFile )\\r```"],"_WinAPI_GetFileInformationByHandleEx":["Retrieves file information for the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFileInformationByHandleEx ( $hFile )\\r```"],"_WinAPI_GetFilePointerEx":["Retrieves the file pointer of the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFilePointerEx ( $hFile )\\r```"],"_WinAPI_GetFileSizeOnDisk":["Retrieves the file allocation size on disk","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFileSizeOnDisk ( $sFilePath )\\r```"],"_WinAPI_GetFileTitle":["Retrieves the name of the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFileTitle ( $sFilePath )\\r```"],"_WinAPI_GetFileType":["Retrieves the file type of the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFileType ( $hFile )\\r```"],"_WinAPI_GetFinalPathNameByHandle":["Retrieves the final path of the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFinalPathNameByHandle ( $hFile )\\r```"],"_WinAPI_GetFinalPathNameByHandleEx":["Retrieves the final path of the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFinalPathNameByHandleEx ( $hFile [, $iFlags = 0] )\\r```"],"_WinAPI_GetFullPathName":["Retrieves the full path and file name of the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetFullPathName ( $sFilePath )\\r```"],"_WinAPI_GetProfilesDirectory":["Retrieves the path to the root directory where user profiles are stored","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetProfilesDirectory ( )\\r```"],"_WinAPI_GetTempFileName":["Creates a name for a temporary file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetTempFileName ( $sFilePath [, $sPrefix = \'\'] )\\r```"],"_WinAPI_GetVolumeInformation":["Retrieves information about the file system and volume associated with the specified root directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetVolumeInformation ( [$sRoot = \'\'] )\\r```"],"_WinAPI_GetVolumeInformationByHandle":["Retrieves information about the file system and volume associated with the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetVolumeInformationByHandle ( $hFile )\\r```"],"_WinAPI_GetVolumeNameForVolumeMountPoint":["Retrieves a volume GUID path for the volume that is associated with the specified volume mount point","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_GetVolumeNameForVolumeMountPoint ( $sMountedPath )\\r```"],"_WinAPI_IsPathShared":["Determines whether the path is shared","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_IsPathShared ( $sFilePath )\\r```"],"_WinAPI_LockDevice":["Enables or disables the mechanism that ejects media, for those devices possessing that locking capability","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_LockDevice ( $sDrive, $bLock )\\r```"],"_WinAPI_LockFile":["Locks the specified file for exclusive access by the calling process","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_LockFile ( $hFile, $iOffset, $iLength )\\r```"],"_WinAPI_MapViewOfFile":["Maps a view of a file mapping into the address space of a calling process","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_MapViewOfFile ( $hMapping [, $iOffset = 0 [, $iBytes = 0 [, $iAccess = 0x0006]]] )\\r```"],"_WinAPI_MoveFileEx":["Moves a file or directory, notifying the application of its progress through a callback function","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_MoveFileEx ( $sExistingFile, $sNewFile [, $iFlags = 0 [, $pProgressProc = 0 [, $pData = 0]]] )\\r```"],"_WinAPI_OpenFileById":["Opens the file that matches the specified object identifier","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_OpenFileById ( $hFile, $vID [, $iAccess = 0 [, $iShare = 0 [, $iFlags = 0]]] )\\r```"],"_WinAPI_OpenFileMapping":["Opens a named file mapping object","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_OpenFileMapping ( $sName [, $iAccess = 0x0006 [, $bInherit = False]] )\\r```"],"_WinAPI_PathIsDirectory":["Verifies that a path is a valid directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_PathIsDirectory ( $sFilePath )\\r```"],"_WinAPI_PathIsDirectoryEmpty":["Determines whether a specified path is an empty directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_PathIsDirectoryEmpty ( $sFilePath )\\r```"],"_WinAPI_ReadDirectoryChanges":["Retrieves information that describes the changes within the specified directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_ReadDirectoryChanges ( $hDirectory, $iFilter, $pBuffer, $iLength [, $bSubtree = 0] )\\r```"],"_WinAPI_RemoveDirectory":["Deletes an existing empty directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_RemoveDirectory ( $sDirPath )\\r```"],"_WinAPI_ReOpenFile":["Reopens the specified file system object with different access rights, sharing mode, and flags","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_ReOpenFile ( $hFile, $iAccess, $iShare [, $iFlags = 0] )\\r```"],"_WinAPI_ReplaceFile":["Replaces one file with another file, and creates a backup copy of the original file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_ReplaceFile ( $sReplacedFile, $sReplacementFile [, $sBackupFile = \'\' [, $iFlags = 0]] )\\r```"],"_WinAPI_SearchPath":["Searches for a specified file in a specified path","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SearchPath ( $sFilePath [, $sSearchPath = \'\'] )\\r```"],"_WinAPI_SetCompression":["Sets the compression state of a file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SetCompression ( $sFilePath, $iCompression )\\r```"],"_WinAPI_SetCurrentDirectory":["Changes the current directory for the current process","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SetCurrentDirectory ( $sDir )\\r```"],"_WinAPI_SetFileAttributes":["Sets the attributes for a file or directory","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SetFileAttributes ( $sFilePath, $iAttributes )\\r```"],"_WinAPI_SetFileInformationByHandleEx":["Sets the file information for the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SetFileInformationByHandleEx ( $hFile, $tFILEINFO )\\r```"],"_WinAPI_SetFilePointerEx":["Moves the file pointer of the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SetFilePointerEx ( $hFile, $iPos [, $iMethod = 0] )\\r```"],"_WinAPI_SetFileShortName":["Sets the short name for the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SetFileShortName ( $hFile, $sShortName )\\r```"],"_WinAPI_SetFileValidData":["Sets the valid data length of the specified file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SetFileValidData ( $hFile, $iLength )\\r```"],"_WinAPI_SetSearchPathMode":["Sets the per-process mode that the _WinAPI_SearchPath() function uses when locating files","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SetSearchPathMode ( $iFlags )\\r```"],"_WinAPI_SetVolumeMountPoint":["Associates a volume with a drive letter or a directory on another volume","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SetVolumeMountPoint ( $sFilePath, $sGUID )\\r```"],"_WinAPI_SfcIsFileProtected":["Determines whether the specified file is protected","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_SfcIsFileProtected ( $sFilePath )\\r```"],"_WinAPI_UnlockFile":["Unlocks a region in an open file","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_UnlockFile ( $hFile, $iOffset, $iLength )\\r```"],"_WinAPI_UnmapViewOfFile":["Unmaps a mapped view of a file from the calling process\'s address space","```\\r#include <WinAPIFiles.au3>\\r_WinAPI_UnmapViewOfFile ( $pAddress )\\r```"]}'),ue=JSON.parse('{"_WinAPI_CreateDIB":["Creates an uncompressed device-independent bitmap (DIB) with the specified width, height, and color depth","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateDIB ( $iWidth, $iHeight [, $iBitsPerPel = 32 [, $tColorTable = 0 [, $iColorCount = 0]]] )\\r```"],"_WinAPI_AdjustBitmap":["Creates a new device-depended bitmap (DDB) from the source bitmap with new dimensions and color adjustment","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_AdjustBitmap ( $hBitmap, $iWidth, $iHeight [, $iMode = 3 [, $tAdjustment = 0]] )\\r```"],"_WinAPI_AlphaBlend":["Displays bitmaps that have transparent or semitransparent pixels","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_AlphaBlend ( $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iAlpha [, $bAlpha = False] )\\r```"],"_WinAPI_CompressBitmapBits":["Creates a compressed data block from the specified bitmap","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CompressBitmapBits ( $hBitmap, ByRef $pBuffer [, $iCompression = 0 [, $iQuality = 100]] )\\r```"],"_WinAPI_CopyBitmap":["Creates a duplicate of a specified bitmap with a device-independent bitmap (DIB) section","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CopyBitmap ( $hBitmap )\\r```"],"_WinAPI_CopyImage":["Creates a new image (icon, cursor, or bitmap) and copies the attributes of the specified image to the new one","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CopyImage ( $hImage [, $iType = 0 [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]] )\\r```"],"_WinAPI_Create32BitHBITMAP":["Creates a 32 bits-per-pixel bitmap from the specified icon","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_Create32BitHBITMAP ( $hIcon [, $bDib = False [, $bDelete = False]] )\\r```"],"_WinAPI_Create32BitHICON":["Converts an icon to a 32 bits-per-pixel format and copies to the new icon","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_Create32BitHICON ( $hIcon [, $bDelete = False] )\\r```"],"_WinAPI_CreateANDBitmap":["Creates AND bitmask device-independent bitmap (DIB) from the specified bitmap","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateANDBitmap ( $hBitmap )\\r```"],"_WinAPI_CreateBitmapIndirect":["Creates a bitmap with the specified width, height, and color format (color planes and bits-per-pixel)","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateBitmapIndirect ( $tBITMAP )\\r```"],"_WinAPI_CreateCompatibleBitmapEx":["Creates a bitmap compatible with the device and fills it the specified color","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateCompatibleBitmapEx ( $hDC, $iWidth, $iHeight, $iRGB )\\r```"],"_WinAPI_CreateDIBColorTable":["Creates RGB color table from the specified array of colors","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateDIBColorTable ( Const ByRef $aColorTable [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_CreateDIBitmap":["Creates a compatible bitmap (DDB) from a DIB and, optionally, sets the bitmap bits","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateDIBitmap ( $hDC, $tBITMAPINFO, $iUsage [, $pBits = 0] )\\r```"],"_WinAPI_CreateDIBSection":["Creates a DIB that applications can write to directly","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateDIBSection ( $hDC, $tBITMAPINFO, $iUsage, ByRef $pBits [, $hSection = 0 [, $iOffset = 0]] )\\r```"],"_WinAPI_CreateEmptyIcon":["Creates a fully transparent icon with the specified width, height, and color depth","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateEmptyIcon ( $iWidth, $iHeight [, $iBitsPerPel = 32] )\\r```"],"_WinAPI_CreateIconIndirect":["Creates an icon or cursor that has the specified size, colors, and bit patterns","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateIconIndirect ( $hBitmap, $hMask [, $iXHotspot = 0 [, $iYHotspot = 0 [, $bIcon = True]]] )\\r```"],"_WinAPI_DrawBitmap":["Draws a bitmap into the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DrawBitmap ( $hDC, $iX, $iY, $hBitmap [, $iRop = 0x00CC0020] )\\r```"],"_WinAPI_ExtFloodFill":["Fills an area of the display surface with the current brush","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ExtFloodFill ( $hDC, $iX, $iY, $iRGB [, $iType = 0] )\\r```"],"_WinAPI_GetBitmapBits":["Copies the bitmap bits of a specified device-dependent bitmap into a buffer","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetBitmapBits ( $hBitmap, $iSize, $pBits )\\r```"],"_WinAPI_GetBitmapDimension":["Retrieves a dimension of the specified bitmap","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetBitmapDimension ( $hBitmap )\\r```"],"_WinAPI_GetBitmapDimensionEx":["Retrieves the dimensions of a compatible bitmap","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetBitmapDimensionEx ( $hBitmap )\\r```"],"_WinAPI_GetDIBColorTable":["Retrieves RGB color table from the DIB section bitmap","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetDIBColorTable ( $hBitmap )\\r```"],"_WinAPI_GetIconDimension":["Retrieves a dimension of the specified icon","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetIconDimension ( $hIcon )\\r```"],"_WinAPI_GetPixel":["Retrieves the color value of the pixel at the specified coordinates","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetPixel ( $hDC, $iX, $iY )\\r```"],"_WinAPI_GetStretchBltMode":["Retrieves the current stretching mode","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetStretchBltMode ( $hDC )\\r```"],"_WinAPI_GradientFill":["Fills rectangle or triangle gradient","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GradientFill ( $hDC, Const ByRef $aVertex [, $iStart = 0 [, $iEnd = -1 [, $bRotate = False]]] )\\r```"],"_WinAPI_InvertANDBitmap":["Inverts the specified AND bitmask bitmap by performing a logical NOT operation","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_InvertANDBitmap ( $hBitmap [, $bDelete = False] )\\r```"],"_WinAPI_IsAlphaBitmap":["Determines whether the specified bitmap has an alpha channel","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_IsAlphaBitmap ( $hBitmap )\\r```"],"_WinAPI_MaskBlt":["Combines the color data for the source and destination bitmaps using the specified mask and raster operation","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_MaskBlt ( $hDestDC, $iXDest, $iYDest, $iWidth, $iHeight, $hSrcDC, $iXSrc, $iYSrc, $hMask, $iXMask, $iYMask, $iRop )\\r```"],"_WinAPI_PlgBlt":["Performs a bit-block transfer of color data from the specified rectangle in the source DC to the specified parallelogram in the DC context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PlgBlt ( $hDestDC, Const ByRef $aPoint, $hSrcDC, $iXSrc, $iYSrc, $iWidth, $iHeight [, $hMask = 0 [, $iXMask = 0 [, $iYMask = 0]]] )\\r```"],"_WinAPI_RadialGradientFill":["Fills radial gradient","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_RadialGradientFill ( $hDC, $iX, $iY, $iRadius, $iRGB1, $iRGB2 [, $fAngleStart = 0 [, $fAngleEnd = 360 [, $fStep = 5]]] )\\r```"],"_WinAPI_SaveHBITMAPToFile":["Saves a specified bitmap to the specified bitmap (.bmp) file","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SaveHBITMAPToFile ( $sFilePath, $hBitmap [, $iXPelsPerMeter = Default [, $iYPelsPerMeter = Default]] )\\r```"],"_WinAPI_SaveHICONToFile":["Saves a specified single or multiple icon (HICON) to the specified icon (.ico) file","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SaveHICONToFile ( $sFilePath, Const ByRef $vIcon [, $bCompress = 0 [, $iStart = 0 [, $iEnd = -1]]] )\\r```"],"_WinAPI_SetBitmapBits":["Sets the bits of color data for a bitmap to the specified values","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetBitmapBits ( $hBitmap, $iSize, $pBits )\\r```"],"_WinAPI_SetBitmapDimensionEx":["Assigns preferred dimensions to a compatible bitmap","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetBitmapDimensionEx ( $hBitmap, $iWidth, $iHeight )\\r```"],"_WinAPI_SetDIBColorTable":["Sets RGB color table in the DIB section bitmap","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetDIBColorTable ( $hBitmap, $tColorTable, $iColorCount )\\r```"],"_WinAPI_SetDIBitsToDevice":["Sets the pixels in the specified rectangle on the device","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetDIBitsToDevice ( $hDC, $iXDest, $iYDest, $iWidth, $iHeight, $iXSrc, $iYSrc, $iStartScan, $iScanLines, $tBITMAPINFO, $iUsage, $pBits )\\r```"],"_WinAPI_SetPixel":["Sets the pixel at the specified coordinates to the specified color","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetPixel ( $hDC, $iX, $iY, $iRGB )\\r```"],"_WinAPI_SetStretchBltMode":["Sets the bitmap stretching mode in the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetStretchBltMode ( $hDC, $iMode )\\r```"],"_WinAPI_StretchBlt":["Copies a bitmap from a source rectangle into a destination rectangle, stretching or compressing the bitmap to fit the dimensions of the destination rectangle","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_StretchBlt ( $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iRop )\\r```"],"_WinAPI_StretchDIBits":["Copies the color data for a rectangle of pixels in a DIB, JPEG, or PNG image to the specified destination rectangle, stretching or compressing the rows and columns by using the specified raster operation","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_StretchDIBits ( $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $tBITMAPINFO, $iUsage, $pBits, $iRop )\\r```"],"_WinAPI_TransparentBlt":["Performs a bit-block transfer of the color data corresponding to a rectangle of pixels","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_TransparentBlt ( $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iRGB )\\r```"],"_WinAPI_CreateBrushIndirect":["Creates a logical brush that has the specified style, color, and pattern","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateBrushIndirect ( $iStyle, $iRGB [, $iHatch = 0] )\\r```"],"_WinAPI_ExtCreatePen":["Creates a logical cosmetic or geometric pen that has the specified style, width, and brush attributes","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ExtCreatePen ( $iPenStyle, $iWidth, $iBrushStyle, $iRGB [, $iHatch = 0 [, $aUserStyle = 0 [, $iStart = 0 [, $iEnd = -1]]]] )\\r```"],"_WinAPI_GetBrushOrg":["Retrieves the current brush origin for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetBrushOrg ( $hDC )\\r```"],"_WinAPI_PatBlt":["Paints the specified rectangle using the brush that is currently selected into the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PatBlt ( $hDC, $iX, $iY, $iWidth, $iHeight, $iRop )\\r```"],"_WinAPI_SetBrushOrg":["Sets the brush origin that GDI assigns to the next brush an application selects into the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetBrushOrg ( $hDC, $iX, $iY )\\r```"],"_WinAPI_SetDCBrushColor":["Sets the current device context (DC) brush color to the specified color value","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetDCBrushColor ( $hDC, $iRGB )\\r```"],"_WinAPI_SetDCPenColor":["Sets the current device context (DC) pen color to the specified color value","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetDCPenColor ( $hDC, $iRGB )\\r```"],"_WinAPI_ExcludeClipRect":["Creates a new clipping region that consists of the existing clipping region minus the specified rectangle","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ExcludeClipRect ( $hDC, $tRECT )\\r```"],"_WinAPI_ExtSelectClipRgn":["Combines the specified region with the current clipping region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ExtSelectClipRgn ( $hDC, $hRgn [, $iMode = 5] )\\r```"],"_WinAPI_GetClipBox":["Retrieves the dimensions of the bounding rectangle of the visible area","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetClipBox ( $hDC, ByRef $tRECT )\\r```"],"_WinAPI_GetClipRgn":["Retrieves a handle identifying the current application-defined clipping region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetClipRgn ( $hDC )\\r```"],"_WinAPI_IntersectClipRect":["Creates a new clipping region from the intersection of the current clipping region and the specified rectangle","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_IntersectClipRect ( $hDC, $tRECT )\\r```"],"_WinAPI_OffsetClipRgn":["Moves the clipping region of a device context by the specified offsets","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_OffsetClipRgn ( $hDC, $iXOffset, $iYOffset )\\r```"],"_WinAPI_PtVisible":["Determines whether the specified point is within the clipping region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PtVisible ( $hDC, $iX, $iY )\\r```"],"_WinAPI_RectVisible":["Determines whether any part of the specified rectangle lies within the clipping region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_RectVisible ( $hDC, $tRECT )\\r```"],"_WinAPI_SelectClipPath":["Selects the current path as a clipping region, combining the new region with any existing clipping region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SelectClipPath ( $hDC [, $iMode = 5] )\\r```"],"_WinAPI_SelectClipRgn":["Selects a region as the current clipping region for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SelectClipRgn ( $hDC, $hRgn )\\r```"],"_WinAPI_ColorAdjustLuma":["Changes the luminance of a RGB value","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ColorAdjustLuma ( $iRGB, $iPercent [, $bScale = True] )\\r```"],"_WinAPI_ColorHLSToRGB":["Converts colors from hue-luminance-saturation (HLS) to RGB format","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ColorHLSToRGB ( $iHue, $iLuminance, $iSaturation )\\r```"],"_WinAPI_ColorRGBToHLS":["Converts colors from RGB to hue-luminance-saturation (HLS) format","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ColorRGBToHLS ( $iRGB, ByRef $iHue, ByRef $iLuminance, ByRef $iSaturation )\\r```"],"_WinAPI_CreateColorAdjustment":["Creates $tagCOLORADJUSTMENT structure specifies the color adjustment","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateColorAdjustment ( [$iFlags = 0 [, $iIlluminant = 0 [, $iGammaR = 10000 [, $iGammaG = 10000 [, $iGammaB = 10000 [, $iBlack = 0 [, $iWhite = 10000 [, $iContrast = 0 [, $iBrightness = 0 [, $iColorfulness = 0 [, $iTint = 0]]]]]]]]]]] )\\r```"],"_WinAPI_GetBValue":["Retrieves an intensity value for the blue component of a 32-bit RGB value","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetBValue ( $iRGB )\\r```"],"_WinAPI_GetColorAdjustment":["Retrieves the color adjustment for the specified device context (DC)","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetColorAdjustment ( $hDC )\\r```"],"_WinAPI_GetDeviceGammaRamp":["Gets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetDeviceGammaRamp ( $hDC, ByRef $aRamp )\\r```"],"_WinAPI_GetGValue":["Retrieves an intensity value for the green component of a 32-bit RGB value","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetGValue ( $iRGB )\\r```"],"_WinAPI_GetRValue":["Retrieves an intensity value for the red component of a 32-bit RGB value","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetRValue ( $iRGB )\\r```"],"_WinAPI_GetUDFColorMode":["Retrieves the current color mode for WinAPIEx UDF library","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetUDFColorMode ( )\\r```"],"_WinAPI_InvertColor":["Inverts (negative) the specified color","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_InvertColor ( $iColor )\\r```"],"_WinAPI_RGB":["Creates a RGB color value based on red, green, and blue components","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_RGB ( $iRed, $iGreen, $iBlue )\\r```"],"_WinAPI_SetColorAdjustment":["Sets the color adjustment for a device context (DC)","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetColorAdjustment ( $hDC, $tAdjustment )\\r```"],"_WinAPI_SetDeviceGammaRamp":["Sets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetDeviceGammaRamp ( $hDC, Const ByRef $aRamp )\\r```"],"_WinAPI_SetUDFColorMode":["Sets the color mode for the WinAPIEx library","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetUDFColorMode ( $iMode )\\r```"],"_WinAPI_SwitchColor":["Converts a color from BGR to RGB and vice versa","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SwitchColor ( $iColor )\\r```"],"_WinAPI_CombineTransform":["Concatenates two world-space to page-space transformations","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CombineTransform ( $tXFORM1, $tXFORM2 )\\r```"],"_WinAPI_CreateTransform":["Creates $tagXFORM structure specifies a world-space to page-space transformation","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateTransform ( [$nM11 = 1 [, $nM12 = 0 [, $nM21 = 0 [, $nM22 = 1 [, $nDX = 0 [, $nDY = 0]]]]]] )\\r```"],"_WinAPI_DPtoLP":["Converts device coordinates into logical coordinates","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DPtoLP ( $hDC, ByRef $tPOINT [, $iCount = 1] )\\r```"],"_WinAPI_GetCurrentPosition":["Retrieves the current position for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetCurrentPosition ( $hDC )\\r```"],"_WinAPI_GetGraphicsMode":["Retrieves the current graphics mode for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetGraphicsMode ( $hDC )\\r```"],"_WinAPI_GetMapMode":["Retrieves the current mapping mode","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetMapMode ( $hDC )\\r```"],"_WinAPI_GetPosFromRect":["Interprets the coordinates of the rectangle as offset and position coordinates","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetPosFromRect ( $tRECT )\\r```"],"_WinAPI_GetWindowExt":["Retrieves the x-extent and y-extent of the window for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetWindowExt ( $hDC )\\r```"],"_WinAPI_GetWindowOrg":["Retrieves the x-coordinates and y-coordinates of the window origin for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetWindowOrg ( $hDC )\\r```"],"_WinAPI_GetWorldTransform":["Retrieves the current world-space to page-space transformation","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetWorldTransform ( $hDC )\\r```"],"_WinAPI_LPtoDP":["Converts a logical coordinates into device coordinates","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_LPtoDP ( $hDC, ByRef $tPOINT [, $iCount = 1] )\\r```"],"_WinAPI_ModifyWorldTransform":["Changes the world transformation for a device context using the specified mode","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ModifyWorldTransform ( $hDC, $tXFORM, $iMode )\\r```"],"_WinAPI_OffsetPoints":["Moves a points from the array by the specified offsets","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_OffsetPoints ( ByRef $aPoint, $iXOffset, $iYOffset [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_OffsetWindowOrg":["Modifies the window origin for a device context using the specified horizontal and vertical offsets","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_OffsetWindowOrg ( $hDC, $iXOffset, $iYOffset )\\r```"],"_WinAPI_RotatePoints":["Rotates a points from the array by the specified angle","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_RotatePoints ( ByRef $aPoint, $iXC, $iYC, $fAngle [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_ScaleWindowExt":["Modifies the window for a device context using the ratios formed by the specified multiplicands and divisors","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ScaleWindowExt ( $hDC, $iXNum, $iXDenom, $iYNum, $iYDenom )\\r```"],"_WinAPI_SetGraphicsMode":["Sets the graphics mode for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetGraphicsMode ( $hDC, $iMode )\\r```"],"_WinAPI_SetMapMode":["Sets the mapping mode of the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetMapMode ( $hDC, $iMode )\\r```"],"_WinAPI_SetWindowExt":["Sets the horizontal and vertical extents of the window for a device context by using the specified values","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetWindowExt ( $hDC, $iXExtent, $iYExtent )\\r```"],"_WinAPI_SetWindowOrg":["Specifies which window point maps to the viewport origin (0,0)","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetWindowOrg ( $hDC, $iX, $iY )\\r```"],"_WinAPI_SetWorldTransform":["Sets a two-dimensional linear transformation between world space and page space for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetWorldTransform ( $hDC, $tXFORM )\\r```"],"_WinAPI_DwmDefWindowProc":["Default window procedure for Desktop Window Manager (DWM) hit testing within the non-client area","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmDefWindowProc ( $hWnd, $iMsg, $wParam, $lParam )\\r```"],"_WinAPI_DwmEnableBlurBehindWindow":["Enables the blur effect on a specified window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmEnableBlurBehindWindow ( $hWnd [, $bEnable = True [, $bTransition = False [, $hRgn = 0]]] )\\r```"],"_WinAPI_DwmEnableComposition":["Enables or disables Desktop Window Manager (DWM) composition","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmEnableComposition ( $bEnable )\\r```"],"_WinAPI_DwmExtendFrameIntoClientArea":["Extends the window frame behind the client area","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmExtendFrameIntoClientArea ( $hWnd [, $tMARGINS = 0] )\\r```"],"_WinAPI_DwmGetColorizationColor":["Retrieves the current color used for Desktop Window Manager (DWM) glass composition","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmGetColorizationColor ( )\\r```"],"_WinAPI_DwmGetColorizationParameters":["Retrieves the colorization parameters used for Desktop Window Manager (DWM)","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmGetColorizationParameters ( )\\r```"],"_WinAPI_DwmGetWindowAttribute":["Retrieves the current value of a specified attribute applied to the window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmGetWindowAttribute ( $hWnd, $iAttribute )\\r```"],"_WinAPI_DwmInvalidateIconicBitmaps":["Indicates that all previously provided iconic bitmaps from a window, both thumbnails and peek representations, should be refreshed","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmInvalidateIconicBitmaps ( $hWnd )\\r```"],"_WinAPI_DwmIsCompositionEnabled":["Determines whether Desktop Window Manager (DWM) composition is enabled","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmIsCompositionEnabled ( )\\r```"],"_WinAPI_DwmQueryThumbnailSourceSize":["Returns the source size of the Desktop Window Manager (DWM) thumbnail","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmQueryThumbnailSourceSize ( $hThumbnail )\\r```"],"_WinAPI_DwmRegisterThumbnail":["Creates a Desktop Window Manager (DWM) thumbnail relationship between the destination and source windows","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmRegisterThumbnail ( $hDestination, $hSource )\\r```"],"_WinAPI_DwmSetColorizationParameters":["Sets the colorization parameters for Desktop Window Manager (DWM)","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmSetColorizationParameters ( $tDWMCP )\\r```"],"_WinAPI_DwmSetIconicLivePreviewBitmap":["Sets a static, iconic bitmap to display a live preview (also known as a Peek preview) of a window or tab","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmSetIconicLivePreviewBitmap ( $hWnd, $hBitmap [, $bFrame = False [, $tClient = 0]] )\\r```"],"_WinAPI_DwmSetIconicThumbnail":["Sets a static, iconic bitmap on a window or tab to use as a thumbnail representation","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmSetIconicThumbnail ( $hWnd, $hBitmap [, $bFrame = False] )\\r```"],"_WinAPI_DwmSetWindowAttribute":["Sets the value of the specified attributes for non-client rendering to apply to the window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmSetWindowAttribute ( $hWnd, $iAttribute, $iData )\\r```"],"_WinAPI_DwmUnregisterThumbnail":["Removes a Desktop Window Manager (DWM) thumbnail relationship","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmUnregisterThumbnail ( $hThumbnail )\\r```"],"_WinAPI_DwmUpdateThumbnailProperties":["Specifies Desktop Window Manager (DWM) thumbnail properties","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DwmUpdateThumbnailProperties ( $hThumbnail [, $bVisible = True [, $bClientAreaOnly = False [, $iOpacity = 255 [, $tRectDest = 0 [, $tRectSrc = 0]]]]] )\\r```"],"_WinAPI_EnumDisplaySettings":["Retrieves information about one of the graphics modes for a display device","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_EnumDisplaySettings ( $sDevice, $iMode )\\r```"],"_WinAPI_GetCurrentObject":["Retrieves a handle to an object of the specified type that has been selected into the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetCurrentObject ( $hDC, $iType )\\r```"],"_WinAPI_GetDCEx":["Retrieves a handle to a device context (DC) for the client area of a specified window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetDCEx ( $hWnd, $hRgn, $iFlags )\\r```"],"_WinAPI_GetObjectType":["Retrieves the type of the specified object","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetObjectType ( $hObject )\\r```"],"_WinAPI_PrintWindow":["Copies a visual window into the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PrintWindow ( $hWnd, $hDC [, $bClient = False] )\\r```"],"_WinAPI_RestoreDC":["Restores a device context (DC) to the specified state","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_RestoreDC ( $hDC, $iID )\\r```"],"_WinAPI_SaveDC":["Saves the current state of the specified device context (DC) by copying data describing selected objects and graphic modes to a context stack","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SaveDC ( $hDC )\\r```"],"_WinAPI_AddFontMemResourceEx":["Adds the font resource from a memory image to the system","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_AddFontMemResourceEx ( $pData, $iSize )\\r```"],"_WinAPI_AddFontResourceEx":["Adds the font resource from the specified file to the system font table","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_AddFontResourceEx ( $sFont [, $iFlag = 0 [, $bNotify = False]] )\\r```"],"_WinAPI_CreateFontEx":["Creates a logical font with the specified characteristics","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateFontEx ( $iHeight [, $iWidth = 0 [, $iEscapement = 0 [, $iOrientation = 0 [, $iWeight = 400 [, $bItalic = False [, $bUnderline = False [, $bStrikeOut = False [, $iCharSet = 1 [, $iOutPrecision = 0 [, $iClipPrecision = 0 [, $iQuality = 0 [, $iPitchAndFamily = 0 [, $sFaceName = \'\' [, $iStyle = 0]]]]]]]]]]]]]] )\\r```"],"_WinAPI_EnumFontFamilies":["Enumerates all uniquely-named fonts in the system that match the specified font characteristics","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_EnumFontFamilies ( [$hDC = 0 [, $sFaceName = \'\' [, $iCharSet = 1 [, $iFontType = 0x07 [, $sPattern = \'\' [, $bExclude = False]]]]]] )\\r```"],"_WinAPI_GetFontName":["Retrieves the unique name of the font based on its typeface name, character set, and style","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetFontName ( $sFaceName [, $iStyle = 0 [, $iCharSet = 1]] )\\r```"],"_WinAPI_GetFontResourceInfo":["Retrieves the fontname from the specified font resource file","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetFontResourceInfo ( $sFont [, $bForce = False [, $iFlag = Default]] )\\r```"],"_WinAPI_GetFontMemoryResourceInfo":["Reads out font information from a TTF loaded into the memory","```\\r#include <GDIPlus.au3>\\r_WinAPI_GetFontMemoryResourceInfo ( $pMemory [, $iFlag = 1] )\\r```"],"_WinAPI_GetGlyphOutline":["Retrieves the outline or bitmap for a character in the TrueType font","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetGlyphOutline ( $hDC, $sChar, $iFormat, ByRef $pBuffer [, $tMAT2 = 0] )\\r```"],"_WinAPI_GetOutlineTextMetrics":["Retrieves text metrics for TrueType fonts","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetOutlineTextMetrics ( $hDC )\\r```"],"_WinAPI_GetTabbedTextExtent":["Computes the width and height of a character string which may contain one or more tab characters","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetTabbedTextExtent ( $hDC, $sText [, $aTab = 0 [, $iStart = 0 [, $iEnd = -1]]] )\\r```"],"_WinAPI_GetTextAlign":["Retrieves the text-alignment setting for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetTextAlign ( $hDC )\\r```"],"_WinAPI_GetTextCharacterExtra":["Retrieves the current intercharacter spacing for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetTextCharacterExtra ( $hDC )\\r```"],"_WinAPI_GetTextColor":["Retrieves the current text color for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetTextColor ( $hDC )\\r```"],"_WinAPI_GetTextFace":["Retrieves the typeface name of the font that is selected into the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetTextFace ( $hDC )\\r```"],"_WinAPI_RemoveFontMemResourceEx":["Removes the fonts added from a memory image","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_RemoveFontMemResourceEx ( $hFont )\\r```"],"_WinAPI_RemoveFontResourceEx":["Removes the fonts in the specified file from the system font table","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_RemoveFontResourceEx ( $sFont [, $iFlag = 0 [, $bNotify = False]] )\\r```"],"_WinAPI_SetTextAlign":["Sets the text-alignment flags for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetTextAlign ( $hDC [, $iMode = 0] )\\r```"],"_WinAPI_SetTextCharacterExtra":["Sets the intercharacter spacing for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetTextCharacterExtra ( $hDC, $iCharExtra )\\r```"],"_WinAPI_SetTextJustification":["Specifies the amount of space the system should add to the break characters in a string of text","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetTextJustification ( $hDC, $iBreakExtra, $iBreakCount )\\r```"],"_WinAPI_TabbedTextOut":["Writes a character string at a specified location and expanding tabs to the specified tab-stop positions","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_TabbedTextOut ( $hDC, $iX, $iY, $sText [, $aTab = 0 [, $iStart = 0 [, $iEnd = -1 [, $iOrigin = 0]]]] )\\r```"],"_WinAPI_TextOut":["Writes a string at the specified location, using the currently selected font, background color, and text color","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_TextOut ( $hDC, $iX, $iY, $sText )\\r```"],"_WinAPI_AngleArc":["Draws a line segment and an arc","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_AngleArc ( $hDC, $iX, $iY, $iRadius, $nStartAngle, $nSweepAngle )\\r```"],"_WinAPI_Arc":["Draws an elliptical arc","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_Arc ( $hDC, $tRECT, $iXStartArc, $iYStartArc, $iXEndArc, $iYEndArc )\\r```"],"_WinAPI_ArcTo":["Draws an elliptical arc","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ArcTo ( $hDC, $tRECT, $iXRadial1, $iYRadial1, $iXRadial2, $iYRadial2 )\\r```"],"_WinAPI_GetArcDirection":["Retrieves the current arc direction for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetArcDirection ( $hDC )\\r```"],"_WinAPI_LineDDA":["Determines which pixels should be highlighted for a line","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_LineDDA ( $iX1, $iY1, $iX2, $iY2, $pLineProc [, $pData = 0] )\\r```"],"_WinAPI_MoveToEx":["Updates the current position to the specified point","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_MoveToEx ( $hDC, $iX, $iY )\\r```"],"_WinAPI_PolyBezier":["Draws one or more Bezier curves","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PolyBezier ( $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_PolyBezierTo":["Draws one or more Bezier curves","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PolyBezierTo ( $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_PolyDraw":["Draws a set of line segments and Bezier curves","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PolyDraw ( $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_SetArcDirection":["Sets the drawing arc direction","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetArcDirection ( $hDC, $iDirection )\\r```"],"_WinAPI_CloseEnhMetaFile":["Closes an enhanced-metafile device context and returns a handle that identifies an enhanced-format metafile","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CloseEnhMetaFile ( $hDC )\\r```"],"_WinAPI_CopyEnhMetaFile":["Copies the contents of an enhanced-format metafile to a specified file","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CopyEnhMetaFile ( $hEmf [, $sFilePath = \'\'] )\\r```"],"_WinAPI_CreateEnhMetaFile":["Creates a device context for an enhanced-format metafile","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateEnhMetaFile ( [$hDC = 0 [, $tRECT = 0 [, $bPixels = False [, $sFilePath = \'\' [, $sDescription = \'\']]]]] )\\r```"],"_WinAPI_DeleteEnhMetaFile":["Deletes an enhanced-format metafile or an enhanced-format metafile handle","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DeleteEnhMetaFile ( $hEmf )\\r```"],"_WinAPI_GdiComment":["Copies a comment from a buffer into a specified enhanced-format metafile","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GdiComment ( $hDC, $pBuffer, $iSize )\\r```"],"_WinAPI_GetEnhMetaFile":["Creates a handle that identifies the enhanced-format metafile stored in the specified file","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetEnhMetaFile ( $sFilePath )\\r```"],"_WinAPI_GetEnhMetaFileBits":["Retrieves the contents of the specified enhanced-format metafile","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetEnhMetaFileBits ( $hEmf, ByRef $pBuffer )\\r```"],"_WinAPI_GetEnhMetaFileDescription":["Retrieves an optional text description from an enhanced-format metafile","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetEnhMetaFileDescription ( $hEmf )\\r```"],"_WinAPI_GetEnhMetaFileDimension":["Retrieves a dimension of the specified enhanced-format metafile","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetEnhMetaFileDimension ( $hEmf )\\r```"],"_WinAPI_GetEnhMetaFileHeader":["Retrieves the record containing the header for the specified enhanced-format metafile","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetEnhMetaFileHeader ( $hEmf )\\r```"],"_WinAPI_PlayEnhMetaFile":["Displays the picture stored in the specified enhanced-format metafile","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PlayEnhMetaFile ( $hDC, $hEmf, $tRECT )\\r```"],"_WinAPI_SetEnhMetaFileBits":["Creates a memory-based enhanced-format metafile from the specified data","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetEnhMetaFileBits ( $pData, $iLength )\\r```"],"_WinAPI_EnumDisplayMonitors":["Enumerates display monitors (including invisible pseudo-monitors associated with the mirroring drivers)","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_EnumDisplayMonitors ( [$hDC = 0 [, $tRECT = 0]] )\\r```"],"_WinAPI_MonitorFromPoint":["Retrieves a handle to the display monitor that contains a specified point","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_MonitorFromPoint ( $tPOINT [, $iFlag = 1] )\\r```"],"_WinAPI_MonitorFromRect":["Retrieves a handle to the display monitor that has the largest area of intersection with a specified rectangle","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_MonitorFromRect ( $tRECT [, $iFlag = 1] )\\r```"],"_WinAPI_MonitorFromWindow":["Retrieves a handle to the display monitor that has the largest area of intersection with the specified window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_MonitorFromWindow ( $hWnd [, $iFlag = 1] )\\r```"],"_WinAPI_BeginPaint":["Prepares the specified window for painting","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_BeginPaint ( $hWnd, ByRef $tPAINTSTRUCT )\\r```"],"_WinAPI_DrawAnimatedRects":["Animates the caption of a window to indicate the opening of an icon or the minimizing or maximizing of a window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DrawAnimatedRects ( $hWnd, $tRectFrom, $tRectTo )\\r```"],"_WinAPI_DrawShadowText":["Draws formatted text in the specified rectangle with a drop shadow","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DrawShadowText ( $hDC, $sText, $iRGBText, $iRGBShadow [, $iXOffset = 0 [, $iYOffset = 0 [, $tRECT = 0 [, $iFlags = 0]]]] )\\r```"],"_WinAPI_EndPaint":["Marks the end of painting in the specified window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_EndPaint ( $hWnd, ByRef $tPAINTSTRUCT )\\r```"],"_WinAPI_GetBkColor":["Retrieves the current background color for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetBkColor ( $hDC )\\r```"],"_WinAPI_GetBoundsRect":["Obtains the current accumulated bounding rectangle for a specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetBoundsRect ( $hDC [, $iFlags = 0] )\\r```"],"_WinAPI_GetROP2":["Retrieves the foreground mix mode of the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetROP2 ( $hDC )\\r```"],"_WinAPI_GetUpdateRect":["Retrieves the coordinates of the rectangle that completely encloses the update region of the specified window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetUpdateRect ( $hWnd [, $bErase = True] )\\r```"],"_WinAPI_GetUpdateRgn":["Retrieves the update region of a window by copying it into the specified region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetUpdateRgn ( $hWnd, $hRgn [, $bErase = True] )\\r```"],"_WinAPI_GetWindowRgnBox":["Retrieves the dimensions of the tightest bounding rectangle for the window region of a window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetWindowRgnBox ( $hWnd, ByRef $tRECT )\\r```"],"_WinAPI_InvalidateRgn":["Adds a region to the specified window\'s update region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_InvalidateRgn ( $hWnd [, $hRgn = 0 [, $bErase = True]] )\\r```"],"_WinAPI_LockWindowUpdate":["Disables or enables drawing in the specified window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_LockWindowUpdate ( $hWnd )\\r```"],"_WinAPI_PaintDesktop":["Fills the clipping region in the specified device context with the desktop pattern or wallpaper","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PaintDesktop ( $hDC )\\r```"],"_WinAPI_SetBoundsRect":["Controls the accumulation of bounding rectangle information for the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetBoundsRect ( $hDC, $iFlags [, $tRECT = 0] )\\r```"],"_WinAPI_SetROP2":["Retrieves the foreground mix mode of the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetROP2 ( $hDC, $iMode )\\r```"],"_WinAPI_ValidateRect":["Removes a rectangle from the current update region of the specified window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ValidateRect ( $hWnd [, $tRECT = 0] )\\r```"],"_WinAPI_ValidateRgn":["Removes a region from the current update region of the specified window","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ValidateRgn ( $hWnd [, $hRgn = 0] )\\r```"],"_WinAPI_WindowFromDC":["Retrieves a handle to the window associated with the specified display device context (DC)","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_WindowFromDC ( $hDC )\\r```"],"_WinAPI_AbortPath":["Closes and discards any paths in the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_AbortPath ( $hDC )\\r```"],"_WinAPI_BeginPath":["Opens a path bracket in the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_BeginPath ( $hDC )\\r```"],"_WinAPI_CloseFigure":["Closes an open figure in a path","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CloseFigure ( $hDC )\\r```"],"_WinAPI_EndPath":["Closes a path bracket and selects the path defined by the bracket into the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_EndPath ( $hDC )\\r```"],"_WinAPI_FillPath":["Closes any open figures in the current path and fills the path\'s interior by using the current brush","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_FillPath ( $hDC )\\r```"],"_WinAPI_FlattenPath":["Transforms any curves in the path that is selected into the current DC, turning each curve into a sequence of lines","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_FlattenPath ( $hDC )\\r```"],"_WinAPI_PathToRegion":["Creates a region from the path that is selected into the specified device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PathToRegion ( $hDC )\\r```"],"_WinAPI_StrokeAndFillPath":["Closes any open figures in a path, strokes the outline of the path, and fills its interior","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_StrokeAndFillPath ( $hDC )\\r```"],"_WinAPI_StrokePath":["Renders the specified path by using the current pen","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_StrokePath ( $hDC )\\r```"],"_WinAPI_WidenPath":["Redefines the current path as the area that would be painted if the path were stroked","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_WidenPath ( $hDC )\\r```"],"_WinAPI_CopyRect":["Copies the coordinates of one rectangle to another","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CopyRect ( $tRECT )\\r```"],"_WinAPI_DrawFocusRect":["Draws a rectangle in the style used to indicate that the rectangle has the focus","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_DrawFocusRect ( $hDC, $tRECT )\\r```"],"_WinAPI_EqualRect":["Determines whether the two specified rectangles are equal","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_EqualRect ( $tRECT1, $tRECT2 )\\r```"],"_WinAPI_InflateRect":["Increases or decreases the width and height of the specified rectangle","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_InflateRect ( ByRef $tRECT, $iDX, $iDY )\\r```"],"_WinAPI_IntersectRect":["Creates the intersection of two rectangles","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_IntersectRect ( $tRECT1, $tRECT2 )\\r```"],"_WinAPI_IsRectEmpty":["Determines whether the specified rectangle is empty","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_IsRectEmpty ( $tRECT )\\r```"],"_WinAPI_OffsetRect":["Moves the specified rectangle by the specified offsets","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_OffsetRect ( ByRef $tRECT, $iDX, $iDY )\\r```"],"_WinAPI_PtInRectEx":["Determines whether the specified point lies within the specified rectangle","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PtInRectEx ( $iX, $iY, $iLeft, $iTop, $iRight, $iBottom )\\r```"],"_WinAPI_SubtractRect":["Determines the coordinates of a rectangle formed by subtracting one rectangle from another","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SubtractRect ( $tRECT1, $tRECT2 )\\r```"],"_WinAPI_UnionRect":["Creates the union of two rectangles","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_UnionRect ( $tRECT1, $tRECT2 )\\r```"],"_WinAPI_CreateEllipticRgn":["Creates an elliptical region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateEllipticRgn ( $tRECT )\\r```"],"_WinAPI_CreateNullRgn":["Creates an empty region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateNullRgn ( )\\r```"],"_WinAPI_CreatePolygonRgn":["Creates a polygonal region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreatePolygonRgn ( Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1 [, $iMode = 1]]] )\\r```"],"_WinAPI_CreateRectRgnIndirect":["Creates a rectangular region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_CreateRectRgnIndirect ( $tRECT )\\r```"],"_WinAPI_EqualRgn":["Checks the two specified regions to determine whether they are identical","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_EqualRgn ( $hRgn1, $hRgn2 )\\r```"],"_WinAPI_ExtCreateRegion":["Creates a region from the specified region and transformation data","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_ExtCreateRegion ( $tRGNDATA [, $tXFORM = 0] )\\r```"],"_WinAPI_FillRgn":["Fills a region by using the specified brush","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_FillRgn ( $hDC, $hRgn, $hBrush )\\r```"],"_WinAPI_FrameRgn":["Draws a border around the specified region by using the specified brush","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_FrameRgn ( $hDC, $hRgn, $hBrush, $iWidth, $iHeight )\\r```"],"_WinAPI_GetPolyFillMode":["Retrieves the current polygon fill mode","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetPolyFillMode ( $hDC )\\r```"],"_WinAPI_GetRegionData":["Fills the specified buffer with data describing a region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetRegionData ( $hRgn, ByRef $tRGNDATA )\\r```"],"_WinAPI_GetRgnBox":["Retrieves the bounding rectangle of the specified region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_GetRgnBox ( $hRgn, ByRef $tRECT )\\r```"],"_WinAPI_InvertRgn":["Inverts the colors in the specified region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_InvertRgn ( $hDC, $hRgn )\\r```"],"_WinAPI_OffsetRgn":["Moves a region by the specified offsets","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_OffsetRgn ( $hRgn, $iXOffset, $iYOffset )\\r```"],"_WinAPI_PaintRgn":["Paints the specified region by using the brush currently selected into the device context","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PaintRgn ( $hDC, $hRgn )\\r```"],"_WinAPI_PtInRegion":["Determines whether the specified point is inside the specified region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_PtInRegion ( $hRgn, $iX, $iY )\\r```"],"_WinAPI_RectInRegion":["Determines whether any part of the specified rectangle is within the boundaries of a region","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_RectInRegion ( $hRgn, $tRECT )\\r```"],"_WinAPI_SetPolyFillMode":["Sets the polygon fill mode for functions that fill polygons","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetPolyFillMode ( $hDC [, $iMode = 1] )\\r```"],"_WinAPI_SetRectRgn":["Converts a region into a rectangular region with the specified coordinates","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_SetRectRgn ( $hRgn, $tRECT )\\r```"],"_WinAPI_Ellipse":["Draws an ellipse","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_Ellipse ( $hDC, $tRECT )\\r```"],"_WinAPI_InvertRect":["Inverts a rectangle in a window by performing a logical NOT operation on the color values for each pixel","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_InvertRect ( $hDC, $tRECT )\\r```"],"_WinAPI_Polygon":["Draws a polygon consisting of two or more vertices connected by straight lines","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_Polygon ( $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_Rectangle":["Draws a rectangle","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_Rectangle ( $hDC, $tRECT )\\r```"],"_WinAPI_RoundRect":["Draws a rectangle with rounded corners","```\\r#include <WinAPIGdi.au3>\\r_WinAPI_RoundRect ( $hDC, $tRECT, $iWidth, $iHeight )\\r```"]}'),me=JSON.parse('{"_WinAPI_CompareString":["Compares two character strings for a specified locale","```\\r#include <WinAPILocale.au3>\\r_WinAPI_CompareString ( $iLCID, $sString1, $sString2 [, $iFlags = 0] )\\r```"],"_WinAPI_CreateNumberFormatInfo":["Creates a $tagNUMBERFMT structure with the specified number formatting information","```\\r#include <WinAPILocale.au3>\\r_WinAPI_CreateNumberFormatInfo ( $iNumDigits, $iLeadingZero, $iGrouping, $sDecimalSep, $sThousandSep, $iNegativeOrder )\\r```"],"_WinAPI_EnumSystemGeoID":["Enumerates the geographical location identifiers (GEOID) that are available on the operating system","```\\r#include <WinAPILocale.au3>\\r_WinAPI_EnumSystemGeoID ( )\\r```"],"_WinAPI_EnumSystemLocales":["Enumerates the locales that are either installed on or supported by an operating system","```\\r#include <WinAPILocale.au3>\\r_WinAPI_EnumSystemLocales ( $iFlag )\\r```"],"_WinAPI_EnumUILanguages":["Enumerates the user interface languages that are available on the operating system","```\\r#include <WinAPILocale.au3>\\r_WinAPI_EnumUILanguages ( [$iFlag = 0] )\\r```"],"_WinAPI_GetDateFormat":["Formats a date as a date string for a locale specified by the locale identifier","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetDateFormat ( [$iLCID = 0 [, $tSYSTEMTIME = 0 [, $iFlags = 0 [, $sFormat = \'\']]]] )\\r```"],"_WinAPI_GetDurationFormat":["Formats a duration of time as a time string for a locale specified by identifier","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetDurationFormat ( $iLCID, $iDuration [, $sFormat = \'\'] )\\r```"],"_WinAPI_GetGeoInfo":["Retrieves information about a specified geographical location","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetGeoInfo ( $iGEOID, $iType [, $iLanguage = 0] )\\r```"],"_WinAPI_GetLocaleInfo":["Retrieves information about a locale specified by identifier","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetLocaleInfo ( $iLCID, $iType )\\r```"],"_WinAPI_GetNumberFormat":["Formats a number string as a number string customized for a locale specified by identifier","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetNumberFormat ( $iLCID, $sNumber [, $tNUMBERFMT = 0] )\\r```"],"_WinAPI_GetSystemDefaultLangID":["Returns the language identifier for the system locale","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetSystemDefaultLangID ( )\\r```"],"_WinAPI_GetSystemDefaultLCID":["Returns the locale identifier (LCID) for the system locale","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetSystemDefaultLCID ( )\\r```"],"_WinAPI_GetSystemDefaultUILanguage":["Retrieves the language identifier for the system default UI language of the operating system","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetSystemDefaultUILanguage ( )\\r```"],"_WinAPI_GetThreadLocale":["Retrieves the locale identifier of the current locale for the calling thread","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetThreadLocale ( )\\r```"],"_WinAPI_GetThreadUILanguage":["Retrieves the language identifier of the first user interface language for the current thread","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetThreadUILanguage ( )\\r```"],"_WinAPI_GetTimeFormat":["Formats time as a time string for a locale specified by identifier","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetTimeFormat ( [$iLCID = 0 [, $tSYSTEMTIME = 0 [, $iFlags = 0 [, $sFormat = \'\']]]] )\\r```"],"_WinAPI_GetUserDefaultLangID":["Returns the language identifier for the current user locale","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetUserDefaultLangID ( )\\r```"],"_WinAPI_GetUserDefaultLCID":["Returns the locale identifier (LCID) for the user default locale","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetUserDefaultLCID ( )\\r```"],"_WinAPI_GetUserDefaultUILanguage":["Returns the language identifier for the user UI language for the current user","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetUserDefaultUILanguage ( )\\r```"],"_WinAPI_GetUserGeoID":["Retrieves information about the geographical location of the user","```\\r#include <WinAPILocale.au3>\\r_WinAPI_GetUserGeoID ( )\\r```"],"_WinAPI_IsValidLocale":["Determines if the specified locale is installed or supported on the operating system","```\\r#include <WinAPILocale.au3>\\r_WinAPI_IsValidLocale ( $iLCID [, $iFlag = 0] )\\r```"],"_WinAPI_SetLocaleInfo":["Sets an item of information in the user override portion of the current locale","```\\r#include <WinAPILocale.au3>\\r_WinAPI_SetLocaleInfo ( $iLCID, $iType, $sData )\\r```"],"_WinAPI_SetThreadLocale":["Sets the current locale of the calling thread","```\\r#include <WinAPILocale.au3>\\r_WinAPI_SetThreadLocale ( $iLCID )\\r```"],"_WinAPI_SetThreadUILanguage":["Sets the user interface language for the current thread","```\\r#include <WinAPILocale.au3>\\r_WinAPI_SetThreadUILanguage ( $iLanguage )\\r```"],"_WinAPI_SetUserGeoID":["Sets the geographical location identifier for the user","```\\r#include <WinAPILocale.au3>\\r_WinAPI_SetUserGeoID ( $iGEOID )\\r```"]}'),pe=JSON.parse('{"_WinAPI_GetExtended":["Retrieves the last extended function return value","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_GetExtended ( )\\r```"],"_WinAPI_PlaySound":["Plays a sound specified by the given file name, resource, or system event","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_PlaySound ( $sSound [, $iFlags = $SND_SYSTEM_NOSTOP [, $hInstance = 0]] )\\r```"],"_WinAPI_CharToOem":["Converts a string into the OEM-defined character set","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_CharToOem ( $sStr )\\r```"],"_WinAPI_DWordToFloat":["Converts a value of type DWORD to a value of type FLOAT","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_DWordToFloat ( $iValue )\\r```"],"_WinAPI_DWordToInt":["Converts a value of type DWORD to a value of type INT","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_DWordToInt ( $iValue )\\r```"],"_WinAPI_FloatToDWord":["Converts a value of type FLOAT to a value of type DWORD","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_FloatToDWord ( $iValue )\\r```"],"_WinAPI_GetString":["Returns a string located at the specified memory address","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_GetString ( $pString [, $bUnicode = True] )\\r```"],"_WinAPI_HashData":["Hashes a memory block","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_HashData ( $pMemory, $iSize [, $iLength = 32] )\\r```"],"_WinAPI_HashString":["Hashes a string","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_HashString ( $sString [, $bCaseSensitive = True [, $iLength = 32]] )\\r```"],"_WinAPI_HiByte":["Returns the high BYTE of a 16-bit (2 bytes) value","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_HiByte ( $iValue )\\r```"],"_WinAPI_HiDWord":["Returns the high DWORD of a 64-bit (8 bytes) value","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_HiDWord ( $iValue )\\r```"],"_WinAPI_IntToDWord":["Converts a value of type INT to a value of type DWORD","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_IntToDWord ( $iValue )\\r```"],"_WinAPI_LoByte":["Returns the low BYTE of a 16-bit (2 bytes) value","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_LoByte ( $iValue )\\r```"],"_WinAPI_LoDWord":["Returns the low DWORD of a 64-bit (8 bytes) value","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_LoDWord ( $iValue )\\r```"],"_WinAPI_LongMid":["Extracts a number of bits from a DWORD (32-bit) value","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_LongMid ( $iValue, $iStart, $iCount )\\r```"],"_WinAPI_MakeWord":["Returns a WORD (16-bit) value from two BYTE (8-bit) values","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_MakeWord ( $iLo, $iHi )\\r```"],"_WinAPI_OemToChar":["Converts a string from the OEM-defined character set into either an ANSI string","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_OemToChar ( $sStr )\\r```"],"_WinAPI_ShortToWord":["Converts a value of type SHORT to a value of type WORD","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_ShortToWord ( $iValue )\\r```"],"_WinAPI_StrFormatByteSize":["Converts a numeric value into a string that represents the number expressed as a size value in bytes, kilobytes, megabytes, or gigabytes","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_StrFormatByteSize ( $iSize )\\r```"],"_WinAPI_StrFormatByteSizeEx":["Converts a numeric value into a string that represents the number expressed as separated groups of digits to the left of the decimal","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_StrFormatByteSizeEx ( $iSize )\\r```"],"_WinAPI_StrFormatKBSize":["Converts a numeric value into a string that represents the number expressed as a size value in kilobytes","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_StrFormatKBSize ( $iSize )\\r```"],"_WinAPI_StrFromTimeInterval":["Converts a time interval to a string","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_StrFromTimeInterval ( $iTime [, $iDigits = 7] )\\r```"],"_WinAPI_StrLen":["Returns the length of the specified string","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_StrLen ( $pString [, $bUnicode = True] )\\r```"],"_WinAPI_SwapDWord":["Converts a ULONG from little-endian to big-endian, and vice versa","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_SwapDWord ( $iValue )\\r```"],"_WinAPI_SwapQWord":["Converts a ULONGLONG from little-endian to big-endian, and vice versa","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_SwapQWord ( $iValue )\\r```"],"_WinAPI_SwapWord":["Converts a USHORT from little-endian to big-endian, and vice versa","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_SwapWord ( $iValue )\\r```"],"_WinAPI_WordToShort":["Converts a value of type WORD to a value of type SHORT","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_WordToShort ( $iValue )\\r```"],"_WinAPI_ArrayToStruct":["Converts an array of strings to the structure","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_ArrayToStruct ( Const ByRef $aData [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_CopyStruct":["Creates a duplicate of a specified structure","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_CopyStruct ( $tStruct [, $sStruct = \'\'] )\\r```"],"_WinAPI_CreateMargins":["Creates $tagMARGINS structure with specified left, right, top, and bottom retaining borders","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_CreateMargins ( $iLeftWidth, $iRightWidth, $iTopHeight, $iBottomHeight )\\r```"],"_WinAPI_CreatePoint":["Creates $tagPOINT structure with the x- and y-coordinates of the specified point","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_CreatePoint ( $iX, $iY )\\r```"],"_WinAPI_CreateRect":["Creates $tagRECT structure with the coordinates of the specified rectangle","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_CreateRect ( $iLeft, $iTop, $iRight, $iBottom )\\r```"],"_WinAPI_CreateRectEx":["Creates $tagRECT structure with the coordinates of the specified rectangle","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_CreateRectEx ( $iX, $iY, $iWidth, $iHeight )\\r```"],"_WinAPI_CreateSize":["Creates $tagSIZE structure with the width and height of the specified rectangle","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_CreateSize ( $iWidth, $iHeight )\\r```"],"_WinAPI_StructToArray":["Converts the structure to the array of strings","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_StructToArray ( $tStruct [, $iItems = 0] )\\r```"],"_WinAPI_UnionStruct":["Creates the structure of two structures","```\\r#include <WinAPIMisc.au3>\\r_WinAPI_UnionStruct ( $tStruct1, $tStruct2 [, $sStruct = \'\'] )\\r```"]}'),be=JSON.parse('{"_WinAPI_AdjustTokenPrivileges":["Enables or disables privileges in the specified access token","```\\r#include <WinAPIProc.au3>\\r_WinAPI_AdjustTokenPrivileges ( $hToken, $aPrivileges, $iAttributes, ByRef $aAdjust )\\r```"],"_WinAPI_AssignProcessToJobObject":["Assigns a process to an existing job object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_AssignProcessToJobObject ( $hJob, $hProcess )\\r```"],"_WinAPI_CreateJobObject":["Creates or opens a job object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_CreateJobObject ( [$sName = \'\' [, $tSecurity = 0]] )\\r```"],"_WinAPI_CreateProcessWithToken":["Creates a new process and its primary thread in the security context of the specified token","```\\r#include <WinAPIProc.au3>\\r_WinAPI_CreateProcessWithToken ( $sApp, $sCmd, $iFlags, $tStartupInfo, $tProcessInfo, $hToken [, $iLogon = 0 [, $pEnvironment = 0 [, $sDir = \'\']]] )\\r```"],"_WinAPI_DuplicateTokenEx":["Creates a new primary or impersonation access token that duplicates an existing token","```\\r#include <WinAPIProc.au3>\\r_WinAPI_DuplicateTokenEx ( $hToken, $iAccess, $iLevel [, $iType = 1 [, $tSecurity = 0]] )\\r```"],"_WinAPI_EmptyWorkingSet":["Removes as many pages as possible from the working set of the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_EmptyWorkingSet ( [$iPID = 0] )\\r```"],"_WinAPI_EnumChildProcess":["Enumerates a child processes that belong to the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_EnumChildProcess ( [$iPID = 0] )\\r```"],"_WinAPI_EnumDeviceDrivers":["Retrieves the load address for each device driver in the system","```\\r#include <WinAPIProc.au3>\\r_WinAPI_EnumDeviceDrivers ( )\\r```"],"_WinAPI_EnumProcessHandles":["Enumerates a handles that belong to the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_EnumProcessHandles ( [$iPID = 0 [, $iType = 0]] )\\r```"],"_WinAPI_EnumProcessModules":["Retrieves a handle and name for each module in the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_EnumProcessModules ( [$iPID = 0 [, $iFlag = 0]] )\\r```"],"_WinAPI_EnumProcessThreads":["Enumerates a threads that belong to the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_EnumProcessThreads ( [$iPID = 0] )\\r```"],"_WinAPI_EnumProcessWindows":["Enumerates a windows that belong to the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_EnumProcessWindows ( [$iPID = 0 [, $bVisible = True]] )\\r```"],"_WinAPI_GetCurrentProcessExplicitAppUserModelID":["Retrieves the application-defined, explicit Application User Model ID for the current process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetCurrentProcessExplicitAppUserModelID ( )\\r```"],"_WinAPI_GetDeviceDriverBaseName":["Retrieves the base name of the specified device driver","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetDeviceDriverBaseName ( $pDriver )\\r```"],"_WinAPI_GetDeviceDriverFileName":["Retrieves the path available for the specified device driver","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetDeviceDriverFileName ( $pDriver )\\r```"],"_WinAPI_GetExitCodeProcess":["Retrieves the termination status of the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetExitCodeProcess ( $hProcess )\\r```"],"_WinAPI_GetModuleFileNameEx":["Retrieves the fully-qualified path for the file containing the specified module","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetModuleFileNameEx ( $hProcess [, $hModule = 0] )\\r```"],"_WinAPI_GetModuleInformation":["Retrieves information about the specified module","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetModuleInformation ( $hProcess [, $hModule = 0] )\\r```"],"_WinAPI_GetParentProcess":["Retrieves the PID of the parent process for the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetParentProcess ( [$iPID = 0] )\\r```"],"_WinAPI_GetPriorityClass":["Retrieves the priority class for the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetPriorityClass ( [$iPID = 0] )\\r```"],"_WinAPI_GetProcessCommandLine":["Retrieves the command-line string for the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessCommandLine ( [$iPID = 0] )\\r```"],"_WinAPI_GetProcessFileName":["Retrieves the fully-qualified path of the executable file for the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessFileName ( [$iPID = 0] )\\r```"],"_WinAPI_GetProcessHandleCount":["Retrieves the number of open handles that belong to the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessHandleCount ( [$iPID = 0] )\\r```"],"_WinAPI_GetProcessID":["Retrieves the process identifier of the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessID ( $hProcess )\\r```"],"_WinAPI_GetProcessIoCounters":["Retrieves accounting information for all I/O operations performed by the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessIoCounters ( [$iPID = 0] )\\r```"],"_WinAPI_GetProcessMemoryInfo":["Retrieves information about the memory usage of the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessMemoryInfo ( [$iPID = 0] )\\r```"],"_WinAPI_GetProcessName":["Retrieves the name for the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessName ( [$iPID = 0] )\\r```"],"_WinAPI_GetProcessTimes":["Retrieves timing information for the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessTimes ( [$iPID = 0] )\\r```"],"_WinAPI_GetProcessUser":["Retrieves the user and domain name for the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessUser ( [$iPID = 0] )\\r```"],"_WinAPI_GetProcessWorkingDirectory":["Retrieves the current working directory for the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetProcessWorkingDirectory ( [$iPID = 0] )\\r```"],"_WinAPI_GetThreadDesktop":["Retrieves a handle to the desktop assigned to the specified thread","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetThreadDesktop ( $iThreadId )\\r```"],"_WinAPI_GetThreadErrorMode":["Retrieves the error mode for the calling thread","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetThreadErrorMode ( )\\r```"],"_WinAPI_GetWindowFileName":["Retrieves the fully-qualified path of the module associated with the specified window handle","```\\r#include <WinAPIProc.au3>\\r_WinAPI_GetWindowFileName ( $hWnd )\\r```"],"_WinAPI_IsElevated":["Determines whether the current process is elevated","```\\r#include <WinAPIProc.au3>\\r_WinAPI_IsElevated ( )\\r```"],"_WinAPI_IsProcessInJob":["Determines whether the process is running in the specified job","```\\r#include <WinAPIProc.au3>\\r_WinAPI_IsProcessInJob ( $hProcess [, $hJob = 0] )\\r```"],"_WinAPI_IsWow64Process":["Determines whether the specified process is running under WOW64","```\\r#include <WinAPIProc.au3>\\r_WinAPI_IsWow64Process ( [$iPID = 0] )\\r```"],"_WinAPI_OpenJobObject":["Opens an existing job object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_OpenJobObject ( $sName [, $iAccess = $JOB_OBJECT_ALL_ACCESS [, $bInherit = False]] )\\r```"],"_WinAPI_OpenProcessToken":["Opens the access token associated with a process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_OpenProcessToken ( $iAccess [, $hProcess = 0] )\\r```"],"_WinAPI_QueryInformationJobObject":["Retrieves limit and job state information from the job object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_QueryInformationJobObject ( $hJob, $iJobObjectInfoClass, ByRef $tJobObjectInfo )\\r```"],"_WinAPI_SetInformationJobObject":["Sets limits for a job object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_SetInformationJobObject ( $hJob, $iJobObjectInfoClass, $tJobObjectInfo )\\r```"],"_WinAPI_SetPriorityClass":["Sets the priority class for the specified process","```\\r#include <WinAPIProc.au3>\\r_WinAPI_SetPriorityClass ( $iPriority [, $iPID = 0] )\\r```"],"_WinAPI_SetThreadDesktop":["Assigns the specified desktop to the calling thread","```\\r#include <WinAPIProc.au3>\\r_WinAPI_SetThreadDesktop ( $hDesktop )\\r```"],"_WinAPI_SetThreadErrorMode":["Controls whether the system will handle the specified types of serious errors or whether the calling thread will handle them","```\\r#include <WinAPIProc.au3>\\r_WinAPI_SetThreadErrorMode ( $iMode )\\r```"],"_WinAPI_SetThreadExecutionState":["Prevents the system from entering sleep or turning off the display while the current application is running","```\\r#include <WinAPIProc.au3>\\r_WinAPI_SetThreadExecutionState ( $iFlags )\\r```"],"_WinAPI_TerminateJobObject":["Terminates all processes currently associated with the job","```\\r#include <WinAPIProc.au3>\\r_WinAPI_TerminateJobObject ( $hJob [, $iExitCode = 0] )\\r```"],"_WinAPI_TerminateProcess":["Terminates the specified process and all of its threads","```\\r#include <WinAPIProc.au3>\\r_WinAPI_TerminateProcess ( $hProcess [, $iExitCode = 0] )\\r```"],"_WinAPI_UserHandleGrantAccess":["Grants or denies access to a handle to a User object to a job that has a user-interface restriction","```\\r#include <WinAPIProc.au3>\\r_WinAPI_UserHandleGrantAccess ( $hObject, $hJob, $bGrant )\\r```"],"_WinAPI_CreateMutex":["Creates or opens a named or unnamed mutex object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_CreateMutex ( $sMutex [, $bInitial = True [, $tSecurity = 0]] )\\r```"],"_WinAPI_CreateSemaphore":["Creates or opens a named or unnamed semaphore object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_CreateSemaphore ( $sSemaphore, $iInitial, $iMaximum [, $tSecurity = 0] )\\r```"],"_WinAPI_OpenMutex":["Opens an existing named mutex object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_OpenMutex ( $sMutex [, $iAccess = $MUTEX_ALL_ACCESS [, $bInherit = False]] )\\r```"],"_WinAPI_OpenSemaphore":["Opens an existing named semaphore object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_OpenSemaphore ( $sSemaphore [, $iAccess = 0x001F0003 [, $bInherit = False]] )\\r```"],"_WinAPI_ReleaseMutex":["Releases ownership of the specified mutex object","```\\r#include <WinAPIProc.au3>\\r_WinAPI_ReleaseMutex ( $hMutex )\\r```"],"_WinAPI_ReleaseSemaphore":["Increases the count of the specified semaphore object by a specified amount","```\\r#include <WinAPIProc.au3>\\r_WinAPI_ReleaseSemaphore ( $hSemaphore [, $iIncrease = 1] )\\r```"],"_WinAPI_ResetEvent":["Sets the specified event object to the nonsignaled state","```\\r#include <WinAPIProc.au3>\\r_WinAPI_ResetEvent ( $hEvent )\\r```"]}'),_e=JSON.parse('{"_WinAPI_AddMRUString":["Adds a string to the top of the most recently used (MRU) list","```\\r#include <WinAPIReg.au3>\\r_WinAPI_AddMRUString ( $hMRU, $sStr )\\r```"],"_WinAPI_AssocGetPerceivedType":["Retrieves a file\'s perceived type based on its extension","```\\r#include <WinAPIReg.au3>\\r_WinAPI_AssocGetPerceivedType ( $sExt )\\r```"],"_WinAPI_AssocQueryString":["Searches for and retrieves a file or protocol association-related string from the registry","```\\r#include <WinAPIReg.au3>\\r_WinAPI_AssocQueryString ( $sAssoc, $iType [, $iFlags = 0 [, $sExtra = \'\']] )\\r```"],"_WinAPI_CreateMRUList":["Creates a new most recently used (MRU) list","```\\r#include <WinAPIReg.au3>\\r_WinAPI_CreateMRUList ( $hKey, $sSubKey [, $iMax = 26] )\\r```"],"_WinAPI_DllInstall":["Registers OLE controls such as DLL or ActiveX Controls (OCX) files","```\\r#include <WinAPIReg.au3>\\r_WinAPI_DllInstall ( $sFilePath )\\r```"],"_WinAPI_DllUninstall":["Unregisters OLE controls such as DLL or ActiveX Controls (OCX) files","```\\r#include <WinAPIReg.au3>\\r_WinAPI_DllUninstall ( $sFilePath )\\r```"],"_WinAPI_EnumMRUList":["Enumerates the contents of the most recently used (MRU) list","```\\r#include <WinAPIReg.au3>\\r_WinAPI_EnumMRUList ( $hMRU, $iItem )\\r```"],"_WinAPI_FreeMRUList":["Frees the handle associated with the most recently used (MRU) list and writes cached data to the registry","```\\r#include <WinAPIReg.au3>\\r_WinAPI_FreeMRUList ( $hMRU )\\r```"],"_WinAPI_GetRegKeyNameByHandle":["Retrieves a name of the specified registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_GetRegKeyNameByHandle ( $hKey )\\r```"],"_WinAPI_RegCloseKey":["Closes a handle to the specified registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegCloseKey ( $hKey [, $bFlush = False] )\\r```"],"_WinAPI_RegConnectRegistry":["Establishes a connection to a predefined registry key on another computer","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegConnectRegistry ( $sComputer, $hKey )\\r```"],"_WinAPI_RegCopyTree":["Recursively copies the subkeys and values of the source subkey to the destination key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegCopyTree ( $hSrcKey, $sSrcSubKey, $hDestKey )\\r```"],"_WinAPI_RegCopyTreeEx":["Copies the specified registry key, along with its values and subkeys, to the specified destination key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegCopyTreeEx ( $hSrcKey, $sSrcSubKey, $hDestKey )\\r```"],"_WinAPI_RegCreateKey":["Creates the specified registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegCreateKey ( $hKey [, $sSubKey = \'\' [, $iAccess = $KEY_ALL_ACCESS [, $iOptions = 0 [, $tSecurity = 0]]]] )\\r```"],"_WinAPI_RegDeleteEmptyKey":["Deletes an empty key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegDeleteEmptyKey ( $hKey [, $sSubKey = \'\'] )\\r```"],"_WinAPI_RegDeleteKey":["Deletes a subkey and its values","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegDeleteKey ( $hKey [, $sSubKey = \'\'] )\\r```"],"_WinAPI_RegDeleteKeyValue":["Removes the specified value from the specified registry key and subkey","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegDeleteKeyValue ( $hKey, $sSubKey, $sValueName )\\r```"],"_WinAPI_RegDeleteTree":["Deletes a subkey and all its descendants","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegDeleteTree ( $hKey [, $sSubKey = \'\'] )\\r```"],"_WinAPI_RegDeleteTreeEx":["Deletes the subkeys and values of the specified key recursively","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegDeleteTreeEx ( $hKey [, $sSubKey = 0] )\\r```"],"_WinAPI_RegDeleteValue":["Removes a named value from the specified registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegDeleteValue ( $hKey, $sValueName )\\r```"],"_WinAPI_RegDisableReflectionKey":["Disables registry reflection for the specified key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegDisableReflectionKey ( $hKey )\\r```"],"_WinAPI_RegDuplicateHKey":["Duplicates a registry key\'s handle","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegDuplicateHKey ( $hKey )\\r```"],"_WinAPI_RegEnableReflectionKey":["Restores registry reflection for the specified disabled key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegEnableReflectionKey ( $hKey )\\r```"],"_WinAPI_RegEnumKey":["Enumerates the subkeys of the specified open registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegEnumKey ( $hKey, $iIndex )\\r```"],"_WinAPI_RegEnumValue":["Enumerates the values for the specified open registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegEnumValue ( $hKey, $iIndex )\\r```"],"_WinAPI_RegFlushKey":["Writes all the attributes of the specified open registry key into the registry","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegFlushKey ( $hKey )\\r```"],"_WinAPI_RegLoadMUIString":["Loads the specified string from the specified key and subkey","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegLoadMUIString ( $hKey, $sValueName [, $sDirectory = \'\'] )\\r```"],"_WinAPI_RegNotifyChangeKeyValue":["Notifies the caller about changes to the attributes or contents of a specified registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegNotifyChangeKeyValue ( $hKey, $iFilter [, $bSubtree = False [, $bAsync = False [, $hEvent = 0]]] )\\r```"],"_WinAPI_RegOpenKey":["Opens the specified registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegOpenKey ( $hKey [, $sSubKey = \'\' [, $iAccess = 0x000F003F]] )\\r```"],"_WinAPI_RegQueryInfoKey":["Retrieves information about the specified registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegQueryInfoKey ( $hKey )\\r```"],"_WinAPI_RegQueryLastWriteTime":["Retrieves information about the last write time to the specified registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegQueryLastWriteTime ( $hKey )\\r```"],"_WinAPI_RegQueryMultipleValues":["Retrieves the type and data for a list of value names associated with an open registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegQueryMultipleValues ( $hKey, ByRef $aValent, ByRef $pBuffer [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_RegQueryReflectionKey":["Determines whether reflection has been disabled or enabled for the specified key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegQueryReflectionKey ( $hKey )\\r```"],"_WinAPI_RegQueryValue":["Retrieves the type and data for the specified value name associated with an open registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegQueryValue ( $hKey, $sValueName, ByRef $tValueData )\\r```"],"_WinAPI_RegRestoreKey":["Reads the registry information in a specified file and copies it over the specified key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegRestoreKey ( $hKey, $sFilePath )\\r```"],"_WinAPI_RegSaveKey":["Saves the specified key and all of its subkeys and values to a new file, in the standard format","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegSaveKey ( $hKey, $sFilePath [, $bReplace = False [, $tSecurity = 0]] )\\r```"],"_WinAPI_RegSetValue":["Sets the data and type of a specified value under a registry key","```\\r#include <WinAPIReg.au3>\\r_WinAPI_RegSetValue ( $hKey, $sValueName, $iType, $tValueData, $iBytes )\\r```"],"_WinAPI_SfcIsKeyProtected":["Determines whether the specified registry key is protected","```\\r#include <WinAPIReg.au3>\\r_WinAPI_SfcIsKeyProtected ( $hKey [, $sSubKey = Default [, $iFlag = 0]] )\\r```"]}'),fe=JSON.parse('{"_WinAPI_CreateCaret":["Creates a new shape for the system caret and assigns ownership of the caret to the specified window","```\\r#include <WinAPIRes.au3>\\r_WinAPI_CreateCaret ( $hWnd, $hBitmap [, $iWidth = 0 [, $iHeight = 0]] )\\r```"],"_WinAPI_DestroyCaret":["Destroys the caret\'s current shape, frees the caret from the window, and removes the caret from the screen","```\\r#include <WinAPIRes.au3>\\r_WinAPI_DestroyCaret ( )\\r```"],"_WinAPI_GetCaretBlinkTime":["Returns the time required to invert the caret\'s pixels","```\\r#include <WinAPIRes.au3>\\r_WinAPI_GetCaretBlinkTime ( )\\r```"],"_WinAPI_GetCaretPos":["Retrieves the caret\'s position","```\\r#include <WinAPIRes.au3>\\r_WinAPI_GetCaretPos ( )\\r```"],"_WinAPI_HideCaret":["Removes the caret from the screen","```\\r#include <WinAPIRes.au3>\\r_WinAPI_HideCaret ( $hWnd )\\r```"],"_WinAPI_SetCaretBlinkTime":["Sets the caret blink time","```\\r#include <WinAPIRes.au3>\\r_WinAPI_SetCaretBlinkTime ( $iDuration )\\r```"],"_WinAPI_SetCaretPos":["Moves the caret to the specified coordinates","```\\r#include <WinAPIRes.au3>\\r_WinAPI_SetCaretPos ( $iX, $iY )\\r```"],"_WinAPI_ShowCaret":["Makes the caret visible on the screen at the caret\'s current position","```\\r#include <WinAPIRes.au3>\\r_WinAPI_ShowCaret ( $hWnd )\\r```"],"_WinAPI_ClipCursor":["Confines the cursor to a rectangular area on the screen","```\\r#include <WinAPIRes.au3>\\r_WinAPI_ClipCursor ( $tRECT )\\r```"],"_WinAPI_CopyCursor":["Creates a duplicate of a specified cursor","```\\r#include <WinAPIRes.au3>\\r_WinAPI_CopyCursor ( $hCursor )\\r```"],"_WinAPI_DestroyCursor":["Destroys a cursor and frees any memory the cursor occupied","```\\r#include <WinAPIRes.au3>\\r_WinAPI_DestroyCursor ( $hCursor )\\r```"],"_WinAPI_GetClipCursor":["Retrieves the screen coordinates of the rectangular area to which the cursor is confined","```\\r#include <WinAPIRes.au3>\\r_WinAPI_GetClipCursor ( )\\r```"],"_WinAPI_GetCursor":["Retrieves a handle to the current cursor","```\\r#include <WinAPIRes.au3>\\r_WinAPI_GetCursor ( )\\r```"],"_WinAPI_LoadCursor":["Loads the specified cursor resource from the executable (.exe) file","```\\r#include <WinAPIRes.au3>\\r_WinAPI_LoadCursor ( $hInstance, $sName )\\r```"],"_WinAPI_LoadCursorFromFile":["Creates a cursor based on data contained in a file","```\\r#include <WinAPIRes.au3>\\r_WinAPI_LoadCursorFromFile ( $sFilePath )\\r```"],"_WinAPI_SetSystemCursor":["Enables an application to customize the system cursors","```\\r#include <WinAPIRes.au3>\\r_WinAPI_SetSystemCursor ( $hCursor, $iID [, $bCopy = False] )\\r```"],"_WinAPI_AddIconTransparency":["Adds a transparency to the specified 32 bits-per-pixel icon","```\\r#include <WinAPIRes.au3>\\r_WinAPI_AddIconTransparency ( $hIcon [, $iPercent = 50 [, $bDelete = False]] )\\r```"],"_WinAPI_CreateIcon":["Creates an icon that has the specified size, colors, and bit patterns","```\\r#include <WinAPIRes.au3>\\r_WinAPI_CreateIcon ( $hInstance, $iWidth, $iHeight, $iPlanes, $iBitsPixel, $pANDBits, $pXORBits )\\r```"],"_WinAPI_CreateIconFromResourceEx":["Creates an icon or cursor from resource bits describing the icon","```\\r#include <WinAPIRes.au3>\\r_WinAPI_CreateIconFromResourceEx ( $pData, $iSize [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]] )\\r```"],"_WinAPI_ExtractIcon":["Extracts an icon from the specified executable file, DLL, or icon file","```\\r#include <WinAPIRes.au3>\\r_WinAPI_ExtractIcon ( $sIcon, $iIndex [, $bSmall = False] )\\r```"],"_WinAPI_FileIconInit":["Initializes or reinitializes the system image list","```\\r#include <WinAPIRes.au3>\\r_WinAPI_FileIconInit ( [$bRestore = True] )\\r```"],"_WinAPI_GetIconInfoEx":["Retrieves information about the specified icon or cursor","```\\r#include <WinAPIRes.au3>\\r_WinAPI_GetIconInfoEx ( $hIcon )\\r```"],"_WinAPI_LoadIcon":["Loads the specified icon resource from the executable (.exe) file associated with an application instance","```\\r#include <WinAPIRes.au3>\\r_WinAPI_LoadIcon ( $hInstance, $sName )\\r```"],"_WinAPI_LookupIconIdFromDirectoryEx":["Searches through icon or cursor data for the icon or cursor that best fits the current display device","```\\r#include <WinAPIRes.au3>\\r_WinAPI_LookupIconIdFromDirectoryEx ( $pData [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]] )\\r```"],"_WinAPI_BeginUpdateResource":["Retrieves a handle that can be used to add, delete, or replace resources in a binary module","```\\r#include <WinAPIRes.au3>\\r_WinAPI_BeginUpdateResource ( $sFilePath [, $bDelete = False] )\\r```"],"_WinAPI_EndUpdateResource":["Commits or discards a changes of the resources within module","```\\r#include <WinAPIRes.au3>\\r_WinAPI_EndUpdateResource ( $hUpdate [, $bDiscard = False] )\\r```"],"_WinAPI_EnumResourceLanguages":["Enumerates a language-specific resources, of the specified type and name, associated with a binary module","```\\r#include <WinAPIRes.au3>\\r_WinAPI_EnumResourceLanguages ( $hModule, $sType, $sName )\\r```"],"_WinAPI_EnumResourceNames":["Enumerates the resources of a specified type within a binary module","```\\r#include <WinAPIRes.au3>\\r_WinAPI_EnumResourceNames ( $hModule, $sType )\\r```"],"_WinAPI_EnumResourceTypes":["Enumerates the resource types within a binary module","```\\r#include <WinAPIRes.au3>\\r_WinAPI_EnumResourceTypes ( $hModule )\\r```"],"_WinAPI_FindResource":["Determines the location of a resource with the specified type and name in the specified module","```\\r#include <WinAPIRes.au3>\\r_WinAPI_FindResource ( $hInstance, $sType, $sName )\\r```"],"_WinAPI_FindResourceEx":["Determines the location of the resource with the specified type, name, and language in the specified module","```\\r#include <WinAPIRes.au3>\\r_WinAPI_FindResourceEx ( $hInstance, $sType, $sName, $iLanguage )\\r```"],"_WinAPI_FreeResource":["Decrements (decreases by one) the reference count of a loaded resource","```\\r#include <WinAPIRes.au3>\\r_WinAPI_FreeResource ( $hData )\\r```"],"_WinAPI_GetFileVersionInfo":["Retrieves version information for the specified file","```\\r#include <WinAPIRes.au3>\\r_WinAPI_GetFileVersionInfo ( $sFilePath, ByRef $pBuffer [, $iFlags = 0] )\\r```"],"_WinAPI_LoadIndirectString":["Extracts the string from the specified resource when given an indirect string","```\\r#include <WinAPIRes.au3>\\r_WinAPI_LoadIndirectString ( $sStrIn )\\r```"],"_WinAPI_LoadResource":["Loads the specified resource into global memory","```\\r#include <WinAPIRes.au3>\\r_WinAPI_LoadResource ( $hInstance, $hResource )\\r```"],"_WinAPI_LoadStringEx":["Loads a string resource for the specified language from the specified module","```\\r#include <WinAPIRes.au3>\\r_WinAPI_LoadStringEx ( $hModule, $iID [, $iLanguage = $LOCALE_USER_DEFAULT] )\\r```"],"_WinAPI_LockResource":["Locks the specified resource in memory","```\\r#include <WinAPIRes.au3>\\r_WinAPI_LockResource ( $hData )\\r```"],"_WinAPI_SizeOfResource":["Returns the size, in bytes, of the specified resource","```\\r#include <WinAPIRes.au3>\\r_WinAPI_SizeOfResource ( $hInstance, $hResource )\\r```"],"_WinAPI_UpdateResource":["Adds, deletes, or replaces a resource in a portable executable (PE) file","```\\r#include <WinAPIRes.au3>\\r_WinAPI_UpdateResource ( $hUpdate, $sType, $sName, $iLanguage, $pData, $iSize )\\r```"],"_WinAPI_VerQueryRoot":["Retrieves the fixed version information from the specified version-information resource","```\\r#include <WinAPIRes.au3>\\r_WinAPI_VerQueryRoot ( $pData )\\r```"],"_WinAPI_VerQueryValue":["Retrieves the non-fixed (strings) version information from the specified version-information resource","```\\r#include <WinAPIRes.au3>\\r_WinAPI_VerQueryValue ( $pData [, $sValues = \'\'] )\\r```"],"_WinAPI_VerQueryValueEx":["Retrieves the text information from the version-information resource of the specified binary module","```\\r#include <WinAPIRes.au3>\\r_WinAPI_VerQueryValueEx ( $hModule [, $sValues = \'\' [, $iLanguage = 0x0400]] )\\r```"]}'),Ie=JSON.parse('{"_WinAPI_DllGetVersion":["Retrieves a DLL-specific version information","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_DllGetVersion ( $sFilePath )\\r```"],"_WinAPI_GetAllUsersProfileDirectory":["Retrieves the path to the root of the directory that contains program data shared by all users","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_GetAllUsersProfileDirectory ( )\\r```"],"_WinAPI_GetDefaultUserProfileDirectory":["Retrieves the path to the root of the default user\'s profile","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_GetDefaultUserProfileDirectory ( )\\r```"],"_WinAPI_SetCurrentProcessExplicitAppUserModelID":["Specifies a unique application-defined Application User Model ID that identifies the current process to the taskbar","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_SetCurrentProcessExplicitAppUserModelID ( $sAppID )\\r```"],"_WinAPI_ShellAddToRecentDocs":["Adds a file to the most recently and frequently item list","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellAddToRecentDocs ( $sFilePath )\\r```"],"_WinAPI_ShellChangeNotify":["Notifies the system of an event that an application has performed","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellChangeNotify ( $iEvent, $iFlags [, $iItem1 = 0 [, $iItem2 = 0]] )\\r```"],"_WinAPI_ShellChangeNotifyDeregister":["Unregisters the client\'s window","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellChangeNotifyDeregister ( $iID )\\r```"],"_WinAPI_ShellChangeNotifyRegister":["Registers a window to receive notifications from the file system or Shell","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellChangeNotifyRegister ( $hWnd, $iMsg, $iEvents, $iSources, $aPaths [, $bRecursive = False] )\\r```"],"_WinAPI_ShellCreateDirectory":["Creates a new file system folder","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellCreateDirectory ( $sFilePath [, $hParent = 0 [, $tSecurity = 0]] )\\r```"],"_WinAPI_ShellEmptyRecycleBin":["Empties the Recycle Bin on the specified drive","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellEmptyRecycleBin ( [$sRoot = \'\' [, $iFlags = 0 [, $hParent = 0]]] )\\r```"],"_WinAPI_ShellExecute":["Performs an operation on a specified file","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellExecute ( $sFilePath [, $sArgs = \'\' [, $sDir = \'\' [, $sVerb = \'\' [, $iShow = 1 [, $hParent = 0]]]]] )\\r```"],"_WinAPI_ShellExecuteEx":["Performs an operation on a specified file","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellExecuteEx ( ByRef $tSHEXINFO )\\r```"],"_WinAPI_ShellExtractAssociatedIcon":["Returns a handle to the icon that associated with the specified file\'s","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellExtractAssociatedIcon ( $sFilePath [, $bSmall = False] )\\r```"],"_WinAPI_ShellExtractIcon":["Extracts the icon with the specified dimension from the specified file","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellExtractIcon ( $sIcon, $iIndex, $iWidth, $iHeight )\\r```"],"_WinAPI_ShellFileOperation":["Copies, moves, renames, or deletes a file system object","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellFileOperation ( $sFrom, $sTo, $iFunc, $iFlags [, $sTitle = \'\' [, $hParent = 0]] )\\r```"],"_WinAPI_ShellFlushSFCache":["Flushes the special folder cache","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellFlushSFCache ( )\\r```"],"_WinAPI_ShellGetFileInfo":["Retrieves information about an object in the file system","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetFileInfo ( $sFilePath, $iFlags, $iAttributes, ByRef $tSHFILEINFO )\\r```"],"_WinAPI_ShellGetIconOverlayIndex":["Retrieves the index of the overlay icon in the system image list","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetIconOverlayIndex ( $sIcon, $iIndex )\\r```"],"_WinAPI_ShellGetKnownFolderIDList":["Retrieves the path of a known folder as an ITEMIDLIST structure","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetKnownFolderIDList ( $sGUID [, $iFlags = 0 [, $hToken = 0]] )\\r```"],"_WinAPI_ShellGetKnownFolderPath":["Retrieves the full path of a known folder identified","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetKnownFolderPath ( $sGUID [, $iFlags = 0 [, $hToken = 0]] )\\r```"],"_WinAPI_ShellGetLocalizedName":["Retrieves the localized name of a file in a Shell folder","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetLocalizedName ( $sFilePath )\\r```"],"_WinAPI_ShellGetPathFromIDList":["Converts an item identifier list to a file system path","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetPathFromIDList ( $pPIDL )\\r```"],"_WinAPI_ShellGetSetFolderCustomSettings":["Sets or retrieves custom folder settings","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetSetFolderCustomSettings ( $sFilePath, $iFlag, ByRef $tSHFCS )\\r```"],"_WinAPI_ShellGetSettings":["Retrieves Shell state settings","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetSettings ( $iFlags )\\r```"],"_WinAPI_ShellGetSpecialFolderLocation":["Retrieves a pointer to the ITEMIDLIST structure (PIDL) of a special folder","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetSpecialFolderLocation ( $iCSIDL )\\r```"],"_WinAPI_ShellGetSpecialFolderPath":["Retrieves the path of a special folder","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetSpecialFolderPath ( $iCSIDL [, $bCreate = False] )\\r```"],"_WinAPI_ShellGetStockIconInfo":["Retrieves information about system-defined Shell icons","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellGetStockIconInfo ( $iSIID, $iFlags )\\r```"],"_WinAPI_ShellILCreateFromPath":["Creates a pointer to an item identifier list (PIDL) from a path","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellILCreateFromPath ( $sFilePath )\\r```"],"_WinAPI_ShellNotifyIcon":["Sends a message to the taskbar\'s status area","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellNotifyIcon ( $iMessage, $tNOTIFYICONDATA )\\r```"],"_WinAPI_ShellNotifyIconGetRect":["Gets the screen coordinates of the bounding rectangle of a notification icon","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellNotifyIconGetRect ( $hWnd, $iID [, $tGUID = 0] )\\r```"],"_WinAPI_ShellObjectProperties":["Invokes the Properties context menu command on a Shell object","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellObjectProperties ( $sFilePath [, $iType = 2 [, $sProperty = \'\' [, $hParent = 0]]] )\\r```"],"_WinAPI_ShellOpenFolderAndSelectItems":["Opens a Windows Explorer window with specified items in a particular folder selected","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellOpenFolderAndSelectItems ( $sFilePath [, $aNames = 0 [, $iStart = 0 [, $iEnd = -1 [, $iFlags = 0]]]] )\\r```"],"_WinAPI_ShellQueryRecycleBin":["Retrieves the size of the Recycle Bin and the number of items in it, for a specified drive","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellQueryRecycleBin ( [$sRoot = \'\'] )\\r```"],"_WinAPI_ShellQueryUserNotificationState":["Checks the state of the computer for the current user","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellQueryUserNotificationState ( )\\r```"],"_WinAPI_ShellRemoveLocalizedName":["Removes the localized name of a file in a Shell folder","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellRemoveLocalizedName ( $sFilePath )\\r```"],"_WinAPI_ShellRestricted":["Determines whether a specified administrator policy is in effect","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellRestricted ( $iRestriction )\\r```"],"_WinAPI_ShellSetKnownFolderPath":["Redirects a known folder to a new location","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellSetKnownFolderPath ( $sGUID, $sFilePath [, $iFlags = 0 [, $hToken = 0]] )\\r```"],"_WinAPI_ShellSetLocalizedName":["Sets the localized name of a file in a Shell folder","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellSetLocalizedName ( $sFilePath, $sModule, $iResID )\\r```"],"_WinAPI_ShellSetSettings":["Sets Shell state settings","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellSetSettings ( $iFlags, $bSet )\\r```"],"_WinAPI_ShellUpdateImage":["Notifies the Shell that an image in the system image list has changed","```\\r#include <WinAPIShellEx.au3>\\r_WinAPI_ShellUpdateImage ( $sIcon, $iIndex, $iImage [, $iFlags = 0] )\\r```"]}'),$e=JSON.parse('{"_WinAPI_CommandLineToArgv":["Parses a command-line string and returns an array of the command-line arguments","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_CommandLineToArgv ( $sCmd )\\r```"],"_WinAPI_IsNameInExpression":["Determines whether a string matches the specified pattern","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_IsNameInExpression ( $sString, $sPattern [, $bCaseSensitive = False] )\\r```"],"_WinAPI_ParseURL":["Performs rudimentary parsing of a URL","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_ParseURL ( $sUrl )\\r```"],"_WinAPI_ParseUserName":["Extracts the domain and user account name from a fully qualified user name","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_ParseUserName ( $sUser )\\r```"],"_WinAPI_PathAddBackslash":["Adds a backslash to the end of a string to create the correct syntax for a path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathAddBackslash ( $sFilePath )\\r```"],"_WinAPI_PathAddExtension":["Adds a file name extension to a path string","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathAddExtension ( $sFilePath [, $sExt = \'\'] )\\r```"],"_WinAPI_PathAppend":["Appends one path to the end of another","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathAppend ( $sFilePath, $sMore )\\r```"],"_WinAPI_PathBuildRoot":["Creates a root path from a given drive number","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathBuildRoot ( $iDrive )\\r```"],"_WinAPI_PathCanonicalize":["Removes elements of a file path according to special strings inserted into that path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathCanonicalize ( $sFilePath )\\r```"],"_WinAPI_PathCommonPrefix":["Compares two paths to determine if they share a common prefix","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathCommonPrefix ( $sPath1, $sPath2 )\\r```"],"_WinAPI_PathCompactPath":["Truncates a file path to fit within a given pixel width by replacing path components with ellipses","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathCompactPath ( $hWnd, $sFilePath [, $iWidth = 0] )\\r```"],"_WinAPI_PathCompactPathEx":["Truncates a path to fit within a certain number of characters by replacing path components with ellipses","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathCompactPathEx ( $sFilePath, $iMax )\\r```"],"_WinAPI_PathCreateFromUrl":["Converts a file URL to a Microsoft MS-DOS path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathCreateFromUrl ( $sUrl )\\r```"],"_WinAPI_PathFindExtension":["Searches a path for an extension","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathFindExtension ( $sFilePath )\\r```"],"_WinAPI_PathFindFileName":["Searches a path for a file name","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathFindFileName ( $sFilePath )\\r```"],"_WinAPI_PathFindNextComponent":["Parses a path and returns the portion of that path that follows the first backslash","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathFindNextComponent ( $sFilePath )\\r```"],"_WinAPI_PathGetArgs":["Finds the command-line arguments within a given path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathGetArgs ( $sFilePath )\\r```"],"_WinAPI_PathGetCharType":["Determines the type of character in relation to a path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathGetCharType ( $sChar )\\r```"],"_WinAPI_PathGetDriveNumber":["Searches a path for a drive letter within the range of \'A\' to \'Z\' and returns the corresponding drive number","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathGetDriveNumber ( $sFilePath )\\r```"],"_WinAPI_PathIsContentType":["Determines if a file\'s registered content type matches the specified content type","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsContentType ( $sFilePath, $sType )\\r```"],"_WinAPI_PathIsExe":["Determines whether a file is an executable by examining the file extension","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsExe ( $sFilePath )\\r```"],"_WinAPI_PathIsFileSpec":["Searches a path for any path-delimiting characters","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsFileSpec ( $sFilePath )\\r```"],"_WinAPI_PathIsLFNFileSpec":["Determines whether a file name is in long format","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsLFNFileSpec ( $sFilePath )\\r```"],"_WinAPI_PathIsRelative":["Searches a path and determines if it is relative","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsRelative ( $sFilePath )\\r```"],"_WinAPI_PathIsRoot":["Parses a path to determine if it is a directory root","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsRoot ( $sFilePath )\\r```"],"_WinAPI_PathIsSameRoot":["Compares two paths to determine if they have a common root component","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsSameRoot ( $sPath1, $sPath2 )\\r```"],"_WinAPI_PathIsSystemFolder":["Determines if an existing folder contains the attributes that make it a system folder","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsSystemFolder ( $sFilePath )\\r```"],"_WinAPI_PathIsUNC":["Determines if the string is a valid Universal Naming Convention (UNC) for a server and share path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsUNC ( $sFilePath )\\r```"],"_WinAPI_PathIsUNCServer":["Determines if a string is a valid Universal Naming Convention (UNC) for a server path only","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsUNCServer ( $sFilePath )\\r```"],"_WinAPI_PathIsUNCServerShare":["Determines if a string is a valid Universal Naming Convention (UNC) share path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathIsUNCServerShare ( $sFilePath )\\r```"],"_WinAPI_PathMakeSystemFolder":["Gives an existing folder the proper attributes to become a system folder","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathMakeSystemFolder ( $sFilePath )\\r```"],"_WinAPI_PathMatchSpec":["Searches a string using a Microsoft MS-DOS wild card match type","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathMatchSpec ( $sFilePath, $sSpec )\\r```"],"_WinAPI_PathParseIconLocation":["Parses a file location string that contains a file location and icon index","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathParseIconLocation ( $sFilePath )\\r```"],"_WinAPI_PathRelativePathTo":["Creates a relative path from one file or folder to another","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathRelativePathTo ( $sPathFrom, $bDirFrom, $sPathTo, $bDirTo )\\r```"],"_WinAPI_PathRemoveArgs":["Removes any arguments from a given path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathRemoveArgs ( $sFilePath )\\r```"],"_WinAPI_PathRemoveBackslash":["Removes the trailing backslash from a given path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathRemoveBackslash ( $sFilePath )\\r```"],"_WinAPI_PathRemoveExtension":["Removes the file name extension from a path, if one is present","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathRemoveExtension ( $sFilePath )\\r```"],"_WinAPI_PathRemoveFileSpec":["Removes the trailing file name and backslash from a path, if they are present","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathRemoveFileSpec ( $sFilePath )\\r```"],"_WinAPI_PathRenameExtension":["Replaces the extension of a file name with a new extension","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathRenameExtension ( $sFilePath, $sExt )\\r```"],"_WinAPI_PathSearchAndQualify":["Formats a path to the fully qualified path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathSearchAndQualify ( $sFilePath [, $bExists = False] )\\r```"],"_WinAPI_PathSkipRoot":["Parses a path, ignoring the drive letter or Universal Naming Convention (UNC) server/share path elements","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathSkipRoot ( $sFilePath )\\r```"],"_WinAPI_PathStripPath":["Removes the path portion of a fully qualified path and file","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathStripPath ( $sFilePath )\\r```"],"_WinAPI_PathStripToRoot":["Removes all parts of the path except for the root information","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathStripToRoot ( $sFilePath )\\r```"],"_WinAPI_PathUndecorate":["Removes the decoration from a path string","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathUndecorate ( $sFilePath )\\r```"],"_WinAPI_PathUnExpandEnvStrings":["Replaces folder names in a fully-qualified path with their associated environment string","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathUnExpandEnvStrings ( $sFilePath )\\r```"],"_WinAPI_PathUnmakeSystemFolder":["Removes the attributes from a folder that make it a system folder","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathUnmakeSystemFolder ( $sFilePath )\\r```"],"_WinAPI_PathUnquoteSpaces":["Removes quotes from the beginning and end of a path","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathUnquoteSpaces ( $sFilePath )\\r```"],"_WinAPI_PathYetAnotherMakeUniqueName":["Creates a unique filename based on an existing filename","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_PathYetAnotherMakeUniqueName ( $sFilePath )\\r```"],"_WinAPI_ShellGetImageList":["Retrieves the system image list for small or large icons","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_ShellGetImageList ( [$bSmall = False] )\\r```"],"_WinAPI_UrlApplyScheme":["Determines a scheme for a specified URL string, and returns a string with an appropriate prefix","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_UrlApplyScheme ( $sUrl [, $iFlags = 1] )\\r```"],"_WinAPI_UrlCanonicalize":["Converts a URL string into canonical form","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_UrlCanonicalize ( $sUrl, $iFlags )\\r```"],"_WinAPI_UrlCombine":["Combines the base an relative URLs in canonical form","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_UrlCombine ( $sUrl, $sPart [, $iFlags = 0] )\\r```"],"_WinAPI_UrlCompare":["Makes a case-sensitive comparison of two URL strings","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_UrlCompare ( $sUrl1, $sUrl2 [, $bIgnoreSlash = False] )\\r```"],"_WinAPI_UrlCreateFromPath":["Converts a Microsoft MS-DOS path to a canonicalized URL","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_UrlCreateFromPath ( $sFilePath )\\r```"],"_WinAPI_UrlFixup":["Attempts to correct a URL whose protocol identifier is incorrect","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_UrlFixup ( $sUrl )\\r```"],"_WinAPI_UrlGetPart":["Retrieves a specified part from the URL","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_UrlGetPart ( $sUrl, $iPart )\\r```"],"_WinAPI_UrlHash":["Hashes a URL string","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_UrlHash ( $sUrl [, $iLength = 32] )\\r```"],"_WinAPI_UrlIs":["Tests whether or not a URL is a specified type","```\\r#include <WinAPIShPath.au3>\\r_WinAPI_UrlIs ( $sUrl [, $iType = 0] )\\r```"]}'),ge=JSON.parse('{"_WinAPI_LockWorkStation":["Locks the workstation\'s display","```\\r#include <WinAPISys.au3>\\r_WinAPI_LockWorkStation ( )\\r```"],"_WinAPI_ShutdownBlockReasonCreate":["Indicates that the system cannot be shut down and sets a reason string to be displayed to the user if system shutdown is initiated","```\\r#include <WinAPISys.au3>\\r_WinAPI_ShutdownBlockReasonCreate ( $hWnd, $sText )\\r```"],"_WinAPI_ShutdownBlockReasonDestroy":["Indicates that the system can be shut down and frees the reason string","```\\r#include <WinAPISys.au3>\\r_WinAPI_ShutdownBlockReasonDestroy ( $hWnd )\\r```"],"_WinAPI_ShutdownBlockReasonQuery":["Retrieves the reason string set by the _WinAPI_ShutdownBlockReasonCreate() function","```\\r#include <WinAPISys.au3>\\r_WinAPI_ShutdownBlockReasonQuery ( $hWnd )\\r```"],"_WinAPI_SetWinEventHook":["Sets an event hook function for a range of events","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetWinEventHook ( $iEventMin, $iEventMax, $pEventProc [, $iPID = 0 [, $iThreadId = 0 [, $iFlags = 0]]] )\\r```"],"_WinAPI_UnhookWinEvent":["Removes an event hook function","```\\r#include <WinAPISys.au3>\\r_WinAPI_UnhookWinEvent ( $hEventHook )\\r```"],"_WinAPI_AddClipboardFormatListener":["Places the given window in the system-maintained clipboard format listener list","```\\r#include <WinAPISys.au3>\\r_WinAPI_AddClipboardFormatListener ( $hWnd )\\r```"],"_WinAPI_GetClipboardSequenceNumber":["Retrieves the clipboard sequence number for the current window station","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetClipboardSequenceNumber ( )\\r```"],"_WinAPI_RemoveClipboardFormatListener":["Removes the given window from the system-maintained clipboard format listener list","```\\r#include <WinAPISys.au3>\\r_WinAPI_RemoveClipboardFormatListener ( $hWnd )\\r```"],"_WinAPI_GetEffectiveClientRect":["Calculates the dimensions of a rectangle in the client area that contains all the specified controls","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetEffectiveClientRect ( $hWnd, $aCtrl [, $iStart = 0 [, $iEnd = -1]] )\\r```"],"_WinAPI_GetMUILanguage":["Gets the language currently in use by the common controls for a particular process","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetMUILanguage ( )\\r```"],"_WinAPI_InitMUILanguage":["Enables an application to specify a language to be used with the common controls that is different from the system language","```\\r#include <WinAPISys.au3>\\r_WinAPI_InitMUILanguage ( $iLanguage )\\r```"],"_WinAPI_LoadIconMetric":["Loads a specified icon resource with a client-specified system metric","```\\r#include <WinAPISys.au3>\\r_WinAPI_LoadIconMetric ( $hInstance, $sName, $iMetric )\\r```"],"_WinAPI_LoadIconWithScaleDown":["Loads an icon and scales down a larger image instead of scaling up a smaller image","```\\r#include <WinAPISys.au3>\\r_WinAPI_LoadIconWithScaleDown ( $hInstance, $sName, $iWidth, $iHeight )\\r```"],"_WinAPI_MirrorIcon":["Reverses (mirrors) icons so that they are displayed correctly on a mirrored device context","```\\r#include <WinAPISys.au3>\\r_WinAPI_MirrorIcon ( $hIcon [, $bDelete = False] )\\r```"],"_WinAPI_GetDllDirectory":["Retrieves the application-specific portion of the search path used to locate DLLs for the application","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetDllDirectory ( )\\r```"],"_WinAPI_GetModuleHandleEx":["Retrieves a module handle for the specified module","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetModuleHandleEx ( $sModule [, $iFlags = 0] )\\r```"],"_WinAPI_SetDllDirectory":["Adds a directory to the search path used to locate DLLs for the application","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetDllDirectory ( [$sDirPath = Default] )\\r```"],"_WinAPI_CreateBuffer":["Allocates a block of memory from the internal library heap","```\\r#include <WinAPISys.au3>\\r_WinAPI_CreateBuffer ( $iLength [, $pBuffer = 0 [, $bAbort = True]] )\\r```"],"_WinAPI_CreateBufferFromStruct":["Allocates a block of memory from the internal library heap and initializes it with the structure\'s data","```\\r#include <WinAPISys.au3>\\r_WinAPI_CreateBufferFromStruct ( $tStruct [, $pBuffer = 0 [, $bAbort = True]] )\\r```"],"_WinAPI_CreateString":["Copies a specified string to the newly allocated memory block and returns its pointer","```\\r#include <WinAPISys.au3>\\r_WinAPI_CreateString ( $sString [, $pString = 0 [, $iLength = -1 [, $bUnicode = True [, $bAbort = True]]]] )\\r```"],"_WinAPI_FreeMemory":["Frees a memory block in the internal library heap","```\\r#include <WinAPISys.au3>\\r_WinAPI_FreeMemory ( $pMemory )\\r```"],"_WinAPI_GetMemorySize":["Retrieves the size of a memory block allocated from the internal library heap","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetMemorySize ( $pMemory )\\r```"],"_WinAPI_IsMemory":["Determines whether the specified pointer points to the memory block in the internal library heap","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsMemory ( $pMemory )\\r```"],"_WinAPI_CompressBuffer":["Compresses a buffer with specified compression format and engine type","```\\r#include <WinAPISys.au3>\\r_WinAPI_CompressBuffer ( $pUncompressedBuffer, $iUncompressedSize, $pCompressedBuffer, $iCompressedSize [, $iFormatAndEngine = 0x0002] )\\r```"],"_WinAPI_ComputeCrc32":["Calculates the CRC32 checksum of a block of memory","```\\r#include <WinAPISys.au3>\\r_WinAPI_ComputeCrc32 ( $pMemory, $iLength )\\r```"],"_WinAPI_DecompressBuffer":["Decompresses an entire compressed buffer","```\\r#include <WinAPISys.au3>\\r_WinAPI_DecompressBuffer ( $pUncompressedBuffer, $iUncompressedSize, $pCompressedBuffer, $iCompressedSize [, $iFormat = 0x0002] )\\r```"],"_WinAPI_EqualMemory":["Compares two blocks of memory to determine whether the specified number of bytes are identical","```\\r#include <WinAPISys.au3>\\r_WinAPI_EqualMemory ( $pSource1, $pSource2, $iLength )\\r```"],"_WinAPI_FillMemory":["Fills a block of memory with the given value","```\\r#include <WinAPISys.au3>\\r_WinAPI_FillMemory ( $pMemory, $iLength [, $iValue = 0] )\\r```"],"_WinAPI_GetPhysicallyInstalledSystemMemory":["Retrieves the amount of RAM that is physically installed on the computer","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetPhysicallyInstalledSystemMemory ( )\\r```"],"_WinAPI_GetSystemDEPPolicy":["Gets the data execution prevention (DEP) policy setting for the system","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetSystemDEPPolicy ( )\\r```"],"_WinAPI_IsBadCodePtr":["Determines whether the calling process has read access to the memory at the specified address","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsBadCodePtr ( $pAddress )\\r```"],"_WinAPI_IsBadReadPtr":["Verifies that the calling process has read access to the specified range of memory","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsBadReadPtr ( $pAddress, $iLength )\\r```"],"_WinAPI_IsBadStringPtr":["Verifies that the calling process has read access to the specified range of memory","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsBadStringPtr ( $pAddress, $iLength )\\r```"],"_WinAPI_IsBadWritePtr":["Verifies that the calling process has write access to the specified range of memory","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsBadWritePtr ( $pAddress, $iLength )\\r```"],"_WinAPI_MoveMemory":["Moves a block of memory from one location to another","```\\r#include <WinAPISys.au3>\\r_WinAPI_MoveMemory ( $pDestination, $pSource, $iLength )\\r```"],"_WinAPI_ZeroMemory":["Fills a block of memory with zeros","```\\r#include <WinAPISys.au3>\\r_WinAPI_ZeroMemory ( $pMemory, $iLength )\\r```"],"_WinAPI_GetDefaultPrinter":["Retrieves the printer name of the default printer for the current user on the local computer","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetDefaultPrinter ( )\\r```"],"_WinAPI_GetPwrCapabilities":["Retrieves information about the system power capabilities","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetPwrCapabilities ( )\\r```"],"_WinAPI_GetSystemPowerStatus":["Retrieves the power status of the system","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetSystemPowerStatus ( )\\r```"],"_WinAPI_RegisterPowerSettingNotification":["Registers the application to receive power setting notifications for the specific power setting event","```\\r#include <WinAPISys.au3>\\r_WinAPI_RegisterPowerSettingNotification ( $hWnd, $sGUID )\\r```"],"_WinAPI_UnregisterPowerSettingNotification":["Unregisters the power setting notification","```\\r#include <WinAPISys.au3>\\r_WinAPI_UnregisterPowerSettingNotification ( $hNotify )\\r```"],"_WinAPI_CloseDesktop":["Closes an open handle to a desktop object","```\\r#include <WinAPISys.au3>\\r_WinAPI_CloseDesktop ( $hDesktop )\\r```"],"_WinAPI_CloseWindowStation":["Closes an open window station handle","```\\r#include <WinAPISys.au3>\\r_WinAPI_CloseWindowStation ( $hStation )\\r```"],"_WinAPI_CreateDesktop":["Creates a new desktop, associates it with the current window station of the calling process","```\\r#include <WinAPISys.au3>\\r_WinAPI_CreateDesktop ( $sName [, $iAccess = 0x0002 [, $iFlags = 0 [, $iHeap = 0 [, $tSecurity = 0]]]] )\\r```"],"_WinAPI_CreateWindowStation":["Creates a window station object, associates it with the calling process, and assigns it to the current session","```\\r#include <WinAPISys.au3>\\r_WinAPI_CreateWindowStation ( [$sName = \'\' [, $iAccess = 0 [, $iFlags = 0 [, $tSecurity = 0]]]] )\\r```"],"_WinAPI_EnumDesktops":["Enumerates all desktops associated with the specified window station of the calling process","```\\r#include <WinAPISys.au3>\\r_WinAPI_EnumDesktops ( $hStation )\\r```"],"_WinAPI_EnumDesktopWindows":["Enumerates all top-level windows associated with the specified desktop","```\\r#include <WinAPISys.au3>\\r_WinAPI_EnumDesktopWindows ( $hDesktop [, $bVisible = True] )\\r```"],"_WinAPI_EnumWindowStations":["Enumerates all window stations in the current session","```\\r#include <WinAPISys.au3>\\r_WinAPI_EnumWindowStations ( )\\r```"],"_WinAPI_GetProcessWindowStation":["Retrieves a handle to the current window station for the calling process","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetProcessWindowStation ( )\\r```"],"_WinAPI_GetUserObjectInformation":["Retrieves information about the specified window station or desktop object","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetUserObjectInformation ( $hObject, $iIndex )\\r```"],"_WinAPI_OpenDesktop":["Opens the specified desktop object","```\\r#include <WinAPISys.au3>\\r_WinAPI_OpenDesktop ( $sName [, $iAccess = 0 [, $iFlags = 0 [, $bInherit = False]]] )\\r```"],"_WinAPI_OpenInputDesktop":["Opens the desktop that receives user input","```\\r#include <WinAPISys.au3>\\r_WinAPI_OpenInputDesktop ( [$iAccess = 0 [, $iFlags = 0 [, $bInherit = False]]] )\\r```"],"_WinAPI_OpenWindowStation":["Opens the specified window station","```\\r#include <WinAPISys.au3>\\r_WinAPI_OpenWindowStation ( $sName [, $iAccess = 0 [, $bInherit = False]] )\\r```"],"_WinAPI_SetProcessWindowStation":["Assigns the specified window station to the calling process","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetProcessWindowStation ( $hStation )\\r```"],"_WinAPI_SetUserObjectInformation":["Sets information about the specified window station or desktop object","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetUserObjectInformation ( $hObject, $iIndex, $tData )\\r```"],"_WinAPI_SwitchDesktop":["Makes the specified desktop visible and activates it","```\\r#include <WinAPISys.au3>\\r_WinAPI_SwitchDesktop ( $hDesktop )\\r```"],"_WinAPI_EnumPageFiles":["Retrieves information for each installed pagefile in the system","```\\r#include <WinAPISys.au3>\\r_WinAPI_EnumPageFiles ( )\\r```"],"_WinAPI_GetCurrentHwProfile":["Retrieves information about the current hardware profile for the local computer","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetCurrentHwProfile ( )\\r```"],"_WinAPI_GetHandleInformation":["Retrieves certain properties of an object handle","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetHandleInformation ( $hObject )\\r```"],"_WinAPI_GetPerformanceInfo":["Retrieves the performance information","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetPerformanceInfo ( )\\r```"],"_WinAPI_GetProcessShutdownParameters":["Retrieves the shutdown parameters for the currently calling process","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetProcessShutdownParameters ( )\\r```"],"_WinAPI_GetStartupInfo":["Retrieves the contents of the STARTUPINFO structure that was specified when the calling process was created","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetStartupInfo ( )\\r```"],"_WinAPI_GetSystemInfo":["Retrieves information about the current system","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetSystemInfo ( )\\r```"],"_WinAPI_GetSystemTimes":["Retrieves system timing information","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetSystemTimes ( )\\r```"],"_WinAPI_GetSystemWow64Directory":["Retrieves the path of the system directory used by WOW64","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetSystemWow64Directory ( )\\r```"],"_WinAPI_GetTickCount":["Retrieves the number of milliseconds that have elapsed since the system was started","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetTickCount ( )\\r```"],"_WinAPI_GetTickCount64":["Retrieves the number of milliseconds that have elapsed since the system was started","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetTickCount64 ( )\\r```"],"_WinAPI_GetVersion":["Retrieves version of the current operating system","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetVersion ( )\\r```"],"_WinAPI_GetVersionEx":["Retrieves information about the current operating system","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetVersionEx ( )\\r```"],"_WinAPI_IsProcessorFeaturePresent":["Determines whether the specified processor feature is supported by the current computer","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsProcessorFeaturePresent ( $iFeature )\\r```"],"_WinAPI_QueryPerformanceCounter":["Retrieves the current value of the high-resolution performance counter","```\\r#include <WinAPISys.au3>\\r_WinAPI_QueryPerformanceCounter ( )\\r```"],"_WinAPI_QueryPerformanceFrequency":["Retrieves the frequency of the high-resolution performance counter","```\\r#include <WinAPISys.au3>\\r_WinAPI_QueryPerformanceFrequency ( )\\r```"],"_WinAPI_SetProcessShutdownParameters":["Sets a shutdown order for a process relative to the other processes in the system","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetProcessShutdownParameters ( $iLevel [, $bDialog = False] )\\r```"],"_WinAPI_ActivateKeyboardLayout":["Sets the input locale identifier for the calling thread or the current process","```\\r#include <WinAPISys.au3>\\r_WinAPI_ActivateKeyboardLayout ( $hLocale [, $iFlag = 0] )\\r```"],"_WinAPI_DefRawInputProc":["Calls the default raw input procedure to process the raw input messages that an application does not process","```\\r#include <WinAPISys.au3>\\r_WinAPI_DefRawInputProc ( $paRawInput, $iInput )\\r```"],"_WinAPI_EnumRawInputDevices":["Enumerates the raw input devices attached to the system","```\\r#include <WinAPISys.au3>\\r_WinAPI_EnumRawInputDevices ( )\\r```"],"_WinAPI_GetActiveWindow":["Retrieves the window handle to the active window attached to the calling process\'s message queue","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetActiveWindow ( )\\r```"],"_WinAPI_GetIdleTime":["Retrieves the time that has elapsed since the last input","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetIdleTime ( )\\r```"],"_WinAPI_GetKeyboardLayout":["Retrieves the active input locale identifier for the specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetKeyboardLayout ( $hWnd )\\r```"],"_WinAPI_GetKeyboardLayoutList":["Retrieves the all input locale identifiers corresponding to the current set of input locales in the system","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetKeyboardLayoutList ( )\\r```"],"_WinAPI_GetKeyboardState":["Copies the status of the 256 virtual keys to the specified buffer","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetKeyboardState ( )\\r```"],"_WinAPI_GetKeyboardType":["Retrieves information about the current keyboard","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetKeyboardType ( $iType )\\r```"],"_WinAPI_GetKeyNameText":["Retrieves a string that represents the name of a key","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetKeyNameText ( $lParam )\\r```"],"_WinAPI_GetKeyState":["Retrieves the status of the specified virtual key","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetKeyState ( $vKey )\\r```"],"_WinAPI_GetRawInputBuffer":["Performs a buffered read of the raw input data","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetRawInputBuffer ( $pBuffer, $iLength )\\r```"],"_WinAPI_GetRawInputBufferLength":["Retrieves the required buffer size to call the _WinAPI_GetRawInputBuffer() function","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetRawInputBufferLength ( )\\r```"],"_WinAPI_GetRawInputData":["Retrieves the raw input from the specified device","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetRawInputData ( $hRawInput, $pBuffer, $iLength, $iFlag )\\r```"],"_WinAPI_GetRawInputDeviceInfo":["Retrieves information about the raw input device","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetRawInputDeviceInfo ( $hDevice, $pBuffer, $iLength, $iFlag )\\r```"],"_WinAPI_GetRegisteredRawInputDevices":["Retrieves the information about the raw input devices for the current application","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetRegisteredRawInputDevices ( $pBuffer, $iLength )\\r```"],"_WinAPI_IsLoadKBLayout":["Determines whether the specified input locale loaded into the system","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsLoadKBLayout ( $iLanguage )\\r```"],"_WinAPI_IsWindowEnabled":["Determines whether the specified window is enabled for mouse and keyboard input","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsWindowEnabled ( $hWnd )\\r```"],"_WinAPI_Keybd_Event":["Synthesizes a keystroke","```\\r#include <WinAPISys.au3>\\r_WinAPI_Keybd_Event ( $vKey, $iFlags [, $iScanCode = 0 [, $iExtraInfo = 0]] )\\r```"],"_WinAPI_LoadKeyboardLayout":["Loads a new input locale identifier into the system","```\\r#include <WinAPISys.au3>\\r_WinAPI_LoadKeyboardLayout ( $iLanguage [, $iFlag = 0] )\\r```"],"_WinAPI_MapVirtualKey":["Translates a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code","```\\r#include <WinAPISys.au3>\\r_WinAPI_MapVirtualKey ( $iCode, $iType [, $hLocale = 0] )\\r```"],"_WinAPI_RegisterHotKey":["Defines a system-wide hot key","```\\r#include <WinAPISys.au3>\\r_WinAPI_RegisterHotKey ( $hWnd, $iID, $iModifiers, $vKey )\\r```"],"_WinAPI_RegisterRawInputDevices":["Registers the devices that supply the raw input data","```\\r#include <WinAPISys.au3>\\r_WinAPI_RegisterRawInputDevices ( $paDevice [, $iCount = 1] )\\r```"],"_WinAPI_SetActiveWindow":["Activates the specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetActiveWindow ( $hWnd )\\r```"],"_WinAPI_SetKeyboardLayout":["Sets an input locale identifier to the specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetKeyboardLayout ( $hWnd, $iLanguage [, $iFlags = 0] )\\r```"],"_WinAPI_SetKeyboardState":["Copies a 256-byte array of keyboard key states into the calling process\'s keyboard input-state table","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetKeyboardState ( $tState )\\r```"],"_WinAPI_TrackMouseEvent":["Posts messages when the mouse pointer leaves a window or hovers over a window for a specified amount of time","```\\r#include <WinAPISys.au3>\\r_WinAPI_TrackMouseEvent ( $hWnd, $iFlags [, $iTime = -1] )\\r```"],"_WinAPI_UnloadKeyboardLayout":["Unloads an input locale identifier","```\\r#include <WinAPISys.au3>\\r_WinAPI_UnloadKeyboardLayout ( $hLocale )\\r```"],"_WinAPI_UnregisterHotKey":["Frees a hot key previously registered by the calling thread","```\\r#include <WinAPISys.au3>\\r_WinAPI_UnregisterHotKey ( $hWnd, $iID )\\r```"],"_WinAPI_AdjustWindowRectEx":["Calculates the required size of the window rectangle, based on the desired size of the client rectangle","```\\r#include <WinAPISys.au3>\\r_WinAPI_AdjustWindowRectEx ( ByRef $tRECT, $iStyle [, $iExStyle = 0 [, $bMenu = False]] )\\r```"],"_WinAPI_AnimateWindow":["Enables you to produce special effects when showing or hiding windows","```\\r#include <WinAPISys.au3>\\r_WinAPI_AnimateWindow ( $hWnd, $iFlags [, $iDuration = 1000] )\\r```"],"_WinAPI_BeginDeferWindowPos":["Allocates memory for a multiple-window-position structure","```\\r#include <WinAPISys.au3>\\r_WinAPI_BeginDeferWindowPos ( [$iAmount = 1] )\\r```"],"_WinAPI_BringWindowToTop":["Brings the specified window to the top of the Z order","```\\r#include <WinAPISys.au3>\\r_WinAPI_BringWindowToTop ( $hWnd )\\r```"],"_WinAPI_BroadcastSystemMessage":["Sends a message to the specified recipients","```\\r#include <WinAPISys.au3>\\r_WinAPI_BroadcastSystemMessage ( $iMsg [, $wParam = 0 [, $lParam = 0 [, $iFlags = 0 [, $iRecipients = 0]]]] )\\r```"],"_WinAPI_CallWindowProcW":["Passes message information to the specified window procedure","```\\r#include <WinAPISys.au3>\\r_WinAPI_CallWindowProcW ( $pPrevWndProc, $hWnd, $iMsg, $wParam, $lParam )\\r```"],"_WinAPI_CascadeWindows":["Cascades the specified child windows of the specified parent window","```\\r#include <WinAPISys.au3>\\r_WinAPI_CascadeWindows ( $aWnds [, $tRECT = 0 [, $hParent = 0 [, $iFlags = 0 [, $iStart = 0 [, $iEnd = -1]]]]] )\\r```"],"_WinAPI_ChangeWindowMessageFilterEx":["Modifies the User Interface Privilege Isolation (UIPI) message filter for a specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_ChangeWindowMessageFilterEx ( $hWnd, $iMsg, $iAction )\\r```"],"_WinAPI_ChildWindowFromPointEx":["Determines which, if any, of the child windows belonging to the specified parent window contains the specified point","```\\r#include <WinAPISys.au3>\\r_WinAPI_ChildWindowFromPointEx ( $hWnd, $tPOINT [, $iFlags = 0] )\\r```"],"_WinAPI_CloseWindow":["Minimizes (but does not destroy) the specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_CloseWindow ( $hWnd )\\r```"],"_WinAPI_DeferWindowPos":["Updates the specified multiple-window-position structure for the specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_DeferWindowPos ( $hInfo, $hWnd, $hAfter, $iX, $iY, $iWidth, $iHeight, $iFlags )\\r```"],"_WinAPI_DefWindowProcW":["Calls the default window procedure to provide default processing for any window messages","```\\r#include <WinAPISys.au3>\\r_WinAPI_DefWindowProcW ( $hWnd, $iMsg, $wParam, $lParam )\\r```"],"_WinAPI_DeregisterShellHookWindow":["Unregisters a specified Shell window that is registered to receive Shell hook messages","```\\r#include <WinAPISys.au3>\\r_WinAPI_DeregisterShellHookWindow ( $hWnd )\\r```"],"_WinAPI_DragAcceptFiles":["Registers whether a window accepts dropped files","```\\r#include <WinAPISys.au3>\\r_WinAPI_DragAcceptFiles ( $hWnd [, $bAccept = True] )\\r```"],"_WinAPI_DragFinish":["Releases memory that the system allocated for use in transferring file names to the application","```\\r#include <WinAPISys.au3>\\r_WinAPI_DragFinish ( $hDrop )\\r```"],"_WinAPI_DragQueryFileEx":["Retrieves the names of dropped files that result from a successful drag-and-drop operation","```\\r#include <WinAPISys.au3>\\r_WinAPI_DragQueryFileEx ( $hDrop [, $iFlag = 0] )\\r```"],"_WinAPI_DragQueryPoint":["Retrieves the position of the mouse pointer at the time a file was dropped during a drag-and-drop operation","```\\r#include <WinAPISys.au3>\\r_WinAPI_DragQueryPoint ( $hDrop )\\r```"],"_WinAPI_EndDeferWindowPos":["Simultaneously updates the position and size of one or more windows in a single screen-refreshing cycle","```\\r#include <WinAPISys.au3>\\r_WinAPI_EndDeferWindowPos ( $hInfo )\\r```"],"_WinAPI_EnumChildWindows":["Enumerates a child windows that belong to the specified parent window","```\\r#include <WinAPISys.au3>\\r_WinAPI_EnumChildWindows ( $hWnd [, $bVisible = True] )\\r```"],"_WinAPI_GetClassInfoEx":["Retrieves information about a window class","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetClassInfoEx ( $sClass [, $hInstance = 0] )\\r```"],"_WinAPI_GetClassLongEx":["Retrieves the specified value associated with the specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetClassLongEx ( $hWnd, $iIndex )\\r```"],"_WinAPI_GetGUIThreadInfo":["Retrieves information about the active window or a specified GUI thread","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetGUIThreadInfo ( $iThreadId )\\r```"],"_WinAPI_GetLastActivePopup":["Determines which pop-up window owned by the specified window was most recently active","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetLastActivePopup ( $hWnd )\\r```"],"_WinAPI_GetMessageExtraInfo":["Retrieves the extra message information for the current thread","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetMessageExtraInfo ( )\\r```"],"_WinAPI_GetMonitorInfo":["Retrieves information about a display monitor","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetMonitorInfo ( $hMonitor )\\r```"],"_WinAPI_GetObjectInfoByHandle":["Retrieves information about a specified object","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetObjectInfoByHandle ( $hObject )\\r```"],"_WinAPI_GetObjectNameByHandle":["Retrieves a name of the specified object","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetObjectNameByHandle ( $hObject )\\r```"],"_WinAPI_GetShellWindow":["Retrieves a handle to the Shell\'s desktop window","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetShellWindow ( )\\r```"],"_WinAPI_GetTopWindow":["Retrieves a handle to the child window at the top of the Z order","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetTopWindow ( $hWnd )\\r```"],"_WinAPI_GetWindowDisplayAffinity":["Retrieves the current display affinity setting, from any process, for a given window","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetWindowDisplayAffinity ( $hWnd )\\r```"],"_WinAPI_GetWindowInfo":["Retrieves information about the specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetWindowInfo ( $hWnd )\\r```"],"_WinAPI_GetWorkArea":["Retrieves the size of the working area on the primary display monitor","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetWorkArea ( )\\r```"],"_WinAPI_IsChild":["Tests whether a window is a child window of a specified parent window","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsChild ( $hWnd, $hWndParent )\\r```"],"_WinAPI_IsHungAppWindow":["Determines whether the specified application is not responding","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsHungAppWindow ( $hWnd )\\r```"],"_WinAPI_IsIconic":["Determines whether the specified window is minimized (iconic)","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsIconic ( $hWnd )\\r```"],"_WinAPI_IsWindowUnicode":["Determines whether the specified window is a native Unicode window","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsWindowUnicode ( $hWnd )\\r```"],"_WinAPI_IsZoomed":["Determines whether a window is maximized","```\\r#include <WinAPISys.au3>\\r_WinAPI_IsZoomed ( $hWnd )\\r```"],"_WinAPI_KillTimer":["Destroys the specified timer","```\\r#include <WinAPISys.au3>\\r_WinAPI_KillTimer ( $hWnd, $iTimerID )\\r```"],"_WinAPI_OpenIcon":["Restores a minimized (iconic) window to its previous size and position and activates the window","```\\r#include <WinAPISys.au3>\\r_WinAPI_OpenIcon ( $hWnd )\\r```"],"_WinAPI_RegisterClass":["Registers a window class","```\\r#include <WinAPISys.au3>\\r_WinAPI_RegisterClass ( $tWNDCLASS )\\r```"],"_WinAPI_RegisterClassEx":["Registers a window class","```\\r#include <WinAPISys.au3>\\r_WinAPI_RegisterClassEx ( $tWNDCLASSEX )\\r```"],"_WinAPI_RegisterShellHookWindow":["Registers a specified Shell window to receive certain messages for events or notifications","```\\r#include <WinAPISys.au3>\\r_WinAPI_RegisterShellHookWindow ( $hWnd )\\r```"],"_WinAPI_SendMessageTimeout":["Sends the specified message to one of more windows","```\\r#include <WinAPISys.au3>\\r_WinAPI_SendMessageTimeout ( $hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iTimeout = 1000 [, $iFlags = 0]]]] )\\r```"],"_WinAPI_SetClassLongEx":["Replaces the specified value into the specified window belongs","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetClassLongEx ( $hWnd, $iIndex, $iNewLong )\\r```"],"_WinAPI_SetForegroundWindow":["Puts the specified window into the foreground and activates its","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetForegroundWindow ( $hWnd )\\r```"],"_WinAPI_SetMessageExtraInfo":["Sets the extra message information for the current thread","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetMessageExtraInfo ( $lParam )\\r```"],"_WinAPI_SetTimer":["Creates a timer with the specified time-out value","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetTimer ( $hWnd, $iTimerID, $iElapse, $pTimerFunc )\\r```"],"_WinAPI_SetWindowDisplayAffinity":["Stores the display affinity setting in kernel mode on the specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetWindowDisplayAffinity ( $hWnd, $iAffinity )\\r```"],"_WinAPI_ShowOwnedPopups":["Shows or hides all pop-up windows owned by the specified window","```\\r#include <WinAPISys.au3>\\r_WinAPI_ShowOwnedPopups ( $hWnd, $bShow )\\r```"],"_WinAPI_SwitchToThisWindow":["Switches the focus to a specified window and bring it to the foreground","```\\r#include <WinAPISys.au3>\\r_WinAPI_SwitchToThisWindow ( $hWnd [, $bAltTab = False] )\\r```"],"_WinAPI_TileWindows":["Tiles the specified child windows of the specified parent window","```\\r#include <WinAPISys.au3>\\r_WinAPI_TileWindows ( $aWnds [, $tRECT = 0 [, $hParent = 0 [, $iFlags = 0 [, $iStart = 0 [, $iEnd = -1]]]]] )\\r```"],"_WinAPI_UnregisterClass":["Unregisters a window class, freeing the memory required for the class","```\\r#include <WinAPISys.au3>\\r_WinAPI_UnregisterClass ( $sClass [, $hInstance = 0] )\\r```"],"_WinAPI_UpdateLayeredWindowEx":["Updates a bitmap translucency of a layered window","```\\r#include <WinAPISys.au3>\\r_WinAPI_UpdateLayeredWindowEx ( $hWnd, $iX, $iY, $hBitmap [, $iOpacity = 255 [, $bDelete = False]] )\\r```"],"_WinAPI_UpdateLayeredWindowIndirect":["Updates the position, size, shape, content, and translucency of a layered window","```\\r#include <WinAPISys.au3>\\r_WinAPI_UpdateLayeredWindowIndirect ( $hWnd, $tULWINFO )\\r```"],"_WinAPI_DefSubclassProc":["Calls the next handler in a window\'s subclass chain","```\\r#include <WinAPISys.au3>\\r_WinAPI_DefSubclassProc ( $hWnd, $iMsg, $wParam, $lParam )\\r```"],"_WinAPI_GetWindowSubclass":["Retrieves the reference data for the specified window subclass callback","```\\r#include <WinAPISys.au3>\\r_WinAPI_GetWindowSubclass ( $hWnd, $pSubclassProc, $idSubClass )\\r```"],"_WinAPI_RemoveWindowSubclass":["Removes a subclass callback from a window","```\\r#include <WinAPISys.au3>\\r_WinAPI_RemoveWindowSubclass ( $hWnd, $pSubclassProc, $idSubClass )\\r```"],"_WinAPI_SetWindowSubclass":["Installs or updates a window subclass callback","```\\r#include <WinAPISys.au3>\\r_WinAPI_SetWindowSubclass ( $hWnd, $pSubclassProc, $idSubClass [, $pData = 0] )\\r```"]}');var Ce=a(60),Se="`#include <WinAPITHeme.au3>`",Te={hBP:{label:"$hBP",documentation:"Handle of the buffered paint context."},hTheme:{label:"$hTheme",documentation:"Handle to a window's specified theme data."},hTheme2:{label:"$hTheme",documentation:"Handle to the theme data."},iStateID:{label:"$iStateID",documentation:"The state of the part."},hDC:{label:"$hDC",documentation:"Handle to the device context."},hDC_Drawing:{label:"$hDC",documentation:"Handle to the device context to use for drawing."},hDC_Drawing2:{label:"$hDC",documentation:"Handle to the device context to use when drawing."},iFlags:{label:"$iFlags",documentation:"The string's formatting flags (`$DT_`\\*)."},iPartID:{label:"$iPartID",documentation:"The part that has the desired text appearance.".concat(Ce.br,"\n          If this value is 0, the text is drawn in the default font, or a font selected into the device context.")},iPartID_Content:{label:"$iPartID",documentation:"The part that contains the content area."},iPropID:{label:"$iPropID",documentation:"The property to retrieve (`$TMT_`\\*)."},sText:{label:"$sText",documentation:"The string that contains the text to draw."},tRECT:{label:"$tRECT",documentation:"`$tagRECT` structure that contains the rectangle in which the text is to be drawn."}},Ge={_WinAPI_BeginBufferedPaint:{documentation:"Begins a buffered paint operation ".concat(Se),label:"_WinAPI_BeginBufferedPaint ( $hDC, $tTarget, ByRef $hNewDC, [$iFormat] = 0, [$iFlags] = 0, [$tExclude] = 0, [$iAlpha] = -1 )",params:[{label:"$hDC",documentation:"Handle of the target DC on which the buffer will be painted."},{label:"$tTarget",documentation:"`$tagRECT` structure that specifies the area of the target DC in which to paint."},{label:"$hNewDC",documentation:"Handle of the new device context."},{label:"[$iFormat]",documentation:"".concat(Ce.opt," The format of the buffer. This parameter can be one of the following values.").concat(Ce.br).concat(Ce.br,"\n          `$BPBF_COMPATIBLEBITMAP` (Default)").concat(Ce.br,"\n          `$BPBF_DIB`").concat(Ce.br,"\n          `$BPBF_TOPDOWNDIB`").concat(Ce.br,"\n          `$BPBF_TOPDOWNMONODIB`")},{label:"[$iFlags]",documentation:"".concat(Ce.opt," The additional flags, one or more of the following values.").concat(Ce.br,"\n          ").concat(Ce.br,"`$BPPF_ERASE`").concat(Ce.br,"\n          ").concat(Ce.br,"`$BPPF_NOCLIP`").concat(Ce.br,"\n          `$BPPF_NONCLIENT`")},{label:"[$tExclude]",documentation:"".concat(Ce.opt," `$tagRECT` structure that specifies the area which is excluded from the clipping region.")},{label:"[$iAlpha]",documentation:"".concat(Ce.opt," The alpha transparency value to be used on the entire source bitmap.").concat(Ce.br,"\n          If this parameter is not specified or (-1) (Default), the source buffer is copied to the destination with no blending.")}]},_WinAPI_BufferedPaintClear:{documentation:"Clears a specified rectangle in the buffer to ARGB = {0,0,0,0} ".concat(Se),label:"_WinAPI_BufferedPaintClear ( $hBP, [$tRECT] = 0 )",params:[Te.hBP,{label:"$tRECT",documentation:"".concat(Ce.opt," `$tagRECT` structure that specifies the rectangle to clear. If this parameter is 0 (Default), the entire buffer is used.")}]},_WinAPI_BufferedPaintInit:{documentation:"Initialize buffered painting for the current thread ".concat(Se),label:"_WinAPI_BufferedPaintInit ( )",params:[]},_WinAPI_BufferedPaintSetAlpha:{documentation:"Sets the alpha to a specified value in a given rectangle ".concat(Se),label:"_WinAPI_BufferedPaintSetAlpha ( $hBP, [$iAlpha] = 255, [$tRECT] = 0 )",params:[Te.hBP,{label:"$iAlpha",documentation:"".concat(Ce.opt," The alpha value to set. The alpha value can range from zero (fully transparent) to 255 (Default)(fully opaque).")},{label:"$tRECT",documentation:"".concat(Ce.opt," `$tagRECT` structure that specifies the rectangle in which to set the alpha. If this parameter is 0 (Default), the entire buffer is used.")}]},_WinAPI_BufferedPaintUnInit:{documentation:"Closes down buffered painting for the current thread ".concat(Se),label:"_WinAPI_BufferedPaintUnInit ( )",params:[]},_WinAPI_CloseThemeData:{documentation:"Closes the theme data handle ".concat(Se),label:"_WinAPI_CloseThemeData ( $hTheme )",params:[Te.hTheme]},_WinAPI_DrawThemeBackground:{documentation:"Draws the border and fill defined by the visual style for the specified control part ".concat(Se),label:"_WinAPI_DrawThemeBackground ( $hTheme, $iPartID, $iStateID, $hDC, $tRECT, [$tCLIP] = 0 )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part to draw."},{label:"$iStateID",documentation:"The state of the part to draw."},{label:"$hDC",documentation:"Handle to the device context for drawing the theme-defined background image."},{label:"$tRECT",documentation:"`$tagRECT` structure that contains the rectangle in which the background image is drawn."},{label:"$tCLIP",documentation:"".concat(Ce.opt," `$tagRECT` structure that contains a clipping rectangle.")}]},_WinAPI_DrawThemeEdge:{documentation:"Draws one or more edges defined by the visual style of a rectangle ".concat(Se),label:"_WinAPI_DrawThemeEdge ( $hTheme, $iPartID, $iStateID, $hDC, $tRECT, $iEdge, $iFlags, [$tAREA] = 0 )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the rectangle."},Te.iStateID,Te.hDC,{label:"$tRECT",documentation:"`$tagRECT` structure that contains the rectangle."},{label:"$iEdge",documentation:"The type of inner and outer edges to draw.This parameter must be a combination of one inner-border flag and one outer-border flag (`$BDR_`\\*), or one of the combination flags (`$EDGE_`\\*)."},{label:"$iFlags",documentation:"The type of border to draw. It can be a combination of the `$BF_`\\* constants."},{label:"$tAREA",documentation:"".concat(Ce.opt," `$tagRECT` structure that contains the rectangle that receives the interior rectangle, if `$BF_ADJUST` is used.")}]},_WinAPI_DrawThemeIcon:{documentation:"Draws an image from an image list with the icon effect defined by the visual style ".concat(Se),label:"_WinAPI_DrawThemeIcon ( $hTheme, $iPartID, $iStateID, $hDC, $tRECT, $hIL, $iIndex )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part in which the image is drawn."},Te.iStateID,Te.hDC,{label:"$tRECT",documentation:"`$tagRECT` structure that contains the rectangle in which the image is drawn."},{label:"$hIL",documentation:"Handle to an image list that contains the image to draw."},{label:"$iIndex",documentation:"The index of the image to draw."}]},_WinAPI_DrawThemeParentBackground:{documentation:"Draws the part of a parent control that is covered by a partially-transparent or alpha-blended child control ".concat(Se),label:"_WinAPI_DrawThemeParentBackground ( $hWnd, $hDC, [$tRECT] = 0] )",params:[{label:"$hWnd",documentation:"Handle of the child control."},{label:"$hDC",documentation:"Handle to the child control's DC."},{label:"$tRECT",documentation:"".concat(Ce.opt," `$tagRECT` structure that defines the area, in the child window's coordinates, to be drawn.")}]},_WinAPI_DrawThemeText:{documentation:"Draws text using the color and font defined by the visual style ".concat(Se),label:"_WinAPI_DrawThemeText ( $hTheme, $iPartID, $iStateID, $hDC, $sText, $tRECT, $iFlags )",params:[Te.hTheme,Te.iPartID,Te.iStateID,Te.hDC_Drawing,Te.sText,Te.tRECT,Te.iFlags]},_WinAPI_DrawThemeTextEx:{documentation:"Draws text using the color and font defined by the visual style ".concat(Se),label:"_WinAPI_DrawThemeTextEx ( $hTheme, $iPartID, $iStateID, $hDC, $sText, $tRECT, $iFlags, $tDTTOPTS )",params:[Te.hTheme,Te.iPartID,Te.iStateID,Te.hDC_Drawing,Te.sText,Te.tRECT,Te.iFlags,{label:"$tDTTOPTS",documentation:"`$tagDTTOPTS` structure that defines additional formatting options."}]},_WinAPI_EndBufferedPaint:{documentation:"Completes a buffered paint operation and frees the associated buffered paint handle ".concat(Se),label:"_WinAPI_EndBufferedPaint ( $hBP, [$bUpdate] = True )",params:[Te.hBP,{label:"$bUpdate",documentation:"".concat(Ce.opt," Specifies whether copy the buffer to the target DC, valid values:").concat(Ce.br,"\n          `True` - The target DC will be updated from the buffer (Default).").concat(Ce.br,"\n          `False` - The target DC remains unchanged.")}]},_WinAPI_GetBufferedPaintBits:{documentation:"Retrieves a pointer to the buffer bitmap if the buffer is a device-independent bitmap (DIB) ".concat(Se),label:"_WinAPI_GetBufferedPaintBits ( $hBP )",params:[Te.hBP]},_WinAPI_GetBufferedPaintDC:{documentation:"Gets the paint device context (DC) ".concat(Se),label:"_WinAPI_GetBufferedPaintDC ( $hBP )",params:[Te.hBP]},_WinAPI_GetBufferedPaintTargetDC:{documentation:"Retrieves the target device context (DC) ".concat(Se),label:"_WinAPI_GetBufferedPaintTargetDC ( $hBP )",params:[Te.hBP]},_WinAPI_GetBufferedPaintTargetRect:{documentation:"Retrieves the target rectangle ".concat(Se),label:"_WinAPI_GetBufferedPaintTargetRect ( $hBP )",params:[Te.hBP]},_WinAPI_GetCurrentThemeName:{documentation:"Retrieves the name of the current visual styles, color scheme name, and size name ".concat(Se),label:"_WinAPI_GetCurrentThemeName ( )",params:[]},_WinAPI_GetThemeAppProperties:{documentation:"Retrieves the property flags that control how visual styles are applied in the current application ".concat(Se),label:"_WinAPI_GetThemeAppProperties ( )",params:[]},_WinAPI_GetThemeBackgroundContentRect:{documentation:"Retrieves the size of the content area for the background defined by the visual style ".concat(Se),label:"_WinAPI_GetThemeBackgroundContentRect ( $hTheme, $iPartID, $iStateID, $hDC, $tRECT )",params:[Te.hTheme,Te.iPartID_Content,Te.iStateID,Te.hDC_Drawing2,{label:"$tRECT",documentation:"`$tagRECT` structure that contains the total background rectangle. This is the area inside the borders or margins."}]},_WinAPI_GetThemeBackgroundExtent:{documentation:"Calculates the size and location of the background, defined by the visual style, given the content area ".concat(Se),label:"_WinAPI_GetThemeBackgroundExtent ( $hTheme, $iPartID, $iStateID, $hDC, $tRECT )",params:[Te.hTheme,Te.iPartID_Content,Te.iStateID,Te.hDC_Drawing2,{label:"$tRECT",documentation:"`$tagRECT` structure that contains the content background rectangle."}]},_WinAPI_GetThemeBackgroundRegion:{documentation:"Computes the region for a regular or partially transparent background that is bounded by a specified rectangle ".concat(Se),label:"_WinAPI_GetThemeBackgroundRegion ( $hTheme, $iPartID, $iStateID, $hDC, $tRECT )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the region."},Te.iStateID,{label:"$hDC",documentation:"Handle to the device context to draw into."},{label:"$tRECT",documentation:"`$tagRECT` structure that contains the specified rectangle used to compute the region."}]},_WinAPI_GetThemeBitmap:{documentation:"Retrieves the bitmap associated with a particular theme, part, state, and property ".concat(Se),label:"_WinAPI_GetThemeBitmap ( $hTheme, $iPartID, $iStateID, $iPropID, [$iFlag] = 0x01 )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the bitmap."},Te.iStateID,{label:"$iPropID",documentation:"The property to retrieve. Set this parameter to 0 to automatically select\n        the first available bitmap for this part and state, or use one of the following values.".concat(Ce.br,"\n        `$TMT_DIBDATA`").concat(Ce.br,"\n        `$TMT_GLYPHDIBDATA`").concat(Ce.br,"\n        `$TMT_HBITMAP`")},{label:"$iFlag",documentation:"".concat(Ce.opt," This parameter can be one of the following values.").concat(Ce.br,"\n          `$GBF_DIRECT`").concat(Ce.br,"\n          `$GBF_COPY`").concat(Ce.br,"\n          `$GBF_VALIDBITS`")}]},_WinAPI_GetThemeBool:{documentation:"Retrieves the value of a BOOL property from the SysMetrics section of theme data ".concat(Se),label:"_WinAPI_GetThemeBool ( $hTheme, $iPartID, $iStateID, $iPropID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the BOOL property."},Te.iStateID,{label:"$iPropID",documentation:"The property to retrieve. It can be one of the following values.".concat(Ce.br,"\n          `$TMT_TRANSPARENT`").concat(Ce.br,"\n`$TMT_AUTOSIZE`").concat(Ce.br,"\n`$TMT_BORDERONLY`").concat(Ce.br,"\n          `$TMT_COMPOSITED`").concat(Ce.br,"\n`$TMT_BGFILL`").concat(Ce.br,"\n`$TMT_GLYPHTRANSPARENT`").concat(Ce.br,"\n          `$TMT_GLYPHONLY`").concat(Ce.br,"\n`$TMT_ALWAYSSHOWSIZINGBAR`").concat(Ce.br,"\n`$TMT_MIRRORIMAGE`").concat(Ce.br,"\n          `$TMT_UNIFORMSIZING`").concat(Ce.br,"\n`$TMT_INTEGRALSIZING`").concat(Ce.br,"\n`$TMT_SOURCEGROW`").concat(Ce.br,"\n          `$TMT_SOURCESHRINK`").concat(Ce.br,"\n`$TMT_USERPICTURE`")}]},_WinAPI_GetThemeColor:{documentation:"Retrieves the value of a color property ".concat(Se),label:"_WinAPI_GetThemeColor ( $hTheme, $iPartID, $iStateID, $iPropID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the color property."},Te.iStateID,Te.iPropID]},_WinAPI_GetThemeDocumentationProperty:{documentation:"Retrieves the value for a theme property from the documentation section of the\n      specified theme file ".concat(Se),label:"_WinAPI_GetThemeDocumentationProperty ( $sFilePath, $sProperty )",params:[{label:"$sFilePath",documentation:"The name of the theme file that will be opened to query for the property."},{label:"$sProperty",documentation:"The name of the theme property to query. This parameter can be one of the\n          following values.".concat(Ce.br,"\n`$SZ_THDOCPROP_AUTHOR`").concat(Ce.br,"\n`$SZ_THDOCPROP_CANONICALNAME`\n          ").concat(Ce.br,"`$SZ_THDOCPROP_DISPLAYNAME`").concat(Ce.br,"\n`$SZ_THDOCPROP_TOOLTIP`")}]},_WinAPI_GetThemeEnumValue:{documentation:"Retrieves the value of an enumerated type property ".concat(Se),label:"_WinAPI_GetThemeEnumValue ( $hTheme, $iPartID, $iStateID, $iPropID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the enumerated type property."},Te.iStateID,Te.iPropID]},_WinAPI_GetThemeFilename:{documentation:"Retrieves the value of a filename property ".concat(Se),label:"_WinAPI_GetThemeFilename ( $hTheme, $iPartID, $iStateID, $iPropID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the filename property."},Te.iStateID,Te.iPropID]},_WinAPI_GetThemeFont:{documentation:"Retrieves the value of a font property",label:"_WinAPI_GetThemeFont ( $hTheme, $iPartID, $iStateID, $iPropID, [$hDC] = 0 )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the font property."},Te.iStateID,Te.iPropID,{label:"$hDC",documentation:"".concat(Ce.opt," Handle to the device context.")}]},_WinAPI_GetThemeInt:{documentation:"Retrieves the value of an INT property ".concat(Se),label:"_WinAPI_GetThemeInt ( $hTheme, $iPartID, $iStateID, $iPropID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the INT property."},Te.iStateID,Te.iPropID]},_WinAPI_GetThemeMargins:{documentation:"Retrieves the value of a margins property ".concat(Se),label:"_WinAPI_GetThemeMargins ( $hTheme, $iPartID, $iStateID, $iPropID, $hDC, $tRECT )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the MARGINS property."},Te.iStateID,Te.iPropID,{label:"$hDC",documentation:"Handle to a device context to select fonts into."},{label:"$tRECT",documentation:"$tagRECT structure that contains the rectangle that specifies the area to be drawn into."}]},_WinAPI_GetThemeMetric:{documentation:"Retrieves the value of a metric property ".concat(Se),label:"_WinAPI_GetThemeMetric ( $hTheme, $iPartID, $iStateID, $iPropID, [$hDC] = 0 )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the metric property."},Te.iStateID,{label:"$iPropID",documentation:"The property to retrieve. It can be one of the following values.".concat(Ce.br,"\n          `$TMT_ALPHALEVEL`").concat(Ce.br,"\n`$TMT_ALPHATHRESHOLD`").concat(Ce.br,"\n`$TMT_BORDERSIZE`").concat(Ce.br,"\n          `$TMT_GLYPHINDEX`").concat(Ce.br,"\n`$TMT_GRADIENTRATIO1`").concat(Ce.br,"\n`$TMT_GRADIENTRATIO2`").concat(Ce.br,"\n          `$TMT_GRADIENTRATIO3`").concat(Ce.br,"\n`$TMT_GRADIENTRATIO4`").concat(Ce.br,"\n`$TMT_GRADIENTRATIO5`").concat(Ce.br,"\n          `$TMT_HEIGHT`").concat(Ce.br,"\n`$TMT_IMAGECOUNT`").concat(Ce.br,"\n`$TMT_MINDPI1`").concat(Ce.br,"\n`$TMT_MINDPI2`").concat(Ce.br,"\n          `$TMT_MINDPI3`").concat(Ce.br,"\n`$TMT_MINDPI4`").concat(Ce.br,"\n`$TMT_MINDPI5`").concat(Ce.br,"\n          `$TMT_PROGRESSCHUNKSIZE`").concat(Ce.br,"\n`$TMT_PROGRESSSPACESIZE`").concat(Ce.br,"\n`$TMT_ROUNDCORNERWIDTH`").concat(Ce.br,"\n          `$TMT_ROUNDCORNERHEIGHT`").concat(Ce.br,"\n`$TMT_SATURATION`").concat(Ce.br,"\n`$TMT_TEXTBORDERSIZE`").concat(Ce.br,"\n          `$TMT_TRUESIZESTRETCHMARK`").concat(Ce.br,"\n`$TMT_WIDTH`")},{label:"$hDC",documentation:"".concat(Ce.opt," Handle to the device context.")}]},_WinAPI_GetThemePartSize:{documentation:"Calculates the original size of the part defined by a visual style ".concat(Se),label:"_WinAPI_GetThemePartSize ( $hTheme, $iPartID, $iStateID, $hDC, $tRECT, $iType )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part part to calculate the size of."},Te.iStateID,{label:"$hDC",documentation:"Handle to a device context to select fonts into."},{label:"$tRECT",documentation:"`$tagRECT` structure that contains the rectangle used for the part drawing destination."},{label:"$iType",documentation:"The type of size to retrieve. This parameter can be one of the following\n          values.".concat(Ce.br,"\n`$TS_MIN`").concat(Ce.br,"\n`$TS_TRUE`").concat(Ce.br,"\n`$TS_DRAW`")}]},_WinAPI_GetThemePosition:{documentation:"Retrieves the value of a position property ".concat(Se),label:"_WinAPI_GetThemePosition ( $hTheme, $iPartID, $iStateID, $iPropID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the position property."},Te.iStateID,Te.iPropID]},_WinAPI_GetThemePropertyOrigin:{documentation:"Retrieves the location of the theme property definition for a property ".concat(Se),label:"_WinAPI_GetThemePropertyOrigin ( $hTheme, $iPartID, $iStateID, $iPropID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the theme."},Te.iStateID,Te.iPropID]},_WinAPI_GetThemeRect:{documentation:"Retrieves the value of a RECT property ".concat(Se),label:"_WinAPI_GetThemeRect ( $hTheme, $iPartID, $iStateID, $iPropID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part containing the RECT property."},Te.iStateID,Te.iPropID]},_WinAPI_GetThemeString:{documentation:"Retrieves the value of a string property ".concat(Se),label:"_WinAPI_GetThemeString ( $hTheme, $iPartID, $iStateID, $iPropID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part that contains the string property."},Te.iStateID,Te.iPropID]},_WinAPI_GetThemeSysBool:{documentation:"Retrieves the Boolean value of a system metric ".concat(Se),label:"_WinAPI_GetThemeSysBool ( $hTheme, $iBoolID )",params:[Te.hTheme2,{label:"$iBoolID",documentation:"The value that specifies the system Boolean metric desired. It may be the following\n          value.".concat(Ce.br,"\n`$TMT_FLATMENUS`")}]},_WinAPI_GetThemeSysColor:{documentation:"Retrieves the value of a system color ".concat(Se),label:"_WinAPI_GetThemeSysColor ( $hTheme, $iColorID )",params:[Te.hTheme2,{label:"$iColorID",documentation:"The value that specifies the color number. It may be one of the `$COLOR_`* constants."}]},_WinAPI_GetThemeSysColorBrush:{documentation:"Retrieves a system color brush ".concat(Se),label:"_WinAPI_GetThemeSysColorBrush ( $hTheme, $iColorID )",params:[Te.hTheme2,{label:"$iColorID",documentation:"The value that specifies the number of the desired system color. It may be\n          one of the following values.".concat(Ce.br,"\n`$TMT_SCROLLBAR`").concat(Ce.br,"\n`$TMT_BACKGROUND`").concat(Ce.br,"\n          `$TMT_ACTIVECAPTION`").concat(Ce.br,"\n`$TMT_INACTIVECAPTION`").concat(Ce.br,"\n          `$TMT_WINDOW`").concat(Ce.br,"\n`$TMT_WINDOWFRAME`").concat(Ce.br,"\n`$TMT_MENUTEXT`").concat(Ce.br,"\n          `$TMT_WINDOWTEXT`").concat(Ce.br,"\n          `$TMT_CAPTIONTEXT`").concat(Ce.br,"\n`$TMT_ACTIVEBORDER`").concat(Ce.br,"\n`$TMT_INACTIVEBORDER`").concat(Ce.br,"\n          `$TMT_APPWORKSPACE`").concat(Ce.br,"\n`$TMT_HIGHLIGHT`").concat(Ce.br,"\n`$TMT_HIGHLIGHTTEXT`").concat(Ce.br,"\n          `$TMT_BTNFACE`").concat(Ce.br,"\n`$TMT_BTNSHADOW`").concat(Ce.br,"\n`$TMT_GRAYTEXT`").concat(Ce.br,"\n`$TMT_BTNTEXT`").concat(Ce.br,"\n          `$TMT_INACTIVECAPTIONTEXT`").concat(Ce.br,"\n`$TMT_BTNHIGHLIGHT`").concat(Ce.br,"\n`$TMT_DKSHADOW3D`").concat(Ce.br,"\n          `$TMT_LIGHT3D`").concat(Ce.br,"\n`$TMT_INFOTEXT`").concat(Ce.br,"\n`$TMT_INFOBK`").concat(Ce.br,"\n          `$TMT_BUTTONALTERNATEFACE`").concat(Ce.br,"\n`$TMT_HOTTRACKING`").concat(Ce.br,"\n          `$TMT_GRADIENTACTIVECAPTION`").concat(Ce.br,"\n`$TMT_GRADIENTINACTIVECAPTION`").concat(Ce.br,"\n          `$TMT_MENUHILIGHT`").concat(Ce.br,"\n`$TMT_MENUBAR`")}]},_WinAPI_GetThemeSysFont:{documentation:"Retrieves the font information of a system font ".concat(Se),label:"_WinAPI_GetThemeSysFont ( $hTheme, $iFontID )",params:[Te.hTheme2,{label:"$iFontID",documentation:"The value that specifies a system font. It may be one of the following\n          values.".concat(Ce.br,"\n`$TMT_CAPTIONFONT`").concat(Ce.br,"\n`$TMT_SMALLCAPTIONFONT`").concat(Ce.br,"\n          `$TMT_MENUFONT`").concat(Ce.br,"\n`$TMT_STATUSFONT`").concat(Ce.br,"\n`$TMT_MSGBOXFONT`").concat(Ce.br,"\n          `$TMT_ICONTITLEFONT`")}]},_WinAPI_GetThemeSysInt:{documentation:"Retrieves the value of a system INT ".concat(Se),label:"_WinAPI_GetThemeSysInt ( $hTheme, $iIntID )",params:[Te.hTheme2,{label:"$iIntID",documentation:"The value that specifies the desired system INT. It may be the following\n          value.".concat(Ce.br,"\n`$TMT_MINCOLORDEPTH`")}]},_WinAPI_GetThemeSysSize:{documentation:"Retrieves the value of a system size metric from theme data ".concat(Se),label:"_WinAPI_GetThemeSysSize ( $hTheme, $iSizeID )",params:[Te.hTheme2,{label:"$iSizeID",documentation:"The value that specifies the system size metric desired. The following\n          values are valid.".concat(Ce.br,"\n`$SM_CXBORDER`").concat(Ce.br,"\n`$SM_CXVSCROLL`").concat(Ce.br,"\n`$SM_CXHSCROLL`").concat(Ce.br,"\n          `$SM_CXSIZE`").concat(Ce.br,"\n`$SM_CYSIZE`").concat(Ce.br,"\n`$SM_CXSMSIZE`").concat(Ce.br,"\n`$SM_CYSMSIZE`").concat(Ce.br,"\n          `$SM_CXMENUSIZE`").concat(Ce.br,"\n`$SM_CYMENUSIZE`").concat(Ce.br,"\n`$SM_CXPADDEDBORDER`")}]},_WinAPI_GetThemeSysString:{documentation:"Retrieves the value of a system string ".concat(Se),label:"_WinAPI_GetThemeSysString ( $hTheme, $iStringID )",params:[Te.hTheme2,{label:"$iStringID",documentation:"The value that specifies a system string. It may be one of the following\n          values.".concat(Ce.br,"\n`$TMT_CSSNAME`").concat(Ce.br,"\n`$TMT_XMLNAME`")}]},_WinAPI_GetThemeTextExtent:{documentation:"Calculates the size and location of the specified text when rendered in the visual style font ".concat(Se),label:"_WinAPI_GetThemeTextExtent ( $hTheme, $iPartID, $iStateID, $hDC, $sText, $tRECT, $iFlags )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part in which the text will be drawn."},Te.iStateID,{label:"$hDC",documentation:"Handle to the device context to select the font into."},Te.sText,{label:"$tRECT",documentation:"`$tagRECT` structure that contains the rectangle used to control layout of the text. This parameter may be set to 0."},{label:"$iFlags",documentation:"The string's formatting flags (`$DT_`\\*)."}]},_WinAPI_GetThemeTextMetrics:{documentation:"Retrieves information about the font specified by a visual style for a\n      particular part ".concat(Se),label:"_WinAPI_GetThemeTextMetrics ( $hTheme, $iPartID, $iStateID, [$hDC] = 0 )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part to retrieve font information about."},Te.iStateID,{label:"$hDC",documentation:"".concat(Ce.opt," Handle to the device context to use for screen context.")}]},_WinAPI_GetThemeTransitionDuration:{documentation:"Gets the duration for the specified transition ".concat(Se),label:"_WinAPI_GetThemeTransitionDuration ( $hTheme, $iPartID, $iStateIDFrom, $iStateIDTo, $iPropID )",params:[{label:"$hTheme",documentation:"Handle of the theme data."},{label:"$iPartID",documentation:"ID of the part."},{label:"$iStateIDFrom",documentation:"The state ID of the part before the transition."},{label:"$iStateIDTo",documentation:"The state ID of the part after the transition."},{label:"$iPropID",documentation:"The property ID (`$TMT_`\\*)."}]},_WinAPI_GetWindowTheme:{documentation:"Retrieves a theme handle to a window that has visual styles applied ".concat(Se),label:"_WinAPI_GetWindowTheme ( $hWnd )",params:[{label:"$hWnd",documentation:"Handle to the window."}]},_WinAPI_IsThemeActive:{documentation:"Tests if a visual style for the current application is active ".concat(Se),label:"_WinAPI_IsThemeActive (  )",params:[]},_WinAPI_IsThemeBackgroundPartiallyTransparent:{documentation:"Retrieves whether the background specified by the visual style has transparent pieces or alpha-blended pieces ".concat(Se),label:"_WinAPI_IsThemeBackgroundPartiallyTransparent ( $hTheme, $iPartID, $iStateID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part."},Te.iStateID]},_WinAPI_IsThemePartDefined:{documentation:"Retrieves whether a visual style has defined parameters for the specified part ".concat(Se),label:"_WinAPI_IsThemePartDefined ( $hTheme, $iPartID )",params:[Te.hTheme,{label:"$iPartID",documentation:"The part."}]},_WinAPI_OpenThemeData:{documentation:"Opens the theme data for a window and its associated class ".concat(Se),label:"_WinAPI_OpenThemeData ( $hWnd, $sClass )",params:[{label:"$hWnd",documentation:"Handle of the window for which theme data is required."},{label:"$sClass",documentation:"The string that contains a semicolon-separated list of classes. This\n          parameter may contain a list, not just a single name, to provide the class an opportunity\n          to get the best match between the class and the current visual style."}]},_WinAPI_SetThemeAppProperties:{documentation:"Sets the flags that determine how visual styles are implemented in the calling application ".concat(Se),label:"_WinAPI_SetThemeAppProperties ( $iFlags )",params:[{label:"$iFlags",documentation:"This parameter can be one or more of the following values.".concat(Ce.br,"\n          `$STAP_ALLOW_NONCLIENT`").concat(Ce.br,"\n`$STAP_ALLOW_CONTROLS`").concat(Ce.br,"\n`$STAP_ALLOW_WEBCONTENT`")}]},_WinAPI_SetWindowTheme:{documentation:"Causes a window to use a different set of visual style information than its class normally uses ".concat(Se),label:"_WinAPI_SetWindowTheme ( $hWnd, [$sName] = 0, [$sList] = 0 )",params:[{label:"$hWnd",documentation:"Handle to the window whose visual style information is to be changed."},{label:"$sName",documentation:"".concat(Ce.opt," A string that contains the application name. If this parameter is 0\n          (Default), the calling application's name is used.")},{label:"$sList",documentation:"".concat(Ce.opt," A string that contains a semicolon-separated list of CLSID names to\n          use in place of the actual list passed by the window's class. If this parameter is 0\n          (Default), the ID list from the calling class is used.")}]}},Pe=(0,Ce.signatureToHover)(Ge),we="(Requires: `#include <WinNet.au3>`)",ye={label:"[$iOptions]",documentation:"".concat(Ce.opt," Connection options. Can be one or more of the following:\n                ").concat(Ce.valueFirstHeader,"\n                `1`|-|The network resource connection should be remembered\n                `2`|-|The operating system may interact with the user for authentication purposes\n                `4`|-|The system not to use any default setting for user names or passwords without offering the user the opportunity to supply an alternative. This flag is ignored unless bit 2 (interactive) is also set.\n                `8`|-|Forces the redirection of a local device when making the connection\n                `16`|-|The operating system prompts the user for authentication using the command line instead of a GUI. This flag is ignored unless bit 2 (interactive) is also set.\n                `32`|-|If this bit is set, and the operating system prompts for a credential, the credential is saved by the credential manager. If the credential manager is disabled for the caller's logon session, or if the network provider does not support saving credentials, this flag is ignored. This flag is also ignored unless you setbit 5 (command line instead of GUI).")},Ae={_WinNet_AddConnection:{documentation:"Connects a local device to a network resource ".concat(we),label:"_WinNet_AddConnection ( $sLocalName, $sRemoteName, [$sPassword] )",params:[{label:"$sLocalName",documentation:'Name of a local device to be redirected, such as "F:" or "LPT1".'.concat(Ce.br,"\n                The string is treated in a case-insensitive manner.").concat(Ce.br,"\n                If the `Null` keyword or an empty, a connection to the network resource is made without redirecting the local device.")},{label:"$sRemoteName",documentation:"Name of the network resource to connect to"},{label:"[$sPassword]",documentation:"".concat(Ce.opt," Password to be used to make a connection.").concat(Ce.br,"\n                This parameter is usually the password associated with the current user.").concat(Ce.br,"\n                If `0`, the default password is used.").concat(Ce.br,"\n                If the string is empty, no password is used.")}]},_WinNet_AddConnection2:{documentation:"Connects a local device to a network resource ".concat(we),label:"_WinNet_AddConnection2 ( $sLocalName, $sRemoteName, [$sUserName], [$sPassword], [$iType], [$iOptions] )",params:[{label:"$sLocalName",documentation:'Name of a local device to be redirected, such as "F:" or "LPT1".'.concat(Ce.br,"\n                The string is treated in a case-insensitive manner.").concat(Ce.br,"\n                If the `Null` keyword or an empty, a connection to the network resource is made without redirecting the local device.")},{label:"$sRemoteName",documentation:"Name of the network resource to connect to"},{label:"[$sUserName]",documentation:"".concat(Ce.opt," User name for making the connection. If `0`, the function uses the default user name.")},{label:"[$sPassword]",documentation:"".concat(Ce.opt," Password to be used to make a connection. If `0`, the default password is used. If the string is empty, no password is used.")},{label:"[$iType]",documentation:"".concat(Ce.opt," Specifies the type of network resource to connect to:\n                ").concat(Ce.valueFirstHeader,"\n                `0`|-|Any (only if `$sLocalName` is `0`)\n                `1`|-|Disk\n                `2`|-|Print")},ye]},_WinNet_AddConnection3:{documentation:"Connects a local device to a network resource ".concat(we),label:"_WinNet_AddConnection3 ( $hWnd, $sLocalName, $sRemoteName, [$sUserName], [$sPassword], [$iType], [$iOptions] )",params:[{label:"$hWnd",documentation:"Handle to a window that the provider of network resources can use as an owner window for dialogs. Use this parameter if you set bit 2 (interactive) in the Options parameter. This parameter can be `0`."},{label:"$sLocalName",documentation:'Name of a local device to be redirected, such as "F:" or "LPT1". The string is treated in a case-insensitive manner. If the `Null` keyword or an empty, a connection to the network resource is made without redirecting the local device.'},{label:"$sRemoteName",documentation:"Name of the network resource to connect to"},{label:"[$sUserName]",documentation:"".concat(Ce.opt," User name for making the connection. If `0`, the function uses the default user name.")},{label:"[$sPassword]",documentation:"".concat(Ce.opt," Password to be used to make a connection. If `0`, the default password is used. If the string is empty, no password is used.")},{label:"[$iType]",documentation:"".concat(Ce.opt," Specifies the type of network resource to connect to:\n                ").concat(Ce.valueFirstHeader,"\n                `0`|-|Any (only if `$sLocalName` is `0`)\n                `1`|-|Disk\n                `2`|-|Print")},ye]},_WinNet_CancelConnection:{documentation:"Cancels an existing network connection ".concat(we),label:"_WinNet_CancelConnection ( $sName, [$bForce] )",params:[{label:"$sName",documentation:"Name of either the redirected local device or the remote network resource to disconnect from.".concat(Ce.br,"\n                When this parameter specifies a redirected local device, the function cancels only the specified device redirection.").concat(Ce.br,"\n                If the parameter specifies a remote network resource, only the connections to remote networks without devices are cancelled.")},{label:"[$bForce]",documentation:"".concat(Ce.opt," Specifies whether or not the disconnection should occur if there are open files or jobs on the connection.").concat(Ce.br,"\n                If this parameter is `False`, the function fails if there are open files or jobs.")}]},_WinNet_CancelConnection2:{documentation:"Cancels an existing network connection ".concat(we),label:"_WinNet_CancelConnection2 ( $sName, [$bUpdate], [$bForce] )",params:[{label:"$sName",documentation:"Name of either the redirected local device or the remote network resource to disconnect from.".concat(Ce.br,"\n                When this parameter specifies a redirected local device, the function cancels only the specified device redirection.").concat(Ce.br,"\n                If the parameter specifies a remote network resource, only the connections to remote networks without devices are cancelled.")},{label:"[$bUpdate]",documentation:"".concat(Ce.opt," If `True`, the users profile is updated with the information that the connection is no longer a persistent one.")},{label:"[$bForce]",documentation:"".concat(Ce.opt," Specifies whether or not the disconnection should occur if there are open files or jobs on the connection.").concat(Ce.br,"\n                If this parameter is `False`, the function fails if there are open files or jobs.")}]},_WinNet_CloseEnum:{documentation:"Ends a network resource enumeration started by a call to `_WinNet_OpenEnum()` ".concat(we),label:"_WinNet_CloseEnum ( $hEnum )",params:[{label:"$hEnum",documentation:"Handle that identifies an enumeration instance. The handle is returned by the `_WinNet_OpenEnum()` function"}]},_WinNet_ConnectionDialog:{documentation:"Starts a general browsing dialog box for connecting to network resources ".concat(we),label:"_WinNet_ConnectionDialog ( $hWnd )",params:[{label:"$hWnd",documentation:"Handle to the owner window for the dialog box"}]},_WinNet_ConnectionDialog1:{documentation:"Starts a general browsing dialog box for connecting to network resources ".concat(we),label:"_WinNet_ConnectionDialog1 ( $hWnd, [$sRemoteName], [$iFlags] )",params:[{label:"$hWnd",documentation:"Handle to the owner window for the dialog box"},{label:"$sRemoteName",documentation:"".concat(Ce.opt," Name of the network resource to connect to")},{label:"$iFlags",documentation:"".concat(Ce.opt," Dialog box options. Can be one or more of the following:\n                ").concat(Ce.valueFirstHeader,"\n                |`1`|-|Display a read-only path instead of allowing the user to type in a path\n                `2`|-|Enter the most recently used paths into the combination box\n                `4`|-|Do not show the restore the connection at logon checkbox\n                `8`|-|Restore the connection at logon\n                `16`|-|Do not restore the connection at logon")}]},_WinNet_DisconnectDialog:{documentation:"Starts a general browsing dialog box for disconnecting from network resources ".concat(we),label:"_WinNet_DisconnectDialog ( $hWnd )",params:[{label:"$hWnd",documentation:"Handle to the owner window for the dialog box"}]},_WinNet_DisconnectDialog1:{documentation:"Starts a general browsing dialog box for disconnecting from network resources ".concat(we),label:"_WinNet_DisconnectDialog1 ( $hWnd, $sLocalName, [$sRemoteName], [$iFlags] )",params:[{label:"$hWnd",documentation:"Handle to the owner window for the dialog box"},{label:"$sLocalName",documentation:'Name of a local device, such as "F:" or "LPT1"'},{label:"[$sRemoteName]",documentation:"".concat(Ce.opt," Name of the network resource to disconnect. This member can be `0` if `$LocalName` is specified.").concat(Ce.br,"\n                When `$sLocalName` is specified, the connection to the network resource redirected from `$sLocalName` is disconnected.")},{label:"[$iFlags]",documentation:"".concat(Ce.opt," Flags describing the connection. Can be a combination of:\n                ").concat(Ce.valueFirstHeader,"\n                `1`|-|If this value is set, the specified connection is no longer a persistent one. This flag is valid only if `$sLocalName` specifies a local device.\n                |  |\n                `2`|-|If this value is NOT set, the system applies force when disconnecting")}]},_WinNet_EnumResource:{documentation:"Continues an enumeration of network resources ".concat(we),label:"_WinNet_EnumResource ( $hEnum, ByRef $iCount, $pBuffer, ByRef $iBufSize )",params:[{label:"$hEnum",documentation:"Handle that identifies an enumeration instance. The handle is returned by the `_WinNet_OpenEnum()` function."},{label:"$iCount",documentation:"Number of entries requested. If the number requested is `–1`, the function returns as many entries as possible.".concat(Ce.br,"\n                If the function succeeds, on return the variable contains the number of entries actually read.")},{label:"$pBuffer",documentation:"Pointer to the buffer that receives the enumeration results.".concat(Ce.br,"\n                The results are returned as an array of `$tagNETRESOURCE` structures.").concat(Ce.br,"\n                The buffer must be large enough to hold the structures plus the strings to which their members point.").concat(Ce.br,"\n                The buffer is valid until the next call using the handle specified by `$hEnum`.").concat(Ce.br,"\n                The order of `$tagNETRESOURCE` structures in the array is not predictable.")},{label:"$iBufSize",documentation:"The size of the buffer, in bytes.".concat(Ce.br,"\n                If the buffer is too small to receive even one entry, this parameter receives the required size of the buffer.")}]},_WinNet_GetConnection:{documentation:"Retrieves the name of the network resource associated with a local device ".concat(we),label:"_WinNet_GetConnection ( $sLocalName )",params:[{label:"$sLocalName",documentation:"The name of the local device to get the network name for"}]},_WinNet_GetConnectionPerformance:{documentation:"Returns information about the performance of a network connection resource ".concat(we),label:"_WinNet_GetConnectionPerformance ( $sLocalName, $sRemoteName )",params:[{label:"$sLocalName",documentation:'Name of a local device, such as "F:" or "LPT1", that is redirected to a network resource to be queried.'.concat(Ce.br,"\n                If blank, the network resource is specified in `$sRemoteName`.").concat(Ce.br,"\n                If this parameter specifies a local device `$sRemoteName` is ignored.")},{label:"$sRemoteName",documentation:"Name of the network resource to query.".concat(Ce.br,"\n                The resource must currently have an established connection.").concat(Ce.br,"\n                For example, if the resource is a file on a file server, then having the file open will ensure the connection.")}]},_WinNet_GetLastError:{documentation:"Retrieves the most recent extended error ".concat(we),label:"_WinNet_GetLastError ( ByRef $iError, ByRef $sError, ByRef $sName )",params:[{label:"$iError",documentation:"On return, contains the most recent extended error code"},{label:"$sError",documentation:"On return, contains the most recent extended error code message"},{label:"$sName",documentation:"On return, the network provider that raised the error"}]},_WinNet_GetNetworkInformation:{documentation:"Returns extended information about a specific network provider ".concat(we),label:"_WinNet_GetNetworkInformation ( $sName )",params:[{label:"$sName",documentation:"The network provider for which information is required"}]},_WinNet_GetProviderName:{documentation:"Obtains the provider name for a specific type of network ".concat(we),label:"_WinNet_GetProviderName ( $iType )",params:[{label:"$iType",documentation:"Network type that is unique to the network"}]},_WinNet_GetResourceInformation:{documentation:"Identifies the network provider that owns the resource ".concat(we),label:"_WinNet_GetResourceInformation ( $sRemoteName, [$sProvider], [$iType] )",params:[{label:"$sRemoteName",documentation:"The remote path name of the resource"},{label:"[$sProvider]",documentation:"".concat(Ce.opt," The name of the provider that owns the resource.").concat(Ce.br,"\n                This member can be blank if the provider name is unknown.")},{label:"[$iType]",documentation:"".concat(Ce.opt," Type of resource.").concat(Ce.br,"\n                This member can be `0` if it is not known.")}]},_WinNet_GetResourceParent:{documentation:"Returns the parent of a network resource in the network browse hierarchy ".concat(we),label:"_WinNet_GetResourceParent ( $sRemoteName, $sProvider, [$iType] )",params:[{label:"$sRemoteName",documentation:"The remote path name of the resource"},{label:"$sProvider",documentation:"The name of the provider that owns the resource"},{label:"[$iType]",documentation:"".concat(Ce.opt," Type of resource.").concat(Ce.br,"\n                This member can be `0` if it is not known.")}]},_WinNet_GetUniversalName:{documentation:"Converts drived based path to universal form ".concat(we),label:"_WinNet_GetUniversalName ( $sLocalPath )",params:[{label:"$sLocalPath",documentation:"Drive based path for a network resource"}]},_WinNet_GetUser:{documentation:"Retrieves the default user name, or the user name used to establish a connection",label:"_WinNet_GetUser ( $sName )",params:[{label:"$sName",documentation:"Either the name of a local device that has been redirected to a network resource, or the remote name of a network resource to which a connection has been made without redirecting a local device.".concat(Ce.br,"\n                If blank, the system returns the name of the current user for the process.")}]},_WinNet_OpenEnum:{documentation:"Starts an enumeration of network resources or existing connections ".concat(we),label:"_WinNet_OpenEnum ( $iScope, $iType, $iUsage, $tResource, ByRef $hEnum )",params:[{label:"$iScope",documentation:"Scope of the enumeration:".concat(Ce.br,"\n                ").concat(Ce.valueFirstHeader,"\n                `0`|-|Enumerate all currently connected resources\n                `1`|-|Enumerate all resources on the network\n                `2`|-|Enumerate all remembered (persistent) connections\n                `3`|-|Enumerate only resources in the network context of the caller")},{label:"$iType",documentation:"Resource types:".concat(Ce.br,"\n                ").concat(Ce.valueFirstHeader,"\n                `0`|-|All resources\n                `1`|-|Disk resources\n                `2`|-|Print resources")},{label:"$iUsage",documentation:"Resource usage types:".concat(Ce.br,"\n                ").concat(Ce.valueFirstHeader,"\n                `0`|-|All resources\n                `1`|-|All connectable resources\n                `2`|-|All container resources\n                `4`|-|Forces the function to fail if the user is not authenticated")},{label:"$tResource",documentation:"a `$tagNETRESOURCE` structure that specifies the container to enumerate or a pointer to it.".concat(Ce.br,"\n                If `$iScope` is not `1`, this must be `0`. ").concat(Ce.br,"\n                If `0`, the root of the network is assumed.")},{label:"$hEnum",documentation:"On return, a handle that can be used in calls to `_WinNet_EnumResource()`"}]},_WinNet_RestoreConnection:{documentation:"Restores the connection to a network resource ".concat(we),label:"_WinNet_RestoreConnection ( [$sDevice], [$hWnd], [$bUseUI] )",params:[{label:"[$sDevice]",documentation:"".concat(Ce.opt,' The local name of the drive to connect to, such as "Z:".').concat(Ce.br,"\n                If blank, the function reconnects all persistent drives stored in the registry for the current user.")},{label:"[$hWnd]",documentation:"".concat(Ce.opt," Handle to the parent window that the function uses to display the user interface that prompts the user for a name and password when making the network connection.").concat(Ce.br,"\n                If `0`, there is no owner window.")},{label:"[$bUseUI]",documentation:"".concat(Ce.opt," If `True`, display a username/password prompt to the caller")}]},_WinNet_UseConnection:{documentation:"Connects a local device to a network resource ".concat(we),label:"_WinNet_UseConnection ( $hWnd, $sLocalName, $sRemoteName, [$sUserName], [$sPassword], [$iType], [$iOptions] )",params:[{label:"$hWnd",documentation:"Handle to a window that the provider of network resources can use as an owner window for dialogs.".concat(Ce.br,"\n                Use this parameter if you set bit 2 (interactive) in the Options parameter.").concat(Ce.br,"\n                This parameter can be `0`.")},{label:"$sLocalName",documentation:'Name of a local device to be redirected, such as "F:" or "LPT1".'.concat(Ce.br,"\n                The string is treated in a case-insensitive manner.").concat(Ce.br,"\n                If `0`, a connection to the network resource is made without redirecting the local device.")},{label:"$sRemoteName",documentation:"Name of the network resource to connect to"},{label:"[$sUserName]",documentation:"".concat(Ce.opt," User name for making the connection.").concat(Ce.br,"\n                If `0`, the function uses the default user name.")},{label:"[$sPassword]",documentation:"".concat(Ce.opt," Password to be used to make a connection.").concat(Ce.br,"\n                If `0`, the default password is used. If the string is empty, no password is used.")},{label:"[$iType]",documentation:"".concat(Ce.opt," Specifies the type of network resource to connect to:\n                ").concat(Ce.valueFirstHeader,"\n                `0`|-|Any (only if $sLocalName is blank)\n                `1`|-|Disk\n                `2`|-|Print")},ye]}},De=(0,Ce.signatureToHover)(Ae),We=(0,Ce.signatureToCompletion)(Ae,t.CompletionItemKind.Function,we),Ee="(Requires: `#include <Word.au3>`)",Re={_Word_Create:{documentation:"Connects to an existing Word instance or creates a new Word application object",label:"_Word_Create ( [$bVisible], [$bForceNew] )",params:[{label:"[$bVisible]",documentation:"".concat(Ce.opt," `True` specifies that the window will be visible (default)")},{label:"[$bForceNew]",documentation:"".concat(Ce.opt," `True` forces to create a new Word instance even if there is already a running instance (`Default = False`)")}]},_Word_DocAdd:{documentation:"Adds a new or empty document to the specified Word application ".concat(Ee),label:"_Word_DocAdd ( $oAppl, [$iDocumentType], [$sDocumentTemplate], [$bNewTemplate] )",params:[{label:"$oAppl",documentation:"Word object returned by a preceding call to `_Word_Create()`"},{label:"[$iDocumentType]",documentation:"".concat(Ce.opt," Can be one of the following WdNewDocumentType constants:").concat(Ce.br,"\n                `$WdNewBlankDocument`, `$WdNewEmailMessage`, `$WdNewFrameset` or `$WdNewWebPage` (`Default = $WdNewBlankDocument`)")},{label:"[$sDocumentTemplate]",documentation:"".concat(Ce.opt," The name of the template to be used for the new document.").concat(Ce.br,'\n                If this argument is omitted, the Normal template is used (default = "")')},{label:"[$bNewTemplate]",documentation:"".concat(Ce.opt," `True` to open the document as a template (`Default = False`)")}]},_Word_DocAttach:{documentation:"Attaches to the first instance of a Word document where the search string matches based on the selected mode ".concat(Ee),label:"_Word_DocAttach ( $oAppl, $sString, [$sMode], [$iCase] )",params:[{label:"$oAppl",documentation:"Word object returned by a preceding call to `_Word_Create()`"},{label:"$sString",documentation:"String to search for"},{label:"[$sMode]",documentation:"".concat(Ce.opt," Search mode to use. Valid modes are:").concat(Ce.br,"\n                ").concat(Ce.trueFalseHader,'\n                "FileName"|-|Name of the open document\n                "FilePath"|-|Full path to the open document (default)\n                "Text"|-|Text in the body of the document')},{label:"[$iCase]",documentation:"".concat(Ce.opt,' Specifies case-sensitivity of function `StringInStr()` used for search mode "Text":').concat(Ce.br,"\n                ").concat(Ce.valueFirstHeader,"\n                `0`|-|not case-sensitive, using the user's locale (default)\n                `1`|-|case sensitive\n                `2`|-|not case sensitive, using a basic/faster comparison")}]},_Word_DocClose:{documentation:"Closes the specified Word document ".concat(Ee),label:"_Word_DocClose ( $oDoc, [$iSaveChanges], [$iOriginalFormat] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"[$iSaveChanges]",documentation:"".concat(Ce.opt," Specifies the save action for the document (`Default = $WdDoNotSaveChanges`).").concat(Ce.br,"\n                Can be one of the WdSaveOptions constants:").concat(Ce.br,"\n                `$WdDoNotSaveChanges`, `$WdPromptToSaveChanges` or `$WdSaveChanges`")},{label:"[$iOriginalFormat]",documentation:"".concat(Ce.opt," Specifies the save format for the document.").concat(Ce.br,"\n                Can be one of the WdOriginalFormat constants:").concat(Ce.br,"\n                    `$WdOriginalDocumentFormat`, `$WdPromptUser` or `$WdWordDocument` (`Default = $WdOriginalDocumentFormat`)")}]},_Word_DocExport:{documentation:"Exports the document or a range as PDF or XPS ".concat(Ee),label:"_Word_DocExport ( $oDoc, $sFileName, [$iFormat], [$iRange], [$iFrom], [$iTo], [$bOpenAfterExport], [$bIncludeProperties], [$iCreateBookmarks], [$bUseISO19005] )",params:[{label:"$oDoc",documentation:"Word document object to be exported"},{label:"$sFileName",documentation:"Path/name of the exported file"},{label:"[$iFormat]",documentation:"".concat(Ce.opt," Format to use for the export. Can be any of the WdExportFormat enumeration").concat(Ce.br,"\n                (`Default = $WdExportFormatPDF`)")},{label:"[$iRange]",documentation:"".concat(Ce.opt," Specifies what to export. Can be any of the WdExportRange enumeration").concat(Ce.br,"\n                (`Default = $WdExportAllDocument`)")},{label:"[$iFrom]",documentation:"".concat(Ce.opt," The page number at which to start publishing (default = start at the beginning)")},{label:"[$iTo]",documentation:"".concat(Ce.opt," The page number at which to end publishing (default = end at the last page)")},{label:"[$bOpenAfterExport]",documentation:"".concat(Ce.opt," `True` displays the file in a viewer after it is published (`Default = False`)")},{label:"[$bIncludeProperties]",documentation:"".concat(Ce.opt," `True` indicates that document properties should be included (`Default = True`)")},{label:"[$iCreateBookmarks]",documentation:"".concat(Ce.opt," Specifies whether to export bookmarks and the type of bookmarks to export.").concat(Ce.br,"\n                Can be any of the WdExportCreateBookmarks enumeration (default)")},{label:"[$bUseISO19005]",documentation:"".concat(Ce.opt," Specifies whether the export should be created as PDF/A (self-contained PDF) (`Default = False`)")}]},_Word_DocFind:{documentation:"Runs or repeats the specified find operation ".concat(Ee),label:"_Word_DocFind ( $oDoc, [$sFindText], [$vSearchRange], [$oFindRange], [$bForward], [$bMatchCase], [$bMatchWholeWord], [$bMatchWildcards], [$bMatchSoundsLike], [$bMatchAllWordForms], [$bFormat] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"[$sFindText]",documentation:"".concat(Ce.opt,' The text to be searched for. Use an empty string ("") to search for formatting only.  \n                You can search for special characters by specifying appropriate character codes.  \n                For example, "^p" corresponds to a paragraph mark and "^t" corresponds to a tab character (`Default = ""`)')},{label:"[$vSearchRange]",documentation:"".concat(Ce.opt," Specifies the selection or range to search. Can be:\n            ").concat(Ce.valueFirstHeader,"\n            `-1`|-|Specifies the current selection\n            `0`|-|Specifies the entire document (default)\n\n            Any Word range object.")},{label:"[$oFindRange]",documentation:"".concat(Ce.opt," Specifies the range returned by the last call to `_Word_DocFind()`.").concat(Ce.br,"\n                This is required if you want to search for the next or previous occurrence of `$sFindText`.").concat(Ce.br,"\n                If set to `Default` then the search starts at the start of the `$vSearchRange` (default)")},{label:"[$bForward]",documentation:"".concat(Ce.opt," `True` to search forward (toward the end of the document) (`Default = True`)")},{label:"[$bMatchCase]",documentation:"".concat(Ce.opt," If `True` the find is case sensitive (`Default = False`)")},{label:"[$bMatchWholeWord]",documentation:"".concat(Ce.opt," If `True` only find entire words (`Default = False`)")},{label:"[$bMatchWildcards]",documentation:"".concat(Ce.opt," If `True` the find text has special search operators (`Default = False`)")},{label:"[$bMatchSoundsLike]",documentation:"".concat(Ce.opt," If `True` finds words that sound similar to the find text (`Default = False`)")},{label:"[$bMatchAllWordForms]",documentation:"".concat(Ce.opt," If `True` finds all forms of the find text").concat(Ce.br,'\n                (e.g. "sit" locates "sitting" and "sat") (`Default = False`)')},{label:"[$bFormat]",documentation:"".concat(Ce.opt," `True` to have the find operation locate formatting in addition to or instead of the find text (`Default = False`)")}]},_Word_DocFindReplace:{documentation:"Runs the specified find and replace operation ".concat(Ee),label:"_Word_DocFindReplace ( $oDoc, [$sFindText], [$sReplaceWith], [$iReplace], [$vSearchRange], [$bMatchCase], [$bMatchWholeWord], [$bMatchWildcards], [$bMatchSoundsLike], [$bMatchAllWordForms], [$bForward], [$iWrap], [$bFormat] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"[$sFindText]",documentation:"".concat(Ce.opt,' The text to be searched for. Use an empty string ("") to search for formatting only.  \n                You can search for special characters by specifying appropriate character codes.  \n                For example, "^p" corresponds to a paragraph mark and "^t" corresponds to a tab character (`Default = ""`)')},{label:"[$sReplaceWith]",documentation:"".concat(Ce.opt,' The replacement text. To delete found text use an empty string ("").  \n                You specify special characters and advanced search criteria just as you do for the Find argument (`Default = ""`)')},{label:"[$iReplace]",documentation:"".concat(Ce.opt," How many replacements are to be made: one, all, or none.").concat(Ce.br,"\n                Can be anyWdReplace constant (`Default = $WdReplaceAll`)")},{label:"[$vSearchRange]",documentation:"".concat(Ce.opt," Specifies the selection or range to search. Can be:\n            ").concat(Ce.valueFirstHeader,"\n            `-1`|-|Specifies the current selection\n            `0`|-|Specifies the entire document (default)\n\n            Any Word range object.")},{label:"[$bMatchCase]",documentation:"".concat(Ce.opt," If `True` the find is case sensitive (`Default = False`)")},{label:"[$bMatchWholeWord]",documentation:"".concat(Ce.opt," If `True` only find entire words (`Default = False`)")},{label:"[$bMatchWildcards]",documentation:"".concat(Ce.opt," If `True` the find text has special search operators (`Default = False`)")},{label:"[$bMatchSoundsLike]",documentation:"".concat(Ce.opt," If `True` finds words that sound similar to the find text (`Default = False`)")},{label:"[$bMatchAllWordForms]",documentation:"".concat(Ce.opt," If `True` finds all forms of the find text").concat(Ce.br,'\n                (e.g. "sit" locates "sitting" and "sat") (`Default = False`)')},{label:"[$bForward]",documentation:"".concat(Ce.opt," `True` to search forward (toward the end of the document) (`Default = True`)")},{label:"[$iWrap]",documentation:"".concat(Ce.opt," `True` wraps when the bottom or top of the document, selection or range is reached.").concat(Ce.br,"\n                Can be one of the WdFindWrap constants (`Default = $WdFindContinue`)")},{label:"[$bFormat]",documentation:"".concat(Ce.opt," `True` to have the find operation locate formatting in addition to or instead of the find text (`Default = False`)")}]},_Word_DocGet:{documentation:"Returns a collection object containing all documents or an object for a single document ".concat(Ee),label:"_Word_DocGet ( $oAppl , [$vIndex] )",params:[{label:"$oAppl",documentation:"Word object returned by a preceding call to `_Word_Create()`"},{label:"[$vIndex]",documentation:"".concat(Ce.opt," Specifies what to return:  \n                ").concat(Ce.valueFirstHeader,"\n                `-1`|-|Returns a collection of all documents (default)\n                `0`|-|Returns the active document\n                `n`|-|The index number of the document to return (1 based)\n                `x`|-|The name of the document to return")}]},_Word_DocLinkAdd:{documentation:"Adds a hyperlink to the document ".concat(Ee),label:"_Word_DocLinkAdd ( $oDoc, [$oAnchor], [$sAddress], [$sSubAddress], [$sScreenTip], [$sTextToDisplay], [$sTarget] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"[$oAnchor]",documentation:"".concat(Ce.opt," Range object for the text or graphic to be turned into a hyperlink  \n                (default = Use entire document as range)")},{label:"[$sAddress]",documentation:"".concat(Ce.opt," The address for the specified link.  \n                The address can be an E-mail address, an Internet address or a file name (default = link to the specified document is used)")},{label:"[$sSubAddress]",documentation:"".concat(Ce.opt," The name of a location within the destination file, such as a bookmark, named range or slide number (default = None)")},{label:"[$sScreenTip]",documentation:"".concat(Ce.opt," The text that appears as a ScreenTip when the mouse pointer is positioned over the specified hyperlink (default = Uses value of `$sAddress`)")},{label:"[$sTextToDisplay]",documentation:"".concat(Ce.opt," The display text of the specified hyperlink.  \n                The value of this argument replaces the text or graphic specified by `$oAnchor` (default = Uses value of `$sAddress`)")},{label:"[$sTarget]",documentation:"".concat(Ce.opt," The name of the frame or window in which you want to load the specified hyperlink")}]},_Word_DocLinkGet:{documentation:"Returns a collection object containing all links in the document or a single link object ".concat(Ee),label:"_Word_DocLinkGet ( $oDoc , [$iIndex] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"[$iIndex]",documentation:"".concat(Ce.opt," Specifies what to return:\n                ").concat(Ce.trueFalseHader,"\n                `Default` |-| Returns a collection of all links (default)").concat(Ce.br,"\n                |n |-| The index number of the link to return (1 based)")}]},_Word_DocOpen:{documentation:"Opens a Word document ".concat(Ee),label:"_Word_DocOpen ( $oAppl, $sFilePath , [$bConfirmConversions], [$iFormat], [$bReadOnly], [$bRevert], [$bAddToRecentFiles], [$sOpenPassword], [$sWritePassword] )",params:[{label:"$oAppl",documentation:"Word object returned by a preceding call to `_Word_Create()`"},{label:"$sFilePath",documentation:"The name or full path of the document to open"},{label:"[$bConfirmConversions]",documentation:"".concat(Ce.opt," `True` displays the Convert File dialog if the file isn't in Word format (`Default = False`)")},{label:"[$iFormat]",documentation:"".concat(Ce.opt," Specifies the format to use when opening the document.  \n                Can be any of the WdOpenFormat enumeration (`Default = $WdOpenFormatAuto` = the existing format)")},{label:"[$bReadOnly]",documentation:"".concat(Ce.opt," `True` to open the document as read-only (`Default = False`).  \n                Note: This argument doesn't override the read-only recommended setting on a saved document.")},{label:"[$bRevert]",documentation:"".concat(Ce.opt," Controls what happens if `$sFilePath` is the name of an open document.  \n                `True` to discard any unsaved changes to the open document and reopen the file.  \n                `False` to activate the open document (`Default = False`)")},{label:"[$bAddToRecentFiles]",documentation:"".concat(Ce.opt," `True` adds the file name to the list of recently used files at the bottom of the File menu (`Default = False`)")},{label:"[$sOpenPassword]",documentation:"".concat(Ce.opt," The password for opening the document")},{label:"[$sWritePassword]",documentation:"".concat(Ce.opt," The password for saving changes to the document")}]},_Word_DocPictureAdd:{documentation:"Adds a picture to the document ".concat(Ee),label:"_Word_DocPictureAdd ( $oDoc, $sFilePath, [$bLinkToFile], [$bSaveWithDocument], [$oRange] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"$sFilePath",documentation:"The path and file name of the picture"},{label:"[$bLinkToFile]",documentation:"".concat(Ce.opt," Specifies whether to link the picture to the file from which it was created.  \n                ").concat(Ce.trueFalseHader,"\n                `True`|-|Link the picture to the file from which it was created\n                `False`|-|Make the picture an independent copy of the file (default)")},{label:"[$bSaveWithDocument]",documentation:"".concat(Ce.opt," Specifies whether to save the linked picture with the document.\n                ").concat(Ce.trueFalseHader,"\n                `True`|-|Save the linked picture with the document\n                `False`|-|Do not save the linked picture with the document (default)")},{label:"[$oRange]",documentation:"".concat(Ce.opt," The location where the picture will be placed in the text.  \n                Can be `0` (the picture is placed automatically) or any range object (`Default = 0`)")}]},_Word_DocPrint:{documentation:"Prints all or parts of the specified document ".concat(Ee),label:"_Word_DocPrint ( $oDoc, [$bBackground], [$iCopies], [$iOrientation], [$bCollate], [$sPrinter], [$iRange], [$vFrom], [$vTo], [$sPages], [$iPageType], [$iItem] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"[$bBackground]",documentation:"".concat(Ce.opt," `True` lets the script continue while the document is printed (`Default = False`)")},{label:"[$iCopies]",documentation:"".concat(Ce.opt," The number of copies to be printed (`Default = 1`)")},{label:"[$iOrientation]",documentation:"".concat(Ce.opt," Sets the orientation of the page:\n                ").concat(Ce.valueFirstHeader,"\n                `-1`|-|Use current document orientation (`Default`)\n                `0`|-|Portrait (`$WdOrientPortrait` of the WdOrientation enumeration)\n                `1`|-|Landscape (`$WdOrientLandscape` of the WdOrientation enumeration)")},{label:"[$bCollate]",documentation:"".concat(Ce.opt," `True` prints all pages of the document before printing the next copy (`Default = True`)")},{label:"[$sPrinter]",documentation:"".concat(Ce.opt,' Sets the name of the printer (`Default = ""`&nbsp;=&nbsp;Active printer)')},{label:"[$iRange]",documentation:"".concat(Ce.opt," Specifies the page range to print.  \n                Can be any of the WdPrintOutRange enumeration.  \n                (`Default = $WdPrintAllDocument`&nbsp;=&nbsp;print the entire document)")},{label:"[$vFrom]",documentation:"".concat(Ce.opt," The starting page number (integer) when `$iRange` is set to `$WdPrintFromTo`")},{label:"[$vTo]",documentation:"".concat(Ce.opt," The ending page number (integer) when `$iRange` is set to `$WdPrintFromTo`")},{label:"[$sPages]",documentation:"".concat(Ce.opt,' The page numbers and page ranges to be printed, separated by commas when `$iRange` is set to `4`.  \n                For example, `"2, 6-10"` prints page 2 and pages 6 through 10 (`Default = ""`)')},{label:"[$iPageType]",documentation:"".concat(Ce.opt," The type of pages to be printed. Can be any of the WdPrintOutPages enumeration  \n                (`Default = $WdPrintAllPages` = print all pages)")},{label:"[$iItem]",documentation:"".concat(Ce.opt," The item to be printed. Can be any of the WdPrintOutItem enumeration  \n                (`Default = $WdPrintDocumentContent` = document content)")}]},_Word_DocRangeSet:{documentation:"Sets or modifies a range in a document ".concat(Ee),label:"_Word_DocRangeSet ( $oDoc, $vRange, [$iStartUnit], [$iStartCount], [$iEndUnit], [$iEndCount] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"$vRange",documentation:"Range to set or extend. You can pass an existing range which then is extended. Also valid is:\n                ".concat(Ce.valueFirstHeader,"\n                |`0`|-|uses the current selection as range\n                |`-1`|-|sets the range start/end at the start of the document\n                |`-2`|-|sets the range start/end at the end of the document")},{label:"[$iStartUnit]",documentation:"".concat(Ce.opt," Unit by/to which the start position of the range is to be moved/set.  \n                Can be any of the WdUnit enumeration (`Default = $WdWord`).  \n                When set to `-1` the range is collapsed to the start of the range")},{label:"[$iStartCount]",documentation:"".concat(Ce.opt," Number of units by/to which the start of range is moved/set.  \n                Positive numbers move the range forward in the document.  \n                If the position is moved forward to a position beyond the end position of the range, the range is collapsed and both the start and end positions are moved together (default = don't move the start position)")},{label:"[$iEndUnit]",documentation:"".concat(Ce.opt," Unit by/to which the end position of the range is to be moved/set.  \n                Can be any of the WdUnit enumeration (`Default = $WdWord`).  \n                When set to `-1` the range is collapsed to the end of the range")},{label:"[$iEndCount]",documentation:"".concat(Ce.opt," Number of units by/to which the end of the range is moved/set.  \n                If this number is negative, the end is moved backward.  \n                If the ending position overtakes the starting position, the range collapses and both positions move together (default = don't move the end position)")}]},_Word_DocSave:{documentation:"Saves the specified Word document ".concat(Ee),label:"_Word_DocSave ( $oDoc )",params:[{label:"$oDoc",documentation:"Word document object"}]},_Word_DocSaveAs:{documentation:"Saves the specified Word document with a new name or format ".concat(Ee),label:"_Word_DocSaveAs ( $oDoc, [$sFileName], [$iFileFormat], [$bReadOnlyRecommended], [$bAddToRecentFiles], [$sPassword], [$sWritePassword] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"[$sFileName]",documentation:"".concat(Ce.opt," The full path name for the document (default = Current folder and current file name).  \n                If the document has never been saved, the default name is used (for example, Doc1.doc)")},{label:"[$iFileFormat]",documentation:"".concat(Ce.opt," The format in which the document is saved.  \n                Can be any WdSaveFormat constant (default = `$WdFormatDocument`)")},{label:"[$bReadOnlyRecommended]",documentation:"".concat(Ce.opt," True to have Word suggest read-only status whenever the document is opened (default = `False`)")},{label:"[$bAddToRecentFiles]",documentation:"".concat(Ce.opt," True to add the document to the list of recently used files (default = `True`)")},{label:"[$sPassword]",documentation:"".concat(Ce.opt,' A password string for opening the document (default = "")')},{label:"[$sWritePassword]",documentation:"".concat(Ce.opt,' A password string for saving changes to the document (default = "")')}]},_Word_DocTableRead:{documentation:"Reads a Word table and returns the content as a two-dimensional array ".concat(Ee),label:"_Word_DocTableRead ( $oDoc, $vTable [, $iIndexBase [, $sDelimiter]] )",params:[{label:"$oDoc",documentation:"Word document object"},{label:"$vTable",documentation:"Table object or index of the table in the table collection"},{label:"$iIndexBase",documentation:"".concat(Ce.opt," Can be 0 or 1 and specifies if the array starts with row 0 or 1 (default = 1)")},{label:"$sDelimiter",documentation:"".concat(Ce.opt," Specifies the character used to separate text into cells (default = `@TAB`)")}]},_Word_DocTableWrite:{documentation:"Writes a one or two dimensional array to a Word table ".concat(Ee),label:"_Word_DocTableWrite ( $oRange, ByRef $aArray [, $iIndexBase [, $sDelimiter]] )",params:[{label:"$oRange",documentation:"Word range object where the table should be inserted"},{label:"$aArray",documentation:"one or two-dimensional array to be converted to a table.\n                Can be zero or 1-based"},{label:"$iIndexBase",documentation:"".concat(Ce.opt," Can be 0 or 1 and specifies if the array starts with row 0 or 1 (default = 1)")},{label:"$sDelimiter",documentation:"".concat(Ce.opt," Specifies the character used to separate text into cells (default = `@TAB`)")}]},_Word_Quit:{documentation:"Closes all documents, the Word application and removes the object reference to it ".concat(Ee),label:"_Word_Quit ( $oAppl , [$iSaveChanges], [$iOriginalFormat], [$bForceClose] )",params:[{label:"$oAppl",documentation:"Word object returned by a preceding call to `_Word_Create()`"},{label:"[$iSaveChanges]",documentation:"".concat(Ce.opt," Specifies if changed documents should be saved before closing.").concat(Ce.br,"\n                Can be one of the WdSaveOptions enumeration (default = `$WdDoNotSaveChanges`)")},{label:"[$iOriginalFormat]",documentation:"".concat(Ce.opt," Specifies how Word saves documents whose original format was not Word document format.").concat(Ce.br,"\n                Can be any of the WdOriginalFormat enumeration (default = `$WdWordDocument`)")},{label:"[$bForceClose]",documentation:"".concat(Ce.opt," If True the Word application is closed even when it was running at `_Word_Create()` time (default = `False`)")}]}},xe=(0,Ce.signatureToHover)(Re),ve=(0,Ce.signatureToCompletion)(Re,t.CompletionItemKind.Function,Ee),Ue="`#include <Debug.au3>`",Fe={_Assert:{documentation:"Display a message if assertion fails ".concat(Ue),label:"_Assert ( $sCondition, [$bExit] = True, [$iCode] = 0x7FFFFFFF, [$sLine] = @ScriptLineNumber )",params:[{label:"$sCondition",documentation:"The condition (expression quoted) that must evaluate to true."},{label:"$bExit",documentation:"".concat(Ce.opt," If true, the script is aborted.")},{label:"$iCode",documentation:"".concat(Ce.opt," The exit code to use if the script is aborted.")},{label:"$sLine",documentation:"".concat(Ce.opt," Displays the line number where the assertion\n          failed. If this value is not changed, then the default value will\n          show the correct line.")}]},_DebugArrayDisplay:{documentation:"Displays a 1D or 2D array in a ListView to aid debugging ".concat(Ue),label:'_DebugArrayDisplay ( Const ByRef $aArray, [$sTitle] = "DebugArray",\n      [$sArrayRange] = "", [$iFlags] = 0, [$vUser_Separator] = Default,\n      [$sHeader] = Default, [$iMax_ColWidth] = Default, [$hUser_Function] = "" )',params:[{label:"$aArray",documentation:"Array to display"},{label:"$sTitle",documentation:"".concat(Ce.opt,' Title for dialog. `Default = "DebugArray"`.')},{label:"$sArrayRange",documentation:"".concat(Ce.opt,' Range of rows/columns to display. Default ("") = entire array.')},{label:"$iFlags",documentation:"".concat(Ce.opt," Determine UDF options.\n      Add required values together").concat(Ce.br,"\n      `$ARRAYDISPLAY_COLALIGNLEFT` (`0`) = (default) Column text alignment - left").concat(Ce.br,"\n      `$ARRAYDISPLAY_TRANSPOSE` (`1`) = Transposes the array (2D only)")},{label:"$vUser_Separator",documentation:"".concat(Ce.opt," Sets column display option when copying data to clipboard.").concat(Ce.br,"\n        Character = Delimiter between columns.").concat(Ce.br,"\n        Number = Fixed column width - longer items will be truncated.").concat(Ce.br,'\n        Default = Current separator character (usually "|").')},{label:"$sHeader",documentation:"".concat(Ce.opt,' Column names in header (string of names separated by current separator character - usually "|").')},{label:"$iMax_ColWidth",documentation:"".concat(Ce.opt," Max width to which a ListView column will expand to show content. Default = 350 pixels.")},{label:"$hUser_Function",documentation:"".concat(Ce.opt," A variable assigned to the user defined function to run. Default = none. ")}]},_DebugBugReportEnv:{documentation:"Outputs a string containing information for Bug report submission ".concat(Ue),label:"_DebugBugReportEnv ( )",params:[]},_DebugCOMError:{documentation:"Sets, resets or queries the debug level for COM errors ".concat(Ue),label:"_DebugCOMError ( [$iComDebug] = 1, [$bExit] = False )",params:[{label:"$iComDebug",documentation:"".concat(Ce.opt," Debug level. Possible values are:").concat(Ce.br,"\n          ").concat(Ce.valueFirstHeader,"\n          -1|-|Return the current settings").concat(Ce.br,"\n          0|-|Disable debugging").concat(Ce.br,"\n          1|-|Enable debugging. Output the debug info (default)")},{label:"$bExit",documentation:"".concat(Ce.opt," `True` if the script must be terminated")}]},_DebugOut:{documentation:"Displays output on a debugging session started by `_DebugSetup()` ".concat(Ue),label:"_DebugOut ( $sOutput )",params:[{label:"$sOutput",documentation:"The string (or other printable value) to be output to the debugging session."}]},_DebugReport:{documentation:"Writes to a debugging session ".concat(Ue),label:"_DebugReport ( $sData, [$bLastError] = False, [$bExit] = False )",params:[{label:"$sData",documentation:"Data to be reported"},{label:"$bLastError",documentation:"".concat(Ce.opt," `True` if `_WinAPI_GetLastErrorMessage()` must be append to the data being reported")},{label:"$bExit",documentation:"".concat(Ce.opt," `True` if the script must be terminated")}]},_DebugReportEx:{documentation:"Writes to a debugging session a formatted message ".concat(Ue),label:"_DebugReportEx ( $sData, [$bLastError] = False, [$bExit] = False )",params:[{label:"$sData",documentation:'Data to be reported (e.g. "dllname|functionname")'},{label:"$bLastError",documentation:"".concat(Ce.opt," `True` if `_WinAPI_GetLastErrorMessage()` must be append to the data being reported")},{label:"$bExit",documentation:"".concat(Ce.opt," `True` if the script must be terminated")}]},_DebugReportVar:{documentation:"Writes to debugging session the content of a variable ".concat(Ue),label:"_DebugReportVar ( $sVarName, $vVar, [$bErrExt] = False, [$iDebugLineNumber] = @ScriptLineNumber )",params:[{label:"$sVarName",documentation:"string representing name of the variable or a comment"},{label:"$vVar",documentation:"the variable to be reported"},{label:"$bErrExt",documentation:"".concat(Ce.opt," `True` if `@error` and `@extended` must also be displayed")},{label:"$iDebugLineNumber",documentation:"".concat(Ce.opt," can be used to overwrite the current calling line number. Default = `@ScriptLineNumber`")}]},_DebugSetup:{documentation:"Setup up a debug session using a specific reporting type ".concat(Ue),label:'_DebugSetup ( [$sTitle] = Default, [$bBugReportInfos] = False, [$vReportType] = 1, [$sLogFile] = "", [$bTimeStamp] = False )',params:[{label:"$sTitle",documentation:"".concat(Ce.opt,' Title to be displayed on the report window. Default value is "AutoIt Debug Report".')},{label:"$bBugReportInfos",documentation:"".concat(Ce.opt," Display BugReport infos. Default value is `False`.")},{label:"$vReportType",documentation:"".concat(Ce.opt," 1 - Report Log Window (Default).").concat(Ce.br,"\n          2 - ConsoleWrite.").concat(Ce.br,"\n          3 - MsgBox.").concat(Ce.br,"\n          4 - FileWrite into `$sLogFile` defines the filename.").concat(Ce.br,"\n          5 - Report Notepad Window.").concat(Ce.br,"\n          string - name of specific report function to be used.")},{label:"$sLogFile",documentation:"".concat(Ce.opt," Name of the file if `$vReportType` = `4`")},{label:"$bTimeStamp",documentation:"".concat(Ce.opt,' `True` if every message must be prefixed with a timeStamp "YYYY/MM/DD HH:MM:SS"')}]}},Le=(0,Ce.signatureToHover)(Fe),Be=(0,Ce.fillCompletions)([{label:"$INET_LOCALCACHE",documentation:"(0) = Get the file from local cache if available (default)."},{label:"$INET_FORCERELOAD",documentation:"(1) = Forces a reload from the remote site."},{label:"$INET_IGNORESSL",documentation:"(2) = Ignore all SSL errors (with HTTPS connections)."},{label:"$INET_ASCIITRANSFER",documentation:"Use ASCII when transferring files with the FTP protocol (Can not be combined with flag `$INET_BINARYTRANSFER` (8))."},{label:"$INET_BINARYTRANSFER",documentation:"(8) = Use BINARY when transferring files with the FTP protocol (Can not be combined with flag `$INET_ASCIITRANSFER` (4)). This is the default transfer mode if none are provided."},{label:"$INET_FORCEBYPASS",documentation:"(16) = By-pass forcing the connection online (See remarks)."},{label:"$INET_DOWNLOADWAIT",documentation:"(0) = Wait until the download is complete before continuing (default)."},{label:"$INET_DOWNLOADBACKGROUND",documentation:"(1) = return immediately and download in the background (see remarks)."},{label:"$INET_DOWNLOADREAD",documentation:"0"},{label:"$INET_DOWNLOADSIZE",documentation:"1"},{label:"$INET_DOWNLOADCOMPLETE",documentation:"2"},{label:"$INET_DOWNLOADSUCCESS",documentation:"3"},{label:"$INET_DOWNLOADERROR",documentation:"4"},{label:"$INET_DOWNLOADEXTENDED",documentation:"5"}],t.CompletionItemKind.Constant,"InetGet Constant","InetConstants.au3"),Oe=(0,Ce.completionToHover)(Be),Me=[{label:"#AutoIt3Wrapper_testing",documentation:"Skip Tidy, Obfuscator and cvsWrapper for speed while testing.",insertText:new t.SnippetString("#AutoIt3Wrapper_testing=${1|Y,N|}")},{label:"#AutoIt3Wrapper_UseX64",documentation:"Use X64 versions for AutoIt3_x64 or AUT2EXE_x64.",insertText:new t.SnippetString("#AutoIt3Wrapper_UseX64=${1|Y,N|}")},{label:"#AutoIt3Wrapper_Version",documentation:"Use Beta or Production for AutoIt3 and AUT2EXE.",insertText:new t.SnippetString("#AutoIt3Wrapper_Version=${1|B,P|}")},{label:"#AutoIt3Wrapper_Run_Debug_Mode",documentation:"Run Script with console debugging.",insertText:new t.SnippetString("#AutoIt3Wrapper_Run_Debug_Mode=${1|Y,N|}")},{label:"#AutoIt3Wrapper_Run_SciTE_Minimized",documentation:"Minimize SciTE while script is running.",insertText:new t.SnippetString("#AutoIt3Wrapper_Run_SciTE_Minimized=${1|Y,N|}")},{label:"#AutoIt3Wrapper_Run_SciTE_OutputPane_Minimized",documentation:"Toggle SciTE output pane at run time so its not shown.",insertText:new t.SnippetString("#AutoIt3Wrapper_Run_SciTE_OutputPane_Minimized=${1|Y,N|}")},{label:"#AutoIt3Wrapper_Autoit3Dir",documentation:"Optionally override the base AutoIt3 install directory."},{label:"#AutoIt3Wrapper_Aut2exe",documentation:"Optionally override the Aut2exe.exe to use for this script"},{label:"#AutoIt3Wrapper_AutoIt3",documentation:"Optionally override the Autoit3.exe to use for this script"},{label:"#AutoIt3Wrapper_Add_Constants",documentation:"Add the needed standard constant include files. Will only run one time."},{label:"#AutoIt3Wrapper_Icon",documentation:"Filename of the Ico file to use"},{label:"#AutoIt3Wrapper_Outfile",documentation:"Target exe/a3x filename."},{label:"#AutoIt3Wrapper_OutFile_Type",documentation:"a3x=small AutoIt3 file exe=Standalone executable",insertText:new t.SnippetString("#AutoIt3Wrapper_OutFile_Type=${1|exe,a3x|}")},{label:"#AutoIt3Wrapper_OutFile_X64",documentation:"Target exe filename for X64 compile."},{label:"#AutoIt3Wrapper_Compression",documentation:"Compression parameter 0-4. 0=Low 2=normal 4=High."},{label:"#AutoIt3Wrapper_UseUpx",documentation:"Compress output program.",insertText:new t.SnippetString("#AutoIt3Wrapper_UseUpx=${1|Y,N|}")},{label:"#AutoIt3Wrapper_UPX_Parameters",documentation:"Override the default setting for UPX."},{label:"#AutoIt3Wrapper_Change2CUI",documentation:"Change output program to CUI in stead of GUI.",insertText:new t.SnippetString("#AutoIt3Wrapper_Change2CUI=${1|Y,N|}")},{label:"#AutoIt3Wrapper_Compile_both",documentation:"Compile both X86 and X64 in one run.",insertText:new t.SnippetString("#AutoIt3Wrapper_Compile_both=${1|Y,N|}")},{label:"#AutoIt3Wrapper_Res_Comment",documentation:"Comment field"},{label:"#AutoIt3Wrapper_Res_Description",documentation:"Description field"},{label:"#AutoIt3Wrapper_Res_Fileversion",documentation:"\tFile Version"},{label:"#AutoIt3Wrapper_Res_FileVersion_AutoIncrement",documentation:"AutoIncrement FileVersion After AUTEXE is finished. P=Prompt, Will ask at compilation time if you want to increase the version number",insertText:new t.SnippetString("#AutoIt3Wrapper_Res_FileVersion_AutoIncrement=${1|Y,P,N|}")},{label:"#AutoIt3Wrapper_Res_ProductVersion",documentation:"Product Version."},{label:"#AutoIt3Wrapper_Res_Language",documentation:"Resource Language code."},{label:"#AutoIt3Wrapper_Res_LegalCopyright",documentation:"Copyright field"},{label:"#AutoIt3Wrapper_res_requestedExecutionLevel",documentation:"asInvoker, highestAvailable, requireAdministrator or None (remove the trustInfo section).",insertText:new t.SnippetString("#AutoIt3Wrapper_res_requestedExecutionLevel=${1|asInvoker,highestAvailable,requireAdministrator,None|}")},{label:"#AutoIt3Wrapper_res_Compatibility",documentation:"\tVista, Windows7 both allowed separated by a comma."},{label:"#AutoIt3Wrapper_Res_SaveSource",documentation:"Save a copy of the script source in the EXE resources. If Y then the content of the script source depends on the #AutoIt3Wrapper_Run_Obfuscator and #obfuscator_parameters directives.",insertText:new t.SnippetString("#AutoIt3Wrapper_Res_SaveSource=${1|Y,N|}")},{label:"#AutoIt3Wrapper_Run_Tidy",documentation:"Run Tidy before compilation.",insertText:new t.SnippetString("#AutoIt3Wrapper_Run_Tidy=${1|Y,N|}")},{label:"#AutoIt3Wrapper_Tidy_Stop_OnError",documentation:"Continue when only Warnings.",insertText:new t.SnippetString("#AutoIt3Wrapper_Tidy_Stop_OnError=${1|Y,N|}")},{label:"#Tidy_Parameters",documentation:"Parameters for Au3Tidy"}],Ne=(0,Ce.fillCompletions)(Me,t.CompletionItemKind.Keyword,"AutoIt3Wrapper Directive"),He=[{label:"#AutoIt3Wrapper_Run_Au3Stripper",documentation:"Run Au3Stripper before compilation.",insertText:new t.SnippetString("#AutoIt3Wrapper_Run_Au3Stripper=${1|y,n|}")},{label:"#Au3Stripper_Parameters",documentation:"Parameters for Au3Stripper"},{label:"#Au3Stripper_Off",documentation:"Stop the Stripping process below this line."},{label:"#Au3Stripper_On",documentation:"Start the Stripping process below this line."},{label:"#Au3Stripper_Ignore_Funcs",documentation:"Do not Strip these functions."},{label:"#Au3Stripper_Ignore_Variables",documentation:"Do not Strip these variables."}],ke=(0,Ce.fillCompletions)(He,t.CompletionItemKind.Keyword,"Au3Stripper Directive"),Ve=[{label:"#AutoIt3Wrapper_Run_AU3Check",documentation:"Run AU3Check before compilation."},{label:"#AutoIt3Wrapper_AU3Check_Parameters",documentation:"Au3Check parameters"},{label:"#AutoIt3Wrapper_AU3Check_Stop_OnWarning",documentation:"Y = Always stop on warnings. (default)\rN = Contine on warnings.",insertText:new t.SnippetString("#AutoIt3Wrapper_AU3Check_Stop_OnWarning=${1|Y,N|}")},{label:"#AutoIt3Wrapper_PlugIn_Funcs",documentation:"Define PlugIn function names separated by a comma to avoid AU3Check errors."}],je=(0,Ce.fillCompletions)(Ve,t.CompletionItemKind.Keyword,"Au3Check Directive"),Ye=[{label:"#AutoIt3Wrapper_Versioning",documentation:"Run versioning to update the script source. V=only run when fileversion is increased by `#AutoIt3Wrapper_Res_FileVersion_AutoIncrement`.",insertText:new t.SnippetString("#AutoIt3Wrapper_Versioning=${1|Y,N,V|}")},{label:"#AutoIt3Wrapper_Versioning_Parameters",documentation:"/NoPrompt: Will skip the Comments prompt\r\r/Comments: Text to added in the Comments. It can also contain the below variables."}],Xe=(0,Ce.fillCompletions)(Ye),ze=(0,Ce.completionToHover)(Ne),Ke=(0,Ce.completionToHover)(ke),qe=(0,Ce.completionToHover)(je),Qe=(0,Ce.completionToHover)(Xe);function Je(e){return Je="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Je(e)}function Ze(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}function et(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function tt(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?et(Object(a),!0).forEach((function(t){at(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):et(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function at(e,t,a){return(t=function(e){var t=function(e){if("object"!=Je(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,"string");if("object"!=Je(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Je(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}var ot=tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt(tt({},c),h),u),m),p),b),_),f),I),$),g),C),S),T),G),P),w),y),A),D),W),E),R),x),v),U),F),L),B),O),M),N),H),k),V),j),Y),X),z),K),q),Q),J),Z),ee),te),ae),oe),ne),ie),re),le),se),de),ce),he),ue),me),pe),be),_e),fe),Ie),$e),ge),Pe),De),xe),Le),Oe),ze),Ke),qe),Qe);const nt=Object.fromEntries(Object.entries(ot).map((function(e){var t,a,o=(a=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o,n,i,r,l=[],s=!0,d=!1;try{if(i=(a=a.call(e)).next,0===t){if(Object(a)!==a)return;s=!1}else for(;!(s=(o=i.call(a)).done)&&(l.push(o.value),l.length!==t);s=!0);}catch(e){d=!0,n=e}finally{try{if(!s&&null!=a.return&&(r=a.return(),Object(r)!==r))return}finally{if(d)throw n}}return l}}(t,a)||function(e,t){if(e){if("string"==typeof e)return Ze(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?Ze(e,t):void 0}}(t,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),n=o[0],i=o[1];return[n.toLowerCase(),i]}))),it=t.languages.registerHoverProvider(Ce.AUTOIT_MODE,{provideHover:function(e,a){var o=e.getWordRangeAtPosition(a),n=o?e.getText(o).toLowerCase():"";return n in nt?new t.Hover(nt[n]):null}}),rt=(0,Ce.fillCompletions)([{label:"$ACS_AUTOPLAY",documentation:"Starts playing the animation as soon as the AVI clip is opened. "},{label:"$ACS_CENTER",documentation:"Centers the animation in the animation control's window. "},{label:"$ACS_TRANSPARENT",documentation:'Allows you to match an animation\'s background color to that of the underlying window, creating a "transparent" background. (Default value) '},{label:"$ACS_NONTRANSPARENT",documentation:"To override default ACS_TRANSPARENT "}],t.CompletionItemKind.Constant,"AVI Clip Style Constant","AVIConstants.au3"),lt=(0,Ce.fillCompletions)([{label:"$BS_3STATE",documentation:"Creates a check box in which the box can be unavailable as well as selected or cleared. Use the unavailable state to show that the state of the check box is not determined."},{label:"$BS_AUTO3STATE",documentation:"Creates a three-state check box in which the state cycles through selected, unavailable, and cleared each time the user selects the check box."},{label:"$BS_AUTOCHECKBOX",documentation:"Creates a check box in which the check state switches between selected and cleared each time the user selects the check box."},{label:"$BS_CHECKBOX",documentation:"Creates a small, empty check box with a label displayed to the right of it. To display the text to the left of the check box, combine this flag with the BS_RIGHTBUTTON style."},{label:"$BS_LEFT",documentation:"Left-aligns the text in the button rectangle on the right side of the check box."},{label:"$BS_PUSHLIKE",documentation:"Makes a button (such as a check box, three-state check box, or radio button) look and act like a push button. The button looks raised when it isn't pushed or checked, and sunken when it is pushed or checked."},{label:"$BS_RIGHT",documentation:"Right-aligns text in the button rectangle on the right side of the check box."},{label:"$BS_RIGHTBUTTON",documentation:"Positions a check box square on the right side of the button rectangle."},{label:"$BS_GROUPBOX",documentation:"Creates a rectangle in which other buttons can be grouped. Any text associated with this style is displayed in the rectangle's upper-left corner."},{label:"$BS_AUTORADIOBUTTON",documentation:"Same as a radio button, except that when the user selects it, the button automatically highlights itself and removes the selection from any other radio buttons with the same style in the same group."},{label:"$BS_BOTTOM",documentation:"Places the text at the bottom of the button rectangle."},{label:"$BS_CENTER",documentation:"Centers the text horizontally in the button rectangle."},{label:"$BS_DEFPUSHBUTTON",documentation:"Creates a push button with a heavy black border. If the button is in a dialog box, the user can select the button by pressing the ENTER key, even when the button does not have the input focus. This style is useful for enabling the user to quickly select the most likely option, or default."},{label:"$BS_MULTILINE",documentation:"Wraps the button text to multiple lines if the text string is too long to fit on a single line in the button rectangle."},{label:"$BS_TOP",documentation:"Places text at the top of the button rectangle."},{label:"$BS_VCENTER",documentation:"Vertically centers text in the button rectangle."},{label:"$BS_ICON",documentation:"Specifies that the button displays an icon."},{label:"$BS_BITMAP",documentation:"Specifies that the button displays a bitmap."},{label:"$BS_FLAT",documentation:"Specifies that the button is two-dimensional; it does not use the default shading to create a 3-D image."},{label:"$BS_NOTIFY",documentation:"Enables a button to send BN_KILLFOCUS and BN_SETFOCUS notification messages to its parent window. Note that buttons send the BN_CLICKED notification message regardless of whether it has this style. To get BN_DBLCLK notification messages, the button must have the BS_RADIOBUTTON or BS_OWNERDRAW style."}],t.CompletionItemKind.Constant,"Button Constant","ButtonConstant.au3"),st=(0,Ce.fillCompletions)([{label:"$CBS_AUTOHSCROLL",documentation:"Automatically scrolls the text in an edit control to the right when the user types a character at the end of the line. If this style is not set, only text that fits within the rectangular boundary is enabled. "},{label:"$CBS_DISABLENOSCROLL",documentation:"Shows a disabled vertical scroll bar in the list box when the box does not contain enough items to scroll. Without this style, the scroll bar is hidden when the list box does not contain enough items. "},{label:"$CBS_DROPDOWN",documentation:"Displays only the edit control by default. The user can display the list box by selecting an icon next to the edit control. "},{label:"$CBS_DROPDOWNLIST",documentation:"Displays a static text field that displays the current selection in the list box. "},{label:"$CBS_LOWERCASE",documentation:"Converts to lowercase any uppercase characters that are typed into the edit control of a combo box. "},{label:"$CBS_NOINTEGRALHEIGHT",documentation:"Specifies that the combo box will be exactly the size specified by the application when it created the combo box. Usually, Windows CE sizes a combo box so that it does not display partial items. "},{label:"$CBS_OEMCONVERT",documentation:"Converts text typed in the combo box edit control from the Windows CE character set to the OEM character set and then back to the Windows CE set. This style is most useful for combo boxes that contain file names. It applies only to combo boxes created with the CBS_DROPDOWN style. "},{label:"$CBS_SIMPLE",documentation:"Displays the list box at all times. The current selection in the list box is displayed in the edit control. "},{label:"$CBS_SORT",documentation:"Sorts strings that are typed into the list box. "},{label:"$CBS_UPPERCASE",documentation:"Converts to uppercase any lowercase characters that are typed into the edit control of a combo box. "}],t.CompletionItemKind.Constant,"Combo Style Constant","ComboConstants.au3"),dt=(0,Ce.fillCompletions)([{label:"$DTS_UPDOWN",documentation:"Places an up-down control to the right of a DTP control to modify time values. This style can be used instead of the drop-down month calendar, which is the default style. ",detail:"Date Style Constant"},{label:"$DTS_SHOWNONE",documentation:'Enables the control to accept "no date" as a valid selection state.',detail:"Date Style Constant"},{label:"$DTS_LONGDATEFORMAT",documentation:'Displays the date in long format. The default format string for this style is defined by LOCALE_SLONGDATEFORMAT, which produces output like "Friday, April 19, 1998."',detail:"Date Style Constant"},{label:"$DTS_TIMEFORMAT",documentation:'Displays the time. The default format string for this style is defined by LOCALE_STIMEFORMAT, which produces output like "5:31:42 PM."',detail:"Date Style Constant"},{label:"$DTS_RIGHTALIGN",documentation:"The drop-down month calendar will be right-aligned with the control instead of left-aligned, which is the default.",detail:"Date Style Constant"},{label:"$DTS_SHORTDATEFORMAT",documentation:'Displays the date in short format. The default format string for this style is defined by LOCALE_SSHORTDATE, which produces output like "4/19/96".',detail:"Date Style Constant"},{label:"$MCS_NOTODAY",documentation:'The month calendar control will not display the "today" date at the bottom of the control.',detail:"MonthCal Style Constant"},{label:"$MCS_NOTODAYCIRCLE",documentation:'The month calendar control will not circle the "today" date.',detail:"MonthCal Style Constant"},{label:"$MCS_WEEKNUMBERS",documentation:"The month calendar control will display week numbers (1-52) to the left of each row of days. Week 1 is defined as the first week that contains at least four days.",detail:"MonthCal Style Constant"}],t.CompletionItemKind.Constant,"","DateTimeConstants.au3"),ct=(0,Ce.fillCompletions)([{label:"$DDL_ARCHIVE",documentation:"Includes archived files\n\n`= 0x00000020`"},{label:"$DDL_DIRECTORY",documentation:"Includes directories\n\n`= 0x00000010`"},{label:"$DDL_DRIVES",documentation:"All mapped drives are added to the list\n\n`= 0x00004000`"},{label:"$DDL_EXCLUSIVE",documentation:"Includes only files with the specified attributes\n\n`= 0x00008000`"},{label:"$DDL_HIDDEN",documentation:"Includes hidden files\n\n`= 0x00000002`"},{label:"$DDL_READONLY",documentation:"Includes read-only files\n\n`= 0x00000001`"},{label:"$DDL_READWRITE",documentation:"Includes read-write files with no additional attributes\n\n`= 0x00000000`"},{label:"$DDL_SYSTEM",documentation:"Includes system files\n\n`= 0x00000004`"}],t.CompletionItemKind.Constant,"Dir Constant","DirConstants.au3");var ht="Style Constant",ut="Message Constant",mt="Param Constant",pt="Status Constant",bt="Notification Constant",_t="Control Default Style Constant",ft=[{label:"$ES_LEFT",documentation:"`= 0`",detail:ht},{label:"$ES_CENTER",documentation:"`= 1`",detail:ht},{label:"$ES_RIGHT",documentation:"`= 2`",detail:ht},{label:"$ES_MULTILINE",documentation:"`= 4`",detail:ht},{label:"$ES_UPPERCASE",documentation:"`= 8`",detail:ht},{label:"$ES_LOWERCASE",documentation:"`= 16`",detail:ht},{label:"$ES_PASSWORD",documentation:"`= 32`",detail:ht},{label:"$ES_AUTOVSCROLL",documentation:"`= 64`",detail:ht},{label:"$ES_AUTOHSCROLL",documentation:"`= 128`",detail:ht},{label:"$ES_NOHIDESEL",documentation:"`= 256`",detail:ht},{label:"$ES_OEMCONVERT",documentation:"`= 1024`",detail:ht},{label:"$ES_READONLY",documentation:"`= 2048`",detail:ht},{label:"$ES_WANTRETURN",documentation:"`= 4096`",detail:ht},{label:"$ES_NUMBER",documentation:"`= 8192`",detail:ht},{label:"$EC_ERR",documentation:"`= -1`",detail:"Error Checking Constant"},{label:"$ECM_FIRST",documentation:"`= 0X1500`",detail:ut},{label:"$EM_CANUNDO",documentation:"`= 0xC6`",detail:ut},{label:"$EM_CHARFROMPOS",documentation:"`= 0xD7`",detail:ut},{label:"$EM_EMPTYUNDOBUFFER",documentation:"`= 0xCD`",detail:ut},{label:"$EM_FMTLINES",documentation:"`= 0xC8`",detail:ut},{label:"$EM_GETCUEBANNER",documentation:"`= ($ECM_FIRST + 2)`",detail:ut},{label:"$EM_GETFIRSTVISIBLELINE",documentation:"`= 0xCE`",detail:ut},{label:"$EM_GETHANDLE",documentation:"`= 0xBD`",detail:ut},{label:"$EM_GETIMESTATUS",documentation:"`= 0xD9`",detail:ut},{label:"$EM_GETLIMITTEXT",documentation:"`= 0xD5`",detail:ut},{label:"$EM_GETLINE",documentation:"`= 0xC4`",detail:ut},{label:"$EM_GETLINECOUNT",documentation:"`= 0xBA`",detail:ut},{label:"$EM_GETMARGINS",documentation:"`= 0xD4`",detail:ut},{label:"$EM_GETMODIFY",documentation:"`= 0xB8`",detail:ut},{label:"$EM_GETPASSWORDCHAR",documentation:"`= 0xD2`",detail:ut},{label:"$EM_GETRECT",documentation:"`= 0xB2`",detail:ut},{label:"$EM_GETSEL",documentation:"`= 0xB0`",detail:ut},{label:"$EM_GETTHUMB",documentation:"`= 0xBE`",detail:ut},{label:"$EM_GETWORDBREAKPROC",documentation:"`= 0xD1`",detail:ut},{label:"$EM_HIDEBALLOONTIP",documentation:"`= ($ECM_FIRST + 4)`",detail:ut},{label:"$EM_LIMITTEXT",documentation:"`= 0xC5`",detail:ut},{label:"$EM_LINEFROMCHAR",documentation:"`= 0xC9`",detail:ut},{label:"$EM_LINEINDEX",documentation:"`= 0xBB`",detail:ut},{label:"$EM_LINELENGTH",documentation:"`= 0xC1`",detail:ut},{label:"$EM_LINESCROLL",documentation:"`= 0xB6`",detail:ut},{label:"$EM_POSFROMCHAR",documentation:"`= 0xD6`",detail:ut},{label:"$EM_REPLACESEL",documentation:"`= 0xC2`",detail:ut},{label:"$EM_SCROLL",documentation:"`= 0xB5`",detail:ut},{label:"$EM_SCROLLCARET",documentation:"`= 0x00B7`",detail:ut},{label:"$EM_SETCUEBANNER",documentation:"`= ($ECM_FIRST + 1)`",detail:ut},{label:"$EM_SETHANDLE",documentation:"`= 0xBC`",detail:ut},{label:"$EM_SETIMESTATUS",documentation:"`= 0xD8`",detail:ut},{label:"$EM_SETLIMITTEXT",documentation:"`= $EM_LIMITTEXT`",detail:ut},{label:"$EM_SETMARGINS",documentation:"`= 0xD3`",detail:ut},{label:"$EM_SETMODIFY",documentation:"`= 0xB9`",detail:ut},{label:"$EM_SETPASSWORDCHAR",documentation:"`= 0xCC`",detail:ut},{label:"$EM_SETREADONLY",documentation:"`= 0xCF`",detail:ut},{label:"$EM_SETRECT",documentation:"`= 0xB3`",detail:ut},{label:"$EM_SETRECTNP",documentation:"`= 0xB4`",detail:ut},{label:"$EM_SETSEL",documentation:"`= 0xB1`",detail:ut},{label:"$EM_SETTABSTOPS",documentation:"`= 0xCB`",detail:ut},{label:"$EM_SETWORDBREAKPROC",documentation:"`= 0xD0`",detail:ut},{label:"$EM_SHOWBALLOONTIP",documentation:"`= ($ECM_FIRST + 3)`",detail:ut},{label:"$EM_UNDO",documentation:"`= 0xC7`",detail:ut},{label:"$EC_LEFTMARGIN",documentation:"`= 0x1`",detail:mt},{label:"$EC_RIGHTMARGIN",documentation:"`= 0x2`",detail:mt},{label:"$EC_USEFONTINFO",documentation:"`= 0xFFFF`",detail:mt},{label:"$EMSIS_COMPOSITIONSTRING",documentation:"`= 0x1`",detail:mt},{label:"$EIMES_GETCOMPSTRATONCE",documentation:"If this flag is set, the edit control hooks the WM_IME_COMPOSITION message with fFlags set to GCS_RESULTSTR and returns the result string immediately\n\n`= 0x1 `",detail:pt},{label:"$EIMES_CANCELCOMPSTRINFOCUS",documentation:"If this flag is set, the edit control cancels the composition string when it receives the WM_SETFOCUS message.\n\n`= 0x2 `",detail:pt},{label:"$EIMES_COMPLETECOMPSTRKILLFOCUS",documentation:"If this flag is set, the edit control completes the composition string upon receiving the WM_KILLFOCUS message.\n\n`= 0x4`",detail:pt},{label:"$EN_ALIGN_LTR_EC",documentation:"`= 0x700`",detail:bt},{label:"$EN_ALIGN_RTL_EC",documentation:"`= 0x701`",detail:bt},{label:"$EN_CHANGE",documentation:"`= 0x300`",detail:bt},{label:"$EN_ERRSPACE",documentation:"`= 0x500`",detail:bt},{label:"$EN_HSCROLL",documentation:"`= 0X601`",detail:bt},{label:"$EN_KILLFOCUS",documentation:"`= 0x200`",detail:bt},{label:"$EN_MAXTEXT",documentation:"`= 0x501`",detail:bt},{label:"$EN_SETFOCUS",documentation:"`= 0x100`",detail:bt},{label:"$EN_UPDATE",documentation:"`= 0x400`",detail:bt},{label:"$EN_VSCROLL",documentation:"`= 0x602`",detail:bt},{label:"$GUI_SS_DEFAULT_EDIT",documentation:"`= 0x003010c0 `",detail:_t},{label:"$GUI_SS_DEFAULT_INPUT",documentation:"`= 0x00000080`",detail:_t}];const It=(0,Ce.fillCompletions)(ft,t.CompletionItemKind.Constant,"","EditConstants.au3");var $t="XlAutoFilterOperator Enumeration Constant",gt="Constant Enumeration Constant",Ct="XlCalculation Enumeration Constant",St="XlCellType Enumeration Constant",Tt="XlColumnDataType Enumeration Constant",Gt="XlDeleteShiftDirection Enumeration Constant",Pt="XlDVAlertStyle Enumeration Constant",wt="XlDVType Enumeration Constant",yt="XlDynamicFilterCriteria Enumeration Constant",At="XlFileFormat Enumeration Constant",Dt="XlFindLookIn Enumeration Constant",Wt="XlFixedFormatQuality Enumeration Constant",Et="XlFixedFormatType Enumeration Constant",Rt="XlFormatConditionOperator Enumeration Constant",xt="XlInsertFormatOrigin Enumeration Constant",vt="XlInsertShiftDirection Enumeration Constant",Ut="XlLookAt Enumeration Constant",Ft="XlPasteSpecialOperation Enumeration Constant",Lt="XlPasteType Enumeration Constant",Bt="XlPlatform Enumeration Constant",Ot="XlReferenceStyle Enumeration Constant",Mt="XlReferenceType Enumeration Constant",Nt="xlSheetVisibility Enumeration Constant",Ht="XlSortDataOption Enumeration Constant",kt="XlSortOrder Enumeration Constant",Vt="XlSortOn Enumeration Constant",jt="XlSortOrientation Enumeration Constant",Yt="XlTextParsingType Enumeration Constant",Xt="XlTextQualifier Enumeration Constant",zt="XlYesNoGuess Enumeration Constant",Kt=[{label:"$xlAnd",documentation:"Logical AND of Criteria1 and Criteria2\n\n`= 1`",detail:$t},{label:"$xlBottom10Items",documentation:"Lowest-valued items displayed (number of items specified in Criteria1)\n\n`= 4`",detail:$t},{label:"$xlBottom10Percent",documentation:"Lowest-valued items displayed (percentage specified in Criteria1)\n\n`= 6`",detail:$t},{label:"$xlFilterCellColor",documentation:"Color of the cell\n\n`= 8`",detail:$t},{label:"$xlFilterDynamic",documentation:"Dynamic filter\n\n`= 11`",detail:$t},{label:"$xlFilterFontColor",documentation:"Color of the font\n\n`= 9`",detail:$t},{label:"$xlFilterIcon",documentation:"Filter icon\n\n`= 10`",detail:$t},{label:"$xlFilterValues",documentation:"Filter values\n\n`= 7`",detail:$t},{label:"$xlOr",documentation:"Logical OR of Criteria1 or Criteria2\n\n`= 2`",detail:$t},{label:"$xlTop10Items",documentation:"Highest-valued items displayed (number of items specified in Criteria1)\n\n`= 3`",detail:$t},{label:"$xlTop10Percent",documentation:"Highest-valued items displayed (percentage specified in Criteria1)\n\n`= 5`",detail:$t},{label:"$xlCenter",documentation:"Center\n\n`= -4108`",detail:gt},{label:"$xlLeft",documentation:"Left\n\n`= -4131`",detail:gt},{label:"$xlRight",documentation:"Right\n\n`= -4152`",detail:gt},{label:"$xlCalculationAutomatic",documentation:"Excel controls recalculation\n\n`= -4105`",detail:Ct},{label:"$xlCalculationManual",documentation:"Calculation is done when the user requests it\n\n`= -4135`",detail:Ct},{label:"$xlCalculationSemiautomatic",documentation:"Excel controls recalculation but ignores changes in tables\n\n`= 2`",detail:Ct},{label:"$xlCellTypeAllFormatConditions",documentation:"Cells of any format\n\n`= -4172`",detail:St},{label:"$xlCellTypeAllValidation",documentation:"Cells having validation criteria\n\n`= -4174`",detail:St},{label:"$xlCellTypeBlanks",documentation:"Empty cells\n\n`= 4`",detail:St},{label:"$xlCellTypeComments",documentation:"Cells containing notes\n\n`= -4144`",detail:St},{label:"$xlCellTypeConstants",documentation:"Cells containing constants\n\n`= 2`",detail:St},{label:"$xlCellTypeFormulas",documentation:"Cells containing formulas\n\n`= -4123`",detail:St},{label:"$xlCellTypeLastCell",documentation:"The last cell in the used range\n\n`= 11`",detail:St},{label:"$xlCellTypeSameFormatConditions",documentation:"Cells having the same format\n\n`= -4173`",detail:St},{label:"$xlCellTypeSameValidation",documentation:"Cells having the same validation criteria\n\n`= -4175`",detail:St},{label:"$xlCellTypeVisible",documentation:"All visible cells\n\n`= 12`",detail:St},{label:"$xlDMYFormat",documentation:"DMY date format\n\n`= 4`",detail:Tt},{label:"$xlDYMFormat",documentation:"DYM date format\n\n`= 7`",detail:Tt},{label:"$xlEMDFormat",documentation:"EMD date format\n\n`= 10`",detail:Tt},{label:"$xlGeneralFormat",documentation:"General\n\n`= 1`",detail:Tt},{label:"$xlMDYFormat",documentation:"MDY date format\n\n`= 3`",detail:Tt},{label:"$xlMYDFormat",documentation:"MYD date format\n\n`= 6`",detail:Tt},{label:"$xlSkipColumn",documentation:"Column is not parsed\n\n`= 9`",detail:Tt},{label:"$xlTextFormat",documentation:"Text\n\n`= 2`",detail:Tt},{label:"$xlYDMFormat",documentation:"YDM date format\n\n`= 8`",detail:Tt},{label:"$xlYMDFormat",documentation:"YMD date format\n\n`= 5`",detail:Tt},{label:"$xlShiftToLeft",documentation:"Cells are shifted to the left\n\n`= -4159`",detail:Gt},{label:"$xlShiftUp",documentation:"Cells are shifted up\n\n`= -4162`",detail:Gt},{label:"$xlValidAlertInformation",documentation:"Information icon\n\n`= 3`",detail:Pt},{label:"$xlValidAlertStop",documentation:"Stop icon\n\n`= 1`",detail:Pt},{label:"$xlValidAlertWarning",documentation:"Warning icon\n\n`= 2`",detail:Pt},{label:"$xlValidateCustom",documentation:"Data is validated using an arbitrary formula\n\n`= 7`",detail:wt},{label:"$xlValidateDate",documentation:"Date values\n\n`= 4`",detail:wt},{label:"$xlValidateDecimal",documentation:"Numeric values\n\n`= 2`",detail:wt},{label:"$xlValidateInputOnly",documentation:"Validate only when user changes the value\n\n`= 0`",detail:wt},{label:"$xlValidateList",documentation:"Value must be present in a specified list\n\n`= 3`",detail:wt},{label:"$xlValidateTextLength",documentation:"Length of text\n\n`= 6`",detail:wt},{label:"$xlValidateTime",documentation:"Time values\n\n`= 5`",detail:wt},{label:"$xlValidateWholeNumber",documentation:"Whole numeric values\n\n`= 1`",detail:wt},{label:"$xlFilterAboveAverage",documentation:"Filter all above-average values\n\n`= 33`",detail:yt},{label:"$xlFilterAllDatesInPeriodApril",documentation:"Filter all dates in April\n\n`= 24`",detail:yt},{label:"$xlFilterAllDatesInPeriodAugust",documentation:"Filter all dates in August\n\n`= 28`",detail:yt},{label:"$xlFilterAllDatesInPeriodDecember",documentation:"Filter all dates in December\n\n`= 32`",detail:yt},{label:"$xlFilterAllDatesInPeriodFebruray",documentation:"Filter all dates in February\n\n`= 22`",detail:yt},{label:"$xlFilterAllDatesInPeriodJanuary",documentation:"Filter all dates in January\n\n`= 21`",detail:yt},{label:"$xlFilterAllDatesInPeriodJuly",documentation:"Filter all dates in July\n\n`= 27`",detail:yt},{label:"$xlFilterAllDatesInPeriodJune",documentation:"Filter all dates in June\n\n`= 26`",detail:yt},{label:"$xlFilterAllDatesInPeriodMarch",documentation:"Filter all dates in March\n\n`= 23`",detail:yt},{label:"$xlFilterAllDatesInPeriodMay",documentation:"Filter all dates in May\n\n`= 25`",detail:yt},{label:"$xlFilterAllDatesInPeriodNovember",documentation:"Filter all dates in November\n\n`= 31`",detail:yt},{label:"$xlFilterAllDatesInPeriodOctober",documentation:"Filter all dates in October\n\n`= 30`",detail:yt},{label:"$xlFilterAllDatesInPeriodQuarter1",documentation:"Filter all dates in Quarter1\n\n`= 17`",detail:yt},{label:"$xlFilterAllDatesInPeriodQuarter2",documentation:"Filter all dates in Quarter2\n\n`= 18`",detail:yt},{label:"$xlFilterAllDatesInPeriodQuarter3",documentation:"Filter all dates in Quarter3\n\n`= 19`",detail:yt},{label:"$xlFilterAllDatesInPeriodQuarter4",documentation:"Filter all dates in Quarter4\n\n`= 20`",detail:yt},{label:"$xlFilterAllDatesInPeriodSeptember",documentation:"Filter all dates in September\n\n`= 29`",detail:yt},{label:"$xlFilterBelowAverage",documentation:"Filter all below-average values\n\n`= 34`",detail:yt},{label:"$xlFilterLastMonth",documentation:"Filter all values related to last month\n\n`= 8`",detail:yt},{label:"$xlFilterLastQuarter",documentation:"Filter all values related to last quarter\n\n`= 11`",detail:yt},{label:"$xlFilterLastWeek",documentation:"Filter all values related to last week\n\n`= 5`",detail:yt},{label:"$xlFilterLastYear",documentation:"Filter all values related to last year\n\n`= 14`",detail:yt},{label:"$xlFilterNextMonth",documentation:"Filter all values related to next month\n\n`= 9`",detail:yt},{label:"$xlFilterNextQuarter",documentation:"Filter all values related to next quarter\n\n`= 12`",detail:yt},{label:"$xlFilterNextWeek",documentation:"Filter all values related to next week\n\n`= 6`",detail:yt},{label:"$xlFilterNextYear",documentation:"Filter all values related to next year\n\n`= 15`",detail:yt},{label:"$xlFilterThisMonth",documentation:"Filter all values related to the current month\n\n`= 7`",detail:yt},{label:"$xlFilterThisQuarter",documentation:"Filter all values related to the current quarter\n\n`= 10`",detail:yt},{label:"$xlFilterThisWeek",documentation:"Filter all values related to the current week\n\n`= 4`",detail:yt},{label:"$xlFilterThisYear",documentation:"Filter all values related to the current year\n\n`= 13`",detail:yt},{label:"$xlFilterToday",documentation:"Filter all values related to the current date\n\n`= 1`",detail:yt},{label:"$xlFilterTomorrow",documentation:"Filter all values related to tomorrow\n\n`= 3`",detail:yt},{label:"$xlFilterYearToDate",documentation:"Filter all values from today until a year ago\n\n`= 16`",detail:yt},{label:"$xlFilterYesterday",documentation:"Filter all values related to yesterday\n\n`= 2`",detail:yt},{label:"$xlAddIn",documentation:"Microsoft Excel 97-2003 Add-In\n\n`= 18`",detail:At},{label:"$xlAddIn8",documentation:"Microsoft Excel 97-2003 Add-In\n\n`= 18`",detail:At},{label:"$xlCSV",documentation:"CSV\n\n`= 6`",detail:At},{label:"$xlCSVMac",documentation:"Macintosh CSV\n\n`= 22`",detail:At},{label:"$xlCSVMSDOS",documentation:"MSDOS CSV\n\n`= 24`",detail:At},{label:"$xlCSVWindows",documentation:"Windows CSV\n\n`= 23`",detail:At},{label:"$xlCurrentPlatformText",documentation:"Current Platform Text\n\n`= -4158`",detail:At},{label:"$xlDBF2",documentation:"DBF2\n\n`= 7`",detail:At},{label:"$xlDBF3",documentation:"DBF3\n\n`= 8`",detail:At},{label:"$xlDBF4",documentation:"DBF4\n\n`= 11`",detail:At},{label:"$xlDIF",documentation:"DIF\n\n`= 9`",detail:At},{label:"$xlExcel12",documentation:"Excel12 (Excel Binary Workbook in 2007 with or without macros, .xlsb)\n\n`= 50`",detail:At},{label:"$xlExcel2",documentation:"Excel2\n\n`= 16`",detail:At},{label:"$xlExcel2FarEast",documentation:"Excel2 FarEast\n\n`= 27`",detail:At},{label:"$xlExcel3",documentation:"Excel3\n\n`= 29`",detail:At},{label:"$xlExcel4",documentation:"Excel4\n\n`= 33`",detail:At},{label:"$xlExcel4Workbook",documentation:"Excel4 Workbook\n\n`= 35`",detail:At},{label:"$xlExcel5",documentation:"Excel5\n\n`= 39`",detail:At},{label:"$xlExcel7",documentation:"Excel7\n\n`= 39`",detail:At},{label:"$xlExcel8",documentation:"Excel8 (97-2003 format in Excel 2007, .xls)\n\n`= 56`",detail:At},{label:"$xlExcel9795",documentation:"Excel9795\n\n`= 43`",detail:At},{label:"$xlHtml",documentation:"HTML format\n\n`= 44`",detail:At},{label:"$xlIntlAddIn",documentation:"International Add-In\n\n`= 26`",detail:At},{label:"$xlIntlMacro",documentation:"International Macro\n\n`= 25`",detail:At},{label:"$xlOpenDocumentSpreadsheet",documentation:"OpenDocument Spreadsheet\n\n`= 60`",detail:At},{label:"$xlOpenXMLAddIn",documentation:"Open XML Add-In\n\n`= 55`",detail:At},{label:"$xlOpenXMLTemplate",documentation:"Open XML Template\n\n`= 54`",detail:At},{label:"$xlOpenXMLTemplateMacroEnabled",documentation:"Open XML Template Macro Enabled\n\n`= 53`",detail:At},{label:"$xlOpenXMLWorkbook",documentation:"Open XML Workbook (without macros in 2007, .xlsx)\n\n`= 51`",detail:At},{label:"$xlOpenXMLWorkbookMacroEnabled",documentation:"Open XML Workbook Macro Enabled (with or without macros in 2007, .xlsm)\n\n`= 52`",detail:At},{label:"$xlSYLK",documentation:"SYLK\n\n`= 2`",detail:At},{label:"$xlTemplate",documentation:"Template\n\n`= 17`",detail:At},{label:"$xlTemplate8",documentation:"Template 8\n\n`= 17`",detail:At},{label:"$xlTextMac",documentation:" Macintosh Text\n\n`= 19`",detail:At},{label:"$xlTextMSDOS",documentation:"MSDOS Text\n\n`= 21`",detail:At},{label:"$xlTextPrinter",documentation:"Printer Text\n\n`= 36`",detail:At},{label:"$xlTextWindows",documentation:"Windows Text\n\n`= 20`",detail:At},{label:"$xlUnicodeText",documentation:"Unicode Text\n\n`= 42`",detail:At},{label:"$xlWebArchive",documentation:"Web Archive\n\n`= 45`",detail:At},{label:"$xlWJ2WD1",documentation:"WJ2WD1\n\n`= 14`",detail:At},{label:"$xlWJ3",documentation:"WJ3\n\n`= 40`",detail:At},{label:"$xlWJ3FJ3",documentation:"WJ3FJ3\n\n`= 41`",detail:At},{label:"$xlWK1",documentation:"WK1\n\n`= 5`",detail:At},{label:"$xlWK1ALL",documentation:"WK1ALL\n\n`= 31`",detail:At},{label:"$xlWK1FMT",documentation:"WK1FMT\n\n`= 30`",detail:At},{label:"$xlWK3",documentation:"WK3\n\n`= 15`",detail:At},{label:"$xlWK3FM3",documentation:"WK3FM3\n\n`= 32`",detail:At},{label:"$xlWK4",documentation:"WK4\n\n`= 38`",detail:At},{label:"$xlWKS",documentation:"Worksheet\n\n`= 4`",detail:At},{label:"$xlWorkbookDefault",documentation:"Workbook default (.xls for < Excel 2007, .xlsx for > Excel 2007)\n\n`= 51`",detail:At},{label:"$xlWorkbookNormal",documentation:"Workbook normal\n\n`= -4143`",detail:At},{label:"$xlWorks2FarEast",documentation:"Works2 FarEast\n\n`= 28`",detail:At},{label:"$xlWQ1",documentation:"WQ1\n\n`= 34`",detail:At},{label:"$xlXMLSpreadsheet",documentation:"XML Spreadsheet\n\n`= 46`",detail:At},{label:"$xlComments",documentation:"Comments\n\n`= -4144`",detail:Dt},{label:"$xlFormulas",documentation:"Formulas\n\n`= -4123`",detail:Dt},{label:"$xlValues",documentation:"Values\n\n`= -4163`",detail:Dt},{label:"$xlQualityMinimum",documentation:"Minimum quality\n\n`= 1`",detail:Wt},{label:"$xlQualityStandard",documentation:"Standard quality\n\n`= 0`",detail:Wt},{label:"$xlTypePDF",documentation:'"PDF" - Portable Document Format file (.pdf)\n\n`= 0`',detail:Et},{label:"$xlTypeXPS",documentation:'"XPS" - XPS Document (.xps)\n\n`= 1`',detail:Et},{label:"$xlBetween",documentation:"Between. Can be used only if two formulas are provided\n\n`= 1`",detail:Rt},{label:"$xlEqual",documentation:"Equal\n\n`= 3`",detail:Rt},{label:"$xlGreater",documentation:"Greater than\n\n`= 5`",detail:Rt},{label:"$xlGreaterEqual",documentation:"Greater than or equal to\n\n`= 7`",detail:Rt},{label:"$xlLess",documentation:"Less than\n\n`= 6`",detail:Rt},{label:"$xlLessEqual",documentation:"Less than or equal to\n\n`= 8`",detail:Rt},{label:"$xlNotBetween",documentation:"Not between. Can be used only if two formulas are provided\n\n`= 2`",detail:Rt},{label:"$xlNotEqual",documentation:"Not equal\n\n`= 4`",detail:Rt},{label:"$xlFormatFromLeftOrAbove",documentation:"Copy the format from cells above and/or to the left\n\n`= 0`",detail:xt},{label:"$xlFormatFromRightOrBelow",documentation:"Copy the format from cells below and/or to the right\n\n`= 1`",detail:xt},{label:"$xlShiftDown",documentation:"Shift cells down\n\n`= -4121`",detail:vt},{label:"$xlShiftToRight",documentation:"Shift cells to the right\n\n`= -4161`",detail:vt},{label:"$xlPart",documentation:"Match against any part of the search text\n\n`= 2`",detail:Ut},{label:"$xlWhole",documentation:"Match against the whole of the search text\n\n`= 1`",detail:Ut},{label:"$xlPasteSpecialOperationAdd",documentation:"Copied data will be added with the value in the destination cell\n\n`= 2`",detail:Ft},{label:"$xlPasteSpecialOperationDivide",documentation:"Copied data will be divided with the value in the destination cell\n\n`= 5`",detail:Ft},{label:"$xlPasteSpecialOperationMultiply",documentation:"Copied data will be multiplied with the value in the destination cell\n\n`= 4`",detail:Ft},{label:"$xlPasteSpecialOperationNone",documentation:"No calculation will be done in the paste operation\n\n`= -4142`",detail:Ft},{label:"$xlPasteSpecialOperationSubtract",documentation:"Copied data will be subtracted with the value in the destination cell\n\n`= 3`",detail:Ft},{label:"$xlPasteAll",documentation:"Everything will be pasted\n\n`= -4104`",detail:Lt},{label:"$xlPasteAllExceptBorders",documentation:"Everything except borders will be pasted\n\n`= 7`",detail:Lt},{label:"$xlPasteAllMergingConditionalFormats",documentation:"Everything will be pasted and conditional formats will be merged\n\n`= 14`",detail:Lt},{label:"$xlPasteAllUsingSourceTheme",documentation:"Everything will be pasted using the source theme\n\n`= 13`",detail:Lt},{label:"$xlPasteColumnWidths",documentation:"Copied column width is pasted\n\n`= 8`",detail:Lt},{label:"$xlPasteComments",documentation:"Comments are pasted\n\n`= -4144`",detail:Lt},{label:"$xlPasteFormats",documentation:"Copied source format is pasted\n\n`= -4122`",detail:Lt},{label:"$xlPasteFormulas",documentation:"Formulas are pasted\n\n`= -4123`",detail:Lt},{label:"$xlPasteFormulasAndNumberFormats",documentation:"Formulas and Number formats are pasted\n\n`= 11`",detail:Lt},{label:"$xlPasteValidation",documentation:"Validations are pasted\n\n`= 6`",detail:Lt},{label:"$xlPasteValues",documentation:"Values are pasted\n\n`= -4163`",detail:Lt},{label:"$xlPasteValuesAndNumberFormats",documentation:"Values and Number formats are pasted\n\n`= 12`",detail:Lt},{label:"$xlMacintosh",documentation:"Macintosh\n\n`= 1`",detail:Bt},{label:"$xlMSDOS",documentation:"MS-DOS\n\n`= 3`",detail:Bt},{label:"$xlWindows",documentation:"Microsoft Windows\n\n`= 2`",detail:Bt},{label:"$xlA1",documentation:"Default. Use xlA1 to return an A1-style reference\n\n`= 1`",detail:Ot},{label:"$xlR1C1",documentation:"Use xlR1C1 to return an R1C1-style reference\n\n`= -4150`",detail:Ot},{label:"$xlAbsolute",documentation:"Convert to absolute row and column style\n\n`= 1`",detail:Mt},{label:"$xlAbsRowRelColumn",documentation:"Convert to absolute row and relative column style\n\n`= 2`",detail:Mt},{label:"$xlRelative",documentation:"Convert to relative row and column style\n\n`= 4`",detail:Mt},{label:"$xlRelRowAbsColumn",documentation:"Convert to relative row and absolute column style\n\n`= 3`",detail:Mt},{label:"$xlSheetHidden",documentation:"Hides the worksheet which the user can unhide via menu\n\n`= 0`",detail:Nt},{label:"$xlSheetVeryHidden",documentation:"Hides the object so that the only way for you to make it visible again is by setting this property to True (the user cannot make the object visible)\n\n`= 2`",detail:Nt},{label:"$xlSheetVisible",documentation:"Displays the sheet\n\n`= -1`",detail:Nt},{label:"$xlSortNormal",documentation:"Sorts numeric and text data separately\n\n`= 0`",detail:Ht},{label:"$xlSortTextAsNumbers",documentation:"Treat text as numeric data for the sort\n\n`= 1`",detail:Ht},{label:"$xlAscending",documentation:"Sorts the specified field in ascending order\n\n`= 1`",detail:kt},{label:"$xlDescending",documentation:"Sorts the specified field in descending order\n\n`= 2`",detail:kt},{label:"$xlSortOnCellColor",documentation:"Cell color\n\n`= 1`",detail:Vt},{label:"$xlSortOnFontColor",documentation:"Font color\n\n`= 2`",detail:Vt},{label:"$xlSortOnIcon",documentation:"Icon\n\n`= 3`",detail:Vt},{label:"$xlSortOnValues",documentation:"Values\n\n`= 0`",detail:Vt},{label:"$xlSortColumns",documentation:"Sorts by column\n\n`= 1`",detail:jt},{label:"$xlSortRows",documentation:"Sorts by row. This is the default value\n\n`= 2`",detail:jt},{label:"$xlDelimited",documentation:"Default. Indicates that the file is delimited by delimiter characters\n\n`= 1`",detail:Yt},{label:"$xlFixedWidth",documentation:"Indicates that the data in the file is arranged in columns of fixed widths\n\n`= 2`",detail:Yt},{label:"$xlTextQualifierDoubleQuote",documentation:'Double quotation mark (")\n\n`= 1`',detail:Xt},{label:"$xlTextQualifierNone",documentation:"No delimiter\n\n`= -4142`",detail:Xt},{label:"$xlTextQualifierSingleQuote",documentation:"Single quotation mark (')\n\n`= 2`",detail:Xt},{label:"$xlGuess",documentation:"Excel determines whether there is a header, and where it is, if there is one\n\n`= 0`",detail:zt},{label:"$xlNo",documentation:"Default. The entire range should be sorted\n\n`= 2`",detail:zt},{label:"$xlYes",documentation:"The entire range should not be sorted\n\n`= 1`",detail:zt}];const qt=(0,Ce.fillCompletions)(Kt,t.CompletionItemKind.Constant,"","ExcelConstants.au3");var Qt="File Copy/Install Option Constant",Jt="File Date/Time Option Constant",Zt="FileGetTime Constant",ea="FileSelectFolder Constant",ta="FileSetTime/FileSetAttrib Constant",aa="File Open Mode Constant",oa="File Open/Save Dialog Options",na="File Constant",ia="FileGetEncoding Constant",ra="FileGetLongName/FileGetShortName Constant",la="FileGetVersion Constant",sa="_FileReadToArray Mode Constant",da="_FileListToArray Mode Constant",ca="_FileListToArrayRec Mode Constant",ha="_PathSplit Constant",ua=[{label:"$FC_NOOVERWRITE",documentation:"Do not overwrite existing files (default)\n\n`= 0`",detail:Qt},{label:"$FC_OVERWRITE",documentation:"Overwrite existing files\n\n`= 1`",detail:Qt},{label:"$FC_CREATEPATH",documentation:"Create destination directory structure if it doesn't exist\n\n`= 8`",detail:Qt},{label:"$FT_MODIFIED",documentation:"Date and time file was last modified (default)\n\n`= 0`",detail:Jt},{label:"$FT_CREATED",documentation:"Date and time file was created\n\n`= 1`",detail:Jt},{label:"$FT_ACCESSED",documentation:"Date and time file was last accessed\n\n`= 2`",detail:Jt},{label:"$FT_ARRAY",documentation:"`= 0`",detail:Zt},{label:"$FT_STRING",documentation:"`= 1`",detail:Zt},{label:"$FSF_CREATEBUTTON",documentation:"`= 1`",detail:ea},{label:"$FSF_NEWDIALOG",documentation:"`= 2`",detail:ea},{label:"$FSF_EDITCONTROL",documentation:"`= 4`",detail:ea},{label:"$FT_NONRECURSIVE",documentation:"`= 0`",detail:ta},{label:"$FT_RECURSIVE",documentation:"`= 1`",detail:ta},{label:"$FO_READ",documentation:"Read mode\n\n`= 0`",detail:aa},{label:"$FO_APPEND",documentation:"Write mode (append)\n\n`= 1`",detail:aa},{label:"$FO_OVERWRITE",documentation:"Write mode (erase previous contents)\n\n`= 2`",detail:aa},{label:"$FO_CREATEPATH",documentation:"Create directory structure if it doesn't exist\n\n`= 8`",detail:aa},{label:"$FO_BINARY",documentation:"Read/Write mode binary\n\n`= 16`",detail:aa},{label:"$FO_UNICODE",documentation:"Write mode Unicode UTF16-LE\n\n`= 32`",detail:aa},{label:"$FO_UTF16_LE",documentation:"Write mode Unicode UTF16-LE\n\n`= 32`",detail:aa},{label:"$FO_UTF16_BE",documentation:"Write mode Unicode UTF16-BE\n\n`= 64`",detail:aa},{label:"$FO_UTF8",documentation:"Read/Write mode UTF8 with BOM\n\n`= 128`",detail:aa},{label:"$FO_UTF8_NOBOM",documentation:"Read/Write mode UTF8 with no BOM\n\n`= 256`",detail:aa},{label:"$FO_ANSI",documentation:"Read/Write mode ANSI\n\n`= 512`",detail:aa},{label:"$FO_UTF16_LE_NOBOM",documentation:"Write mode Unicode UTF16-LE with no BOM\n\n`= 1024`",detail:aa},{label:"$FO_UTF16_BE_NOBOM",documentation:"Write mode Unicode UTF16-BE with no BOM\n\n`= 2048`",detail:aa},{label:"$FO_UTF8_FULL",documentation:"Use full file UTF8 detection if no BOM present\n\n`= 16384`",detail:aa},{label:"$FO_FULLFILE_DETECT",documentation:"Use full file UTF8 detection if no BOM present\n\n`= 16384`",detail:aa},{label:"$EOF",documentation:"End-of-file reached\n\n`= -1`",detail:"File Read Option Constant"},{label:"$FD_FILEMUSTEXIST",documentation:"File must exist\n\n`= 1 `",detail:oa},{label:"$FD_PATHMUSTEXIST",documentation:"Path must exist\n\n`= 2 `",detail:oa},{label:"$FD_MULTISELECT",documentation:"Allow multi-select\n\n`= 4 `",detail:oa},{label:"$FD_PROMPTCREATENEW",documentation:"Prompt to create new file\n\n`= 8 `",detail:oa},{label:"$FD_PROMPTOVERWRITE",documentation:"Prompt to overWrite file\n\n`= 16 `",detail:oa},{label:"$CREATE_NEW",documentation:"`= 1`",detail:oa},{label:"$CREATE_ALWAYS",documentation:"`= 2`",detail:oa},{label:"$OPEN_EXISTING",documentation:"`= 3`",detail:oa},{label:"$OPEN_ALWAYS",documentation:"`= 4`",detail:oa},{label:"$TRUNCATE_EXISTING",documentation:"`= 5`",detail:oa},{label:"$INVALID_SET_FILE_POINTER",documentation:"`= -1`",detail:oa},{label:"$FILE_BEGIN",documentation:"`= 0`",detail:"File Pointer Constant"},{label:"$FILE_CURRENT",documentation:"`= 1`",detail:"File Pointer Constant"},{label:"$FILE_END",documentation:"`= 2`",detail:"File Pointer Constant"},{label:"$FILE_ATTRIBUTE_READONLY",documentation:"`= 0x00000001`",detail:na},{label:"$FILE_ATTRIBUTE_HIDDEN",documentation:"`= 0x00000002`",detail:na},{label:"$FILE_ATTRIBUTE_SYSTEM",documentation:"`= 0x00000004`",detail:na},{label:"$FILE_ATTRIBUTE_DIRECTORY",documentation:"`= 0x00000010`",detail:na},{label:"$FILE_ATTRIBUTE_ARCHIVE",documentation:"`= 0x00000020`",detail:na},{label:"$FILE_ATTRIBUTE_DEVICE",documentation:"`= 0x00000040`",detail:na},{label:"$FILE_ATTRIBUTE_NORMAL",documentation:"`= 0x00000080`",detail:na},{label:"$FILE_ATTRIBUTE_TEMPORARY",documentation:"`= 0x00000100`",detail:na},{label:"$FILE_ATTRIBUTE_SPARSE_FILE",documentation:"`= 0x00000200`",detail:na},{label:"$FILE_ATTRIBUTE_REPARSE_POINT",documentation:"`= 0x00000400`",detail:na},{label:"$FILE_ATTRIBUTE_COMPRESSED",documentation:"`= 0x00000800`",detail:na},{label:"$FILE_ATTRIBUTE_OFFLINE",documentation:"`= 0x00001000`",detail:na},{label:"$FILE_ATTRIBUTE_NOT_CONTENT_INDEXED",documentation:"`= 0x00002000`",detail:na},{label:"$FILE_ATTRIBUTE_ENCRYPTED",documentation:"`= 0x00004000`",detail:na},{label:"$FILE_SHARE_READ",documentation:"`= 0x00000001`",detail:na},{label:"$FILE_SHARE_WRITE",documentation:"`= 0x00000002`",detail:na},{label:"$FILE_SHARE_DELETE",documentation:"`= 0x00000004`",detail:na},{label:"$FILE_SHARE_READWRITE",documentation:"`= BitOR($FILE_SHARE_READ, $FILE_SHARE_WRITE)`",detail:na},{label:"$FILE_SHARE_ANY",documentation:"`= BitOR($FILE_SHARE_READ, $FILE_SHARE_WRITE, $FILE_SHARE_DELETE)`",detail:na},{label:"$GENERIC_ALL",documentation:"`= 0x10000000`",detail:na},{label:"$GENERIC_EXECUTE",documentation:"`= 0x20000000`",detail:na},{label:"$GENERIC_WRITE",documentation:"`= 0x40000000`",detail:na},{label:"$GENERIC_READ",documentation:"`= 0x80000000`",detail:na},{label:"$GENERIC_READWRITE",documentation:"`= BitOR($GENERIC_READ, $GENERIC_WRITE)`",detail:na},{label:"$FILE_ENCODING_UTF16LE",documentation:"`= 32`",detail:ia},{label:"$FE_ENTIRE_UTF8",documentation:"`= 1`",detail:ia},{label:"$FE_PARTIALFIRST_UTF8",documentation:"`= 2`",detail:ia},{label:"$FN_FULLPATH",documentation:"`= 0`",detail:ra},{label:"$FN_RELATIVEPATH",documentation:"`= 1`",detail:ra},{label:"$FV_COMMENTS",documentation:'`= "Comments"`',detail:la},{label:"$FV_COMPANYNAME",documentation:'`= "CompanyName"`',detail:la},{label:"$FV_FILEDESCRIPTION",documentation:'`= "FileDescription"`',detail:la},{label:"$FV_FILEVERSION",documentation:'`= "FileVersion"`',detail:la},{label:"$FV_INTERNALNAME",documentation:'`= "InternalName"`',detail:la},{label:"$FV_LEGALCOPYRIGHT",documentation:'`= "LegalCopyright"`',detail:la},{label:"$FV_LEGALTRADEMARKS",documentation:'`= "LegalTrademarks"`',detail:la},{label:"$FV_ORIGINALFILENAME",documentation:'`= "OriginalFilename"`',detail:la},{label:"$FV_PRODUCTNAME",documentation:'`= "ProductName"`',detail:la},{label:"$FV_PRODUCTVERSION",documentation:'`= "ProductVersion"`',detail:la},{label:"$FV_PRIVATEBUILD",documentation:'`= "PrivateBuild"`',detail:la},{label:"$FV_SPECIALBUILD",documentation:'`= "SpecialBuild"`',detail:la},{label:"$FRTA_NOCOUNT",documentation:"`= 0`",detail:sa},{label:"$FRTA_COUNT",documentation:"`= 1`",detail:sa},{label:"$FRTA_INTARRAYS",documentation:"`= 2`",detail:sa},{label:"$FRTA_ENTIRESPLIT",documentation:"`= 4`",detail:sa},{label:"$FLTA_FILESFOLDERS",documentation:"`= 0`",detail:da},{label:"$FLTA_FILES",documentation:"`= 1`",detail:da},{label:"$FLTA_FOLDERS",documentation:"`= 2`",detail:da},{label:"$FLTAR_FILESFOLDERS",documentation:"`= 0`",detail:ca},{label:"$FLTAR_FILES",documentation:"`= 1`",detail:ca},{label:"$FLTAR_FOLDERS",documentation:"`= 2`",detail:ca},{label:"$FLTAR_NOHIDDEN",documentation:"`= 4`",detail:ca},{label:"$FLTAR_NOSYSTEM",documentation:"`= 8`",detail:ca},{label:"$FLTAR_NOLINK",documentation:"`= 16`",detail:ca},{label:"$FLTAR_NORECUR",documentation:"`= 0`",detail:ca},{label:"$FLTAR_RECUR",documentation:"`= 1`",detail:ca},{label:"$FLTAR_NOSORT",documentation:"`= 0`",detail:ca},{label:"$FLTAR_SORT",documentation:"`= 1`",detail:ca},{label:"$FLTAR_FASTSORT",documentation:"`= 2`",detail:ca},{label:"$FLTAR_NOPATH",documentation:"`= 0`",detail:ca},{label:"$FLTAR_RELPATH",documentation:"`= 1`",detail:ca},{label:"$FLTAR_FULLPATH",documentation:"`= 2`",detail:ca},{label:"$PATH_ORIGINAL",documentation:"`= 0`",detail:ha},{label:"$PATH_DRIVE",documentation:"`= 1`",detail:ha},{label:"$PATH_DIRECTORY",documentation:"`= 2`",detail:ha},{label:"$PATH_FILENAME",documentation:"`= 3`",detail:ha},{label:"$PATH_EXTENSION",documentation:"`= 4`",detail:ha}];const ma=(0,Ce.fillCompletions)(ua,t.CompletionItemKind.Constant,"","FileConstants.au3");var pa="Font Weight Constant",ba="Font Dialog Constant",_a="Font Char Set Constant",fa="Font Output Precision Constant",Ia="Font Clipping Precision Constant",$a="Font Quality Constant",ga="Font Pitch/Family Constant",Ca="Font Constant",Sa=[{label:"$FW_DONTCARE",documentation:"`= 0`",detail:pa},{label:"$FW_THIN",documentation:"`= 100`",detail:pa},{label:"$FW_EXTRALIGHT",documentation:"`= 200`",detail:pa},{label:"$FW_ULTRALIGHT",documentation:"`= 200`",detail:pa},{label:"$FW_LIGHT",documentation:"`= 300`",detail:pa},{label:"$FW_NORMAL",documentation:"`= 400`",detail:pa},{label:"$FW_REGULAR",documentation:"`= 400`",detail:pa},{label:"$FW_MEDIUM",documentation:"`= 500`",detail:pa},{label:"$FW_SEMIBOLD",documentation:"`= 600`",detail:pa},{label:"$FW_DEMIBOLD",documentation:"`= 600`",detail:pa},{label:"$FW_BOLD",documentation:"`= 700`",detail:pa},{label:"$FW_EXTRABOLD",documentation:"`= 800`",detail:pa},{label:"$FW_ULTRABOLD",documentation:"`= 800`",detail:pa},{label:"$FW_HEAVY",documentation:"`= 900`",detail:pa},{label:"$FW_BLACK",documentation:"`= 900`",detail:pa},{label:"$CF_EFFECTS",documentation:"`= 0x100`",detail:ba},{label:"$CF_PRINTERFONTS",documentation:"`= 0x2`",detail:ba},{label:"$CF_SCREENFONTS",documentation:"`= 0x1`",detail:ba},{label:"$CF_NOSCRIPTSEL",documentation:"`= 0x800000`",detail:ba},{label:"$CF_INITTOLOGFONTSTRUCT",documentation:"`= 0x40`",detail:ba},{label:"$LOGPIXELSX",documentation:"`= 88`",detail:ba},{label:"$LOGPIXELSY",documentation:"`= 90`",detail:ba},{label:"$ANSI_CHARSET",documentation:"`= 0`",detail:_a},{label:"$ARABIC_CHARSET",documentation:"`= 178`",detail:_a},{label:"$BALTIC_CHARSET",documentation:"`= 186`",detail:_a},{label:"$CHINESEBIG5_CHARSET",documentation:"`= 136`",detail:_a},{label:"$DEFAULT_CHARSET",documentation:"`= 1`",detail:_a},{label:"$EASTEUROPE_CHARSET",documentation:"`= 238`",detail:_a},{label:"$GB2312_CHARSET",documentation:"`= 134`",detail:_a},{label:"$GREEK_CHARSET",documentation:"`= 161`",detail:_a},{label:"$HANGEUL_CHARSET",documentation:"`= 129`",detail:_a},{label:"$HEBREW_CHARSET",documentation:"`= 177`",detail:_a},{label:"$JOHAB_CHARSET",documentation:"`= 130`",detail:_a},{label:"$MAC_CHARSET",documentation:"`= 77`",detail:_a},{label:"$OEM_CHARSET",documentation:"`= 255`",detail:_a},{label:"$RUSSIAN_CHARSET",documentation:"`= 204`",detail:_a},{label:"$SHIFTJIS_CHARSET",documentation:"`= 128`",detail:_a},{label:"$SYMBOL_CHARSET",documentation:"`= 2`",detail:_a},{label:"$THAI_CHARSET",documentation:"`= 222`",detail:_a},{label:"$TURKISH_CHARSET",documentation:"`= 162`",detail:_a},{label:"$VIETNAMESE_CHARSET",documentation:"`= 163`",detail:_a},{label:"$OUT_CHARACTER_PRECIS",documentation:"`= 2`",detail:fa},{label:"$OUT_DEFAULT_PRECIS",documentation:"`= 0`",detail:fa},{label:"$OUT_DEVICE_PRECIS",documentation:"`= 5`",detail:fa},{label:"$OUT_OUTLINE_PRECIS",documentation:"`= 8`",detail:fa},{label:"$OUT_PS_ONLY_PRECIS",documentation:"`= 10`",detail:fa},{label:"$OUT_RASTER_PRECIS",documentation:"`= 6`",detail:fa},{label:"$OUT_STRING_PRECIS",documentation:"`= 1`",detail:fa},{label:"$OUT_STROKE_PRECIS",documentation:"`= 3`",detail:fa},{label:"$OUT_TT_ONLY_PRECIS",documentation:"`= 7`",detail:fa},{label:"$OUT_TT_PRECIS",documentation:"`= 4`",detail:fa},{label:"$CLIP_CHARACTER_PRECIS",documentation:"`= 1`",detail:Ia},{label:"$CLIP_DEFAULT_PRECIS",documentation:"`= 0`",detail:Ia},{label:"$CLIP_DFA_DISABLE",documentation:"`= 0x0030`",detail:Ia},{label:"$CLIP_EMBEDDED",documentation:"`= 128`",detail:Ia},{label:"$CLIP_LH_ANGLES",documentation:"`= 16`",detail:Ia},{label:"$CLIP_MASK",documentation:"`= 0xF`",detail:Ia},{label:"$CLIP_DFA_OVERRIDE",documentation:"`= 0x0040`",detail:Ia},{label:"$CLIP_STROKE_PRECIS",documentation:"`= 2`",detail:Ia},{label:"$CLIP_TT_ALWAYS",documentation:"`= 32`",detail:Ia},{label:"$ANTIALIASED_QUALITY",documentation:"`= 4`",detail:$a},{label:"$DEFAULT_QUALITY",documentation:"`= 0`",detail:$a},{label:"$DRAFT_QUALITY",documentation:"`= 1`",detail:$a},{label:"$NONANTIALIASED_QUALITY",documentation:"`= 3`",detail:$a},{label:"$PROOF_QUALITY",documentation:"`= 2`",detail:$a},{label:"$CLEARTYPE_QUALITY",documentation:"`= 5`",detail:$a},{label:"$DEFAULT_PITCH",documentation:"`= 0`",detail:ga},{label:"$FIXED_PITCH",documentation:"`= 1`",detail:ga},{label:"$VARIABLE_PITCH",documentation:"`= 2`",detail:ga},{label:"$FF_DECORATIVE",documentation:"`= 80`",detail:Ca},{label:"$FF_DONTCARE",documentation:"`= 0`",detail:Ca},{label:"$FF_MODERN",documentation:"`= 48`",detail:Ca},{label:"$FF_ROMAN",documentation:"`= 16`",detail:Ca},{label:"$FF_SCRIPT",documentation:"`= 64`",detail:Ca},{label:"$FF_SWISS",documentation:"`= 32`",detail:Ca},{label:"$FS_REGULAR",documentation:"`= 0x00`",detail:Ca},{label:"$FS_BOLD",documentation:"`= 0x01`",detail:Ca},{label:"$FS_ITALIC",documentation:"`= 0x02`",detail:Ca}];const Ta=(0,Ce.fillCompletions)(Sa,t.CompletionItemKind.Constant,"","FontConstants.au3");var Ga="Frame Type Constant",Pa="Initial Frame State Constant",wa="Set State Constant",ya=[{label:"$DFC_BUTTON",documentation:"`= 4`",detail:Ga},{label:"$DFC_CAPTION",documentation:"`= 1`",detail:Ga},{label:"$DFC_MENU",documentation:"`= 2`",detail:Ga},{label:"$DFC_POPUPMENU",documentation:"`= 5`",detail:Ga},{label:"$DFC_SCROLL",documentation:"`= 3`",detail:Ga},{label:"$DFCS_BUTTON3STATE",documentation:"`= 0x8`",detail:Pa},{label:"$DFCS_BUTTONCHECK",documentation:"`= 0x0`",detail:Pa},{label:"$DFCS_BUTTONPUSH",documentation:"`= 0x10`",detail:Pa},{label:"$DFCS_BUTTONRADIO",documentation:"`= 0x4`",detail:Pa},{label:"$DFCS_BUTTONRADIOIMAGE",documentation:"`= 0x1`",detail:Pa},{label:"$DFCS_BUTTONRADIOMASK",documentation:"`= 0x2`",detail:Pa},{label:"$DFCS_CAPTIONCLOSE",documentation:"`= 0x0`",detail:Pa},{label:"$DFCS_CAPTIONHELP",documentation:"`= 0x4`",detail:Pa},{label:"$DFCS_CAPTIONMAX",documentation:"`= 0x2`",detail:Pa},{label:"$DFCS_CAPTIONMIN",documentation:"`= 0x1`",detail:Pa},{label:"$DFCS_CAPTIONRESTORE",documentation:"`= 0x3`",detail:Pa},{label:"$DFCS_MENUARROW",documentation:"`= 0x0`",detail:Pa},{label:"$DFCS_MENUARROWRIGHT",documentation:"`= 0x4`",detail:Pa},{label:"$DFCS_MENUBULLET",documentation:"`= 0x2`",detail:Pa},{label:"$DFCS_MENUCHECK",documentation:"`= 0x1`",detail:Pa},{label:"$DFCS_SCROLLCOMBOBOX",documentation:"`= 0x5`",detail:Pa},{label:"$DFCS_SCROLLDOWN",documentation:"`= 0x1`",detail:Pa},{label:"$DFCS_SCROLLLEFT",documentation:"`= 0x2`",detail:Pa},{label:"$DFCS_SCROLLRIGHT",documentation:"`= 0x3`",detail:Pa},{label:"$DFCS_SCROLLSIZEGRIP",documentation:"`= 0x8`",detail:Pa},{label:"$DFCS_SCROLLSIZEGRIPRIGHT",documentation:"`= 0x10`",detail:Pa},{label:"$DFCS_SCROLLUP",documentation:"`= 0x0`",detail:Pa},{label:"$DFCS_ADJUSTRECT",documentation:"`= 0x2000`",detail:Pa},{label:"$DFCS_CHECKED",documentation:"`= 0x400`",detail:wa},{label:"$DFCS_FLAT",documentation:"`= 0x4000`",detail:wa},{label:"$DFCS_HOT",documentation:"`= 0x1000`",detail:wa},{label:"$DFCS_INACTIVE",documentation:"`= 0x100`",detail:wa},{label:"$DFCS_PUSHED",documentation:"`= 0x200`",detail:wa},{label:"$DFCS_TRANSPARENT",documentation:"`= 0x800`",detail:wa}];const Aa=(0,Ce.fillCompletions)(ya,t.CompletionItemKind.Constant,"","FrameConstants.au3");var Da="Pen Dash Cap Type Constant",Wa="Pen Dash Style Constant",Ea="Encoder Parameter GUID",Ra="Encoder Paramter Type Constant",xa="GDI Error Code",va="Encoder Value Type",Ua="Image Codec Flag",Fa="Image Lock Mode",La="LineCap Constant",Ba="Pixel Format",Oa="ImageFormat Constant",Ma="ImageType Constant",Na="ImageFlag Flag",Ha="Graphic SmoothingMode",ka="Color Luminance Constant",Va="Interpolation Mode",ja="TextRenderingHint Constant",Ya="PixelOffsetMode Constant",Xa="LineJoin Constant",za="Fill mode Constant",Ka="Quality Constant",qa="Alpha Compositing Mode Constant",Qa="Alpha Compositing Quality Constant",Ja="Hatch Style",Za="GDIPlus Constant",eo="Color Format Conversion Parameter",to="Symmetric Halftone Palette",ao="Asymmetric Halftone Palette",oo="PaletteFlag Enumeration",no="DitherType Constant",io="Error Diffusion Constant",ro="HistogramFormat Constant",lo="RotateFlipType Constant",so="Multi-frame Dimension Constant",co="ImageAttributesSetThreshold Constant",ho=[{label:"$GDIP_DASHCAPFLAT",documentation:"A square cap that squares off both ends of each dash\n\n`= 0 `",detail:Da},{label:"$GDIP_DASHCAPROUND",documentation:"A circular cap that rounds off both ends of each dash\n\n`= 2 `",detail:Da},{label:"$GDIP_DASHCAPTRIANGLE",documentation:"A triangular cap that points both ends of each dash\n\n`= 3 `",detail:Da},{label:"$GDIP_DASHSTYLESOLID",documentation:"A solid line\n\n`= 0 `",detail:Wa},{label:"$GDIP_DASHSTYLEDASH",documentation:"A dashed line\n\n`= 1 `",detail:Wa},{label:"$GDIP_DASHSTYLEDOT",documentation:"A dotted line\n\n`= 2 `",detail:Wa},{label:"$GDIP_DASHSTYLEDASHDOT",documentation:"An alternating dash-dot line\n\n`= 3 `",detail:Wa},{label:"$GDIP_DASHSTYLEDASHDOTDOT",documentation:"An alternating dash-dot-dot line\n\n`= 4 `",detail:Wa},{label:"$GDIP_DASHSTYLECUSTOM",documentation:"A a user-defined, custom dashed line\n\n`= 5 `",detail:Wa},{label:"$GDIP_EPGCHROMINANCETABLE",documentation:'`= "{F2E455DC-09B3-4316-8260-676ADA32481C}"`',detail:Ea},{label:"$GDIP_EPGCOLORDEPTH",documentation:'`= "{66087055-AD66-4C7C-9A18-38A2310B8337}"`',detail:Ea},{label:"$GDIP_EPGCOMPRESSION",documentation:'`= "{E09D739D-CCD4-44EE-8EBA-3FBF8BE4FC58}"`',detail:Ea},{label:"$GDIP_EPGLUMINANCETABLE",documentation:'`= "{EDB33BCE-0266-4A77-B904-27216099E717}"`',detail:Ea},{label:"$GDIP_EPGQUALITY",documentation:'`= "{1D5BE4B5-FA4A-452D-9CDD-5DB35105E7EB}"`',detail:Ea},{label:"$GDIP_EPGRENDERMETHOD",documentation:'`= "{6D42C53A-229A-4825-8BB7-5C99E2B9A8B8}"`',detail:Ea},{label:"$GDIP_EPGSAVEFLAG",documentation:'`= "{292266FC-AC40-47BF-8CFC-A85B89A655DE}"`',detail:Ea},{label:"$GDIP_EPGSCANMETHOD",documentation:'`= "{3A4E2661-3109-4E56-8536-42C156E7DCFA}"`',detail:Ea},{label:"$GDIP_EPGTRANSFORMATION",documentation:'`= "{8D0EB2D1-A58E-4EA8-AA14-108074B7B6F9}"`',detail:Ea},{label:"$GDIP_EPGVERSION",documentation:'`= "{24D18C76-814A-41A4-BF53-1C219CCCF797}"`',detail:Ea},{label:"$GDIP_EPTBYTE",documentation:"8 bit unsigned integer\n\n`= 1 `",detail:Ra},{label:"$GDIP_EPTASCII",documentation:"Null terminated character string\n\n`= 2 `",detail:Ra},{label:"$GDIP_EPTSHORT",documentation:"16 bit unsigned integer\n\n`= 3 `",detail:Ra},{label:"$GDIP_EPTLONG",documentation:"32 bit unsigned integer\n\n`= 4 `",detail:Ra},{label:"$GDIP_EPTRATIONAL",documentation:"Two longs (numerator, denomintor)\n\n`= 5 `",detail:Ra},{label:"$GDIP_EPTLONGRANGE",documentation:"Two longs (low, high)\n\n`= 6 `",detail:Ra},{label:"$GDIP_EPTUNDEFINED",documentation:"Array of bytes of any type\n\n`= 7 `",detail:Ra},{label:"$GDIP_EPTRATIONALRANGE",documentation:"Two ratationals (low, high)\n\n`= 8 `",detail:Ra},{label:"$GDIP_ERROK",documentation:"Method call was successful\n\n`= 0 `",detail:xa},{label:"$GDIP_ERRGENERICERROR",documentation:"Generic method call error\n\n`= 1 `",detail:xa},{label:"$GDIP_ERRINVALIDPARAMETER",documentation:"One of the arguments passed to the method was not valid\n\n`= 2 `",detail:xa},{label:"$GDIP_ERROUTOFMEMORY",documentation:"The operating system is out of memory\n\n`= 3 `",detail:xa},{label:"$GDIP_ERROBJECTBUSY",documentation:"One of the arguments in the call is already in use\n\n`= 4 `",detail:xa},{label:"$GDIP_ERRINSUFFICIENTBUFFER",documentation:"A buffer is not large enough\n\n`= 5 `",detail:xa},{label:"$GDIP_ERRNOTIMPLEMENTED",documentation:"The method is not implemented\n\n`= 6 `",detail:xa},{label:"$GDIP_ERRWIN32ERROR",documentation:"The method generated a Microsoft Win32 error\n\n`= 7 `",detail:xa},{label:"$GDIP_ERRWRONGSTATE",documentation:"The object is in an invalid state to satisfy the API call\n\n`= 8 `",detail:xa},{label:"$GDIP_ERRABORTED",documentation:"The method was aborted\n\n`= 9 `",detail:xa},{label:"$GDIP_ERRFILENOTFOUND",documentation:"The specified image file or metafile cannot be found\n\n`= 10 `",detail:xa},{label:"$GDIP_ERRVALUEOVERFLOW",documentation:"The method produced a numeric overflow\n\n`= 11 `",detail:xa},{label:"$GDIP_ERRACCESSDENIED",documentation:"A write operation is not allowed on the specified file\n\n`= 12 `",detail:xa},{label:"$GDIP_ERRUNKNOWNIMAGEFORMAT",documentation:"The specified image file format is not known\n\n`= 13 `",detail:xa},{label:"$GDIP_ERRFONTFAMILYNOTFOUND",documentation:"The specified font family cannot be found\n\n`= 14 `",detail:xa},{label:"$GDIP_ERRFONTSTYLENOTFOUND",documentation:"The specified style is not available for the specified font\n\n`= 15 `",detail:xa},{label:"$GDIP_ERRNOTTRUETYPEFONT",documentation:"The font retrieved is not a TrueType font\n\n`= 16 `",detail:xa},{label:"$GDIP_ERRUNSUPPORTEDGDIVERSION",documentation:"The installed GDI+ version is incompatible\n\n`= 17 `",detail:xa},{label:"$GDIP_ERRGDIPLUSNOTINITIALIZED",documentation:"The GDI+ API is not in an initialized state\n\n`= 18 `",detail:xa},{label:"$GDIP_ERRPROPERTYNOTFOUND",documentation:"The specified property does not exist in the image\n\n`= 19 `",detail:xa},{label:"$GDIP_ERRPROPERTYNOTSUPPORTED",documentation:"The specified property is not supported\n\n`= 20 `",detail:xa},{label:"$GDIP_EVTCOMPRESSIONLZW",documentation:"TIFF: LZW compression\n\n`= 2 `",detail:va},{label:"$GDIP_EVTCOMPRESSIONCCITT3",documentation:"TIFF: CCITT3 compression\n\n`= 3 `",detail:va},{label:"$GDIP_EVTCOMPRESSIONCCITT4",documentation:"TIFF: CCITT4 compression\n\n`= 4 `",detail:va},{label:"$GDIP_EVTCOMPRESSIONRLE",documentation:"TIFF: RLE compression\n\n`= 5 `",detail:va},{label:"$GDIP_EVTCOMPRESSIONNONE",documentation:"TIFF: No compression\n\n`= 6 `",detail:va},{label:"$GDIP_EVTTRANSFORMROTATE90",documentation:"JPEG: Lossless 90 degree clockwise rotation\n\n`= 13 `",detail:va},{label:"$GDIP_EVTTRANSFORMROTATE180",documentation:"JPEG: Lossless 180 degree clockwise rotation\n\n`= 14 `",detail:va},{label:"$GDIP_EVTTRANSFORMROTATE270",documentation:"JPEG: Lossless 270 degree clockwise rotation\n\n`= 15 `",detail:va},{label:"$GDIP_EVTTRANSFORMFLIPHORIZONTAL",documentation:"JPEG: Lossless horizontal flip\n\n`= 16 `",detail:va},{label:"$GDIP_EVTTRANSFORMFLIPVERTICAL",documentation:"JPEG: Lossless vertical flip\n\n`= 17 `",detail:va},{label:"$GDIP_EVTMULTIFRAME",documentation:"Multiple frame encoding\n\n`= 18 `",detail:va},{label:"$GDIP_EVTLASTFRAME",documentation:"Last frame of a multiple frame image\n\n`= 19 `",detail:va},{label:"$GDIP_EVTFLUSH",documentation:"The encoder object is to be closed\n\n`= 20 `",detail:va},{label:"$GDIP_EVTFRAMEDIMENSIONPAGE",documentation:"TIFF: Page frame dimension\n\n`= 23 `",detail:va},{label:"$GDIP_ICFENCODER",documentation:"The codec supports encoding (saving)\n\n`= 0x00000001 `",detail:Ua},{label:"$GDIP_ICFDECODER",documentation:"The codec supports decoding (reading)\n\n`= 0x00000002 `",detail:Ua},{label:"$GDIP_ICFSUPPORTBITMAP",documentation:"The codec supports raster images (bitmaps)\n\n`= 0x00000004 `",detail:Ua},{label:"$GDIP_ICFSUPPORTVECTOR",documentation:"The codec supports vector images (metafiles)\n\n`= 0x00000008 `",detail:Ua},{label:"$GDIP_ICFSEEKABLEENCODE",documentation:"The encoder requires a seekable output stream\n\n`= 0x00000010 `",detail:Ua},{label:"$GDIP_ICFBLOCKINGDECODE",documentation:"The decoder has blocking behavior during the decoding process\n\n`= 0x00000020 `",detail:Ua},{label:"$GDIP_ICFBUILTIN",documentation:"The codec is built in to GDI+\n\n`= 0x00010000 `",detail:Ua},{label:"$GDIP_ICFSYSTEM",documentation:"Not used in GDI+ version 1.0\n\n`= 0x00020000 `",detail:Ua},{label:"$GDIP_ICFUSER",documentation:"Not used in GDI+ version 1.0\n\n`= 0x00040000 `",detail:Ua},{label:"$GDIP_ILMREAD",documentation:"A portion of the image is locked for reading\n\n`= 0x0001 `",detail:Fa},{label:"$GDIP_ILMWRITE",documentation:"A portion of the image is locked for writing\n\n`= 0x0002 `",detail:Fa},{label:"$GDIP_ILMUSERINPUTBUF",documentation:"The buffer is allocated by the user\n\n`= 0x0004 `",detail:Fa},{label:"$GDIP_LINECAPFLAT",documentation:"Specifies a flat cap\n\n`= 0x00 `",detail:La},{label:"$GDIP_LINECAPSQUARE",documentation:"Specifies a square cap\n\n`= 0x01 `",detail:La},{label:"$GDIP_LINECAPROUND",documentation:"Specifies a circular cap\n\n`= 0x02 `",detail:La},{label:"$GDIP_LINECAPTRIANGLE",documentation:"Specifies a triangular cap\n\n`= 0x03 `",detail:La},{label:"$GDIP_LINECAPNOANCHOR",documentation:"Specifies that the line ends are not anchored\n\n`= 0x10 `",detail:La},{label:"$GDIP_LINECAPSQUAREANCHOR",documentation:"Specifies that the line ends are anchored with a square\n\n`= 0x11 `",detail:La},{label:"$GDIP_LINECAPROUNDANCHOR",documentation:"Specifies that the line ends are anchored with a circle\n\n`= 0x12 `",detail:La},{label:"$GDIP_LINECAPDIAMONDANCHOR",documentation:"Specifies that the line ends are anchored with a diamond\n\n`= 0x13 `",detail:La},{label:"$GDIP_LINECAPARROWANCHOR",documentation:"Specifies that the line ends are anchored with arrowheads\n\n`= 0x14 `",detail:La},{label:"$GDIP_LINECAPCUSTOM",documentation:"Specifies that the line ends are made from a CustomLineCap\n\n`= 0xFF `",detail:La},{label:"$GDIP_PXF01INDEXED",documentation:"1 bpp, indexed\n\n`= 0x00030101 `",detail:Ba},{label:"$GDIP_PXF04INDEXED",documentation:"4 bpp, indexed\n\n`= 0x00030402 `",detail:Ba},{label:"$GDIP_PXF08INDEXED",documentation:"8 bpp, indexed\n\n`= 0x00030803 `",detail:Ba},{label:"$GDIP_PXF16GRAYSCALE",documentation:"16 bpp, grayscale\n\n`= 0x00101004 `",detail:Ba},{label:"$GDIP_PXF16RGB555",documentation:"16 bpp; 5 bits for each RGB\n\n`= 0x00021005 `",detail:Ba},{label:"$GDIP_PXF16RGB565",documentation:"16 bpp; 5 bits red, 6 bits green, and 5 bits blue\n\n`= 0x00021006 `",detail:Ba},{label:"$GDIP_PXF16ARGB1555",documentation:"16 bpp; 1 bit for alpha and 5 bits for each RGB component\n\n`= 0x00061007 `",detail:Ba},{label:"$GDIP_PXF24RGB",documentation:"24 bpp; 8 bits for each RGB\n\n`= 0x00021808 `",detail:Ba},{label:"$GDIP_PXF32RGB",documentation:"32 bpp; 8 bits for each RGB. No alpha.\n\n`= 0x00022009 `",detail:Ba},{label:"$GDIP_PXF32ARGB",documentation:"32 bpp; 8 bits for each RGB and alpha\n\n`= 0x0026200A `",detail:Ba},{label:"$GDIP_PXF32PARGB",documentation:"32 bpp; 8 bits for each RGB and alpha, pre-mulitiplied\n\n`= 0x000E200B `",detail:Ba},{label:"$GDIP_PXF48RGB",documentation:"48 bpp; 16 bits for each RGB\n\n`= 0x0010300C `",detail:Ba},{label:"$GDIP_PXF64ARGB",documentation:"64 bpp; 16 bits for each RGB and alpha\n\n`= 0x0034400D `",detail:Ba},{label:"$GDIP_PXF64PARGB",documentation:"64 bpp; 16 bits for each RGB and alpha, pre-multiplied\n\n`= 0x001A400E `",detail:Ba},{label:"$GDIP_IMAGEFORMAT_UNDEFINED",documentation:'Windows GDI+ is unable to determine the format.\n\n`= "{B96B3CA9-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_MEMORYBMP",documentation:'Image was constructed from a memory bitmap.\n\n`= "{B96B3CAA-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_BMP",documentation:'Microsoft Windows Bitmap (BMP) format.\n\n`= "{B96B3CAB-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_EMF",documentation:'Enhanced Metafile (EMF) format.\n\n`= "{B96B3CAC-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_WMF",documentation:'Windows Metafile Format (WMF) format.\n\n`= "{B96B3CAD-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_JPEG",documentation:'Joint Photographic Experts Group (JPEG) format.\n\n`= "{B96B3CAE-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_PNG",documentation:'Portable Network Graphics (PNG) format.\n\n`= "{B96B3CAF-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_GIF",documentation:'Graphics Interchange Format (GIF) format.\n\n`= "{B96B3CB0-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_TIFF",documentation:'Tagged Image File Format (TIFF) format.\n\n`= "{B96B3CB1-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_EXIF",documentation:'Exchangeable Image File (EXIF) format.\n\n`= "{B96B3CB2-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGEFORMAT_ICON",documentation:'Microsoft Windows Icon Image (ICO) format.\n\n`= "{B96B3CB5-0728-11D3-9D7B-0000F81EF32E}" `',detail:Oa},{label:"$GDIP_IMAGETYPE_UNKNOWN",documentation:"`= 0`",detail:Ma},{label:"$GDIP_IMAGETYPE_BITMAP",documentation:"`= 1`",detail:Ma},{label:"$GDIP_IMAGETYPE_METAFILE",documentation:"`= 2`",detail:Ma},{label:"$GDIP_IMAGEFLAGS_NONE",documentation:"no format information.\n\n`= 0x0 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_SCALABLE",documentation:"image can be scaled.\n\n`= 0x0001 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_HASALPHA",documentation:"pixel data contains alpha values.\n\n`= 0x0002 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_HASTRANSLUCENT",documentation:"pixel data has alpha values other than 0 (transparent) and 255 (opaque).\n\n`= 0x0004 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_PARTIALLYSCALABLE",documentation:"pixel data is partially scalable with some limitations.\n\n`= 0x0008 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_COLORSPACE_RGB",documentation:"image is stored using an RGB color space.\n\n`= 0x0010 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_COLORSPACE_CMYK",documentation:"image is stored using a CMYK color space.\n\n`= 0x0020 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_COLORSPACE_GRAY",documentation:"image is a grayscale image.\n\n`= 0x0040 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_COLORSPACE_YCBCR",documentation:"image is stored using a YCBCR color space.\n\n`= 0x0080 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_COLORSPACE_YCCK",documentation:"image is stored using a YCCK color space.\n\n`= 0x0100 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_HASREALDPI",documentation:"dots per inch information is stored in the image.\n\n`= 0x1000 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_HASREALPIXELSIZE",documentation:"pixel size is stored in the image.\n\n`= 0x2000 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_READONLY",documentation:"pixel data is read-only.\n\n`= 0x00010000 `",detail:Na},{label:"$GDIP_IMAGEFLAGS_CACHING",documentation:"pixel data can be cached for faster access.\n\n`= 0x00020000 `",detail:Na},{label:"$GDIP_SMOOTHINGMODE_INVALID",documentation:"Reserved.\n\n`= -1 `",detail:Ha},{label:"$GDIP_SMOOTHINGMODE_DEFAULT",documentation:"Specifies that smoothing is not applied.\n\n`= 0 `",detail:Ha},{label:"$GDIP_SMOOTHINGMODE_HIGHSPEED",documentation:"Specifies that smoothing is not applied.\n\n`= 1 `",detail:Ha},{label:"$GDIP_SMOOTHINGMODE_HIGHQUALITY",documentation:"Specifies that smoothing is applied using an 8 X 4 box filter.\n\n`= 2 `",detail:Ha},{label:"$GDIP_SMOOTHINGMODE_NONE",documentation:"Specifies that smoothing is not applied.\n\n`= 3 `",detail:Ha},{label:"$GDIP_SMOOTHINGMODE_ANTIALIAS8X4",documentation:"Specifies that smoothing is applied using an 8 X 4 box filter.\n\n`= 4 `",detail:Ha},{label:"$GDIP_SMOOTHINGMODE_ANTIALIAS",documentation:"Specifies that smoothing is applied using an 8 X 4 box filter.\n\n`= $GDIP_SMOOTHINGMODE_ANTIALIAS8X4 `",detail:Ha},{label:"$GDIP_SMOOTHINGMODE_ANTIALIAS8X8",documentation:"Specifies that smoothing is applied using an 8 X 8 box filter.\n\n`= 5 `",detail:Ha},{label:"$GDIP_RLUM",documentation:"`= 0.3086`",detail:ka},{label:"$GDIP_GLUM",documentation:"`= 0.6094`",detail:ka},{label:"$GDIP_BLUM",documentation:"`= 0.0820`",detail:ka},{label:"$GDIP_INTERPOLATIONMODE_INVALID",documentation:"Reserved (used internally)\n\n`= -1 `",detail:Va},{label:"$GDIP_INTERPOLATIONMODE_DEFAULT",documentation:"Specifies the default interpolation mode\n\n`= 0 `",detail:Va},{label:"$GDIP_INTERPOLATIONMODE_LOWQUALITY",documentation:"Specifies a low-quality mode\n\n`= 1 `",detail:Va},{label:"$GDIP_INTERPOLATIONMODE_HIGHQUALITY",documentation:"Specifies a high-quality mode\n\n`= 2 `",detail:Va},{label:"$GDIP_INTERPOLATIONMODE_BILINEAR",documentation:"Specifies bilinear interpolation. No prefiltering is done. This mode is not suitable for shrinking an image below 50 percent of its original size.\n\n`= 3 `",detail:Va},{label:"$GDIP_INTERPOLATIONMODE_BICUBIC",documentation:"Specifies bicubic interpolation. No prefiltering is done. This mode is not suitable for shrinking an image below 25 percent of its original size\n\n`= 4 `",detail:Va},{label:"$GDIP_INTERPOLATIONMODE_NEARESTNEIGHBOR",documentation:"Specifies nearest-neighbor interpolation\n\n`= 5 `",detail:Va},{label:"$GDIP_INTERPOLATIONMODE_HIGHQUALITYBILINEAR",documentation:"Specifies high-quality, bilinear interpolation. Prefiltering is performed to ensure high-quality shrinking.\n\n`= 6 `",detail:Va},{label:"$GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC",documentation:"Specifies high-quality, bicubic interpolation. Prefiltering is performed to ensure high-quality shrinking. This mode produces the highest quality transformed images.\n\n`= 7 `",detail:Va},{label:"$GDIP_TEXTRENDERINGHINT_SYSTEMDEFAULT",documentation:"Specifies that a character is drawn using the currently selected system font smoothing mode (also called a rendering hint).\n\n`= 0 `",detail:ja},{label:"$GDIP_TEXTRENDERINGHINT_SINGLEBITPERPIXELGRIDFIT",documentation:"Specifies that a character is drawn using its glyph bitmap and hinting to improve character appearance on stems and curvature.\n\n`= 1 `",detail:ja},{label:"$GDIP_TEXTRENDERINGHINT_SINGLEBITPERPIXEL",documentation:"Specifies that a character is drawn using its glyph bitmap and no hinting. This results in better performance at the expense of quality.\n\n`= 2 `",detail:ja},{label:"$GDIP_TEXTRENDERINGHINT_ANTIALIASGRIDFIT",documentation:"Specifies that a character is drawn using its antialiased glyph bitmap and hinting. This results in much better quality due to antialiasing at a higher performance cost.\n\n`= 3 `",detail:ja},{label:"$GDIP_TEXTRENDERINGHINT_ANTIALIAS",documentation:"Specifies that a character is drawn using its antialiased glyph bitmap and no hinting. Stem width differences may be noticeable because hinting is turned off.\n\n`= 4 `",detail:ja},{label:"$GDIP_TEXTRENDERINGHINT_CLEARTYPEGRIDFIT",documentation:"Specifies that a character is drawn using its glyph ClearType bitmap and hinting. This type of text rendering cannot be used along with CompositingModeSourceCopy.\n\n`= 5 `",detail:ja},{label:"$GDIP_PIXELOFFSETMODE_INVALID",documentation:"Used internally.\n\n`= -1 `",detail:Ya},{label:"$GDIP_PIXELOFFSETMODE_DEFAULT",documentation:"Equivalent to `$GDIP_PIXELOFFSETMODE_NONE`\n\n`= 0 `",detail:Ya},{label:"$GDIP_PIXELOFFSETMODE_HIGHSPEED",documentation:"Equivalent to `$GDIP_PIXELOFFSETMODE_NONE`\n\n`= 1 `",detail:Ya},{label:"$GDIP_PIXELOFFSETMODE_HIGHQUALITY",documentation:"Equivalent to `$GDIP_PIXELOFFSETMODE_HALF`\n\n`= 2 `",detail:Ya},{label:"$GDIP_PIXELOFFSETMODE_NONE",documentation:"Indicates that pixel centers have integer coordinates.\n\n`= 3 `",detail:Ya},{label:"$GDIP_PIXELOFFSETMODE_HALF",documentation:"Indicates that pixel centers have coordinates that are half way between integer values.\n\n`= 4 `",detail:Ya},{label:"$GDIP_PENSETLINEJOIN_MITER",documentation:"Specifies a mitered join. This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.\n\n`= 0 `",detail:Xa},{label:"$GDIP_PENSETLINEJOIN_BEVEL",documentation:"Specifies a beveled join. This produces a diagonal corner.\n\n`= 1 `",detail:Xa},{label:"$GDIP_PENSETLINEJOIN_ROUND",documentation:"Specifies a circular join. This produces a smooth, circular arc between the lines.\n\n`= 2 `",detail:Xa},{label:"$GDIP_PENSETLINEJOIN_MITERCLIPPED",documentation:"Specifies a mitered join. This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit.\n\n`= 3 `",detail:Xa},{label:"$GDIP_FillModeAlternate",documentation:"Specifies that areas are filled according to the even-odd parity rule. According to this rule, you can determine whether a test point is inside or outside a closed curve as follows: Draw a line from the test point to a point that is distant from the curve. If that line crosses the curve an odd number of times, the test point is inside the curve otherwise, the test point is outside the curve.\n\n`= 0  `",detail:za},{label:"$GDIP_FillModeWinding",documentation:"Specifies that areas are filled according to the nonzero winding rule. According to this rule, you can determine whether a test point is inside or outside a closed curve as follows: Draw a line from a test point to a point that is distant from the curve. Count the number of times the curve crosses the test line from left to right, and count the number of times the curve crosses the test line from right to left. If those two numbers are the same, the test point is outside the curve; otherwise, the test point is inside the curve.\n\n`= 1  `",detail:za},{label:"$GDIP_QUALITYMODEINVALID",documentation:"`= -1`",detail:Ka},{label:"$GDIP_QUALITYMODEDEFAULT",documentation:"`= 0`",detail:Ka},{label:"$GDIP_QUALITYMODELOW",documentation:"`= 1`",detail:Ka},{label:"$GDIP_QUALITYMODEHIGH",documentation:"`= 2`",detail:Ka},{label:"$GDIP_COMPOSITINGMODESOURCEOVER",documentation:"Specifies that when a color is rendered, it is blended with the background color. The blend is determined by the alpha component of the color being rendered\n\n`= 0 `",detail:qa},{label:"$GDIP_COMPOSITINGMODESOURCECOPY",documentation:"Specifies that when a color is rendered, it overwrites the background color. This mode cannot be used along with `$TextRenderingHintClearTypeGridFit`\n\n`= 1 `",detail:qa},{label:"$GDIP_COMPOSITINGQUALITYINVALID",documentation:"Invalid quality\n\n`= $GDIP_QUALITYMODEINVALID `",detail:Qa},{label:"$GDIP_COMPOSITINGQUALITYDEFAULT",documentation:"Gamma correction is not applied\n\n`= $GDIP_QUALITYMODEDEFAULT `",detail:Qa},{label:"$GDIP_COMPOSITINGQUALITYHIGHSPEED",documentation:"Gamma correction is not applied. High speed, low quality\n\n`= $GDIP_QUALITYMODELOW `",detail:Qa},{label:"$GDIP_COMPOSITINGQUALITYHIGHQUALITY",documentation:"Gamma correction is applied. Composition of high quality and speed.\n\n`= $GDIP_QUALITYMODEHIGH `",detail:Qa},{label:"$GDIP_COMPOSITINGQUALITYGAMMACORRECTED",documentation:"Gamma correction is applied\n\n`= 3 `",detail:Qa},{label:"$GDIP_COMPOSITINGQUALITYASSUMELINEAR",documentation:"Gamma correction is not applied. Linear values are used\n\n`= 4 `",detail:Qa},{label:"$GDIP_HATCHSTYLE_HORIZONTAL",documentation:"`= 0`",detail:Ja},{label:"$GDIP_HATCHSTYLE_VERTICAL",documentation:"`= 1`",detail:Ja},{label:"$GDIP_HATCHSTYLE_FORWARDDIAGONAL",documentation:"`= 2`",detail:Ja},{label:"$GDIP_HATCHSTYLE_BACKWARDDIAGONAL",documentation:"`= 3`",detail:Ja},{label:"$GDIP_HATCHSTYLE_CROSS",documentation:"`= 4`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DIAGONALCROSS",documentation:"`= 5`",detail:Ja},{label:"$GDIP_HATCHSTYLE_05PERCENT",documentation:"`= 6`",detail:Ja},{label:"$GDIP_HATCHSTYLE_10PERCENT",documentation:"`= 7`",detail:Ja},{label:"$GDIP_HATCHSTYLE_20PERCENT",documentation:"`= 8`",detail:Ja},{label:"$GDIP_HATCHSTYLE_25PERCENT",documentation:"`= 9`",detail:Ja},{label:"$GDIP_HATCHSTYLE_30PERCENT",documentation:"`= 10`",detail:Ja},{label:"$GDIP_HATCHSTYLE_40PERCENT",documentation:"`= 11`",detail:Ja},{label:"$GDIP_HATCHSTYLE_50PERCENT",documentation:"`= 12`",detail:Ja},{label:"$GDIP_HATCHSTYLE_60PERCENT",documentation:"`= 13`",detail:Ja},{label:"$GDIP_HATCHSTYLE_70PERCENT",documentation:"`= 14`",detail:Ja},{label:"$GDIP_HATCHSTYLE_75PERCENT",documentation:"`= 15`",detail:Ja},{label:"$GDIP_HATCHSTYLE_80PERCENT",documentation:"`= 16`",detail:Ja},{label:"$GDIP_HATCHSTYLE_90PERCENT",documentation:"`= 17`",detail:Ja},{label:"$GDIP_HATCHSTYLE_LIGHTDOWNWARDDIAGONAL",documentation:"`= 18`",detail:Ja},{label:"$GDIP_HATCHSTYLE_LIGHTUPWARDDIAGONAL",documentation:"`= 19`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DARKDOWNWARDDIAGONAL",documentation:"`= 20`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DARKUPWARDDIAGONAL",documentation:"`= 21`",detail:Ja},{label:"$GDIP_HATCHSTYLE_WIDEDOWNWARDDIAGONAL",documentation:"`= 22`",detail:Ja},{label:"$GDIP_HATCHSTYLE_WIDEUPWARDDIAGONAL",documentation:"`= 23`",detail:Ja},{label:"$GDIP_HATCHSTYLE_LIGHTVERTICAL",documentation:"`= 24`",detail:Ja},{label:"$GDIP_HATCHSTYLE_LIGHTHORIZONTAL",documentation:"`= 25`",detail:Ja},{label:"$GDIP_HATCHSTYLE_NARROWVERTICAL",documentation:"`= 26`",detail:Ja},{label:"$GDIP_HATCHSTYLE_NARROWHORIZONTAL",documentation:"`= 27`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DARKVERTICAL",documentation:"`= 28`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DARKHORIZONTAL",documentation:"`= 29`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DASHEDDOWNWARDDIAGONAL",documentation:"`= 30`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DASHEDUPWARDDIAGONAL",documentation:"`= 31`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DASHEDHORIZONTAL",documentation:"`= 32`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DASHEDVERTICAL",documentation:"`= 33`",detail:Ja},{label:"$GDIP_HATCHSTYLE_SMALLCONFETTI",documentation:"`= 34`",detail:Ja},{label:"$GDIP_HATCHSTYLE_LARGECONFETTI",documentation:"`= 35`",detail:Ja},{label:"$GDIP_HATCHSTYLE_ZIGZAG",documentation:"`= 36`",detail:Ja},{label:"$GDIP_HATCHSTYLE_WAVE",documentation:"`= 37`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DIAGONALBRICK",documentation:"`= 38`",detail:Ja},{label:"$GDIP_HATCHSTYLE_HORIZONTALBRICK",documentation:"`= 39`",detail:Ja},{label:"$GDIP_HATCHSTYLE_WEAVE",documentation:"`= 40`",detail:Ja},{label:"$GDIP_HATCHSTYLE_PLAID",documentation:"`= 41`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DIVOT",documentation:"`= 42`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DOTTEDGRID",documentation:"`= 43`",detail:Ja},{label:"$GDIP_HATCHSTYLE_DOTTEDDIAMOND",documentation:"`= 44`",detail:Ja},{label:"$GDIP_HATCHSTYLE_SHINGLE",documentation:"`= 45`",detail:Ja},{label:"$GDIP_HATCHSTYLE_TRELLIS",documentation:"`= 46`",detail:Ja},{label:"$GDIP_HATCHSTYLE_SPHERE",documentation:"`= 47`",detail:Ja},{label:"$GDIP_HATCHSTYLE_SMALLGRID",documentation:"`= 48`",detail:Ja},{label:"$GDIP_HATCHSTYLE_SMALLCHECKERBOARD",documentation:"`= 49`",detail:Ja},{label:"$GDIP_HATCHSTYLE_LARGECHECKERBOARD",documentation:"`= 50`",detail:Ja},{label:"$GDIP_HATCHSTYLE_OUTLINEDDIAMOND",documentation:"`= 51`",detail:Ja},{label:"$GDIP_HATCHSTYLE_SOLIDDIAMOND",documentation:"`= 52`",detail:Ja},{label:"$GDIP_HATCHSTYLE_TOTAL",documentation:"`= 53`",detail:Ja},{label:"$GDIP_HATCHSTYLE_LARGEGRID",documentation:"`= $GDIP_HATCHSTYLE_CROSS`",detail:Ja},{label:"$GDIP_HATCHSTYLE_MIN",documentation:"`= $GDIP_HATCHSTYLE_HORIZONTAL`",detail:Ja},{label:"$GDIP_HATCHSTYLE_MAX",documentation:"`= $GDIP_HATCHSTYLE_TOTAL - 1`",detail:Ja},{label:"$GDIP_BlurEffectGuid",documentation:"`= '{633C80A4-1843-482b-9EF2-BE2834C5FDD4}'`",detail:Za},{label:"$GDIP_SharpenEffectGuid",documentation:"`= '{63CBF3EE-C526-402c-8F71-62C540BF5142}'`",detail:Za},{label:"$GDIP_ColorMatrixEffectGuid",documentation:"`= '{718F2615-7933-40e3-A511-5F68FE14DD74}'`",detail:Za},{label:"$GDIP_ColorLUTEffectGuid",documentation:"`= '{A7CE72A9-0F7F-40d7-B3CC-D0C02D5C3212}'`",detail:Za},{label:"$GDIP_BrightnessContrastEffectGuid",documentation:"`= '{D3A1DBE1-8EC4-4c17-9F4C-EA97AD1C343D}'`",detail:Za},{label:"$GDIP_HueSaturationLightnessEffectGuid",documentation:"`= '{8B2DD6C3-EB07-4d87-A5F0-7108E26A9C5F}'`",detail:Za},{label:"$GDIP_LevelsEffectGuid",documentation:"`= '{99C354EC-2A31-4f3a-8C34-17A803B33A25}'`",detail:Za},{label:"$GDIP_TintEffectGuid",documentation:"`= '{1077AF00-2848-4441-9489-44AD4C2D7A2C}'`",detail:Za},{label:"$GDIP_ColorBalanceEffectGuid",documentation:"`= '{537E597D-251E-48da-9664-29CA496B70F8}'`",detail:Za},{label:"$GDIP_RedEyeCorrectionEffectGuid",documentation:"`= '{74D29D05-69A4-4266-9549-3CC52836B632}'`",detail:Za},{label:"$GDIP_ColorCurveEffectGuid",documentation:"`= '{DD6A0022-58E4-4a67-9D9B-D48EB881A53D}'`",detail:Za},{label:"$GDIP_AdjustExposure",documentation:"[-255..255]\n\n`= 0  `",detail:Za},{label:"$GDIP_AdjustDensity",documentation:"[-255..255]\n\n`= 1  `",detail:Za},{label:"$GDIP_AdjustContrast",documentation:"[-100..100]\n\n`= 2  `",detail:Za},{label:"$GDIP_AdjustHighlight",documentation:"[-100..100]\n\n`= 3 `",detail:Za},{label:"$GDIP_AdjustShadow",documentation:"[-100..100]\n\n`= 4  `",detail:Za},{label:"$GDIP_AdjustMidtone",documentation:"[-100..100]\n\n`= 5  `",detail:Za},{label:"$GDIP_AdjustWhiteSaturation",documentation:"[0..255]\n\n`= 6  `",detail:Za},{label:"$GDIP_AdjustBlackSaturation",documentation:"[0..255]\n\n`= 7  `",detail:Za},{label:"$GDIP_CurveChannelAll",documentation:"`= 0`",detail:Za},{label:"$GDIP_CurveChannelRed",documentation:"`= 1`",detail:Za},{label:"$GDIP_CurveChannelGreen",documentation:"`= 2`",detail:Za},{label:"$GDIP_CurveChannelBlue",documentation:"`= 3`",detail:Za},{label:"$GDIP_PaletteTypeCustom",documentation:"Arbitrary custom palette provided by caller.\n\n`= 0`",detail:eo},{label:"$GDIP_PaletteTypeOptimal",documentation:"Optimal palette generated using a median-cut algorithm.\n\n`= 1`",detail:eo},{label:"$GDIP_PaletteTypeFixedBW",documentation:"Black and white palette.\n\n`= 2`",detail:eo},{label:"$GDIP_PaletteTypeFixedHalftone8",documentation:"8-color, on-off primaries\n\n`= 3 `",detail:to},{label:"$GDIP_PaletteTypeFixedHalftone27",documentation:"3 intensity levels of each color\n\n`= 4 `",detail:to},{label:"$GDIP_PaletteTypeFixedHalftone64",documentation:"4 intensity levels of each color\n\n`= 5 `",detail:to},{label:"$GDIP_PaletteTypeFixedHalftone125",documentation:"5 intensity levels of each color\n\n`= 6 `",detail:to},{label:"$GDIP_PaletteTypeFixedHalftone216",documentation:"6 intensity levels of each color\n\n`= 7 `",detail:to},{label:"$GDIP_PaletteTypeFixedHalftone252",documentation:"6-red, 7-green, 6-blue intensities\n\n`= 8 `",detail:ao},{label:"$GDIP_PaletteTypeFixedHalftone256",documentation:"8-red, 8-green, 4-blue intensities\n\n`= 9 `",detail:ao},{label:"$GDIP_PaletteFlagsHasAlpha",documentation:"`= 0x0001`",detail:oo},{label:"$GDIP_PaletteFlagsGrayScale",documentation:"`= 0x0002`",detail:oo},{label:"$GDIP_PaletteFlagsHalftone",documentation:"`= 0x0004`",detail:oo},{label:"$GDIP_DitherTypeNone",documentation:"`= 0`",detail:no},{label:"$GDIP_DitherTypeSolid",documentation:"Solid color - picks the nearest matching color with no attempt to halftone or dither. May be used on an arbitrary palette.\n\n`= 1 `",detail:no},{label:"$GDIP_DitherTypeOrdered4x4",documentation:"`= 2`",detail:no},{label:"$GDIP_DitherTypeOrdered8x8",documentation:"`= 3`",detail:no},{label:"$GDIP_DitherTypeOrdered16x16",documentation:"`= 4`",detail:no},{label:"$GDIP_DitherTypeOrdered91x91",documentation:"`= 5`",detail:no},{label:"$GDIP_DitherTypeSpiral4x4",documentation:"`= 6`",detail:no},{label:"$GDIP_DitherTypeSpiral8x8",documentation:"`= 7`",detail:no},{label:"$GDIP_DitherTypeDualSpiral4x4",documentation:"`= 8`",detail:no},{label:"$GDIP_DitherTypeDualSpiral8x8",documentation:"`= 9`",detail:no},{label:"$GDIP_DitherTypeErrorDiffusion",documentation:"`= 10`",detail:io},{label:"$GDIP_DitherTypeMax",documentation:"`= 10`",detail:io},{label:"$GDIP_HistogramFormatARGB",documentation:"`= 0`",detail:ro},{label:"$GDIP_HistogramFormatPARGB",documentation:"`= 1`",detail:ro},{label:"$GDIP_HistogramFormatRGB",documentation:"`= 2`",detail:ro},{label:"$GDIP_HistogramFormatGray",documentation:"`= 3`",detail:ro},{label:"$GDIP_HistogramFormatB",documentation:"`= 4`",detail:ro},{label:"$GDIP_HistogramFormatG",documentation:"`= 5`",detail:ro},{label:"$GDIP_HistogramFormatR",documentation:"`= 6`",detail:ro},{label:"$GDIP_HistogramFormatA",documentation:"`= 7`",detail:ro},{label:"$GDIP_TextRenderingHintSystemDefault",documentation:"`= 0`",detail:ja},{label:"$GDIP_TextRenderingHintSingleBitPerPixelGridFit",documentation:"`= 1`",detail:ja},{label:"$GDIP_TextRenderingHintSingleBitPerPixel",documentation:"`= 2`",detail:ja},{label:"$GDIP_TextRenderingHintAntialiasGridFit",documentation:"`= 3`",detail:ja},{label:"$GDIP_TextRenderingHintAntialias",documentation:"`= 4`",detail:ja},{label:"$GDIP_TextRenderingHintClearTypeGridFit",documentation:"`= 5`",detail:ja},{label:"$GDIP_RotateNoneFlipNone",documentation:"`= 0`",detail:lo},{label:"$GDIP_Rotate90FlipNone",documentation:"`= 1`",detail:lo},{label:"$GDIP_Rotate180FlipNone",documentation:"`= 2`",detail:lo},{label:"$GDIP_Rotate270FlipNone",documentation:"`= 3`",detail:lo},{label:"$GDIP_RotateNoneFlipX",documentation:"`= 4`",detail:lo},{label:"$GDIP_Rotate90FlipX",documentation:"`= 5`",detail:lo},{label:"$GDIP_Rotate180FlipX",documentation:"`= 6`",detail:lo},{label:"$GDIP_Rotate270FlipX",documentation:"`= 7`",detail:lo},{label:"$GDIP_RotateNoneFlipY",documentation:"`= $GDIP_Rotate180FlipX`",detail:lo},{label:"$GDIP_Rotate90FlipY",documentation:"`= $GDIP_Rotate270FlipX`",detail:lo},{label:"$GDIP_Rotate180FlipY",documentation:"`= $GDIP_RotateNoneFlipX`",detail:lo},{label:"$GDIP_Rotate270FlipY",documentation:"`= $GDIP_Rotate90FlipX`",detail:lo},{label:"$GDIP_RotateNoneFlipXY",documentation:"`= $GDIP_Rotate180FlipNone`",detail:lo},{label:"$GDIP_Rotate90FlipXY",documentation:"`= $GDIP_Rotate270FlipNone`",detail:lo},{label:"$GDIP_Rotate270FlipXY",documentation:"`= $GDIP_Rotate90FlipNone`",detail:lo},{label:"$GDIP_FRAMEDIMENSION_TIME",documentation:'`= "{6AEDBD6D-3FB5-418A-83A6-7F45229DC872}"`',detail:so},{label:"$GDIP_FRAMEDIMENSION_RESOLUTION",documentation:'`= "{84236F7B-3BD3-428F-8DAB-4EA1439CA315}"`',detail:so},{label:"$GDIP_FRAMEDIMENSION_PAGE",documentation:'`= "{7462DC86-6180-4C7E-8E3F-EE7333A7A483}"`',detail:so},{label:"$GDIP_COLORADJUSTTYPE_DEFAULT",documentation:"`= 0`",detail:co},{label:"$GDIP_COLORADJUSTTYPE_BITMAP",documentation:"`= 1`",detail:co},{label:"$GDIP_COLORADJUSTTYPE_BRUSH",documentation:"`= 2`",detail:co},{label:"$GDIP_COLORADJUSTTYPE_PEN",documentation:"`= 3`",detail:co},{label:"$GDIP_COLORADJUSTTYPE_TEXT",documentation:"`= 4`",detail:co},{label:"$GDIP_COLORADJUSTTYPE_COUNT",documentation:"`= 5`",detail:co},{label:"$GDIP_COLORADJUSTTYPE_ANY",documentation:"`= 6`",detail:co}];const uo=(0,Ce.fillCompletions)(ho,t.CompletionItemKind.Constant,"","GDIPlusConstants.au3"),mo=(0,Ce.fillCompletions)([{label:"$LBS_DISABLENOSCROLL",documentation:"Shows a disabled vertical scroll bar for the list box when the box does not contain enough items to scroll. If you do not specify this style, the scroll bar is hidden when the list box does not contain enough items."},{label:"$LBS_NOINTEGRALHEIGHT",documentation:"Specifies that the list box will be exactly the size specified by the application when it created the list box."},{label:"$LBS_NOSEL",documentation:"Specifies that the user can view list box strings but cannot select them."},{label:"$LBS_NOTIFY",documentation:"Notifies the parent window when the user taps or double-taps a string in the list box."},{label:"$LBS_SORT",documentation:"Sorts strings in the list box alphabetically."},{label:"$LBS_STANDARD",documentation:"Sorts strings in the list box alphabetically. The parent window receives an input message when the user taps or double-taps a string. The list box has borders on all sides. (LBS_NOTIFY | LBS_SORT | WS_VSCROLL | WS_BORDER)"},{label:"$LBS_USETABSTOPS",documentation:"Enables a list box to recognize and expand tab characters when drawing its strings. The default tab positions are 32 dialog box units. A dialog box unit is equal to one-fourth of the current dialog box base-width unit."}],t.CompletionItemKind.Constant,"List Style Constant","ListBoxConstants.au3"),po=(0,Ce.fillCompletions)([{label:"$LVS_ICON",documentation:"This style specifies icon view.",detail:"ListView Style Constant"},{label:"$LVS_REPORT",documentation:"This style specifies report view.",detail:"ListView Style Constant"},{label:"$LVS_SMALLICON",documentation:"This style specifies small icon view.",detail:"ListView Style Constant"},{label:"$LVS_LIST",documentation:"This style specifies list view.",detail:"ListView Style Constant"},{label:"$LVS_EDITLABELS",documentation:"Item text can be edited in place.",detail:"ListView Style Constant"},{label:"$LVS_NOCOLUMNHEADER",documentation:"Column headers are not displayed in report view. By default, columns have headers in report view.",detail:"ListView Style Constant"},{label:"$LVS_NOSORTHEADER",documentation:"Column headers do not work like buttons. This style can be used if clicking a column header in report view does not carry out an action, such as sorting.",detail:"ListView Style Constant"},{label:"$LVS_SINGLESEL",documentation:"Only one item at a time can be selected.",detail:"ListView Style Constant"},{label:"$LVS_SHOWSELALWAYS",documentation:"The selection, if any, is always shown, even if the control does not have the focus.",detail:"ListView Style Constant"},{label:"$LVS_SORTASCENDING",documentation:"Item indices are sorted based on item text in ascending order.",detail:"ListView Style Constant"},{label:"$LVS_SORTDESCENDING",documentation:"Item indices are sorted based on item text in descending order.",detail:"ListView Style Constant"},{label:"$LVS_NOLABELWRAP",documentation:"Item text is displayed on a single line in icon view. By default, item text may wrap in icon view.",detail:"ListView Style Constant"},{label:"$LVS_EX_FULLROWSELECT",documentation:"When an item is selected, the item and all its subitems are highlighted.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_GRIDLINES",documentation:"Displays gridlines around items and subitems.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_HEADERDRAGDROP",documentation:"Enables drag-and-drop reordering of columns in a list view control.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_TRACKSELECT",documentation:"Enables hot-track selection in a list view control. Hot track selection means that an item is automatically selected when the cursor remains over the item for a certain period of time",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_CHECKBOXES",documentation:"Enables check boxes for items in a list view control.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_BORDERSELECT",documentation:"If this style is set, when an item is selected the border color of the item changes rather than the item being highlighted.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_DOUBLEBUFFER",documentation:"Paints via double-buffering, which reduces flicker. This extended style also enables alpha-blended marquee selection on systems where it is supported.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_FLATSB",documentation:"Enables flat scroll bars in the list view.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_MULTIWORKAREAS",documentation:"The control will not autoarrange its icons until one or more work areas are defined.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_SNAPTOGRID",documentation:"In icon view, icons automatically snap into a grid.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_SUBITEMIMAGES",documentation:"Allows images to be displayed for subitems.",detail:"ListView Extended Style Constant"},{label:"$LVS_EX_INFOTIP",documentation:"Displays a tooltip when the item is not fully visible. Sends a notification message to $LVN_GETINFOTIP",detail:"ListView Extended Style Constant"}],t.CompletionItemKind.Constant,"","ListViewConstants.au3");var bo="MsgBox Constant Flag Parameter",_o="MsgBox Constant Return Value",fo=[{label:"$MB_OK",documentation:"One push button: OK",detail:bo},{label:"$MB_OKCANCEL",documentation:"Two push buttons: OK and Cancel",detail:bo},{label:"$MB_ABORTRETRYIGNORE",documentation:"Three push buttons: Abort, Retry, and Ignore",detail:bo},{label:"$MB_YESNOCANCEL",documentation:"Three push buttons: Yes, No, and Cancel",detail:bo},{label:"$MB_YESNO",documentation:"Two push buttons: Yes and No",detail:bo},{label:"$MB_RETRYCANCEL",documentation:"Two push buttons: Retry and Cancel",detail:bo},{label:"$MB_CANCELTRYCONTINUE",documentation:"Three buttons: Cancel, Try Again and Continue",detail:bo},{label:"$MB_HELP",documentation:"Adds a Help button to the message box. When the user clicks the Help button or presses F1, the system sends a WM_HELP message to the owner.",detail:bo},{label:"$MB_ICONERROR",documentation:"Stop-sign icon.",detail:bo},{label:"$MB_ICONQUESTION",documentation:"Question-mark icon",detail:bo},{label:"$MB_ICONWARNING",documentation:"Exclamation-point icon",detail:bo},{label:"$MB_ICONINFORMATION",documentation:"Information-sign icon consisting of an 'i' in a circle",detail:bo},{label:"$MB_DEFBUTTON1",documentation:"First button is default button",detail:bo},{label:"$MB_DEFBUTTON2",documentation:"Second button is default button",detail:bo},{label:"$MB_DEFBUTTON3",documentation:"Third button is default button",detail:bo},{label:"$MB_DEFBUTTON4",documentation:"Fourth button is default button",detail:bo},{label:"$MB_APPLMODAL",documentation:"Application modal",detail:bo},{label:"$MB_SYSTEMMODAL",documentation:"System modal (dialog has an icon)",detail:bo},{label:"$MB_TASKMODAL",documentation:"Task modal",detail:bo},{label:"$MB_DEFAULT_DESKTOP_ONLY",documentation:"MsgBox() shows on the desktop of the interactive window station.",detail:bo},{label:"$MB_RIGHT",documentation:"Title and text are right-justified",detail:bo},{label:"$MB_RTLREADING",documentation:"Displays message and caption text using right-to-left reading order on Hebrew and Arabic systems.",detail:bo},{label:"$MB_SETFOREGROUND",documentation:"The message box becomes the foreground window.",detail:bo},{label:"$MB_TOPMOST",documentation:"MsgBox() has top-most attribute set",detail:bo},{label:"$MB_SERVICE_NOTIFICATION",documentation:"The function displays a message box on the current active desktop, even if there is no user logged on to the computer.",detail:bo},{label:"$IDOK",documentation:"OK button was selected",detail:_o},{label:"$IDCANCEL",documentation:"Cancel button was selected",detail:_o},{label:"$IDABORT",documentation:"Abort button was selected",detail:_o},{label:"$IDRETRY",documentation:"Retry button was selected",detail:_o},{label:"$IDIGNORE",documentation:"Ignore button was selected",detail:_o},{label:"$IDYES",documentation:"Yes button was selected",detail:_o},{label:"$IDNO",documentation:"No button was selected",detail:_o},{label:"$IDCLOSE",documentation:"Close button was selected",detail:_o},{label:"$IDHELP",documentation:"Help button was selected",detail:_o},{label:"$IDTRYAGAIN",documentation:"Try Again button was selected",detail:_o},{label:"$IDTRYCONTINUE",documentation:"Continue button was selected",detail:_o}];const Io=(0,Ce.fillCompletions)(fo,t.CompletionItemKind.Constant,"","MsgBoxConstants.au3"),$o=(0,Ce.fillCompletions)([{label:"$PBS_MARQUEE",documentation:"Displays progress status as a scrolling marquee."},{label:"$PBS_SMOOTH",documentation:"Displays progress status in a smooth scrolling bar instead of the default segmented bar.\nNote This style is supported only in the Windows Classic theme. All other themes won't visually change with or without this style."},{label:"$PBS_SMOOTHREVERSE",documentation:"Displays progress status with a smooth backward transition when changing from a higher value to a lower value. By default, the control will instantly jump to the lower value.\nNote This style is supported only on Windows Vista or later. "},{label:"$PBS_VERTICAL",documentation:"Displays progress status vertically, from bottom to top."}],t.CompletionItemKind.Constant,"Progress Bar Style Constant","ProgressConstants.au3"),go=(0,Ce.fillCompletions)([{label:"$TBS_AUTOTICKS",documentation:"Adds tick marks when you set the range on the trackbar by using the TBM_SETRANGE message."},{label:"$TBS_BOTH",documentation:"Places ticks on both sides of the trackbar."},{label:"$TBS_BOTTOM",documentation:"Places ticks on the bottom of a horizontal trackbar."},{label:"$TBS_HORZ",documentation:"Specifies a horizontal trackbar. This is the default."},{label:"$TBS_VERT",documentation:"Places ticks on the left side of a vertical trackbar."},{label:"$TBS_NOTHUMB",documentation:"Specifies that the trackbar has no slider."},{label:"$TBS_NOTICKS",documentation:"Specifies that no ticks are placed on the trackbar."},{label:"$TBS_LEFT",documentation:"Places ticks on the left side of a vertical trackbar."},{label:"$TBS_RIGHT",documentation:"Places ticks on the right side of a vertical trackbar."},{label:"$TBS_TOP",documentation:"Places ticks on the top of a horizontal trackbar."}],t.CompletionItemKind.Constant,"Slider Style Constant","SliderConstants.au3");var Co="Label/Pic/Icon Constant",So="Control Default Style Constant",To="Message Constant",Go=[{label:"$SS_LEFT",documentation:"`= 0x0`",detail:Co},{label:"$SS_CENTER",documentation:"`= 0x1`",detail:Co},{label:"$SS_RIGHT",documentation:"`= 0x2`",detail:Co},{label:"$SS_ICON",documentation:"`= 0x3`",detail:Co},{label:"$SS_BLACKRECT",documentation:"`= 0x4`",detail:Co},{label:"$SS_GRAYRECT",documentation:"`= 0x5`",detail:Co},{label:"$SS_WHITERECT",documentation:"`= 0x6`",detail:Co},{label:"$SS_BLACKFRAME",documentation:"`= 0x7`",detail:Co},{label:"$SS_GRAYFRAME",documentation:"`= 0x8`",detail:Co},{label:"$SS_WHITEFRAME",documentation:"`= 0x9`",detail:Co},{label:"$SS_SIMPLE",documentation:"`= 0xB`",detail:Co},{label:"$SS_LEFTNOWORDWRAP",documentation:"`= 0xC`",detail:Co},{label:"$SS_BITMAP",documentation:"`= 0xE`",detail:Co},{label:"$SS_ENHMETAFILE",documentation:"`= 0xF`",detail:Co},{label:"$SS_ETCHEDHORZ",documentation:"`= 0x10`",detail:Co},{label:"$SS_ETCHEDVERT",documentation:"`= 0x11`",detail:Co},{label:"$SS_ETCHEDFRAME",documentation:"`= 0x12`",detail:Co},{label:"$SS_REALSIZECONTROL",documentation:"`= 0x40`",detail:Co},{label:"$SS_NOPREFIX",documentation:"`= 0x0080`",detail:Co},{label:"$SS_NOTIFY",documentation:"`= 0x0100`",detail:Co},{label:"$SS_CENTERIMAGE",documentation:"`= 0x0200`",detail:Co},{label:"$SS_RIGHTJUST",documentation:"`= 0x0400`",detail:Co},{label:"$SS_SUNKEN",documentation:"`= 0x1000`",detail:Co},{label:"$GUI_SS_DEFAULT_LABEL",documentation:"`= 0`",detail:So},{label:"$GUI_SS_DEFAULT_GRAPHIC",documentation:"`= 0`",detail:So},{label:"$GUI_SS_DEFAULT_ICON",documentation:"`= $SS_NOTIFY`",detail:So},{label:"$GUI_SS_DEFAULT_PIC",documentation:"`= $SS_NOTIFY`",detail:So},{label:"$STM_SETICON",documentation:"`= 0x0170`",detail:To},{label:"$STM_GETICON",documentation:"`= 0x0171`",detail:To},{label:"$STM_SETIMAGE",documentation:"`= 0x0172`",detail:To},{label:"$STM_GETIMAGE",documentation:"`= 0x0173`",detail:To}];const Po=(0,Ce.fillCompletions)(Go,t.CompletionItemKind.Constant,"","StaticConstants.au3");var wo="Style Constant",yo="uFlag Constant",Ao="Message Constant",Do="Notification Constant",Wo=[{label:"$SBARS_SIZEGRIP",documentation:"`= 0x100`",detail:wo},{label:"$SBT_TOOLTIPS",documentation:"`= 0x800`",detail:wo},{label:"$SBARS_TOOLTIPS",documentation:"`= 0x800`",detail:wo},{label:"$SBT_SUNKEN",documentation:"Default\n\n`= 0x0`",detail:yo},{label:"$SBT_NOBORDERS",documentation:"The text is drawn without borders.\n\n`= 0x100`",detail:yo},{label:"$SBT_POPOUT",documentation:" The text is drawn with a border to appear higher than the plane of the window.\n\n`= 0x200`",detail:yo},{label:"$SBT_RTLREADING",documentation:"`SB_SETTEXT`, `SB_SETTEXT`, `SB_GETTEXTLENGTH` flags only: Displays text using right-to-left reading order on Hebrew or Arabic systems.\n\n`= 0x400`",detail:yo},{label:"$SBT_NOTABPARSING",documentation:"Tab characters are ignored.\n\n`= 0x800`",detail:yo},{label:"$SBT_OWNERDRAW",documentation:"The text is drawn by the parent window.\n\n`= 0x1000`",detail:yo},{label:"$__STATUSBARCONSTANT_WM_USER",documentation:"`= 0X400`",detail:Ao},{label:"$SB_GETBORDERS",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 7)`",detail:Ao},{label:"$SB_GETICON",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 20)`",detail:Ao},{label:"$SB_GETPARTS",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 6)`",detail:Ao},{label:"$SB_GETRECT",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 10)`",detail:Ao},{label:"$SB_GETTEXTA",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 2)`",detail:Ao},{label:"$SB_GETTEXTW",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 13)`",detail:Ao},{label:"$SB_GETTEXT",documentation:"`= $SB_GETTEXTA`",detail:Ao},{label:"$SB_GETTEXTLENGTHA",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 3)`",detail:Ao},{label:"$SB_GETTEXTLENGTHW",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 12)`",detail:Ao},{label:"$SB_GETTEXTLENGTH",documentation:"`= $SB_GETTEXTLENGTHA`",detail:Ao},{label:"$SB_GETTIPTEXTA",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 18)`",detail:Ao},{label:"$SB_GETTIPTEXTW",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 19)`",detail:Ao},{label:"$SB_GETUNICODEFORMAT",documentation:"`= 0x2000 + 6`",detail:Ao},{label:"$SB_ISSIMPLE",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 14)`",detail:Ao},{label:"$SB_SETBKCOLOR",documentation:"`= 0x2000 + 1`",detail:Ao},{label:"$SB_SETICON",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 15)`",detail:Ao},{label:"$SB_SETMINHEIGHT",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 8)`",detail:Ao},{label:"$SB_SETPARTS",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 4)`",detail:Ao},{label:"$SB_SETTEXTA",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 1)`",detail:Ao},{label:"$SB_SETTEXTW",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 11)`",detail:Ao},{label:"$SB_SETTEXT",documentation:"`= $SB_SETTEXTA`",detail:Ao},{label:"$SB_SETTIPTEXTA",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 16)`",detail:Ao},{label:"$SB_SETTIPTEXTW",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 17)`",detail:Ao},{label:"$SB_SETUNICODEFORMAT",documentation:"`= 0x2000 + 5`",detail:Ao},{label:"$SB_SIMPLE",documentation:"`= ($__STATUSBARCONSTANT_WM_USER + 9)`",detail:Ao},{label:"$SB_SIMPLEID",documentation:"`= 0xff`",detail:Ao},{label:"$SBN_FIRST",documentation:"`= -880`",detail:Do},{label:"$SBN_SIMPLEMODECHANGE",documentation:"Sent when the simple mode changes due to a `$SB_SIMPLE` message\n\n`= $SBN_FIRST - 0`",detail:Do}];const Eo=(0,Ce.fillCompletions)(Wo,t.CompletionItemKind.Constant,"","StatusBarConstants.au3");var Ro="StringCompare/StringInStr/StringReplace Constant",xo="StringStripWS Constant",vo="StringSplit Constant",Uo="StringRegExp Constant",Fo="_StringBetween Constant",Lo="BinaryToString/StringToBinary Constant",Bo="StringFromASCIIArray Constant",Oo="StringReverse Constant",Mo=[{label:"$STR_NOCASESENSE",documentation:"Not case sensitive (default)\n\n`= 0`",detail:Ro},{label:"$STR_CASESENSE",documentation:"Case sensitive\n\n`= 1`",detail:Ro},{label:"$STR_NOCASESENSEBASIC",documentation:"Not case sensitive, using a basic comparison\n\n`= 2`",detail:Ro},{label:"$STR_STRIPLEADING",documentation:"Strip leading whitespace\n\n`= 1`",detail:xo},{label:"$STR_STRIPTRAILING",documentation:"Strip trailing whitespace\n\n`= 2`",detail:xo},{label:"$STR_STRIPSPACES",documentation:"Strip double (or more) spaces between words\n\n`= 4`",detail:xo},{label:"$STR_STRIPALL",documentation:"Strip all spaces (over-rides all other flags)\n\n`= 8`",detail:xo},{label:"$STR_CHRSPLIT",documentation:"Each character in the delimiter string will mark the split\n\n`= 0`",detail:vo},{label:"$STR_ENTIRESPLIT",documentation:"Entire delimiter marks the split\n\n`= 1`",detail:vo},{label:"$STR_NOCOUNT",documentation:"Disable the return count\n\n`= 2`",detail:vo},{label:"$STR_REGEXPMATCH",documentation:"Return 1 if match.\n\n`= 0`",detail:Uo},{label:"$STR_REGEXPARRAYMATCH",documentation:"Return array of matches.\n\n`= 1`",detail:Uo},{label:"$STR_REGEXPARRAYFULLMATCH",documentation:"Return array of matches including the full match (Perl / PHP style).\n\n`= 2`",detail:Uo},{label:"$STR_REGEXPARRAYGLOBALMATCH",documentation:"Return array of global matches.\n\n`= 3`",detail:Uo},{label:"$STR_REGEXPARRAYGLOBALFULLMATCH",documentation:"Return an array of arrays containing global matches including the full match (Perl / PHP style).\n\n`= 4`",detail:Uo},{label:"$STR_ENDISSTART",documentation:"End acts as next start when end = start\n\n`= 0`",detail:Fo},{label:"$STR_ENDNOTSTART",documentation:"End does not act as new start when end = start\n\n`= 1`",detail:Fo},{label:"$SB_ANSI",documentation:"String data is ANSI (default)\n`= 1`",detail:Lo},{label:"$SB_UTF16LE",documentation:"String data is UTF16 Little Endian\n`= 2`",detail:Lo},{label:"$SB_UTF16BE",documentation:"String data is UTF16 Big Endian\n`= 3`",detail:Lo},{label:"$SB_UTF8",documentation:"String data is UTF8\n`= 4`",detail:Lo},{label:"$SE_UTF16",documentation:"`= 0`",detail:Bo},{label:"$SE_ANSI",documentation:"`= 1`",detail:Bo},{label:"$SE_UTF8",documentation:"`= 2`",detail:Bo},{label:"$STR_UTF16",documentation:"Reversed in full UTF-16 mode. (default)\n\n`= 0`",detail:Oo},{label:"$STR_UCS2",documentation:"A much faster method - only use if using UCS-2 text.\n\n`= 1`",detail:Oo}];const No=(0,Ce.fillCompletions)(Mo,t.CompletionItemKind.Constant,"","StringConstants.au3"),Ho=(0,Ce.fillCompletions)([{label:"$TCS_SCROLLOPPOSITE",documentation:"Unneeded tabs scroll to the opposite side of the control when a tab is selected. "},{label:"$TCS_BOTTOM",documentation:"Tabs appear at the bottom of the control. This value equals TCS_RIGHT. This style is not supported if you use comctl32.dll version 6. "},{label:"$TCS_RIGHT",documentation:"Tabs appear vertically on the right side of controls that use the TCS_VERTICAL style. This value equals TCS_BOTTOM. This style is not supported if you use visual styles. "},{label:"$TCS_MULTISELECT",documentation:"Multiple tabs can be selected by holding down CTRL when clicking. This style must be used with the TCS_BUTTONS style. "},{label:"$TCS_FLATBUTTONS",documentation:"Selected tabs appear as being indented into the background while other tabs appear as being on the same plane as the background. This style only affects tab controls with the TCS_BUTTONS style. "},{label:"$TCS_FORCEICONLEFT",documentation:"Icons are aligned with the left edge of each fixed-width tab. This style can only be used with the TCS_FIXEDWIDTH style. "},{label:"$TCS_FORCELABELLEFT",documentation:"Labels are aligned with the left edge of each fixed-width tab; that is, the label is displayed immediately to the right of the icon instead of being centered.\n\nThis style can only be used with the TCS_FIXEDWIDTH style, and it implies the TCS_FORCEICONLEFT style."},{label:"$TCS_HOTTRACK",documentation:"Items under the pointer are automatically highlighted "},{label:"$TCS_VERTICAL",documentation:"Tabs appear at the left side of the control, with tab text displayed vertically. This style is valid only when used with the TCS_MULTILINE style. To make tabs appear on the right side of the control, also use the TCS_RIGHT style. This style is not supported if you use comctl32.dll version 6. "},{label:"$TCS_TABS",documentation:"Tabs appear as tabs, and a border is drawn around the display area. This style is the default. "},{label:"$TCS_BUTTONS",documentation:"Tabs appear as buttons, and no border is drawn around the display area. "},{label:"$TCS_SINGLELINE",documentation:"Only one row of tabs is displayed. The user can scroll to see more tabs, if necessary. This style is the default. "},{label:"$TCS_MULTILINE",documentation:"Multiple rows of tabs are displayed, if necessary, so all tabs are visible at once. "},{label:"$TCS_RIGHTJUSTIFY",documentation:"The width of each tab is increased, if necessary, so that each row of tabs fills the entire width of the tab control.\n\nThis window style is ignored unless the TCS_MULTILINE style is also specified."},{label:"$TCS_FIXEDWIDTH",documentation:"All tabs are the same width. This style cannot be combined with the TCS_RIGHTJUSTIFY style. "},{label:"$TCS_RAGGEDRIGHT",documentation:"Rows of tabs will not be stretched to fill the entire width of the control. This style is the default. "},{label:"$TCS_FOCUSONBUTTONDOWN",documentation:"The tab control receives the input focus when clicked. "},{label:"$TCS_OWNERDRAWFIXED",documentation:"The parent window is responsible for drawing tabs. "},{label:"$TCS_TOOLTIPS",documentation:"The tab control has a tooltip control associated with it. "},{label:"$TCS_FOCUSNEVER",documentation:"The tab control does not receive the input focus when clicked. "}],t.CompletionItemKind.Constant,"Tab Style Constant","TabConstants.au3");var ko="Tray predefined ID Constant",Vo="Tray menu/item state value Constant",jo="Tray event value Constant",Yo="Balloon Tip Type Constant",Xo="TrayCreateItem value Constant",zo="TraySetClick value Constant",Ko="TraySetState value Constant",qo=[{label:"$TRAY_ITEM_EXIT",documentation:"`= 3`",detail:ko},{label:"$TRAY_ITEM_PAUSE",documentation:"`= 4`",detail:ko},{label:"$TRAY_ITEM_FIRST",documentation:"`= 7`",detail:ko},{label:"$TRAY_CHECKED",documentation:"`= 1`",detail:Vo},{label:"$TRAY_UNCHECKED",documentation:"`= 4`",detail:Vo},{label:"$TRAY_ENABLE",documentation:"`= 64`",detail:Vo},{label:"$TRAY_DISABLE",documentation:"`= 128`",detail:Vo},{label:"$TRAY_FOCUS",documentation:"`= 256`",detail:Vo},{label:"$TRAY_DEFAULT",documentation:"`= 512`",detail:Vo},{label:"$TRAY_EVENT_NONE",documentation:"`= 0`",detail:jo},{label:"$TRAY_EVENT_SHOWICON",documentation:"`= -3`",detail:jo},{label:"$TRAY_EVENT_HIDEICON",documentation:"`= -4`",detail:jo},{label:"$TRAY_EVENT_FLASHICON",documentation:"`= -5`",detail:jo},{label:"$TRAY_EVENT_NOFLASHICON",documentation:"`= -6`",detail:jo},{label:"$TRAY_EVENT_PRIMARYDOWN",documentation:"`= -7`",detail:jo},{label:"$TRAY_EVENT_PRIMARYUP",documentation:"`= -8`",detail:jo},{label:"$TRAY_EVENT_SECONDARYDOWN",documentation:"`= -9`",detail:jo},{label:"$TRAY_EVENT_SECONDARYUP",documentation:"`= -10`",detail:jo},{label:"$TRAY_EVENT_MOUSEOVER",documentation:"`= -11`",detail:jo},{label:"$TRAY_EVENT_MOUSEOUT",documentation:"`= -12`",detail:jo},{label:"$TRAY_EVENT_PRIMARYDOUBLE",documentation:"`= -13`",detail:jo},{label:"$TRAY_EVENT_SECONDARYDOUBLE",documentation:"`= -14`",detail:jo},{label:"$TIP_ICONNONE",documentation:"No icon (default)\n\n`= 0`",detail:Yo},{label:"$TIP_ICONASTERISK",documentation:"Info icon\n\n`= 1`",detail:Yo},{label:"$TIP_ICONEXCLAMATION",documentation:"Warning icon\n\n`= 2`",detail:Yo},{label:"$TIP_ICONHAND",documentation:"Error icon\n\n`= 3`",detail:Yo},{label:"$TIP_NOSOUND",documentation:"No sound\n\n`= 16`",detail:Yo},{label:"$TRAY_ITEM_NORMAL",documentation:"`= 0`",detail:Xo},{label:"$TRAY_ITEM_RADIO",documentation:"`= 1`",detail:Xo},{label:"$TRAY_CLICK_SHOW",documentation:"`= 0`",detail:zo},{label:"$TRAY_CLICK_PRIMARYDOWN",documentation:"`= 1`",detail:zo},{label:"$TRAY_CLICK_PRIMARYUP",documentation:"`= 2`",detail:zo},{label:"$TRAY_DBLCLICK_PRIMARY",documentation:"`= 4`",detail:zo},{label:"$TRAY_CLICK_SECONDARYDOWN",documentation:"`= 8`",detail:zo},{label:"$TRAY_CLICK_SECONDARYUP",documentation:"`= 16`",detail:zo},{label:"$TRAY_DBLCLICK_SECONDARY",documentation:"`= 32`",detail:zo},{label:"$TRAY_CLICK_HOVERING",documentation:"`= 64`",detail:zo},{label:"$TRAY_ICONSTATE_SHOW",documentation:"`= 1`",detail:Ko},{label:"$TRAY_ICONSTATE_HIDE",documentation:"`= 2`",detail:Ko},{label:"$TRAY_ICONSTATE_FLASH",documentation:"`= 4`",detail:Ko},{label:"$TRAY_ICONSTATE_STOPFLASH",documentation:"`= 8`",detail:Ko},{label:"$TRAY_ICONSTATE_RESET",documentation:"`= 16`",detail:Ko}];const Qo=(0,Ce.fillCompletions)(qo,t.CompletionItemKind.Constant,"","TrayConstants.au3");var Jo="TreeView Style Constant",Zo="Expand flag Constant",en="GetNext flag Constant",tn="HitTest flag Constant",an="Insert flag Constant",on="Item/Itemex Mask Flag Constant",nn="Image List Constant",rn="Type of Action Constant",ln="Item State Constant",sn="TreeView Message Constant",dn="Notification Constant",cn=[{label:"$TVS_HASBUTTONS",documentation:"Displays plus (+) and minus (-) buttons next to parent items. The user clicks the buttons to expand or collapse a parent item's list of child items. To include buttons with items at the root of the tree view, TVS_LINESATROOT must also be specified.",detail:Jo},{label:"$TVS_HASLINES",documentation:"Uses lines to show the hierarchy of items.",detail:Jo},{label:"$TVS_LINESATROOT",documentation:"Uses lines to link items at the root of the tree view control. This value is ignored if TVS_HASLINES is not also specified.",detail:Jo},{label:"$TVS_DISABLEDRAGDROP",documentation:"Prevents the tree view control from sending TVN_BEGINDRAG notification messages.",detail:Jo},{label:"$TVS_SHOWSELALWAYS",documentation:"Causes a selected item to remain selected when the tree view control loses focus.",detail:Jo},{label:"$TVS_RTLREADING",documentation:"Normal windows display text left-to-right (LTR). Windows can be mirrored to display languages such as Hebrew or Arabic that read right-to-left (RTL). Normally, tree view text will be displayed in same direction as the the text in its parent window. If TVS_RTLREADING is set, tree view text will read in the opposite direction from the text in the parent window. ",detail:Jo},{label:"$TVS_NOTOOLTIPS",documentation:"The tree view control does not support tooltips.",detail:Jo},{label:"$TVS_CHECKBOXES",documentation:"Enables check boxes for items in a tree-view control. Once a tree-view control is created with this style, the style cannot be removed. Instead, you must destroy the control and create a new one in its place.",detail:Jo},{label:"$TVS_TRACKSELECT",documentation:"Enables hot tracking in a tree view control.",detail:Jo},{label:"$TVS_SINGLEEXPAND",documentation:"When this style is enabled, changing the selection in the tree view will automatically cause the item being selected to expand and the item being unselected to collapse. If the mouse is used to single-click the selected item and that item is closed, it will be expanded. If the user holds the CTRL key down while selecting an item, the item being unselected will not be collapsed.",detail:Jo},{label:"$TVS_FULLROWSELECT",documentation:"Enables full-row selection in the tree view. The entire row of the selected item is highlighted, and clicking anywhere on an item's row will cause it to be selected. This style cannot be used in conjunction with the TVS_HASLINES style.",detail:Jo},{label:"$TVS_NOSCROLL",documentation:"Disables both horizontal and vertical scrolling in the control. The control will not display any scroll bars.",detail:Jo},{label:"$TVS_NONEVENHEIGHT",documentation:"The height of the items can be set to an odd height with the TVM_SETITEMHEIGHT message. By default, the height of items must be an even value.",detail:Jo},{label:"$TVS_NOHSCROLL",documentation:"Disables horizontal scrolling in the control\n\n`= 0x00008000`",detail:Jo},{label:"$TVS_DEFAULT",documentation:"Default control style\n\n`= 0x00000037`",detail:Jo},{label:"$GUI_SS_DEFAULT_TREEVIEW",documentation:"`= BitOR($TVS_HASBUTTONS, $TVS_HASLINES, $TVS_LINESATROOT, $TVS_DISABLEDRAGDROP, $TVS_SHOWSELALWAYS)`",detail:Jo},{label:"$TVE_COLLAPSE",documentation:"`= 0x0001`",detail:Zo},{label:"$TVE_EXPAND",documentation:"`= 0x0002`",detail:Zo},{label:"$TVE_TOGGLE",documentation:"`= 0x0003`",detail:Zo},{label:"$TVE_EXPANDPARTIAL",documentation:"`= 0x4000`",detail:Zo},{label:"$TVE_COLLAPSERESET",documentation:"`= 0x8000`",detail:Zo},{label:"$TVGN_ROOT",documentation:"`= 0x00000000`",detail:en},{label:"$TVGN_NEXT",documentation:"`= 0x00000001`",detail:en},{label:"$TVGN_PREVIOUS",documentation:"`= 0x00000002`",detail:en},{label:"$TVGN_PARENT",documentation:"`= 0x00000003`",detail:en},{label:"$TVGN_CHILD",documentation:"`= 0x00000004`",detail:en},{label:"$TVGN_FIRSTVISIBLE",documentation:"`= 0x00000005`",detal:en},{label:"$TVGN_NEXTVISIBLE",documentation:"`= 0x00000006`",detal:en},{label:"$TVGN_PREVIOUSVISIBLE",documentation:"`= 0x00000007`",detal:en},{label:"$TVGN_DROPHILITE",documentation:"`= 0x00000008`",detal:en},{label:"$TVGN_LASTVISIBLE",documentation:"`= 0x0000000A`",detal:en},{label:"$TVHT_NOWHERE",documentation:"`= 0x00000001`",detail:tn},{label:"$TVHT_ONITEMICON",documentation:"`= 0x00000002`",detail:tn},{label:"$TVHT_ONITEMLABEL",documentation:"`= 0x00000004`",detail:tn},{label:"$TVHT_ONITEMINDENT",documentation:"`= 0x00000008`",detail:tn},{label:"$TVHT_ONITEMBUTTON",documentation:"`= 0x00000010`",detail:tn},{label:"$TVHT_ONITEMRIGHT",documentation:"`= 0x00000020`",detail:tn},{label:"$TVHT_ONITEMSTATEICON",documentation:"`= 0x00000040`",detail:tn},{label:"$TVHT_ONITEM",documentation:"`= 0x00000046`",detail:tn},{label:"$TVHT_ABOVE",documentation:"`= 0x00000100`",detail:tn},{label:"$TVHT_BELOW",documentation:"`= 0x00000200`",detail:tn},{label:"$TVHT_TORIGHT",documentation:"`= 0x00000400`",detail:tn},{label:"$TVHT_TOLEFT",documentation:"`= 0x00000800`",detail:tn},{label:"$TVI_ROOT",documentation:"`= 0xFFFF0000`",detail:an},{label:"$TVI_FIRST",documentation:"`= 0xFFFF0001`",detail:an},{label:"$TVI_LAST",documentation:"`= 0xFFFF0002`",detail:an},{label:"$TVI_SORT",documentation:"`= 0xFFFF0003`",detail:an},{label:"$TVIF_TEXT",documentation:"`= 0x00000001`",detail:on},{label:"$TVIF_IMAGE",documentation:"`= 0x00000002`",detail:on},{label:"$TVIF_PARAM",documentation:"`= 0x00000004`",detail:on},{label:"$TVIF_STATE",documentation:"`= 0x00000008`",detail:on},{label:"$TVIF_HANDLE",documentation:"`= 0x00000010`",detail:on},{label:"$TVIF_SELECTEDIMAGE",documentation:"`= 0x00000020`",detail:on},{label:"$TVIF_CHILDREN",documentation:"`= 0x00000040`",detail:on},{label:"$TVIF_INTEGRAL",documentation:"`= 0x00000080`",detail:on},{label:"$TVIF_EXPANDEDIMAGE",documentation:"`= 0x00000100`",detail:on},{label:"$TVIF_STATEEX",documentation:"`= 0x00000200`",detail:on},{label:"$TVIF_DI_SETITEM",documentation:"`= 0x00001000`",detail:on},{label:"$TVSIL_NORMAL",documentation:"`= 0`",detail:nn},{label:"$TVSIL_STATE",documentation:"`= 2`",detail:nn},{label:"$TVC_BYKEYBOARD",documentation:"`= 0x2`",detail:rn},{label:"$TVC_BYMOUSE",documentation:"`= 0x1`",detail:rn},{label:"$TVC_UNKNOWN",documentation:"`= 0x0`",detail:rn},{label:"$TVIS_FOCUSED",documentation:"`= 0x00000001`",detail:ln},{label:"$TVIS_SELECTED",documentation:"`= 0x00000002`",detail:ln},{label:"$TVIS_CUT",documentation:"`= 0x00000004`",detail:ln},{label:"$TVIS_DROPHILITED",documentation:"`= 0x00000008`",detail:ln},{label:"$TVIS_BOLD",documentation:"`= 0x00000010`",detail:ln},{label:"$TVIS_EXPANDED",documentation:"`= 0x00000020`",detail:ln},{label:"$TVIS_EXPANDEDONCE",documentation:"`= 0x00000040`",detail:ln},{label:"$TVIS_EXPANDPARTIAL",documentation:"`= 0x00000080`",detail:ln},{label:"$TVIS_OVERLAYMASK",documentation:"`= 0x00000F00`",detail:ln},{label:"$TVIS_STATEIMAGEMASK",documentation:"`= 0x0000F000`",detail:ln},{label:"$TVIS_USERMASK",documentation:"`= 0x0000F000`",detail:ln},{label:"$TVIS_UNCHECKED",documentation:"`= 4096`",detail:ln},{label:"$TVIS_CHECKED",documentation:"`= 8192`",detail:ln},{label:"$TVNA_ADD",documentation:"`= 1`",detail:ln},{label:"$TVNA_ADDFIRST",documentation:"`= 2`",detail:ln},{label:"$TVNA_ADDCHILD",documentation:"`= 3`",detail:ln},{label:"$TVNA_ADDCHILDFIRST",documentation:"`= 4`",detail:ln},{label:"$TVNA_INSERT",documentation:"`= 5`",detail:ln},{label:"$TVTA_ADDFIRST",documentation:"`= 1`",detail:ln},{label:"$TVTA_ADD",documentation:"`= 2`",detail:ln},{label:"$TVTA_INSERT",documentation:"`= 3`",detail:ln},{label:"$TV_FIRST",documentation:"`= 0x1100`",detail:sn},{label:"$TVM_INSERTITEMA",documentation:"`= $TV_FIRST + 0`",detail:sn},{label:"$TVM_DELETEITEM",documentation:"`= $TV_FIRST + 1`",detail:sn},{label:"$TVM_EXPAND",documentation:"`= $TV_FIRST + 2`",detail:sn},{label:"$TVM_GETITEMRECT",documentation:"`= $TV_FIRST + 4`",detail:sn},{label:"$TVM_GETCOUNT",documentation:"`= $TV_FIRST + 5`",detail:sn},{label:"$TVM_GETINDENT",documentation:"`= $TV_FIRST + 6`",detail:sn},{label:"$TVM_SETINDENT",documentation:"`= $TV_FIRST + 7`",detail:sn},{label:"$TVM_GETIMAGELIST",documentation:"`= $TV_FIRST + 8`",detail:sn},{label:"$TVM_SETIMAGELIST",documentation:"`= $TV_FIRST + 9`",detail:sn},{label:"$TVM_GETNEXTITEM",documentation:"`= $TV_FIRST + 10`",detail:sn},{label:"$TVM_SELECTITEM",documentation:"`= $TV_FIRST + 11`",detail:sn},{label:"$TVM_GETITEMA",documentation:"`= $TV_FIRST + 12`",detail:sn},{label:"$TVM_SETITEMA",documentation:"`= $TV_FIRST + 13`",detail:sn},{label:"$TVM_EDITLABELA",documentation:"`= $TV_FIRST + 14`",detail:sn},{label:"$TVM_GETEDITCONTROL",documentation:"`= $TV_FIRST + 15`",detail:sn},{label:"$TVM_GETVISIBLECOUNT",documentation:"`= $TV_FIRST + 16`",detail:sn},{label:"$TVM_HITTEST",documentation:"`= $TV_FIRST + 17`",detail:sn},{label:"$TVM_CREATEDRAGIMAGE",documentation:"`= $TV_FIRST + 18`",detail:sn},{label:"$TVM_SORTCHILDREN",documentation:"`= $TV_FIRST + 19`",detail:sn},{label:"$TVM_ENSUREVISIBLE",documentation:"`= $TV_FIRST + 20`",detail:sn},{label:"$TVM_SORTCHILDRENCB",documentation:"`= $TV_FIRST + 21`",detail:sn},{label:"$TVM_ENDEDITLABELNOW",documentation:"`= $TV_FIRST + 22`",detail:sn},{label:"$TVM_GETISEARCHSTRINGA",documentation:"`= $TV_FIRST + 23`",detail:sn},{label:"$TVM_SETTOOLTIPS",documentation:"`= $TV_FIRST + 24`",detail:sn},{label:"$TVM_GETTOOLTIPS",documentation:"`= $TV_FIRST + 25`",detail:sn},{label:"$TVM_SETINSERTMARK",documentation:"`= $TV_FIRST + 26`",detail:sn},{label:"$TVM_SETITEMHEIGHT",documentation:"`= $TV_FIRST + 27`",detail:sn},{label:"$TVM_GETITEMHEIGHT",documentation:"`= $TV_FIRST + 28`",detail:sn},{label:"$TVM_SETBKCOLOR",documentation:"`= $TV_FIRST + 29`",detail:sn},{label:"$TVM_SETTEXTCOLOR",documentation:"`= $TV_FIRST + 30`",detail:sn},{label:"$TVM_GETBKCOLOR",documentation:"`= $TV_FIRST + 31`",detail:sn},{label:"$TVM_GETTEXTCOLOR",documentation:"`= $TV_FIRST + 32`",detail:sn},{label:"$TVM_SETSCROLLTIME",documentation:"`= $TV_FIRST + 33`",detail:sn},{label:"$TVM_GETSCROLLTIME",documentation:"`= $TV_FIRST + 34`",detail:sn},{label:"$TVM_SETINSERTMARKCOLOR",documentation:"`= $TV_FIRST + 37`",detail:sn},{label:"$TVM_GETINSERTMARKCOLOR",documentation:"`= $TV_FIRST + 38`",detail:sn},{label:"$TVM_GETITEMSTATE",documentation:"`= $TV_FIRST + 39`",detail:sn},{label:"$TVM_SETLINECOLOR",documentation:"`= $TV_FIRST + 40`",detail:sn},{label:"$TVM_GETLINECOLOR",documentation:"`= $TV_FIRST + 41`",detail:sn},{label:"$TVM_MAPACCIDTOHTREEITEM",documentation:"`= $TV_FIRST + 42`",detail:sn},{label:"$TVM_MAPHTREEITEMTOACCID",documentation:"`= $TV_FIRST + 43`",detail:sn},{label:"$TVM_INSERTITEMW",documentation:"`= $TV_FIRST + 50`",detail:sn},{label:"$TVM_GETITEMW",documentation:"`= $TV_FIRST + 62`",detail:sn},{label:"$TVM_SETITEMW",documentation:"`= $TV_FIRST + 63`",detail:sn},{label:"$TVM_GETISEARCHSTRINGW",documentation:"`= $TV_FIRST + 64`",detail:sn},{label:"$TVM_EDITLABELW",documentation:"`= $TV_FIRST + 65`",detail:sn},{label:"$TVM_GETUNICODEFORMAT",documentation:"`= 0x2000 + 6`",detail:sn},{label:"$TVM_SETUNICODEFORMAT",documentation:"`= 0x2000 + 5`",detail:sn},{label:"$TVN_FIRST",documentation:"`= -400`",detail:dn},{label:"$TVN_SELCHANGINGA",documentation:"`= $TVN_FIRST - 1`",detail:dn},{label:"$TVN_SELCHANGEDA",documentation:"`= $TVN_FIRST - 2`",detail:dn},{label:"$TVN_GETDISPINFOA",documentation:"`= $TVN_FIRST - 3`",detail:dn},{label:"$TVN_SETDISPINFOA",documentation:"`= $TVN_FIRST - 4`",detail:dn},{label:"$TVN_ITEMEXPANDINGA",documentation:"`= $TVN_FIRST - 5`",detail:dn},{label:"$TVN_ITEMEXPANDEDA",documentation:"`= $TVN_FIRST - 6`",detail:dn},{label:"$TVN_BEGINDRAGA",documentation:"`= $TVN_FIRST - 7`",detail:dn},{label:"$TVN_BEGINRDRAGA",documentation:"`= $TVN_FIRST - 8`",detail:dn},{label:"$TVN_DELETEITEMA",documentation:"`= $TVN_FIRST - 9`",detail:dn},{label:"$TVN_BEGINLABELEDITA",documentation:"`= $TVN_FIRST - 10`",detail:dn},{label:"$TVN_ENDLABELEDITA",documentation:"`= $TVN_FIRST - 11`",detail:dn},{label:"$TVN_KEYDOWN",documentation:"`= $TVN_FIRST - 12`",detail:dn},{label:"$TVN_GETINFOTIPA",documentation:"`= $TVN_FIRST - 13`",detail:dn},{label:"$TVN_GETINFOTIPW",documentation:"`= $TVN_FIRST - 14`",detail:dn},{label:"$TVN_SINGLEEXPAND",documentation:"`= $TVN_FIRST - 15`",detail:dn},{label:"$TVN_SELCHANGINGW",documentation:"`= $TVN_FIRST - 50`",detail:dn},{label:"$TVN_SELCHANGEDW",documentation:"`= $TVN_FIRST - 51`",detail:dn},{label:"$TVN_GETDISPINFOW",documentation:"`= $TVN_FIRST - 52`",detail:dn},{label:"$TVN_SETDISPINFOW",documentation:"`= $TVN_FIRST - 53`",detail:dn},{label:"$TVN_ITEMEXPANDINGW",documentation:"`= $TVN_FIRST - 54`",detail:dn},{label:"$TVN_ITEMEXPANDEDW",documentation:"`= $TVN_FIRST - 55`",detail:dn},{label:"$TVN_BEGINDRAGW",documentation:"`= $TVN_FIRST - 56`",detail:dn},{label:"$TVN_BEGINRDRAGW",documentation:"`= $TVN_FIRST - 57`",detail:dn},{label:"$TVN_DELETEITEMW",documentation:"`= $TVN_FIRST - 58`",detail:dn},{label:"$TVN_BEGINLABELEDITW",documentation:"`= $TVN_FIRST - 59`",detail:dn},{label:"$TVN_ENDLABELEDITW",documentation:"`= $TVN_FIRST - 60`",detail:dn}];const hn=(0,Ce.fillCompletions)(cn,t.CompletionItemKind.Constant,"","TreeViewConstants.au3"),un=(0,Ce.fillCompletions)([{label:"$UDS_ALIGNLEFT",documentation:"Positions the up-down control next to the left edge of the buddy window. The buddy window is moved to the right and its width is decreased to accommodate the width of the up-down control."},{label:"$UDS_ALIGNRIGHT",documentation:"Positions the up-down control next to the right edge of the buddy window. The width of the buddy window is decreased to accommodate the width of the up-down control."},{label:"$UDS_ARROWKEYS",documentation:"Causes the up-down control to process the UP ARROW and DOWN ARROW keys on the keyboard."},{label:"$UDS_HORZ",documentation:"Causes the up-down control's arrows to point left and right instead of up and down."},{label:"$UDS_NOTHOUSANDS",documentation:"Prevents insertion of a thousands separator between every three decimal positions."},{label:"$UDS_WRAP",documentation:"Causes the position to wrap if it is incremented or decremented beyond the end or beginning of the range."}],t.CompletionItemKind.Constant,"Up-down Style Constant","UpDownConstants.au3"),mn=(0,Ce.fillCompletions)([{label:"$WS_BORDER",documentation:"Creates a window that has a thin-line border.",detail:"WindowsConstants Control Style"},{label:"$WS_POPUP",documentation:"Creates a pop-up window. This style cannot be used with the WS_CHILD style.",detail:"WindowsConstants Control Style"},{label:"$WS_CAPTION",documentation:"Creates a window that has a title bar (includes the WS_BORDER style)",detail:"WindowsConstants Control Style"},{label:"$WS_CLIPCHILDREN",documentation:"Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window.",detail:"WindowsConstants Control Style"},{label:"$WS_CLIPSIBLINGS",documentation:"Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated. If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window.",detail:"WindowsConstants Control Style"},{label:"$WS_DISABLED",documentation:"Creates a window that is initially disabled.",detail:"WindowsConstants Control Style"},{label:"$WS_DLGFRAME",documentation:"Creates a window that has a border of a style typically used with dialog boxes.",detail:"WindowsConstants Control Style"},{label:"$WS_HSCROLL",documentation:"Creates a window that has a horizontal scroll bar.",detail:"WindowsConstants Control Style"},{label:"$WS_MAXIMIZE",documentation:"Creates a window that is initially maximized.",detail:"WindowsConstants Control Style"},{label:"$WS_MAXIMIZEBOX",documentation:"Creates a window that has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.",detail:"WindowsConstants Control Style"},{label:"$WS_MINIMIZE",documentation:"Creates a window that is initially minimized.",detail:"WindowsConstants Control Style"},{label:"$WS_MINIMIZEBOX",documentation:"Creates a window that has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified.",detail:"WindowsConstants Control Style"},{label:"$WS_OVERLAPPED",documentation:"Creates an overlapped window. An overlapped window has a title bar and a border. Same as the WS_TILED style",detail:"WindowsConstants Control Style"},{label:"$WS_OVERLAPPEDWINDOW",documentation:"Creates an overlapped window with the WS_OVERLAPPED, WS_CAPTION, WS_SYSMENU, WS_THICKFRAME, WS_MINIMIZEBOX, and WS_MAXIMIZEBOX styles. Same as the WS_TILEDWINDOW style.",detail:"WindowsConstants Control Style"},{label:"$WS_POPUPWINDOW",documentation:"Creates a pop-up window with WS_BORDER, WS_POPUP, and WS_SYSMENU styles. The WS_CAPTION and WS_POPUPWINDOW styles must be combined to make the window menu visible.",detail:"WindowsConstants Control Style"},{label:"$WS_SIZEBOX",documentation:"Creates a window that has a sizing border. Same as the WS_THICKFRAME style.",detail:"WindowsConstants Control Style"},{label:"$WS_SYSMENU",documentation:"Creates a window that has a window menu on its title bar. The WS_CAPTION style must also be specified.",detail:"WindowsConstants Control Style"},{label:"$WS_THICKFRAME",documentation:"Creates a window that has a sizing border. Same as the WS_SIZEBOX style",detail:"WindowsConstants Control Style"},{label:"$WS_VSCROLL",documentation:"Creates a window that has a vertical scroll bar.",detail:"WindowsConstants Control Style"},{label:"$WS_VISIBLE",documentation:"Creates a window that is initially visible.",detail:"WindowsConstants Control Style"},{label:"$WS_CHILD",documentation:"Creates a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style.",detail:"WindowsConstants Control Style"},{label:"$WS_GROUP",documentation:"Specifies the first control of a group of controls. The group consists of this first control and all controls defined after it, up to the next control with the WS_GROUP style.",detail:"WindowsConstants Control Style"},{label:"$WS_TABSTOP",documentation:"Turns the control into a tab stop, which enables the user to select the control by tabbing through the controls in a dialog box.",detail:"WindowsConstants Control Style"},{label:"$DS_MODALFRAME",documentation:"Creates a dialog box with a modal dialog-box frame that can be combined with a title bar and window menu by specifying the WS_CAPTION and WS_SYSMENU styles.",detail:"WindowsConstants Control Style"},{label:"$DS_SETFOREGROUND",documentation:"This style is useful for modal dialog boxes that require immediate attention from the user regardless of whether the owner window is the foreground window.",detail:"WindowsConstants Control Style"},{label:"$DS_CONTEXTHELP",documentation:"Includes a question mark in the title bar of the dialog box. Cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles. Same as WS_EX_CONTEXTHELP extended style.",detail:"WindowsConstants Control Style"},{label:"$WS_EX_ACCEPTFILES",documentation:"Allow an edit or input control within the created GUI window to receive filenames via drag and drop. The control must have also the $GUI_DROPACCEPTED state set by GUICtrlSetState. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_APPWINDOW",documentation:"Forces a top-level window onto the taskbar when the window is visible. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_COMPOSITED",documentation:"Paints all descendants of a window in bottom-to-top painting order using double-buffering. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_CLIENTEDGE",documentation:"Specifies that a window has a border with a sunken edge. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_CONTEXTHELP",documentation:"Includes a question mark in the title bar of the window. Cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_DLGMODALFRAME",documentation:"Creates a window that has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_LAYOUTRTL",documentation:"Specifies that a window has a layout from right to left (RTL) instead of the standard left to right (LTR). ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_MDICHILD",documentation:"Create a child window that will be moved with its parent.(simulation of a MDI window maximize/minimize are not simulated). ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_OVERLAPPEDWINDOW",documentation:"Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_STATICEDGE",documentation:"Creates a window with a three-dimensional border style intended to be used for items that do not accept user input. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_TOPMOST",documentation:"Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_TRANSPARENT",documentation:"The window appears transparent because the bits of underlying sibling windows have already been painted. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_TOOLWINDOW",documentation:"Creates a tool window; that is, a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog box that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by typing ALT+SPACE. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_WINDOWEDGE",documentation:"Specifies that a window has a border with a raised edge. ",detail:"WindowsConstant Extended Control Style"},{label:"$WS_EX_LAYERED",documentation:"Creates a layered window. Note that this cannot be used for child windows. ",detail:"WindowsConstant Extended Control Style"},{label:"$GUI_WS_EX_PARENTDRAG",documentation:"Allow the label or pic control to be used as the title bar to drag the whole the parent window. (Needs #include <GUIConstantsEx.au3>) ",detail:"WindowsConstant Extended Control Style"},{label:"$WM_ACTIVATE",documentation:"= 0x0006. Sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately.",detail:"Windows Mesage Code"},{label:"$WM_ACTIVATEAPP",documentation:"= 0x001C. Sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.",detail:"Windows Mesage Code"},{label:"$WM_AFXFIRST",documentation:"= 0x0360",detail:"Windows Mesage Code"},{label:"$WM_AFXLAST",documentation:"= 0x037F",detail:"Windows Mesage Code"},{label:"$WM_APP",documentation:"= 0x8000. Used to define private messages, usually of the form WM_APP+x, where x is an integer value.",detail:"Windows Mesage Code"},{label:"$WM_APPCOMMAND",documentation:"= 0x0319. Notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.",detail:"Windows Mesage Code"},{label:"$WM_ASKCBFORMATNAME",documentation:"= 0x030C. Sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.\n\nA window receives this message through its WindowProc function.",detail:"Windows Mesage Code"},{label:"$WM_CANCELJOURNAL",documentation:"= 0x004B. Posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle.",detail:"Windows Mesage Code"},{label:"$WM_CANCELMODE",documentation:"= 0x001F. Sent to cancel certain modes, such as mouse capture.",detail:"Windows Mesage Code"},{label:"$WM_CAPTURECHANGED",documentation:"= 0x0215.",detail:"Windows Message Code"},{label:"$WM_CHANGECBCHAIN",documentation:"= 0x030D.",detail:"Windows Message Code"},{label:"$WM_CHANGEUISTATE",documentation:"= 0x0127.",detail:"Windows Message Code"},{label:"$WM_CHAR",documentation:"= 0x0102.",detail:"Windows Message Code"},{label:"$WM_CHARTOITEM",documentation:"= 0x002F.",detail:"Windows Message Code"},{label:"$WM_CHILDACTIVATE",documentation:"= 0x0022.",detail:"Windows Message Code"},{label:"$WM_CLEAR",documentation:"= 0x0303.",detail:"Windows Message Code"},{label:"$WM_CLOSE",documentation:"= 0x0010.",detail:"Windows Message Code"},{label:"$WM_COMMAND",documentation:"= 0x0111.",detail:"Windows Message Code"},{label:"$WM_COMMNOTIFY",documentation:"= 0x0044.",detail:"Windows Message Code"},{label:"$WM_COMPACTING",documentation:"= 0x0041.",detail:"Windows Message Code"},{label:"$WM_COMPAREITEM",documentation:"= 0x0039.",detail:"Windows Message Code"},{label:"$WM_CONTEXTMENU",documentation:"= 0x007B.",detail:"Windows Message Code"},{label:"$WM_COPY",documentation:"= 0x0301.",detail:"Windows Message Code"},{label:"$WM_COPYDATA",documentation:"= 0x004A.",detail:"Windows Message Code"},{label:"$WM_CREATE",documentation:"= 0x0001.",detail:"Windows Message Code"},{label:"$WM_CTLCOLORBTN",documentation:"= 0x0135.",detail:"Windows Message Code"},{label:"$WM_CTLCOLORDLG",documentation:"= 0x0136.",detail:"Windows Message Code"},{label:"$WM_CTLCOLOREDIT",documentation:"= 0x0133.",detail:"Windows Message Code"},{label:"$WM_CTLCOLORLISTBOX",documentation:"= 0x0134.",detail:"Windows Message Code"},{label:"$WM_CTLCOLORMSGBOX",documentation:"= 0x0132.",detail:"Windows Message Code"},{label:"$WM_CTLCOLORSCROLLBAR",documentation:"= 0x0137.",detail:"Windows Message Code"},{label:"$WM_CTLCOLORSTATIC",documentation:"= 0x0138.",detail:"Windows Message Code"},{label:"$WM_CUT",documentation:"= 0x0300.",detail:"Windows Message Code"},{label:"$WM_DEADCHAR",documentation:"= 0x0103.",detail:"Windows Message Code"},{label:"$WM_DELETEITEM",documentation:"= 0x002D.",detail:"Windows Message Code"},{label:"$WM_DESTROY",documentation:"= 0x0002.",detail:"Windows Message Code"},{label:"$WM_DESTROYCLIPBOARD",documentation:"= 0x0307.",detail:"Windows Message Code"},{label:"$WM_DEVICECHANGE",documentation:"= 0x0219.",detail:"Windows Message Code"},{label:"$WM_DEVMODECHANGE",documentation:"= 0x001B.",detail:"Windows Message Code"},{label:"$WM_DISPLAYCHANGE",documentation:"= 0x007E.",detail:"Windows Message Code"},{label:"$WM_DRAWCLIPBOARD",documentation:"= 0x0308.",detail:"Windows Message Code"},{label:"$WM_DRAWITEM",documentation:"= 0x002B.",detail:"Windows Message Code"},{label:"$WM_DROPFILES",documentation:"= 0x0233.",detail:"Windows Message Code"},{label:"$WM_ENABLE",documentation:"= 0x000A.",detail:"Windows Message Code"},{label:"$WM_ENDSESSION",documentation:"= 0x0016.",detail:"Windows Message Code"},{label:"$WM_ENTERIDLE",documentation:"= 0x0121.",detail:"Windows Message Code"},{label:"$WM_ENTERMENULOOP",documentation:"= 0x0211.",detail:"Windows Message Code"},{label:"$WM_ENTERSIZEMOVE",documentation:"= 0x0231.",detail:"Windows Message Code"},{label:"$WM_ERASEBKGND",documentation:"= 0x0014.",detail:"Windows Message Code"},{label:"$WM_EXITMENULOOP",documentation:"= 0x0212.",detail:"Windows Message Code"},{label:"$WM_EXITSIZEMOVE",documentation:"= 0x0232.",detail:"Windows Message Code"},{label:"$WM_FONTCHANGE",documentation:"= 0x001D.",detail:"Windows Message Code"},{label:"$WM_GETDLGCODE",documentation:"= 0x0087.",detail:"Windows Message Code"},{label:"$WM_GETFONT",documentation:"= 0x0031.",detail:"Windows Message Code"},{label:"$WM_GETHOTKEY",documentation:"= 0x0033.",detail:"Windows Message Code"},{label:"$WM_GETICON",documentation:"= 0x007F.",detail:"Windows Message Code"},{label:"$WM_GETMINMAXINFO",documentation:"= 0x0024.",detail:"Windows Message Code"},{label:"$WM_GETOBJECT",documentation:"= 0x003D.",detail:"Windows Message Code"},{label:"$WM_GETTEXT",documentation:"= 0x000D.",detail:"Windows Message Code"},{label:"$WM_GETTEXTLENGTH",documentation:"= 0x000E.",detail:"Windows Message Code"},{label:"$WM_HANDHELDFIRST",documentation:"= 0x0358.",detail:"Windows Message Code"},{label:"$WM_HANDHELDLAST",documentation:"= 0x035F.",detail:"Windows Message Code"},{label:"$WM_HELP",documentation:"= 0x0053.",detail:"Windows Message Code"},{label:"$WM_HOTKEY",documentation:"= 0x0312.",detail:"Windows Message Code"},{label:"$WM_HSCROLL",documentation:"= 0x0114.",detail:"Windows Message Code"},{label:"$WM_HSCROLLCLIPBOARD",documentation:"= 0x030E.",detail:"Windows Message Code"},{label:"$WM_ICONERASEBKGND",documentation:"= 0x0027.",detail:"Windows Message Code"},{label:"$WM_IME_CHAR",documentation:"= 0x0286.",detail:"Windows Message Code"},{label:"$WM_IME_COMPOSITION",documentation:"= 0x010F.",detail:"Windows Message Code"},{label:"$WM_IME_COMPOSITIONFULL",documentation:"= 0x0284.",detail:"Windows Message Code"},{label:"$WM_IME_CONTROL",documentation:"= 0x0283.",detail:"Windows Message Code"},{label:"$WM_IME_ENDCOMPOSITION",documentation:"= 0x010E.",detail:"Windows Message Code"},{label:"$WM_IME_KEYDOWN",documentation:"= 0x0290.",detail:"Windows Message Code"},{label:"$WM_IME_KEYLAST",documentation:"= 0x010F.",detail:"Windows Message Code"},{label:"$WM_IME_KEYUP",documentation:"= 0x0291.",detail:"Windows Message Code"},{label:"$WM_IME_NOTIFY",documentation:"= 0x0282.",detail:"Windows Message Code"},{label:"$WM_IME_REQUEST",documentation:"= 0x0288.",detail:"Windows Message Code"},{label:"$WM_IME_SELECT",documentation:"= 0x0285.",detail:"Windows Message Code"},{label:"$WM_IME_SETCONTEXT",documentation:"= 0x0281.",detail:"Windows Message Code"},{label:"$WM_IME_STARTCOMPOSITION",documentation:"= 0x010D.",detail:"Windows Message Code"},{label:"$WM_INITDIALOG",documentation:"= 0x0110.",detail:"Windows Message Code"},{label:"$WM_INITMENU",documentation:"= 0x0116.",detail:"Windows Message Code"},{label:"$WM_INITMENUPOPUP",documentation:"= 0x0117.",detail:"Windows Message Code"},{label:"$WM_INPUT",documentation:"= 0x00FF.",detail:"Windows Message Code"},{label:"$WM_INPUTLANGCHANGE",documentation:"= 0x0051.",detail:"Windows Message Code"},{label:"$WM_INPUTLANGCHANGEREQUEST",documentation:"= 0x0050.",detail:"Windows Message Code"},{label:"$WM_KEYDOWN",documentation:"= 0x0100.",detail:"Windows Message Code"},{label:"$WM_KEYFIRST",documentation:"= 0x0100.",detail:"Windows Message Code"},{label:"$WM_KEYLAST",documentation:"= 0x0109.",detail:"Windows Message Code"},{label:"$WM_KEYUP",documentation:"= 0x0101.",detail:"Windows Message Code"},{label:"$WM_KILLFOCUS",documentation:"= 0x0008.",detail:"Windows Message Code"},{label:"$WM_LBUTTONDBLCLK",documentation:"= 0x0203.",detail:"Windows Message Code"},{label:"$WM_LBUTTONDOWN",documentation:"= 0x0201.",detail:"Windows Message Code"},{label:"$WM_LBUTTONUP",documentation:"= 0x0202.",detail:"Windows Message Code"},{label:"$WM_MBUTTONDBLCLK",documentation:"= 0x0209.",detail:"Windows Message Code"},{label:"$WM_MBUTTONDOWN",documentation:"= 0x0207.",detail:"Windows Message Code"},{label:"$WM_MBUTTONUP",documentation:"= 0x0208.",detail:"Windows Message Code"},{label:"$WM_MDIACTIVATE",documentation:"= 0x0222.",detail:"Windows Message Code"},{label:"$WM_MDICASCADE",documentation:"= 0x0227.",detail:"Windows Message Code"},{label:"$WM_MDICREATE",documentation:"= 0x0220.",detail:"Windows Message Code"},{label:"$WM_MDIDESTROY",documentation:"= 0x0221.",detail:"Windows Message Code"},{label:"$WM_MDIGETACTIVE",documentation:"= 0x0229.",detail:"Windows Message Code"},{label:"$WM_MDIICONARRANGE",documentation:"= 0x0228.",detail:"Windows Message Code"},{label:"$WM_MDIMAXIMIZE",documentation:"= 0x0225.",detail:"Windows Message Code"},{label:"$WM_MDINEXT",documentation:"= 0x0224.",detail:"Windows Message Code"},{label:"$WM_MDIREFRESHMENU",documentation:"= 0x0234.",detail:"Windows Message Code"},{label:"$WM_MDIRESTORE",documentation:"= 0x0223.",detail:"Windows Message Code"},{label:"$WM_MDISETMENU",documentation:"= 0x0230.",detail:"Windows Message Code"},{label:"$WM_MDITILE",documentation:"= 0x0226.",detail:"Windows Message Code"},{label:"$WM_MEASUREITEM",documentation:"= 0x002C.",detail:"Windows Message Code"},{label:"$WM_MENUCHAR",documentation:"= 0x0120.",detail:"Windows Message Code"},{label:"$WM_MENUCOMMAND",documentation:"= 0x0126.",detail:"Windows Message Code"},{label:"$WM_MENUDRAG",documentation:"= 0x0123.",detail:"Windows Message Code"},{label:"$WM_MENUGETOBJECT",documentation:"= 0x0124.",detail:"Windows Message Code"},{label:"$WM_MENURBUTTONUP",documentation:"= 0x0122.",detail:"Windows Message Code"},{label:"$WM_MENUSELECT",documentation:"= 0x011F.",detail:"Windows Message Code"},{label:"$WM_MOUSEACTIVATE",documentation:"= 0x0021.",detail:"Windows Message Code"},{label:"$WM_MOUSEFIRST",documentation:"= 0x0200.",detail:"Windows Message Code"},{label:"$WM_MOUSEHOVER",documentation:"= 0x02A1.",detail:"Windows Message Code"},{label:"$WM_MOUSELEAVE",documentation:"= 0x02A3.",detail:"Windows Message Code"},{label:"$WM_MOUSEMOVE",documentation:"= 0x0200.",detail:"Windows Message Code"},{label:"$WM_MOUSEWHEEL",documentation:"= 0x020A.",detail:"Windows Message Code"},{label:"$WM_MOVE",documentation:"= 0x0003.",detail:"Windows Message Code"},{label:"$WM_MOVING",documentation:"= 0x0216.",detail:"Windows Message Code"},{label:"$WM_NCACTIVATE",documentation:"= 0x0086.",detail:"Windows Message Code"},{label:"$WM_NCCALCSIZE",documentation:"= 0x0083.",detail:"Windows Message Code"},{label:"$WM_NCCREATE",documentation:"= 0x0081.",detail:"Windows Message Code"},{label:"$WM_NCDESTROY",documentation:"= 0x0082.",detail:"Windows Message Code"},{label:"$WM_NCHITTEST",documentation:"= 0x0084.",detail:"Windows Message Code"},{label:"$WM_NCLBUTTONDBLCLK",documentation:"= 0x00A3.",detail:"Windows Message Code"},{label:"$WM_NCLBUTTONDOWN",documentation:"= 0x00A1.",detail:"Windows Message Code"},{label:"$WM_NCLBUTTONUP",documentation:"= 0x00A2.",detail:"Windows Message Code"},{label:"$WM_NCMBUTTONDBLCLK",documentation:"= 0x00A9.",detail:"Windows Message Code"},{label:"$WM_NCMBUTTONDOWN",documentation:"= 0x00A7.",detail:"Windows Message Code"},{label:"$WM_NCMBUTTONUP",documentation:"= 0x00A8.",detail:"Windows Message Code"},{label:"$WM_NCMOUSEHOVER",documentation:"= 0x02A0.",detail:"Windows Message Code"},{label:"$WM_NCMOUSELEAVE",documentation:"= 0x02A2.",detail:"Windows Message Code"},{label:"$WM_NCMOUSEMOVE",documentation:"= 0x00A0.",detail:"Windows Message Code"},{label:"$WM_NCPAINT",documentation:"= 0x0085.",detail:"Windows Message Code"},{label:"$WM_NCRBUTTONDBLCLK",documentation:"= 0x00A6.",detail:"Windows Message Code"},{label:"$WM_NCRBUTTONDOWN",documentation:"= 0x00A4.",detail:"Windows Message Code"},{label:"$WM_NCRBUTTONUP",documentation:"= 0x00A5.",detail:"Windows Message Code"},{label:"$WM_NCXBUTTONDBLCLK",documentation:"= 0x00AD.",detail:"Windows Message Code"},{label:"$WM_NCXBUTTONDOWN",documentation:"= 0x00AB.",detail:"Windows Message Code"},{label:"$WM_NCXBUTTONUP",documentation:"= 0x00AC.",detail:"Windows Message Code"},{label:"$WM_NEXTDLGCTL",documentation:"= 0x0028.",detail:"Windows Message Code"},{label:"$WM_NEXTMENU",documentation:"= 0x0213.",detail:"Windows Message Code"},{label:"$WM_NOTIFY",documentation:"= 0x004E.",detail:"Windows Message Code"},{label:"$WM_NOTIFYFORMAT",documentation:"= 0x0055.",detail:"Windows Message Code"},{label:"$WM_NULL",documentation:"= 0x0000.",detail:"Windows Message Code"},{label:"$WM_PAINT",documentation:"= 0x000F.",detail:"Windows Message Code"},{label:"$WM_PAINTCLIPBOARD",documentation:"= 0x0309.",detail:"Windows Message Code"},{label:"$WM_PAINTICON",documentation:"= 0x0026.",detail:"Windows Message Code"},{label:"$WM_PALETTECHANGED",documentation:"= 0x0311.",detail:"Windows Message Code"},{label:"$WM_PALETTEISCHANGING",documentation:"= 0x0310.",detail:"Windows Message Code"},{label:"$WM_PARENTNOTIFY",documentation:"= 0x0210.",detail:"Windows Message Code"},{label:"$WM_PASTE",documentation:"= 0x0302.",detail:"Windows Message Code"},{label:"$WM_PENWINFIRST",documentation:"= 0x0380.",detail:"Windows Message Code"},{label:"$WM_PENWINLAST",documentation:"= 0x038F.",detail:"Windows Message Code"},{label:"$WM_POWER",documentation:"= 0x0048.",detail:"Windows Message Code"},{label:"$WM_POWERBROADCAST",documentation:"= 0x0218.",detail:"Windows Message Code"},{label:"$WM_PRINT",documentation:"= 0x0317.",detail:"Windows Message Code"},{label:"$WM_PRINTCLIENT",documentation:"= 0x0318.",detail:"Windows Message Code"},{label:"$WM_QUERYDRAGICON",documentation:"= 0x0037.",detail:"Windows Message Code"},{label:"$WM_QUERYENDSESSION",documentation:"= 0x0011.",detail:"Windows Message Code"},{label:"$WM_QUERYNEWPALETTE",documentation:"= 0x030F.",detail:"Windows Message Code"},{label:"$WM_QUERYOPEN",documentation:"= 0x0013.",detail:"Windows Message Code"},{label:"$WM_QUERYUISTATE",documentation:"= 0x0129.",detail:"Windows Message Code"},{label:"$WM_QUEUESYNC",documentation:"= 0x0023.",detail:"Windows Message Code"},{label:"$WM_QUIT",documentation:"= 0x0012.",detail:"Windows Message Code"},{label:"$WM_RBUTTONDBLCLK",documentation:"= 0x0206.",detail:"Windows Message Code"},{label:"$WM_RBUTTONDOWN",documentation:"= 0x0204.",detail:"Windows Message Code"},{label:"$WM_RBUTTONUP",documentation:"= 0x0205.",detail:"Windows Message Code"},{label:"$WM_RENDERALLFORMATS",documentation:"= 0x0306.",detail:"Windows Message Code"},{label:"$WM_RENDERFORMAT",documentation:"= 0x0305.",detail:"Windows Message Code"},{label:"$WM_SETCURSOR",documentation:"= 0x0020.",detail:"Windows Message Code"},{label:"$WM_SETFOCUS",documentation:"= 0x0007.",detail:"Windows Message Code"},{label:"$WM_SETFONT",documentation:"= 0x0030.",detail:"Windows Message Code"},{label:"$WM_SETHOTKEY",documentation:"= 0x0032.",detail:"Windows Message Code"},{label:"$WM_SETICON",documentation:"= 0x0080.",detail:"Windows Message Code"},{label:"$WM_SETREDRAW",documentation:"= 0x000B.",detail:"Windows Message Code"},{label:"$WM_SETTEXT",documentation:"= 0x000C.",detail:"Windows Message Code"},{label:"$WM_SETTINGCHANGE",documentation:"= 0x001A.",detail:"Windows Message Code"},{label:"$WM_SHOWWINDOW",documentation:"= 0x0018.",detail:"Windows Message Code"},{label:"$WM_SIZE",documentation:"= 0x0005.",detail:"Windows Message Code"},{label:"$WM_SIZECLIPBOARD",documentation:"= 0x030B.",detail:"Windows Message Code"},{label:"$WM_SIZING",documentation:"= 0x0214.",detail:"Windows Message Code"},{label:"$WM_SPOOLERSTATUS",documentation:"= 0x002A.",detail:"Windows Message Code"},{label:"$WM_STYLECHANGED",documentation:"= 0x007D.",detail:"Windows Message Code"},{label:"$WM_STYLECHANGING",documentation:"= 0x007C.",detail:"Windows Message Code"},{label:"$WM_SYNCPAINT",documentation:"= 0x0088.",detail:"Windows Message Code"},{label:"$WM_SYSCHAR",documentation:"= 0x0106.",detail:"Windows Message Code"},{label:"$WM_SYSCOLORCHANGE",documentation:"= 0x0015.",detail:"Windows Message Code"},{label:"$WM_SYSCOMMAND",documentation:"= 0x0112.",detail:"Windows Message Code"},{label:"$WM_SYSDEADCHAR",documentation:"= 0x0107.",detail:"Windows Message Code"},{label:"$WM_SYSKEYDOWN",documentation:"= 0x0104.",detail:"Windows Message Code"},{label:"$WM_SYSKEYUP",documentation:"= 0x0105.",detail:"Windows Message Code"},{label:"$WM_TABLET_FIRST",documentation:"= 0x02C0.",detail:"Windows Message Code"},{label:"$WM_TABLET_LAST",documentation:"= 0x02DF.",detail:"Windows Message Code"},{label:"$WM_TCARD",documentation:"= 0x0052.",detail:"Windows Message Code"},{label:"$WM_THEMECHANGED",documentation:"= 0x031A.",detail:"Windows Message Code"},{label:"$WM_TIMECHANGE",documentation:"= 0x001E.",detail:"Windows Message Code"},{label:"$WM_TIMER",documentation:"= 0x0113.",detail:"Windows Message Code"},{label:"$WM_UNDO",documentation:"= 0x0304.",detail:"Windows Message Code"},{label:"$WM_UNICHAR",documentation:"= 0x0109.",detail:"Windows Message Code"},{label:"$WM_UNINITMENUPOPUP",documentation:"= 0x0125.",detail:"Windows Message Code"},{label:"$WM_UPDATEUISTATE",documentation:"= 0x0128.",detail:"Windows Message Code"},{label:"$WM_USER",documentation:"= 0x0400.",detail:"Windows Message Code"},{label:"$WM_USERCHANGED",documentation:"= 0x0054.",detail:"Windows Message Code"},{label:"$WM_VKEYTOITEM",documentation:"= 0x002E.",detail:"Windows Message Code"},{label:"$WM_VSCROLL",documentation:"= 0x0115.",detail:"Windows Message Code"},{label:"$WM_VSCROLLCLIPBOARD",documentation:"= 0x030A.",detail:"Windows Message Code"},{label:"$WM_WINDOWPOSCHANGED",documentation:"= 0x0047.",detail:"Windows Message Code"},{label:"$WM_WINDOWPOSCHANGING",documentation:"= 0x0046.",detail:"Windows Message Code"},{label:"$WM_WININICHANGE",documentation:"= 0x001A.",detail:"Windows Message Code"},{label:"$WM_WTSSESSION_CHANGE",documentation:"= 0x02B1.",detail:"Windows Message Code"},{label:"$WM_XBUTTONDBLCLK",documentation:"= 0x020D.",detail:"Windows Message Code"},{label:"$WM_XBUTTONDOWN",documentation:"= 0x020B.",detail:"Windows Message Code"},{label:"$WM_XBUTTONUP",documentation:"= 0x020C.",detail:"Windows Message Code"}],t.CompletionItemKind.Constant,"","WindowsConstants.au3");var pn=[],bn=[{label:"$WdColumnBreak",documentation:"".concat(Ce.descriptionHeader,"|Column break at the insertion point.|8")},{label:"$WdLineBreak",documentation:"".concat(Ce.descriptionHeader,"|Line break.|6")},{label:"$WdLineBreakClearLeft",documentation:"".concat(Ce.descriptionHeader,"|Line break.|9")},{label:"$WdLineBreakClearRight",documentation:"".concat(Ce.descriptionHeader,"|Line break.|10")},{label:"$WdPageBreak",documentation:"".concat(Ce.descriptionHeader,"|Page break at the insertion point.|7")},{label:"$WdSectionBreakContinuous",documentation:"".concat(Ce.descriptionHeader,"|New section without a corresponding page break.|3")},{label:"$WdSectionBreakEvenPage",documentation:"".concat(Ce.descriptionHeader,"|Section break with the next section beginning on the next even-numbered page. If the section break falls on an even-numbered page, Word leaves the next odd-numbered page blank.|4")},{label:"$WdSectionBreakNextPage",documentation:"".concat(Ce.descriptionHeader,"|Section break on next page.|2")},{label:"$WdSectionBreakOddPage",documentation:"".concat(Ce.descriptionHeader,"|Section break with the next section beginning on the next odd-numbered page. If the section break falls on an odd-numbered page, Word leaves the next even-numbered page blank.|5")},{label:"$WdTextWrappingBreak",documentation:"".concat(Ce.descriptionHeader,"|Ends the current line and forces the text to continue below a picture, table, or other item. The text continues on the next blank line that does not contain a table aligned with the left or right margin.|11")}];bn=(0,Ce.setDetail)(bn,"WdBreakType Enumeration","Specifies type of break.");var _n=[{label:"$msoPropertyTypeBoolean",documentation:"".concat(Ce.descriptionHeader,"|Boolean value.|2")},{label:"$msoPropertyTypeDate",documentation:"".concat(Ce.descriptionHeader,"|Date value.|3")},{label:"$msoPropertyTypeFloat",documentation:"".concat(Ce.descriptionHeader,"|Floating point value.|5")},{label:"$msoPropertyTypeNumber",documentation:"".concat(Ce.descriptionHeader,"|Integer value.|1")},{label:"$msoPropertyTypeString",documentation:"".concat(Ce.descriptionHeader,"|String value.|4")}];_n=(0,Ce.setDetail)(_n,"MsoDocProperties Enumeration","Specifies the data type for a document property.");var fn=[{label:"$WdCollapseEnd",documentation:"".concat(Ce.descriptionHeader,"|Collapse the range to the ending point.|0")},{label:"$WdCollapseStart",documentation:"".concat(Ce.descriptionHeader,"|Collapse the range to the starting point.|1")}];fn=(0,Ce.setDetail)(fn,"WdCollapseDirection Enumeration","Specifies the direction in which to collapse a range or selection.");var In=[{label:"$WdExportFormatPDF",documentation:"".concat(Ce.descriptionHeader,"|Export document into PDF format.|17")},{label:"$WdExportFormatXPS",documentation:"".concat(Ce.descriptionHeader,"|Export document into XML Paper Specification (XPS) format.|18")}];In=(0,Ce.setDetail)(In,"WdExportFormat Enumeration","Specifies format to use for exporting a document.");var $n=[{label:"$WdExportAllDocument",documentation:"".concat(Ce.descriptionHeader,"|Exports the entire document.|0")},{label:"$WdExportCurrentPage",documentation:"".concat(Ce.descriptionHeader,"|Exports the current page.|2")},{label:"$WdExportFromTo",documentation:"".concat(Ce.descriptionHeader,"|Exports the contents of a range using the starting and ending positions.|3")},{label:"$WdExportSelection",documentation:"".concat(Ce.descriptionHeader,"|Exports the contents of the current selection.|1")}];$n=(0,Ce.setDetail)($n,"WdExportRange Enumeration","Specifies how much of the document to export.");var gn=[{label:"$WdFindAsk",documentation:"".concat(Ce.descriptionHeader," |After searching the selection or range, Microsoft Word displays a message asking whether to search the remainder of the document|2")},{label:"$WdFindContinue",documentation:"".concat(Ce.descriptionHeader,"|The find operation continues if the beginning or end of the search range is reached|1")},{label:"$WdFindStop",documentation:"".concat(Ce.descriptionHeader,"|The find operation ends if the beginning or end of the search range is reached |0 |")}];gn=(0,Ce.setDetail)(gn,"WdFindWrap Enumeration","Specifies wrap behavior if a selection or range is specified for a find operation and the search text isn't found in the selection or range.");var Cn=[{label:"$WdNewBlankDocument",documentation:"".concat(Ce.descriptionHeader,"|Blank document.|0")},{label:"$WdNewEmailMessage",documentation:"".concat(Ce.descriptionHeader,"|E-mail message.|2")},{label:"$WdNewFrameset",documentation:"".concat(Ce.descriptionHeader,"|Frameset.|3")},{label:"$WdNewWebPage",documentation:"".concat(Ce.descriptionHeader,"|Web page.|1")},{label:"$WdNewXMLDocument",documentation:"".concat(Ce.descriptionHeader,"|XML document.|4")}];Cn=(0,Ce.setDetail)(Cn,"WdNewDocumentType Enumeration","Specifies the type of new document to create.");var Sn=[{label:"$WdOpenFormatAllWord",documentation:"".concat(Ce.descriptionHeader,"|A Microsoft Office Word format that is backward compatible with earlier versions of Word.|6")},{label:"$WdOpenFormatAuto",documentation:"".concat(Ce.descriptionHeader,"|The existing format.|0")},{label:"$WdOpenFormatDocument",documentation:"".concat(Ce.descriptionHeader,"|Word format.|1")},{label:"$WdOpenFormatEncodedText",documentation:"".concat(Ce.descriptionHeader,"|Encoded text format.|5")},{label:"$WdOpenFormatRTF",documentation:"".concat(Ce.descriptionHeader,"|Rich text format (RTF).|3")},{label:"$WdOpenFormatTemplate",documentation:"".concat(Ce.descriptionHeader,"|As a Word template.|2")},{label:"$WdOpenFormatText",documentation:"".concat(Ce.descriptionHeader,"|Unencoded text format.|4")},{label:"$WdOpenFormatUnicodeText",documentation:"".concat(Ce.descriptionHeader,"|Unicode text format.|5")},{label:"$WdOpenFormatWebPages",documentation:"".concat(Ce.descriptionHeader,"|HTML format.|7")},{label:"$WdOpenFormatXML",documentation:"".concat(Ce.descriptionHeader,"|XML format.|8")},{label:"$WdOpenFormatAllWordTemplates",documentation:"".concat(Ce.descriptionHeader,"|Word template format.|13")},{label:"$WdOpenFormatDocument97",documentation:"".concat(Ce.descriptionHeader,"|Microsoft Word 97 document format.|1")},{label:"$WdOpenFormatTemplate97",documentation:"".concat(Ce.descriptionHeader,"|Word 97 template format.|1")},{label:"$WdOpenFormatXMLDocument",documentation:"".concat(Ce.descriptionHeader,"|XML document format.|9")},{label:"$WdOpenFormatXMLDocumentMacroEnabled",documentation:"".concat(Ce.descriptionHeader,"|XML document format with macros enabled.|10")},{label:"$WdOpenFormatXMLTemplate",documentation:"".concat(Ce.descriptionHeader,"|XML template format.|11")},{label:"$WdOpenFormatXMLTemplateMacroEnabled",documentation:"".concat(Ce.descriptionHeader,"|XML template format with macros enabled.|12")}];Sn=(0,Ce.setDetail)(Sn,"WdOpenFormat Enumeration","Specifies the format to use when opening a document.");var Tn=[{label:"$WdOrientLandscape",documentation:"".concat(Ce.descriptionHeader,"|Landscape orientation|1")},{label:"$WdOrientPortrait",documentation:"".concat(Ce.descriptionHeader,"|Portrait orientation.|0")}];Tn=(0,Ce.setDetail)(Tn,"WdOrientation Enumeration","Specifies a page layout orientation.");var Gn=[{label:"$WdOriginalDocumentFormat",documentation:"".concat(Ce.descriptionHeader,"|Original document format.|1")},{label:"$WdPromptUser",documentation:"".concat(Ce.descriptionHeader,"|Prompt user to select a document format.|2")},{label:"$WdWordDocument",documentation:"".concat(Ce.descriptionHeader,"|Microsoft Word document format.|0")}];Gn=(0,Ce.setDetail)(Gn,"WdOriginalFormat Enumeration","Specifies the document format. This enumeration is commonly used when saving a document.");var Pn=[{label:"$WdPrintAutoTextEntries",documentation:"".concat(Ce.descriptionHeader,"|Autotext entries in the current document.|4 ")},{label:"$WdPrintComments",documentation:"".concat(Ce.descriptionHeader,"|Comments in the current document.|2 ")},{label:"$WdPrintDocumentContent",documentation:"".concat(Ce.descriptionHeader,"|Current document content.|0 ")},{label:"$WdPrintDocumentWithMarkup",documentation:"".concat(Ce.descriptionHeader,"|Current document content including markup.|7 ")},{label:"$WdPrintEnvelope",documentation:"".concat(Ce.descriptionHeader,"|An envelope.|6 ")},{label:"$WdPrintKeyAssignments",documentation:"".concat(Ce.descriptionHeader,"|Key assignments in the current document.|5 ")},{label:"$WdPrintMarkup",documentation:"".concat(Ce.descriptionHeader,"|Markup in the current document.|2 ")},{label:"$WdPrintProperties",documentation:"".concat(Ce.descriptionHeader,"|Properties in the current document.|1 ")},{label:"$WdPrintStyles",documentation:"".concat(Ce.descriptionHeader,"|Styles in the current document.|3 ")}];Pn=(0,Ce.setDetail)(Pn,"WdPrintOutItem Enumeration","Specifies the item to print.");var wn=[{label:"$WdPrintAllPages",documentation:"".concat(Ce.descriptionHeader,"|All pages.|0")},{label:"$WdPrintEvenPagesOnly",documentation:"".concat(Ce.descriptionHeader,"|Even-numbered pages only.|2")},{label:"$WdPrintOddPagesOnly",documentation:"".concat(Ce.descriptionHeader,"|Odd-numbered pages only.|1")}];wn=(0,Ce.setDetail)(wn,"WdPrintOutPages Enumeration","Specifies the type of pages to print.");var yn=[{label:"$WdPrintAllDocument",documentation:"".concat(Ce.descriptionHeader,"|The entire document.|0")},{label:"$WdPrintCurrentPage",documentation:"".concat(Ce.descriptionHeader,"|The current page.|2")},{label:"$WdPrintFromTo",documentation:"".concat(Ce.descriptionHeader,"|A specified range.|3")},{label:"$WdPrintRangeOfPages",documentation:"".concat(Ce.descriptionHeader,"|A specified range of pages.|4")},{label:"$WdPrintSelection",documentation:"".concat(Ce.descriptionHeader,"|The current selection.|1")}];yn=(0,Ce.setDetail)(yn,"WdPrintOutRange Enumeration","Specifies a range to print.");var An=[{label:"$WdFormatDocument",documentation:"".concat(Ce.descriptionHeader,"|Microsoft Office Word format.|0")},{label:"$WdFormatDOSText",documentation:"".concat(Ce.descriptionHeader,"|Microsoft DOS text format.|4")},{label:"$WdFormatDOSTextLineBreaks",documentation:"".concat(Ce.descriptionHeader,"|Microsoft DOS text with line breaks preserved.|5")},{label:"$WdFormatEncodedText",documentation:"".concat(Ce.descriptionHeader,"|Encoded text format.|7")},{label:"$WdFormatFilteredHTML",documentation:"".concat(Ce.descriptionHeader,"|Filtered HTML format.|10")},{label:"$WdFormatHTML",documentation:"".concat(Ce.descriptionHeader,"|Standard HTML format.|8")},{label:"$WdFormatRTF",documentation:"".concat(Ce.descriptionHeader,"|Rich text format (RTF).|6")},{label:"$WdFormatTemplate",documentation:"".concat(Ce.descriptionHeader,"|Word template format.|1")},{label:"$WdFormatText",documentation:"".concat(Ce.descriptionHeader,"|Microsoft Windows text format.|2")},{label:"$WdFormatTextLineBreaks",documentation:"".concat(Ce.descriptionHeader,"|Windows text format with line breaks preserved.|3")},{label:"$WdFormatUnicodeText",documentation:"".concat(Ce.descriptionHeader,"|Unicode text format.|7")},{label:"$WdFormatWebArchive",documentation:"".concat(Ce.descriptionHeader,"|Web archive format.|9")},{label:"$WdFormatXML",documentation:"".concat(Ce.descriptionHeader,"|Extensible Markup Language (XML) format.|11")},{label:"$WdFormatDocument97",documentation:"".concat(Ce.descriptionHeader,"|Microsoft Word 97 document format.|0")},{label:"$WdFormatDocumentDefault",documentation:"".concat(Ce.descriptionHeader,"|Word default document file format. For Microsoft Office Word 2007, this is the DOCX format.|16")},{label:"$WdFormatPDF",documentation:"".concat(Ce.descriptionHeader,"|PDF format.|17")},{label:"$WdFormatTemplate97",documentation:"".concat(Ce.descriptionHeader,"|Word 97 template format.|1")},{label:"$WdFormatXMLDocument",documentation:"".concat(Ce.descriptionHeader,"|XML document format.|12")},{label:"$WdFormatXMLDocumentMacroEnabled",documentation:"".concat(Ce.descriptionHeader,"|XML document format with macros enabled.|13")},{label:"$WdFormatXMLTemplate",documentation:"".concat(Ce.descriptionHeader,"|XML template format.|14")},{label:"$WdFormatXMLTemplateMacroEnabled",documentation:"".concat(Ce.descriptionHeader,"|XML template format with macros enabled.|15")},{label:"$WdFormatXPS",documentation:"".concat(Ce.descriptionHeader,"|XPS format.|18")}];An=(0,Ce.setDetail)(An,"WdSaveFormat Enumeration","Specifies the format to use when saving a document.");var Dn=[{label:"$WdDoNotSaveChanges",documentation:"".concat(Ce.descriptionHeader,"|Do not save pending changes.|0")},{label:"$WdPromptToSaveChanges",documentation:"".concat(Ce.descriptionHeader,"|Prompt the user to save pending changes.|-2")},{label:"$WdSaveChanges",documentation:"".concat(Ce.descriptionHeader,"|Save pending changes automatically without prompting the user.|-1")}];Dn=(0,Ce.setDetail)(Dn,"WdSaveOptions Enumeration","Specifies how pending changes should be handled.");var Wn=[{label:"$WdCell",documentation:"".concat(Ce.descriptionHeader,"|A cell.|12")},{label:"$WdCharacter",documentation:"".concat(Ce.descriptionHeader,"|A character.|1")},{label:"$WdCharacterFormatting",documentation:"".concat(Ce.descriptionHeader,"|Character formatting.|13")},{label:"$WdColumn",documentation:"".concat(Ce.descriptionHeader,"|A column.|9")},{label:"$WdItem",documentation:"".concat(Ce.descriptionHeader,"|The selected item.|16")},{label:"$WdLine",documentation:"".concat(Ce.descriptionHeader,"|A line.|5")},{label:"$WdParagraph",documentation:"".concat(Ce.descriptionHeader,"|A paragraph.|4")},{label:"$WdParagraphFormatting",documentation:"".concat(Ce.descriptionHeader,"|Paragraph formatting.|14")},{label:"$WdRow",documentation:"".concat(Ce.descriptionHeader,"|A row.|10")},{label:"$WdScreen",documentation:"".concat(Ce.descriptionHeader,"|The screen dimensions.|7")},{label:"$WdSection",documentation:"".concat(Ce.descriptionHeader,"|A section.|8")},{label:"$WdSentence",documentation:"".concat(Ce.descriptionHeader,"|A sentence.|3")},{label:"$WdStory",documentation:"".concat(Ce.descriptionHeader,"|A story.|6")},{label:"$WdTable",documentation:"".concat(Ce.descriptionHeader,"|A table.|15")},{label:"$WdWindow",documentation:"".concat(Ce.descriptionHeader,"|A window.|11")},{label:"$WdWord",documentation:"".concat(Ce.descriptionHeader,"|A word.|2")}];Wn=(0,Ce.setDetail)(Wn,"WdUnits Enumeration","Specifies a unit of measure to use."),pn=pn.concat($n,gn,Cn,Sn,Tn,Gn,Pn,wn,yn,An,Dn,Wn,In,fn,_n,bn);const En=(0,Ce.fillCompletions)(pn,t.CompletionItemKind.Constant,"","WordConstants.au3");var Rn=[{label:"And",documentation:"Logical And operation.\ne.g. If $vVar = 5 And $vVar2 > 6 Then\n(True if $vVar equals 5 and $vVar2 is greater than 6)"},{label:"ByRef",documentation:"Indicates that a parameter should be treated as a reference to the original"},{label:"Case",documentation:""},{label:"Const",documentation:"Declare a constant"},{label:"ContinueCase",documentation:"Abort the code in the current Case block and continue with the code in the next Case block when in a Select or Switch structure."},{label:"ContinueLoop",documentation:"Continue a While/Do/For loop"},{label:"Default",documentation:"Keyword value used in function call"},{label:"Dim",documentation:"Declare a variable in Local scope if the variable name doesn't already exist globally (in which case it reuses the global variable!)"},{label:"Do",documentation:""},{label:"Else",documentation:""},{label:"ElseIf",documentation:""},{label:"EndFunc",documentation:"Closes a Function definition"},{label:"EndIf",documentation:"Closes an If block"},{label:"EndSelect",documentation:"Closes a Select block"},{label:"EndSwitch",documentation:"Closes a Switch block"},{label:"EndWith",documentation:"Closes a With block"},{label:"Enum",documentation:"Enumerates constants."},{label:"Exit",documentation:"Terminates the script."},{label:"ExitLoop",documentation:"Terminate a While/Do/For loop."},{label:"False",documentation:"Boolean value for use in logical expressions."},{label:"For",documentation:""},{label:"Func",documentation:"Defines a user-defined function that takes zero or more arguments and optionally returns a result."},{label:"Global",documentation:""},{label:"If",documentation:"Conditionally run one or more statements."},{label:"In",documentation:""},{label:"Local",documentation:""},{label:"Next",documentation:""},{label:"Not",documentation:"Logical Not operation"},{label:"Null",documentation:"Keyword value to use in function call."},{label:"Or",documentation:"Logical Or operation"},{label:"Redim",documentation:"Resize an existing array."},{label:"Return",documentation:"Exit a function and provide a value"},{label:"Select",documentation:"Conditionally run statements."},{label:"Static",documentation:"Declare a static variable or create a static array."},{label:"Step",documentation:""},{label:"Switch",documentation:"Conditionally run statements."},{label:"Then",documentation:""},{label:"To",documentation:""},{label:"True",documentation:"Boolean value for use in logical expressions."},{label:"Until",documentation:""},{label:"Volatile",documentation:"Function qualifier. (EXPERIMENTAL)"},{label:"WEnd",documentation:"Closes a While Loop"},{label:"While",documentation:"Loop based on an expression."},{label:"With",documentation:"Used to reduce long references to dot-accessible type of variables."},{label:"#NoTrayIcon",documentation:"Indicates that the AutoIt tray icon will not be shown when the script starts."},{label:"#RequireAdmin",documentation:"Specifies that the current script requires full administrator rights to run."},{label:"#include",documentation:"Includes a file in the current script."},{label:"#include-once",documentation:"Specifies that the current file should only be included once."},{label:"#OnAutoItStartRegister",documentation:"Registers a function to be called when AutoIt starts.",insertText:new t.SnippetString("#OnAutoItStartRegister ").appendPlaceholder("function")},{label:"#pragma",documentation:"A special directive for controlling aspects of how the script is compiled.",insertText:new t.SnippetString("#pragma compile(").appendPlaceholder("pragma-option").appendText(", ").appendPlaceholder("parameter").appendText(")")}];const xn=(0,Ce.fillCompletions)(Rn,t.CompletionItemKind.Keyword,"Keyword"),vn=(0,Ce.fillCompletions)([{label:"@AppDataCommonDir",documentation:"Path to Application Data"},{label:"@AppDataDir",documentation:"Path to current user's Roaming Application Data"},{label:"@AutoItExe",documentation:"The full path and filename of the AutoIt executable currently running. For compiled scripts it is the path of the compiled script; for .a3x and .au3 files it is the path of the interpreter running the file."},{label:"@AutoItPID",documentation:"Process identifier (PID) of the current script."},{label:"@AutoItVersion",documentation:"Version number of AutoIt such as 3.3.10.2"},{label:"@AutoItX64",documentation:"Returns 1 if the script is running under the native x64 version of AutoIt."},{label:"@COM_EventObj",documentation:"Object the COM event is being fired on. Only valid in a COM event function."},{label:"@CommonFilesDir",documentation:"Path to Common Files folder"},{label:"@Compiled",documentation:"Returns 1 if script is a compiled executable or an .a3x file; returns 0 if an .au3 file."},{label:"@ComputerName",documentation:"Computer's network name."},{label:"@ComSpec",documentation:'Value of %COMSPEC%, the SPECified secondary COMmand interpreter;\nprimary for command line uses, e.g. Run(@ComSpec & " /k help | more")'},{label:"@CPUArch",documentation:'Returns "X86" when the CPU is a 32-bit CPU and "X64" when the CPU is 64-bit.'},{label:"@CR",documentation:"Carriage return, Chr(13); occasionally used for line breaks."},{label:"@CRLF",documentation:"@CR & @LF; typically used for line breaks."},{label:"@DesktopCommonDir",documentation:"Path to Desktop"},{label:"@DesktopDepth",documentation:"Depth of the primary display in bits per pixel."},{label:"@DesktopDir",documentation:"Path to current user's Desktop"},{label:"@DesktopHeight",documentation:"Height of the primary display in pixels. (Vertical resolution)"},{label:"@DesktopRefresh",documentation:"Refresh rate of the primary display in hertz."},{label:"@DesktopWidth",documentation:"Width of the primary display in pixels. (Horizontal resolution)"},{label:"@DocumentsCommonDir",documentation:"Path to Documents"},{label:"@error",documentation:"Status of the error flag. See the function SetError()."},{label:"@exitCode",documentation:"Exit code as set by Exit statement."},{label:"@extended",documentation:"Extended function return - used in certain functions such as StringReplace()."},{label:"@FavoritesCommonDir",documentation:"Path to Favorites"},{label:"@FavoritesDir",documentation:"Path to current user's Favorites"},{label:"@GUI_CtrlHandle",documentation:"Last click GUI Control handle. Only valid in an event Function. See the GUICtrlSetOnEvent() function."},{label:"@GUI_CtrlId",documentation:"Drag GUI Control identifier. Only valid on Drop Event. See the GUISetOnEvent() function."},{label:"@GUI_DragFile",documentation:"Filename of the file being dropped. Only valid on Drop Event. See the GUISetOnEvent() function."},{label:"@GUI_DragId",documentation:"Drag GUI Control identifier. Only valid on Drop Event. See the GUISetOnEvent() function."},{label:"@GUI_DropId",documentation:"Drop GUI Control identifier. Only valid on Drop Event. See the GUISetOnEvent() function."},{label:"@GUI_WinHandle",documentation:"Last click GUI window handle. Only valid in an event Function. See the GUICtrlSetOnEvent() function."},{label:"@HomeDrive",documentation:"Drive letter of drive containing current user's home directory."},{label:"@HomePath",documentation:"Directory part of current user's home directory. To get the full path, use in conjunction with @HomeDrive."},{label:"@HomeShare",documentation:"Server and share name containing current user's home directory."},{label:"@HotKeyPressed",documentation:"Last hotkey pressed. See the HotKeySet() function."},{label:"@HOUR",documentation:"Hours value of clock in 24-hour format. Range is 00 to 23"},{label:"@IPAddress1",documentation:"IP address of first network adapter. Tends to return 127.0.0.1 on some computers."},{label:"@IPAddress2",documentation:"IP address of second network adapter. Returns 0.0.0.0 if not applicable."},{label:"@IPAddress3",documentation:"IP address of third network adapter. Returns 0.0.0.0 if not applicable."},{label:"@IPAddress4",documentation:"IP address of fourth network adapter. Returns 0.0.0.0 if not applicable."},{label:"@KBLayout",documentation:"Returns code denoting Keyboard Layout. See Appendix for possible values."},{label:"@LF",documentation:"Line feed, Chr(10); occasionally used for line breaks."},{label:"@LocalAppDataDir",documentation:"Path to current user's Local Application Data"},{label:"@LogonDNSDomain",documentation:"Logon DNS Domain."},{label:"@LogonDomain",documentation:"Logon Domain."},{label:"@LogonServer",documentation:"Logon server."},{label:"@MDAY",documentation:"Current day of month. Range is 01 to 31"},{label:"@MIN",documentation:"Minutes value of clock. Range is 00 to 59"},{label:"@MON",documentation:"Current month. Range is 01 to 12"},{label:"@MSEC",documentation:"Milliseconds value of clock. Range is 000 to 999. The update frequency of this value depends on the timer resolution of the hardware and may not update every millisecond."},{label:"@MUILang",documentation:"Returns code denoting Multi Language if available (Vista is OK by default). See Appendix for possible values."},{label:"@MyDocumentsDir",documentation:"Path to My Documents target"},{label:"@NumParams",documentation:"Number of parameters used in calling the user function."},{label:"@OSArch",documentation:'Returns one of the following: "X86", "IA64", "X64" - this is the architecture type of the currently running operating system.'},{label:"@OSBuild",documentation:"Returns the OS build number. For example, Windows 2003 Server returns 3790"},{label:"@OSLang",documentation:"Returns code denoting OS Language. See Appendix for possible values."},{label:"@OSServicePack",documentation:'Service pack info in the form of "Service Pack 3".'},{label:"@OSType",documentation:'Returns "WIN32_NT" for XP/2003/Vista/2008/Win7/2008R2/Win8/2012/Win8.1/2012R2.'},{label:"@OSVersion",documentation:'Returns one of the following: "WIN_10", "WIN_81", "WIN_8", "WIN_7", "WIN_VISTA", "WIN_XP", "WIN_XPe",\n\tfor Windows servers: "WIN_2016", "WIN_2012R2", "WIN_2012", "WIN_2008R2", "WIN_2008", "WIN_2003"".'},{label:"@ProgramFilesDir",documentation:"Path to Program Files folder"},{label:"@ProgramsCommonDir",documentation:"Path to Start Menu's Programs folder"},{label:"@ProgramsDir",documentation:"Path to current user's Programs (folder on Start Menu)"},{label:"@ScriptDir",documentation:"Directory containing the running script. Only includes a trailing backslash when the script is located in the root of a drive."},{label:"@ScriptFullPath",documentation:'Equivalent to @ScriptDir & "\\" & @ScriptName'},{label:"@ScriptLineNumber",documentation:"Line number being executed - useful for debug statements (e.g. location of function call). Only significant in uncompiled scripts - note that #include files return their internal line numbering"},{label:"@ScriptName",documentation:"Filename of the running script."},{label:"@SEC",documentation:"Seconds value of clock. Range is 00 to 59"},{label:"@StartMenuCommonDir",documentation:"Path to Start Menu folder"},{label:"@StartMenuDir",documentation:"Path to current user's Start Menu"},{label:"@StartupCommonDir",documentation:"Path to Startup folder"},{label:"@StartupDir",documentation:"Current user's Startup folder"},{label:"@SW_DISABLE",documentation:"Disables the window."},{label:"@SW_ENABLE",documentation:"Enables the window."},{label:"@SW_HIDE",documentation:"Hides the window and activates another window."},{label:"@SW_LOCK",documentation:"Lock the window to avoid repainting."},{label:"@SW_MAXIMIZE",documentation:"Activates the window and displays it as a maximized window."},{label:"@SW_MINIMIZE",documentation:"Minimizes the specified window and activates the next top-level window in the Z order."},{label:"@SW_RESTORE",documentation:"Activates and displays the window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when restoring a minimized window."},{label:"@SW_SHOW",documentation:"Activates the window and displays it in its current size and position."},{label:"@SW_SHOWDEFAULT",documentation:"Sets the show state based on the SW_ value specified by the program that started the application."},{label:"@SW_SHOWMAXIMIZED",documentation:"Activates the window and displays it as a maximized window."},{label:"@SW_SHOWMINIMIZED",documentation:"Activates the window and displays it as a minimized window."},{label:"@SW_SHOWMINNOACTIVE",documentation:"Displays the window as a minimized window. This value is similar to @SW_SHOWMINIMIZED, except the window is not activated."},{label:"@SW_SHOWNA",documentation:"Displays the window in its current size and position. This value is similar to @SW_SHOW, except the window is not activated."},{label:"@SW_SHOWNOACTIVATE",documentation:"Displays a window in its most recent size and position. This value is similar to @SW_SHOWNORMAL, except the window is not activated."},{label:"@SW_SHOWNORMAL",documentation:"Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time."},{label:"@SW_UNLOCK",documentation:"Unlock window to allow painting."},{label:"@SystemDir",documentation:"Path to the Windows' System (or System32) folder."},{label:"@TAB",documentation:"Tab character, Chr(9)"},{label:"@TempDir",documentation:"Path to the temporary files folder."},{label:"@TRAY_ID",documentation:"Last clicked item identifier during a TraySetOnEvent() or TrayItemSetOnEvent() action."},{label:"@TrayIconFlashing",documentation:"Returns 1 if tray icon is flashing; otherwise, returns 0."},{label:"@TrayIconVisible",documentation:"Returns 1 if tray icon is visible; otherwise, returns 0."},{label:"@UserName",documentation:"ID of the currently logged on user."},{label:"@UserProfileDir",documentation:"Path to current user's Profile folder."},{label:"@WDAY",documentation:"Numeric day of week. Range is 1 to 7 which corresponds to Sunday through Saturday."},{label:"@WindowsDir",documentation:"Path to Windows folder"},{label:"@WorkingDir",documentation:"Current/active working directory. Only includes a trailing backslash when the script is located in the root of a drive."},{label:"@YDAY",documentation:"Current day of year. Range is 001 to 366 (or 001 to 365 if not a leap year)"},{label:"@YEAR",documentation:"Current four-digit year"}],t.CompletionItemKind.Variable,"Macro"),Un=(0,Ce.fillCompletions)([{label:"Abs",documentation:"Calculates the absolute value of a number."},{label:"ACos",documentation:"Calculates the arcCosine of a number."},{label:"AdlibRegister",documentation:"Registers an Adlib function."},{label:"AdlibUnRegister",documentation:"Unregisters an adlib function."},{label:"ASin",documentation:"Calculates the arcsine of a number."},{label:"Assign",documentation:"Assigns a variable by name with the data."},{label:"Asc",documentation:"Returns the ASCII code of a character."},{label:"AscW",documentation:"Returns the unicode code of a character."},{label:"ATan",documentation:"Calculates the arctangent of a number."},{label:"AutoItSetOption",documentation:"Changes the operation of various AutoIt functions/parameters."},{label:"AutoItWinGetTitle",documentation:"Retrieves the title of the AutoIt window."},{label:"AutoItWinSetTitle",documentation:"Changes the title of the AutoIt window."},{label:"Beep",documentation:"Changes the title of the AutoIt window."},{label:"Binary",documentation:"Returns the binary representation of an expression."},{label:"BinaryLen",documentation:"Returns the number of bytes in a binary variant."},{label:"BinaryMid",documentation:"Extracts a number of bytes from a binary variant."},{label:"BinaryToString",documentation:"Converts a binary variant into a string."},{label:"BitAND",documentation:"Performs a bitwise AND operation."},{label:"BitNOT",documentation:"Performs a bitwise NOT operation."},{label:"BitOR",documentation:"Performs a bitwise OR operation."},{label:"BitRotate",documentation:"Performs a bit shifting operation, with rotation."},{label:"BitShift",documentation:"Performs a bit shifting operation."},{label:"BitXOR",documentation:"Performs a bitwise exclusive OR (XOR) operation."},{label:"BlockInput",documentation:"Disable/enable the mouse and keyboard."},{label:"Break",documentation:"Enables or disables the users' ability to exit a script from the tray icon menu."},{label:"Call",documentation:"Calls a user-defined or built-in function contained in first parameter."},{label:"CDTray",documentation:"Opens or closes the CD tray."},{label:"Ceiling",documentation:"Returns a number rounded up to the next integer."},{label:"Chr",documentation:"Returns a character corresponding to an ASCII code."},{label:"ChrW",documentation:"Returns a character corresponding to a unicode code."},{label:"ClipGet",documentation:"Retrieves text from the clipboard."},{label:"ClipPut",documentation:"Writes text to the clipboard."},{label:"ConsoleRead",documentation:"Read from the STDIN stream of the AutoIt script process."},{label:"ConsoleWrite",documentation:"Writes data to the STDOUT stream. Some text editors can read this stream as can other programs which may be expecting data on this stream."},{label:"ConsoleWriteError",documentation:"Writes data to the STDERR stream. Some text editors can read this stream as can other programs which may be expecting data on this stream."},{label:"ControlClick",documentation:"Sends a mouse click command to a given control."},{label:"ControlCommand",documentation:"Sends a command to a control."},{label:"ControlDisable",documentation:'Disables or "grays-out" a control.'},{label:"ControlEnable",documentation:'Enables a "grayed-out" control.'},{label:"ControlFocus",documentation:"Sets input focus to a given control on a window."},{label:"ControlGetFocus",documentation:"Returns the ControlRef# of the control that has keyboard focus within a specified window."},{label:"ControlGetHandle",documentation:"Retrieves the internal handle of a control."},{label:"ControlGetPos",documentation:"Retrieves the position and size of a control relative to its window."},{label:"ControlGetText",documentation:"Retrieves text from a control."},{label:"ControlHide",documentation:"Hides a control."},{label:"ControlListView",documentation:"Sends a command to a ListView32 control."},{label:"ControlMove",documentation:"Moves a control within a window."},{label:"ControlSend",documentation:"Sends a string of characters to a control."},{label:"ControlSetText",documentation:"Sets text of a control."},{label:"ControlShow",documentation:"Shows a control that was hidden."},{label:"ControlTreeView",documentation:"Sends a command to a TreeView32 control."},{label:"Cos",documentation:"Calculates the cosine of a number."},{label:"Dec",documentation:"Returns a numeric representation of a hexadecimal string."},{label:"DirCopy",documentation:"Copies a directory and all sub-directories and files (Similar to xcopy). "},{label:"DirCreate",documentation:"Creates a directory/folder. "},{label:"DirGetSize",documentation:"Returns the size in bytes of a given directory. "},{label:"DirMove",documentation:"Moves a directory and all sub-directories and files. "},{label:"DirRemove",documentation:"Deletes a directory/folder. "},{label:"DllCall",documentation:"Dynamically calls a function in a DLL. "},{label:"DllCallAddress",documentation:"Dynamically calls a function at a specific memory address. "},{label:"DllCallbackFree",documentation:"Frees a previously created handle created with DllCallbackRegister. "},{label:"DllCallbackGetPtr",documentation:"Returns the pointer to a callback function that can be passed to the Win32 API. "},{label:"DllCallbackRegister",documentation:"Creates a user-defined DLL Callback function. "},{label:"DllClose",documentation:"Closes a previously opened DLL. "},{label:"DllOpen",documentation:"Opens a DLL file for use in DllCall. "},{label:"DllStructCreate",documentation:"Creates a C/C++ style structure to be used in DllCall. "},{label:"DllStructGetData",documentation:"Returns the data of an element of the struct. "},{label:"DllStructGetPtr",documentation:"Returns the pointer to the struct or an element in the struct. "},{label:"DllStructGetSize",documentation:"Returns the size of the struct in bytes. "},{label:"DllStructSetData",documentation:"Sets the data of an element in the struct. "},{label:"DriveGetDrive",documentation:"Returns an array containing the enumerated drives. "},{label:"DriveGetFileSystem",documentation:"Returns File System Type of a drive. "},{label:"DriveGetLabel",documentation:"Returns Volume Label of a drive, if it has one. "},{label:"DriveGetSerial",documentation:"Returns Serial Number of a drive. "},{label:"DriveGetType",documentation:"Returns drive type. "},{label:"DriveMapAdd",documentation:"Maps a network drive. "},{label:"DriveMapDel",documentation:"Disconnects a network drive. "},{label:"DriveMapGet",documentation:"Retrieves the details of a mapped drive. "},{label:"DriveSetLabel",documentation:"Sets the Volume Label of a drive. "},{label:"DriveSpaceFree",documentation:"Returns the free disk space of a path in Megabytes. "},{label:"DriveSpaceTotal",documentation:"Returns the total disk space of a path in Megabytes. "},{label:"DriveStatus",documentation:"Returns the status of the drive as a string. "},{label:"EnvGet",documentation:"Retrieves an environment variable. "},{label:"EnvSet",documentation:"Writes an environment variable. "},{label:"EnvUpdate",documentation:"Refreshes the OS environment. "},{label:"Eval",documentation:"Return the value of the variable defined by a string. "},{label:"Execute",documentation:"Execute an expression. "},{label:"Exp",documentation:"Calculates e to the power of a number. "},{label:"FileChangeDir",documentation:"Changes the current working directory. "},{label:"FileClose",documentation:"Closes a previously opened file. "},{label:"FileCopy",documentation:"Copies one or more files. "},{label:"FileCreateNTFSLink",documentation:"Creates an NTFS hardlink to a file or a directory. "},{label:"FileCreateShortcut",documentation:"Creates a shortcut (.lnk) to a file. "},{label:"FileDelete",documentation:"Delete one or more files. "},{label:"FileExists",documentation:"Checks if a file or directory exists. "},{label:"FileFindFirstFile",documentation:"Creates a search handle, defined by a path and file mask. "},{label:"FileFindNextFile",documentation:"Returns the next filename defined by the search handle. "},{label:"FileFlush",documentation:"Flushes the file's buffer to disk. "},{label:"FileGetAttrib",documentation:"Returns a code string representing a file's attributes. "},{label:"FileGetEncoding",documentation:"Determines the text encoding used in a file. "},{label:"FileGetLongName",documentation:"Returns the long path+name of the path+name passed. "},{label:"FileGetPos",documentation:"Retrieves the current file position. "},{label:"FileGetShortcut",documentation:"Retrieves details about a shortcut. "},{label:"FileGetShortName",documentation:"Returns the 8.3 short path+name of the path+name passed. "},{label:"FileGetSize",documentation:"Returns the size of a file in bytes. "},{label:"FileGetTime",documentation:"Returns the time and date information for a file. "},{label:"FileGetVersion",documentation:"Returns version information stored in a file. "},{label:"FileInstall",documentation:"Include and install a file with the compiled script. "},{label:"FileMove",documentation:"Moves one or more files. "},{label:"FileOpen",documentation:"Opens a file for reading or writing. "},{label:"FileOpenDialog",documentation:"Initiates a Open File Dialog. "},{label:"FileRead",documentation:"Read in a number of characters from a previously opened file. "},{label:"FileReadLine",documentation:"Read in a line of text from a previously opened text file. "},{label:"FileReadToArray",documentation:"Reads the specified file into an array. "},{label:"FileRecycle",documentation:"Sends a file or directory to the recycle bin. "},{label:"FileRecycleEmpty",documentation:"Empties the recycle bin. "},{label:"FileSaveDialog",documentation:"Initiates a Save File Dialog. "},{label:"FileSelectFolder",documentation:"Initiates a Browse For Folder dialog. "},{label:"FileSetAttrib",documentation:"Sets the attributes of one or more files/directories. "},{label:"FileSetEnd",documentation:"Sets the end of the file at the current file position. "},{label:"FileSetPos",documentation:"Sets the current file position. "},{label:"FileSetTime",documentation:"Sets the timestamp of one of more files. "},{label:"FileWrite",documentation:"Write text/data to the end of a previously opened file. "},{label:"FileWriteLine",documentation:"Append a line of text to the end of a previously opened text file. "},{label:"Floor",documentation:"Returns a number rounded down to the closest integer. "},{label:"FtpSetProxy",documentation:"Sets the internet proxy to use for ftp access. "},{label:"FuncName",documentation:"Returns the name of a function stored in a variable. "},{label:"GUICreate",documentation:"Create a GUI window. "},{label:"GUICtrlCreateAvi",documentation:"Creates an AVI video control for the GUI. "},{label:"GUICtrlCreateButton",documentation:"Creates a Button control for the GUI. "},{label:"GUICtrlCreateCheckbox",documentation:"Creates a Checkbox control for the GUI. "},{label:"GUICtrlCreateCombo",documentation:"Creates a ComboBox control for the GUI. "},{label:"GUICtrlCreateContextMenu",documentation:"Creates a context menu for a control or entire GUI window. "},{label:"GUICtrlCreateDate",documentation:"Creates a date control for the GUI. "},{label:"GUICtrlCreateDummy",documentation:"Creates a Dummy control for the GUI. "},{label:"GUICtrlCreateEdit",documentation:"Creates an Edit control for the GUI. "},{label:"GUICtrlCreateGraphic",documentation:"Creates a Graphic control for the GUI. "},{label:"GUICtrlCreateGroup",documentation:"Creates a Group control for the GUI. "},{label:"GUICtrlCreateIcon",documentation:"Creates an Icon control for the GUI. "},{label:"GUICtrlCreateInput",documentation:"Creates an Input control for the GUI. "},{label:"GUICtrlCreateLabel",documentation:"Creates a static Label control for the GUI. "},{label:"GUICtrlCreateList",documentation:"Creates a List control for the GUI. "},{label:"GUICtrlCreateListView",documentation:"Creates a ListView control for the GUI. "},{label:"GUICtrlCreateListViewItem",documentation:"Creates a ListView item. "},{label:"GUICtrlCreateMenu",documentation:"Creates a Menu control for the GUI. "},{label:"GUICtrlCreateMenuItem",documentation:"Creates a MenuItem control for the GUI. "},{label:"GUICtrlCreateMonthCal",documentation:"Creates a month calendar control for the GUI. "},{label:"GUICtrlCreateObj",documentation:"Creates an ActiveX control in the GUI. "},{label:"GUICtrlCreatePic",documentation:"Creates a Picture control for the GUI. "},{label:"GUICtrlCreateProgress",documentation:"Creates a Progress control for the GUI. "},{label:"GUICtrlCreateRadio",documentation:"Creates a Radio button control for the GUI. "},{label:"GUICtrlCreateSlider",documentation:"Creates a Slider control for the GUI. "},{label:"GUICtrlCreateTab",documentation:"Creates a Tab control for the GUI. "},{label:"GUICtrlCreateTabItem",documentation:"Creates a TabItem control within an existing tab control in the GUI. "},{label:"GUICtrlCreateTreeView",documentation:"Creates a TreeView control for the GUI. "},{label:"GUICtrlCreateTreeViewItem",documentation:"Creates a TreeViewItem control for the GUI. "},{label:"GUICtrlCreateUpdown",documentation:"Creates an UpDown control for the GUI. "},{label:"GUICtrlDelete",documentation:"Deletes a control. "},{label:"GUICtrlGetHandle",documentation:"Returns the handle for a control and some special (item) handles (Menu, ContextMenu, TreeViewItem). "},{label:"GUICtrlGetState",documentation:"Gets the current state of a control. "},{label:"GUICtrlRead",documentation:"Read state or data of a control. "},{label:"GUICtrlRecvMsg",documentation:"Send a message to a control and retrieve information in lParam. "},{label:"GUICtrlRegisterListViewSort",documentation:"Register a user defined function for an internal listview sorting callback function. "},{label:"GUICtrlSendMsg",documentation:"Send a message to a control. "},{label:"GUICtrlSendToDummy",documentation:"Sends a message to a Dummy control. "},{label:"GUICtrlSetBkColor",documentation:"Sets the background color of a control. "},{label:"GUICtrlSetColor",documentation:"Sets the text color of a control. "},{label:"GUICtrlSetCursor",documentation:"Sets the mouse cursor icon for a particular control. "},{label:"GUICtrlSetData",documentation:"Modifies the data for a control. "},{label:"GUICtrlSetDefBkColor",documentation:"Sets the default background color of all the controls of the GUI window. "},{label:"GUICtrlSetDefColor",documentation:"Sets the default text color of all the controls of the GUI window. "},{label:"GUICtrlSetFont",documentation:"Sets the font for a control. "},{label:"GUICtrlSetGraphic",documentation:"Modifies the data for a control. "},{label:"GUICtrlSetImage",documentation:"Sets the bitmap or icon image to use for a control. "},{label:"GUICtrlSetLimit",documentation:"Limits the number of characters/pixels for a control. "},{label:"GUICtrlSetOnEvent",documentation:"Defines a user-defined function to be called when a control is clicked. "},{label:"GUICtrlSetPos",documentation:"Changes the position of a control within the GUI window. "},{label:"GUICtrlSetResizing",documentation:"Defines the resizing method used by a control. "},{label:"GUICtrlSetState",documentation:"Changes the state of a control. "},{label:"GUICtrlSetStyle",documentation:"Changes the style of a control. "},{label:"GUICtrlSetTip",documentation:"Sets the tip text associated with a control. "},{label:"GUIDelete",documentation:"Deletes a GUI window and all controls that it contains. "},{label:"GUIGetCursorInfo",documentation:"Gets the mouse cursor position relative to GUI window. "},{label:"GUIGetMsg",documentation:"Polls the GUI to see if any events have occurred. "},{label:"GUIGetStyle",documentation:"Retrieves the styles of a GUI window. "},{label:"GUIRegisterMsg",documentation:"Register a user defined function for a known Windows Message ID (WM_MSG). "},{label:"GUISetAccelerators",documentation:"Sets the accelerator table to be used in a GUI window. "},{label:"GUISetBkColor",documentation:"Sets the background color of the GUI window. "},{label:"GUISetCoord",documentation:"Sets absolute coordinates for the next control. "},{label:"GUISetCursor",documentation:"Sets the mouse cursor icon for a GUI window. "},{label:"GUISetFont",documentation:"Sets the default font for a GUI window. "},{label:"GUISetHelp",documentation:"Sets an executable file that will be run when F1 is pressed. "},{label:"GUISetIcon",documentation:"Sets the icon used in a GUI window. "},{label:"GUISetOnEvent",documentation:"Defines a user function to be called when a system button is clicked. "},{label:"GUISetState",documentation:"Changes the state of a GUI window. "},{label:"GUISetStyle",documentation:"Changes the styles of a GUI window. "},{label:"GUIStartGroup",documentation:'Defines that any subsequent controls that are created will be "grouped" together. '},{label:"GUISwitch",documentation:"Switches the current window used for GUI functions. "},{label:"Hex",documentation:"Returns a string representation of an integer or of a binary type converted to hexadecimal. "},{label:"HotKeySet",documentation:"Sets a hotkey that calls a user function. "},{label:"HttpSetProxy",documentation:"Sets the internet proxy to use for http access. "},{label:"HttpSetUserAgent",documentation:"Sets the HTTP user-agent string which is sent with all Inet requests. "},{label:"HWnd",documentation:"Converts an expression into an HWND handle. "},{label:"InetClose",documentation:"Closes a handle returned from InetGet(). "},{label:"InetGet",documentation:"Downloads a file from the internet using the HTTP, HTTPS or FTP protocol. "},{label:"InetGetInfo",documentation:"Returns detailed data for a handle returned from InetGet(). "},{label:"InetGetSize",documentation:"Returns the size (in bytes) of a file located on the internet. "},{label:"InetRead",documentation:"Downloads a file from the internet using the HTTP, HTTPS or FTP protocol. "},{label:"IniDelete",documentation:"Deletes a value from a standard format .ini file. "},{label:"IniRead",documentation:"Reads a value from a standard format .ini file. "},{label:"IniReadSection",documentation:"Reads all key/value pairs from a section in a standard format .ini file. "},{label:"IniReadSectionNames",documentation:"Reads all sections in a standard format .ini file. "},{label:"IniRenameSection",documentation:"Renames a section in a standard format .ini file. "},{label:"IniWrite",documentation:"Writes a value to a standard format .ini file. "},{label:"IniWriteSection",documentation:"Writes a section to a standard format .ini file. "},{label:"InputBox",documentation:"Displays an input box to ask the user to enter a string. "},{label:"Int",documentation:"Returns the integer (whole number) representation of an expression. "},{label:"IsAdmin",documentation:"Checks if the current user has full administrator privileges. "},{label:"IsArray",documentation:"Checks if a variable is an array type. "},{label:"IsBinary",documentation:"Checks if a variable or expression is a binary type. "},{label:"IsBool",documentation:"Checks if a variable's base type is boolean. "},{label:"IsDeclared",documentation:"Check if a variable has been declared. "},{label:"IsDllStruct",documentation:"Checks if a variable is a DllStruct type. "},{label:"IsFloat",documentation:"Checks if the value of a variable or expression has a fractional component. "},{label:"IsFunc",documentation:"Checks if a variable or expression is a function type. "},{label:"IsHWnd",documentation:"Checks if a variable's base type is a pointer and window handle. "},{label:"IsInt",documentation:"Checks if the value of a variable or expression has no fractional component. "},{label:"IsKeyword",documentation:"Checks if a variable is a keyword (for example, Default). "},{label:"IsMap",documentation:"Checks if a variables is a Map type. "},{label:"IsNumber",documentation:"Checks if a variable's base type is numeric. "},{label:"IsObj",documentation:"Checks if a variable or expression is an object type. "},{label:"IsPtr",documentation:"Checks if a variable's base type is a pointer. "},{label:"IsString",documentation:"Checks if a variable is a string type. "},{label:"Log",documentation:"Calculates the natural logarithm of a number. "},{label:"MemGetStats",documentation:"Retrieves memory related information. "},{label:"MapAppend",documentation:"Add an element to a Map variable. "},{label:"MapExists",documentation:"Determine whether a key exists within a Map. "},{label:"MapKeys",documentation:"Returns an array holding the keys within a Map. "},{label:"MapRemove",documentation:"Removes a key and its associated values from a Map. "},{label:"Mod",documentation:"Performs the modulus operation. "},{label:"MouseClick",documentation:"Perform a mouse click operation. "},{label:"MouseClickDrag",documentation:"Perform a mouse click and drag operation. "},{label:"MouseDown",documentation:"Perform a mouse down event at the current mouse position. "},{label:"MouseGetCursor",documentation:"Returns the cursor ID Number for the current Mouse Cursor. "},{label:"MouseGetPos",documentation:"Retrieves the current position of the mouse cursor. "},{label:"MouseMove",documentation:"Moves the mouse pointer. "},{label:"MouseUp",documentation:"Perform a mouse up event at the current mouse position. "},{label:"MouseWheel",documentation:"Moves the mouse wheel up or down. "},{label:"MsgBox",documentation:"Displays a simple message box with optional timeout. "},{label:"Number",documentation:"Returns the numeric representation of an expression. "},{label:"ObjCreate",documentation:"Creates a reference to a COM object from the given classname. "},{label:"ObjCreateInterface",documentation:"Creates a reference to an object from the given classname/object pointer, interface identifier and description string. "},{label:"ObjEvent",documentation:"Handles incoming events from the given Object. "},{label:"ObjGet",documentation:"Retrieves a reference to a COM object from an existing process or filename. "},{label:"ObjName",documentation:"Returns the name or interface description of an Object. "},{label:"OnAutoItExitRegister",documentation:"Registers a function to be called when AutoIt exits. "},{label:"OnAutoItExitUnRegister",documentation:"UnRegisters a function that was called when AutoIt exits. "},{label:"Ping",documentation:"Pings a host and returns the roundtrip-time. "},{label:"PixelChecksum",documentation:"Generates a checksum for a region of pixels. "},{label:"PixelGetColor",documentation:"Returns a pixel color according to x,y pixel coordinates. "},{label:"PixelSearch",documentation:"Searches a rectangle of pixels for the pixel color provided. "},{label:"ProcessClose",documentation:"Terminates a named process. "},{label:"ProcessExists",documentation:"Checks to see if a specified process exists. "},{label:"ProcessGetStats",documentation:"Returns an array about Memory or IO infos of a running process. "},{label:"ProcessList",documentation:"Returns an array listing the currently running processes (names and PIDs). "},{label:"ProcessSetPriority",documentation:"Changes the priority of a process. "},{label:"ProcessWait",documentation:"Pauses script execution until a given process exists. "},{label:"ProcessWaitClose",documentation:"Pauses script execution until a given process does not exist. "},{label:"ProgressOff",documentation:"Turns Progress window off. "},{label:"ProgressOn",documentation:"Creates a customizable progress bar window. "},{label:"ProgressSet",documentation:"Sets the position and/or text of a previously created Progress bar window. "},{label:"Ptr",documentation:"Converts an expression into a pointer variant. "},{label:"Random",documentation:"Generates a pseudo-random float-type number. "},{label:"RegDelete",documentation:"Deletes a key or value from the registry. "},{label:"RegEnumKey",documentation:"Reads the name of a subkey according to its instance. "},{label:"RegEnumVal",documentation:"Reads the name of a value according to its instance. "},{label:"RegRead",documentation:"Reads a value from the registry. "},{label:"RegWrite",documentation:"Creates a key or value in the registry. "},{label:"Round",documentation:"Returns a number rounded to a specified number of decimal places. "},{label:"Run",documentation:"Runs an external program. "},{label:"RunAs",documentation:"Runs an external program under the context of a different user. "},{label:"RunAsWait",documentation:"Runs an external program under the context of a different user and pauses script execution until the program finishes. "},{label:"RunWait",documentation:"Runs an external program and pauses script execution until the program finishes. "},{label:"Send",documentation:"Sends simulated keystrokes to the active window. "},{label:"SendKeepActive",documentation:"Attempts to keep a specified window active during Send(). "},{label:"SetError",documentation:'Manually set the value of the @error macro (and optionally @extended, and "Return Value"). '},{label:"SetExtended",documentation:"Manually set the value of the @extended macro. "},{label:"ShellExecute",documentation:"Runs an external program using the ShellExecute API. "},{label:"ShellExecuteWait",documentation:"Runs an external program using the ShellExecute API and pauses script execution until it finishes. "},{label:"Shutdown",documentation:"Shuts down the system. "},{label:"Sin",documentation:"Calculates the sine of a number. "},{label:"Sleep",documentation:"Pause script execution. "},{label:"SoundPlay",documentation:"Play a sound file. "},{label:"SoundSetWaveVolume",documentation:"Sets the system wave volume by percent. "},{label:"SplashImageOn",documentation:"Creates a customizable image popup window. "},{label:"SplashOff",documentation:"Turns SplashText or SplashImage off. "},{label:"SplashTextOn",documentation:"Creates a customizable text popup window. "},{label:"Sqrt",documentation:"Calculates the square-root of a number. "},{label:"SRandom",documentation:"Set Seed for random number generation. "},{label:"StatusbarGetText",documentation:"Retrieves the text from a standard status bar control. "},{label:"StderrRead",documentation:"Reads from the STDERR stream of a previously run child process. "},{label:"StdinWrite",documentation:"Writes a number of characters to the STDIN stream of a previously run child process. "},{label:"StdioClose",documentation:"Closes all resources associated with a process previously run with STDIO redirection. "},{label:"StdoutRead",documentation:"Reads from the STDOUT stream of a previously run child process. "},{label:"String",documentation:"Returns the string representation of an expression. "},{label:"StringAddCR",documentation:"Takes a string and prefixes all linefeed characters ( Chr(10) ) with a carriage return character ( Chr(13) ). "},{label:"StringCompare",documentation:"Compares two strings with options. "},{label:"StringFormat",documentation:"Returns a formatted string (similar to the C sprintf() function). "},{label:"StringFromASCIIArray",documentation:"Converts an array of ASCII codes to a string. "},{label:"StringInStr",documentation:"Checks if a string contains a given substring. "},{label:"StringIsAlNum",documentation:"Checks if a string contains only alphanumeric characters. "},{label:"StringIsAlpha",documentation:"Checks if a string contains only alphabetic characters. "},{label:"StringIsASCII",documentation:"Checks if a string contains only ASCII characters in the range 0x00 - 0x7f (0 - 127). "},{label:"StringIsDigit",documentation:"Checks if a string contains only digit (0-9) characters. "},{label:"StringIsFloat",documentation:"Checks if a string is a floating point number. "},{label:"StringIsInt",documentation:"Checks if a string is an integer. "},{label:"StringIsLower",documentation:"Checks if a string contains only lowercase characters. "},{label:"StringIsSpace",documentation:"Checks if a string contains only whitespace characters. "},{label:"StringIsUpper",documentation:"Checks if a string contains only uppercase characters. "},{label:"StringIsXDigit",documentation:"Checks if a string contains only hexadecimal digit (0-9, A-F) characters. "},{label:"StringLeft",documentation:"Returns a number of characters from the left-hand side of a string. "},{label:"StringLen",documentation:"Returns the number of characters in a string. "},{label:"StringLower",documentation:"Converts a string to lowercase. "},{label:"StringMid",documentation:"Extracts a number of characters from a string. "},{label:"StringRegExp",documentation:"Check if a string fits a given regular expression pattern. "},{label:"StringRegExpReplace",documentation:"Replace text in a string based on regular expressions. "},{label:"StringReplace",documentation:"Replaces substrings in a string. "},{label:"StringReverse",documentation:"Reverses the contents of the specified string. "},{label:"StringRight",documentation:"Returns a number of characters from the right-hand side of a string. "},{label:"StringSplit",documentation:"Splits up a string into substrings depending on the given delimiters. "},{label:"StringStripCR",documentation:"Removes all carriage return values ( Chr(13) ) from a string. "},{label:"StringStripWS",documentation:"Strips the white space in a string. "},{label:"StringToASCIIArray",documentation:"Converts a string to an array containing the ASCII code of each character. "},{label:"StringToBinary",documentation:"Converts a string into binary data. "},{label:"StringTrimLeft",documentation:"Trims a number of characters from the left hand side of a string. "},{label:"StringTrimRight",documentation:"Trims a number of characters from the right hand side of a string. "},{label:"StringUpper",documentation:"Converts a string to uppercase. "},{label:"Tan",documentation:"Calculates the tangent of a number. "},{label:"TCPAccept",documentation:"Permits an incoming connection attempt on a socket. "},{label:"TCPCloseSocket",documentation:"Closes a TCP socket. "},{label:"TCPConnect",documentation:"Create a socket connected to an existing server. "},{label:"TCPListen",documentation:"Creates a socket listening for an incoming connection. "},{label:"TCPNameToIP",documentation:"Converts an Internet name to IP address. "},{label:"TCPRecv",documentation:"Receives data from a connected socket. "},{label:"TCPSend",documentation:"Sends data on a connected socket. "},{label:"TCPShutdown",documentation:"TCPShutdown Stops TCP services. "},{label:"TCPStartup",documentation:"TCPStartup Starts TCP services. "},{label:"TimerDiff",documentation:"Returns the difference in time from a previous call to TimerInit(). "},{label:"TimerInit",documentation:"Returns a handle that can be passed to TimerDiff() to calculate the difference in milliseconds. "},{label:"ToolTip",documentation:"Creates a tooltip anywhere on the screen. "},{label:"TrayCreateItem",documentation:"Creates a menuitem control for the tray. "},{label:"TrayCreateMenu",documentation:"Creates a menu control for the tray menu. "},{label:"TrayGetMsg",documentation:"Polls the tray to see if any events have occurred. "},{label:"TrayItemDelete",documentation:"Deletes a menu/item control from the tray menu. "},{label:"TrayItemGetHandle",documentation:"Returns the handle for a tray menu(item). "},{label:"TrayItemGetState",documentation:"Gets the current state of a control. "},{label:"TrayItemGetText",documentation:"Gets the itemtext of a tray menu/item control. "},{label:"TrayItemSetOnEvent",documentation:"Defines a user-defined function to be called when a tray item is clicked. "},{label:"TrayItemSetState",documentation:"Sets the state of a tray menu/item control. "},{label:"TrayItemSetText",documentation:"Sets the itemtext of a tray menu/item control. "},{label:"TraySetClick",documentation:"Sets the clickmode of the tray icon - what mouseclicks will display the tray menu. "},{label:"TraySetIcon",documentation:"Loads/Sets a specified tray icon. "},{label:"TraySetOnEvent",documentation:"Defines a user function to be called when a special tray action happens. "},{label:"TraySetPauseIcon",documentation:"Loads/Sets a specified tray pause icon. "},{label:"TraySetState",documentation:"Sets the state of the tray icon. "},{label:"TraySetToolTip",documentation:"(Re)Sets the tooltip text for the tray icon. "},{label:"TrayTip",documentation:"Displays a balloon tip from the AutoIt Icon. "},{label:"UBound",documentation:"Returns the size of array dimensions or the number of keys in a map. "},{label:"UDPBind",documentation:"Create a socket bound to an incoming connection. "},{label:"UDPCloseSocket",documentation:"Close a UDP socket. "},{label:"UDPOpen",documentation:"Open a socket connected to an existing server . "},{label:"UDPRecv",documentation:"Receives data from an opened socket. "},{label:"UDPSend",documentation:"Sends data on an opened socket. "},{label:"UDPShutdown",documentation:"UDPShutdown Stops UDP services. "},{label:"UDPStartup",documentation:"UDPStartup Starts UDP services. "},{label:"VarGetType",documentation:"Returns the internal type representation of a variant. "},{label:"WinActivate",documentation:"Activates (gives focus to) a window. "},{label:"WinActive",documentation:"Checks to see if a specified window exists and is currently active. "},{label:"WinClose",documentation:"Closes a window. "},{label:"WinExists",documentation:"Checks to see if a specified window exists. "},{label:"WinFlash",documentation:"Flashes a window in the taskbar. "},{label:"WinGetCaretPos",documentation:"Returns the coordinates of the caret in the foreground window. "},{label:"WinGetClassList",documentation:"Retrieves the classes from a window. "},{label:"WinGetClientSize",documentation:"Retrieves the size of a given window's client area. "},{label:"WinGetHandle",documentation:"Retrieves the internal handle of a window. "},{label:"WinGetPos",documentation:"Retrieves the position and size of a given window. "},{label:"WinGetProcess",documentation:"Retrieves the Process ID (PID) associated with a window. "},{label:"WinGetState",documentation:"Retrieves the state of a given window. "},{label:"WinGetText",documentation:"Retrieves the text from a window. "},{label:"WinGetTitle",documentation:"Retrieves the full title from a window. "},{label:"WinKill",documentation:"Forces a window to close. "},{label:"WinList",documentation:"Retrieves a list of windows. "},{label:"WinMenuSelectItem",documentation:"Invokes a menu item of a window. "},{label:"WinMinimizeAll",documentation:"Minimizes all windows. "},{label:"WinMinimizeAllUndo",documentation:"Undoes a previous WinMinimizeAll function. "},{label:"WinMove",documentation:"Moves and/or resizes a window. "},{label:"WinSetOnTop",documentation:'Change a window\'s "Always On Top" attribute. '},{label:"WinSetState",documentation:"Shows, hides, minimizes, maximizes, or restores a window. "},{label:"WinSetTitle",documentation:"Changes the title of a window. "},{label:"WinSetTrans",documentation:"Sets the transparency of a window. "},{label:"WinWait",documentation:"Pauses execution of the script until the requested window exists. "},{label:"WinWaitActive",documentation:"Pauses execution of the script until the requested window is active. "},{label:"WinWaitClose",documentation:"Pauses execution of the script until the requested window does not exist. "},{label:"WinWaitNotActive",documentation:"Pauses execution of the script until the requested window is not active. "}],t.CompletionItemKind.Function,"AutoIt Function");var Fn=[{label:"{ALT}",insertText:"{ALT}"},{label:"{ALTDOWN}",insertText:"{ALTDOWN}",documentation:"Holds the ALT key down until {ALTUP} is sent"},{label:"{ALTUP}",insertText:"{ALTUP}",documentation:"Releases the ALT key"},{label:"{APPSKEY}",documentation:"Windows App key"},{label:"{ASC}",documentation:"Send the ALT+nnnn key combination",insertText:new t.SnippetString("{ASC ").appendPlaceholder("0000").appendText("}")},{label:"{BACKSPACE}"},{label:"{BREAK}",documentation:"for Ctrl+Break processing"},{label:"{BROWSER_BACK}",documentation:'Select the browser "back" button'},{label:"{BROWSER_FAVORITES}",documentation:'Select the browser "favorites" button'},{label:"{BROWSER_FORWARD}",documentation:'Select the browser "forward" button'},{label:"{BROWSER_HOME}",documentation:"Launch the browser and go to the home page"},{label:"{BROWSER_REFRESH}",documentation:'Select the browser "refresh" button'},{label:"{BROWSER_SEARCH}",documentation:'Select the browser "search" button'},{label:"{BROWSER_STOP}",documentation:'Select the browser "stop" button'},{label:"{BROWSER_STOP}",documentation:'Select the browser "stop" button'},{label:"{CAPSLOCK}",documentation:"CAPSLOCK (on/off/toggle)",insertText:new t.SnippetString("{CAPSLOCK ").appendChoice(["on","off","toggle"]).appendText("}")},{label:"{CTRLDOWN}",documentation:"Holds the CTRL key down until {CTRLUP} is sent"},{label:"{CTRLUP}",documentation:"Releases the CTRL key"},{label:"{DELETE}"},{label:"{DOWN}",documentation:"Down arrow"},{label:"{END}"},{label:"{ENTER}",documentation:"ENTER key on the main keyboard"},{label:"{ESCAPE}"},{label:"{F1}"},{label:"{F2}"},{label:"{F3}"},{label:"{F4}"},{label:"{F5}"},{label:"{F6}"},{label:"{F7}"},{label:"{F8}"},{label:"{F9}"},{label:"{F10}"},{label:"{F11}"},{label:"{F12}"},{label:"{HOME}"},{label:"{INSERT}"},{label:"{LALT}",documentation:"Left ALT key"},{label:"{LAUNCH_APP1}",documentation:"Launch user app1"},{label:"{LAUNCH_APP2}",documentation:"Launch user app2"},{label:"{LAUNCH_MAIL}",documentation:"Launch the email application"},{label:"{LAUNCH_MEDIA}",documentation:"Launch media player"},{label:"{LCTRL}",documentation:"Left CTRL key"},{label:"{LEFT}",documentation:"Left arrow"},{label:"{LSHIFT}",documentation:"Left Shift key"},{label:"{LWIN}",documentation:"Left Windows key"},{label:"{LWINDOWN}",documentation:"Holds the left Windows key down until {LWINUP} is sent"},{label:"{LWINUP}",documentation:"Releases the Windows key"},{label:"{MEDIA_NEXT}",documentation:"Select next track in media player"},{label:"{MEDIA_PLAY_PAUSE}",documentation:"Play/pause media player"},{label:"{MEDIA_PREV}",documentation:"Select previous track in media player"},{label:"{MEDIA_STOP}",documentation:"Stop media player"},{label:"{NUMLOCK}",documentation:"NUMLOCK (on/off/toggle)",inserText:new t.SnippetString("{NUMLOCK ").appendChoice(["on","off","toggle"]).appendText("}")},{label:"{NUMPAD0}",documentation:""},{label:"{NUMPAD1}",documentation:""},{label:"{NUMPAD2}",documentation:""},{label:"{NUMPAD3}",documentation:""},{label:"{NUMPAD4}",documentation:""},{label:"{NUMPAD5}",documentation:""},{label:"{NUMPAD6}",documentation:""},{label:"{NUMPAD7}",documentation:""},{label:"{NUMPAD8}",documentation:""},{label:"{NUMPAD9}",documentation:""},{label:"{NUMPADADD}",documentation:"Numpad Add"},{label:"{NUMPADDIV}",documentation:"Numpad Divide"},{label:"{NUMPADDOT}",documentation:"Numpad period"},{label:"{NUMPADENTER}",documentation:"Enter key on the numpad"},{label:"{NUMPADMULT}",documentation:"Numpad Multiply"},{label:"{NUMPADSUB}",documentation:"Numpad Subtract"},{label:"{OEM_102}",documentation:"Either the angle bracket key or the backslash key on the RT 102-key keyboard"},{label:"{PAUSE}",documentation:""},{label:"{PGDN}",documentation:"PageDown"},{label:"{PGUP}",documentation:"PageUp"},{label:"{PRINTSCREEN}",documentation:"Print Screen key"},{label:"{RALT}",documentation:"Right ALT key"},{label:"{RCTRL}",documentation:"Right CTRL key"},{label:"{RIGHT}",documentation:"Right arrow"},{label:"{RSHIFT}",documentation:"Right Shift key"},{label:"{RWIN}",documentation:"Right Windows key"},{label:"{RWINDOWN}",documentation:"Holds the right Windows key down until {RWINUP} is sent"},{label:"{RWINUP}",documentation:"Releases the right Windows key"},{label:"{SCROLLLOCK}",documentation:"SCROLLLOCK (on/off/toggle)",inserText:new t.SnippetString("{SCROLLLOCK ").appendChoice(["on","off","toggle"]).appendText("}")},{label:"{SHIFTDOWN}",documentation:"Holds the SHIFT key down until {SHIFTUP} is sent"},{label:"{SHIFTUP}",documentation:"Releases the SHIFT key"},{label:"{SLEEP}",documentation:"Computer SLEEP key"},{label:"{SPACE}",documentation:""},{label:"{TAB}",documentation:""},{label:"{UP}",documentation:"Up arrow"},{label:"{VOLUME_DOWN}",documentation:"Reduce the volume"},{label:"{VOLUME_MUTE}",documentation:"Mute the volume"},{label:"{VOLUME_UP}",documentation:"Increase the volume"}];const Ln=(0,Ce.fillCompletions)(Fn,t.CompletionItemKind.Constant,"Send() Command"),Bn=(0,Ce.fillCompletions)([{label:"_Array1DToHistogram",documentation:"Transform a 1D array to Histogram"},{label:"_ArrayAdd",documentation:"Adds a specified value at the end of an existing 1D or 2D array"},{label:"_ArrayBinarySearch",documentation:"Uses the binary search algorithm to search through a 1D or 2D array"},{label:"_ArrayColDelete",documentation:"Deletes a specified column from a 2D array"},{label:"_ArrayColInsert",documentation:"Inserts a specified column into a 1D or 2D array"},{label:"_ArrayCombinations",documentation:"Returns an array of the combinations of a set of elements from a selected 1D array"},{label:"_ArrayConcatenate",documentation:"Concatenate two arrays - either 1D or 2D with the same number of columns"},{label:"_ArrayDelete",documentation:"Deletes the specified element(s) from the specified 1D or 2D array"},{label:"_ArrayDisplay",documentation:"Displays a 1D or 2D array in a ListView"},{label:"_ArrayExtract",documentation:"Extracts an array from the specified element(s) of a 1D or 2D array"},{label:"_ArrayFindAll",documentation:"Find the indices of all ocurrences of a search query between two points in a 1D or 2D array using _ArraySearch()"},{label:"_ArrayInsert",documentation:"Insert a new value at the specified position of a 1D or 2D array"},{label:"_ArrayMax",documentation:"Returns the highest value held in a 1D or 2D array"},{label:"_ArrayMaxIndex",documentation:"Returns the index where the highest value occurs in a 1D or 2D array"},{label:"_ArrayMin",documentation:"Returns the lowest value held in a 1D or 2D array"},{label:"_ArrayMinIndex",documentation:"Returns the index where the lowest value occurs in a 1D or 2D array"},{label:"_ArrayPermute",documentation:"Returns an array of the Permutations of all Elements in a 1D array"},{label:"_ArrayPop",documentation:"Returns the last element of an array, deleting that element from the array at the same time"},{label:"_ArrayPush",documentation:"Add new values without increasing array size by inserting at the end the new value and deleting the first one or vice versa"},{label:"_ArrayReverse",documentation:"Takes the given array and reverses the order in which the elements appear in a 1D array"},{label:"_ArraySearch",documentation:"Finds an entry within a 1D or 2D array. Similar to _ArrayBinarySearch(), except that the array does not need to be sorted"},{label:"_ArrayShuffle",documentation:"Shuffles selected rows of 1D or 2D arrays - can be limited to a specific column in 2D arrays"},{label:"_ArraySort",documentation:"Sort a 1D or 2D array on a specific index using the dualpivotsort/quicksort/insertionsort algorithms"},{label:"_ArraySwap",documentation:"Swaps elements of a 1D array and full or part rows/columns of a 2D array"},{label:"_ArrayToClip",documentation:"Sends the contents of a 1D or 2D array to the clipboard, each element separated by a specified delimiter"},{label:"_ArrayToString",documentation:"Places the elements of a 1D or 2D array into a single string, separated by the specified delimiters"},{label:"_ArrayTranspose",documentation:"Transposes a 1D or 2D array (swaps rows and columns)"},{label:"_ArrayTrim",documentation:"Trims a certain number of characters from all elements in a 1D or 2D array"},{label:"_ArrayUnique",documentation:"Returns the Elements from a column of a 1D or 2D array, removing all duplicates"}],t.CompletionItemKind.Function,"Array UDF","Array.au3"),On=(0,Ce.fillCompletions)([{label:"_ClipBoard_ChangeChain",documentation:"Removes a specified window from the chain of clipboard viewers"},{label:"_ClipBoard_Close",documentation:"Closes the clipboard"},{label:"_ClipBoard_CountFormats",documentation:"Retrieves the number of different data formats currently on the clipboard"},{label:"_ClipBoard_Empty",documentation:"Empties the clipboard and frees handles to data in the clipboard"},{label:"_ClipBoard_EnumFormats",documentation:"Enumerates the data formats currently available on the clipboard"},{label:"_ClipBoard_FormatStr",documentation:"Returns a string representation of a standard clipboard format"},{label:"_ClipBoard_GetData",documentation:"Retrieves data from the clipboard in a specified format"},{label:"_ClipBoard_GetDataEx",documentation:"Retrieves data from the clipboard in a specified format"},{label:"_ClipBoard_GetFormatName",documentation:"Retrieves the name of the specified registered format"},{label:"_ClipBoard_GetOpenWindow",documentation:"Retrieves the handle to the window that currently has the clipboard open"},{label:"_ClipBoard_GetOwner",documentation:"Retrieves the window handle of the current owner of the clipboard"},{label:"_ClipBoard_GetPriorityFormat",documentation:"Retrieves the first available clipboard format in the specified list"},{label:"_ClipBoard_GetSequenceNumber",documentation:"Retrieves the clipboard sequence number for the current window station"},{label:"_ClipBoard_GetViewer",documentation:"Retrieves the handle to the first window in the clipboard viewer chain"},{label:"_ClipBoard_IsFormatAvailable",documentation:"Determines whether the clipboard contains data in the specified format"},{label:"_ClipBoard_Open",documentation:"Opens the clipboard and prevents other applications from modifying the clipboard"},{label:"_ClipBoard_RegisterFormat",documentation:"Registers a new clipboard format"},{label:"_ClipBoard_SetData",documentation:"Places data on the clipboard in a specified clipboard format"},{label:"_ClipBoard_SetDataEx",documentation:"Places data on the clipboard in a specified clipboard format"},{label:"_ClipBoard_SetViewer",documentation:"Adds the specified window to the chain of clipboard viewers"}],t.CompletionItemKind.Function,"Clipboard UDF","Clipboard.au3"),Mn=(0,Ce.fillCompletions)([{label:"_ColorConvertHSLtoRGB",documentation:"Converts HSL to RGB"},{label:"_ColorConvertRGBtoHSL",documentation:"Converts RGB to HSL"},{label:"_ColorGetBlue",documentation:"Returns the blue component of a given color"},{label:"_ColorGetCOLORREF",documentation:"Returns the COLORREF color"},{label:"_ColorGetGreen",documentation:"Returns the green component of a given color"},{label:"_ColorGetRed",documentation:"Returns the red component of a given color"},{label:"_ColorGetRGB",documentation:"Returns an array containing RGB values in their respective positions"},{label:"_ColorSetCOLORREF",documentation:"Returns the COLORREF color"},{label:"_ColorSetRGB",documentation:"Returns the RGB color "}],t.CompletionItemKind.Function,"Color UDF","WinAPIGdi.au3"),Nn=(0,Ce.fillCompletions)([{label:"_Crypt_DecryptData",documentation:"Decrypts data using the supplied key"},{label:"_Crypt_DecryptFile",documentation:"Decrypts a file with specified key and algorithm"},{label:"_Crypt_DeriveKey",documentation:"Creates a key from algorithm and password"},{label:"_Crypt_DestroyKey",documentation:"Frees the resources used by a key"},{label:"_Crypt_EncryptData",documentation:"Encrypts data using the supplied key"},{label:"_Crypt_EncryptFile",documentation:"Encrypts a file with specified key and algorithm"},{label:"_Crypt_GenRandom",documentation:"Fill a buffer with cryptographically random data"},{label:"_Crypt_HashData",documentation:"Hash data with specified algorithm"},{label:"_Crypt_HashFile",documentation:"Hash a string with specified algorithm"},{label:"_Crypt_Shutdown",documentation:"Uninitialize the Crypt library"},{label:"_Crypt_Startup",documentation:"Initialize the Crypt library"}],t.CompletionItemKind.Function,"Crypt UDF","Crypt.au3"),Hn=(0,Ce.fillCompletions)([{label:"_Date_Time_CompareFileTime",documentation:"Compares two file times"},{label:"_Date_Time_DOSDateTimeToArray",documentation:"Decode a DOS date/time to an array"},{label:"_Date_Time_DOSDateTimeToFileTime",documentation:"Converts MS-DOS date and time values to a file time"},{label:"_Date_Time_DOSDateTimeToStr",documentation:"Decode a DOS date to a string"},{label:"_Date_Time_DOSDateToArray",documentation:"Decode a DOS date to an array"},{label:"_Date_Time_DOSDateToStr",documentation:"Decode a DOS date to a string"},{label:"_Date_Time_DOSTimeToArray",documentation:"Decode a DOS time to an array"},{label:"_Date_Time_DOSTimeToStr",documentation:"Decode a DOS time to a string"},{label:"_Date_Time_EncodeFileTime",documentation:"Encodes and returns a $tagFILETIME structure"},{label:"_Date_Time_EncodeSystemTime",documentation:"Encodes and returns a $tagSYSTEMTIME structure"},{label:"_Date_Time_FileTimeToArray",documentation:"Decode a file time to an array"},{label:"_Date_Time_FileTimeToDOSDateTime",documentation:"Converts MS-DOS date and time values to a file time"},{label:"_Date_Time_FileTimeToLocalFileTime",documentation:"Converts a file time based on the Coordinated Universal Time to a local file time"},{label:"_Date_Time_FileTimeToStr",documentation:"Decode a file time to a date/time string"},{label:"_Date_Time_FileTimeToSystemTime",documentation:"Converts a file time to system time format"},{label:"_Date_Time_GetFileTime",documentation:"Retrieves the date and time that a file was created, accessed and modified"},{label:"_Date_Time_GetLocalTime",documentation:"Retrieves the current local date and time"},{label:"_Date_Time_GetSystemTime",documentation:"Retrieves the current system date and time expressed in UTC"},{label:"_Date_Time_GetSystemTimeAdjustment",documentation:"Determines whether the system is applying periodic time adjustments"},{label:"_Date_Time_GetSystemTimeAsFileTime",documentation:"Retrieves the current system date and time expressed in UTC"},{label:"_Date_Time_GetSystemTimes",documentation:"Retrieves system timing information"},{label:"_Date_Time_GetTickCount",documentation:"Retrieves the number of milliseconds that have elapsed since Windows was started"},{label:"_Date_Time_GetTimeZoneInformation",documentation:"Retrieves the current time zone settings"},{label:"_Date_Time_LocalFileTimeToFileTime",documentation:"Converts a local file time to a file time based on UTC"},{label:"_Date_Time_SetFileTime",documentation:"Sets the date and time that a file was created, accessed and modified"},{label:"_Date_Time_SetLocalTime",documentation:"Sets the current local date and time"},{label:"_Date_Time_SetSystemTime",documentation:"Sets the current system time and date, expressed in UTC"},{label:"_Date_Time_SetSystemTimeAdjustment",documentation:"Enables or disables periodic time adjustments to the system's time of day clock"},{label:"_Date_Time_SetTimeZoneInformation",documentation:"Sets the current time zone settings"},{label:"_Date_Time_SystemTimeToArray",documentation:"Decode a system time to an array"},{label:"_Date_Time_SystemTimeToDateStr",documentation:"Decode a system time to a date string"},{label:"_Date_Time_SystemTimeToDateTimeStr",documentation:"Decode a system time to a date/time string"},{label:"_Date_Time_SystemTimeToFileTime",documentation:"Converts a system time to file time format"},{label:"_Date_Time_SystemTimeToTimeStr",documentation:"Decode a system time to a time string"},{label:"_Date_Time_SystemTimeToTzSpecificLocalTime",documentation:"Converts a UTC time to a specified time zone's corresponding local time"},{label:"_Date_Time_TzSpecificLocalTimeToSystemTime",documentation:"Converts a local time to a time in UTC"},{label:"_DateAdd",documentation:"Calculates a new date/time by adding/subtracting a specified number of time intervals from an initial date/time"},{label:"_DateDayOfWeek",documentation:"Returns the name of the weekday, based on the specified day"},{label:"_DateDaysInMonth",documentation:"Returns the number of days in a month, based on the specified month and year"},{label:"_DateDiff",documentation:"Returns the difference between 2 dates, expressed in the type requested"},{label:"_DateIsLeapYear",documentation:"Checks a given year to see if it is a leap year"},{label:"_DateIsValid",documentation:"Checks the given date to determine if it is a valid date"},{label:"_DateTimeFormat",documentation:"Returns the date in the PC's regional settings format"},{label:"_DateTimeSplit",documentation:"Split a string containing Date and Time into two separate Arrays"},{label:"_DateToDayOfWeek",documentation:"Returns the weekday number for a given date"},{label:"_DateToDayOfWeekISO",documentation:"Returns the ISO weekday number for a given date"},{label:"_DateToDayValue",documentation:"Returns the day number since noon 4713 BC January 1 for a given Gregorian date"},{label:"_DateToMonth",documentation:"Returns the name of the month, based on the specified month"},{label:"_DayValueToDate",documentation:"Add the given days since noon 4713 BC January 1 and returns the Gregorian date"},{label:"_Now",documentation:"Returns the current Date and Time in PC's format"},{label:"_NowCalc",documentation:"Returns the current Date and Time in format YYYY/MM/DD HH:MM:SS for use in date calculations"},{label:"_NowCalcDate",documentation:"Returns the current Date in format YYYY/MM/DD"},{label:"_NowDate",documentation:"Returns the current Date in the Pc's format"},{label:"_NowTime",documentation:"Returns the current Time in the requested format"},{label:"_SetDate",documentation:"Sets the current date of the system"},{label:"_SetTime",documentation:"Sets the current time of the system"},{label:"_TicksToTime",documentation:"Converts the specified tick amount to hours, minutes and seconds"},{label:"_TimeToTicks",documentation:"Converts the specified hours, minutes, and seconds to ticks"},{label:"_WeekNumberISO",documentation:"Calculate the weeknumber of a given date"}],t.CompletionItemKind.Function,"Date UDF","Date.au3"),kn=(0,Ce.fillCompletions)([{label:"_Assert",documentation:"Display a message if assertion fails"},{label:"_DebugArrayDisplay",documentation:"Displays a 1D or 2D array in a ListView to aid debugging"},{label:"_DebugBugReportEnv",documentation:"Outputs a string containing information for Bug report submission"},{label:"_DebugCOMError",documentation:"Sets, resets or queries the debug level for COM errors"},{label:"_DebugOut",documentation:"Displays output on a debugging session started by _DebugSetup()"},{label:"_DebugReport",documentation:"Writes to a debugging session"},{label:"_DebugReportEx",documentation:"Writes to a debugging session a formatted message"},{label:"_DebugReportVar",documentation:"Writes to debugging session the content of a variable"},{label:"_DebugSetup",documentation:"Setup up a debug session using a specific reporting type "}],t.CompletionItemKind.Function,"Debug UDF","Debug.au3"),Vn=(0,Ce.fillCompletions)([{label:"_EventLog__Backup",documentation:"Saves the event log to a backup file"},{label:"_EventLog__Clear",documentation:"Clears the event log"},{label:"_EventLog__Close",documentation:"Closes a read handle to the event log"},{label:"_EventLog__Count",documentation:"Retrieves the number of records in the event log"},{label:"_EventLog__DeregisterSource",documentation:"Closes a write handle to the event log"},{label:"_EventLog__Full",documentation:"Retrieves whether the event log is full"},{label:"_EventLog__Notify",documentation:"Enables an application to receive event notifications"},{label:"_EventLog__Oldest",documentation:"Retrieves the absolute record number of the oldest record in the event log"},{label:"_EventLog__Open",documentation:"Opens a handle to the event log"},{label:"_EventLog__OpenBackup",documentation:"Opens a handle to a backup event log"},{label:"_EventLog__Read",documentation:"Reads an entry from the event log"},{label:"_EventLog__RegisterSource",documentation:"Retrieves a registered handle to the specified event log"},{label:"_EventLog__Report",documentation:"Writes an entry at the end of the specified event log"}],t.CompletionItemKind.Function,"EventLog UDF","EventLog.au3"),jn=(0,Ce.fillCompletions)([{label:"_Excel_BookAttach",documentation:"Attaches to the first instance of a workbook where the search string matches based on the selected mode"},{label:"_Excel_BookClose",documentation:"Closes the specified workbook"},{label:"_Excel_BookList",documentation:"Returns a list of workbooks of a specified or all Excel instances"},{label:"_Excel_BookNew",documentation:"Creates a new workbook"},{label:"_Excel_BookOpen",documentation:"Opens an existing workbook"},{label:"_Excel_BookOpenText",documentation:"Opens a text file and parses the content to a new workbook with a single sheet"},{label:"_Excel_BookSave",documentation:"Saves the specified workbook"},{label:"_Excel_BookSaveAs",documentation:"Saves the specified workbook with a new filename and/or type"},{label:"_Excel_Close",documentation:"Closes all worksheets and the instance of the Excel application"},{label:"_Excel_ColumnToLetter",documentation:"Converts the column number to letter(s)"},{label:"_Excel_ColumnToNumber",documentation:"Converts the column letter(s) to a number"},{label:"_Excel_ConvertFormula",documentation:"Converts cell references in a formula between A1 and R1C1 reference styles, relative and absolute reference type, or both"},{label:"_Excel_Export",documentation:"Exports a workbook, worksheet, chart or range as PDF or XPS"},{label:"_Excel_FilterGet",documentation:"Returns a list of set filters"},{label:"_Excel_FilterSet",documentation:"Sets/unsets filter definitions and filters the range"},{label:"_Excel_Open",documentation:"Connects to an existing Excel instance or creates a new one"},{label:"_Excel_PictureAdd",documentation:"Adds a picture on the specified workbook and worksheet"},{label:"_Excel_Print",documentation:"Prints a workbook, worksheet, chart or range"},{label:"_Excel_RangeCopyPaste",documentation:"Cuts or copies one or multiple cells, rows or columns to a range or from/to the clipboard"},{label:"_Excel_RangeDelete",documentation:"Deletes one or multiple cells, rows or columns from the specified worksheet"},{label:"_Excel_RangeFind",documentation:"Finds matching cells in a range or workbook and returns an array with information about the found cells"},{label:"_Excel_RangeInsert",documentation:"Inserts one or multiple empty cells, rows or columns into the specified worksheet"},{label:"_Excel_RangeLinkAddRemove",documentation:"Adds or removes a hyperlink to/from a specified range"},{label:"_Excel_RangeRead",documentation:"Reads the value, formula or displayed text from a cell or range of cells of the specified workbook and worksheet"},{label:"_Excel_RangeReplace",documentation:"Finds and replaces matching strings in a range or worksheet"},{label:"_Excel_RangeSort",documentation:"Sorts a cell range"},{label:"_Excel_RangeValidate",documentation:"Adds data validation to the specified range"},{label:"_Excel_RangeWrite",documentation:"Writes value(s) or formula(s) to a cell or a cell range on the specified workbook and worksheet"},{label:"_Excel_SheetAdd",documentation:"Adds new sheet(s) to a workbook and sets their names"},{label:"_Excel_SheetCopyMove",documentation:"Copies or moves the specified sheet before or after a specified sheet in the same or a different workbook"},{label:"_Excel_SheetDelete",documentation:"Deletes the specified sheet by object, string name or by number"},{label:"_Excel_SheetList",documentation:"Returns a list of all sheets in the specified workbook "}],t.CompletionItemKind.Function,"Excel UDF","Excel.au3"),Yn=(0,Ce.fillCompletions)([{label:"_FileCountLines",documentation:"Returns the number of lines in the specified file"},{label:"_FileCreate",documentation:"Creates or zero's out the length of the file specified"},{label:"_FileListToArray",documentation:"Lists files and\\or folders in a specified folder (Similar to using Dir with the /B Switch)"},{label:"_FileListToArrayRec",documentation:"Lists files and\\or folders in specified path with optional recursion to defined level and result sorting"},{label:"_FilePrint",documentation:"Prints a plain text file"},{label:"_FileReadToArray",documentation:"Reads the specified file into a 1D or 2D array"},{label:"_FileWriteFromArray",documentation:"Writes an array to a specified file"},{label:"_FileWriteLog",documentation:"Writes current date, time and the specified text to a log file"},{label:"_FileWriteToLine",documentation:"Writes text to a specific line in a file"},{label:"_PathFull",documentation:"Creates a path based on the relative path you provide. The newly created absolute path is returned"},{label:"_PathGetRelative",documentation:"Returns the relative path to a directory"},{label:"_PathMake",documentation:"Creates a path from drive, directory, file name and file extension parts"},{label:"_PathSplit",documentation:"Splits a path into the drive, directory, file name and file extension parts. An empty string is set if a part is missing"},{label:"_ReplaceStringInFile",documentation:"Replaces substrings in a file"},{label:"_TempFile",documentation:"Generate a name for a temporary file. The file is guaranteed not to exist yet"}],t.CompletionItemKind.Function,"File UDF","File.au3"),Xn=(0,Ce.fillCompletions)([{label:"_FTP_Close",documentation:"Closes the _FTP_Open or _FTP_Connect session"},{label:"_FTP_Command",documentation:"Sends a command to an FTP server"},{label:"_FTP_Connect",documentation:"Connects to an FTP server"},{label:"_FTP_DecodeInternetStatus",documentation:"Decode a received Internet Status"},{label:"_FTP_DirCreate",documentation:"Makes an Directory on an FTP server"},{label:"_FTP_DirDelete",documentation:"Delete's an Directory on an FTP server"},{label:"_FTP_DirGetCurrent",documentation:"Get Current Directory on an FTP server"},{label:"_FTP_DirPutContents",documentation:"Puts an folder on an FTP server. Recursivley if selected"},{label:"_FTP_DirSetCurrent",documentation:"Set Current Directory on an FTP server"},{label:"_FTP_FileClose",documentation:"Closes the Handle returned by _FTP_FileOpen"},{label:"_FTP_FileDelete",documentation:"Delete an file from an FTP server"},{label:"_FTP_FileGet",documentation:"Get file from a FTP server"},{label:"_FTP_FileGetSize",documentation:"Gets filesize of a file on the FTP server"},{label:"_FTP_FileOpen",documentation:"Initiates access to a remote file on an FTP server for reading or writing"},{label:"_FTP_FilePut",documentation:"Puts an file on an FTP server"},{label:"_FTP_FileRead",documentation:"Reads data from a handle opened by _FTP_FileOpen()"},{label:"_FTP_FileRename",documentation:"Renames an file on an FTP server"},{label:"_FTP_FileTimeLoHiToStr",documentation:"Converts filetime Loword and Hiword to a string"},{label:"_FTP_FindFileClose",documentation:"Delete FindFile Handle"},{label:"_FTP_FindFileFirst",documentation:"Find First File on an FTP server"},{label:"_FTP_FindFileNext",documentation:"Find Next File on an FTP server"},{label:"_FTP_GetLastResponseInfo",documentation:"Retrieves the last error description or server response on the thread calling this function"},{label:"_FTP_ListToArray",documentation:"Get Filenames, Directories or Both of current remote directory"},{label:"_FTP_ListToArray2D",documentation:"Get Filenames and filesizes of current remote directory"},{label:"_FTP_ListToArrayEx",documentation:"Get names, sizes, attributes and times of files/dir of current remote directory"},{label:"_FTP_Open",documentation:"Opens an FTP session"},{label:"_FTP_ProgressDownload",documentation:"Downloads a file in Binary Mode and shows a Progress window or by Calling a User defined Function"},{label:"_FTP_ProgressUpload",documentation:"Uploads a file in Binary Mode and shows a Progress window or by Calling a User defined Function"},{label:"_FTP_SetStatusCallback",documentation:"Registers callback function that WinINet functions can call as progress is made during an operation"}],t.CompletionItemKind.Function,"FTPEx UDF","FTPEx.au3"),zn=(0,Ce.fillCompletions)([{label:"_GDIPlus_RectFCreate",documentation:"Create a $tagGDIPRECTF structure"},{label:"_GDIPlus_Shutdown",documentation:"Clean up resources used by Microsoft Windows GDI+"},{label:"_GDIPlus_Startup",documentation:"Initialize Microsoft Windows GDI+_GDIPlus_ArrowCapCreate Creates an adjustable arrow line cap with the specified height and width"},{label:"_GDIPlus_ArrowCapDispose",documentation:"Release an adjustable arrow line cap object"},{label:"_GDIPlus_ArrowCapGetFillState",documentation:"Determines whether the arrow cap is filled"},{label:"_GDIPlus_ArrowCapGetHeight",documentation:"Gets the height of the arrow cap"},{label:"_GDIPlus_ArrowCapGetMiddleInset",documentation:"Gets the value of the inset"},{label:"_GDIPlus_ArrowCapGetWidth",documentation:"Gets the width of the arrow cap"},{label:"_GDIPlus_ArrowCapSetFillState",documentation:"Sets whether the arrow cap is filled"},{label:"_GDIPlus_ArrowCapSetHeight",documentation:"Sets the height of the arrow cap"},{label:"_GDIPlus_ArrowCapSetMiddleInset",documentation:"Gets the value of the inset"},{label:"_GDIPlus_ArrowCapSetWidth",documentation:"Sets the width of the arrow cap"},{label:"_GDIPlus_CustomLineCapClone",documentation:"Clones a CustomLineCap object"},{label:"_GDIPlus_CustomLineCapCreate",documentation:"Creates a CustomLineCap object"},{label:"_GDIPlus_CustomLineCapDispose",documentation:"Release a custom line cap object"},{label:"_GDIPlus_CustomLineCapGetStrokeCaps",documentation:"Gets the end cap styles for both the start line cap and the end line cap"},{label:"_GDIPlus_CustomLineCapSetStrokeCaps",documentation:"Sets the distance between the base cap to the start of the line_GDIPlus_BitmapApplyEffect Alters a Bitmap by applying a specified effect"},{label:"_GDIPlus_BitmapApplyEffectEx",documentation:"Alters a Bitmap by applying a specified effect"},{label:"_GDIPlus_BitmapCloneArea",documentation:"Create a clone of a Bitmap object from the coordinates and format specified"},{label:"_GDIPlus_BitmapConvertFormat",documentation:"Converts a bitmap to a specified pixel format"},{label:"_GDIPlus_BitmapCreateApplyEffect",documentation:"Creates a new Bitmap by applying a specified effect to an existing Bitmap"},{label:"_GDIPlus_BitmapCreateApplyEffectEx",documentation:"Creates a new Bitmap by applying a specified effect to an existing Bitmap"},{label:"_GDIPlus_BitmapCreateDIBFromBitmap",documentation:"Creates a DIB Section"},{label:"_GDIPlus_BitmapCreateFromFile",documentation:"Create a Bitmap object from file"},{label:"_GDIPlus_BitmapCreateFromGraphics",documentation:"Creates a Bitmap object based on a Graphics object, a width, and a height"},{label:"_GDIPlus_BitmapCreateFromHBITMAP",documentation:"Create a Bitmap object from a bitmap handle"},{label:"_GDIPlus_BitmapCreateFromHICON",documentation:"Creates a Bitmap object based on an icon"},{label:"_GDIPlus_BitmapCreateFromHICON32",documentation:"Creates a Bitmap object based on a 32bit icon"},{label:"_GDIPlus_BitmapCreateFromMemory",documentation:"Loads an image (JPG, BMP, PNG, etc.) which is saved as a binary string and converts it to a bitmap (GDI+) or hbitmap (GDI)"},{label:"_GDIPlus_BitmapCreateFromResource",documentation:"Creates a Bitmap object based on an icon"},{label:"_GDIPlus_BitmapCreateFromScan0",documentation:"Creates a Bitmap object based on an array of bytes along with size and format information"},{label:"_GDIPlus_BitmapCreateFromStream",documentation:"Creates a Bitmap object based on an IStream COM interface"},{label:"_GDIPlus_BitmapCreateHBITMAPFromBitmap",documentation:"Create a handle to a bitmap from a bitmap object"},{label:"_GDIPlus_BitmapDispose",documentation:"Release a bitmap object"},{label:"_GDIPlus_BitmapGetHistogram",documentation:"Returns one or more histograms for specified color channels of the specified Bitmap"},{label:"_GDIPlus_BitmapGetHistogramEx",documentation:"Returns histograms for the Bitmap´s color channels: Red, Green, Blue, Alpha and Grey"},{label:"_GDIPlus_BitmapGetHistogramSize",documentation:"Returns the number of elements for allocation by _GDIPlus_BitmapGetHistogramEx()"},{label:"_GDIPlus_BitmapGetPixel",documentation:"Gets the color of a specified pixel in this bitmap"},{label:"_GDIPlus_BitmapLockBits",documentation:"Locks a portion of a bitmap for reading or writing"},{label:"_GDIPlus_BitmapSetPixel",documentation:"Sets the color of a specified pixel in this bitmap"},{label:"_GDIPlus_BitmapUnlockBits",documentation:"Unlocks a portion of a bitmap that was locked by _GDIPlus_BitmapLockBits"},{label:"_GDIPlus_HICONCreateFromBitmap",documentation:"Creates an icon handle from a bitmap object"},{label:"_GDIPlus_PaletteInitialize",documentation:"Initializes a standard, optimal, or custom color palette_GDIPlus_BrushClone Clone a Brush object"},{label:"_GDIPlus_BrushDispose",documentation:"Release a Brush object"},{label:"_GDIPlus_BrushGetType",documentation:"Retrieve the type of Brush object_GDIPlus_HatchBrushCreate Creates a HatchBrush object based on a hatch style, a foreground color, and a background color_GDIPlus_LineBrushCreate Creates a LinearGradientBrush object from a set of boundary points and boundary colors"},{label:"_GDIPlus_LineBrushCreateFromRect",documentation:"Creates a LinearGradientBrush object from a rectangle and boundary colors"},{label:"_GDIPlus_LineBrushCreateFromRectWithAngle",documentation:"Creates a LinearGradientBrush object from a rectangle, boundary colors and angle of direction"},{label:"_GDIPlus_LineBrushGetColors",documentation:"Gets the starting color and ending color of a linear gradient brush"},{label:"_GDIPlus_LineBrushGetRect",documentation:"Gets the rectangle that defines the boundaries of a linear gradient brush"},{label:"_GDIPlus_LineBrushMultiplyTransform",documentation:"Updates a brush's transformation matrix with the product of itself and another matrix"},{label:"_GDIPlus_LineBrushResetTransform",documentation:"Resets the transformation matrix of a linear gradient brush to the identity matrix"},{label:"_GDIPlus_LineBrushSetBlend",documentation:"Sets the blend factors and the blend positions of a linear gradient brush to create a custom blend"},{label:"_GDIPlus_LineBrushSetColors",documentation:"Sets the starting color and ending color of a linear gradient brush"},{label:"_GDIPlus_LineBrushSetGammaCorrection",documentation:"Specifies whether gamma correction is enabled for a linear gradient brush"},{label:"_GDIPlus_LineBrushSetLinearBlend",documentation:"Sets the blend shape of a linear gradient brush to create a custom blend based on a triangular shape"},{label:"_GDIPlus_LineBrushSetPresetBlend",documentation:"Sets the colors to be interpolated for a linear gradient brush and their corresponding blend positions"},{label:"_GDIPlus_LineBrushSetSigmaBlend",documentation:"Sets the blend shape of a linear gradient brush to create a custom blend based on a bell-shaped curve"},{label:"_GDIPlus_LineBrushSetTransform",documentation:"Sets the transformation matrix of a linear gradient brush"},{label:"_GDIPlus_BrushCreateSolid",documentation:"Create a solid Brush object"},{label:"_GDIPlus_BrushGetSolidColor",documentation:"Get the color of a Solid Brush object"},{label:"_GDIPlus_BrushSetSolidColor",documentation:"Set the color of a Solid Brush object_GDIPlus_TextureCreate Creates a TextureBrush object based on an image and a wrap mode"},{label:"_GDIPlus_TextureCreate2",documentation:"Creates a TextureBrush object based on an image, a wrap mode and a defining rectangle"},{label:"_GDIPlus_TextureCreateIA",documentation:"Creates a TextureBrush object based on an image, a defining rectangle, and a set of image properties_GDIPlus_EffectCreate Creates an Effect object of the type specified by the guid parameter"},{label:"_GDIPlus_EffectCreateBlur",documentation:"Creates a Blur class effect object"},{label:"_GDIPlus_EffectCreateBrightnessContrast",documentation:"Creates a BrightnessContrast class effect object"},{label:"_GDIPlus_EffectCreateColorBalance",documentation:"Creates a ColorBalance class effect object"},{label:"_GDIPlus_EffectCreateColorCurve",documentation:"Creates a ColorBalance class effect object"},{label:"_GDIPlus_EffectCreateColorLUT",documentation:"Creates a ColorLUT class effect object"},{label:"_GDIPlus_EffectCreateColorMatrix",documentation:"Creates a ColorMatrixEffect class effect object"},{label:"_GDIPlus_EffectCreateHueSaturationLightness",documentation:"Creates a HueSaturationLightness class effect object"},{label:"_GDIPlus_EffectCreateLevels",documentation:"Creates a Levels class effect object"},{label:"_GDIPlus_EffectCreateRedEyeCorrection",documentation:"Creates a RedEyeCorrection class effect object"},{label:"_GDIPlus_EffectCreateSharpen",documentation:"Creates a Sharpen class effect object"},{label:"_GDIPlus_EffectCreateTint",documentation:"Creates a Tint class effect object"},{label:"_GDIPlus_EffectDispose",documentation:"Deletes the specified Effect object"},{label:"_GDIPlus_EffectGetParameters",documentation:"Returns the parameters for the specified Effect object"},{label:"_GDIPlus_EffectSetParameters",documentation:"Sets the parameters for the specified Effect object_GDIPlus_FontCreate Create a Font object"},{label:"_GDIPlus_FontDispose",documentation:"Release a Font object"},{label:"_GDIPlus_FontGetHeight",documentation:"Gets the line spacing of a font in the current unit of a specified Graphics object_GDIPlus_FontPrivateAddFont Adds a font file to the private font collection"},{label:"_GDIPlus_FontPrivateAddMemoryFont",documentation:"Adds a font that is contained in system memory to a Microsoft® Windows® GDI+ font collection"},{label:"_GDIPlus_FontPrivateCollectionDispose",documentation:"Deletes the specified PrivateFontCollection object"},{label:"_GDIPlus_FontPrivateCreateCollection",documentation:"Creates a PrivateFont Collection object_GDIPlus_FontFamilyCreate Create a Font Family object"},{label:"_GDIPlus_FontFamilyCreateFromCollection",documentation:"Creates a FontFamily object based on a specified font family"},{label:"_GDIPlus_FontFamilyDispose",documentation:"Release a Font Family object"},{label:"_GDIPlus_FontFamilyGetCellAscent",documentation:"Gets the cell ascent, in design units, of a font family for the specified style or style combination"},{label:"_GDIPlus_FontFamilyGetCellDescent",documentation:"Gets the cell descent, in design units, of a font family for the specified style or style combination"},{label:"_GDIPlus_FontFamilyGetEmHeight",documentation:"Gets the size (commonly called em size or em height), in design units, of a font family"},{label:"_GDIPlus_FontFamilyGetLineSpacing",documentation:"Gets the line spacing, in design units, of this font family for the specified style or style combination_GDIPlus_GraphicsClear Clears a Graphics object to a specified color"},{label:"_GDIPlus_GraphicsCreateFromHDC",documentation:"Create a Graphics object from a device context (DC)"},{label:"_GDIPlus_GraphicsCreateFromHWND",documentation:"Create a Graphics object from a window handle"},{label:"_GDIPlus_GraphicsDispose",documentation:"Release a Graphics object"},{label:"_GDIPlus_GraphicsDrawArc",documentation:"Draw an arc"},{label:"_GDIPlus_GraphicsDrawBezier",documentation:"Draw a bezier spline"},{label:"_GDIPlus_GraphicsDrawClosedCurve",documentation:"Draw a closed cardinal spline"},{label:"_GDIPlus_GraphicsDrawClosedCurve2",documentation:"Draws a closed cardinal spline"},{label:"_GDIPlus_GraphicsDrawCurve",documentation:"Draw a cardinal spline"},{label:"_GDIPlus_GraphicsDrawCurve2",documentation:"Draws a cardinal spline"},{label:"_GDIPlus_GraphicsDrawEllipse",documentation:"Draw an ellipse"},{label:"_GDIPlus_GraphicsDrawImage",documentation:"Draw an Image object"},{label:"_GDIPlus_GraphicsDrawImagePointsRect",documentation:"Draws an image"},{label:"_GDIPlus_GraphicsDrawImageRect",documentation:"Draws an image at a specified location"},{label:"_GDIPlus_GraphicsDrawImageRectRect",documentation:"Draw an Image object"},{label:"_GDIPlus_GraphicsDrawLine",documentation:"Draw a line"},{label:"_GDIPlus_GraphicsDrawPath",documentation:"Draws a sequence of lines and curves defined by a GraphicsPath object"},{label:"_GDIPlus_GraphicsDrawPie",documentation:"Draw a pie"},{label:"_GDIPlus_GraphicsDrawPolygon",documentation:"Draw a polygon"},{label:"_GDIPlus_GraphicsDrawRect",documentation:"Draw a rectangle"},{label:"_GDIPlus_GraphicsFillClosedCurve",documentation:"Fill a closed cardinal spline"},{label:"_GDIPlus_GraphicsFillClosedCurve2",documentation:"Creates a closed cardinal spline from an array of points and uses a brush to fill the interior of the spline"},{label:"_GDIPlus_GraphicsFillEllipse",documentation:"Fill an ellipse"},{label:"_GDIPlus_GraphicsFillPath",documentation:"Uses a brush to fill the interior of a path"},{label:"_GDIPlus_GraphicsFillPie",documentation:"Fill a pie"},{label:"_GDIPlus_GraphicsFillPolygon",documentation:"Fill a polygon"},{label:"_GDIPlus_GraphicsFillRect",documentation:"Fill a rectangle"},{label:"_GDIPlus_GraphicsFillRegion",documentation:"Uses a brush to fill a specified region"},{label:"_GDIPlus_GraphicsGetCompositingMode",documentation:"Gets the compositing mode currently set for a Graphics object"},{label:"_GDIPlus_GraphicsGetCompositingQuality",documentation:"Gets the compositing quality currently set for a Graphics object"},{label:"_GDIPlus_GraphicsGetDC",documentation:"Gets a handle to the device context of the Graphics object"},{label:"_GDIPlus_GraphicsGetInterpolationMode",documentation:"Gets the interpolation mode currently set for a Graphics object"},{label:"_GDIPlus_GraphicsGetSmoothingMode",documentation:"Gets the graphics object rendering quality"},{label:"_GDIPlus_GraphicsGetTransform",documentation:"Gets the world transformation matrix of a Graphics object"},{label:"_GDIPlus_GraphicsReleaseDC",documentation:"Releases the device context of the Graphics object"},{label:"_GDIPlus_GraphicsResetClip",documentation:"Sets the clipping region of a Graphics object to an infinite region"},{label:"_GDIPlus_GraphicsResetTransform",documentation:"Sets the world transformation matrix of a Graphics object to the identity matrix"},{label:"_GDIPlus_GraphicsRestore",documentation:"Restores the state of a Graphics object to the state stored by a previous call to the _GDIPlus_GraphicsSave method of the Graphics object"},{label:"_GDIPlus_GraphicsRotateTransform",documentation:"Updates the world transformation matrix of a Graphics object with the product of itself and a rotation matrix"},{label:"_GDIPlus_GraphicsSave",documentation:"Saves the current state (transformations, clipping region, and quality settings) of a Graphics object"},{label:"_GDIPlus_GraphicsScaleTransform",documentation:"Updates a Graphics object's world transformation matrix with the product of itself and a scaling matrix"},{label:"_GDIPlus_GraphicsSetClipPath",documentation:"Updates the clipping region of this Graphics object to a region that is the combination of itself and the region specified by a graphics path"},{label:"_GDIPlus_GraphicsSetClipRect",documentation:"Updates the clipping region of a Graphics object to a region that is the combination of itself and a rectangle"},{label:"_GDIPlus_GraphicsSetClipRegion",documentation:"Updates the clipping region of a Graphics object to a region that is the combination of itself and the region specified by a Region object"},{label:"_GDIPlus_GraphicsSetCompositingMode",documentation:"Sets the compositing mode of a Graphics object"},{label:"_GDIPlus_GraphicsSetCompositingQuality",documentation:"Sets the compositing quality of a Graphics object"},{label:"_GDIPlus_GraphicsSetInterpolationMode",documentation:"Sets the interpolation mode of a Graphics object"},{label:"_GDIPlus_GraphicsSetPixelOffsetMode",documentation:"Sets the pixel offset mode of a Graphics object"},{label:"_GDIPlus_GraphicsSetSmoothingMode",documentation:"Sets the graphics object rendering quality"},{label:"_GDIPlus_GraphicsSetTextRenderingHint",documentation:"Sets the contrast value of a Graphics object"},{label:"_GDIPlus_GraphicsSetTransform",documentation:"Sets the world transformation for a graphics object"},{label:"_GDIPlus_GraphicsTransformPoints",documentation:"Converts an array of points from one coordinate space to another"},{label:"_GDIPlus_GraphicsTranslateTransform",documentation:"Updates a Graphics object's world transformation matrix with the product of itself and a translation matrix_GDIPlus_Decoders Get an array of information about the available image decoders"},{label:"_GDIPlus_DecodersGetCount",documentation:"Get the number of available image decoders"},{label:"_GDIPlus_DecodersGetSize",documentation:"Get the total size of the structure that is returned by _GDIPlus_GetImageDecoders"},{label:"_GDIPlus_Encoders",documentation:"Get an array of information about the available image encoders"},{label:"_GDIPlus_EncodersGetCLSID",documentation:"Return the encoder CLSID for a specific image file type"},{label:"_GDIPlus_EncodersGetCount",documentation:"Get the number of available image encoders"},{label:"_GDIPlus_EncodersGetParamList",documentation:"Get the parameter list for a specified image encoder"},{label:"_GDIPlus_EncodersGetParamListSize",documentation:"Get the size of the parameter list for a specified image encoder"},{label:"_GDIPlus_EncodersGetSize",documentation:"Get the total size of the structure that is returned by _GDIPlus_GetImageEncoders"},{label:"_GDIPlus_ParamAdd",documentation:"Add a value to an encoder parameter list"},{label:"_GDIPlus_ParamInit",documentation:"Allocate an empty encoder parameter list"},{label:"_GDIPlus_ParamSize",documentation:"Get an encoder parameter size_GDIPlus_PathAddArc Adds an elliptical arc to the current figure of a path"},{label:"_GDIPlus_PathAddBezier",documentation:"Adds a bezier spline to the current figure of a path"},{label:"_GDIPlus_PathAddClosedCurve",documentation:"Adds a closed cardinal spline to a path"},{label:"_GDIPlus_PathAddClosedCurve2",documentation:"Adds a closed cardinal spline to a path"},{label:"_GDIPlus_PathAddCurve",documentation:"Adds a cardinal spline to the current figure of a path"},{label:"_GDIPlus_PathAddCurve2",documentation:"Adds a cardinal spline to the current figure of a path"},{label:"_GDIPlus_PathAddCurve3",documentation:"Adds a cardinal spline to the current figure of a path"},{label:"_GDIPlus_PathAddEllipse",documentation:"Adds an ellipse to the current figure a path"},{label:"_GDIPlus_PathAddLine",documentation:"Adds a line to the current figure of a path"},{label:"_GDIPlus_PathAddLine2",documentation:"Adds a sequence of lines to the current figure of a path"},{label:"_GDIPlus_PathAddPath",documentation:"Adds a path to another path"},{label:"_GDIPlus_PathAddPie",documentation:"Adds a pie to a path"},{label:"_GDIPlus_PathAddPolygon",documentation:"Adds a polygon to a path"},{label:"_GDIPlus_PathAddRectangle",documentation:"Adds a rectangle to a path"},{label:"_GDIPlus_PathAddString",documentation:"Adds the outline of a string to a path"},{label:"_GDIPlus_PathClone",documentation:"Clones a path"},{label:"_GDIPlus_PathCloseFigure",documentation:"Closes the current figure of a path"},{label:"_GDIPlus_PathCreate",documentation:"Creates a GraphicsPath object and initializes the fill mode"},{label:"_GDIPlus_PathCreate2",documentation:"Creates a GraphicsPath object based on an array of points, an array of types, and a fill mode"},{label:"_GDIPlus_PathDispose",documentation:"Releases a GraphicsPath object"},{label:"_GDIPlus_PathFlatten",documentation:"Applies a transformation to a path and converts each curve in the path to a sequence of connected lines"},{label:"_GDIPlus_PathGetData",documentation:"Gets an array of points and types from a path"},{label:"_GDIPlus_PathGetFillMode",documentation:"Gets the fill mode of a path"},{label:"_GDIPlus_PathGetLastPoint",documentation:"Gets the ending point of the last figure in a path"},{label:"_GDIPlus_PathGetPointCount",documentation:"Gets the number of points in a path's array of data points"},{label:"_GDIPlus_PathGetPoints",documentation:"Gets an array of points from a path"},{label:"_GDIPlus_PathGetWorldBounds",documentation:"Gets the bounding rectangle for a path"},{label:"_GDIPlus_PathIsOutlineVisiblePoint",documentation:"Determines whether a specified point touches the outline of a path with the specified Graphics and Pen"},{label:"_GDIPlus_PathIsVisiblePoint",documentation:"Determines whether a specified point lies in the area that is filled when a path is filled by a specified Graphics object"},{label:"_GDIPlus_PathReset",documentation:"Empties a path and sets the fill mode to alternate (0)"},{label:"_GDIPlus_PathReverse",documentation:"Reverses the order of the points that define a path's lines and curves"},{label:"_GDIPlus_PathSetFillMode",documentation:"Sets the fill mode of a path"},{label:"_GDIPlus_PathSetMarker",documentation:"Designates the last point in a path as a marker point"},{label:"_GDIPlus_PathStartFigure",documentation:"Starts a new figure without closing the current figure. Subsequent points added to a path are added to the new figure"},{label:"_GDIPlus_PathTransform",documentation:"Multiplies each of a path's data points by a specified matrix"},{label:"_GDIPlus_PathWarp",documentation:"Applies a warp transformation to a path. The function also flattens (converts to a sequence of straight lines) the path"},{label:"_GDIPlus_PathWiden",documentation:"Replaces a path with curves that enclose the area that is filled when the path is drawn by a specified pen. The function also flattens the path"},{label:"_GDIPlus_PathWindingModeOutline",documentation:"Transforms and flattens a path, and then converts the path's data points so that they represent only the outline of the path_GDIPlus_DrawImageFX Draws a portion of an image after applying a specified effect"},{label:"_GDIPlus_DrawImageFXEx",documentation:"Draws a portion of an image after applying a specified effect"},{label:"_GDIPlus_DrawImagePoints",documentation:"Draws an image at a specified location"},{label:"_GDIPlus_ImageDispose",documentation:"Release an image object"},{label:"_GDIPlus_ImageGetDimension",documentation:"Gets the width and height of an image which is supported by GDIPlus"},{label:"_GDIPlus_ImageGetFlags",documentation:"Returns enumeration of pixel data attributes contained in an image"},{label:"_GDIPlus_ImageGetGraphicsContext",documentation:"Get the graphics context of the image"},{label:"_GDIPlus_ImageGetHeight",documentation:"Get the image height"},{label:"_GDIPlus_ImageGetHorizontalResolution",documentation:"Returns horizontal resolution in DPI (pixels per inch) of an image"},{label:"_GDIPlus_ImageGetPixelFormat",documentation:"Returns pixel format of an image: Bits per pixel, Alpha channels, RGB, Grayscale, Indexed etc"},{label:"_GDIPlus_ImageGetRawFormat",documentation:"Returns file format GUID and image format name of an image"},{label:"_GDIPlus_ImageGetThumbnail",documentation:"Gets a thumbnail image from this Image object"},{label:"_GDIPlus_ImageGetType",documentation:"Returns type (bitmap or metafile) of an image"},{label:"_GDIPlus_ImageGetVerticalResolution",documentation:"Returns vertical resolution in DPI (pixels per inch) of an image"},{label:"_GDIPlus_ImageGetWidth",documentation:"Get the image width"},{label:"_GDIPlus_ImageLoadFromFile",documentation:"Create an image object based on a file"},{label:"_GDIPlus_ImageLoadFromStream",documentation:"Creates an Image object based on a stream"},{label:"_GDIPlus_ImageResize",documentation:"Resize an image to a new given size"},{label:"_GDIPlus_ImageRotateFlip",documentation:"Rotates and flips an image"},{label:"_GDIPlus_ImageSaveToFile",documentation:"Save an image to file"},{label:"_GDIPlus_ImageSaveToFileEx",documentation:"Save an image to file"},{label:"_GDIPlus_ImageSaveToStream",documentation:"Saves an Image object to a stream"},{label:"_GDIPlus_ImageScale",documentation:"Scales an image by a given factor"},{label:"_GDIPlus_ImageAttributesCreate",documentation:"Creates an ImageAttributes object"},{label:"_GDIPlus_ImageAttributesDispose",documentation:"Releases an ImageAttributes object"},{label:"_GDIPlus_ImageAttributesSetColorKeys",documentation:"Sets or clears the color key (transparency range) for a specified category"},{label:"_GDIPlus_ImageAttributesSetColorMatrix",documentation:"Sets or clears the color- and grayscale-adjustment matrices for a specified category_GDIPlus_MatrixClone Clones a Matrix object"},{label:"_GDIPlus_MatrixCreate",documentation:"Creates and initializes a Matrix object that represents the identity matrix"},{label:"_GDIPlus_MatrixDispose",documentation:"Release a matrix object"},{label:"_GDIPlus_MatrixGetElements",documentation:"Gets the elements of a matrix"},{label:"_GDIPlus_MatrixInvert",documentation:"Replaces the elements of a matrix with the elements of its inverse"},{label:"_GDIPlus_MatrixMultiply",documentation:"Updates a matrix with the product of itself and another matrix"},{label:"_GDIPlus_MatrixRotate",documentation:"Updates a matrix with the product of itself and a rotation matrix"},{label:"_GDIPlus_MatrixScale",documentation:"Updates a matrix with the product of itself and a scaling matrix"},{label:"_GDIPlus_MatrixSetElements",documentation:"Sets the elements of a matrix"},{label:"_GDIPlus_MatrixShear",documentation:"Updates a matrix with the product of itself and another matrix"},{label:"_GDIPlus_MatrixTransformPoints",documentation:"Multiplies each point in an array by a matrix"},{label:"_GDIPlus_MatrixTranslate",documentation:"Updates a matrix with the product of itself and a translation matrix_GDIPlus_ColorMatrixCreate Creates and initializes an identity color matrix"},{label:"_GDIPlus_ColorMatrixCreateGrayScale",documentation:"Creates and initializes a gray-scaling color matrix"},{label:"_GDIPlus_ColorMatrixCreateNegative",documentation:"Creates and initializes a negative color matrix"},{label:"_GDIPlus_ColorMatrixCreateSaturation",documentation:"Creates and initializes a saturation color matrix"},{label:"_GDIPlus_ColorMatrixCreateScale",documentation:"Creates and initializes a scaling color matrix"},{label:"_GDIPlus_ColorMatrixCreateTranslate",documentation:"Creates and initializes a translation color matrix"},{label:"_GDIPlus_PathBrushCreate",documentation:"Creates a PathGradientBrush object based on an array of points and initializes the wrap mode of the brush"},{label:"_GDIPlus_PathBrushCreateFromPath",documentation:"Creates a PathGradientBrush object based on a GraphicsPath object"},{label:"_GDIPlus_PathBrushGetCenterPoint",documentation:"Gets the center point of a path gradient brush"},{label:"_GDIPlus_PathBrushGetFocusScales",documentation:"Gets the focus scales of a path gradient brush"},{label:"_GDIPlus_PathBrushGetPointCount",documentation:"Gets the number of points in the array of points that defines a brush's boundary path"},{label:"_GDIPlus_PathBrushGetRect",documentation:"Gets the smallest rectangle that encloses the boundary path of a path gradient brush"},{label:"_GDIPlus_PathBrushGetWrapMode",documentation:"Gets the wrap mode currently set for a path gradient brush"},{label:"_GDIPlus_PathBrushMultiplyTransform",documentation:"Updates a brush's transformation matrix with the product of itself and another matrix"},{label:"_GDIPlus_PathBrushResetTransform",documentation:"Resets the transformation matrix of a path gradient brush to the identity matrix"},{label:"_GDIPlus_PathBrushSetBlend",documentation:"Sets the blend factors and the blend positions of a path gradient brush"},{label:"_GDIPlus_PathBrushSetCenterColor",documentation:"Sets the color of the center point of a path gradient brush"},{label:"_GDIPlus_PathBrushSetCenterPoint",documentation:"Sets the center point of a path gradient brush"},{label:"_GDIPlus_PathBrushSetFocusScales",documentation:"Sets the focus scales of a path gradient brush"},{label:"_GDIPlus_PathBrushSetGammaCorrection",documentation:"Specifies whether gamma correction is enabled for a path gradient brush"},{label:"_GDIPlus_PathBrushSetLinearBlend",documentation:"Sets the blend shape of a path gradient brush to create a custom blend based on a triangular shape"},{label:"_GDIPlus_PathBrushSetPresetBlend",documentation:"Sets the preset colors and the blend positions of a path gradient brush"},{label:"_GDIPlus_PathBrushSetSigmaBlend",documentation:"Sets the blend shape of a path gradient brush to create a custom blend based on a bell-shaped curve"},{label:"_GDIPlus_PathBrushSetSurroundColor",documentation:"Sets the surround color for a path gradient brush"},{label:"_GDIPlus_PathBrushSetSurroundColorsWithCount",documentation:"Sets the surround colors currently specified for a path gradient brush"},{label:"_GDIPlus_PathBrushSetTransform",documentation:"Sets the transformation matrix of a path gradient brush"},{label:"_GDIPlus_PathBrushSetWrapMode",documentation:"Sets the wrap mode of a path gradient brush"},{label:"_GDIPlus_PathIterCreate",documentation:"Creates a new GraphicsPathIterator object and associates it with a GraphicsPath object"},{label:"_GDIPlus_PathIterDispose",documentation:"Releases a GraphicsPathIterator object"},{label:"_GDIPlus_PathIterGetSubpathCount",documentation:"Gets the number of subpaths (also called figures) in the path"},{label:"_GDIPlus_PathIterNextMarkerPath",documentation:"Gets the next marker-delimited section of an iterator's associated path"},{label:"_GDIPlus_PathIterNextSubpathPath",documentation:"Gets the next figure (subpath) from an iterator's associated path"},{label:"_GDIPlus_PathIterRewind",documentation:"Rewinds an iterator to the beginning of its associated path"},{label:"_GDIPlus_PenCreate",documentation:"Create a pen object"},{label:"_GDIPlus_PenCreate2",documentation:"Creates a Pen object that uses the attributes of a brush"},{label:"_GDIPlus_PenDispose",documentation:"Release a pen object"},{label:"_GDIPlus_PenGetAlignment",documentation:"Gets the pen alignment"},{label:"_GDIPlus_PenGetColor",documentation:"Gets the pen color"},{label:"_GDIPlus_PenGetCustomEndCap",documentation:"Gets the custom end cap for the pen"},{label:"_GDIPlus_PenGetDashCap",documentation:"Gets the pen dash cap style"},{label:"_GDIPlus_PenGetDashStyle",documentation:"Gets the pen dash style"},{label:"_GDIPlus_PenGetEndCap",documentation:"Gets the pen end cap"},{label:"_GDIPlus_PenGetMiterLimit",documentation:"Gets the miter length currently set for a Pen object"},{label:"_GDIPlus_PenGetWidth",documentation:"Retrieve the width of a pen"},{label:"_GDIPlus_PenSetAlignment",documentation:"Sets the pen alignment"},{label:"_GDIPlus_PenSetColor",documentation:"Sets the pen color"},{label:"_GDIPlus_PenSetCustomEndCap",documentation:"Sets the custom end cap for the pen"},{label:"_GDIPlus_PenSetDashCap",documentation:"Sets the pen dash cap style"},{label:"_GDIPlus_PenSetDashStyle",documentation:"Sets the pen dash style"},{label:"_GDIPlus_PenSetEndCap",documentation:"Sets the pen end cap"},{label:"_GDIPlus_PenSetLineCap",documentation:"Sets the cap styles for the start, end, and dashes in a line drawn with the pen"},{label:"_GDIPlus_PenSetLineJoin",documentation:"Sets the line join for a Pen object"},{label:"_GDIPlus_PenSetMiterLimit",documentation:"Sets the miter limit of a Pen object"},{label:"_GDIPlus_PenSetStartCap",documentation:"Sets the start cap for a Pen object"},{label:"_GDIPlus_PenSetWidth",documentation:"Sets the width of a pen"},{label:"_GDIPlus_RegionClone",documentation:"Clones a Region object"},{label:"_GDIPlus_RegionCombinePath",documentation:"Updates a region to the portion of itself that intersects the specified path's interior"},{label:"_GDIPlus_RegionCombineRect",documentation:"Updates a region to the portion of itself that intersects the specified rectangle's interior"},{label:"_GDIPlus_RegionCombineRegion",documentation:"Updates a region to the portion of itself that intersects another region"},{label:"_GDIPlus_RegionCreate",documentation:"Creates a region that is infinite"},{label:"_GDIPlus_RegionCreateFromPath",documentation:"Creates a region that is defined by a path object and has a fill mode that is contained in the path object"},{label:"_GDIPlus_RegionCreateFromRect",documentation:"Creates a region that is defined by a rectangle"},{label:"_GDIPlus_RegionDispose",documentation:"Releases a Region object"},{label:"_GDIPlus_RegionGetBounds",documentation:"Gets a rectangle that encloses a region"},{label:"_GDIPlus_RegionGetHRgn",documentation:"Creates a GDI region from a GDI+ Region object"},{label:"_GDIPlus_RegionTransform",documentation:"Tansforms a region by multiplying each of its data points by a specified matrix"},{label:"_GDIPlus_RegionTranslate",documentation:"Offsets a region by specified amounts in the horizontal and vertical directions"},{label:"_GDIPlus_StringFormatCreate",documentation:"Create a String Format object"},{label:"_GDIPlus_StringFormatDispose",documentation:"Release a String Format object"},{label:"_GDIPlus_StringFormatGetMeasurableCharacterRangeCount",documentation:"Gets the number of measurable character ranges that are currently set for a StringFormat object"},{label:"_GDIPlus_StringFormatSetAlign",documentation:"Sets the text alignment of a string format object"},{label:"_GDIPlus_StringFormatSetLineAlign",documentation:"Sets the line alignment of a StringFormat object in relation to the origin of a layout rectangle"},{label:"_GDIPlus_StringFormatSetMeasurableCharacterRanges",documentation:"Sets a series of character ranges for a StringFormat object that, when in a string, can be measured_GDIPlus_GraphicsDrawString Draw a string"},{label:"_GDIPlus_GraphicsDrawStringEx",documentation:"Draw a string"},{label:"_GDIPlus_GraphicsMeasureCharacterRanges",documentation:"Gets a set of region objects each of which bounds a range of character positions within a string"},{label:"_GDIPlus_GraphicsMeasureString",documentation:"Measures the size of a string"}],t.CompletionItemKind.Function,"GDIPlus UDF","GDIPlus.au3"),Kn=(0,Ce.fillCompletions)([{label:"_GUICtrlAVI_Close",documentation:"Closes an AVI clip"},{label:"_GUICtrlAVI_Create",documentation:"Creates an AVI control"},{label:"_GUICtrlAVI_Destroy",documentation:"Delete the control"},{label:"_GUICtrlAVI_IsPlaying",documentation:"Checks whether an Audio-Video Interleaved (AVI) clip is playing"},{label:"_GUICtrlAVI_Open",documentation:"Opens an AVI clip and displays its first frame in an animation control"},{label:"_GUICtrlAVI_OpenEx",documentation:"Opens an AVI clip and displays its first frame in an animation control"},{label:"_GUICtrlAVI_Play",documentation:"Plays an AVI clip in an animation control"},{label:"_GUICtrlAVI_Seek",documentation:"Directs an AVI control to display a particular frame of an AVI clip"},{label:"_GUICtrlAVI_Show",documentation:"Show/Hide the AVI control"},{label:"_GUICtrlAVI_Stop",documentation:"Stops playing an AVI clip"}],t.CompletionItemKind.Function,"GuiAVI UDF","GuiAVI.au3"),qn=(0,Ce.fillCompletions)([{label:"_GUICtrlButton_Click",documentation:"Simulates the user clicking a button"},{label:"_GUICtrlButton_Create",documentation:"Creates a Button control"},{label:"_GUICtrlButton_Destroy",documentation:"Delete the Button control"},{label:"_GUICtrlButton_Enable",documentation:"Enables or disables mouse and keyboard input to the specified button"},{label:"_GUICtrlButton_GetCheck",documentation:"Gets the check state of a radio button or check box"},{label:"_GUICtrlButton_GetFocus",documentation:"Retrieves if the button has keyboard focus"},{label:"_GUICtrlButton_GetIdealSize",documentation:"Gets the size of the button that best fits its text and image, if an image list is present"},{label:"_GUICtrlButton_GetImage",documentation:"Retrieves a handle to the image (icon or bitmap) associated with the button"},{label:"_GUICtrlButton_GetImageList",documentation:"Retrieves an array that describes the image list assigned to a button control"},{label:"_GUICtrlButton_GetNote",documentation:"Gets the text of the note associated with the Command Link button"},{label:"_GUICtrlButton_GetNoteLength",documentation:"Gets the length of the note text that may be displayed in the description for a command link button"},{label:"_GUICtrlButton_GetSplitInfo",documentation:"Gets information for a split button control"},{label:"_GUICtrlButton_GetState",documentation:"Determines the state of a button or check box"},{label:"_GUICtrlButton_GetText",documentation:"Retrieve the text of the button"},{label:"_GUICtrlButton_GetTextMargin",documentation:"Gets the margins used to draw text in a button control"},{label:"_GUICtrlButton_SetCheck",documentation:"Sets the check state of a radio button or check box"},{label:"_GUICtrlButton_SetDontClick",documentation:"Sets the state of $BST_DONTCLICK flag on a button"},{label:"_GUICtrlButton_SetFocus",documentation:"Sets the keyboard focus to the specified button"},{label:"_GUICtrlButton_SetImage",documentation:"Sets the image of a button"},{label:"_GUICtrlButton_SetImageList",documentation:"Assigns an image list to a button control"},{label:"_GUICtrlButton_SetNote",documentation:"Sets the text of the note associated with a command link button"},{label:"_GUICtrlButton_SetShield",documentation:"Sets the elevation required state for a specified button or command link to display an elevated icon"},{label:"_GUICtrlButton_SetSize",documentation:"Sets the size of the button"},{label:"_GUICtrlButton_SetSplitInfo",documentation:"Gets information for a split button control"},{label:"_GUICtrlButton_SetState",documentation:"Sets the highlight state of a button. The highlight state indicates whether the button is highlighted as if the user had pushed it"},{label:"_GUICtrlButton_SetStyle",documentation:"Sets the style of a button"},{label:"_GUICtrlButton_SetText",documentation:"Sets the text of the button"},{label:"_GUICtrlButton_SetTextMargin",documentation:"Sets the margins for drawing text in a button control"},{label:"_GUICtrlButton_Show",documentation:"Show/Hide button"}],t.CompletionItemKind.Function,"GuiButton UDF","GuiButton.au3"),Qn=(0,Ce.fillCompletions)([{label:"_GUICtrlComboBox_AddDir",documentation:"Adds the names of directories and files"},{label:"_GUICtrlComboBox_AddString",documentation:"Add a string"},{label:"_GUICtrlComboBox_AutoComplete",documentation:"AutoComplete a ComboBox edit control"},{label:"_GUICtrlComboBox_BeginUpdate",documentation:"Prevents updating of the control until the EndUpdate function is called"},{label:"_GUICtrlComboBox_Create",documentation:"Create a ComboBox control"},{label:"_GUICtrlComboBox_DeleteString",documentation:"Delete a string"},{label:"_GUICtrlComboBox_Destroy",documentation:"Delete the control"},{label:"_GUICtrlComboBox_EndUpdate",documentation:"Enables screen repainting that was turned off with the BeginUpdate function"},{label:"_GUICtrlComboBox_FindString",documentation:"Search for a string"},{label:"_GUICtrlComboBox_FindStringExact",documentation:"Search for a string"},{label:"_GUICtrlComboBox_GetComboBoxInfo",documentation:"Gets information about the specified ComboBox"},{label:"_GUICtrlComboBox_GetCount",documentation:"Retrieve the number of items"},{label:"_GUICtrlComboBox_GetCueBanner",documentation:"Gets the cue banner text displayed in the edit control of a combo box"},{label:"_GUICtrlComboBox_GetCurSel",documentation:"Retrieve the index of the currently selected item"},{label:"_GUICtrlComboBox_GetDroppedControlRect",documentation:"Retrieve the screen coordinates of a combo box in its dropped-down state"},{label:"_GUICtrlComboBox_GetDroppedControlRectEx",documentation:"Retrieve the screen coordinates of a combo box in its dropped-down state"},{label:"_GUICtrlComboBox_GetDroppedState",documentation:"Determines whether the ListBox of a ComboBox is dropped down"},{label:"_GUICtrlComboBox_GetDroppedWidth",documentation:"Retrieve the minimum allowable width, of the ListBox of a ComboBox"},{label:"_GUICtrlComboBox_GetEditSel",documentation:"Gets the starting and ending character positions of the current selection in the edit control of a ComboBox"},{label:"_GUICtrlComboBox_GetEditText",documentation:"Get the text from the edit control of a ComboBox"},{label:"_GUICtrlComboBox_GetExtendedUI",documentation:"Determines whether a ComboBox has the default user interface or the extended user interface"},{label:"_GUICtrlComboBox_GetHorizontalExtent",documentation:"Gets the width, in pixels, that the ListBox of a ComboBox control can be scrolled horizontally"},{label:"_GUICtrlComboBox_GetItemHeight",documentation:"Determines the height of list items or the selection field in a ComboBox"},{label:"_GUICtrlComboBox_GetLBText",documentation:"Retrieve a string from the list of a ComboBox"},{label:"_GUICtrlComboBox_GetLBTextLen",documentation:"Gets the length, in characters, of a string in the list of a combo box"},{label:"_GUICtrlComboBox_GetList",documentation:"Retrieves all items from the list portion of a ComboBox control"},{label:"_GUICtrlComboBox_GetListArray",documentation:"Retrieves all items from the list portion of a ComboBox control"},{label:"_GUICtrlComboBox_GetLocale",documentation:"Retrieves the current locale"},{label:"_GUICtrlComboBox_GetLocaleCountry",documentation:"Retrieves the current country code"},{label:"_GUICtrlComboBox_GetLocaleLang",documentation:"Retrieves the current language identifier"},{label:"_GUICtrlComboBox_GetLocalePrimLang",documentation:"Extract primary language id from a language id"},{label:"_GUICtrlComboBox_GetLocaleSubLang",documentation:"Extract sublanguage id from a language id"},{label:"_GUICtrlComboBox_GetMinVisible",documentation:"Retrieve the minimum number of visible items in the drop-down list of a ComboBox"},{label:"_GUICtrlComboBox_GetTopIndex",documentation:"Retrieve the 0-based index of the first visible item in the ListBox portion of a ComboBox"},{label:"_GUICtrlComboBox_InitStorage",documentation:"Allocates memory for storing ListBox items"},{label:"_GUICtrlComboBox_InsertString",documentation:"Insert a string"},{label:"_GUICtrlComboBox_LimitText",documentation:"Limits the length of the text the user may type into the edit control of a ComboBox"},{label:"_GUICtrlComboBox_ReplaceEditSel",documentation:"Replace text selected in edit box"},{label:"_GUICtrlComboBox_ResetContent",documentation:"Remove all items from the ListBox and edit control of a ComboBox"},{label:"_GUICtrlComboBox_SelectString",documentation:"Searches the ListBox of a ComboBox for an item that begins with the characters in a specified string"},{label:"_GUICtrlComboBox_SetCueBanner",documentation:"Sets the cue banner text that is displayed for the edit control of a combo box"},{label:"_GUICtrlComboBox_SetCurSel",documentation:"Select a string in the list of a ComboBox"},{label:"_GUICtrlComboBox_SetDroppedWidth",documentation:"Set the maximum allowable width, in pixels, of the ListBox of a ComboBox"},{label:"_GUICtrlComboBox_SetEditSel",documentation:"Select characters in the edit control of a ComboBox"},{label:"_GUICtrlComboBox_SetEditText",documentation:"Set the text of the edit control of the ComboBox"},{label:"_GUICtrlComboBox_SetExtendedUI",documentation:"Select either the default user interface or the extended user interface"},{label:"_GUICtrlComboBox_SetHorizontalExtent",documentation:"Set the width, in pixels, by which a list box can be scrolled horizontally"},{label:"_GUICtrlComboBox_SetItemHeight",documentation:"Set the height of list items or the selection field in a ComboBox"},{label:"_GUICtrlComboBox_SetMinVisible",documentation:"Set the minimum number of visible items in the drop-down list of a ComboBox"},{label:"_GUICtrlComboBox_SetTopIndex",documentation:"Ensure that a particular item is visible in the ListBox of a ComboBox"},{label:"_GUICtrlComboBox_ShowDropDown",documentation:"Show or hide the ListBox of a ComboBox"}],t.CompletionItemKind.Function,"GuiComboBox UDF","GuiComboBox.au3"),Jn=(0,Ce.fillCompletions)([{label:"_GUICtrlComboBoxEx_AddDir",documentation:"Adds the names of directories and files"},{label:"_GUICtrlComboBoxEx_AddString",documentation:"Add a string"},{label:"_GUICtrlComboBoxEx_BeginUpdate",documentation:"Prevents updating of the control until the EndUpdate function is called"},{label:"_GUICtrlComboBoxEx_Create",documentation:"Create a ComboBoxEx control"},{label:"_GUICtrlComboBoxEx_CreateSolidBitMap",documentation:"Creates a solid color bitmap"},{label:"_GUICtrlComboBoxEx_DeleteString",documentation:"Removes an item from a ComboBoxEx control"},{label:"_GUICtrlComboBoxEx_Destroy",documentation:"Delete the control"},{label:"_GUICtrlComboBoxEx_EndUpdate",documentation:"Enables screen repainting that was turned off with the BeginUpdate function"},{label:"_GUICtrlComboBoxEx_FindStringExact",documentation:"Search for a string"},{label:"_GUICtrlComboBoxEx_GetComboBoxInfo",documentation:"Gets information about the specified ComboBox"},{label:"_GUICtrlComboBoxEx_GetComboControl",documentation:"Gets the handle to the child combo box control"},{label:"_GUICtrlComboBoxEx_GetCount",documentation:"Retrieve the number of items"},{label:"_GUICtrlComboBoxEx_GetCurSel",documentation:"Retrieve the index of the currently selected item"},{label:"_GUICtrlComboBoxEx_GetDroppedControlRect",documentation:"Retrieve the screen coordinates of a combo box in its dropped-down state"},{label:"_GUICtrlComboBoxEx_GetDroppedControlRectEx",documentation:"Retrieve the screen coordinates of a combo box in its dropped-down state"},{label:"_GUICtrlComboBoxEx_GetDroppedState",documentation:"Determines whether the ListBox of a ComboBox is dropped down"},{label:"_GUICtrlComboBoxEx_GetDroppedWidth",documentation:"Retrieve the minimum allowable width, of the ListBox of a ComboBox"},{label:"_GUICtrlComboBoxEx_GetEditControl",documentation:"Gets the handle to the edit control portion of a ComboBoxEx control"},{label:"_GUICtrlComboBoxEx_GetEditSel",documentation:"Gets the starting and ending character positions of the current selection in the edit control of a ComboBox"},{label:"_GUICtrlComboBoxEx_GetEditText",documentation:"Get the text from the edit control of a ComboBoxEx"},{label:"_GUICtrlComboBoxEx_GetExtendedStyle",documentation:"Gets the extended styles that are in use for a ComboBoxEx control"},{label:"_GUICtrlComboBoxEx_GetExtendedUI",documentation:"Determines whether a ComboBox has the default user interface or the extended user interface"},{label:"_GUICtrlComboBoxEx_GetImageList",documentation:"Retrieves the handle to an image list assigned to a ComboBoxEx control"},{label:"_GUICtrlComboBoxEx_GetItem",documentation:"Retrieves an item's attributes"},{label:"_GUICtrlComboBoxEx_GetItemEx",documentation:"Retrieves some or all of an item's attributes"},{label:"_GUICtrlComboBoxEx_GetItemHeight",documentation:"Determines the height of list items or the selection field in a ComboBox"},{label:"_GUICtrlComboBoxEx_GetItemImage",documentation:"Retrieves the index of the item's icon"},{label:"_GUICtrlComboBoxEx_GetItemIndent",documentation:"Retrieves the number of image widths the item is indented"},{label:"_GUICtrlComboBoxEx_GetItemOverlayImage",documentation:"Retrieves the index of the item's overlay image icon"},{label:"_GUICtrlComboBoxEx_GetItemParam",documentation:"Retrieves the application specific value of the item"},{label:"_GUICtrlComboBoxEx_GetItemSelectedImage",documentation:"Retrieves the index of the item's selected image icon"},{label:"_GUICtrlComboBoxEx_GetItemText",documentation:"Retrieve a string from the list of a ComboBox"},{label:"_GUICtrlComboBoxEx_GetItemTextLen",documentation:"Gets the length, in characters, of a string in the list of a combo box"},{label:"_GUICtrlComboBoxEx_GetList",documentation:"Retrieves all items from the list portion of a ComboBox control"},{label:"_GUICtrlComboBoxEx_GetListArray",documentation:"Retrieves all items from the list portion of a ComboBox control"},{label:"_GUICtrlComboBoxEx_GetLocale",documentation:"Retrieves the current locale"},{label:"_GUICtrlComboBoxEx_GetLocaleCountry",documentation:"Retrieves the current country code"},{label:"_GUICtrlComboBoxEx_GetLocaleLang",documentation:"Retrieves the current language identifier"},{label:"_GUICtrlComboBoxEx_GetLocalePrimLang",documentation:"Extract primary language id from a language id"},{label:"_GUICtrlComboBoxEx_GetLocaleSubLang",documentation:"Extract sublanguage id from a language id"},{label:"_GUICtrlComboBoxEx_GetMinVisible",documentation:"Retrieve the minimum number of visible items in the drop-down list of a ComboBox"},{label:"_GUICtrlComboBoxEx_GetTopIndex",documentation:"Retrieve the 0-based index of the first visible item in the ListBox portion of a ComboBox"},{label:"_GUICtrlComboBoxEx_GetUnicode",documentation:"Retrieves if control is using Unicode"},{label:"_GUICtrlComboBoxEx_InitStorage",documentation:"Allocates memory for storing ListBox items"},{label:"_GUICtrlComboBoxEx_InsertString",documentation:"Inserts a new item in the control"},{label:"_GUICtrlComboBoxEx_LimitText",documentation:"Limits the length of the text the user may type into the edit control of a ComboBox"},{label:"_GUICtrlComboBoxEx_ReplaceEditSel",documentation:"Replace text selected in edit box"},{label:"_GUICtrlComboBoxEx_ResetContent",documentation:"Removes all items"},{label:"_GUICtrlComboBoxEx_SetCurSel",documentation:"Select a string in the list of a ComboBox"},{label:"_GUICtrlComboBoxEx_SetDroppedWidth",documentation:"Set the maximum allowable width, in pixels, of the ListBox of a ComboBox"},{label:"_GUICtrlComboBoxEx_SetEditSel",documentation:"Select characters in the edit control of a ComboBox"},{label:"_GUICtrlComboBoxEx_SetEditText",documentation:"Set the text of the edit control of the ComboBox"},{label:"_GUICtrlComboBoxEx_SetExtendedStyle",documentation:"Sets extended styles within a ComboBoxEx control"},{label:"_GUICtrlComboBoxEx_SetExtendedUI",documentation:"Select either the default user interface or the extended user interface"},{label:"_GUICtrlComboBoxEx_SetImageList",documentation:"Sets an image list for a ComboBoxEx control"},{label:"_GUICtrlComboBoxEx_SetItem",documentation:"Sets some or all of a item's attributes"},{label:"_GUICtrlComboBoxEx_SetItemEx",documentation:"Sets some or all of a item's attributes"},{label:"_GUICtrlComboBoxEx_SetItemHeight",documentation:"Set the height of list items or the selection field in a ComboBox"},{label:"_GUICtrlComboBoxEx_SetItemImage",documentation:"Sets the index of the item's icon in the control's image list"},{label:"_GUICtrlComboBoxEx_SetItemIndent",documentation:"Sets the number of image widths to indent the item"},{label:"_GUICtrlComboBoxEx_SetItemOverlayImage",documentation:"Sets the index of the item's overlay icon in the control's image list"},{label:"_GUICtrlComboBoxEx_SetItemParam",documentation:"Sets the value specific to the item"},{label:"_GUICtrlComboBoxEx_SetItemSelectedImage",documentation:"Sets the index of the item's overlay icon in the control's image list"},{label:"_GUICtrlComboBoxEx_SetMinVisible",documentation:"Set the minimum number of visible items in the drop-down list of a ComboBox"},{label:"_GUICtrlComboBoxEx_SetTopIndex",documentation:"Ensure that a particular item is visible in the ListBox of a ComboBox"},{label:"_GUICtrlComboBoxEx_SetUnicode",documentation:"Sets if control is using Unicode"},{label:"_GUICtrlComboBoxEx_ShowDropDown",documentation:"Show or hide the ListBox of a ComboBox"}],t.CompletionItemKind.Function,"GuiComboBoxEx UDF","GuiComboBoxEx.au3"),Zn=(0,Ce.fillCompletions)([{label:"_GUICtrlDTP_Create",documentation:"Create a DTP control"},{label:"_GUICtrlDTP_Destroy",documentation:"Delete the control"},{label:"_GUICtrlDTP_GetMCColor",documentation:"Retrieves the specified color"},{label:"_GUICtrlDTP_GetMCFont",documentation:"Retrieves the month calendar font handle"},{label:"_GUICtrlDTP_GetMonthCal",documentation:"Retrieves the handle to child month calendar control"},{label:"_GUICtrlDTP_GetRange",documentation:"Retrieves the current minimum and maximum allowable system times"},{label:"_GUICtrlDTP_GetRangeEx",documentation:"Retrieves the current minimum and maximum allowable system times"},{label:"_GUICtrlDTP_GetSystemTime",documentation:"Retrieves the currently selected date and time"},{label:"_GUICtrlDTP_GetSystemTimeEx",documentation:"Retrieves the currently selected date and time"},{label:"_GUICtrlDTP_SetFormat",documentation:"Sets the display based on a given format string"},{label:"_GUICtrlDTP_SetMCColor",documentation:"Sets the color for a given portion of the month calendar"},{label:"_GUICtrlDTP_SetMCFont",documentation:"Sets the month calendar font"},{label:"_GUICtrlDTP_SetRange",documentation:"Sets the current minimum and maximum allowable system times"},{label:"_GUICtrlDTP_SetRangeEx",documentation:"Sets the current minimum and maximum allowable system times"},{label:"_GUICtrlDTP_SetSystemTime",documentation:"Sets the currently selected date and time"},{label:"_GUICtrlDTP_SetSystemTimeEx",documentation:"Sets the currently selected date and time"}],t.CompletionItemKind.Function,"GuiDTP UDF","GuiDTP.au3"),ei=(0,Ce.fillCompletions)([{label:"_GUICtrlEdit_AppendText",documentation:"Append text"},{label:"_GUICtrlEdit_BeginUpdate",documentation:"Prevents updating of the control until the _GUICtrlEdit_EndUpdate function is called"},{label:"_GUICtrlEdit_CanUndo",documentation:"Determines whether there are any actions in an edit control's undo queue"},{label:"_GUICtrlEdit_CharFromPos",documentation:"Retrieve information about the character closest to a specified point in the client area"},{label:"_GUICtrlEdit_Create",documentation:"Create an Edit control"},{label:"_GUICtrlEdit_Destroy",documentation:"Delete the Edit control"},{label:"_GUICtrlEdit_EmptyUndoBuffer",documentation:"Resets the undo flag of an edit control"},{label:"_GUICtrlEdit_EndUpdate",documentation:"Enables screen repainting that was turned off with the _GUICtrlEdit_BeginUpdate function"},{label:"_GUICtrlEdit_Find",documentation:"Initiates a find dialog"},{label:"_GUICtrlEdit_FmtLines",documentation:"Determines whether an edit control includes soft line-break characters"},{label:"_GUICtrlEdit_GetCueBanner",documentation:"Gets the cue banner text displayed in the edit control"},{label:"_GUICtrlEdit_GetFirstVisibleLine",documentation:"Retrieves the 0-based index of the uppermost visible line in a multiline edit control"},{label:"_GUICtrlEdit_GetLimitText",documentation:"Gets the current text limit for an edit control"},{label:"_GUICtrlEdit_GetLine",documentation:"Retrieves a line of text from an edit control"},{label:"_GUICtrlEdit_GetLineCount",documentation:"Retrieves the number of lines"},{label:"_GUICtrlEdit_GetMargins",documentation:"Retrieves the widths of the left and right margins"},{label:"_GUICtrlEdit_GetModify",documentation:"Retrieves the state of an edit control's modification flag"},{label:"_GUICtrlEdit_GetPasswordChar",documentation:"Gets the password character that an edit control displays when the user enters text"},{label:"_GUICtrlEdit_GetRECT",documentation:"Retrieves the formatting rectangle of an edit control"},{label:"_GUICtrlEdit_GetRECTEx",documentation:"Retrieves the formatting rectangle of an edit control"},{label:"_GUICtrlEdit_GetSel",documentation:"Retrieves the starting and ending character positions of the current selection"},{label:"_GUICtrlEdit_GetText",documentation:"Get the text from the edit control"},{label:"_GUICtrlEdit_GetTextLen",documentation:"Get the length of all the text from the edit control"},{label:"_GUICtrlEdit_HideBalloonTip",documentation:"Hides any balloon tip associated with an edit control"},{label:"_GUICtrlEdit_InsertText",documentation:"Insert text"},{label:"_GUICtrlEdit_LineFromChar",documentation:"Retrieves the index of the line that contains the specified character index"},{label:"_GUICtrlEdit_LineIndex",documentation:"Retrieves the character index of the first character of a specified line"},{label:"_GUICtrlEdit_LineLength",documentation:"Retrieves the length, in characters, of a line"},{label:"_GUICtrlEdit_LineScroll",documentation:"Scrolls the text"},{label:"_GUICtrlEdit_PosFromChar",documentation:"Retrieves the client area coordinates of a specified character in an edit control"},{label:"_GUICtrlEdit_ReplaceSel",documentation:"Replaces the current selection"},{label:"_GUICtrlEdit_Scroll",documentation:"Scrolls the text vertically"},{label:"_GUICtrlEdit_SetCueBanner",documentation:"Sets the cue banner text that is displayed for the edit control"},{label:"_GUICtrlEdit_SetLimitText",documentation:"Sets the text limit"},{label:"_GUICtrlEdit_SetMargins",documentation:"Sets the widths of the left and right margins"},{label:"_GUICtrlEdit_SetModify",documentation:"Sets or clears the modification flag"},{label:"_GUICtrlEdit_SetPasswordChar",documentation:"Sets or removes the password character for an edit control"},{label:"_GUICtrlEdit_SetReadOnly",documentation:"Sets or removes the read-only style ($ES_READONLY)"},{label:"_GUICtrlEdit_SetRECT",documentation:"Sets the formatting rectangle of a multiline edit control"},{label:"_GUICtrlEdit_SetRECTEx",documentation:"Sets the formatting rectangle of a multiline edit control"},{label:"_GUICtrlEdit_SetRECTNP",documentation:"Sets the formatting rectangle of a multiline edit control"},{label:"_GUICtrlEdit_SetRectNPEx",documentation:"Sets the formatting rectangle of a multiline edit control"},{label:"_GUICtrlEdit_SetSel",documentation:"Selects a range of characters"},{label:"_GUICtrlEdit_SetTabStops",documentation:"Sets the tab stops"},{label:"_GUICtrlEdit_SetText",documentation:"Set the text"},{label:"_GUICtrlEdit_ShowBalloonTip",documentation:"Displays a balloon tip associated with an edit control"},{label:"_GUICtrlEdit_Undo",documentation:"Undoes the last edit control operation in the control's undo queue"}],t.CompletionItemKind.Function,"GuiEdit UDF","GuiEdit.au3"),ti=(0,Ce.fillCompletions)([{label:"_GUICtrlHeader_AddItem",documentation:"Adds a new header item"},{label:"_GUICtrlHeader_ClearFilter",documentation:"Clears the filter"},{label:"_GUICtrlHeader_ClearFilterAll",documentation:"Clears all of the filters"},{label:"_GUICtrlHeader_Create",documentation:"Creates a Header control"},{label:"_GUICtrlHeader_CreateDragImage",documentation:"Creates a semi-transparent version of an item's image for use as a dragging image"},{label:"_GUICtrlHeader_DeleteItem",documentation:"Deletes a header item"},{label:"_GUICtrlHeader_Destroy",documentation:"Delete the Header control"},{label:"_GUICtrlHeader_EditFilter",documentation:"Starts editing the specified filter"},{label:"_GUICtrlHeader_GetBitmapMargin",documentation:"Retrieves the width of the bitmap margin"},{label:"_GUICtrlHeader_GetImageList",documentation:"Retrieves the handle to the image list"},{label:"_GUICtrlHeader_GetItem",documentation:"Retrieves information about an item"},{label:"_GUICtrlHeader_GetItemAlign",documentation:"Retrieves the item text alignment"},{label:"_GUICtrlHeader_GetItemBitmap",documentation:"Retrieves the item bitmap handle"},{label:"_GUICtrlHeader_GetItemCount",documentation:"Retrieves a count of the items"},{label:"_GUICtrlHeader_GetItemDisplay",documentation:"Returns the item display information"},{label:"_GUICtrlHeader_GetItemFlags",documentation:"Returns the item flag information"},{label:"_GUICtrlHeader_GetItemFormat",documentation:"Returns the format of the item"},{label:"_GUICtrlHeader_GetItemImage",documentation:"Retrieves the index of an image within the image list"},{label:"_GUICtrlHeader_GetItemOrder",documentation:"Retrieves the order in which the item appears"},{label:"_GUICtrlHeader_GetItemParam",documentation:"Retrieves the param value of the item"},{label:"_GUICtrlHeader_GetItemRect",documentation:"Retrieves the bounding rectangle for a given item"},{label:"_GUICtrlHeader_GetItemRectEx",documentation:"Retrieves the bounding rectangle for a given item"},{label:"_GUICtrlHeader_GetItemText",documentation:"Retrieves the item text"},{label:"_GUICtrlHeader_GetItemWidth",documentation:"Retrieves the item's width"},{label:"_GUICtrlHeader_GetOrderArray",documentation:"Retrieves the current left-to-right order of items in a header control"},{label:"_GUICtrlHeader_GetUnicodeFormat",documentation:"Retrieves the Unicode character format flag for the control"},{label:"_GUICtrlHeader_HitTest",documentation:"Tests a point to determine which item is at the specified point"},{label:"_GUICtrlHeader_InsertItem",documentation:"Inserts a new header item"},{label:"_GUICtrlHeader_Layout",documentation:"Retrieves the correct size and position of the control"},{label:"_GUICtrlHeader_OrderToIndex",documentation:"Retrieves an index value for an item based on its order"},{label:"_GUICtrlHeader_SetBitmapMargin",documentation:"Sets the width of the margin, specified in pixels, of a bitmap"},{label:"_GUICtrlHeader_SetFilterChangeTimeout",documentation:"Sets the filter change timeout interval"},{label:"_GUICtrlHeader_SetHotDivider",documentation:"Changes the hot divider color"},{label:"_GUICtrlHeader_SetImageList",documentation:"Assigns an image list"},{label:"_GUICtrlHeader_SetItem",documentation:"Sets information about an item"},{label:"_GUICtrlHeader_SetItemAlign",documentation:"Sets the item text alignment"},{label:"_GUICtrlHeader_SetItemBitmap",documentation:"Sets the item bitmap handle"},{label:"_GUICtrlHeader_SetItemDisplay",documentation:"Returns the item display information"},{label:"_GUICtrlHeader_SetItemFlags",documentation:"Returns the item flag information"},{label:"_GUICtrlHeader_SetItemFormat",documentation:"Sets the format of the item"},{label:"_GUICtrlHeader_SetItemImage",documentation:"Sets the index of an image within the image list"},{label:"_GUICtrlHeader_SetItemOrder",documentation:"Sets the order in which the item appears"},{label:"_GUICtrlHeader_SetItemParam",documentation:"Sets the param value of the item"},{label:"_GUICtrlHeader_SetItemText",documentation:"Sets the item text"},{label:"_GUICtrlHeader_SetItemWidth",documentation:"Sets the item's width"},{label:"_GUICtrlHeader_SetOrderArray",documentation:"Sets the current left-to-right order of items"},{label:"_GUICtrlHeader_SetUnicodeFormat",documentation:"Sets the Unicode character format flag for the control"}],t.CompletionItemKind.Function,"GuiHeader UDF","GuiHeader.au3"),ai=(0,Ce.fillCompletions)([{label:"_GUIImageList_Add",documentation:"Adds an image or images to an image list"},{label:"_GUIImageList_AddBitmap",documentation:"Adds a bitmap to an image list"},{label:"_GUIImageList_AddIcon",documentation:"Adds an icon to an image list"},{label:"_GUIImageList_AddMasked",documentation:"Adds an image or images to an image list, generating a mask from the specified bitmap"},{label:"_GUIImageList_BeginDrag",documentation:"Begins dragging an image"},{label:"_GUIImageList_Copy",documentation:"Source image is copied to the destination image's index"},{label:"_GUIImageList_Create",documentation:"Create an ImageList control"},{label:"_GUIImageList_Destroy",documentation:"Destroys an image list"},{label:"_GUIImageList_DestroyIcon",documentation:"Destroys an icon and frees any memory the icon occupied"},{label:"_GUIImageList_DragEnter",documentation:"Displays the drag image at the specified position within the window"},{label:"_GUIImageList_DragLeave",documentation:"Unlocks the specified window and hides the drag image, allowing the window to be updated"},{label:"_GUIImageList_DragMove",documentation:"Moves the image that is being dragged during a drag-and-drop operation"},{label:"_GUIImageList_Draw",documentation:"Draws an image list item in the specified device context"},{label:"_GUIImageList_DrawEx",documentation:"Draws an image list item in the specified device context"},{label:"_GUIImageList_Duplicate",documentation:"Creates a duplicate of an existing image list"},{label:"_GUIImageList_EndDrag",documentation:"Ends a drag operation"},{label:"_GUIImageList_GetBkColor",documentation:"Retrieves the current background color for an image list"},{label:"_GUIImageList_GetIcon",documentation:"Creates an icon from an image and mask in an image list"},{label:"_GUIImageList_GetIconHeight",documentation:"Retrieves the height of the images in an image list"},{label:"_GUIImageList_GetIconSize",documentation:"Retrieves the dimensions of images in an image list"},{label:"_GUIImageList_GetIconSizeEx",documentation:"Retrieves the dimensions of images in an image list"},{label:"_GUIImageList_GetIconWidth",documentation:"Retrieves the width of the images in an image list"},{label:"_GUIImageList_GetImageCount",documentation:"Retrieves the number of images in an image list"},{label:"_GUIImageList_GetImageInfoEx",documentation:"Retrieves information about an image"},{label:"_GUIImageList_Remove",documentation:"Remove Image(s) from the ImageList"},{label:"_GUIImageList_ReplaceIcon",documentation:"Replaces an image with an icon or cursor"},{label:"_GUIImageList_SetBkColor",documentation:"Sets the background color for an image list"},{label:"_GUIImageList_SetIconSize",documentation:"Sets the dimensions of images in an image list and removes all images from the list"},{label:"_GUIImageList_SetImageCount",documentation:"Resizes an existing image list"},{label:"_GUIImageList_Swap",documentation:"Swap image between Source and Destination image's index "}],t.CompletionItemKind.Function,"GuiImageList UDF","GuiImageList.au3"),oi=(0,Ce.fillCompletions)([{label:"_GUICtrlIpAddress_ClearAddress",documentation:"Clears the contents of the IP address control"},{label:"_GUICtrlIpAddress_Create",documentation:"Create a GUI IP Address Control"},{label:"_GUICtrlIpAddress_Destroy",documentation:"Delete the IP Address control"},{label:"_GUICtrlIpAddress_Get",documentation:"Retrieves the address from the IP address control"},{label:"_GUICtrlIpAddress_GetArray",documentation:"Retrieves the address from the IP address control"},{label:"_GUICtrlIpAddress_GetEx",documentation:"Retrieves the address from the IP address control"},{label:"_GUICtrlIpAddress_IsBlank",documentation:"Determines if all fields in the IP address control are blank"},{label:"_GUICtrlIpAddress_Set",documentation:"Sets the address in the IP address control"},{label:"_GUICtrlIpAddress_SetArray",documentation:"Sets the address in the IP address control"},{label:"_GUICtrlIpAddress_SetEx",documentation:"Sets the address in the IP address control"},{label:"_GUICtrlIpAddress_SetFocus",documentation:"Sets the keyboard focus to the specified field in the IP address control"},{label:"_GUICtrlIpAddress_SetFont",documentation:"Set font of the control"},{label:"_GUICtrlIpAddress_SetRange",documentation:"Sets the valid range for the specified field in the IP address control"},{label:"_GUICtrlIpAddress_ShowHide",documentation:"Shows/Hides the IP address control "}],t.CompletionItemKind.Function,"GuiIPAddress UDF","GuiIPAddress.au3"),ni=(0,Ce.fillCompletions)([{label:"_GUICtrlListBox_AddFile",documentation:"Adds the specified filename that contains a directory listing"},{label:"_GUICtrlListBox_AddString",documentation:"Add a string"},{label:"_GUICtrlListBox_BeginUpdate",documentation:"Prevents updating of the control until the EndUpdate function is called"},{label:"_GUICtrlListBox_ClickItem",documentation:"Clicks an item"},{label:"_GUICtrlListBox_Create",documentation:"Create a Listbox control"},{label:"_GUICtrlListBox_DeleteString",documentation:"Delete a string"},{label:"_GUICtrlListBox_Destroy",documentation:"Delete the control"},{label:"_GUICtrlListBox_Dir",documentation:"Adds the names of directories and files"},{label:"_GUICtrlListBox_EndUpdate",documentation:"Enables screen repainting that was turned off with the BeginUpdate function"},{label:"_GUICtrlListBox_FindInText",documentation:"Searches for an item that contains the specified text anywhere in its text"},{label:"_GUICtrlListBox_FindString",documentation:"Search for a string"},{label:"_GUICtrlListBox_GetAnchorIndex",documentation:"Retrieves the index of the anchor item"},{label:"_GUICtrlListBox_GetCaretIndex",documentation:"Return index of item that has the focus rectangle"},{label:"_GUICtrlListBox_GetCount",documentation:"Retrieves the number of items"},{label:"_GUICtrlListBox_GetCurSel",documentation:"Retrieve the index of the currently selected item"},{label:"_GUICtrlListBox_GetHorizontalExtent",documentation:"Retrieve from a list box the the scrollable width"},{label:"_GUICtrlListBox_GetItemData",documentation:"Retrieves the application defined value associated with an item"},{label:"_GUICtrlListBox_GetItemHeight",documentation:"Retrieves the height of items"},{label:"_GUICtrlListBox_GetItemRect",documentation:"Retrieves the rectangle that bounds an item"},{label:"_GUICtrlListBox_GetItemRectEx",documentation:"Retrieves the rectangle that bounds an item"},{label:"_GUICtrlListBox_GetListBoxInfo",documentation:"Retrieve the number of items per column in a specified list box"},{label:"_GUICtrlListBox_GetLocale",documentation:"Retrieves the current locale"},{label:"_GUICtrlListBox_GetLocaleCountry",documentation:"Retrieves the current country code"},{label:"_GUICtrlListBox_GetLocaleLang",documentation:"Retrieves the current language identifier"},{label:"_GUICtrlListBox_GetLocalePrimLang",documentation:"Extract primary language id from a language id"},{label:"_GUICtrlListBox_GetLocaleSubLang",documentation:"Extract sublanguage id from a language id"},{label:"_GUICtrlListBox_GetSel",documentation:"Retrieves the selection state of an item"},{label:"_GUICtrlListBox_GetSelCount",documentation:"Retrieves the total number of selected items"},{label:"_GUICtrlListBox_GetSelItems",documentation:"Fills a buffer with an array of selected items"},{label:"_GUICtrlListBox_GetSelItemsText",documentation:"Retrieves the text of selected items"},{label:"_GUICtrlListBox_GetText",documentation:"Returns the item (string) at the specified index"},{label:"_GUICtrlListBox_GetTextLen",documentation:"Gets the length of a string in a list box"},{label:"_GUICtrlListBox_GetTopIndex",documentation:"Retrieve the index of the first visible item in a list"},{label:"_GUICtrlListBox_InitStorage",documentation:"This message allocates memory for storing items"},{label:"_GUICtrlListBox_InsertString",documentation:"Insert a string into the list"},{label:"_GUICtrlListBox_ItemFromPoint",documentation:"Retrieves the 0-based index of the item nearest the specified point"},{label:"_GUICtrlListBox_ReplaceString",documentation:"Replaces the text of an item"},{label:"_GUICtrlListBox_ResetContent",documentation:"Remove all items from the list box"},{label:"_GUICtrlListBox_SelectString",documentation:"Searchs for an item that begins with the specified string"},{label:"_GUICtrlListBox_SelItemRange",documentation:"Select one or more consecutive items in a multiple-selection list box"},{label:"_GUICtrlListBox_SelItemRangeEx",documentation:"Select one or more consecutive items in a multiple-selection list box"},{label:"_GUICtrlListBox_SetAnchorIndex",documentation:"Set the anchor item—that is, the item from which a multiple selection starts"},{label:"_GUICtrlListBox_SetCaretIndex",documentation:"Set the focus rectangle to the item at the specified index in a multiple-selection list box"},{label:"_GUICtrlListBox_SetColumnWidth",documentation:"Set the width, in pixels, of all columns"},{label:"_GUICtrlListBox_SetCurSel",documentation:"Select a string and scroll it into view, if necessary"},{label:"_GUICtrlListBox_SetHorizontalExtent",documentation:"Set the width, in pixels, by which a list box can be scrolled horizontally"},{label:"_GUICtrlListBox_SetItemData",documentation:"Sets the value associated with the specified item"},{label:"_GUICtrlListBox_SetItemHeight",documentation:"Sets the height, in pixels, of items"},{label:"_GUICtrlListBox_SetLocale",documentation:"Set the current locale"},{label:"_GUICtrlListBox_SetSel",documentation:"Select a string(s) in a multiple-selection list box"},{label:"_GUICtrlListBox_SetTabStops",documentation:"Sets the tab-stop positions"},{label:"_GUICtrlListBox_SetTopIndex",documentation:"Ensure that a particular item in a list box is visible"},{label:"_GUICtrlListBox_Sort",documentation:"Re-sorts list box if it has the $LBS_SORT style"},{label:"_GUICtrlListBox_SwapString",documentation:"Swaps the text of two items at the specified indices"},{label:"_GUICtrlListBox_UpdateHScroll",documentation:"Update the horizontal scroll bar based on the longest string "}],t.CompletionItemKind.Function,"GuiListBox UDF","GuiListBox.au3"),ii=(0,Ce.fillCompletions)([{label:"_GUICtrlListView_AddArray",documentation:"Adds items from an array to the control"},{label:"_GUICtrlListView_AddColumn",documentation:"Adds a new column in the control"},{label:"_GUICtrlListView_AddItem",documentation:"Adds a new item to the end of the list"},{label:"_GUICtrlListView_AddSubItem",documentation:"Adds a new subitem to the control"},{label:"_GUICtrlListView_ApproximateViewHeight",documentation:"Calculates the approximate height required to display a given number of items"},{label:"_GUICtrlListView_ApproximateViewRect",documentation:"Calculates the approximate size required to display a given number of items"},{label:"_GUICtrlListView_ApproximateViewWidth",documentation:"Calculates the approximate width required to display a given number of items"},{label:"_GUICtrlListView_Arrange",documentation:"Arranges items in icon view"},{label:"_GUICtrlListView_BeginUpdate",documentation:"Prevents updating of the control until the _GUICtrlListView_EndUpdate() function is called"},{label:"_GUICtrlListView_CancelEditLabel",documentation:"Cancels an item text editing operation"},{label:"_GUICtrlListView_ClickItem",documentation:"Clicks an item"},{label:"_GUICtrlListView_CopyItems",documentation:"Copy Items between 2 list-view controls"},{label:"_GUICtrlListView_Create",documentation:"Create a ListView control"},{label:"_GUICtrlListView_CreateDragImage",documentation:"Creates a drag image list for the specified item"},{label:"_GUICtrlListView_CreateSolidBitMap",documentation:"Creates a solid color bitmap"},{label:"_GUICtrlListView_DeleteAllItems",documentation:"Removes all items from a list-view control"},{label:"_GUICtrlListView_DeleteColumn",documentation:"Removes a column from a list-view control"},{label:"_GUICtrlListView_DeleteItem",documentation:"Removes an item from a list-view control"},{label:"_GUICtrlListView_DeleteItemsSelected",documentation:"Deletes item(s) selected"},{label:"_GUICtrlListView_Destroy",documentation:"Delete the listview control"},{label:"_GUICtrlListView_DrawDragImage",documentation:"Draw the Drag Image"},{label:"_GUICtrlListView_EditLabel",documentation:"Begins in place editing of the specified item text"},{label:"_GUICtrlListView_EnableGroupView",documentation:"Enables or disables whether the items in the control display as a group"},{label:"_GUICtrlListView_EndUpdate",documentation:"Enables screen repainting that was turned off with the _GUICtrlListView_BeginUpdate() function"},{label:"_GUICtrlListView_EnsureVisible",documentation:"Ensures that a list-view item is either entirely or partially visible"},{label:"_GUICtrlListView_FindInText",documentation:"Searches for an item that contains the specified text anywhere in its text"},{label:"_GUICtrlListView_FindItem",documentation:"Searches for an item with the specified characteristics"},{label:"_GUICtrlListView_FindNearest",documentation:"Finds the item nearest to the position specified"},{label:"_GUICtrlListView_FindParam",documentation:"Searches for an item with the specified lParam"},{label:"_GUICtrlListView_FindText",documentation:"Searches for an item with the specified text"},{label:"_GUICtrlListView_GetBkColor",documentation:"Retrieves the background color of a list-view control"},{label:"_GUICtrlListView_GetBkImage",documentation:"Retrieves the background image in the control"},{label:"_GUICtrlListView_GetCallbackMask",documentation:"Retrieves the callback mask for the control"},{label:"_GUICtrlListView_GetColumn",documentation:"Retrieves the attributes of a column"},{label:"_GUICtrlListView_GetColumnCount",documentation:"Retrieve the number of columns"},{label:"_GUICtrlListView_GetColumnOrder",documentation:"Retrieves the current left-to-right order of columns"},{label:"_GUICtrlListView_GetColumnOrderArray",documentation:"Retrieves the current left-to-right order of columns in the control"},{label:"_GUICtrlListView_GetColumnWidth",documentation:"Retrieves the width of a column in report or list view"},{label:"_GUICtrlListView_GetCounterPage",documentation:"Calculates the number of items that can fit vertically in the visible area"},{label:"_GUICtrlListView_GetEditControl",documentation:"Retrieves the handle to the edit control being used to edit an item's text"},{label:"_GUICtrlListView_GetExtendedListViewStyle",documentation:"Retrieves the extended styles that are currently in use"},{label:"_GUICtrlListView_GetFocusedGroup",documentation:"Gets the group that has the focus"},{label:"_GUICtrlListView_GetGroupCount",documentation:"Gets the number of groups"},{label:"_GUICtrlListView_GetGroupInfo",documentation:"Retrieves group information"},{label:"_GUICtrlListView_GetGroupInfoByIndex",documentation:"Retrieves group information"},{label:"_GUICtrlListView_GetGroupRect",documentation:"Gets the rectangle for a specified group"},{label:"_GUICtrlListView_GetGroupViewEnabled",documentation:"Checks whether the control has group view enabled"},{label:"_GUICtrlListView_GetHeader",documentation:"Retrieves the handle to the header control"},{label:"_GUICtrlListView_GetHotCursor",documentation:"Retrieves the HCURSOR value used when the pointer is over an item while hot tracking is enabled"},{label:"_GUICtrlListView_GetHotItem",documentation:"Retrieves the index of the hot item"},{label:"_GUICtrlListView_GetHoverTime",documentation:"Retrieves the amount of time that the mouse cursor must hover over an item before it is selected"},{label:"_GUICtrlListView_GetImageList",documentation:"Retrieves the handle to an image list used for drawing listview items"},{label:"_GUICtrlListView_GetISearchString",documentation:"Retrieves the incremental search string of the control"},{label:"_GUICtrlListView_GetItem",documentation:"Retrieves an item's attributes"},{label:"_GUICtrlListView_GetItemChecked",documentation:"Returns the check state for a list-view control item"},{label:"_GUICtrlListView_GetItemCount",documentation:"Retrieves the number of items in a list-view control"},{label:"_GUICtrlListView_GetItemCut",documentation:"Determines whether the item is marked for a cut and paste operation"},{label:"_GUICtrlListView_GetItemDropHilited",documentation:"Determines whether the item is highlighted as a drag-and-drop target"},{label:"_GUICtrlListView_GetItemEx",documentation:"Retrieves some or all of an item's attributes"},{label:"_GUICtrlListView_GetItemFocused",documentation:"Determines whether the item is highlighted as a drag-and-drop target"},{label:"_GUICtrlListView_GetItemGroupID",documentation:"Gets the item group ID"},{label:"_GUICtrlListView_GetItemImage",documentation:"Retrieves the index of the item's icon"},{label:"_GUICtrlListView_GetItemIndent",documentation:"Retrieves the number of image widths the item is indented"},{label:"_GUICtrlListView_GetItemParam",documentation:"Retrieves the application specific value of the item"},{label:"_GUICtrlListView_GetItemPosition",documentation:"Retrieves the position of an item"},{label:"_GUICtrlListView_GetItemPositionX",documentation:"Retrieves the X position of an item"},{label:"_GUICtrlListView_GetItemPositionY",documentation:"Retrieves the Y position of an item"},{label:"_GUICtrlListView_GetItemRect",documentation:"Retrieves the bounding rectangle for all or part of an item"},{label:"_GUICtrlListView_GetItemRectEx",documentation:"Retrieves the bounding rectangle for all or part of an item"},{label:"_GUICtrlListView_GetItemSelected",documentation:"Determines whether the item is selected"},{label:"_GUICtrlListView_GetItemSpacing",documentation:"Determines the spacing between items in the control"},{label:"_GUICtrlListView_GetItemSpacingX",documentation:"Determines the horizontal spacing between items in the control"},{label:"_GUICtrlListView_GetItemSpacingY",documentation:"Determines the vertical spacing between items in the control"},{label:"_GUICtrlListView_GetItemState",documentation:"Retrieves the state of a listview item"},{label:"_GUICtrlListView_GetItemStateImage",documentation:"Gets the state image that is displayed"},{label:"_GUICtrlListView_GetItemText",documentation:"Retrieves the text of an item or subitem"},{label:"_GUICtrlListView_GetItemTextArray",documentation:"Retrieves all of a list-view item"},{label:"_GUICtrlListView_GetItemTextString",documentation:"Retrieves all of a list-view item"},{label:"_GUICtrlListView_GetNextItem",documentation:"Searches for an item that has the specified properties"},{label:"_GUICtrlListView_GetNumberOfWorkAreas",documentation:"Retrieves the number of working areas in the control"},{label:"_GUICtrlListView_GetOrigin",documentation:"Retrieves the current view origin for the control"},{label:"_GUICtrlListView_GetOriginX",documentation:"Retrieves the current horizontal view origin for the control"},{label:"_GUICtrlListView_GetOriginY",documentation:"Retrieves the current vertical view origin for the control"},{label:"_GUICtrlListView_GetOutlineColor",documentation:"Retrieves the color of the border of the control"},{label:"_GUICtrlListView_GetSelectedColumn",documentation:"Retrieves the index of the selected column"},{label:"_GUICtrlListView_GetSelectedCount",documentation:"Determines the number of selected items"},{label:"_GUICtrlListView_GetSelectedIndices",documentation:"Retrieve indices of selected item(s)"},{label:"_GUICtrlListView_GetSelectionMark",documentation:"Retrieves the selection mark from the control"},{label:"_GUICtrlListView_GetStringWidth",documentation:"Determines the width of a specified string"},{label:"_GUICtrlListView_GetSubItemRect",documentation:"Retrieves information about an item bounding rectangle"},{label:"_GUICtrlListView_GetTextBkColor",documentation:"Retrieves the text background color of the control"},{label:"_GUICtrlListView_GetTextColor",documentation:"Retrieves the text color of the control"},{label:"_GUICtrlListView_GetToolTips",documentation:"Retrieves the ToolTip control handle"},{label:"_GUICtrlListView_GetTopIndex",documentation:"Retrieves the index of the topmost visible item when in list or report view"},{label:"_GUICtrlListView_GetUnicodeFormat",documentation:"Retrieves the Unicode character format flag for the control"},{label:"_GUICtrlListView_GetView",documentation:"Retrieves the current view of the control"},{label:"_GUICtrlListView_GetViewDetails",documentation:"Determines whether the view mode is in detail mode"},{label:"_GUICtrlListView_GetViewLarge",documentation:"Determines whether the view mode is in large icon mode"},{label:"_GUICtrlListView_GetViewList",documentation:"Determines whether the view mode is in list mode"},{label:"_GUICtrlListView_GetViewRect",documentation:"Retrieves the bounding rectangle of all items in the control"},{label:"_GUICtrlListView_GetViewSmall",documentation:"Determines whether the view mode is in small icon mode"},{label:"_GUICtrlListView_GetViewTile",documentation:"Determines whether the view mode is in tile mode"},{label:"_GUICtrlListView_HideColumn",documentation:'Hides the column "sets column width to zero"'},{label:"_GUICtrlListView_HitTest",documentation:"Determines which item is at a specified position"},{label:"_GUICtrlListView_InsertColumn",documentation:"Inserts a new column in the control"},{label:"_GUICtrlListView_InsertGroup",documentation:"Inserts a group"},{label:"_GUICtrlListView_InsertItem",documentation:"Inserts a new item in the control"},{label:"_GUICtrlListView_JustifyColumn",documentation:"Set Justification of a column for a list-view control"},{label:"_GUICtrlListView_MapIDToIndex",documentation:"Maps the ID of an item to an index"},{label:"_GUICtrlListView_MapIndexToID",documentation:"Maps an index to an item ID"},{label:"_GUICtrlListView_RedrawItems",documentation:"Forces the control to redraw a range of items"},{label:"_GUICtrlListView_RegisterSortCallBack",documentation:"Register the Simple Sort callback function"},{label:"_GUICtrlListView_RemoveAllGroups",documentation:"Removes all groups from the control"},{label:"_GUICtrlListView_RemoveGroup",documentation:"Removes a group from the control"},{label:"_GUICtrlListView_Scroll",documentation:"Scrolls the content of a list-view"},{label:"_GUICtrlListView_SetBkColor",documentation:"Sets the background color of the control"},{label:"_GUICtrlListView_SetBkImage",documentation:"Sets the background image in the control"},{label:"_GUICtrlListView_SetCallBackMask",documentation:"Changes the callback mask for the control"},{label:"_GUICtrlListView_SetColumn",documentation:"Sets the attributes of a column"},{label:"_GUICtrlListView_SetColumnOrder",documentation:"Sets the left-to-right order of columns"},{label:"_GUICtrlListView_SetColumnOrderArray",documentation:"Sets the left-to-right order of columns in the control"},{label:"_GUICtrlListView_SetColumnWidth",documentation:"Changes the width of a column"},{label:"_GUICtrlListView_SetExtendedListViewStyle",documentation:"Sets extended styles"},{label:"_GUICtrlListView_SetGroupInfo",documentation:"Sets group information"},{label:"_GUICtrlListView_SetHotItem",documentation:"Sets the hot item"},{label:"_GUICtrlListView_SetHoverTime",documentation:"Sets the amount of time which the mouse cursor must hover over an item before it is selected"},{label:"_GUICtrlListView_SetIconSpacing",documentation:"Sets the spacing between icons where the style is large icon"},{label:"_GUICtrlListView_SetImageList",documentation:"Assigns an image list to the control"},{label:"_GUICtrlListView_SetItem",documentation:"Sets some or all of a item's attributes"},{label:"_GUICtrlListView_SetItemChecked",documentation:"Sets the checked state"},{label:"_GUICtrlListView_SetItemCount",documentation:"Causes the list-view control to allocate memory for the specified number of items"},{label:"_GUICtrlListView_SetItemCut",documentation:"Sets whether the item is marked for a cut-and-paste operation"},{label:"_GUICtrlListView_SetItemDropHilited",documentation:"Sets whether the item is highlighted as a drag-and-drop target"},{label:"_GUICtrlListView_SetItemEx",documentation:"Sets some or all of a item's attributes"},{label:"_GUICtrlListView_SetItemFocused",documentation:"Sets whether the item has the focus"},{label:"_GUICtrlListView_SetItemGroupID",documentation:"Sets the item group ID"},{label:"_GUICtrlListView_SetItemImage",documentation:"Sets the index of the item's icon in the control's image list"},{label:"_GUICtrlListView_SetItemIndent",documentation:"Sets the number of image widths to indent the item"},{label:"_GUICtrlListView_SetItemParam",documentation:"Sets the value specific to the item"},{label:"_GUICtrlListView_SetItemPosition",documentation:"Moves an item to a specified position in the control"},{label:"_GUICtrlListView_SetItemPosition32",documentation:"Moves an item to a specified position in the control"},{label:"_GUICtrlListView_SetItemSelected",documentation:"Sets whether the item is selected"},{label:"_GUICtrlListView_SetItemState",documentation:"Changes the state of an item in the control"},{label:"_GUICtrlListView_SetItemStateImage",documentation:"Sets the state image that is displayed"},{label:"_GUICtrlListView_SetItemText",documentation:"Changes the text of an item or subitem"},{label:"_GUICtrlListView_SetOutlineColor",documentation:"Sets the color of the border"},{label:"_GUICtrlListView_SetSelectedColumn",documentation:"Sets the index of the selected column"},{label:"_GUICtrlListView_SetSelectionMark",documentation:"Sets the selection mark in the control"},{label:"_GUICtrlListView_SetTextBkColor",documentation:"Sets the background color of text in the control"},{label:"_GUICtrlListView_SetTextColor",documentation:"Sets the color of text in the control"},{label:"_GUICtrlListView_SetToolTips",documentation:"Sets the ToolTip control that the control will use to display ToolTips"},{label:"_GUICtrlListView_SetUnicodeFormat",documentation:"Sets the UNICODE character format flag for the control"},{label:"_GUICtrlListView_SetView",documentation:"Sets the view of the control"},{label:"_GUICtrlListView_SetWorkAreas",documentation:"Creates a work area within the control"},{label:"_GUICtrlListView_SimpleSort",documentation:"Sorts a list-view control (limited)"},{label:"_GUICtrlListView_SortItems",documentation:"Starts the sort call back, also sets the Arrow in the Header"},{label:"_GUICtrlListView_SubItemHitTest",documentation:"Determines which listview item or subitem is at a given position"},{label:"_GUICtrlListView_UnRegisterSortCallBack",documentation:"UnRegister the Sort callback function"}],t.CompletionItemKind.Function,"GuiListView UDF","GuiListView.au3"),ri=(0,Ce.fillCompletions)([{label:"_GUICtrlMenu_AddMenuItem",documentation:"Adds a new menu item to the end of the menu"},{label:"_GUICtrlMenu_AppendMenu",documentation:"Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu"},{label:"_GUICtrlMenu_CalculatePopupWindowPosition",documentation:"Calculates an appropriate pop-up window position"},{label:"_GUICtrlMenu_CheckMenuItem",documentation:"Sets the state of the specified menu item's check mark attribute to either selected or clear"},{label:"_GUICtrlMenu_CheckRadioItem",documentation:"Checks a specified menu item and makes it a radio item"},{label:"_GUICtrlMenu_CreateMenu",documentation:"Creates a menu"},{label:"_GUICtrlMenu_CreatePopup",documentation:"Creates a drop down menu, submenu, or shortcut menu"},{label:"_GUICtrlMenu_DeleteMenu",documentation:"Deletes an item from the specified menu"},{label:"_GUICtrlMenu_DestroyMenu",documentation:"Destroys the specified menu and frees any memory that the menu occupies"},{label:"_GUICtrlMenu_DrawMenuBar",documentation:"Redraws the menu bar of the specified window"},{label:"_GUICtrlMenu_EnableMenuItem",documentation:"Enables, disables, or grays the specified menu item"},{label:"_GUICtrlMenu_FindItem",documentation:"Retrieves a menu item based on it's text"},{label:"_GUICtrlMenu_FindParent",documentation:"Retrieves the window to which a menu belongs"},{label:"_GUICtrlMenu_GetItemBmp",documentation:"Retrieves the bitmap displayed for the item"},{label:"_GUICtrlMenu_GetItemBmpChecked",documentation:"Retrieves the bitmap displayed if the item is selected"},{label:"_GUICtrlMenu_GetItemBmpUnchecked",documentation:"Retrieves the bitmap displayed if the item is not selected"},{label:"_GUICtrlMenu_GetItemChecked",documentation:"Retrieves the status of the menu item checked state"},{label:"_GUICtrlMenu_GetItemCount",documentation:"Retrieves the number of items in the specified menu"},{label:"_GUICtrlMenu_GetItemData",documentation:"Retrieves the application defined value associated with the menu item"},{label:"_GUICtrlMenu_GetItemDefault",documentation:"Retrieves the status of the menu item default state"},{label:"_GUICtrlMenu_GetItemDisabled",documentation:"Retrieves the status of the menu item disabled state"},{label:"_GUICtrlMenu_GetItemEnabled",documentation:"Retrieves the status of the menu item enabled state"},{label:"_GUICtrlMenu_GetItemGrayed",documentation:"Retrieves the status of the menu item grayed state"},{label:"_GUICtrlMenu_GetItemHighlighted",documentation:"Retrieves the status of the menu item highlighted state"},{label:"_GUICtrlMenu_GetItemID",documentation:"Retrieves the menu item ID"},{label:"_GUICtrlMenu_GetItemInfo",documentation:"Retrieves information about a menu item"},{label:"_GUICtrlMenu_GetItemRect",documentation:"Retrieves the bounding rectangle for the specified menu item"},{label:"_GUICtrlMenu_GetItemRectEx",documentation:"Retrieves the bounding rectangle for the specified menu item"},{label:"_GUICtrlMenu_GetItemState",documentation:"Retrieves the menu item state"},{label:"_GUICtrlMenu_GetItemStateEx",documentation:"Retrieves the menu flags associated with the specified menu item"},{label:"_GUICtrlMenu_GetItemSubMenu",documentation:"Retrieves a the submenu activated by a specified item"},{label:"_GUICtrlMenu_GetItemText",documentation:"Retrieves the text of the specified menu item"},{label:"_GUICtrlMenu_GetItemType",documentation:"Retrieves the menu item type"},{label:"_GUICtrlMenu_GetMenu",documentation:"Retrieves the handle of the menu assigned to the given window"},{label:"_GUICtrlMenu_GetMenuBackground",documentation:"Retrieves the brush to use for the menu's background"},{label:"_GUICtrlMenu_GetMenuBarInfo",documentation:"Retrieves information about the specified menu bar"},{label:"_GUICtrlMenu_GetMenuContextHelpID",documentation:"Retrieves the context help identifier"},{label:"_GUICtrlMenu_GetMenuData",documentation:"Retrieves the application defined value"},{label:"_GUICtrlMenu_GetMenuDefaultItem",documentation:"Retrieves the default menu item on the specified menu"},{label:"_GUICtrlMenu_GetMenuHeight",documentation:"Retrieves the maximum height of a menu"},{label:"_GUICtrlMenu_GetMenuInfo",documentation:"Retrieves information about a specified menu"},{label:"_GUICtrlMenu_GetMenuStyle",documentation:"Retrieves the style information for a menu"},{label:"_GUICtrlMenu_GetSystemMenu",documentation:"Allows the application to access the window menu for copying and modifying"},{label:"_GUICtrlMenu_InsertMenuItem",documentation:"Inserts a new menu item at the specified position"},{label:"_GUICtrlMenu_InsertMenuItemEx",documentation:"Inserts a new menu item at the specified position in a menu"},{label:"_GUICtrlMenu_IsMenu",documentation:"Determines whether a handle is a menu handle"},{label:"_GUICtrlMenu_LoadMenu",documentation:"Loads the specified menu resource from the executable file associated with an application instance"},{label:"_GUICtrlMenu_MapAccelerator",documentation:"Maps a menu accelerator key to it's position in the menu"},{label:"_GUICtrlMenu_MenuItemFromPoint",documentation:"Determines which menu item is at the specified location"},{label:"_GUICtrlMenu_RemoveMenu",documentation:"Deletes a menu item or detaches a submenu from the specified menu"},{label:"_GUICtrlMenu_SetItemBitmaps",documentation:"Associates the specified bitmap with a menu item"},{label:"_GUICtrlMenu_SetItemBmp",documentation:"Sets the bitmap displayed for the item"},{label:"_GUICtrlMenu_SetItemBmpChecked",documentation:"Sets the bitmap displayed if the item is selected"},{label:"_GUICtrlMenu_SetItemBmpUnchecked",documentation:"Sets the bitmap displayed if the item is not selected"},{label:"_GUICtrlMenu_SetItemChecked",documentation:"Sets the checked state of a menu item"},{label:"_GUICtrlMenu_SetItemData",documentation:"Sets the application defined value for a menu item"},{label:"_GUICtrlMenu_SetItemDefault",documentation:"Sets the status of the menu item default state"},{label:"_GUICtrlMenu_SetItemDisabled",documentation:"Sets the disabled state of a menu item"},{label:"_GUICtrlMenu_SetItemEnabled",documentation:"Sets the enabled state of a menu item"},{label:"_GUICtrlMenu_SetItemGrayed",documentation:"Sets the grayed state of a menu item"},{label:"_GUICtrlMenu_SetItemHighlighted",documentation:"Sets the highlighted state of a menu item"},{label:"_GUICtrlMenu_SetItemID",documentation:"Sets the menu item ID"},{label:"_GUICtrlMenu_SetItemInfo",documentation:"Changes information about a menu item"},{label:"_GUICtrlMenu_SetItemState",documentation:"Sets the state of a menu item"},{label:"_GUICtrlMenu_SetItemSubMenu",documentation:"Sets the drop down menu or submenu associated with the menu item"},{label:"_GUICtrlMenu_SetItemText",documentation:"Sets the text for a menu item"},{label:"_GUICtrlMenu_SetItemType",documentation:"Sets the menu item type"},{label:"_GUICtrlMenu_SetMenu",documentation:"Assigns a new menu to the specified window"},{label:"_GUICtrlMenu_SetMenuBackground",documentation:"Sets the background brush for the menu"},{label:"_GUICtrlMenu_SetMenuContextHelpID",documentation:"Sets the context help identifier for the menu"},{label:"_GUICtrlMenu_SetMenuData",documentation:"Sets the application defined for the menu"},{label:"_GUICtrlMenu_SetMenuDefaultItem",documentation:"Sets the default menu item"},{label:"_GUICtrlMenu_SetMenuHeight",documentation:"Sets the maximum height of the menu"},{label:"_GUICtrlMenu_SetMenuInfo",documentation:"Sets information for a specified menu"},{label:"_GUICtrlMenu_SetMenuStyle",documentation:"Sets the menu style"},{label:"_GUICtrlMenu_TrackPopupMenu",documentation:"Displays a shortcut menu at the specified location "}],t.CompletionItemKind.Function,"GuiMenu UDF - #include <GuiMenu.au3>","GuiMenu.au3"),li=(0,Ce.fillCompletions)([{label:"_GUICtrlMonthCal_Create",documentation:"Creates a Month Calendar control"},{label:"_GUICtrlMonthCal_Destroy",documentation:"Delete the MonthCal control"},{label:"_GUICtrlMonthCal_GetCalendarBorder",documentation:"Gets the size of the border, in pixels"},{label:"_GUICtrlMonthCal_GetCalendarCount",documentation:"Gets the number of calendars currently displayed in the calendar control"},{label:"_GUICtrlMonthCal_GetColor",documentation:"Retrieves a given color for the control"},{label:"_GUICtrlMonthCal_GetColorArray",documentation:"Retrieves the color for a given portion of a month calendar control"},{label:"_GUICtrlMonthCal_GetCurSel",documentation:"Retrieves the currently selected date"},{label:"_GUICtrlMonthCal_GetCurSelStr",documentation:"Retrieves the currently selected date in string format"},{label:"_GUICtrlMonthCal_GetFirstDOW",documentation:"Retrieves the first day of the week"},{label:"_GUICtrlMonthCal_GetFirstDOWStr",documentation:"Retrieves the first day of the week as a string"},{label:"_GUICtrlMonthCal_GetMaxSelCount",documentation:"Retrieves the maximum date range that can be selected in a month calendar control"},{label:"_GUICtrlMonthCal_GetMaxTodayWidth",documentation:'Retrieves the maximum width of the "today" string in a month calendar control'},{label:"_GUICtrlMonthCal_GetMinReqHeight",documentation:"Retrieves the minimum height required to display a full month"},{label:"_GUICtrlMonthCal_GetMinReqRect",documentation:"Retrieves the minimum size required to display a full month"},{label:"_GUICtrlMonthCal_GetMinReqRectArray",documentation:"Retrieves the minimum size required to display a full month in a month calendar control"},{label:"_GUICtrlMonthCal_GetMinReqWidth",documentation:"Retrieves the minimum width required to display a full month"},{label:"_GUICtrlMonthCal_GetMonthDelta",documentation:"Retrieves the scroll rate for a month calendar control"},{label:"_GUICtrlMonthCal_GetMonthRange",documentation:"Retrieves date information that represents the high and low display limits"},{label:"_GUICtrlMonthCal_GetMonthRangeMax",documentation:"Retrieves date information that represents the high limit of the controls display"},{label:"_GUICtrlMonthCal_GetMonthRangeMaxStr",documentation:"Retrieves date information that represents the high limit of the controls display in string format"},{label:"_GUICtrlMonthCal_GetMonthRangeMin",documentation:"Retrieves date information that represents the low limit of the controls display"},{label:"_GUICtrlMonthCal_GetMonthRangeMinStr",documentation:"Retrieves date information that represents the low limit of the controls display in string format"},{label:"_GUICtrlMonthCal_GetMonthRangeSpan",documentation:"Returns a value that represents the range, in months, spanned"},{label:"_GUICtrlMonthCal_GetRange",documentation:"Retrieves the minimum and maximum allowable dates"},{label:"_GUICtrlMonthCal_GetRangeMax",documentation:"Retrieves the upper limit date range"},{label:"_GUICtrlMonthCal_GetRangeMaxStr",documentation:"Retrieves the upper limit date range in string format"},{label:"_GUICtrlMonthCal_GetRangeMin",documentation:"Retrieves the lower limit date range"},{label:"_GUICtrlMonthCal_GetRangeMinStr",documentation:"Retrieves the lower limit date range in string form"},{label:"_GUICtrlMonthCal_GetSelRange",documentation:"Retrieves the upper and lower limits of the date range currently selected"},{label:"_GUICtrlMonthCal_GetSelRangeMax",documentation:"Retrieves the upper date range currently selected by the user"},{label:"_GUICtrlMonthCal_GetSelRangeMaxStr",documentation:"Retrieves the upper date range currently selected by the user in string form"},{label:"_GUICtrlMonthCal_GetSelRangeMin",documentation:"Retrieves the lower date range currently selected by the user"},{label:"_GUICtrlMonthCal_GetSelRangeMinStr",documentation:"Retrieves the lower date range currently selected by the user in string form"},{label:"_GUICtrlMonthCal_GetToday",documentation:'Retrieves the date information for the date specified as "today"'},{label:"_GUICtrlMonthCal_GetTodayStr",documentation:'Retrieves the date information for the date specified as "today" in string format'},{label:"_GUICtrlMonthCal_GetUnicodeFormat",documentation:"Retrieves the Unicode character format flag for the control"},{label:"_GUICtrlMonthCal_HitTest",documentation:"Determines which portion of a month calendar control is at a given point"},{label:"_GUICtrlMonthCal_SetCalendarBorder",documentation:"Sets the size of the border, in pixels"},{label:"_GUICtrlMonthCal_SetColor",documentation:"Sets the color for a given portion of the month calendar"},{label:"_GUICtrlMonthCal_SetCurSel",documentation:"Sets the currently selected date"},{label:"_GUICtrlMonthCal_SetDayState",documentation:"Sets the day states for all months that are currently visible"},{label:"_GUICtrlMonthCal_SetFirstDOW",documentation:"Sets the first day of the week for a month calendar control"},{label:"_GUICtrlMonthCal_SetMaxSelCount",documentation:"Sets the maximum number of days that can be selected in a month calendar control"},{label:"_GUICtrlMonthCal_SetMonthDelta",documentation:"Sets the scroll rate for a month calendar control"},{label:"_GUICtrlMonthCal_SetRange",documentation:"Sets date information that represents the high and low limits"},{label:"_GUICtrlMonthCal_SetSelRange",documentation:"Sets the selection for a month calendar control to a given date range"},{label:"_GUICtrlMonthCal_SetToday",documentation:'Sets the date information for the date specified as "today"'},{label:"_GUICtrlMonthCal_SetUnicodeFormat",documentation:"Sets the Unicode character format flag for the control "}],t.CompletionItemKind.Function,"GuiMonthCal UDF","GuiMonthCal.au3"),si=(0,Ce.fillCompletions)([{label:"_GUICtrlRebar_AddBand",documentation:"Adds a new band in a rebar control"},{label:"_GUICtrlRebar_AddToolBarBand",documentation:"Adds a new band in a rebar control"},{label:"_GUICtrlRebar_BeginDrag",documentation:"Adds a new band in a rebar control"},{label:"_GUICtrlRebar_Create",documentation:"Create a Rebar control"},{label:"_GUICtrlRebar_DeleteBand",documentation:"Deletes a band from a rebar control"},{label:"_GUICtrlRebar_Destroy",documentation:"Delete the control"},{label:"_GUICtrlRebar_DragMove",documentation:"Updates the drag position in the rebar control after a previous _GUICtrlRebar_BeginDrag message"},{label:"_GUICtrlRebar_EndDrag",documentation:"Terminates the rebar control's drag-and-drop operation"},{label:"_GUICtrlRebar_GetBandBackColor",documentation:"Retrieves the Band background color"},{label:"_GUICtrlRebar_GetBandBorders",documentation:"Retrieves the borders of a band"},{label:"_GUICtrlRebar_GetBandBordersEx",documentation:"Retrieves the borders of a band"},{label:"_GUICtrlRebar_GetBandChildHandle",documentation:"Retrieves the Handle to the child window contained in the band, if any"},{label:"_GUICtrlRebar_GetBandChildSize",documentation:"Retrieves the Child size settings"},{label:"_GUICtrlRebar_GetBandCount",documentation:"Retrieves the count of bands currently in the rebar control"},{label:"_GUICtrlRebar_GetBandForeColor",documentation:"Retrieves the Band foreground color"},{label:"_GUICtrlRebar_GetBandHeaderSize",documentation:"Retrieves the size of the band's header, in pixels"},{label:"_GUICtrlRebar_GetBandID",documentation:"Get the value that the control uses to identify this band for custom draw notification messages"},{label:"_GUICtrlRebar_GetBandIdealSize",documentation:"Get Ideal width of the band, in pixels"},{label:"_GUICtrlRebar_GetBandLength",documentation:"Get Length of the band, in pixels"},{label:"_GUICtrlRebar_GetBandLParam",documentation:"Get Application-defined value"},{label:"_GUICtrlRebar_GetBandMargins",documentation:"Get Length of the band, in pixels"},{label:"_GUICtrlRebar_GetBandMarginsEx",documentation:"Get Length of the band, in pixels"},{label:"_GUICtrlRebar_GetBandRect",documentation:"Retrieves the bounding rectangle for a given band in a rebar control"},{label:"_GUICtrlRebar_GetBandRectEx",documentation:"Retrieves the bounding rectangle for a given band in a rebar control"},{label:"_GUICtrlRebar_GetBandStyle",documentation:"Get the band style Flags"},{label:"_GUICtrlRebar_GetBandStyleBreak",documentation:"Determine if band break flag is set"},{label:"_GUICtrlRebar_GetBandStyleChildEdge",documentation:"Determine if band child edge flag is set"},{label:"_GUICtrlRebar_GetBandStyleFixedBMP",documentation:"Determine if band fixed BMP flag is set"},{label:"_GUICtrlRebar_GetBandStyleFixedSize",documentation:"Determine if band fixed size flag is set"},{label:"_GUICtrlRebar_GetBandStyleGripperAlways",documentation:"Determine if band gripper flag is set"},{label:"_GUICtrlRebar_GetBandStyleHidden",documentation:"Determine if band hidden flag is set"},{label:"_GUICtrlRebar_GetBandStyleHideTitle",documentation:"Determine if band hide title flag is set"},{label:"_GUICtrlRebar_GetBandStyleNoGripper",documentation:"Determine if band noGripper flag is set"},{label:"_GUICtrlRebar_GetBandStyleTopAlign",documentation:"Determine if band top align flag is set"},{label:"_GUICtrlRebar_GetBandStyleUseChevron",documentation:"Determine if band use chevron flag is set"},{label:"_GUICtrlRebar_GetBandStyleVariableHeight",documentation:"Determine if band variable height flag is set"},{label:"_GUICtrlRebar_GetBandText",documentation:"Retrieves the display text for the band"},{label:"_GUICtrlRebar_GetBarHeight",documentation:"Retrieves the height of the rebar control"},{label:"_GUICtrlRebar_GetBarInfo",documentation:"Retrieves information about the rebar control and the image list it uses"},{label:"_GUICtrlRebar_GetBKColor",documentation:"Retrieves a rebar control's default background color"},{label:"_GUICtrlRebar_GetColorScheme",documentation:"Retrieves the color scheme information from the rebar control"},{label:"_GUICtrlRebar_GetRowCount",documentation:"Retrieves the number of rows of bands in a rebar control"},{label:"_GUICtrlRebar_GetRowHeight",documentation:"Retrieves the height of a specified row in a rebar control"},{label:"_GUICtrlRebar_GetTextColor",documentation:"Retrieves a rebar control's default text color"},{label:"_GUICtrlRebar_GetToolTips",documentation:"Retrieves the handle to any ToolTip control associated with the rebar control"},{label:"_GUICtrlRebar_GetUnicodeFormat",documentation:"Retrieves the Unicode character format flag for the control"},{label:"_GUICtrlRebar_HitTest",documentation:"Determines which band is at a specified position"},{label:"_GUICtrlRebar_IDToIndex",documentation:"Converts a band identifier to a band index in a rebar control"},{label:"_GUICtrlRebar_MaximizeBand",documentation:"Resizes a band in a rebar control to either its ideal or largest size"},{label:"_GUICtrlRebar_MinimizeBand",documentation:"Resizes a band in a rebar control to its smallest size"},{label:"_GUICtrlRebar_MoveBand",documentation:"Moves a band from one index to another"},{label:"_GUICtrlRebar_SetBandBackColor",documentation:"Set the Band background color"},{label:"_GUICtrlRebar_SetBandForeColor",documentation:"Set the Band foreground color"},{label:"_GUICtrlRebar_SetBandHeaderSize",documentation:"Set the size of the band's header, in pixels"},{label:"_GUICtrlRebar_SetBandID",documentation:"Set the value that the control uses to identify this band for custom draw notification messages"},{label:"_GUICtrlRebar_SetBandIdealSize",documentation:"Set Ideal width of the band, in pixels"},{label:"_GUICtrlRebar_SetBandLength",documentation:"Set the size length of the band"},{label:"_GUICtrlRebar_SetBandLParam",documentation:"Set Application-defined value"},{label:"_GUICtrlRebar_SetBandStyle",documentation:"Set the band style Flags"},{label:"_GUICtrlRebar_SetBandStyleBreak",documentation:"Set whether the band is on a new line"},{label:"_GUICtrlRebar_SetBandStyleChildEdge",documentation:"Set whether the band has an edge at the top and bottom of the child window"},{label:"_GUICtrlRebar_SetBandStyleFixedBMP",documentation:"Set whether the band background bitmap does not move when the band is resized"},{label:"_GUICtrlRebar_SetBandStyleFixedSize",documentation:"Set whether the band can't be sized. With this style, the sizing grip is not displayed on the band"},{label:"_GUICtrlRebar_SetBandStyleGripperAlways",documentation:"Set whether the band will always have a sizing grip, even if it is the only band in the rebar"},{label:"_GUICtrlRebar_SetBandStyleHidden",documentation:"Set whether the band will not be visible"},{label:"_GUICtrlRebar_SetBandStyleHideTitle",documentation:"Set whether to keep band title hidden"},{label:"_GUICtrlRebar_SetBandStyleNoGripper",documentation:"Set whether the band will never have a sizing grip, even if there is more than one band in the rebar"},{label:"_GUICtrlRebar_SetBandStyleTopAlign",documentation:"Set whether to keep band in top row"},{label:"_GUICtrlRebar_SetBandStyleUseChevron",documentation:"Set whether to display drop-down button"},{label:"_GUICtrlRebar_SetBandStyleVariableHeight",documentation:"Set whether the band can be resized by the rebar control"},{label:"_GUICtrlRebar_SetBandText",documentation:"Sets the display text for the band of a rebar control"},{label:"_GUICtrlRebar_SetBarInfo",documentation:"Sets the characteristics of a rebar control"},{label:"_GUICtrlRebar_SetBKColor",documentation:"Sets the default background color of a rebar control"},{label:"_GUICtrlRebar_SetColorScheme",documentation:"Sets the color scheme of a rebar control"},{label:"_GUICtrlRebar_SetTextColor",documentation:"Sets a rebar control's default text color"},{label:"_GUICtrlRebar_SetToolTips",documentation:"Associates a ToolTip control with the rebar control"},{label:"_GUICtrlRebar_SetUnicodeFormat",documentation:"Sets the Unicode character format flag for the control"},{label:"_GUICtrlRebar_ShowBand",documentation:"Shows or hides a given band in a rebar control "}],t.CompletionItemKind.Function,"GuiReBar UDF","GuiReBar.au3"),di=(0,Ce.fillCompletions)([{label:"_GUICtrlRichEdit_AppendText",documentation:"Appends text at the end of the client area"},{label:"_GUICtrlRichEdit_AutoDetectURL",documentation:"Enables or disables automatic detection of URLS"},{label:"_GUICtrlRichEdit_CanPaste",documentation:"Can the contents of the clipboard be pasted into the control?"},{label:"_GUICtrlRichEdit_CanPasteSpecial",documentation:"Can the contents of the clipboard be pasted into the control in both formats?"},{label:"_GUICtrlRichEdit_CanRedo",documentation:"Can an undone action be redone?"},{label:"_GUICtrlRichEdit_CanUndo",documentation:"Can an action be undone?"},{label:"_GUICtrlRichEdit_ChangeFontSize",documentation:"Increment or decrement font size(s) of selected text"},{label:"_GUICtrlRichEdit_Copy",documentation:"Copy text to clipboard"},{label:"_GUICtrlRichEdit_Create",documentation:"Create an Edit control"},{label:"_GUICtrlRichEdit_Cut",documentation:"Cut text to clipboard"},{label:"_GUICtrlRichEdit_Deselect",documentation:"Deselects text, leaving none selected"},{label:"_GUICtrlRichEdit_Destroy",documentation:"Delete the Rich Edit control"},{label:"_GUICtrlRichEdit_EmptyUndoBuffer",documentation:"Resets the undo flag of the control"},{label:"_GUICtrlRichEdit_FindText",documentation:"Search for a text starting at insertion point or at anchor point of selection"},{label:"_GUICtrlRichEdit_FindTextInRange",documentation:"Search for a text in a range of inter-character positions"},{label:"_GUICtrlRichEdit_GetBkColor",documentation:"Gets the background color of the control"},{label:"_GUICtrlRichEdit_GetCharAttributes",documentation:"Returns attributes of selected text"},{label:"_GUICtrlRichEdit_GetCharBkColor",documentation:"Retrieves the background color of the selected text or, if none selected, of the character to the right of the insertion point"},{label:"_GUICtrlRichEdit_GetCharColor",documentation:"Retrieves the color of the selected text or, if none selected, of the character to the right of the insertion point"},{label:"_GUICtrlRichEdit_GetCharPosFromXY",documentation:"Gets inter-character position closest to a specified point in the client area"},{label:"_GUICtrlRichEdit_GetCharPosOfNextWord",documentation:"Gets inter-character position before the next word"},{label:"_GUICtrlRichEdit_GetCharPosOfPreviousWord",documentation:"Gets inter-character position before the Previous word"},{label:"_GUICtrlRichEdit_GetCharWordBreakInfo",documentation:"Gets inter-character position before the Previous word/"},{label:"_GUICtrlRichEdit_GetFirstCharPosOnLine",documentation:"Retrieves the inter-character position preceding the first character of a line"},{label:"_GUICtrlRichEdit_GetFont",documentation:"Gets the font attributes of a selection or, if no selection, at the insertion point"},{label:"_GUICtrlRichEdit_GetLineCount",documentation:"Retrieves the number of lines in a multi-line edit control"},{label:"_GUICtrlRichEdit_GetLineLength",documentation:"Retrieves the length of a line"},{label:"_GUICtrlRichEdit_GetLineNumberFromCharPos",documentation:"Retrieves the line number on which an inter-character position is found"},{label:"_GUICtrlRichEdit_GetNextRedo",documentation:"Retrieves the name or type ID of the next possible redo action"},{label:"_GUICtrlRichEdit_GetNextUndo",documentation:"Retrieves the name or type ID of the next possible Undo action"},{label:"_GUICtrlRichEdit_GetNumberOfFirstVisibleLine",documentation:"Gets number of the first line which is visible in the control"},{label:"_GUICtrlRichEdit_GetParaAlignment",documentation:"Gets the alignment of selected paragraph(s), or (if no selection) of the current paragraph"},{label:"_GUICtrlRichEdit_GetParaAttributes",documentation:"Gets the attributes of (first) selected paragraph or (if no selection) of the current paragraph"},{label:"_GUICtrlRichEdit_GetParaBorder",documentation:"Gets the border settings of (first) selected paragraph or (if no selection) of the current paragraph"},{label:"_GUICtrlRichEdit_GetParaIndents",documentation:"Gets the border indent settings of (first) selected paragraph or (if no selection) of the current paragraph"},{label:"_GUICtrlRichEdit_GetParaNumbering",documentation:"Gets the numbering style of (first) selected paragraph or (if no selection) of the current paragraph"},{label:"_GUICtrlRichEdit_GetParaShading",documentation:"Gets the shading settings of (first) selected paragraph or (if no selection) of the current paragraph"},{label:"_GUICtrlRichEdit_GetParaSpacing",documentation:"Gets the spacing settings of (first) selected paragraph or (if no selection) of the current paragraph"},{label:"_GUICtrlRichEdit_GetParaTabStops",documentation:"Gets the tabstops of (first) selected paragraph or (if no selection) of the current paragraph"},{label:"_GUICtrlRichEdit_GetPasswordChar",documentation:"Gets the password character that a rich edit control displays when the user enters text"},{label:"_GUICtrlRichEdit_GetRECT",documentation:"Retrieves the formatting rectangle of a control"},{label:"_GUICtrlRichEdit_GetScrollPos",documentation:"Gets the Scrolling position of the control"},{label:"_GUICtrlRichEdit_GetSel",documentation:"Gets the low and high inter-character positions of a selection"},{label:"_GUICtrlRichEdit_GetSelAA",documentation:"Gets the anchor and active inter-character positions of a selection, in that order"},{label:"_GUICtrlRichEdit_GetSelText",documentation:"Retrieves the currently selected text"},{label:"_GUICtrlRichEdit_GetSpaceUnit",documentation:"Gets the unit of measure of horizontal and vertical space used in parameters of various _GUICtrlRichEdit functions"},{label:"_GUICtrlRichEdit_GetText",documentation:"Get all of the text in the control"},{label:"_GUICtrlRichEdit_GetTextInLine",documentation:"Gets a line of text"},{label:"_GUICtrlRichEdit_GetTextInRange",documentation:"Gets the text from from one inter-character position to another"},{label:"_GUICtrlRichEdit_GetTextLength",documentation:"Get the length of the whole text in the control"},{label:"_GUICtrlRichEdit_GetVersion",documentation:"Retrieves the version of Rich Edit"},{label:"_GUICtrlRichEdit_GetXYFromCharPos",documentation:"Retrieves the XY coordinates of an inter-character position"},{label:"_GUICtrlRichEdit_GetZoom",documentation:"Gets the zoom level of the control"},{label:"_GUICtrlRichEdit_GotoCharPos",documentation:"Moves the insertion point to an inter-character position"},{label:"_GUICtrlRichEdit_HideSelection",documentation:"Hides (or shows) a selection"},{label:"_GUICtrlRichEdit_InsertText",documentation:"Inserts text at insertion point or anchor point of selection"},{label:"_GUICtrlRichEdit_IsModified",documentation:"Retrieves the state of a rich edit control's modification flag"},{label:"_GUICtrlRichEdit_IsTextSelected",documentation:"Is text selected?"},{label:"_GUICtrlRichEdit_Paste",documentation:"Paste RTF or RTF with Objects from clipboard"},{label:"_GUICtrlRichEdit_PasteSpecial",documentation:"Paste RTF or RTF and Objects from clipboard"},{label:"_GUICtrlRichEdit_PauseRedraw",documentation:"Pauses redrawing of the control"},{label:"_GUICtrlRichEdit_Redo",documentation:"Redoes last undone action"},{label:"_GUICtrlRichEdit_ReplaceText",documentation:"Replaces selected text"},{label:"_GUICtrlRichEdit_ResumeRedraw",documentation:"Resumes redrawing of the control"},{label:"_GUICtrlRichEdit_ScrollLineOrPage",documentation:"Scrolls the text down or up a line or a page"},{label:"_GUICtrlRichEdit_ScrollLines",documentation:"Scrolls the text down or up a number of lines"},{label:"_GUICtrlRichEdit_ScrollToCaret",documentation:"Scrolls to show line on which caret (insertion point) is"},{label:"_GUICtrlRichEdit_SetBkColor",documentation:"Sets the background color of the control"},{label:"_GUICtrlRichEdit_SetCharAttributes",documentation:"Turns an attribute on or off for selected text or, if none selected, for text inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetCharBkColor",documentation:"Sets the background color of selected text or, if none selected, sets the background color of text inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetCharColor",documentation:"Sets the color of selected text or, if none selected, sets the background color of text inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetEventMask",documentation:"Specifies which notification messages are sent to the parent window"},{label:"_GUICtrlRichEdit_SetFont",documentation:"Sets the font attributes of selected text or, if none selected, sets those of text inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetLimitOnText",documentation:"Change number of characters that can be typed, pasted or streamed in as Rich Text Format"},{label:"_GUICtrlRichEdit_SetModified",documentation:"Sets or clears the modification flag"},{label:"_GUICtrlRichEdit_SetParaAlignment",documentation:"Sets alignment of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetParaAttributes",documentation:"Sets attributes of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetParaBorder",documentation:"Sets the border of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetParaIndents",documentation:"Sets indents of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetParaNumbering",documentation:"Sets numbering of paragraph(s) in the current selection or, if no selection, of paragraph(s) inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetParaShading",documentation:"Sets the shading of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetParaSpacing",documentation:"Sets paragraph spacing of paragraphs having selected text or, if none selected, sets it for text inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetParaTabStops",documentation:"Sets tab stops of paragraphs having selected text or, if none selected, sets it for text inserted at the insertion point"},{label:"_GUICtrlRichEdit_SetPasswordChar",documentation:"Sets the characters to be displayed instead of those typed, or causes typed characters to show"},{label:"_GUICtrlRichEdit_SetReadOnly",documentation:"Sets or removes the read-only state"},{label:"_GUICtrlRichEdit_SetRECT",documentation:"Sets the formatting rectangle of a Rich Edit control"},{label:"_GUICtrlRichEdit_SetScrollPos",documentation:"Scrolls the display such that ($ix,$iY) is in the upper left corner of the control"},{label:"_GUICtrlRichEdit_SetSel",documentation:"Sets the low and high character position of a selection"},{label:"_GUICtrlRichEdit_SetSpaceUnit",documentation:"Sets the unit of measure of horizontal and vertical space used in parameters of various _GUICtrlRichEdit functions"},{label:"_GUICtrlRichEdit_SetTabStops",documentation:"Sets tab stops for the control"},{label:"_GUICtrlRichEdit_SetText",documentation:"Sets the text of a control"},{label:"_GUICtrlRichEdit_SetUndoLimit",documentation:"Sets the maximum number of actions that can stored in the undo queue"},{label:"_GUICtrlRichEdit_SetZoom",documentation:"Sets zoom level of the control"},{label:"_GUICtrlRichEdit_StreamFromFile",documentation:"Sets text in a control from a file"},{label:"_GUICtrlRichEdit_StreamFromVar",documentation:"Sets text in a control from a variable"},{label:"_GUICtrlRichEdit_StreamToFile",documentation:"Writes contents of a control to a file"},{label:"_GUICtrlRichEdit_StreamToVar",documentation:"Writes contents of a control to a variable"},{label:"_GUICtrlRichEdit_Undo",documentation:"Undoes the last edit control operation in the control's undo queue "}],t.CompletionItemKind.Function,"GuiRichEdit UDF","GuiRichEdit.au3"),ci=(0,Ce.fillCompletions)([{label:"_GUIScrollBars_EnableScrollBar",documentation:"Enable/Disable scrollbar"},{label:"_GUIScrollBars_GetScrollBarInfoEx",documentation:"Retrieves information about the specified scroll bar"},{label:"_GUIScrollBars_GetScrollBarRect",documentation:"Retrieves coordinates of the scroll bar"},{label:"_GUIScrollBars_GetScrollBarRGState",documentation:"Retrieves the state of a scroll bar component"},{label:"_GUIScrollBars_GetScrollBarXYLineButton",documentation:"Retrieves the Height or width of the thumb"},{label:"_GUIScrollBars_GetScrollBarXYThumbBottom",documentation:"Retrieves the Position of the bottom or right of the thumb"},{label:"_GUIScrollBars_GetScrollBarXYThumbTop",documentation:"Retrieves the Position of the top or left of the thumb"},{label:"_GUIScrollBars_GetScrollInfo",documentation:"Retrieves the parameters of a scroll bar"},{label:"_GUIScrollBars_GetScrollInfoEx",documentation:"Retrieves the parameters of a scroll bar"},{label:"_GUIScrollBars_GetScrollInfoMax",documentation:"Retrieves the maximum scrolling position"},{label:"_GUIScrollBars_GetScrollInfoMin",documentation:"Retrieves the minimum scrolling position"},{label:"_GUIScrollBars_GetScrollInfoPage",documentation:"Retrieves the page size"},{label:"_GUIScrollBars_GetScrollInfoPos",documentation:"Retrieves the position of the scroll box"},{label:"_GUIScrollBars_GetScrollInfoTrackPos",documentation:"Retrieves the immediate position of a scroll box that the user is dragging"},{label:"_GUIScrollBars_GetScrollPos",documentation:"Retrieves the current position of the scroll box (thumb) in the specified scroll bar"},{label:"_GUIScrollBars_GetScrollRange",documentation:"Retrieves the current minimum and maximum scroll box (thumb) positions for the specified scroll bar"},{label:"_GUIScrollBars_Init",documentation:"Initialize the scrollbars for the window"},{label:"_GUIScrollBars_ScrollWindow",documentation:"Scrolls the contents of the specified window's client area"},{label:"_GUIScrollBars_SetScrollInfo",documentation:"Sets the parameters of a scroll bar"},{label:"_GUIScrollBars_SetScrollInfoMax",documentation:"Sets the maximum scrolling position"},{label:"_GUIScrollBars_SetScrollInfoMin",documentation:"Sets the minimum scrolling position"},{label:"_GUIScrollBars_SetScrollInfoPage",documentation:"Sets the page size"},{label:"_GUIScrollBars_SetScrollInfoPos",documentation:"Sets the position of the scroll box (thumb) in the specified scroll bar"},{label:"_GUIScrollBars_SetScrollRange",documentation:"Sets the minimum and maximum scroll box positions for the specified scroll bar"},{label:"_GUIScrollBars_ShowScrollBar",documentation:"Shows or hides the specified scroll bar "}],t.CompletionItemKind.Function,"GuiScrollBars UDF","GuiScrollBars.au3"),hi=(0,Ce.fillCompletions)([{label:"_GUICtrlSlider_ClearSel",documentation:"Clears the current selection range"},{label:"_GUICtrlSlider_ClearTics",documentation:"Removes the current tick marks from a slider"},{label:"_GUICtrlSlider_Create",documentation:"Create a Slider control"},{label:"_GUICtrlSlider_Destroy",documentation:"Delete the control"},{label:"_GUICtrlSlider_GetBuddy",documentation:"Retrieves the handle to a slider control buddy window at a given location"},{label:"_GUICtrlSlider_GetChannelRect",documentation:"Retrieves the size and position of the bounding rectangle for a sliders's channel"},{label:"_GUICtrlSlider_GetChannelRectEx",documentation:"Retrieves the size and position of the bounding rectangle for a sliders's channel"},{label:"_GUICtrlSlider_GetLineSize",documentation:"Retrieves the number of logical positions the slider moves"},{label:"_GUICtrlSlider_GetLogicalTics",documentation:"Retrieves an array that contains the logical positions of the tick marks for a slider"},{label:"_GUICtrlSlider_GetNumTics",documentation:"Retrieves the number of tick marks from a slider"},{label:"_GUICtrlSlider_GetPageSize",documentation:"Retrieves the number of logical positions the slider moves"},{label:"_GUICtrlSlider_GetPos",documentation:"Retrieves the logical position the slider"},{label:"_GUICtrlSlider_GetRange",documentation:"Retrieves the maximum and minimum position for the slider"},{label:"_GUICtrlSlider_GetRangeMax",documentation:"Retrieves the maximum position for the slider"},{label:"_GUICtrlSlider_GetRangeMin",documentation:"Retrieves the minimum position for the slider"},{label:"_GUICtrlSlider_GetSel",documentation:"Retrieves the ending and starting position of the current selection range"},{label:"_GUICtrlSlider_GetSelEnd",documentation:"Retrieves the ending position of the current selection range"},{label:"_GUICtrlSlider_GetSelStart",documentation:"Retrieves the starting position of the current selection range"},{label:"_GUICtrlSlider_GetThumbLength",documentation:"Retrieves the length of the slider"},{label:"_GUICtrlSlider_GetThumbRect",documentation:"Retrieves the size and position of the bounding rectangle for the slider"},{label:"_GUICtrlSlider_GetThumbRectEx",documentation:"Retrieves the size and position of the bounding rectangle for the slider"},{label:"_GUICtrlSlider_GetTic",documentation:"Retrieves the logical position of a tick mark"},{label:"_GUICtrlSlider_GetTicPos",documentation:"Retrieves the current physical position of a tick mark"},{label:"_GUICtrlSlider_GetToolTips",documentation:"Retrieves the handle to the ToolTip control assigned to the slider, if any"},{label:"_GUICtrlSlider_GetUnicodeFormat",documentation:"Retrieves the Unicode character format flag for the control"},{label:"_GUICtrlSlider_SetBuddy",documentation:"Assigns a window as the buddy window for a slider control"},{label:"_GUICtrlSlider_SetLineSize",documentation:"Sets the number of logical positions the slider moves"},{label:"_GUICtrlSlider_SetPageSize",documentation:"Sets the number of logical positions the slider moves"},{label:"_GUICtrlSlider_SetPos",documentation:"Sets the current logical position of the slider"},{label:"_GUICtrlSlider_SetRange",documentation:"Sets the range of minimum and maximum logical positions for the slider"},{label:"_GUICtrlSlider_SetRangeMax",documentation:"Sets the maximum logical position for the slider"},{label:"_GUICtrlSlider_SetRangeMin",documentation:"Sets the minimum logical position for the slider"},{label:"_GUICtrlSlider_SetSel",documentation:"Sets the starting and ending positions for the available selection range"},{label:"_GUICtrlSlider_SetSelEnd",documentation:"Sets the ending logical position of the current selection range"},{label:"_GUICtrlSlider_SetSelStart",documentation:"Sets the starting logical position of the current selection range"},{label:"_GUICtrlSlider_SetThumbLength",documentation:"Sets the length of the slider"},{label:"_GUICtrlSlider_SetTic",documentation:"Sets a tick mark in a slider at the specified logical position"},{label:"_GUICtrlSlider_SetTicFreq",documentation:"Sets the interval frequency for tick marks in a slider"},{label:"_GUICtrlSlider_SetTipSide",documentation:"Positions a ToolTip control"},{label:"_GUICtrlSlider_SetToolTips",documentation:"Assigns a ToolTip control to a slider control"},{label:"_GUICtrlSlider_SetUnicodeFormat",documentation:"Sets the Unicode character format flag for the control"}],t.CompletionItemKind.Function,"GuiSlider UDF","GuiSlider.au3"),ui=(0,Ce.fillCompletions)([{label:"_GUICtrlStatusBar_Create",documentation:"Create a statusbar"},{label:"_GUICtrlStatusBar_Destroy",documentation:"Delete the control"},{label:"_GUICtrlStatusBar_EmbedControl",documentation:"Embeds a child control in the control"},{label:"_GUICtrlStatusBar_GetBorders",documentation:"Retrieves the current widths of the horizontal and vertical borders"},{label:"_GUICtrlStatusBar_GetBordersHorz",documentation:"Retrieves the current width of the horizontal border"},{label:"_GUICtrlStatusBar_GetBordersRect",documentation:"Retrieves the current width of the rectangle border"},{label:"_GUICtrlStatusBar_GetBordersVert",documentation:"Retrieves the current width of the vertical border"},{label:"_GUICtrlStatusBar_GetCount",documentation:"Retrieves the number of parts"},{label:"_GUICtrlStatusBar_GetHeight",documentation:"Retrieves the height of the statusbar"},{label:"_GUICtrlStatusBar_GetIcon",documentation:"Retrieves the icon for a part"},{label:"_GUICtrlStatusBar_GetParts",documentation:"Retrieves the number of parts and the part edges"},{label:"_GUICtrlStatusBar_GetRect",documentation:"Retrieves the bounding rectangle of a part"},{label:"_GUICtrlStatusBar_GetRectEx",documentation:"Retrieves the bounding rectangle of a part"},{label:"_GUICtrlStatusBar_GetText",documentation:"Retrieves the text from the specified part"},{label:"_GUICtrlStatusBar_GetTextFlags",documentation:"Retrieves the text length flags for a part"},{label:"_GUICtrlStatusBar_GetTextLength",documentation:"Retrieves the length of a part text"},{label:"_GUICtrlStatusBar_GetTextLengthEx",documentation:"Retrieves the uFlag of a part"},{label:"_GUICtrlStatusBar_GetTipText",documentation:"Retrieves the ToolTip text for a part"},{label:"_GUICtrlStatusBar_GetUnicodeFormat",documentation:"Retrieves the Unicode character format flag"},{label:"_GUICtrlStatusBar_GetWidth",documentation:"Retrieves the width of a part"},{label:"_GUICtrlStatusBar_IsSimple",documentation:"Checks a status bar control to determine if it is in simple mode"},{label:"_GUICtrlStatusBar_Resize",documentation:"Causes the status bar to resize itself"},{label:"_GUICtrlStatusBar_SetBkColor",documentation:"Sets the background color"},{label:"_GUICtrlStatusBar_SetIcon",documentation:"Sets the icon for a part"},{label:"_GUICtrlStatusBar_SetMinHeight",documentation:"Sets the minimum height of a status window's drawing area"},{label:"_GUICtrlStatusBar_SetParts",documentation:"Sets the number of parts and the part edges"},{label:"_GUICtrlStatusBar_SetSimple",documentation:"Specifies whether a status window displays simple text or displays all window parts"},{label:"_GUICtrlStatusBar_SetText",documentation:"Sets the text in the specified part of a status window"},{label:"_GUICtrlStatusBar_SetTipText",documentation:"Sets the ToolTip text for a part"},{label:"_GUICtrlStatusBar_SetUnicodeFormat",documentation:"Sets the Unicode character format flag"},{label:"_GUICtrlStatusBar_ShowHide",documentation:"Show/Hide the StatusBar control "}],t.CompletionItemKind.Function,"GuiStatusBar UDF","GuiStatusBar.au3"),mi=(0,Ce.fillCompletions)([{label:"_GUICtrlTab_ActivateTab",documentation:"Activates a tab by its index"},{label:"_GUICtrlTab_ClickTab",documentation:"Clicks a tab"},{label:"_GUICtrlTab_Create",documentation:"Create a TabControl control"},{label:"_GUICtrlTab_DeleteAllItems",documentation:"Deletes all tabs"},{label:"_GUICtrlTab_DeleteItem",documentation:"Deletes a tab"},{label:"_GUICtrlTab_DeselectAll",documentation:"Resets tabs, clearing any that were set to the pressed state"},{label:"_GUICtrlTab_Destroy",documentation:"Delete the control"},{label:"_GUICtrlTab_FindTab",documentation:"Searches for a tab with the specific text"},{label:"_GUICtrlTab_GetCurFocus",documentation:"Returns the index of the item that has the focus in a tab control"},{label:"_GUICtrlTab_GetCurSel",documentation:"Determines the currently selected tab"},{label:"_GUICtrlTab_GetDisplayRect",documentation:"Retrieves the display rectangle of the client area"},{label:"_GUICtrlTab_GetDisplayRectEx",documentation:"Retrieves the display rectangle of the client area"},{label:"_GUICtrlTab_GetExtendedStyle",documentation:"Retrieves the extended styles that are currently in use"},{label:"_GUICtrlTab_GetImageList",documentation:"Retrieves the tab control image list"},{label:"_GUICtrlTab_GetItem",documentation:"Retrieves information about a tab"},{label:"_GUICtrlTab_GetItemCount",documentation:"Retrieves the number of tabs"},{label:"_GUICtrlTab_GetItemImage",documentation:"Retrieves the image index for a tab"},{label:"_GUICtrlTab_GetItemParam",documentation:"Retrieves the param data for a tab"},{label:"_GUICtrlTab_GetItemRect",documentation:"Retrieves the bounding rectangle for a tab"},{label:"_GUICtrlTab_GetItemRectEx",documentation:"Retrieves the bounding rectangle for a tab"},{label:"_GUICtrlTab_GetItemState",documentation:"Retrieves the state of a tab"},{label:"_GUICtrlTab_GetItemText",documentation:"Retrieves the text of a tab"},{label:"_GUICtrlTab_GetRowCount",documentation:"Retrieves the current number of rows of tabs"},{label:"_GUICtrlTab_GetToolTips",documentation:"Retrieves the handle to the ToolTip control associated with the control"},{label:"_GUICtrlTab_GetUnicodeFormat",documentation:"Retrieves the Unicode character format flag for the control"},{label:"_GUICtrlTab_HighlightItem",documentation:"Sets the highlight state of a tab item"},{label:"_GUICtrlTab_HitTest",documentation:"Determines where a point lies control"},{label:"_GUICtrlTab_InsertItem",documentation:"Inserts a new tab"},{label:"_GUICtrlTab_RemoveImage",documentation:"Removes an image from the control's image list"},{label:"_GUICtrlTab_SetCurFocus",documentation:"Sets the focus to a specified tab"},{label:"_GUICtrlTab_SetCurSel",documentation:"Selects a tab"},{label:"_GUICtrlTab_SetExtendedStyle",documentation:"Sets the extended styles that are currently in use"},{label:"_GUICtrlTab_SetImageList",documentation:"Sets the image list associated with a tab control"},{label:"_GUICtrlTab_SetItem",documentation:"Sets information about a tab"},{label:"_GUICtrlTab_SetItemImage",documentation:"Sets the image of a tab"},{label:"_GUICtrlTab_SetItemParam",documentation:"Sets the param data of a tab"},{label:"_GUICtrlTab_SetItemSize",documentation:"Sets the width and height of tabs in a fixed width or owner drawn control"},{label:"_GUICtrlTab_SetItemState",documentation:"Sets the state of a tab"},{label:"_GUICtrlTab_SetItemText",documentation:"Sets the text of a tab"},{label:"_GUICtrlTab_SetMinTabWidth",documentation:"Sets the minimum width of items in a tab control"},{label:"_GUICtrlTab_SetPadding",documentation:"Sets the amount of space around each tab's icon and label"},{label:"_GUICtrlTab_SetToolTips",documentation:"Sets the handle to the ToolTip control associated with the control"},{label:"_GUICtrlTab_SetUnicodeFormat",documentation:"Sets the Unicode character format flag for the control "}],t.CompletionItemKind.Function,"GuiTab UDF","GuiTab.au3"),pi=(0,Ce.fillCompletions)([{label:"_GUICtrlToolbar_AddBitmap",documentation:"Adds images to the image list"},{label:"_GUICtrlToolbar_AddButton",documentation:"Adds a button"},{label:"_GUICtrlToolbar_AddButtonSep",documentation:"Adds a separator"},{label:"_GUICtrlToolbar_AddString",documentation:"Adds a new string to the toolbar's string pool"},{label:"_GUICtrlToolbar_ButtonCount",documentation:"Retrieves a count of the buttons"},{label:"_GUICtrlToolbar_CheckButton",documentation:"Checks or unchecks a given button"},{label:"_GUICtrlToolbar_ClickAccel",documentation:"Clicks a specific button using it's accelerator"},{label:"_GUICtrlToolbar_ClickButton",documentation:"Clicks a specific button"},{label:"_GUICtrlToolbar_ClickIndex",documentation:"Clicks a specific button using it's index"},{label:"_GUICtrlToolbar_CommandToIndex",documentation:"Retrieves the index for the button associated with the specified command identifier"},{label:"_GUICtrlToolbar_Create",documentation:"Create a Toolbar control"},{label:"_GUICtrlToolbar_Customize",documentation:"Displays the Customize Toolbar dialog box"},{label:"_GUICtrlToolbar_DeleteButton",documentation:"Deletes a button from the toolbar"},{label:"_GUICtrlToolbar_Destroy",documentation:"Delete the control"},{label:"_GUICtrlToolbar_EnableButton",documentation:"Enables or disables the specified button"},{label:"_GUICtrlToolbar_FindToolbar",documentation:"Finds a specific toolbar"},{label:"_GUICtrlToolbar_GetAnchorHighlight",documentation:"Retrieves the anchor highlight setting"},{label:"_GUICtrlToolbar_GetBitmapFlags",documentation:"Retrieves the flags that describe the type of bitmap to be used"},{label:"_GUICtrlToolbar_GetButtonBitmap",documentation:"Retrieves the index of the bitmap associated with a button"},{label:"_GUICtrlToolbar_GetButtonInfo",documentation:"Retrieves information for a button"},{label:"_GUICtrlToolbar_GetButtonInfoEx",documentation:"Retrieves extended information for a button"},{label:"_GUICtrlToolbar_GetButtonParam",documentation:"Retrieves the button param value"},{label:"_GUICtrlToolbar_GetButtonRect",documentation:"Retrieves the bounding rectangle for a button"},{label:"_GUICtrlToolbar_GetButtonRectEx",documentation:"Retrieves the bounding rectangle for a specified toolbar button"},{label:"_GUICtrlToolbar_GetButtonSize",documentation:"Retrieves the current button width and height, in pixels"},{label:"_GUICtrlToolbar_GetButtonState",documentation:"Retrieves information about the state of the specified button"},{label:"_GUICtrlToolbar_GetButtonStyle",documentation:"Retrieves the style flags of a button"},{label:"_GUICtrlToolbar_GetButtonText",documentation:"Retrieves the display text of a button"},{label:"_GUICtrlToolbar_GetColorScheme",documentation:"Retrieves the color scheme information"},{label:"_GUICtrlToolbar_GetDisabledImageList",documentation:"Retrieves the disabled button image list"},{label:"_GUICtrlToolbar_GetExtendedStyle",documentation:"Retrieves the extended styles"},{label:"_GUICtrlToolbar_GetHotImageList",documentation:"Retrieves the hot button image list"},{label:"_GUICtrlToolbar_GetHotItem",documentation:"Retrieves the index of the hot item"},{label:"_GUICtrlToolbar_GetImageList",documentation:"Retrieves the default state image list"},{label:"_GUICtrlToolbar_GetInsertMark",documentation:"Retrieves the current insertion mark"},{label:"_GUICtrlToolbar_GetInsertMarkColor",documentation:"Retrieves the color used to draw the insertion mark"},{label:"_GUICtrlToolbar_GetMaxSize",documentation:"Retrieves the total size of all of the visible buttons and separators"},{label:"_GUICtrlToolbar_GetMetrics",documentation:"Retrieves the metrics of a toolbar control"},{label:"_GUICtrlToolbar_GetPadding",documentation:"Retrieves the horizontal and vertical padding"},{label:"_GUICtrlToolbar_GetRows",documentation:"Retrieves the number of rows of buttons"},{label:"_GUICtrlToolbar_GetString",documentation:"Retrieves a string from the string pool"},{label:"_GUICtrlToolbar_GetStyle",documentation:"Retrieves the styles currently in use for a toolbar control"},{label:"_GUICtrlToolbar_GetStyleAltDrag",documentation:"Indicates that the control allows buttons to be dragged"},{label:"_GUICtrlToolbar_GetStyleCustomErase",documentation:"Indicates that the control generates NM_CUSTOMDRAW notification messages"},{label:"_GUICtrlToolbar_GetStyleFlat",documentation:"Indicates that the control is flat"},{label:"_GUICtrlToolbar_GetStyleList",documentation:"Indicates that the control has button text to the right of the bitmap"},{label:"_GUICtrlToolbar_GetStyleRegisterDrop",documentation:"Indicates that the control generates TBN_GETOBJECT notification messages"},{label:"_GUICtrlToolbar_GetStyleToolTips",documentation:"Indicates that the control has tooltips"},{label:"_GUICtrlToolbar_GetStyleTransparent",documentation:"Indicates that the control is transparent"},{label:"_GUICtrlToolbar_GetStyleWrapable",documentation:"Indicates that the control is wrapable"},{label:"_GUICtrlToolbar_GetTextRows",documentation:"Retrieves the maximum number of text rows that can be displayed on a button"},{label:"_GUICtrlToolbar_GetToolTips",documentation:"Retrieves the handle to the ToolTip control"},{label:"_GUICtrlToolbar_GetUnicodeFormat",documentation:"Retrieves the Unicode character format flag"},{label:"_GUICtrlToolbar_HideButton",documentation:"Hides or shows the specified button"},{label:"_GUICtrlToolbar_HighlightButton",documentation:"Sets the highlight state of a given button control"},{label:"_GUICtrlToolbar_HitTest",documentation:"Determines where a point lies within the control"},{label:"_GUICtrlToolbar_IndexToCommand",documentation:"Retrieves the command identifier associated with the button"},{label:"_GUICtrlToolbar_InsertButton",documentation:"Inserts a button"},{label:"_GUICtrlToolbar_InsertMarkHitTest",documentation:"Retrieves the insertion mark information for a point"},{label:"_GUICtrlToolbar_IsButtonChecked",documentation:"Indicates whether the specified button is checked"},{label:"_GUICtrlToolbar_IsButtonEnabled",documentation:"Indicates whether the specified button is enabled"},{label:"_GUICtrlToolbar_IsButtonHidden",documentation:"Indicates whether the specified button is hidden"},{label:"_GUICtrlToolbar_IsButtonHighlighted",documentation:"Indicates whether the specified button is hilighted"},{label:"_GUICtrlToolbar_IsButtonIndeterminate",documentation:"Indicates whether the specified button is indeterminate"},{label:"_GUICtrlToolbar_IsButtonPressed",documentation:"Indicates that the button is being clicked"},{label:"_GUICtrlToolbar_LoadBitmap",documentation:"Adds a bitmap to the image list from a file"},{label:"_GUICtrlToolbar_LoadImages",documentation:"Loads system defined button images into a toolbar control's image list"},{label:"_GUICtrlToolbar_MapAccelerator",documentation:"Determines the ID of the button that corresponds to the specified accelerator"},{label:"_GUICtrlToolbar_MoveButton",documentation:"Moves a button from one index to another"},{label:"_GUICtrlToolbar_PressButton",documentation:"Presses or releases the specified button"},{label:"_GUICtrlToolbar_SetAnchorHighlight",documentation:"Sets the anchor highlight setting"},{label:"_GUICtrlToolbar_SetBitmapSize",documentation:"Sets the size of the bitmapped images to be added to a toolbar"},{label:"_GUICtrlToolbar_SetButtonBitMap",documentation:"Sets the index of the bitmap associated with a button"},{label:"_GUICtrlToolbar_SetButtonInfo",documentation:"Sets information for a button"},{label:"_GUICtrlToolbar_SetButtonInfoEx",documentation:"Sets extended information for a button"},{label:"_GUICtrlToolbar_SetButtonParam",documentation:"Sets the button param value"},{label:"_GUICtrlToolbar_SetButtonSize",documentation:"Sets the size of the buttons to be added to a toolbar"},{label:"_GUICtrlToolbar_SetButtonState",documentation:"Sets information about the state of the specified button"},{label:"_GUICtrlToolbar_SetButtonStyle",documentation:"Sets the style flags of a button"},{label:"_GUICtrlToolbar_SetButtonText",documentation:"Sets the display text of a button"},{label:"_GUICtrlToolbar_SetButtonWidth",documentation:"Sets the minimum and maximum button widths in the toolbar control"},{label:"_GUICtrlToolbar_SetCmdID",documentation:"Sets the command identifier of a toolbar button"},{label:"_GUICtrlToolbar_SetColorScheme",documentation:"Sets the color scheme information"},{label:"_GUICtrlToolbar_SetDisabledImageList",documentation:"Sets the disabled image list"},{label:"_GUICtrlToolbar_SetDrawTextFlags",documentation:"Sets the text drawing flags for the toolbar"},{label:"_GUICtrlToolbar_SetExtendedStyle",documentation:"Sets the extended styles control"},{label:"_GUICtrlToolbar_SetHotImageList",documentation:"Sets the hot button image list"},{label:"_GUICtrlToolbar_SetHotItem",documentation:"Sets the hot item"},{label:"_GUICtrlToolbar_SetImageList",documentation:"Sets the default button image list"},{label:"_GUICtrlToolbar_SetIndent",documentation:"Sets the indentation for the first button control"},{label:"_GUICtrlToolbar_SetIndeterminate",documentation:"Sets or clears the indeterminate state of the specified button"},{label:"_GUICtrlToolbar_SetInsertMark",documentation:"Sets the current insertion mark for the toolbar"},{label:"_GUICtrlToolbar_SetInsertMarkColor",documentation:"Sets the color used to draw the insertion mark"},{label:"_GUICtrlToolbar_SetMaxTextRows",documentation:"Sets the maximum number of text rows displayed button"},{label:"_GUICtrlToolbar_SetMetrics",documentation:"Sets the metrics of a toolbar control"},{label:"_GUICtrlToolbar_SetPadding",documentation:"Sets the padding control"},{label:"_GUICtrlToolbar_SetParent",documentation:"Sets the window to which the control sends notification messages"},{label:"_GUICtrlToolbar_SetRows",documentation:"Sets the number of rows of buttons"},{label:"_GUICtrlToolbar_SetStyle",documentation:"Sets the style control"},{label:"_GUICtrlToolbar_SetStyleAltDrag",documentation:"Sets whether that the control allows buttons to be dragged"},{label:"_GUICtrlToolbar_SetStyleCustomErase",documentation:"Sets whether the control generates NM_CUSTOMDRAW notification messages"},{label:"_GUICtrlToolbar_SetStyleFlat",documentation:"Sets whether the control is flat"},{label:"_GUICtrlToolbar_SetStyleList",documentation:"Sets whether the control has button text to the right of the bitmap"},{label:"_GUICtrlToolbar_SetStyleRegisterDrop",documentation:"Sets whether the control generates TBN_GETOBJECT notification messages"},{label:"_GUICtrlToolbar_SetStyleToolTips",documentation:"Sets whether the control has tooltips"},{label:"_GUICtrlToolbar_SetStyleTransparent",documentation:"Sets whether the control is transparent"},{label:"_GUICtrlToolbar_SetStyleWrapable",documentation:"Sets whether the control is wrapable"},{label:"_GUICtrlToolbar_SetToolTips",documentation:"Associates a ToolTip control with a toolbar"},{label:"_GUICtrlToolbar_SetUnicodeFormat",documentation:"Sets the Unicode character format flag"},{label:"_GUICtrlToolbar_SetWindowTheme",documentation:"Sets the visual style "}],t.CompletionItemKind.Function,"GuiToolbar UDF","GuiToolbar.au3"),bi=(0,Ce.fillCompletions)([{label:"_GUIToolTip_Activate",documentation:"Activates a ToolTip control"},{label:"_GUIToolTip_AddTool",documentation:"Registers a tool with the ToolTip control"},{label:"_GUIToolTip_AdjustRect",documentation:"Calculates the text display rectangle from the window rectangle"},{label:"_GUIToolTip_BitsToTTF",documentation:"Decode bit flags to TTF_* strings"},{label:"_GUIToolTip_Create",documentation:"Creates a ToolTip control"},{label:"_GUIToolTip_Deactivate",documentation:"Deactivates a ToolTip control"},{label:"_GUIToolTip_DelTool",documentation:"Deletes a tool from a tooltip control"},{label:"_GUIToolTip_Destroy",documentation:"Delete a ToolTip control"},{label:"_GUIToolTip_EnumTools",documentation:"Retrieves information about the current tool"},{label:"_GUIToolTip_GetBubbleHeight",documentation:"Returns the height of the control"},{label:"_GUIToolTip_GetBubbleSize",documentation:"Returns the width and height of a ToolTip control"},{label:"_GUIToolTip_GetBubbleWidth",documentation:"Returns the width of a ToolTip control"},{label:"_GUIToolTip_GetCurrentTool",documentation:"Retrieves information for the current tool"},{label:"_GUIToolTip_GetDelayTime",documentation:"Retrieves the initial, pop-up or reshow durations of a ToolTip control"},{label:"_GUIToolTip_GetMargin",documentation:"Retrieves the top, left, bottom, and right margins of a ToolTip control"},{label:"_GUIToolTip_GetMarginEx",documentation:"Retrieves the top, left, bottom, and right margins of a ToolTip control"},{label:"_GUIToolTip_GetMaxTipWidth",documentation:"Retrieves the maximum width of a ToolTip window"},{label:"_GUIToolTip_GetText",documentation:"Retrieves the text of a tool"},{label:"_GUIToolTip_GetTipBkColor",documentation:"Retrieves the background color"},{label:"_GUIToolTip_GetTipTextColor",documentation:"Retrieves the text color of a ToolTip control"},{label:"_GUIToolTip_GetTitleBitMap",documentation:"Retrieves the title bitmap icon"},{label:"_GUIToolTip_GetTitleText",documentation:"Retrieve the title"},{label:"_GUIToolTip_GetToolCount",documentation:"Returns the count of tools maintained by the ToolTip control"},{label:"_GUIToolTip_GetToolInfo",documentation:"Retrieves the information about a specific tool"},{label:"_GUIToolTip_HitTest",documentation:"Retrieves the information that a ToolTip control maintains about a tool"},{label:"_GUIToolTip_NewToolRect",documentation:"Sets a new bounding rectangle for a tool"},{label:"_GUIToolTip_Pop",documentation:"Removes a displayed ToolTip from view"},{label:"_GUIToolTip_PopUp",documentation:"Causes the ToolTip to display at the coordinates of the last mouse message"},{label:"_GUIToolTip_SetDelayTime",documentation:"Sets the initial, pop-up, and reshow durations of a ToolTip"},{label:"_GUIToolTip_SetMargin",documentation:"Sets the top, left, bottom, and right margins of a ToolTip"},{label:"_GUIToolTip_SetMaxTipWidth",documentation:"Sets the maximum width for a ToolTip window"},{label:"_GUIToolTip_SetTipBkColor",documentation:"Sets the background color of a ToolTip"},{label:"_GUIToolTip_SetTipTextColor",documentation:"Sets the text color"},{label:"_GUIToolTip_SetTitle",documentation:"Adds a standard icon and title string"},{label:"_GUIToolTip_SetToolInfo",documentation:"Sets the information for a tool"},{label:"_GUIToolTip_SetWindowTheme",documentation:"Sets the visual style"},{label:"_GUIToolTip_ToolExists",documentation:"Determines whether a tool currently exists (is displayed)"},{label:"_GUIToolTip_ToolToArray",documentation:"Transfers a ToolInfo structure to an array"},{label:"_GUIToolTip_TrackActivate",documentation:"Activates or deactivates a tracking ToolTip"},{label:"_GUIToolTip_TrackPosition",documentation:"Sets the position of a tracking ToolTip"},{label:"_GUIToolTip_Update",documentation:"Forces the current tool to be redrawn"},{label:"_GUIToolTip_UpdateTipText",documentation:"Sets the ToolTip text for a tool "}],t.CompletionItemKind.Function,"GuiToolTip UDF","GuiToolTip.au3"),_i=(0,Ce.fillCompletions)([{label:"_GUICtrlTreeView_Add",documentation:"Adds a new item"},{label:"_GUICtrlTreeView_AddChild",documentation:"Adds a new item"},{label:"_GUICtrlTreeView_AddChildFirst",documentation:"Adds a new item"},{label:"_GUICtrlTreeView_AddFirst",documentation:"Adds a new item"},{label:"_GUICtrlTreeView_BeginUpdate",documentation:"Prevents updating of the control until the EndUpdate function is called"},{label:"_GUICtrlTreeView_ClickItem",documentation:"Click on a item"},{label:"_GUICtrlTreeView_Create",documentation:"Create a TreeView control"},{label:"_GUICtrlTreeView_CreateDragImage",documentation:"Creates a dragging bitmap for the specified item"},{label:"_GUICtrlTreeView_CreateSolidBitMap",documentation:"Creates a solid color bitmap"},{label:"_GUICtrlTreeView_Delete",documentation:"Removes an item and all its children"},{label:"_GUICtrlTreeView_DeleteAll",documentation:"Removes all items from a tree-view control"},{label:"_GUICtrlTreeView_DeleteChildren",documentation:"Deletes all children of a item"},{label:"_GUICtrlTreeView_Destroy",documentation:"Delete the control"},{label:"_GUICtrlTreeView_DisplayRect",documentation:"Returns the bounding rectangle for a tree item"},{label:"_GUICtrlTreeView_DisplayRectEx",documentation:"Returns the bounding rectangle for a tree item"},{label:"_GUICtrlTreeView_EditText",documentation:"Begins in-place editing of the specified item's text"},{label:"_GUICtrlTreeView_EndEdit",documentation:"Ends the editing of the item's text"},{label:"_GUICtrlTreeView_EndUpdate",documentation:"Enables screen repainting that was turned off with the BeginUpdate function"},{label:"_GUICtrlTreeView_EnsureVisible",documentation:"Ensures that a item is visible, expanding the parent item or scrolling the control if necessary"},{label:"_GUICtrlTreeView_Expand",documentation:"Expands or collapses the list of child items associated with the specified parent item, if any"},{label:"_GUICtrlTreeView_ExpandedOnce",documentation:"Indicates if the item's list of child items has been expanded at least once"},{label:"_GUICtrlTreeView_FindItem",documentation:"Retrieves a item based on it's text"},{label:"_GUICtrlTreeView_FindItemEx",documentation:"Retrieves a item based on a tree path"},{label:"_GUICtrlTreeView_GetBkColor",documentation:"Retrieve the text back color"},{label:"_GUICtrlTreeView_GetBold",documentation:"Indicates if the item is drawn in a bold style"},{label:"_GUICtrlTreeView_GetChecked",documentation:"Indicates if a item has its checkbox checked"},{label:"_GUICtrlTreeView_GetChildCount",documentation:"Retrieves the number of children of an parent item"},{label:"_GUICtrlTreeView_GetChildren",documentation:"Indicates whether the item children flag is set"},{label:"_GUICtrlTreeView_GetCount",documentation:"Retrieves a count of the items"},{label:"_GUICtrlTreeView_GetCut",documentation:"Indicates if the item is drawn as if selected as part of a cut and paste operation"},{label:"_GUICtrlTreeView_GetDropTarget",documentation:"Indicates whether the item is drawn as a drag and drop target"},{label:"_GUICtrlTreeView_GetEditControl",documentation:"Retrieves the handle to the edit control being used to edit a item's text"},{label:"_GUICtrlTreeView_GetExpanded",documentation:"Indicates whether the item is expanded"},{label:"_GUICtrlTreeView_GetFirstChild",documentation:"Retrieves the first child item of the specified item"},{label:"_GUICtrlTreeView_GetFirstItem",documentation:"Retrieves the topmost or very first item"},{label:"_GUICtrlTreeView_GetFirstVisible",documentation:"Retrieves the first visible item in the control"},{label:"_GUICtrlTreeView_GetFocused",documentation:"Indicates whether the item has focus"},{label:"_GUICtrlTreeView_GetHeight",documentation:"Retrieves the current height of the each item"},{label:"_GUICtrlTreeView_GetImageIndex",documentation:"Retrieves the normal state image index"},{label:"_GUICtrlTreeView_GetImageListIconHandle",documentation:"Retrieve ImageList handle"},{label:"_GUICtrlTreeView_GetIndent",documentation:"Retrieves the amount, in pixels, that child items are indented relative to their parent items"},{label:"_GUICtrlTreeView_GetInsertMarkColor",documentation:"Retrieves the color used to draw the insertion mark"},{label:"_GUICtrlTreeView_GetISearchString",documentation:"Retrieves the incremental search string"},{label:"_GUICtrlTreeView_GetItemByIndex",documentation:"Retrieve a item by its position in the list of child items"},{label:"_GUICtrlTreeView_GetItemHandle",documentation:"Retrieve the item handle"},{label:"_GUICtrlTreeView_GetItemParam",documentation:"Retrieves the application specific value of the item"},{label:"_GUICtrlTreeView_GetLastChild",documentation:"Retrieves the last child item of the specified item"},{label:"_GUICtrlTreeView_GetLineColor",documentation:"Retrieve the line color"},{label:"_GUICtrlTreeView_GetNext",documentation:"Retrieves the next item after the calling item"},{label:"_GUICtrlTreeView_GetNextChild",documentation:"Returns the next item at the same level as the specified item"},{label:"_GUICtrlTreeView_GetNextSibling",documentation:"Returns the next item at the same level as the specified item"},{label:"_GUICtrlTreeView_GetNextVisible",documentation:"Retrieves the next visible item that follows the specified item"},{label:"_GUICtrlTreeView_GetNormalImageList",documentation:"Retrieves the normal image list"},{label:"_GUICtrlTreeView_GetParentHandle",documentation:"Retrieve the parent handle of item"},{label:"_GUICtrlTreeView_GetParentParam",documentation:"Retrieve the parent control ID/Param of item"},{label:"_GUICtrlTreeView_GetPrev",documentation:"Retrieves the previous item before the calling item"},{label:"_GUICtrlTreeView_GetPrevChild",documentation:"Retrieves the previous child item of a specified item"},{label:"_GUICtrlTreeView_GetPrevSibling",documentation:"Returns the previous item before the calling item at the same level"},{label:"_GUICtrlTreeView_GetPrevVisible",documentation:"Retrieves the first visible item that precedes the specified item"},{label:"_GUICtrlTreeView_GetScrollTime",documentation:"Retrieves the maximum scroll time"},{label:"_GUICtrlTreeView_GetSelected",documentation:"Indicates whether the item appears in the selected state"},{label:"_GUICtrlTreeView_GetSelectedImageIndex",documentation:"Retrieves the index in the image list of the image displayed for the item when it is selected"},{label:"_GUICtrlTreeView_GetSelection",documentation:"Retrieves the currently selected item"},{label:"_GUICtrlTreeView_GetSiblingCount",documentation:"Retrieves the number of siblings at the level of an item"},{label:"_GUICtrlTreeView_GetState",documentation:"Retrieve the state of the item"},{label:"_GUICtrlTreeView_GetStateImageIndex",documentation:"Retrieves the index of the state image to display for the item"},{label:"_GUICtrlTreeView_GetStateImageList",documentation:"Retrieves the handle to the state image list"},{label:"_GUICtrlTreeView_GetText",documentation:"Retrieve the item text"},{label:"_GUICtrlTreeView_GetTextColor",documentation:"Retrieve the text color"},{label:"_GUICtrlTreeView_GetToolTips",documentation:"Retrieves the handle to the child ToolTip control"},{label:"_GUICtrlTreeView_GetTree",documentation:"Retrieve all items text"},{label:"_GUICtrlTreeView_GetUnicodeFormat",documentation:"Retrieves the Unicode character format flag"},{label:"_GUICtrlTreeView_GetVisible",documentation:"Indicates whether the item is currently visible in the control image"},{label:"_GUICtrlTreeView_GetVisibleCount",documentation:"Returns the number of items that can be fully visible in the control"},{label:"_GUICtrlTreeView_HitTest",documentation:"Returns information about the location of a point relative to the control"},{label:"_GUICtrlTreeView_HitTestEx",documentation:"Returns information about the location of a point relative to the control"},{label:"_GUICtrlTreeView_HitTestItem",documentation:"Returns the item at the specified coordinates"},{label:"_GUICtrlTreeView_Index",documentation:"Retrieves the position of the item in the list"},{label:"_GUICtrlTreeView_InsertItem",documentation:"Insert an item"},{label:"_GUICtrlTreeView_IsFirstItem",documentation:"Indicates whether the tree item is very first"},{label:"_GUICtrlTreeView_IsParent",documentation:"Indicates whether one item is the parent of another item"},{label:"_GUICtrlTreeView_Level",documentation:"Indicates the level of indentation of a item"},{label:"_GUICtrlTreeView_SelectItem",documentation:"Selects the specified item, scrolls the item into view, or redraws the item"},{label:"_GUICtrlTreeView_SelectItemByIndex",documentation:"Selects the item based on it's index in the parent list"},{label:"_GUICtrlTreeView_SetBkColor",documentation:"Sets the back color"},{label:"_GUICtrlTreeView_SetBold",documentation:"Sets whether the item is drawn using a bold sytle"},{label:"_GUICtrlTreeView_SetChecked",documentation:"Sets whether a item has it's checkbox checked or not"},{label:"_GUICtrlTreeView_SetCheckedByIndex",documentation:"Sets whether an item has it's checkbox checked or not by it's index"},{label:"_GUICtrlTreeView_SetChildren",documentation:"Sets whether the item children flag"},{label:"_GUICtrlTreeView_SetCut",documentation:"Sets whether the item is drawn as if selected as part of a cut and paste operation"},{label:"_GUICtrlTreeView_SetDropTarget",documentation:"Sets whether the item is drawn as a drag and drop target"},{label:"_GUICtrlTreeView_SetFocused",documentation:"Sets whether the item appears to have focus"},{label:"_GUICtrlTreeView_SetHeight",documentation:"Sets the height of the each item"},{label:"_GUICtrlTreeView_SetIcon",documentation:"Set an item icon"},{label:"_GUICtrlTreeView_SetImageIndex",documentation:"Sets the index into image list for which image is displayed when a item is in its normal state"},{label:"_GUICtrlTreeView_SetIndent",documentation:"Sets the width of indentation for a tree-view control and redraws the control to reflect the new width"},{label:"_GUICtrlTreeView_SetInsertMark",documentation:"Sets the insertion mark"},{label:"_GUICtrlTreeView_SetInsertMarkColor",documentation:"Sets the color used to draw the insertion mark"},{label:"_GUICtrlTreeView_SetItemHeight",documentation:"Sets the height of an individual item"},{label:"_GUICtrlTreeView_SetItemParam",documentation:"Sets the value specific to the item"},{label:"_GUICtrlTreeView_SetLineColor",documentation:"Sets the line color"},{label:"_GUICtrlTreeView_SetNormalImageList",documentation:"Sets the normal image list for the control"},{label:"_GUICtrlTreeView_SetScrollTime",documentation:"Sets the maximum scroll time"},{label:"_GUICtrlTreeView_SetSelected",documentation:"Sets whether the item appears in the selected state"},{label:"_GUICtrlTreeView_SetSelectedImageIndex",documentation:"Sets the selected image index"},{label:"_GUICtrlTreeView_SetState",documentation:"Set the state of the specified item"},{label:"_GUICtrlTreeView_SetStateImageIndex",documentation:"Sets the index into image list for the state image"},{label:"_GUICtrlTreeView_SetStateImageList",documentation:"Sets the state image list for the control"},{label:"_GUICtrlTreeView_SetText",documentation:"Set the text of an item"},{label:"_GUICtrlTreeView_SetTextColor",documentation:"Sets the text color"},{label:"_GUICtrlTreeView_SetToolTips",documentation:"Sets the handle to the child ToolTip control"},{label:"_GUICtrlTreeView_SetUnicodeFormat",documentation:"Sets the Unicode character format flag"},{label:"_GUICtrlTreeView_Sort",documentation:"Sorts the items "}],t.CompletionItemKind.Function,"GuiTreeView UDF","GuiTreeView.au3"),fi=(0,Ce.fillCompletions)([{label:"_IE_Example",documentation:"Display a new browser window pre-loaded with documents to be used in IE.au3 examples or your own testing"},{label:"_IE_Introduction",documentation:"Display introductory information about IE.au3 in a new browser window"},{label:"_IE_VersionInfo",documentation:"Returns an array of information about the IE.au3 version"},{label:"_IEAction",documentation:"Perform any of a set of simple actions on the Browser"},{label:"_IEAttach",documentation:"Attach to the specified instance of Internet Explorer where the search string sub-string matches (based on the selected mode)"},{label:"_IEBodyReadHTML",documentation:"Returns the HTML inside the <body> tag of the document"},{label:"_IEBodyReadText",documentation:"Returns the Text inside the <body> tag of the document"},{label:"_IEBodyWriteHTML",documentation:"Replaces the HTML inside the <body> tag of the document"},{label:"_IECreate",documentation:"Create an Internet Explorer Browser Window"},{label:"_IECreateEmbedded",documentation:"Create a Webbrowser object suitable for embedding in an AutoIt GUI with GUICtrlCreateObj()"},{label:"_IEDocGetObj",documentation:"Given any DOM object, returns a reference to the associated document object"},{label:"_IEDocInsertHTML",documentation:"Inserts HTML Text in or around an element"},{label:"_IEDocInsertText",documentation:"Inserts Text in or around an element"},{label:"_IEDocReadHTML",documentation:"Returns the full HTML source of a document"},{label:"_IEDocWriteHTML",documentation:"Replaces the HTML for the entire document"},{label:"_IEErrorNotify",documentation:"Specifies whether IE.au3 automatically notifies of Warnings and Errors (to the console)"},{label:"_IEFormElementCheckBoxSelect",documentation:"Set the value of a specified form element"},{label:"_IEFormElementGetCollection",documentation:"Returns a collection object variable representing all Form Elements within a given Form"},{label:"_IEFormElementGetObjByName",documentation:"Returns an object reference to a Form Element by name"},{label:"_IEFormElementGetValue",documentation:"Returns the value of a given Form Element"},{label:"_IEFormElementOptionSelect",documentation:"Set the value of a specified form element"},{label:"_IEFormElementRadioSelect",documentation:"Set the value of a specified form element"},{label:"_IEFormElementSetValue",documentation:"Set the value of a specified Form Element"},{label:"_IEFormGetCollection",documentation:"Returns a collection object variable representing the Forms in the document or a single form by index"},{label:"_IEFormGetObjByName",documentation:"Returns an object reference to a Form by name"},{label:"_IEFormImageClick",documentation:"Simulate a mouse click on an <input type=image>. Match by sub-string match of alt text, name or src"},{label:"_IEFormReset",documentation:"Reset a specified Form setting the values back to their loaded defaults"},{label:"_IEFormSubmit",documentation:"Submit a specified Form"},{label:"_IEFrameGetCollection",documentation:"Returns a collection object containing the frames in a FrameSet or the iFrames on a normal page or a single Frame or iFrame by index"},{label:"_IEFrameGetObjByName",documentation:"Returns an object reference to a Frame or iFrame by name"},{label:"_IEGetObjById",documentation:"Returns an object variable by id"},{label:"_IEGetObjByName",documentation:"Returns an object variable by name"},{label:"_IEHeadInsertEventScript",documentation:"Inserts a Javascript into the Head of the document"},{label:"_IEImgClick",documentation:"Simulate a mouse click on an image. Match by sub-string match of alt text, name, or src"},{label:"_IEImgGetCollection",documentation:"Returns a collection object variable representing the IMG tags in the document or a single image by index"},{label:"_IEIsFrameSet",documentation:"Checks to see if the specified Window contains a FrameSet"},{label:"_IELinkClickByIndex",documentation:"Simulate a mouse click on a link by 0-based index (in source order)"},{label:"_IELinkClickByText",documentation:"Simulate a mouse click on a link with text sub-string matching the string provided"},{label:"_IELinkGetCollection",documentation:"Returns a collection object containing all links in the document or a single link by index"},{label:"_IELoadWait",documentation:"Wait for a browser page load to complete before returning"},{label:"_IELoadWaitTimeout",documentation:"Retrieve or set the current value in milliseconds _IELoadWait() will try before timing out"},{label:"_IENavigate",documentation:"Directs an existing browser window to navigate to the specified URL"},{label:"_IEPropertyGet",documentation:"Returns a select property of the Browser or DOM element"},{label:"_IEPropertySet",documentation:"Set a select property of the Browser or DOM element"},{label:"_IEQuit",documentation:"Close the browser and remove the object reference to it"},{label:"_IETableGetCollection",documentation:"Returns a collection object variable representing all the tables in a document or a single table by index"},{label:"_IETableWriteToArray",documentation:"Reads the contents of a Table into an array"},{label:"_IETagNameAllGetCollection",documentation:"Returns a collection object all elements in the document or document hierarchy in source order or a single element by index"},{label:"_IETagNameGetCollection",documentation:"Returns a collection object of all elements in the object with the specified TagName or a single element by index "}],t.CompletionItemKind.Function,"Internet Explorer UDF","IE.au3"),Ii=(0,Ce.fillCompletions)([{label:"_GetIP",documentation:"Get public IP address of a network/computer"},{label:"_INetExplorerCapable",documentation:"Converts a string to IE(Internet Explorer) capable line"},{label:"_INetGetSource",documentation:"Gets the source from an URL without writing a temp file"},{label:"_INetMail",documentation:"Opens default user's mail client with given address, subject, and body"},{label:"_INetSmtpMail",documentation:"Sends an email without using an external email program"},{label:"_TCPIpToName",documentation:"Resolves IP address to Hostname(s) "}],t.CompletionItemKind.Function,"Inet UDF","Inet.au3"),$i=(0,Ce.fillCompletions)([{label:"_Degree",documentation:"Converts radians to degrees"},{label:"_MathCheckDiv",documentation:"Checks if first number is divisible by the second number"},{label:"_Max",documentation:"Evaluates which of the two numbers is higher"},{label:"_Min",documentation:"Evaluates which of the two numbers is lower"},{label:"_Radian",documentation:"Converts degrees to radians "}],t.CompletionItemKind.Function,"Math UDF","Math.au3"),gi=(0,Ce.fillCompletions)([{label:"_ChooseColor",documentation:"Creates a Color dialog box that enables the user to select a color"},{label:"_ChooseFont",documentation:"Creates a Font dialog box that enables the user to choose attributes for a logical font"},{label:"_ClipPutFile",documentation:"Copy Files to Clipboard Like Explorer does"},{label:"_IsPressed",documentation:"Check if key has been pressed"},{label:"_MouseTrap",documentation:"Confine the Mouse Cursor to specified coords"},{label:"_Singleton",documentation:"Enforce a design paradigm where only one instance of the script may be running"},{label:"_VersionCompare",documentation:"Compares two file versions for equality "}],t.CompletionItemKind.Function,"Misc UDF","Misc.au3"),Ci=(0,Ce.fillCompletions)([{label:"_NamedPipes_CallNamedPipe",documentation:"Performs a read/write operation on a named pipe"},{label:"_NamedPipes_ConnectNamedPipe",documentation:"Enables a named pipe server process to wait for a client process to connect"},{label:"_NamedPipes_CreateNamedPipe",documentation:"Creates an instance of a named pipe"},{label:"_NamedPipes_CreatePipe",documentation:"Creates an anonymous pipe"},{label:"_NamedPipes_DisconnectNamedPipe",documentation:"Disconnects the server end of a named pipe instance from a client process"},{label:"_NamedPipes_GetNamedPipeHandleState",documentation:"Retrieves information about a specified named pipe"},{label:"_NamedPipes_GetNamedPipeInfo",documentation:"Retrieves information about the specified named pipe"},{label:"_NamedPipes_PeekNamedPipe",documentation:"Copies data from a pipe into a buffer without removing it from the pipe"},{label:"_NamedPipes_SetNamedPipeHandleState",documentation:"Sets the read mode and the blocking mode of the specified named pipe"},{label:"_NamedPipes_TransactNamedPipe",documentation:"Reads and writes to a named pipe in one network operation"},{label:"_NamedPipes_WaitNamedPipe",documentation:"Waits for an instance of a named pipe to become available "}],t.CompletionItemKind.Function,"Named Pipes UDF","NamedPipes.au3"),Si=(0,Ce.fillCompletions)([{label:"_Net_Share_ConnectionEnum",documentation:"Lists all connections made to a shared resource"},{label:"_Net_Share_FileClose",documentation:"Forces a resource to close"},{label:"_Net_Share_FileEnum",documentation:"Returns information about open files on a server"},{label:"_Net_Share_FileGetInfo",documentation:"Retrieves information about a particular opening of a server resource"},{label:"_Net_Share_PermStr",documentation:"Returns the string representation of a resource's permissions"},{label:"_Net_Share_ResourceStr",documentation:"Returns the string representation of a resource"},{label:"_Net_Share_SessionDel",documentation:"Ends a network session between a server and a workstation"},{label:"_Net_Share_SessionEnum",documentation:"Provides information about sessions established on a server"},{label:"_Net_Share_SessionGetInfo",documentation:"Retrieves information about a session established between a server and workstation"},{label:"_Net_Share_ShareAdd",documentation:"Shares a server resource"},{label:"_Net_Share_ShareCheck",documentation:"Checks whether or not a server is sharing a device"},{label:"_Net_Share_ShareDel",documentation:"Deletes a share name from a server's list of shared resources"},{label:"_Net_Share_ShareEnum",documentation:"Retrieves information about each shared resource on a server"},{label:"_Net_Share_ShareGetInfo",documentation:"Retrieves information about a particular shared resource on a server"},{label:"_Net_Share_ShareSetInfo",documentation:"Shares a server resource"},{label:"_Net_Share_StatisticsGetSvr",documentation:"Retrieves operating statistics for a server"},{label:"_Net_Share_StatisticsGetWrk",documentation:"Retrieves operating statistics for a workstation"}],t.CompletionItemKind.Function,"Net Share UDF","NetShare.au3"),Ti=(0,Ce.fillCompletions)([{label:"_ScreenCapture_Capture",documentation:"Captures a region of the screen"},{label:"_ScreenCapture_CaptureWnd",documentation:"Captures a screen shot of a specified window or controlID"},{label:"_ScreenCapture_SaveImage",documentation:"Saves an image to file"},{label:"_ScreenCapture_SetBMPFormat",documentation:"Sets the bit format that will be used for BMP screen captures"},{label:"_ScreenCapture_SetJPGQuality",documentation:"Sets the quality level that will be used for JPEG screen captures"},{label:"_ScreenCapture_SetTIFColorDepth",documentation:"Sets the color depth used for TIFF screen captures"},{label:"_ScreenCapture_SetTIFCompression",documentation:"Sets the compression used for TIFF screen captures "}],t.CompletionItemKind.Function,"Screen Capture UDF","ScreenCapture.au3"),Gi=(0,Ce.fillCompletions)([{label:"_Security__AdjustTokenPrivileges",documentation:"Enables or disables privileges in the specified access token"},{label:"_Security__CreateProcessWithToken",documentation:"Creates a new process and its primary thread running in the security context of the specified token"},{label:"_Security__DuplicateTokenEx",documentation:"Creates a new access token that duplicates an existing token"},{label:"_Security__GetAccountSid",documentation:"Retrieves the security identifier (SID) for an account"},{label:"_Security__GetLengthSid",documentation:"Returns the length, in bytes, of a valid SID"},{label:"_Security__GetTokenInformation",documentation:"Retrieves a specified type of information about an access token"},{label:"_Security__ImpersonateSelf",documentation:"Obtains an access token that impersonates the calling process security context"},{label:"_Security__IsValidSid",documentation:"Validates a SID"},{label:"_Security__LookupAccountName",documentation:"Retrieves a security identifier (SID) for the account and the name of the domain"},{label:"_Security__LookupAccountSid",documentation:"Retrieves the name of the account for a SID"},{label:"_Security__LookupPrivilegeValue",documentation:"Retrieves the locally unique identifier (LUID) for a privilege value in form of 64bit integer"},{label:"_Security__OpenProcessToken",documentation:"Returns the access token associated with a process"},{label:"_Security__OpenThreadToken",documentation:"Opens the access token associated with a thread"},{label:"_Security__OpenThreadTokenEx",documentation:"Opens the access token associated with a thread, impersonating the client's security context if required"},{label:"_Security__SetPrivilege",documentation:"Enables or disables a local token privilege"},{label:"_Security__SetTokenInformation",documentation:"Sets various types of information for a specified access token"},{label:"_Security__SidToStringSid",documentation:"Converts a binary SID to a string"},{label:"_Security__SidTypeStr",documentation:"Converts a SID type to string form"},{label:"_Security__StringSidToSid",documentation:"Converts a String SID to a binary SID "}],t.CompletionItemKind.Function,"Security UDF","Security.au3"),Pi=(0,Ce.fillCompletions)([{label:"_SendMessage",documentation:"Wrapper for commonly used DLL Call"},{label:"_SendMessageA",documentation:"Send a Message to a Window/Control (Force Ansi Call)"}],t.CompletionItemKind.Function,"Send Message UDF","SendMessage.au3"),wi=(0,Ce.fillCompletions)([{label:"_SoundClose",documentation:"Closes a sound previously opened with _SoundOpen"},{label:"_SoundLength",documentation:"Returns the length of the soundfile"},{label:"_SoundOpen",documentation:"Opens a sound file for use with other _Sound functions"},{label:"_SoundPause",documentation:"Pause a playing sound"},{label:"_SoundPlay",documentation:"Play a sound file"},{label:"_SoundPos",documentation:"Returns the current position of the sound"},{label:"_SoundResume",documentation:"Resume a paused sound"},{label:"_SoundSeek",documentation:"Seeks the sound to the specified position"},{label:"_SoundStatus",documentation:"Returns the status of the sound"},{label:"_SoundStop",documentation:"Stop a playing sound "}],t.CompletionItemKind.Function,"Sound UDF","Sound.au3"),yi=(0,Ce.fillCompletions)([{label:"_SQLite_Changes",documentation:"Returns the number of database rows that were changed by the most recently completed statement with this connection"},{label:"_SQLite_Close",documentation:"Close an open database"},{label:"_SQLite_Display2DResult",documentation:"Returns or prints to Console a formated display of a 2Dimensional array"},{label:"_SQLite_Encode",documentation:"Binary encodes a string, number or binary data for use as BLOB in SQLite statements"},{label:"_SQLite_ErrCode",documentation:"Returns last error code (numeric)"},{label:"_SQLite_ErrMsg",documentation:"Returns a string describing in english the error condition for the most recent sqlite3_* API call"},{label:"_SQLite_Escape",documentation:"Escapes a string or number for use as TEXT in SQLite statements"},{label:"_SQLite_Exec",documentation:"Executes a SQLite query, does not handle results"},{label:"_SQLite_FastEncode",documentation:"Fast encodes binary data (exclusively) for use in SQLite statements"},{label:"_SQLite_FastEscape",documentation:"Fast escapes a string or number for use as TEXT in SQLite statements"},{label:"_SQLite_FetchData",documentation:"Fetches 1 row of data from a _SQLite_Query() based query"},{label:"_SQLite_FetchNames",documentation:"Read out the Column names of a _SQLite_Query() based query"},{label:"_SQLite_GetTable",documentation:"Passes Out a 1Dimensional Array Containing Tablenames and Data of Executed Query"},{label:"_SQLite_GetTable2d",documentation:"Passes out a 2Dimensional array containing column names and data of executed query"},{label:"_SQLite_LastInsertRowID",documentation:"Returns the ROWID of the most recent insert in the database by this connection"},{label:"_SQLite_LibVersion",documentation:"Returns the version number of the library"},{label:"_SQLite_Open",documentation:"Opens/creates a SQLite database"},{label:"_SQLite_Query",documentation:"Prepares a SQLite Query"},{label:"_SQLite_QueryFinalize",documentation:"Finalizes an _SQLite_Query() based query. The query is interrupted"},{label:"_SQLite_QueryReset",documentation:"Reset a _SQLite_Query() based query"},{label:"_SQLite_QuerySingleRow",documentation:"Read out the first row of the result from the specified query"},{label:"_SQLite_SafeMode",documentation:"Disable or Enable Safe mode"},{label:"_SQLite_SetTimeout",documentation:"Sets timeout for busy handler"},{label:"_SQLite_Shutdown",documentation:"Unloads SQLite.dll"},{label:"_SQLite_SQLiteExe",documentation:"Executes commands in sqlite3.exe"},{label:"_SQLite_Startup",documentation:"Loads SQLite3.dll"},{label:"_SQLite_TotalChanges",documentation:"Returns number of all changes (including via triggers and foreign keys) from start of connection "}],t.CompletionItemKind.Function,"SQLite UDF","SQLite.au3"),Ai=(0,Ce.fillCompletions)([{label:"_HexToString",documentation:"Convert a hex string to a string"},{label:"_StringBetween",documentation:"Find strings between two string delimiters"},{label:"_StringExplode",documentation:"Splits up a string into substrings depending on the given delimiters as PHP Explode v5"},{label:"_StringInsert",documentation:"Inserts a string within another string"},{label:"_StringProper",documentation:"Changes a string to proper case, same as the =Proper function in Excel"},{label:"_StringRepeat",documentation:"Repeats a string a specified number of times"},{label:"_StringTitleCase",documentation:"Changes a string to a title case string"},{label:"_StringToHex",documentation:"Convert a string to a hex string "}],t.CompletionItemKind.Function,"String UDF","String.au3"),Di=(0,Ce.fillCompletions)([{label:"_Timer_Diff",documentation:"Returns the difference in time from a previous call to _Timer_Init"},{label:"_Timer_GetIdleTime",documentation:"Returns the number of ticks since last user activity (i.e. KYBD/Mouse)"},{label:"_Timer_GetTimerID",documentation:"Returns the Timer ID from $wParam"},{label:"_Timer_Init",documentation:"Returns a timestamp (in milliseconds)"},{label:"_Timer_KillAllTimers",documentation:"Destroys all the timers"},{label:"_Timer_KillTimer",documentation:"Destroys the specified timer"},{label:"_Timer_SetTimer",documentation:"Creates a timer with the specified time-out value "}],t.CompletionItemKind.Function,"Timers UDF","Timers.au3"),Wi=(0,Ce.fillCompletions)([{label:"_viClose",documentation:"Closes a VISA connection to an Instrument/Device"},{label:"_viExecCommand",documentation:"Send a Command/Query to an Instrument/Device through the VISA interface (GPIB / TCP)"},{label:"_viFindGpib",documentation:"Send a Command/Query to an Instrument/Device through the VISA interface (GPIB / TCP)"},{label:"_viGpibBusReset",documentation:'GPIB BUS "reset": Use this function when the GPIB BUS gets stuck for some reason. You might be lucky and resolve the problem by calling this function'},{label:"_viGTL",documentation:'Go To Local mode: Instruments that accept this command will exit the "Remote Control mode" and go to "Local mode". If the instrument is already in "Local mode" this is simply ignored. Normally, if an instrument does not support this command it will simply stay in the "Remote Control mode"'},{label:"_viInteractiveControl",documentation:"Interactive VISA control to test your SCPI commands"},{label:"_viOpen",documentation:"Opens a VISA connection to an Instrument/Device"},{label:"_viSetAttribute",documentation:"Set any VISA attribute This function, which is called by _viSetTimeout, can ALSO be used to set the other VISA specific attributes. Read the VISA documentation for more information and a list of VISA attributes and their corresponding values"},{label:"_viSetTimeout",documentation:"Sets the VISA timeout in MILISECONDS "}],t.CompletionItemKind.Function,"Visa UDF","Visa.au3"),Ei=(0,Ce.fillCompletions)([{label:"_WinAPI_AttachConsole",documentation:"Attaches the calling process to the console of the specified process"},{label:"_WinAPI_AttachThreadInput",documentation:"Attaches the input processing mechanism of one thread to that of another thread"},{label:"_WinAPI_Beep",documentation:"Generates simple tones on the speaker"},{label:"_WinAPI_BitBlt",documentation:"Performs a bit-block transfer of color data"},{label:"_WinAPI_CallNextHookEx",documentation:"Passes the hook information to the next hook procedure in the current hook chain"},{label:"_WinAPI_CallWindowProc",documentation:"Passes the hook information to the next hook procedure in the current hook chain"},{label:"_WinAPI_ClientToScreen",documentation:"Converts the client coordinates of a specified point to screen coordinates"},{label:"_WinAPI_CloseHandle",documentation:"Closes an open object handle"},{label:"_WinAPI_CombineRgn",documentation:"Combines two regions and stores the result in a third region"},{label:"_WinAPI_CommDlgExtendedError",documentation:"Returns a common dialog box error string. This string indicates the most recent error to occur during the execution of one of the common dialog box functions"},{label:"_WinAPI_CopyIcon",documentation:"Copies the specified icon from another module"},{label:"_WinAPI_CreateBitmap",documentation:"Creates a bitmap with the specified width, height, and color format"},{label:"_WinAPI_CreateCompatibleBitmap",documentation:"Creates a bitmap compatible with the specified device context"},{label:"_WinAPI_CreateCompatibleDC",documentation:"Creates a memory device context compatible with the specified device"},{label:"_WinAPI_CreateEvent",documentation:"Creates or opens a named or unnamed event object"},{label:"_WinAPI_CreateFile",documentation:"Creates or opens a file or other device"},{label:"_WinAPI_CreateFont",documentation:"Creates a logical font with the specified characteristics"},{label:"_WinAPI_CreateFontIndirect",documentation:"Creates a logical font that has specific characteristics"},{label:"_WinAPI_CreatePen",documentation:"Creates a logical pen that has the specified style, width, and color"},{label:"_WinAPI_CreateProcess",documentation:"Creates a new process and its primary thread"},{label:"_WinAPI_CreateRectRgn",documentation:"Creates a rectangular region"},{label:"_WinAPI_CreateRoundRectRgn",documentation:"Creates a rectangular region with rounded corners"},{label:"_WinAPI_CreateSolidBitmap",documentation:"Creates a solid color bitmap"},{label:"_WinAPI_CreateSolidBrush",documentation:"Creates a logical brush that has the specified solid color"},{label:"_WinAPI_CreateWindowEx",documentation:"Creates an overlapped, pop-up, or child window"},{label:"_WinAPI_DefWindowProc",documentation:"Call the default window procedure to provide default processing"},{label:"_WinAPI_DeleteDC",documentation:"Deletes the specified device context"},{label:"_WinAPI_DeleteObject",documentation:"Deletes a logical pen, brush, font, bitmap, region, or palette"},{label:"_WinAPI_DestroyIcon",documentation:"Destroys an icon and frees any memory the icon occupied"},{label:"_WinAPI_DestroyWindow",documentation:"Destroys the specified window"},{label:"_WinAPI_DrawEdge",documentation:"Draws one or more edges of rectangle"},{label:"_WinAPI_DrawFrameControl",documentation:"Draws a frame control of the specified type and style"},{label:"_WinAPI_DrawIcon",documentation:"Draws an icon or cursor into the specified device context"},{label:"_WinAPI_DrawIconEx",documentation:"Draws an icon or cursor into the specified device context"},{label:"_WinAPI_DrawLine",documentation:"Draws a line"},{label:"_WinAPI_DrawText",documentation:"Draws formatted text in the specified rectangle"},{label:"_WinAPI_DuplicateHandle",documentation:"Duplicates an object handle"},{label:"_WinAPI_EnableWindow",documentation:"Enables or disables mouse and keyboard input to the specified window or control"},{label:"_WinAPI_EnumDisplayDevices",documentation:"Obtains information about the display devices in a system"},{label:"_WinAPI_EnumWindows",documentation:"Enumerates all windows"},{label:"_WinAPI_EnumWindowsPopup",documentation:"Enumerates popup windows"},{label:"_WinAPI_EnumWindowsTop",documentation:"Enumerates all top level windows"},{label:"_WinAPI_ExpandEnvironmentStrings",documentation:"Expands environment variable strings and replaces them with their defined values"},{label:"_WinAPI_ExtractIconEx",documentation:"Creates an array of handles to large or small icons extracted from a file"},{label:"_WinAPI_FatalAppExit",documentation:"Displays a message box and terminates the application"},{label:"_WinAPI_FillRect",documentation:"Fills a rectangle by using the specified brush"},{label:"_WinAPI_FindExecutable",documentation:"Retrieves the name of the executable file associated with the specified file name"},{label:"_WinAPI_FindWindow",documentation:"Retrieves the handle to the top-level window whose class name and window name match"},{label:"_WinAPI_FlashWindow",documentation:"Flashes the specified window one time"},{label:"_WinAPI_FlashWindowEx",documentation:"Flashes the specified window"},{label:"_WinAPI_FloatToInt",documentation:"Returns a 4 byte float as an integer value"},{label:"_WinAPI_FlushFileBuffers",documentation:"Flushes the buffers of a specified file and causes all buffered data to be written"},{label:"_WinAPI_FormatMessage",documentation:"Formats a message string"},{label:"_WinAPI_FrameRect",documentation:"Draws a border around the specified rectangle by using the specified brush"},{label:"_WinAPI_FreeLibrary",documentation:"Decrements the reference count of the loaded dynamic-link library (DLL) module"},{label:"_WinAPI_GetAncestor",documentation:"Retrieves the handle to the ancestor of the specified window"},{label:"_WinAPI_GetAsyncKeyState",documentation:"Determines whether a key is up or down at the time the function is called"},{label:"_WinAPI_GetBkMode",documentation:"Returns the current background mix mode for a specified device context"},{label:"_WinAPI_GetClassName",documentation:"Retrieves the name of the class to which the specified window belongs"},{label:"_WinAPI_GetClientHeight",documentation:"Retrieves the height of a window's client area"},{label:"_WinAPI_GetClientRect",documentation:"Retrieves the coordinates of a window's client area"},{label:"_WinAPI_GetClientWidth",documentation:"Retrieves the width of a window's client area"},{label:"_WinAPI_GetCurrentProcess",documentation:"Returns the process handle of the calling process"},{label:"_WinAPI_GetCurrentProcessID",documentation:"Returns the process identifier of the calling process"},{label:"_WinAPI_GetCurrentThread",documentation:"Retrieves a pseudo handle for the calling thread"},{label:"_WinAPI_GetCurrentThreadId",documentation:"Returns the thread identifier of the calling thread"},{label:"_WinAPI_GetCursorInfo",documentation:"Retrieves information about the global cursor"},{label:"_WinAPI_GetDC",documentation:"Retrieves a handle of a display device context for the client area a window"},{label:"_WinAPI_GetDesktopWindow",documentation:"Returns the handle of the Windows desktop window"},{label:"_WinAPI_GetDeviceCaps",documentation:"Retrieves device specific information about a specified device"},{label:"_WinAPI_GetDIBits",documentation:"Retrieves the bits of the specified bitmap and copies them into a buffer as a DIB"},{label:"_WinAPI_GetDlgCtrlID",documentation:"Returns the identifier of the specified control"},{label:"_WinAPI_GetDlgItem",documentation:"Retrieves the handle of a control in the specified dialog box"},{label:"_WinAPI_GetFileSizeEx",documentation:"Retrieves the size of the specified file"},{label:"_WinAPI_GetFocus",documentation:"Retrieves the handle of the window that has the keyboard focus"},{label:"_WinAPI_GetForegroundWindow",documentation:"Returns the handle of the foreground window"},{label:"_WinAPI_GetGuiResources",documentation:"Retrieves the count of handles to graphical user interface (GUI) objects in use by the specified process"},{label:"_WinAPI_GetIconInfo",documentation:"Retrieves information about the specified icon or cursor"},{label:"_WinAPI_GetLastError",documentation:"Returns the calling thread's lasterror code value"},{label:"_WinAPI_GetLastErrorMessage",documentation:"Returns the calling threads last error message"},{label:"_WinAPI_GetLayeredWindowAttributes",documentation:"Gets Layered Window Attributes"},{label:"_WinAPI_GetModuleHandle",documentation:"Returns a module handle for the specified module"},{label:"_WinAPI_GetMousePos",documentation:"Returns the current mouse position"},{label:"_WinAPI_GetMousePosX",documentation:"Returns the current mouse X position"},{label:"_WinAPI_GetMousePosY",documentation:"Returns the current mouse Y position"},{label:"_WinAPI_GetObject",documentation:"Retrieves information for the specified graphics object"},{label:"_WinAPI_GetOpenFileName",documentation:"Creates an Open dialog box that lets the user specify the drive, directory, and the name of a file or set of files to open"},{label:"_WinAPI_GetOverlappedResult",documentation:"Retrieves the results of an overlapped operation"},{label:"_WinAPI_GetParent",documentation:"Retrieves the handle of the specified child window's parent window"},{label:"_WinAPI_GetProcAddress",documentation:"Retrieves the address of an exported function or variable from the specified module"},{label:"_WinAPI_GetProcessAffinityMask",documentation:"Obtains the affinity masks for the process and the system"},{label:"_WinAPI_GetSaveFileName",documentation:"Creates a Save dialog box that lets the user specify the drive, directory, and name of a file to save"},{label:"_WinAPI_GetStdHandle",documentation:"Retrieves a handle for the standard input, standard output, or standard error device"},{label:"_WinAPI_GetStockObject",documentation:"Retrieves a handle to one of the predefined stock pens, brushes, fonts, or palettes"},{label:"_WinAPI_GetSysColor",documentation:"Retrieves the current color of the specified display element"},{label:"_WinAPI_GetSysColorBrush",documentation:"Retrieves a handle identifying a logical brush that corresponds to the specified color index"},{label:"_WinAPI_GetSystemMetrics",documentation:"Retrieves the specified system metric or system configuration setting"},{label:"_WinAPI_GetTextExtentPoint32",documentation:"Computes the width and height of the specified string of text"},{label:"_WinAPI_GetTextMetrics",documentation:"Retrieves basic information for the currently selected font"},{label:"_WinAPI_GetWindow",documentation:"Retrieves the handle of a window that has a specified relationship to the specified window"},{label:"_WinAPI_GetWindowDC",documentation:"Retrieves the device context (DC) for the entire window"},{label:"_WinAPI_GetWindowHeight",documentation:"Returns the height of the window"},{label:"_WinAPI_GetWindowLong",documentation:"Retrieves information about the specified window"},{label:"_WinAPI_GetWindowPlacement",documentation:"Retrieves the placement of the window for Min, Max, and normal positions"},{label:"_WinAPI_GetWindowRect",documentation:"Retrieves the dimensions of the bounding rectangle of the specified window"},{label:"_WinAPI_GetWindowRgn",documentation:"Obtains a copy of the window region of a window"},{label:"_WinAPI_GetWindowText",documentation:"Retrieves the text of the specified window's title bar"},{label:"_WinAPI_GetWindowThreadProcessId",documentation:"Retrieves the identifier of the thread that created the specified window"},{label:"_WinAPI_GetWindowWidth",documentation:"Returns the width of the window"},{label:"_WinAPI_GetXYFromPoint",documentation:"Returns the X/Y values from a $tagPOINT structure"},{label:"_WinAPI_GlobalMemoryStatus",documentation:"Retrieves information about current available memory"},{label:"_WinAPI_GUIDFromString",documentation:"Converts a string GUID to binary form"},{label:"_WinAPI_GUIDFromStringEx",documentation:"Converts a string GUID to binary form"},{label:"_WinAPI_HiWord",documentation:"Returns the high word of a longword value"},{label:"_WinAPI_InProcess",documentation:"Determines whether a window belongs to the current process"},{label:"_WinAPI_IntToFloat",documentation:"Returns a 4 byte integer as a float value"},{label:"_WinAPI_InvalidateRect",documentation:"Adds a rectangle to the specified window's update region"},{label:"_WinAPI_IsClassName",documentation:"Wrapper to check ClassName of the control"},{label:"_WinAPI_IsWindow",documentation:"Determines whether the specified window handle identifies an existing window"},{label:"_WinAPI_IsWindowVisible",documentation:"Retrieves the visibility state of the specified window"},{label:"_WinAPI_LineTo",documentation:"Draws a line from the current position up to, but not including, the specified point"},{label:"_WinAPI_LoadBitmap",documentation:"Loads the specified bitmap resource from a module's executable file"},{label:"_WinAPI_LoadImage",documentation:"Loads an icon, cursor, or bitmap"},{label:"_WinAPI_LoadLibrary",documentation:"Maps a specified executable module into the address space of the calling process"},{label:"_WinAPI_LoadLibraryEx",documentation:"Maps a specified executable module into the address space of the calling process"},{label:"_WinAPI_LoadShell32Icon",documentation:"Extracts an icon from the shell32.dll file"},{label:"_WinAPI_LoadString",documentation:"loads a string resource from the executable file associated with a specified module"},{label:"_WinAPI_LocalFree",documentation:"Frees the specified local memory object and invalidates its handle"},{label:"_WinAPI_LoWord",documentation:"Returns the low word of a longword"},{label:"_WinAPI_MAKELANGID",documentation:"Construct language id from a primary language id and a sublanguage id"},{label:"_WinAPI_MAKELCID",documentation:"Construct locale id from a language id and a sort id"},{label:"_WinAPI_MakeLong",documentation:"Returns a long int value from two int values"},{label:"_WinAPI_MakeQWord",documentation:"Returns a QWORD value from two int values"},{label:"_WinAPI_MessageBeep",documentation:"Plays a waveform sound"},{label:"_WinAPI_Mouse_Event",documentation:"Synthesizes mouse motion and button clicks"},{label:"_WinAPI_MoveTo",documentation:"Updates the current position to the specified point"},{label:"_WinAPI_MoveWindow",documentation:"Changes the position and dimensions of the specified window"},{label:"_WinAPI_MsgBox",documentation:"Displays a message box with wider margin than original"},{label:"_WinAPI_MulDiv",documentation:"Multiplies two 32-bit values and then divides the 64-bit result by a third 32-bit value"},{label:"_WinAPI_MultiByteToWideChar",documentation:"Maps a character string to a wide-character (Unicode) string"},{label:"_WinAPI_MultiByteToWideCharEx",documentation:"Maps a character string to a wide-character (Unicode) string"},{label:"_WinAPI_OpenProcess",documentation:"Returns a handle of an existing process object"},{label:"_WinAPI_PathFindOnPath",documentation:"Searchs for a file in the default system paths"},{label:"_WinAPI_PointFromRect",documentation:"Returns the top/left coordinates of a $tagRECT as a $tagPOINT structure"},{label:"_WinAPI_PostMessage",documentation:"Places a message in the message queue and then returns"},{label:"_WinAPI_PrimaryLangId",documentation:"Extract primary language id from a language id"},{label:"_WinAPI_PtInRect",documentation:"Determines whether the specified point lies within the specified rectangle"},{label:"_WinAPI_ReadFile",documentation:"Reads data from a file"},{label:"_WinAPI_ReadProcessMemory",documentation:"Reads memory in a specified process"},{label:"_WinAPI_RectIsEmpty",documentation:"Determins whether a rectangle is empty"},{label:"_WinAPI_RedrawWindow",documentation:"Updates the specified rectangle or region in a window's client area"},{label:"_WinAPI_RegisterWindowMessage",documentation:"Defines a new window message that is guaranteed to be unique throughout the system"},{label:"_WinAPI_ReleaseCapture",documentation:"Releases the mouse capture from a window in the current thread and restores normal mouse input processing"},{label:"_WinAPI_ReleaseDC",documentation:"Releases a device context"},{label:"_WinAPI_ScreenToClient",documentation:"Converts screen coordinates of a specified point on the screen to client coordinates"},{label:"_WinAPI_SelectObject",documentation:"Selects an object into the specified device context"},{label:"_WinAPI_SetBkColor",documentation:"Sets the current background color to the specified color value"},{label:"_WinAPI_SetBkMode",documentation:"Sets the background mix mode of the specified device context"},{label:"_WinAPI_SetCapture",documentation:"Sets the mouse capture to the specified window belonging to the current thread"},{label:"_WinAPI_SetCursor",documentation:"Establishes the cursor shape"},{label:"_WinAPI_SetDefaultPrinter",documentation:"Sets the default printer for the current user on the local computer"},{label:"_WinAPI_SetDIBits",documentation:"Sets the pixels in a compatible bitmap using the color data found in a DIB"},{label:"_WinAPI_SetEndOfFile",documentation:"Sets the physical file size for the specified file to the current position of the file pointer"},{label:"_WinAPI_SetEvent",documentation:"Sets the specified event object to the signaled state"},{label:"_WinAPI_SetFilePointer",documentation:"Moves the file pointer of the specified file"},{label:"_WinAPI_SetFocus",documentation:"Sets the keyboard focus to the specified window"},{label:"_WinAPI_SetFont",documentation:"Sets a window font"},{label:"_WinAPI_SetHandleInformation",documentation:"Sets certain properties of an object handle"},{label:"_WinAPI_SetLastError",documentation:"Sets the last-error code for the calling thread"},{label:"_WinAPI_SetLayeredWindowAttributes",documentation:"Sets Layered Window Attributes"},{label:"_WinAPI_SetParent",documentation:"Changes the parent window of the specified child window"},{label:"_WinAPI_SetProcessAffinityMask",documentation:"Sets a processor affinity mask for the threads of a specified process"},{label:"_WinAPI_SetSysColors",documentation:"Obtains information about the display devices in a system"},{label:"_WinAPI_SetTextColor",documentation:"Sets the current text color to the specified color value"},{label:"_WinAPI_SetWindowLong",documentation:"Sets information about the specified window"},{label:"_WinAPI_SetWindowPlacement",documentation:"Sets the placement of the window for Min, Max, and normal positions"},{label:"_WinAPI_SetWindowPos",documentation:"Changes the size, position, and Z order of a child, pop-up, or top-level window"},{label:"_WinAPI_SetWindowRgn",documentation:"Sets the window region of a window"},{label:"_WinAPI_SetWindowsHookEx",documentation:"Installs an application-defined hook procedure into a hook chain"},{label:"_WinAPI_SetWindowText",documentation:"Changes the text of the specified window's title bar"},{label:"_WinAPI_ShowCursor",documentation:"Displays or hides the cursor"},{label:"_WinAPI_ShowError",documentation:"Displays an error message box with an optional exit"},{label:"_WinAPI_ShowMsg",documentation:'Displays an "Information" message box'},{label:"_WinAPI_ShowWindow",documentation:"Sets the specified window's show state"},{label:"_WinAPI_StringFromGUID",documentation:"Converts a binary GUID to string form"},{label:"_WinAPI_StringLenA",documentation:"Calculates the size of ANSI string"},{label:"_WinAPI_StringLenW",documentation:"Calculates the size of wide string"},{label:"_WinAPI_SubLangId",documentation:"Extract sublanguage id from a language id"},{label:"_WinAPI_SystemParametersInfo",documentation:"Retrieves or sets the value of one of the system-wide parameters"},{label:"_WinAPI_TwipsPerPixelX",documentation:"Returns the width of a pixel, in twips"},{label:"_WinAPI_TwipsPerPixelY",documentation:"Returns the height of a pixel, in twips"},{label:"_WinAPI_UnhookWindowsHookEx",documentation:"Removes a hook procedure installed in a hook chain by the _WinAPI_SetWindowsHookEx function"},{label:"_WinAPI_UpdateLayeredWindow",documentation:"Updates the position, size, shape, content, and translucency of a layered window"},{label:"_WinAPI_UpdateWindow",documentation:"Updates the client area of a window by sending a WM_PAINT message to the window"},{label:"_WinAPI_WaitForInputIdle",documentation:"Waits until a process is waiting for user input with no input pending, or a time out"},{label:"_WinAPI_WaitForMultipleObjects",documentation:"Waits until one or all of the specified objects are in the signaled state"},{label:"_WinAPI_WaitForSingleObject",documentation:"Waits until the specified object is in the signaled state"},{label:"_WinAPI_WideCharToMultiByte",documentation:"Converts a Unicode string to a multibyte string"},{label:"_WinAPI_WindowFromPoint",documentation:"Retrieves the handle of the window that contains the specified point"},{label:"_WinAPI_WriteConsole",documentation:"Writes a character string to a console screen buffer"},{label:"_WinAPI_WriteFile",documentation:"Writes data to a file at the position specified by the file pointer"},{label:"_WinAPI_WriteProcessMemory",documentation:"Writes memory in a specified process"}],t.CompletionItemKind.Function,"WinAPI UDF","WinAPI.au3"),Ri=(0,Ce.fillCompletions)([{label:"_WinAPI_CLSIDFromProgID",documentation:"Looks up a CLSID in the registry, given a ProgID"},{label:"_WinAPI_CoInitialize",documentation:"Initializes the COM library for use by the calling process"},{label:"_WinAPI_CoTaskMemAlloc",documentation:"Allocates a block of task memory"},{label:"_WinAPI_CoTaskMemFree",documentation:"Frees a block of task memory"},{label:"_WinAPI_CoTaskMemRealloc",documentation:"Changes the size of a previously allocated block of task memory"},{label:"_WinAPI_CoUninitialize",documentation:"Closes the COM library on the current process"},{label:"_WinAPI_CreateGUID",documentation:"Creates a globally unique identifier (GUID)"},{label:"_WinAPI_CreateStreamOnHGlobal",documentation:"Creates a stream object that uses a memory handle to store the stream contents"},{label:"_WinAPI_GetHGlobalFromStream",documentation:"Retrieves the global memory handle to a stream"},{label:"_WinAPI_ProgIDFromCLSID",documentation:"Retrieves the ProgID for a given CLSID"},{label:"_WinAPI_ReleaseStream",documentation:"Releases a stream object "}],t.CompletionItemKind.Function,"WinAPICom UDF","WinAPICom.au3"),xi=(0,Ce.fillCompletions)([{label:"_WinAPI_DisplayStruct",documentation:"Displays data from the specified structure or memory address as a list"},{label:"_WinAPI_EnumDllProc",documentation:"Enumerates an exported functions of the specified dynamic-link library (DLL)"},{label:"_WinAPI_FatalExit",documentation:"Transfers execution control to the debugger"},{label:"_WinAPI_GetApplicationRestartSettings",documentation:"Retrieves the restart information registered for the specified process"},{label:"_WinAPI_GetErrorMessage",documentation:"Retrieves a text error message for the specified system error code"},{label:"_WinAPI_GetErrorMode",documentation:"Retrieves the error mode for the current process"},{label:"_WinAPI_IsInternetConnected",documentation:"Determines whether the current user is connected to the Internet"},{label:"_WinAPI_IsNetworkAlive",documentation:"Determines whether or not a local system is connected to a network, and identifies the type of network connection"},{label:"_WinAPI_NtStatusToDosError",documentation:"Converts the specified NTSTATUS error code to its equivalent system error code"},{label:"_WinAPI_RegisterApplicationRestart",documentation:"Registers the active instance of an application for restart"},{label:"_WinAPI_SetErrorMode",documentation:"Controls whether the system will handle the specified types of serious errors or whether the process will handle them"},{label:"_WinAPI_ShowLastError",documentation:"Shows the last error code and message"},{label:"_WinAPI_UniqueHardwareID",documentation:"Generates a unique hardware identifier (ID) for local computer"},{label:"_WinAPI_UnregisterApplicationRestart",documentation:"Removes the active instance of an application from the restart list "}],t.CompletionItemKind.Function,"WinAPIDiag UDF","WinAPIDiag.au3"),vi=(0,Ce.fillCompletions)([{label:"_WinAPI_BrowseForFolderDlg",documentation:"Displays a dialog box that enables the user to select a Shell folder"},{label:"_WinAPI_CommDlgExtendedErrorEx",documentation:"Returns a common dialog box error code"},{label:"_WinAPI_ConfirmCredentials",documentation:"Confirms the validity of the credential harvested"},{label:"_WinAPI_FindTextDlg",documentation:"Creates a system-defined modeless Find dialog box to search for text in a document"},{label:"_WinAPI_FlushFRBuffer",documentation:"Destroys the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions"},{label:"_WinAPI_FormatDriveDlg",documentation:"Opens the Shell's Format dialog"},{label:"_WinAPI_GetConnectedDlg",documentation:"Launches the Get Connected wizard within the calling application to enable network connectivity"},{label:"_WinAPI_GetFRBuffer",documentation:"Retrieves the current size of the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions"},{label:"_WinAPI_MessageBoxCheck",documentation:"Displays a message box that gives the user the option of suppressing further occurrences"},{label:"_WinAPI_MessageBoxIndirect",documentation:"Creates, displays, and operates a message box"},{label:"_WinAPI_OpenFileDlg",documentation:"Creates a dialog box that lets the user specify the drive, directory, and the name of a file or set of files to be opened"},{label:"_WinAPI_PageSetupDlg",documentation:"Creates a Page Setup dialog box that enables the user to specify the attributes of a printed page"},{label:"_WinAPI_PickIconDlg",documentation:"Displays a dialog box that allows the user to choose an icon"},{label:"_WinAPI_PrintDlg",documentation:"Displays a Print dialog box"},{label:"_WinAPI_PrintDlgEx",documentation:"Displays a Print property sheet that enables the user to specify the properties of a particular print job"},{label:"_WinAPI_ReplaceTextDlg",documentation:"Creates a system-defined modeless dialog box that lets the user specify a string to search for and a replacement string"},{label:"_WinAPI_RestartDlg",documentation:"Displays a dialog box that prompts the user to restart Microsoft Windows"},{label:"_WinAPI_SaveFileDlg",documentation:"Creates a dialog box that lets the user specify the drive, directory, and name of a file to save"},{label:"_WinAPI_SetFRBuffer",documentation:"Sets the size of the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions"},{label:"_WinAPI_ShellAboutDlg",documentation:"Displays a Windows About dialog box"},{label:"_WinAPI_ShellOpenWithDlg",documentation:"Displays the Open With dialog box"},{label:"_WinAPI_ShellStartNetConnectionDlg",documentation:"Displays a general browsing dialog box for a network resource connection"},{label:"_WinAPI_ShellUserAuthenticationDlg",documentation:"Creates and displays a configurable dialog box that accepts credentials information from a user"},{label:"_WinAPI_ShellUserAuthenticationDlgEx",documentation:"Creates and displays a configurable dialog box that accepts credentials information from a user "}],t.CompletionItemKind.Function,"WinAPIDlg UDF","WinAPIDlg.au3"),Ui=(0,Ce.fillCompletions)([{label:"_WinAPI_BackupRead",documentation:"Backs up a file or directory, including the security information"},{label:"_WinAPI_BackupReadAbort",documentation:"Finishes the use of _WinAPI_BackupRead() on the handle"},{label:"_WinAPI_BackupSeek",documentation:"Seeks forward in a data stream initially accessed by using the _WinAPI_BackupRead() or _WinAPI_BackupWrite() function"},{label:"_WinAPI_BackupWrite",documentation:"Restore a file or directory that was backed up using _WinAPI_BackupRead()"},{label:"_WinAPI_BackupWriteAbort",documentation:"Finishes the use of _WinAPI_BackupWrite() on the handle"},{label:"_WinAPI_DefineDosDevice",documentation:"Defines, redefines, or deletes MS-DOS device names"},{label:"_WinAPI_GetDriveType",documentation:"Determines whether a disk drive is a removable, fixed, CD-ROM, RAM disk, or network drive"},{label:"_WinAPI_GetLogicalDrives",documentation:"Retrieves a bitmask representing the currently available disk drives"},{label:"_WinAPI_GetPEType",documentation:"Retrieves a type of the machine for the specified portable executable (PE)"},{label:"_WinAPI_QueryDosDevice",documentation:"Retrieves the current mapping for a particular MS-DOS device name"},{label:"_WinAPI_Wow64EnableWow64FsRedirection",documentation:"Enables or disables file system redirection for the calling thread "},{label:"_WinAPI_CreateObjectID",documentation:"Creates or retrieves the object identifier for the specified file or directory"},{label:"_WinAPI_DeleteObjectID",documentation:"Removes the object identifier from a specified file or directory"},{label:"_WinAPI_DeviceIoControl",documentation:"Sends a control code directly to a specified device driver"},{label:"_WinAPI_EjectMedia",documentation:"Ejects media from a device"},{label:"_WinAPI_GetCDType",documentation:"Retrieves a type of the media which is loaded into a specified CD-ROM device"},{label:"_WinAPI_GetDriveBusType",documentation:"Retrieves a bus type for the specified drive"},{label:"_WinAPI_GetDriveGeometryEx",documentation:"Retrieves extended information about the disk's geometry"},{label:"_WinAPI_GetDriveNumber",documentation:"Retrieves a device type, device number, and partition number for the specified drive"},{label:"_WinAPI_GetObjectID",documentation:"Retrieves the object identifier for the specified file or directory"},{label:"_WinAPI_IOCTL",documentation:"Create a unique system I/O control code (IOCTL)"},{label:"_WinAPI_IsDoorOpen",documentation:"Checks if a CD (DVD) tray is open"},{label:"_WinAPI_IsWritable",documentation:"Determines whether a disk is writable"},{label:"_WinAPI_LoadMedia",documentation:"Loads media into a device "},{label:"_WinAPI_CopyFileEx",documentation:"Copies an existing file to a new file, notifying the application of its progress through a callback function"},{label:"_WinAPI_CreateDirectory",documentation:"Creates a new directory"},{label:"_WinAPI_CreateDirectoryEx",documentation:"Creates a new directory with the attributes of a specified template directory"},{label:"_WinAPI_CreateFileEx",documentation:"Creates or opens a file or I/O device"},{label:"_WinAPI_CreateFileMapping",documentation:"Creates or opens a named or unnamed file mapping object for a specified file"},{label:"_WinAPI_CreateHardLink",documentation:"Establishes a hard link between an existing file and a new file"},{label:"_WinAPI_CreateSymbolicLink",documentation:"Creates a symbolic link"},{label:"_WinAPI_DecryptFile",documentation:"Decrypts an encrypted file or directory"},{label:"_WinAPI_DeleteFile",documentation:"Deletes an existing file"},{label:"_WinAPI_DeleteVolumeMountPoint",documentation:"Deletes a drive letter or mounted folder"},{label:"_WinAPI_DuplicateEncryptionInfoFile",documentation:"Copies the EFS metadata from one file or directory to another"},{label:"_WinAPI_EncryptFile",documentation:"Encrypts a file or directory"},{label:"_WinAPI_EncryptionDisable",documentation:"Disables or enables encryption of the specified directory and the files in it"},{label:"_WinAPI_EnumFiles",documentation:"Enumerates the files and subdirectories for the specified directory with a name that matches the template"},{label:"_WinAPI_EnumFileStreams",documentation:"Enumerates all streams with a ::$DATA stream type in the specified file or directory"},{label:"_WinAPI_EnumHardLinks",documentation:"Enumerates all the hard links to the specified file"},{label:"_WinAPI_FileEncryptionStatus",documentation:"Retrieves the encryption status of the specified file"},{label:"_WinAPI_FileExists",documentation:"Tests whether the specified path is existing file"},{label:"_WinAPI_FileInUse",documentation:"Tests whether the specified file in use by another application"},{label:"_WinAPI_FindClose",documentation:"Closes a file search handle"},{label:"_WinAPI_FindCloseChangeNotification",documentation:"Stops change notification handle monitoring"},{label:"_WinAPI_FindFirstChangeNotification",documentation:"Creates a change notification handle and sets up initial change notification filter conditions"},{label:"_WinAPI_FindFirstFile",documentation:"Searches a directory for a file or subdirectory with a name that matches a specific name"},{label:"_WinAPI_FindFirstFileName",documentation:"Creates an enumeration of all the hard links to the specified file"},{label:"_WinAPI_FindFirstStream",documentation:"Enumerates the first stream with a ::$DATA stream type in the specified file or directory"},{label:"_WinAPI_FindNextChangeNotification",documentation:"Requests that the operating system signal a change notification handle the next time it detects an appropriate change"},{label:"_WinAPI_FindNextFile",documentation:"Continues a file or directory search"},{label:"_WinAPI_FindNextFileName",documentation:"Continues enumerating the hard links"},{label:"_WinAPI_FindNextStream",documentation:"Continues a stream search"},{label:"_WinAPI_FlushViewOfFile",documentation:"Writes to the disk a byte range within a mapped view of a file"},{label:"_WinAPI_GetBinaryType",documentation:"Determines whether a file is an executable (.exe) file, and if so, which subsystem runs the executable file"},{label:"_WinAPI_GetCompressedFileSize",documentation:"Retrieves the actual number of bytes of disk storage used to store a specified file"},{label:"_WinAPI_GetCompression",documentation:"Retrieves the current compression state of a file or directory"},{label:"_WinAPI_GetCurrentDirectory",documentation:"Retrieves the current directory for the current process"},{label:"_WinAPI_GetDiskFreeSpaceEx",documentation:"Retrieves information about the amount of space that is available on a disk volume"},{label:"_WinAPI_GetFileAttributes",documentation:"Retrieves file system attributes for a specified file or directory"},{label:"_WinAPI_GetFileID",documentation:"Retrieves the file system's 8-byte file reference number for a file"},{label:"_WinAPI_GetFileInformationByHandle",documentation:"Retrieves file information for the specified file"},{label:"_WinAPI_GetFileInformationByHandleEx",documentation:"Retrieves file information for the specified file"},{label:"_WinAPI_GetFilePointerEx",documentation:"Retrieves the file pointer of the specified file"},{label:"_WinAPI_GetFileSizeOnDisk",documentation:"Retrieves the file allocation size on disk"},{label:"_WinAPI_GetFileTitle",documentation:"Retrieves the name of the specified file"},{label:"_WinAPI_GetFileType",documentation:"Retrieves the file type of the specified file"},{label:"_WinAPI_GetFinalPathNameByHandle",documentation:"Retrieves the final path of the specified file"},{label:"_WinAPI_GetFinalPathNameByHandleEx",documentation:"Retrieves the final path of the specified file"},{label:"_WinAPI_GetFullPathName",documentation:"Retrieves the full path and file name of the specified file"},{label:"_WinAPI_GetProfilesDirectory",documentation:"Retrieves the path to the root directory where user profiles are stored"},{label:"_WinAPI_GetTempFileName",documentation:"Creates a name for a temporary file"},{label:"_WinAPI_GetVolumeInformation",documentation:"Retrieves information about the file system and volume associated with the specified root directory"},{label:"_WinAPI_GetVolumeInformationByHandle",documentation:"Retrieves information about the file system and volume associated with the specified file"},{label:"_WinAPI_GetVolumeNameForVolumeMountPoint",documentation:"Retrieves a volume GUID path for the volume that is associated with the specified volume mount point"},{label:"_WinAPI_IsPathShared",documentation:"Determines whether the path is shared"},{label:"_WinAPI_LockDevice",documentation:"Enables or disables the mechanism that ejects media, for those devices possessing that locking capability"},{label:"_WinAPI_LockFile",documentation:"Locks the specified file for exclusive access by the calling process"},{label:"_WinAPI_MapViewOfFile",documentation:"Maps a view of a file mapping into the address space of a calling process"},{label:"_WinAPI_MoveFileEx",documentation:"Moves a file or directory, notifying the application of its progress through a callback function"},{label:"_WinAPI_OpenFileById",documentation:"Opens the file that matches the specified object identifier"},{label:"_WinAPI_OpenFileMapping",documentation:"Opens a named file mapping object"},{label:"_WinAPI_PathIsDirectory",documentation:"Verifies that a path is a valid directory"},{label:"_WinAPI_PathIsDirectoryEmpty",documentation:"Determines whether a specified path is an empty directory"},{label:"_WinAPI_ReadDirectoryChanges",documentation:"Retrieves information that describes the changes within the specified directory"},{label:"_WinAPI_RemoveDirectory",documentation:"Deletes an existing empty directory"},{label:"_WinAPI_ReOpenFile",documentation:"Reopens the specified file system object with different access rights, sharing mode, and flags"},{label:"_WinAPI_ReplaceFile",documentation:"Replaces one file with another file, and creates a backup copy of the original file"},{label:"_WinAPI_SearchPath",documentation:"Searches for a specified file in a specified path"},{label:"_WinAPI_SetCompression",documentation:"Sets the compression state of a file or directory"},{label:"_WinAPI_SetCurrentDirectory",documentation:"Changes the current directory for the current process"},{label:"_WinAPI_SetFileAttributes",documentation:"Sets the attributes for a file or directory"},{label:"_WinAPI_SetFileInformationByHandleEx",documentation:"Sets the file information for the specified file"},{label:"_WinAPI_SetFilePointerEx",documentation:"Moves the file pointer of the specified file"},{label:"_WinAPI_SetFileShortName",documentation:"Sets the short name for the specified file"},{label:"_WinAPI_SetFileValidData",documentation:"Sets the valid data length of the specified file"},{label:"_WinAPI_SetSearchPathMode",documentation:"Sets the per-process mode that the _WinAPI_SearchPath() function uses when locating files"},{label:"_WinAPI_SetVolumeMountPoint",documentation:"Associates a volume with a drive letter or a directory on another volume"},{label:"_WinAPI_SfcIsFileProtected",documentation:"Determines whether the specified file is protected"},{label:"_WinAPI_UnlockFile",documentation:"Unlocks a region in an open file"},{label:"_WinAPI_UnmapViewOfFile",documentation:"Unmaps a mapped view of a file from the calling process's address space"}],t.CompletionItemKind.Function,"WinAPIFiles UDF","WinAPIFiles.au3"),Fi=(0,Ce.fillCompletions)([{label:"_WinAPI_AddIconOverlay",documentation:"Creates an icon by merging the source icon and overlay mask"},{label:"_WinAPI_AdjustBitmap",documentation:"Creates a new device-depended bitmap (DDB) from the source bitmap with new dimensions and color adjustment"},{label:"_WinAPI_AlphaBlend",documentation:"Displays bitmaps that have transparent or semitransparent pixels"},{label:"_WinAPI_CompressBitmapBits",documentation:"Creates a compressed data block from the specified bitmap"},{label:"_WinAPI_CopyBitmap",documentation:"Creates a duplicate of a specified bitmap with a device-independent bitmap (DIB) section"},{label:"_WinAPI_CopyImage",documentation:"Creates a new image (icon, cursor, or bitmap) and copies the attributes of the specified image to the new one"},{label:"_WinAPI_Create32BitHBITMAP",documentation:"Creates a 32 bits-per-pixel bitmap from the specified icon"},{label:"_WinAPI_Create32BitHICON",documentation:"Converts an icon to a 32 bits-per-pixel format and copies to the new icon"},{label:"_WinAPI_CreateANDBitmap",documentation:"Creates AND bitmask device-independent bitmap (DIB) from the specified bitmap"},{label:"_WinAPI_CreateBitmapIndirect",documentation:"Creates a bitmap with the specified width, height, and color format (color planes and bits-per-pixel)"},{label:"_WinAPI_CreateCompatibleBitmapEx",documentation:"Creates a bitmap compatible with the device and fills it the specified color"},{label:"_WinAPI_CreateDIB",documentation:"Creates an uncompressed device-independent bitmap (DIB) with the specified width, height, and color depth"},{label:"_WinAPI_CreateDIBColorTable",documentation:"Creates RGB color table from the specified array of colors"},{label:"_WinAPI_CreateDIBitmap",documentation:"Creates a compatible bitmap (DDB) from a DIB and, optionally, sets the bitmap bits"},{label:"_WinAPI_CreateDIBSection",documentation:"Creates a DIB that applications can write to directly"},{label:"_WinAPI_CreateEmptyIcon",documentation:"Creates a fully transparent icon with the specified width, height, and color depth"},{label:"_WinAPI_CreateIconIndirect",documentation:"Creates an icon or cursor that has the specified size, colors, and bit patterns"},{label:"_WinAPI_DrawBitmap",documentation:"Draws a bitmap into the specified device context"},{label:"_WinAPI_ExtFloodFill",documentation:"Fills an area of the display surface with the current brush"},{label:"_WinAPI_GetBitmapBits",documentation:"Copies the bitmap bits of a specified device-dependent bitmap into a buffer"},{label:"_WinAPI_GetBitmapDimension",documentation:"Retrieves a dimension of the specified bitmap"},{label:"_WinAPI_GetBitmapDimensionEx",documentation:"Retrieves the dimensions of a compatible bitmap"},{label:"_WinAPI_GetDIBColorTable",documentation:"Retrieves RGB color table from the DIB section bitmap"},{label:"_WinAPI_GetIconDimension",documentation:"Retrieves a dimension of the specified icon"},{label:"_WinAPI_GetPixel",documentation:"Retrieves the color value of the pixel at the specified coordinates"},{label:"_WinAPI_GetStretchBltMode",documentation:"Retrieves the current stretching mode"},{label:"_WinAPI_GradientFill",documentation:"Fills rectangle or triangle gradient"},{label:"_WinAPI_InvertANDBitmap",documentation:"Inverts the specified AND bitmask bitmap by performing a logical NOT operation"},{label:"_WinAPI_IsAlphaBitmap",documentation:"Determines whether the specified bitmap has an alpha channel"},{label:"_WinAPI_MaskBlt",documentation:"Combines the color data for the source and destination bitmaps using the specified mask and raster operation"},{label:"_WinAPI_PlgBlt",documentation:"Performs a bit-block transfer of color data from the specified rectangle in the source DC to the specified parallelogram in the DC context"},{label:"_WinAPI_RadialGradientFill",documentation:"Fills radial gradient"},{label:"_WinAPI_SaveHBITMAPToFile",documentation:"Saves a specified bitmap to the specified bitmap (.bmp) file"},{label:"_WinAPI_SaveHICONToFile",documentation:"Saves a specified single or multiple icon (HICON) to the specified icon (.ico) file"},{label:"_WinAPI_SetBitmapBits",documentation:"Sets the bits of color data for a bitmap to the specified values"},{label:"_WinAPI_SetBitmapDimensionEx",documentation:"Assigns preferred dimensions to a compatible bitmap"},{label:"_WinAPI_SetDIBColorTable",documentation:"Sets RGB color table in the DIB section bitmap"},{label:"_WinAPI_SetDIBitsToDevice",documentation:"Sets the pixels in the specified rectangle on the device"},{label:"_WinAPI_SetPixel",documentation:"Sets the pixel at the specified coordinates to the specified color"},{label:"_WinAPI_SetStretchBltMode",documentation:"Sets the bitmap stretching mode in the specified device context"},{label:"_WinAPI_StretchBlt",documentation:"Copies a bitmap from a source rectangle into a destination rectangle, stretching or compressing the bitmap to fit the dimensions of the destination rectangle"},{label:"_WinAPI_StretchDIBits",documentation:"Copies the color data for a rectangle of pixels in a DIB, JPEG, or PNG image to the specified destination rectangle, stretching or compressing the rows and columns by using the specified raster operation"},{label:"_WinAPI_TransparentBlt",documentation:"Performs a bit-block transfer of the color data corresponding to a rectangle of pixels "},{label:"_WinAPI_CreateBrushIndirect",documentation:"Creates a logical brush that has the specified style, color, and pattern"},{label:"_WinAPI_ExtCreatePen",documentation:"Creates a logical cosmetic or geometric pen that has the specified style, width, and brush attributes"},{label:"_WinAPI_GetBrushOrg",documentation:"Retrieves the current brush origin for the specified device context"},{label:"_WinAPI_PatBlt",documentation:"Paints the specified rectangle using the brush that is currently selected into the specified device context"},{label:"_WinAPI_SetBrushOrg",documentation:"Sets the brush origin that GDI assigns to the next brush an application selects into the specified device context"},{label:"_WinAPI_SetDCBrushColor",documentation:"Sets the current device context (DC) brush color to the specified color value"},{label:"_WinAPI_SetDCPenColor",documentation:"Sets the current device context (DC) pen color to the specified color value "},{label:"_WinAPI_ExcludeClipRect",documentation:"Creates a new clipping region that consists of the existing clipping region minus the specified rectangle"},{label:"_WinAPI_ExtSelectClipRgn",documentation:"Combines the specified region with the current clipping region"},{label:"_WinAPI_GetClipBox",documentation:"Retrieves the dimensions of the bounding rectangle of the visible area"},{label:"_WinAPI_GetClipRgn",documentation:"Retrieves a handle identifying the current application-defined clipping region"},{label:"_WinAPI_IntersectClipRect",documentation:"Creates a new clipping region from the intersection of the current clipping region and the specified rectangle"},{label:"_WinAPI_OffsetClipRgn",documentation:"Moves the clipping region of a device context by the specified offsets"},{label:"_WinAPI_PtVisible",documentation:"Determines whether the specified point is within the clipping region"},{label:"_WinAPI_RectVisible",documentation:"Determines whether any part of the specified rectangle lies within the clipping region"},{label:"_WinAPI_SelectClipPath",documentation:"Selects the current path as a clipping region, combining the new region with any existing clipping region"},{label:"_WinAPI_SelectClipRgn",documentation:"Selects a region as the current clipping region for the specified device context "},{label:"_WinAPI_ColorAdjustLuma",documentation:"Changes the luminance of a RGB value"},{label:"_WinAPI_ColorHLSToRGB",documentation:"Converts colors from hue-luminance-saturation (HLS) to RGB format"},{label:"_WinAPI_ColorRGBToHLS",documentation:"Converts colors from RGB to hue-luminance-saturation (HLS) format"},{label:"_WinAPI_CreateColorAdjustment",documentation:"Creates $tagCOLORADJUSTMENT structure specifies the color adjustment"},{label:"_WinAPI_GetBValue",documentation:"Retrieves an intensity value for the blue component of a 32-bit RGB value"},{label:"_WinAPI_GetColorAdjustment",documentation:"Retrieves the color adjustment for the specified device context (DC)"},{label:"_WinAPI_GetDeviceGammaRamp",documentation:"Gets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware"},{label:"_WinAPI_GetGValue",documentation:"Retrieves an intensity value for the green component of a 32-bit RGB value"},{label:"_WinAPI_GetRValue",documentation:"Retrieves an intensity value for the red component of a 32-bit RGB value"},{label:"_WinAPI_GetUDFColorMode",documentation:"Retrieves the current color mode for WinAPIEx UDF library"},{label:"_WinAPI_InvertColor",documentation:"Inverts (negative) the specified color"},{label:"_WinAPI_RGB",documentation:"Creates a RGB color value based on red, green, and blue components"},{label:"_WinAPI_SetColorAdjustment",documentation:"Sets the color adjustment for a device context (DC)"},{label:"_WinAPI_SetDeviceGammaRamp",documentation:"Sets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware"},{label:"_WinAPI_SetUDFColorMode",documentation:"Sets the color mode for the WinAPIEx library"},{label:"_WinAPI_SwitchColor",documentation:"Converts a color from BGR to RGB and vice versa "},{label:"_WinAPI_CombineTransform",documentation:"Concatenates two world-space to page-space transformations"},{label:"_WinAPI_CreateTransform",documentation:"Creates $tagXFORM structure specifies a world-space to page-space transformation"},{label:"_WinAPI_DPtoLP",documentation:"Converts device coordinates into logical coordinates"},{label:"_WinAPI_GetCurrentPosition",documentation:"Retrieves the current position for the specified device context"},{label:"_WinAPI_GetGraphicsMode",documentation:"Retrieves the current graphics mode for the specified device context"},{label:"_WinAPI_GetMapMode",documentation:"Retrieves the current mapping mode"},{label:"_WinAPI_GetPosFromRect",documentation:"Interprets the coordinates of the rectangle as offset and position coordinates"},{label:"_WinAPI_GetWindowExt",documentation:"Retrieves the x-extent and y-extent of the window for the specified device context"},{label:"_WinAPI_GetWindowOrg",documentation:"Retrieves the x-coordinates and y-coordinates of the window origin for the specified device context"},{label:"_WinAPI_GetWorldTransform",documentation:"Retrieves the current world-space to page-space transformation"},{label:"_WinAPI_LPtoDP",documentation:"Converts a logical coordinates into device coordinates"},{label:"_WinAPI_ModifyWorldTransform",documentation:"Changes the world transformation for a device context using the specified mode"},{label:"_WinAPI_OffsetPoints",documentation:"Moves a points from the array by the specified offsets"},{label:"_WinAPI_OffsetWindowOrg",documentation:"Modifies the window origin for a device context using the specified horizontal and vertical offsets"},{label:"_WinAPI_RotatePoints",documentation:"Rotates a points from the array by the specified angle"},{label:"_WinAPI_ScaleWindowExt",documentation:"Modifies the window for a device context using the ratios formed by the specified multiplicands and divisors"},{label:"_WinAPI_SetGraphicsMode",documentation:"Sets the graphics mode for the specified device context"},{label:"_WinAPI_SetMapMode",documentation:"Sets the mapping mode of the specified device context"},{label:"_WinAPI_SetWindowExt",documentation:"Sets the horizontal and vertical extents of the window for a device context by using the specified values"},{label:"_WinAPI_SetWindowOrg",documentation:"Specifies which window point maps to the viewport origin (0,0)"},{label:"_WinAPI_SetWorldTransform",documentation:"Sets a two-dimensional linear transformation between world space and page space for the specified device context "},{label:"_WinAPI_DwmDefWindowProc",documentation:"Default window procedure for Desktop Window Manager (DWM) hit testing within the non-client area"},{label:"_WinAPI_DwmEnableBlurBehindWindow",documentation:"Enables the blur effect on a specified window"},{label:"_WinAPI_DwmEnableComposition",documentation:"Enables or disables Desktop Window Manager (DWM) composition"},{label:"_WinAPI_DwmExtendFrameIntoClientArea",documentation:"Extends the window frame behind the client area"},{label:"_WinAPI_DwmGetColorizationColor",documentation:"Retrieves the current color used for Desktop Window Manager (DWM) glass composition"},{label:"_WinAPI_DwmGetColorizationParameters",documentation:"Retrieves the colorization parameters used for Desktop Window Manager (DWM)"},{label:"_WinAPI_DwmGetWindowAttribute",documentation:"Retrieves the current value of a specified attribute applied to the window"},{label:"_WinAPI_DwmInvalidateIconicBitmaps",documentation:"Indicates that all previously provided iconic bitmaps from a window, both thumbnails and peek representations, should be refreshed"},{label:"_WinAPI_DwmIsCompositionEnabled",documentation:"Determines whether Desktop Window Manager (DWM) composition is enabled"},{label:"_WinAPI_DwmQueryThumbnailSourceSize",documentation:"Returns the source size of the Desktop Window Manager (DWM) thumbnail"},{label:"_WinAPI_DwmRegisterThumbnail",documentation:"Creates a Desktop Window Manager (DWM) thumbnail relationship between the destination and source windows"},{label:"_WinAPI_DwmSetColorizationParameters",documentation:"Sets the colorization parameters for Desktop Window Manager (DWM)"},{label:"_WinAPI_DwmSetIconicLivePreviewBitmap",documentation:"Sets a static, iconic bitmap to display a live preview (also known as a Peek preview) of a window or tab"},{label:"_WinAPI_DwmSetIconicThumbnail",documentation:"Sets a static, iconic bitmap on a window or tab to use as a thumbnail representation"},{label:"_WinAPI_DwmSetWindowAttribute",documentation:"Sets the value of the specified attributes for non-client rendering to apply to the window"},{label:"_WinAPI_DwmUnregisterThumbnail",documentation:"Removes a Desktop Window Manager (DWM) thumbnail relationship"},{label:"_WinAPI_DwmUpdateThumbnailProperties",documentation:"Specifies Desktop Window Manager (DWM) thumbnail properties "},{label:"_WinAPI_EnumDisplaySettings",documentation:"Retrieves information about one of the graphics modes for a display device"},{label:"_WinAPI_GetCurrentObject",documentation:"Retrieves a handle to an object of the specified type that has been selected into the specified device context"},{label:"_WinAPI_GetDCEx",documentation:"Retrieves a handle to a device context (DC) for the client area of a specified window"},{label:"_WinAPI_GetObjectType",documentation:"Retrieves the type of the specified object"},{label:"_WinAPI_PrintWindow",documentation:"Copies a visual window into the specified device context"},{label:"_WinAPI_RestoreDC",documentation:"Restores a device context (DC) to the specified state"},{label:"_WinAPI_SaveDC",documentation:"Saves the current state of the specified device context (DC) by copying data describing selected objects and graphic modes to a context stack "},{label:"_WinAPI_AddFontMemResourceEx",documentation:"Adds the font resource from a memory image to the system"},{label:"_WinAPI_AddFontResourceEx",documentation:"Adds the font resource from the specified file to the system font table"},{label:"_WinAPI_CreateFontEx",documentation:"Creates a logical font with the specified characteristics"},{label:"_WinAPI_EnumFontFamilies",documentation:"Enumerates all uniquely-named fonts in the system that match the specified font characteristics"},{label:"_WinAPI_GetFontMemoryResourceInfo",documentation:"Reads out font information from a TTF loaded into the memory"},{label:"_WinAPI_GetFontName",documentation:"Retrieves the unique name of the font based on its typeface name, character set, and style"},{label:"_WinAPI_GetFontResourceInfo",documentation:"Retrieves the fontname from the specified font resource file"},{label:"_WinAPI_GetGlyphOutline",documentation:"Retrieves the outline or bitmap for a character in the TrueType font"},{label:"_WinAPI_GetOutlineTextMetrics",documentation:"Retrieves text metrics for TrueType fonts"},{label:"_WinAPI_GetTabbedTextExtent",documentation:"Computes the width and height of a character string which may contain one or more tab characters"},{label:"_WinAPI_GetTextAlign",documentation:"Retrieves the text-alignment setting for the specified device context"},{label:"_WinAPI_GetTextCharacterExtra",documentation:"Retrieves the current intercharacter spacing for the specified device context"},{label:"_WinAPI_GetTextColor",documentation:"Retrieves the current text color for the specified device context"},{label:"_WinAPI_GetTextFace",documentation:"Retrieves the typeface name of the font that is selected into the specified device context"},{label:"_WinAPI_RemoveFontMemResourceEx",documentation:"Removes the fonts added from a memory image"},{label:"_WinAPI_RemoveFontResourceEx",documentation:"Removes the fonts in the specified file from the system font table"},{label:"_WinAPI_SetTextAlign",documentation:"Sets the text-alignment flags for the specified device context"},{label:"_WinAPI_SetTextCharacterExtra",documentation:"Sets the intercharacter spacing for the specified device context"},{label:"_WinAPI_SetTextJustification",documentation:"Specifies the amount of space the system should add to the break characters in a string of text"},{label:"_WinAPI_TabbedTextOut",documentation:"Writes a character string at a specified location and expanding tabs to the specified tab-stop positions"},{label:"_WinAPI_TextOut",documentation:"Writes a string at the specified location, using the currently selected font, background color, and text color "},{label:"_WinAPI_AngleArc",documentation:"Draws a line segment and an arc"},{label:"_WinAPI_Arc",documentation:"Draws an elliptical arc"},{label:"_WinAPI_ArcTo",documentation:"Draws an elliptical arc"},{label:"_WinAPI_GetArcDirection",documentation:"Retrieves the current arc direction for the specified device context"},{label:"_WinAPI_LineDDA",documentation:"Determines which pixels should be highlighted for a line"},{label:"_WinAPI_MoveToEx",documentation:"Updates the current position to the specified point"},{label:"_WinAPI_PolyBezier",documentation:"Draws one or more Bezier curves"},{label:"_WinAPI_PolyBezierTo",documentation:"Draws one or more Bezier curves"},{label:"_WinAPI_PolyDraw",documentation:"Draws a set of line segments and Bezier curves"},{label:"_WinAPI_SetArcDirection",documentation:"Sets the drawing arc direction "},{label:"_WinAPI_CloseEnhMetaFile",documentation:"Closes an enhanced-metafile device context and returns a handle that identifies an enhanced-format metafile"},{label:"_WinAPI_CopyEnhMetaFile",documentation:"Copies the contents of an enhanced-format metafile to a specified file"},{label:"_WinAPI_CreateEnhMetaFile",documentation:"Creates a device context for an enhanced-format metafile"},{label:"_WinAPI_DeleteEnhMetaFile",documentation:"Deletes an enhanced-format metafile or an enhanced-format metafile handle"},{label:"_WinAPI_GdiComment",documentation:"Copies a comment from a buffer into a specified enhanced-format metafile"},{label:"_WinAPI_GetEnhMetaFile",documentation:"Creates a handle that identifies the enhanced-format metafile stored in the specified file"},{label:"_WinAPI_GetEnhMetaFileBits",documentation:"Retrieves the contents of the specified enhanced-format metafile"},{label:"_WinAPI_GetEnhMetaFileDescription",documentation:"Retrieves an optional text description from an enhanced-format metafile"},{label:"_WinAPI_GetEnhMetaFileDimension",documentation:"Retrieves a dimension of the specified enhanced-format metafile"},{label:"_WinAPI_GetEnhMetaFileHeader",documentation:"Retrieves the record containing the header for the specified enhanced-format metafile"},{label:"_WinAPI_PlayEnhMetaFile",documentation:"Displays the picture stored in the specified enhanced-format metafile"},{label:"_WinAPI_SetEnhMetaFileBits",documentation:"Creates a memory-based enhanced-format metafile from the specified data "},{label:"_WinAPI_EnumDisplayMonitors",documentation:"Enumerates display monitors (including invisible pseudo-monitors associated with the mirroring drivers)"},{label:"_WinAPI_MonitorFromPoint",documentation:"Retrieves a handle to the display monitor that contains a specified point"},{label:"_WinAPI_MonitorFromRect",documentation:"Retrieves a handle to the display monitor that has the largest area of intersection with a specified rectangle"},{label:"_WinAPI_MonitorFromWindow",documentation:"Retrieves a handle to the display monitor that has the largest area of intersection with the specified window"},{label:"_WinAPI_BeginPaint",documentation:"Prepares the specified window for painting"},{label:"_WinAPI_DrawAnimatedRects",documentation:"Animates the caption of a window to indicate the opening of an icon or the minimizing or maximizing of a window"},{label:"_WinAPI_DrawShadowText",documentation:"Draws formatted text in the specified rectangle with a drop shadow"},{label:"_WinAPI_EndPaint",documentation:"Marks the end of painting in the specified window"},{label:"_WinAPI_GetBkColor",documentation:"Retrieves the current background color for the specified device context"},{label:"_WinAPI_GetBoundsRect",documentation:"Obtains the current accumulated bounding rectangle for a specified device context"},{label:"_WinAPI_GetROP2",documentation:"Retrieves the foreground mix mode of the specified device context"},{label:"_WinAPI_GetUpdateRect",documentation:"Retrieves the coordinates of the rectangle that completely encloses the update region of the specified window"},{label:"_WinAPI_GetUpdateRgn",documentation:"Retrieves the update region of a window by copying it into the specified region"},{label:"_WinAPI_GetWindowRgnBox",documentation:"Retrieves the dimensions of the tightest bounding rectangle for the window region of a window"},{label:"_WinAPI_InvalidateRgn",documentation:"Adds a region to the specified window's update region"},{label:"_WinAPI_LockWindowUpdate",documentation:"Disables or enables drawing in the specified window"},{label:"_WinAPI_PaintDesktop",documentation:"Fills the clipping region in the specified device context with the desktop pattern or wallpaper"},{label:"_WinAPI_SetBoundsRect",documentation:"Controls the accumulation of bounding rectangle information for the specified device context"},{label:"_WinAPI_SetROP2",documentation:"Retrieves the foreground mix mode of the specified device context"},{label:"_WinAPI_ValidateRect",documentation:"Removes a rectangle from the current update region of the specified window"},{label:"_WinAPI_ValidateRgn",documentation:"Removes a region from the current update region of the specified window"},{label:"_WinAPI_WindowFromDC",documentation:"Retrieves a handle to the window associated with the specified display device context (DC) "},{label:"_WinAPI_AbortPath",documentation:"Closes and discards any paths in the specified device context"},{label:"_WinAPI_BeginPath",documentation:"Opens a path bracket in the specified device context"},{label:"_WinAPI_CloseFigure",documentation:"Closes an open figure in a path"},{label:"_WinAPI_EndPath",documentation:"Closes a path bracket and selects the path defined by the bracket into the specified device context"},{label:"_WinAPI_FillPath",documentation:"Closes any open figures in the current path and fills the path's interior by using the current brush"},{label:"_WinAPI_FlattenPath",documentation:"Transforms any curves in the path that is selected into the current DC, turning each curve into a sequence of lines"},{label:"_WinAPI_PathToRegion",documentation:"Creates a region from the path that is selected into the specified device context"},{label:"_WinAPI_StrokeAndFillPath",documentation:"Closes any open figures in a path, strokes the outline of the path, and fills its interior"},{label:"_WinAPI_StrokePath",documentation:"Renders the specified path by using the current pen"},{label:"_WinAPI_WidenPath",documentation:"Redefines the current path as the area that would be painted if the path were stroked "},{label:"_WinAPI_CopyRect",documentation:"Copies the coordinates of one rectangle to another"},{label:"_WinAPI_DrawFocusRect",documentation:"Draws a rectangle in the style used to indicate that the rectangle has the focus"},{label:"_WinAPI_EqualRect",documentation:"Determines whether the two specified rectangles are equal"},{label:"_WinAPI_InflateRect",documentation:"Increases or decreases the width and height of the specified rectangle"},{label:"_WinAPI_IntersectRect",documentation:"Creates the intersection of two rectangles"},{label:"_WinAPI_IsRectEmpty",documentation:"Determines whether the specified rectangle is empty"},{label:"_WinAPI_OffsetRect",documentation:"Moves the specified rectangle by the specified offsets"},{label:"_WinAPI_PtInRectEx",documentation:"Determines whether the specified point lies within the specified rectangle"},{label:"_WinAPI_SubtractRect",documentation:"Determines the coordinates of a rectangle formed by subtracting one rectangle from another"},{label:"_WinAPI_UnionRect",documentation:"Creates the union of two rectangles "},{label:"_WinAPI_CreateEllipticRgn",documentation:"Creates an elliptical region"},{label:"_WinAPI_CreateNullRgn",documentation:"Creates an empty region"},{label:"_WinAPI_CreatePolygonRgn",documentation:"Creates a polygonal region"},{label:"_WinAPI_CreateRectRgnIndirect",documentation:"Creates a rectangular region"},{label:"_WinAPI_EqualRgn",documentation:"Checks the two specified regions to determine whether they are identical"},{label:"_WinAPI_ExtCreateRegion",documentation:"Creates a region from the specified region and transformation data"},{label:"_WinAPI_FillRgn",documentation:"Fills a region by using the specified brush"},{label:"_WinAPI_FrameRgn",documentation:"Draws a border around the specified region by using the specified brush"},{label:"_WinAPI_GetPolyFillMode",documentation:"Retrieves the current polygon fill mode"},{label:"_WinAPI_GetRegionData",documentation:"Fills the specified buffer with data describing a region"},{label:"_WinAPI_GetRgnBox",documentation:"Retrieves the bounding rectangle of the specified region"},{label:"_WinAPI_InvertRgn",documentation:"Inverts the colors in the specified region"},{label:"_WinAPI_OffsetRgn",documentation:"Moves a region by the specified offsets"},{label:"_WinAPI_PaintRgn",documentation:"Paints the specified region by using the brush currently selected into the device context"},{label:"_WinAPI_PtInRegion",documentation:"Determines whether the specified point is inside the specified region"},{label:"_WinAPI_RectInRegion",documentation:"Determines whether any part of the specified rectangle is within the boundaries of a region"},{label:"_WinAPI_SetPolyFillMode",documentation:"Sets the polygon fill mode for functions that fill polygons"},{label:"_WinAPI_SetRectRgn",documentation:"Converts a region into a rectangular region with the specified coordinates "},{label:"_WinAPI_Ellipse",documentation:"Draws an ellipse"},{label:"_WinAPI_InvertRect",documentation:"Inverts a rectangle in a window by performing a logical NOT operation on the color values for each pixel"},{label:"_WinAPI_Polygon",documentation:"Draws a polygon consisting of two or more vertices connected by straight lines"},{label:"_WinAPI_Rectangle",documentation:"Draws a rectangle"},{label:"_WinAPI_RoundRect",documentation:"Draws a rectangle with rounded corners "}],t.CompletionItemKind.Function,"WinAPIGdi UDF","WinAPIGdi.au3"),Li=(0,Ce.fillCompletions)([{label:"_WinAPI_CompareString",documentation:"Compares two character strings for a specified locale"},{label:"_WinAPI_CreateNumberFormatInfo",documentation:"Creates a $tagNUMBERFMT structure with the specified number formatting information"},{label:"_WinAPI_EnumSystemGeoID",documentation:"Enumerates the geographical location identifiers (GEOID) that are available on the operating system"},{label:"_WinAPI_EnumSystemLocales",documentation:"Enumerates the locales that are either installed on or supported by an operating system"},{label:"_WinAPI_EnumUILanguages",documentation:"Enumerates the user interface languages that are available on the operating system"},{label:"_WinAPI_GetDateFormat",documentation:"Formats a date as a date string for a locale specified by the locale identifier"},{label:"_WinAPI_GetDurationFormat",documentation:"Formats a duration of time as a time string for a locale specified by identifier"},{label:"_WinAPI_GetGeoInfo",documentation:"Retrieves information about a specified geographical location"},{label:"_WinAPI_GetLocaleInfo",documentation:"Retrieves information about a locale specified by identifier"},{label:"_WinAPI_GetNumberFormat",documentation:"Formats a number string as a number string customized for a locale specified by identifier"},{label:"_WinAPI_GetSystemDefaultLangID",documentation:"Returns the language identifier for the system locale"},{label:"_WinAPI_GetSystemDefaultLCID",documentation:"Returns the locale identifier (LCID) for the system locale"},{label:"_WinAPI_GetSystemDefaultUILanguage",documentation:"Retrieves the language identifier for the system default UI language of the operating system"},{label:"_WinAPI_GetThreadLocale",documentation:"Retrieves the locale identifier of the current locale for the calling thread"},{label:"_WinAPI_GetThreadUILanguage",documentation:"Retrieves the language identifier of the first user interface language for the current thread"},{label:"_WinAPI_GetTimeFormat",documentation:"Formats time as a time string for a locale specified by identifier"},{label:"_WinAPI_GetUserDefaultLangID",documentation:"Returns the language identifier for the current user locale"},{label:"_WinAPI_GetUserDefaultLCID",documentation:"Returns the locale identifier (LCID) for the user default locale"},{label:"_WinAPI_GetUserDefaultUILanguage",documentation:"Returns the language identifier for the user UI language for the current user"},{label:"_WinAPI_GetUserGeoID",documentation:"Retrieves information about the geographical location of the user"},{label:"_WinAPI_IsValidLocale",documentation:"Determines if the specified locale is installed or supported on the operating system"},{label:"_WinAPI_SetLocaleInfo",documentation:"Sets an item of information in the user override portion of the current locale"},{label:"_WinAPI_SetThreadLocale",documentation:"Sets the current locale of the calling thread"},{label:"_WinAPI_SetThreadUILanguage",documentation:"Sets the user interface language for the current thread"},{label:"_WinAPI_SetUserGeoID",documentation:"Sets the geographical location identifier for the user "}],t.CompletionItemKind.Function,"WinAPILocale UDF","WinAPILocale.au3"),Bi=(0,Ce.fillCompletions)([{label:"_WinAPI_GetExtended",documentation:"Returns the last extended value."},{label:"_WinAPI_PlaySound",documentation:"Plays a sound specified by the given file name, resource, or system event "},{label:"_WinAPI_CharToOem",documentation:"Converts a string into the OEM-defined character set"},{label:"_WinAPI_DWordToFloat",documentation:"Converts a value of type DWORD to a value of type FLOAT"},{label:"_WinAPI_DWordToInt",documentation:"Converts a value of type DWORD to a value of type INT"},{label:"_WinAPI_FloatToDWord",documentation:"Converts a value of type FLOAT to a value of type DWORD"},{label:"_WinAPI_GetString",documentation:"Returns a string located at the specified memory address"},{label:"_WinAPI_HashData",documentation:"Hashes a memory block"},{label:"_WinAPI_HashString",documentation:"Hashes a string"},{label:"_WinAPI_HiByte",documentation:"Returns the high BYTE of a 16-bit (2 bytes) value"},{label:"_WinAPI_HiDWord",documentation:"Returns the high DWORD of a 64-bit (8 bytes) value"},{label:"_WinAPI_IntToDWord",documentation:"Converts a value of type INT to a value of type DWORD"},{label:"_WinAPI_LoByte",documentation:"Returns the low BYTE of a 16-bit (2 bytes) value"},{label:"_WinAPI_LoDWord",documentation:"Returns the low DWORD of a 64-bit (8 bytes) value"},{label:"_WinAPI_LongMid",documentation:"Extracts a number of bits from a DWORD (32-bit) value"},{label:"_WinAPI_MakeWord",documentation:"Returns a WORD (16-bit) value from two BYTE (8-bit) values"},{label:"_WinAPI_OemToChar",documentation:"Converts a string from the OEM-defined character set into either an ANSI string"},{label:"_WinAPI_ShortToWord",documentation:"Converts a value of type SHORT to a value of type WORD"},{label:"_WinAPI_StrFormatByteSize",documentation:"Converts a numeric value into a string that represents the number expressed as a size value in bytes, kilobytes, megabytes, or gigabytes"},{label:"_WinAPI_StrFormatByteSizeEx",documentation:"Converts a numeric value into a string that represents the number expressed as separated groups of digits to the left of the decimal"},{label:"_WinAPI_StrFormatKBSize",documentation:"Converts a numeric value into a string that represents the number expressed as a size value in kilobytes"},{label:"_WinAPI_StrFromTimeInterval",documentation:"Converts a time interval to a string"},{label:"_WinAPI_StrLen",documentation:"Returns the length of the specified string"},{label:"_WinAPI_SwapDWord",documentation:"Converts a ULONG from little-endian to big-endian, and vice versa"},{label:"_WinAPI_SwapQWord",documentation:"Converts a ULONGLONG from little-endian to big-endian, and vice versa"},{label:"_WinAPI_SwapWord",documentation:"Converts a USHORT from little-endian to big-endian, and vice versa"},{label:"_WinAPI_WordToShort",documentation:"Converts a value of type WORD to a value of type SHORT "},{label:"_WinAPI_ArrayToStruct",documentation:"Converts an array of strings to the structure"},{label:"_WinAPI_CopyStruct",documentation:"Creates a duplicate of a specified structure"},{label:"_WinAPI_CreateMargins",documentation:"Creates $tagMARGINS structure with specified left, right, top, and bottom retaining borders"},{label:"_WinAPI_CreatePoint",documentation:"Creates $tagPOINT structure with the x- and y-coordinates of the specified point"},{label:"_WinAPI_CreateRect",documentation:"Creates $tagRECT structure with the coordinates of the specified rectangle"},{label:"_WinAPI_CreateRectEx",documentation:"Creates $tagRECT structure with the coordinates of the specified rectangle"},{label:"_WinAPI_CreateSize",documentation:"Creates $tagSIZE structure with the width and height of the specified rectangle"},{label:"_WinAPI_StructToArray",documentation:"Converts the structure to the array of strings"},{label:"_WinAPI_UnionStruct",documentation:"Creates the structure of two structures"}],t.CompletionItemKind.Function,"WinAPIMisc UDF","WinAPIMisc.au3"),Oi=(0,Ce.fillCompletions)([{label:"_ProcessGetName",documentation:"Returns a string containing the process name that belongs to a given PID"},{label:"_ProcessGetPriority",documentation:"Get the priority of an open process"},{label:"_RunDos",documentation:"Executes a DOS command in a hidden command window "},{label:"_WinAPI_AdjustTokenPrivileges",documentation:"Enables or disables privileges in the specified access token"},{label:"_WinAPI_AssignProcessToJobObject",documentation:"Assigns a process to an existing job object"},{label:"_WinAPI_CreateJobObject",documentation:"Creates or opens a job object"},{label:"_WinAPI_CreateProcessWithToken",documentation:"Creates a new process and its primary thread in the security context of the specified token"},{label:"_WinAPI_DuplicateTokenEx",documentation:"Creates a new primary or impersonation access token that duplicates an existing token"},{label:"_WinAPI_EmptyWorkingSet",documentation:"Removes as many pages as possible from the working set of the specified process"},{label:"_WinAPI_EnumChildProcess",documentation:"Enumerates a child processes that belong to the specified process"},{label:"_WinAPI_EnumDeviceDrivers",documentation:"Retrieves the load address for each device driver in the system"},{label:"_WinAPI_EnumProcessHandles",documentation:"Enumerates a handles that belong to the specified process"},{label:"_WinAPI_EnumProcessModules",documentation:"Retrieves a handle and name for each module in the specified process"},{label:"_WinAPI_EnumProcessThreads",documentation:"Enumerates a threads that belong to the specified process"},{label:"_WinAPI_EnumProcessWindows",documentation:"Enumerates a windows that belong to the specified process"},{label:"_WinAPI_GetCurrentProcessExplicitAppUserModelID",documentation:"Retrieves the application-defined, explicit Application User Model ID for the current process"},{label:"_WinAPI_GetDeviceDriverBaseName",documentation:"Retrieves the base name of the specified device driver"},{label:"_WinAPI_GetDeviceDriverFileName",documentation:"Retrieves the path available for the specified device driver"},{label:"_WinAPI_GetExitCodeProcess",documentation:"Retrieves the termination status of the specified process"},{label:"_WinAPI_GetModuleFileNameEx",documentation:"Retrieves the fully-qualified path for the file containing the specified module"},{label:"_WinAPI_GetModuleInformation",documentation:"Retrieves information about the specified module"},{label:"_WinAPI_GetParentProcess",documentation:"Retrieves the PID of the parent process for the specified process"},{label:"_WinAPI_GetPriorityClass",documentation:"Retrieves the priority class for the specified process"},{label:"_WinAPI_GetProcessCommandLine",documentation:"Retrieves the command-line string for the specified process"},{label:"_WinAPI_GetProcessFileName",documentation:"Retrieves the fully-qualified path of the executable file for the specified process"},{label:"_WinAPI_GetProcessHandleCount",documentation:"Retrieves the number of open handles that belong to the specified process"},{label:"_WinAPI_GetProcessID",documentation:"Retrieves the process identifier of the specified process"},{label:"_WinAPI_GetProcessIoCounters",documentation:"Retrieves accounting information for all I/O operations performed by the specified process"},{label:"_WinAPI_GetProcessMemoryInfo",documentation:"Retrieves information about the memory usage of the specified process"},{label:"_WinAPI_GetProcessName",documentation:"Retrieves the name for the specified process"},{label:"_WinAPI_GetProcessTimes",documentation:"Retrieves timing information for the specified process"},{label:"_WinAPI_GetProcessUser",documentation:"Retrieves the user and domain name for the specified process"},{label:"_WinAPI_GetProcessWorkingDirectory",documentation:"Retrieves the current working directory for the specified process"},{label:"_WinAPI_GetThreadDesktop",documentation:"Retrieves a handle to the desktop assigned to the specified thread"},{label:"_WinAPI_GetThreadErrorMode",documentation:"Retrieves the error mode for the calling thread"},{label:"_WinAPI_GetWindowFileName",documentation:"Retrieves the fully-qualified path of the module associated with the specified window handle"},{label:"_WinAPI_IsElevated",documentation:"Determines whether the current process is elevated"},{label:"_WinAPI_IsProcessInJob",documentation:"Determines whether the process is running in the specified job"},{label:"_WinAPI_IsWow64Process",documentation:"Determines whether the specified process is running under WOW64"},{label:"_WinAPI_OpenJobObject",documentation:"Opens an existing job object"},{label:"_WinAPI_OpenProcessToken",documentation:"Opens the access token associated with a process"},{label:"_WinAPI_QueryInformationJobObject",documentation:"Retrieves limit and job state information from the job object"},{label:"_WinAPI_SetInformationJobObject",documentation:"Sets limits for a job object"},{label:"_WinAPI_SetPriorityClass",documentation:"Sets the priority class for the specified process"},{label:"_WinAPI_SetThreadDesktop",documentation:"Assigns the specified desktop to the calling thread"},{label:"_WinAPI_SetThreadErrorMode",documentation:"Controls whether the system will handle the specified types of serious errors or whether the calling thread will handle them"},{label:"_WinAPI_SetThreadExecutionState",documentation:"Prevents the system from entering sleep or turning off the display while the current application is running"},{label:"_WinAPI_TerminateJobObject",documentation:"Terminates all processes currently associated with the job"},{label:"_WinAPI_TerminateProcess",documentation:"Terminates the specified process and all of its threads"},{label:"_WinAPI_UserHandleGrantAccess",documentation:"Grants or denies access to a handle to a User object to a job that has a user-interface restriction"},{label:"_WinAPI_CreateMutex",documentation:"Creates or opens a named or unnamed mutex object"},{label:"_WinAPI_CreateSemaphore",documentation:"Creates or opens a named or unnamed semaphore object"},{label:"_WinAPI_OpenMutex",documentation:"Opens an existing named mutex object"},{label:"_WinAPI_OpenSemaphore",documentation:"Opens an existing named semaphore object"},{label:"_WinAPI_ReleaseMutex",documentation:"Releases ownership of the specified mutex object"},{label:"_WinAPI_ReleaseSemaphore",documentation:"Increases the count of the specified semaphore object by a specified amount"},{label:"_WinAPI_ResetEvent",documentation:"Sets the specified event object to the nonsignaled state "}],t.CompletionItemKind.Function,"WinAPIProc UD","WinAPIProc.au3"),Mi=(0,Ce.fillCompletions)([{label:"_WinAPI_AddMRUString",documentation:"Adds a string to the top of the most recently used (MRU) list"},{label:"_WinAPI_AssocGetPerceivedType",documentation:"Retrieves a file's perceived type based on its extension"},{label:"_WinAPI_AssocQueryString",documentation:"Searches for and retrieves a file or protocol association-related string from the registry"},{label:"_WinAPI_CreateMRUList",documentation:"Creates a new most recently used (MRU) list"},{label:"_WinAPI_DllInstall",documentation:"Registers OLE controls such as DLL or ActiveX Controls (OCX) files"},{label:"_WinAPI_DllUninstall",documentation:"Unregisters OLE controls such as DLL or ActiveX Controls (OCX) files"},{label:"_WinAPI_EnumMRUList",documentation:"Enumerates the contents of the most recently used (MRU) list"},{label:"_WinAPI_FreeMRUList",documentation:"Frees the handle associated with the most recently used (MRU) list and writes cached data to the registry"},{label:"_WinAPI_GetRegKeyNameByHandle",documentation:"Retrieves a name of the specified registry key"},{label:"_WinAPI_RegCloseKey",documentation:"Closes a handle to the specified registry key"},{label:"_WinAPI_RegConnectRegistry",documentation:"Establishes a connection to a predefined registry key on another computer"},{label:"_WinAPI_RegCopyTree",documentation:"Recursively copies the subkeys and values of the source subkey to the destination key"},{label:"_WinAPI_RegCopyTreeEx",documentation:"Copies the specified registry key, along with its values and subkeys, to the specified destination key"},{label:"_WinAPI_RegCreateKey",documentation:"Creates the specified registry key"},{label:"_WinAPI_RegDeleteEmptyKey",documentation:"Deletes an empty key"},{label:"_WinAPI_RegDeleteKey",documentation:"Deletes a subkey and its values"},{label:"_WinAPI_RegDeleteKeyValue",documentation:"Removes the specified value from the specified registry key and subkey"},{label:"_WinAPI_RegDeleteTree",documentation:"Deletes a subkey and all its descendants"},{label:"_WinAPI_RegDeleteTreeEx",documentation:"Deletes the subkeys and values of the specified key recursively"},{label:"_WinAPI_RegDeleteValue",documentation:"Removes a named value from the specified registry key"},{label:"_WinAPI_RegDisableReflectionKey",documentation:"Disables registry reflection for the specified key"},{label:"_WinAPI_RegDuplicateHKey",documentation:"Duplicates a registry key's handle"},{label:"_WinAPI_RegEnableReflectionKey",documentation:"Restores registry reflection for the specified disabled key"},{label:"_WinAPI_RegEnumKey",documentation:"Enumerates the subkeys of the specified open registry key"},{label:"_WinAPI_RegEnumValue",documentation:"Enumerates the values for the specified open registry key"},{label:"_WinAPI_RegFlushKey",documentation:"Writes all the attributes of the specified open registry key into the registry"},{label:"_WinAPI_RegLoadMUIString",documentation:"Loads the specified string from the specified key and subkey"},{label:"_WinAPI_RegNotifyChangeKeyValue",documentation:"Notifies the caller about changes to the attributes or contents of a specified registry key"},{label:"_WinAPI_RegOpenKey",documentation:"Opens the specified registry key"},{label:"_WinAPI_RegQueryInfoKey",documentation:"Retrieves information about the specified registry key"},{label:"_WinAPI_RegQueryLastWriteTime",documentation:"Retrieves information about the last write time to the specified registry key"},{label:"_WinAPI_RegQueryMultipleValues",documentation:"Retrieves the type and data for a list of value names associated with an open registry key"},{label:"_WinAPI_RegQueryReflectionKey",documentation:"Determines whether reflection has been disabled or enabled for the specified key"},{label:"_WinAPI_RegQueryValue",documentation:"Retrieves the type and data for the specified value name associated with an open registry key"},{label:"_WinAPI_RegRestoreKey",documentation:"Reads the registry information in a specified file and copies it over the specified key"},{label:"_WinAPI_RegSaveKey",documentation:"Saves the specified key and all of its subkeys and values to a new file, in the standard format"},{label:"_WinAPI_RegSetValue",documentation:"Sets the data and type of a specified value under a registry key"},{label:"_WinAPI_SfcIsKeyProtected",documentation:"Determines whether the specified registry key is protected "}],t.CompletionItemKind.Function,"WinAPIReg UDF","WinAPIReg.au3"),Ni=(0,Ce.fillCompletions)([{label:"_WinAPI_CreateCaret",documentation:"Creates a new shape for the system caret and assigns ownership of the caret to the specified window"},{label:"_WinAPI_DestroyCaret",documentation:"Destroys the caret's current shape, frees the caret from the window, and removes the caret from the screen"},{label:"_WinAPI_GetCaretBlinkTime",documentation:"Returns the time required to invert the caret's pixels"},{label:"_WinAPI_GetCaretPos",documentation:"Retrieves the caret's position"},{label:"_WinAPI_HideCaret",documentation:"Removes the caret from the screen"},{label:"_WinAPI_SetCaretBlinkTime",documentation:"Sets the caret blink time"},{label:"_WinAPI_SetCaretPos",documentation:"Moves the caret to the specified coordinates"},{label:"_WinAPI_ShowCaret",documentation:"Makes the caret visible on the screen at the caret's current position "},{label:"_WinAPI_ClipCursor",documentation:"Confines the cursor to a rectangular area on the screen"},{label:"_WinAPI_CopyCursor",documentation:"Creates a duplicate of a specified cursor"},{label:"_WinAPI_DestroyCursor",documentation:"Destroys a cursor and frees any memory the cursor occupied"},{label:"_WinAPI_GetClipCursor",documentation:"Retrieves the screen coordinates of the rectangular area to which the cursor is confined"},{label:"_WinAPI_GetCursor",documentation:"Retrieves a handle to the current cursor"},{label:"_WinAPI_LoadCursor",documentation:"Loads the specified cursor resource from the executable (.exe) file"},{label:"_WinAPI_LoadCursorFromFile",documentation:"Creates a cursor based on data contained in a file"},{label:"_WinAPI_SetSystemCursor",documentation:"Enables an application to customize the system cursors "},{label:"_WinAPI_AddIconTransparency",documentation:"Adds a transparency to the specified 32 bits-per-pixel icon"},{label:"_WinAPI_CreateIcon",documentation:"Creates an icon that has the specified size, colors, and bit patterns"},{label:"_WinAPI_CreateIconFromResourceEx",documentation:"Creates an icon or cursor from resource bits describing the icon"},{label:"_WinAPI_ExtractIcon",documentation:"Extracts an icon from the specified executable file, DLL, or icon file"},{label:"_WinAPI_FileIconInit",documentation:"Initializes or reinitializes the system image list"},{label:"_WinAPI_GetIconInfoEx",documentation:"Retrieves information about the specified icon or cursor"},{label:"_WinAPI_LoadIcon",documentation:"Loads the specified icon resource from the executable (.exe) file associated with an application instance"},{label:"_WinAPI_LookupIconIdFromDirectoryEx",documentation:"Searches through icon or cursor data for the icon or cursor that best fits the current display device "},{label:"_WinAPI_BeginUpdateResource",documentation:"Retrieves a handle that can be used to add, delete, or replace resources in a binary module"},{label:"_WinAPI_EndUpdateResource",documentation:"Commits or discards a changes of the resources within module"},{label:"_WinAPI_EnumResourceLanguages",documentation:"Enumerates a language-specific resources, of the specified type and name, associated with a binary module"},{label:"_WinAPI_EnumResourceNames",documentation:"Enumerates the resources of a specified type within a binary module"},{label:"_WinAPI_EnumResourceTypes",documentation:"Enumerates the resource types within a binary module"},{label:"_WinAPI_FindResource",documentation:"Determines the location of a resource with the specified type and name in the specified module"},{label:"_WinAPI_FindResourceEx",documentation:"Determines the location of the resource with the specified type, name, and language in the specified module"},{label:"_WinAPI_FreeResource",documentation:"Decrements (decreases by one) the reference count of a loaded resource"},{label:"_WinAPI_GetFileVersionInfo",documentation:"Retrieves version information for the specified file"},{label:"_WinAPI_LoadIndirectString",documentation:"Extracts the string from the specified resource when given an indirect string"},{label:"_WinAPI_LoadResource",documentation:"Loads the specified resource into global memory"},{label:"_WinAPI_LoadStringEx",documentation:"Loads a string resource for the specified language from the specified module"},{label:"_WinAPI_LockResource",documentation:"Locks the specified resource in memory"},{label:"_WinAPI_SizeOfResource",documentation:"Returns the size, in bytes, of the specified resource"},{label:"_WinAPI_UpdateResource",documentation:"Adds, deletes, or replaces a resource in a portable executable (PE) file"},{label:"_WinAPI_VerQueryRoot",documentation:"Retrieves the fixed version information from the specified version-information resource"},{label:"_WinAPI_VerQueryValue",documentation:"Retrieves the non-fixed (strings) version information from the specified version-information resource"},{label:"_WinAPI_VerQueryValueEx",documentation:"Retrieves the text information from the version-information resource of the specified binary module "}],t.CompletionItemKind.Function,"WinAPIRes UDF","WinAPIRes.au3"),Hi=(0,Ce.fillCompletions)([{label:"_WinAPI_DllGetVersion",documentation:"Retrieves a DLL-specific version information"},{label:"_WinAPI_GetAllUsersProfileDirectory",documentation:"Retrieves the path to the root of the directory that contains program data shared by all users"},{label:"_WinAPI_GetDefaultUserProfileDirectory",documentation:"Retrieves the path to the root of the default user's profile"},{label:"_WinAPI_SetCurrentProcessExplicitAppUserModelID",documentation:"Specifies a unique application-defined Application User Model ID that identifies the current process to the taskbar"},{label:"_WinAPI_ShellAddToRecentDocs",documentation:"Adds a file to the most recently and frequently item list"},{label:"_WinAPI_ShellChangeNotify",documentation:"Notifies the system of an event that an application has performed"},{label:"_WinAPI_ShellChangeNotifyDeregister",documentation:"Unregisters the client's window"},{label:"_WinAPI_ShellChangeNotifyRegister",documentation:"Registers a window to receive notifications from the file system or Shell"},{label:"_WinAPI_ShellCreateDirectory",documentation:"Creates a new file system folder"},{label:"_WinAPI_ShellEmptyRecycleBin",documentation:"Empties the Recycle Bin on the specified drive"},{label:"_WinAPI_ShellExecute",documentation:"Performs an operation on a specified file"},{label:"_WinAPI_ShellExecuteEx",documentation:"Performs an operation on a specified file"},{label:"_WinAPI_ShellExtractAssociatedIcon",documentation:"Returns a handle to the icon that associated with the specified file's"},{label:"_WinAPI_ShellExtractIcon",documentation:"Extracts the icon with the specified dimension from the specified file"},{label:"_WinAPI_ShellFileOperation",documentation:"Copies, moves, renames, or deletes a file system object"},{label:"_WinAPI_ShellFlushSFCache",documentation:"Flushes the special folder cache"},{label:"_WinAPI_ShellGetFileInfo",documentation:"Retrieves information about an object in the file system"},{label:"_WinAPI_ShellGetIconOverlayIndex",documentation:"Retrieves the index of the overlay icon in the system image list"},{label:"_WinAPI_ShellGetKnownFolderIDList",documentation:"Retrieves the path of a known folder as an ITEMIDLIST structure"},{label:"_WinAPI_ShellGetKnownFolderPath",documentation:"Retrieves the full path of a known folder identified"},{label:"_WinAPI_ShellGetLocalizedName",documentation:"Retrieves the localized name of a file in a Shell folder"},{label:"_WinAPI_ShellGetPathFromIDList",documentation:"Converts an item identifier list to a file system path"},{label:"_WinAPI_ShellGetSetFolderCustomSettings",documentation:"Sets or retrieves custom folder settings"},{label:"_WinAPI_ShellGetSettings",documentation:"Retrieves Shell state settings"},{label:"_WinAPI_ShellGetSpecialFolderLocation",documentation:"Retrieves a pointer to the ITEMIDLIST structure (PIDL) of a special folder"},{label:"_WinAPI_ShellGetSpecialFolderPath",documentation:"Retrieves the path of a special folder"},{label:"_WinAPI_ShellGetStockIconInfo",documentation:"Retrieves information about system-defined Shell icons"},{label:"_WinAPI_ShellILCreateFromPath",documentation:"Creates a pointer to an item identifier list (PIDL) from a path"},{label:"_WinAPI_ShellNotifyIcon",documentation:"Sends a message to the taskbar's status area"},{label:"_WinAPI_ShellNotifyIconGetRect",documentation:"Gets the screen coordinates of the bounding rectangle of a notification icon"},{label:"_WinAPI_ShellObjectProperties",documentation:"Invokes the Properties context menu command on a Shell object"},{label:"_WinAPI_ShellOpenFolderAndSelectItems",documentation:"Opens a Windows Explorer window with specified items in a particular folder selected"},{label:"_WinAPI_ShellQueryRecycleBin",documentation:"Retrieves the size of the Recycle Bin and the number of items in it, for a specified drive"},{label:"_WinAPI_ShellQueryUserNotificationState",documentation:"Checks the state of the computer for the current user"},{label:"_WinAPI_ShellRemoveLocalizedName",documentation:"Removes the localized name of a file in a Shell folder"},{label:"_WinAPI_ShellRestricted",documentation:"Determines whether a specified administrator policy is in effect"},{label:"_WinAPI_ShellSetKnownFolderPath",documentation:"Redirects a known folder to a new location"},{label:"_WinAPI_ShellSetLocalizedName",documentation:"Sets the localized name of a file in a Shell folder"},{label:"_WinAPI_ShellSetSettings",documentation:"Sets Shell state settings"},{label:"_WinAPI_ShellUpdateImage",documentation:"Notifies the Shell that an image in the system image list has changed "}],t.CompletionItemKind.Function,"WinAPIShellEx UDF","WinAPIShellEx.au3"),ki=(0,Ce.fillCompletions)([{label:"_WinAPI_CommandLineToArgv",documentation:"Parses a command-line string and returns an array of the command-line arguments"},{label:"_WinAPI_IsNameInExpression",documentation:"Determines whether a string matches the specified pattern"},{label:"_WinAPI_ParseURL",documentation:"Performs rudimentary parsing of a URL"},{label:"_WinAPI_ParseUserName",documentation:"Extracts the domain and user account name from a fully qualified user name"},{label:"_WinAPI_PathAddBackslash",documentation:"Adds a backslash to the end of a string to create the correct syntax for a path"},{label:"_WinAPI_PathAddExtension",documentation:"Adds a file name extension to a path string"},{label:"_WinAPI_PathAppend",documentation:"Appends one path to the end of another"},{label:"_WinAPI_PathBuildRoot",documentation:"Creates a root path from a given drive number"},{label:"_WinAPI_PathCanonicalize",documentation:"Removes elements of a file path according to special strings inserted into that path"},{label:"_WinAPI_PathCommonPrefix",documentation:"Compares two paths to determine if they share a common prefix"},{label:"_WinAPI_PathCompactPath",documentation:"Truncates a file path to fit within a given pixel width by replacing path components with ellipses"},{label:"_WinAPI_PathCompactPathEx",documentation:"Truncates a path to fit within a certain number of characters by replacing path components with ellipses"},{label:"_WinAPI_PathCreateFromUrl",documentation:"Converts a file URL to a Microsoft MS-DOS path"},{label:"_WinAPI_PathFindExtension",documentation:"Searches a path for an extension"},{label:"_WinAPI_PathFindFileName",documentation:"Searches a path for a file name"},{label:"_WinAPI_PathFindNextComponent",documentation:"Parses a path and returns the portion of that path that follows the first backslash"},{label:"_WinAPI_PathGetArgs",documentation:"Finds the command-line arguments within a given path"},{label:"_WinAPI_PathGetCharType",documentation:"Determines the type of character in relation to a path"},{label:"_WinAPI_PathGetDriveNumber",documentation:"Searches a path for a drive letter within the range of 'A' to 'Z' and returns the corresponding drive number"},{label:"_WinAPI_PathIsContentType",documentation:"Determines if a file's registered content type matches the specified content type"},{label:"_WinAPI_PathIsExe",documentation:"Determines whether a file is an executable by examining the file extension"},{label:"_WinAPI_PathIsFileSpec",documentation:"Searches a path for any path-delimiting characters"},{label:"_WinAPI_PathIsLFNFileSpec",documentation:"Determines whether a file name is in long format"},{label:"_WinAPI_PathIsRelative",documentation:"Searches a path and determines if it is relative"},{label:"_WinAPI_PathIsRoot",documentation:"Parses a path to determine if it is a directory root"},{label:"_WinAPI_PathIsSameRoot",documentation:"Compares two paths to determine if they have a common root component"},{label:"_WinAPI_PathIsSystemFolder",documentation:"Determines if an existing folder contains the attributes that make it a system folder"},{label:"_WinAPI_PathIsUNC",documentation:"Determines if the string is a valid Universal Naming Convention (UNC) for a server and share path"},{label:"_WinAPI_PathIsUNCServer",documentation:"Determines if a string is a valid Universal Naming Convention (UNC) for a server path only"},{label:"_WinAPI_PathIsUNCServerShare",documentation:"Determines if a string is a valid Universal Naming Convention (UNC) share path"},{label:"_WinAPI_PathMakeSystemFolder",documentation:"Gives an existing folder the proper attributes to become a system folder"},{label:"_WinAPI_PathMatchSpec",documentation:"Searches a string using a Microsoft MS-DOS wild card match type"},{label:"_WinAPI_PathParseIconLocation",documentation:"Parses a file location string that contains a file location and icon index"},{label:"_WinAPI_PathRelativePathTo",documentation:"Creates a relative path from one file or folder to another"},{label:"_WinAPI_PathRemoveArgs",documentation:"Removes any arguments from a given path"},{label:"_WinAPI_PathRemoveBackslash",documentation:"Removes the trailing backslash from a given path"},{label:"_WinAPI_PathRemoveExtension",documentation:"Removes the file name extension from a path, if one is present"},{label:"_WinAPI_PathRemoveFileSpec",documentation:"Removes the trailing file name and backslash from a path, if they are present"},{label:"_WinAPI_PathRenameExtension",documentation:"Replaces the extension of a file name with a new extension"},{label:"_WinAPI_PathSearchAndQualify",documentation:"Formats a path to the fully qualified path"},{label:"_WinAPI_PathSkipRoot",documentation:"Parses a path, ignoring the drive letter or Universal Naming Convention (UNC) server/share path elements"},{label:"_WinAPI_PathStripPath",documentation:"Removes the path portion of a fully qualified path and file"},{label:"_WinAPI_PathStripToRoot",documentation:"Removes all parts of the path except for the root information"},{label:"_WinAPI_PathUndecorate",documentation:"Removes the decoration from a path string"},{label:"_WinAPI_PathUnExpandEnvStrings",documentation:"Replaces folder names in a fully-qualified path with their associated environment string"},{label:"_WinAPI_PathUnmakeSystemFolder",documentation:"Removes the attributes from a folder that make it a system folder"},{label:"_WinAPI_PathUnquoteSpaces",documentation:"Removes quotes from the beginning and end of a path"},{label:"_WinAPI_PathYetAnotherMakeUniqueName",documentation:"Creates a unique filename based on an existing filename"},{label:"_WinAPI_ShellGetImageList",documentation:"Retrieves the system image list for small or large icons"},{label:"_WinAPI_UrlApplyScheme",documentation:"Determines a scheme for a specified URL string, and returns a string with an appropriate prefix"},{label:"_WinAPI_UrlCanonicalize",documentation:"Converts a URL string into canonical form"},{label:"_WinAPI_UrlCombine",documentation:"Combines the base an relative URLs in canonical form"},{label:"_WinAPI_UrlCompare",documentation:"Makes a case-sensitive comparison of two URL strings"},{label:"_WinAPI_UrlCreateFromPath",documentation:"Converts a Microsoft MS-DOS path to a canonicalized URL"},{label:"_WinAPI_UrlFixup",documentation:"Attempts to correct a URL whose protocol identifier is incorrect"},{label:"_WinAPI_UrlGetPart",documentation:"Retrieves a specified part from the URL"},{label:"_WinAPI_UrlHash",documentation:"Hashes a URL string"},{label:"_WinAPI_UrlIs",documentation:"Tests whether or not a URL is a specified type "}],t.CompletionItemKind.Function,"WinAPIShPath UDF","WinAPIShPath.au3"),Vi=(0,Ce.fillCompletions)([{label:"_MemGlobalAlloc",documentation:"Allocates the specified number of bytes from the heap"},{label:"_MemGlobalFree",documentation:"Frees the specified global memory object and invalidates its handle"},{label:"_MemGlobalLock",documentation:"Locks a global memory object and returns a pointer to the first byte of the object's memory block"},{label:"_MemGlobalSize",documentation:"Retrieves the current size of the specified global memory object"},{label:"_MemGlobalUnlock",documentation:"Decrements the lock count associated with a memory object that was allocated with GMEM_MOVEABLE"},{label:"_MemMoveMemory",documentation:"Moves memory either forward or backward, aligned or unaligned"},{label:"_MemVirtualAlloc",documentation:"Reserves or commits a region of pages in the virtual address space of the calling process"},{label:"_MemVirtualAllocEx",documentation:"Reserves a region of memory within the virtual address space of a specified process"},{label:"_MemVirtualFree",documentation:"Releases a region of pages within the virtual address space of a process"},{label:"_MemVirtualFreeEx",documentation:"Releases a region of pages within the virtual address space of a process "},{label:"_WinAPI_LockWorkStation",documentation:"Locks the workstation's display"},{label:"_WinAPI_ShutdownBlockReasonCreate",documentation:"Indicates that the system cannot be shut down and sets a reason string to be displayed to the user if system shutdown is initiated"},{label:"_WinAPI_ShutdownBlockReasonDestroy",documentation:"Indicates that the system can be shut down and frees the reason string"},{label:"_WinAPI_ShutdownBlockReasonQuery",documentation:"Retrieves the reason string set by the _WinAPI_ShutdownBlockReasonCreate() function "},{label:"_WinAPI_SetWinEventHook",documentation:"Sets an event hook function for a range of events"},{label:"_WinAPI_UnhookWinEvent",documentation:"Removes an event hook function "},{label:"_WinAPI_AddClipboardFormatListener",documentation:"Places the given window in the system-maintained clipboard format listener list"},{label:"_WinAPI_GetClipboardSequenceNumber",documentation:"Retrieves the clipboard sequence number for the current window station"},{label:"_WinAPI_RemoveClipboardFormatListener",documentation:"Removes the given window from the system-maintained clipboard format listener list "},{label:"_WinAPI_GetEffectiveClientRect",documentation:"Calculates the dimensions of a rectangle in the client area that contains all the specified controls"},{label:"_WinAPI_GetMUILanguage",documentation:"Gets the language currently in use by the common controls for a particular process"},{label:"_WinAPI_InitMUILanguage",documentation:"Enables an application to specify a language to be used with the common controls that is different from the system language"},{label:"_WinAPI_LoadIconMetric",documentation:"Loads a specified icon resource with a client-specified system metric"},{label:"_WinAPI_LoadIconWithScaleDown",documentation:"Loads an icon and scales down a larger image instead of scaling up a smaller image"},{label:"_WinAPI_MirrorIcon",documentation:"Reverses (mirrors) icons so that they are displayed correctly on a mirrored device context "},{label:"_WinAPI_GetDllDirectory",documentation:"Retrieves the application-specific portion of the search path used to locate DLLs for the application"},{label:"_WinAPI_GetModuleHandleEx",documentation:"Retrieves a module handle for the specified module"},{label:"_WinAPI_SetDllDirectory",documentation:"Adds a directory to the search path used to locate DLLs for the application "},{label:"_WinAPI_CreateBuffer",documentation:"Allocates a block of memory from the internal library heap"},{label:"_WinAPI_CreateBufferFromStruct",documentation:"Allocates a block of memory from the internal library heap and initializes it with the structure's data"},{label:"_WinAPI_CreateString",documentation:"Copies a specified string to the newly allocated memory block and returns its pointer"},{label:"_WinAPI_FreeMemory",documentation:"Frees a memory block in the internal library heap"},{label:"_WinAPI_GetMemorySize",documentation:"Retrieves the size of a memory block allocated from the internal library heap"},{label:"_WinAPI_IsMemory",documentation:"Determines whether the specified pointer points to the memory block in the internal library heap "},{label:"_WinAPI_CompressBuffer",documentation:"Compresses a buffer with specified compression format and engine type"},{label:"_WinAPI_ComputeCrc32",documentation:"Calculates the CRC32 checksum of a block of memory"},{label:"_WinAPI_DecompressBuffer",documentation:"Decompresses an entire compressed buffer"},{label:"_WinAPI_EqualMemory",documentation:"Compares two blocks of memory to determine whether the specified number of bytes are identical"},{label:"_WinAPI_FillMemory",documentation:"Fills a block of memory with the given value"},{label:"_WinAPI_GetPhysicallyInstalledSystemMemory",documentation:"Retrieves the amount of RAM that is physically installed on the computer"},{label:"_WinAPI_GetSystemDEPPolicy",documentation:"Gets the data execution prevention (DEP) policy setting for the system"},{label:"_WinAPI_IsBadCodePtr",documentation:"Determines whether the calling process has read access to the memory at the specified address"},{label:"_WinAPI_IsBadReadPtr",documentation:"Verifies that the calling process has read access to the specified range of memory"},{label:"_WinAPI_IsBadStringPtr",documentation:"Verifies that the calling process has read access to the specified range of memory"},{label:"_WinAPI_IsBadWritePtr",documentation:"Verifies that the calling process has write access to the specified range of memory"},{label:"_WinAPI_MoveMemory",documentation:"Moves a block of memory from one location to another"},{label:"_WinAPI_ZeroMemory",documentation:"Fills a block of memory with zeros "},{label:"_WinAPI_GetDefaultPrinter",documentation:"Retrieves the printer name of the default printer for the current user on the local computer"},{label:"_WinAPI_GetPwrCapabilities",documentation:"Retrieves information about the system power capabilities"},{label:"_WinAPI_GetSystemPowerStatus",documentation:"Retrieves the power status of the system"},{label:"_WinAPI_RegisterPowerSettingNotification",documentation:"Registers the application to receive power setting notifications for the specific power setting event"},{label:"_WinAPI_UnregisterPowerSettingNotification",documentation:"Unregisters the power setting notification "},{label:"_WinAPI_CloseDesktop",documentation:"Closes an open handle to a desktop object"},{label:"_WinAPI_CloseWindowStation",documentation:"Closes an open window station handle"},{label:"_WinAPI_CreateDesktop",documentation:"Creates a new desktop, associates it with the current window station of the calling process"},{label:"_WinAPI_CreateWindowStation",documentation:"Creates a window station object, associates it with the calling process, and assigns it to the current session"},{label:"_WinAPI_EnumDesktops",documentation:"Enumerates all desktops associated with the specified window station of the calling process"},{label:"_WinAPI_EnumDesktopWindows",documentation:"Enumerates all top-level windows associated with the specified desktop"},{label:"_WinAPI_EnumWindowStations",documentation:"Enumerates all window stations in the current session"},{label:"_WinAPI_GetProcessWindowStation",documentation:"Retrieves a handle to the current window station for the calling process"},{label:"_WinAPI_GetUserObjectInformation",documentation:"Retrieves information about the specified window station or desktop object"},{label:"_WinAPI_OpenDesktop",documentation:"Opens the specified desktop object"},{label:"_WinAPI_OpenInputDesktop",documentation:"Opens the desktop that receives user input"},{label:"_WinAPI_OpenWindowStation",documentation:"Opens the specified window station"},{label:"_WinAPI_SetProcessWindowStation",documentation:"Assigns the specified window station to the calling process"},{label:"_WinAPI_SetUserObjectInformation",documentation:"Sets information about the specified window station or desktop object"},{label:"_WinAPI_SwitchDesktop",documentation:"Makes the specified desktop visible and activates it "},{label:"_WinAPI_EnumPageFiles",documentation:"Retrieves information for each installed pagefile in the system"},{label:"_WinAPI_GetCurrentHwProfile",documentation:"Retrieves information about the current hardware profile for the local computer"},{label:"_WinAPI_GetHandleInformation",documentation:"Retrieves certain properties of an object handle"},{label:"_WinAPI_GetPerformanceInfo",documentation:"Retrieves the performance information"},{label:"_WinAPI_GetProcessShutdownParameters",documentation:"Retrieves the shutdown parameters for the currently calling process"},{label:"_WinAPI_GetStartupInfo",documentation:"Retrieves the contents of the STARTUPINFO structure that was specified when the calling process was created"},{label:"_WinAPI_GetSystemInfo",documentation:"Retrieves information about the current system"},{label:"_WinAPI_GetSystemTimes",documentation:"Retrieves system timing information"},{label:"_WinAPI_GetSystemWow64Directory",documentation:"Retrieves the path of the system directory used by WOW64"},{label:"_WinAPI_GetTickCount",documentation:"Retrieves the number of milliseconds that have elapsed since the system was started"},{label:"_WinAPI_GetTickCount64",documentation:"Retrieves the number of milliseconds that have elapsed since the system was started"},{label:"_WinAPI_GetVersion",documentation:"Retrieves version of the current operating system"},{label:"_WinAPI_GetVersionEx",documentation:"Retrieves information about the current operating system"},{label:"_WinAPI_IsProcessorFeaturePresent",documentation:"Determines whether the specified processor feature is supported by the current computer"},{label:"_WinAPI_QueryPerformanceCounter",documentation:"Retrieves the current value of the high-resolution performance counter"},{label:"_WinAPI_QueryPerformanceFrequency",documentation:"Retrieves the frequency of the high-resolution performance counter"},{label:"_WinAPI_SetProcessShutdownParameters",documentation:"Sets a shutdown order for a process relative to the other processes in the system "},{label:"_WinAPI_ActivateKeyboardLayout",documentation:"Sets the input locale identifier for the calling thread or the current process"},{label:"_WinAPI_DefRawInputProc",documentation:"Calls the default raw input procedure to process the raw input messages that an application does not process"},{label:"_WinAPI_EnumRawInputDevices",documentation:"Enumerates the raw input devices attached to the system"},{label:"_WinAPI_GetActiveWindow",documentation:"Retrieves the window handle to the active window attached to the calling process's message queue"},{label:"_WinAPI_GetIdleTime",documentation:"Retrieves the time that has elapsed since the last input"},{label:"_WinAPI_GetKeyboardLayout",documentation:"Retrieves the active input locale identifier for the specified window"},{label:"_WinAPI_GetKeyboardLayoutList",documentation:"Retrieves the all input locale identifiers corresponding to the current set of input locales in the system"},{label:"_WinAPI_GetKeyboardState",documentation:"Copies the status of the 256 virtual keys to the specified buffer"},{label:"_WinAPI_GetKeyboardType",documentation:"Retrieves information about the current keyboard"},{label:"_WinAPI_GetKeyNameText",documentation:"Retrieves a string that represents the name of a key"},{label:"_WinAPI_GetKeyState",documentation:"Retrieves the status of the specified virtual key"},{label:"_WinAPI_GetRawInputBuffer",documentation:"Performs a buffered read of the raw input data"},{label:"_WinAPI_GetRawInputBufferLength",documentation:"Retrieves the required buffer size to call the _WinAPI_GetRawInputBuffer() function"},{label:"_WinAPI_GetRawInputData",documentation:"Retrieves the raw input from the specified device"},{label:"_WinAPI_GetRawInputDeviceInfo",documentation:"Retrieves information about the raw input device"},{label:"_WinAPI_GetRegisteredRawInputDevices",documentation:"Retrieves the information about the raw input devices for the current application"},{label:"_WinAPI_IsLoadKBLayout",documentation:"Determines whether the specified input locale loaded into the system"},{label:"_WinAPI_IsWindowEnabled",documentation:"Determines whether the specified window is enabled for mouse and keyboard input"},{label:"_WinAPI_Keybd_Event",documentation:"Synthesizes a keystroke"},{label:"_WinAPI_LoadKeyboardLayout",documentation:"Loads a new input locale identifier into the system"},{label:"_WinAPI_MapVirtualKey",documentation:"Translates a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code"},{label:"_WinAPI_RegisterHotKey",documentation:"Defines a system-wide hot key"},{label:"_WinAPI_RegisterRawInputDevices",documentation:"Registers the devices that supply the raw input data"},{label:"_WinAPI_SetActiveWindow",documentation:"Activates the specified window"},{label:"_WinAPI_SetKeyboardLayout",documentation:"Sets an input locale identifier to the specified window"},{label:"_WinAPI_SetKeyboardState",documentation:"Copies a 256-byte array of keyboard key states into the calling process's keyboard input-state table"},{label:"_WinAPI_TrackMouseEvent",documentation:"Posts messages when the mouse pointer leaves a window or hovers over a window for a specified amount of time"},{label:"_WinAPI_UnloadKeyboardLayout",documentation:"Unloads an input locale identifier"},{label:"_WinAPI_UnregisterHotKey",documentation:"Frees a hot key previously registered by the calling thread "},{label:"_WinAPI_AdjustWindowRectEx",documentation:"Calculates the required size of the window rectangle, based on the desired size of the client rectangle"},{label:"_WinAPI_AnimateWindow",documentation:"Enables you to produce special effects when showing or hiding windows"},{label:"_WinAPI_BeginDeferWindowPos",documentation:"Allocates memory for a multiple-window-position structure"},{label:"_WinAPI_BringWindowToTop",documentation:"Brings the specified window to the top of the Z order"},{label:"_WinAPI_BroadcastSystemMessage",documentation:"Sends a message to the specified recipients"},{label:"_WinAPI_CallWindowProcW",documentation:"Passes message information to the specified window procedure"},{label:"_WinAPI_CascadeWindows",documentation:"Cascades the specified child windows of the specified parent window"},{label:"_WinAPI_ChangeWindowMessageFilterEx",documentation:"Modifies the User Interface Privilege Isolation (UIPI) message filter for a specified window"},{label:"_WinAPI_ChildWindowFromPointEx",documentation:"Determines which, if any, of the child windows belonging to the specified parent window contains the specified point"},{label:"_WinAPI_CloseWindow",documentation:"Minimizes (but does not destroy) the specified window"},{label:"_WinAPI_DeferWindowPos",documentation:"Updates the specified multiple-window-position structure for the specified window"},{label:"_WinAPI_DefWindowProcW",documentation:"Calls the default window procedure to provide default processing for any window messages"},{label:"_WinAPI_DeregisterShellHookWindow",documentation:"Unregisters a specified Shell window that is registered to receive Shell hook messages"},{label:"_WinAPI_DragAcceptFiles",documentation:"Registers whether a window accepts dropped files"},{label:"_WinAPI_DragFinish",documentation:"Releases memory that the system allocated for use in transferring file names to the application"},{label:"_WinAPI_DragQueryFileEx",documentation:"Retrieves the names of dropped files that result from a successful drag-and-drop operation"},{label:"_WinAPI_DragQueryPoint",documentation:"Retrieves the position of the mouse pointer at the time a file was dropped during a drag-and-drop operation"},{label:"_WinAPI_EndDeferWindowPos",documentation:"Simultaneously updates the position and size of one or more windows in a single screen-refreshing cycle"},{label:"_WinAPI_EnumChildWindows",documentation:"Enumerates a child windows that belong to the specified parent window"},{label:"_WinAPI_GetClassInfoEx",documentation:"Retrieves information about a window class"},{label:"_WinAPI_GetClassLongEx",documentation:"Retrieves the specified value associated with the specified window"},{label:"_WinAPI_GetGUIThreadInfo",documentation:"Retrieves information about the active window or a specified GUI thread"},{label:"_WinAPI_GetLastActivePopup",documentation:"Determines which pop-up window owned by the specified window was most recently active"},{label:"_WinAPI_GetMessageExtraInfo",documentation:"Retrieves the extra message information for the current thread"},{label:"_WinAPI_GetMonitorInfo",documentation:"Retrieves information about a display monitor"},{label:"_WinAPI_GetObjectInfoByHandle",documentation:"Retrieves information about a specified object"},{label:"_WinAPI_GetObjectNameByHandle",documentation:"Retrieves a name of the specified object"},{label:"_WinAPI_GetShellWindow",documentation:"Retrieves a handle to the Shell's desktop window"},{label:"_WinAPI_GetTopWindow",documentation:"Retrieves a handle to the child window at the top of the Z order"},{label:"_WinAPI_GetWindowDisplayAffinity",documentation:"Retrieves the current display affinity setting, from any process, for a given window"},{label:"_WinAPI_GetWindowInfo",documentation:"Retrieves information about the specified window"},{label:"_WinAPI_GetWorkArea",documentation:"Retrieves the size of the working area on the primary display monitor"},{label:"_WinAPI_IsChild",documentation:"Tests whether a window is a child window of a specified parent window"},{label:"_WinAPI_IsHungAppWindow",documentation:"Determines whether the specified application is not responding"},{label:"_WinAPI_IsIconic",documentation:"Determines whether the specified window is minimized (iconic)"},{label:"_WinAPI_IsWindowUnicode",documentation:"Determines whether the specified window is a native Unicode window"},{label:"_WinAPI_IsZoomed",documentation:"Determines whether a window is maximized"},{label:"_WinAPI_KillTimer",documentation:"Destroys the specified timer"},{label:"_WinAPI_OpenIcon",documentation:"Restores a minimized (iconic) window to its previous size and position and activates the window"},{label:"_WinAPI_RegisterClass",documentation:"Registers a window class"},{label:"_WinAPI_RegisterClassEx",documentation:"Registers a window class"},{label:"_WinAPI_RegisterShellHookWindow",documentation:"Registers a specified Shell window to receive certain messages for events or notifications"},{label:"_WinAPI_SendMessageTimeout",documentation:"Sends the specified message to one of more windows"},{label:"_WinAPI_SetClassLongEx",documentation:"Replaces the specified value into the specified window belongs"},{label:"_WinAPI_SetForegroundWindow",documentation:"Puts the specified window into the foreground and activates its"},{label:"_WinAPI_SetMessageExtraInfo",documentation:"Sets the extra message information for the current thread"},{label:"_WinAPI_SetTimer",documentation:"Creates a timer with the specified time-out value"},{label:"_WinAPI_SetWindowDisplayAffinity",documentation:"Stores the display affinity setting in kernel mode on the specified window"},{label:"_WinAPI_ShowOwnedPopups",documentation:"Shows or hides all pop-up windows owned by the specified window"},{label:"_WinAPI_SwitchToThisWindow",documentation:"Switches the focus to a specified window and bring it to the foreground"},{label:"_WinAPI_TileWindows",documentation:"Tiles the specified child windows of the specified parent window"},{label:"_WinAPI_UnregisterClass",documentation:"Unregisters a window class, freeing the memory required for the class"},{label:"_WinAPI_UpdateLayeredWindowEx",documentation:"Updates a bitmap translucency of a layered window"},{label:"_WinAPI_UpdateLayeredWindowIndirect",documentation:"Updates the position, size, shape, content, and translucency of a layered window"},{label:"_WinAPI_DefSubclassProc",documentation:"Calls the next handler in a window's subclass chain"},{label:"_WinAPI_GetWindowSubclass",documentation:"Retrieves the reference data for the specified window subclass callback"},{label:"_WinAPI_RemoveWindowSubclass",documentation:"Removes a subclass callback from a window"},{label:"_WinAPI_SetWindowSubclass",documentation:"Installs or updates a window subclass callback"}],t.CompletionItemKind.Function,"WinAPISys UDF","WinAPISys.au3");var ji="_WinAPI_",Yi=[{label:"".concat(ji,"BeginBufferedPaint"),documentation:"Begins a buffered paint operation"},{label:"".concat(ji,"BufferedPaintClear"),documentation:"Clears a specified rectangle in the buffer to ARGB = {0,0,0,0}"},{label:"".concat(ji,"BufferedPaintInit"),documentation:"Initialize buffered painting for the current thread"},{label:"_WinAPI_BufferedPaintSetAlpha",documentation:"Sets the alpha to a specified value in a given rectangle"},{label:"_WinAPI_BufferedPaintUnInit",documentation:"Closes down buffered painting for the current thread"},{label:"_WinAPI_CloseThemeData",documentation:"Closes the theme data handle"},{label:"_WinAPI_DrawThemeBackground",documentation:"Draws the border and fill defined by the visual style for the specified control part"},{label:"_WinAPI_DrawThemeEdge",documentation:"Draws one or more edges defined by the visual style of a rectangle"},{label:"_WinAPI_DrawThemeIcon",documentation:"Draws an image from an image list with the icon effect defined by the visual style"},{label:"_WinAPI_DrawThemeParentBackground",documentation:"Draws the part of a parent control that is covered by a partially-transparent or alpha-blended child control"},{label:"_WinAPI_DrawThemeText",documentation:"Draws text using the color and font defined by the visual style"},{label:"_WinAPI_DrawThemeTextEx",documentation:"Draws text using the color and font defined by the visual style"},{label:"_WinAPI_EndBufferedPaint",documentation:"Completes a buffered paint operation and frees the associated buffered paint handle"},{label:"_WinAPI_GetBufferedPaintBits",documentation:"Retrieves a pointer to the buffer bitmap if the buffer is a device-independent bitmap (DIB)"},{label:"_WinAPI_GetBufferedPaintDC",documentation:"Gets the paint device context (DC)"},{label:"_WinAPI_GetBufferedPaintTargetDC",documentation:"Retrieves the target device context (DC)"},{label:"_WinAPI_GetBufferedPaintTargetRect",documentation:"Retrieves the target rectangle"},{label:"_WinAPI_GetCurrentThemeName",documentation:"Retrieves the name of the current visual styles, color scheme name, and size name"},{label:"_WinAPI_GetThemeAppProperties",documentation:"Retrieves the property flags that control how visual styles are applied in the current application"},{label:"_WinAPI_GetThemeBackgroundContentRect",documentation:"Retrieves the size of the content area for the background defined by the visual style"},{label:"_WinAPI_GetThemeBackgroundExtent",documentation:"Calculates the size and location of the background, defined by the visual style, given the content area"},{label:"_WinAPI_GetThemeBackgroundRegion",documentation:"Computes the region for a regular or partially transparent background that is bounded by a specified rectangle"},{label:"_WinAPI_GetThemeBitmap",documentation:"Retrieves the bitmap associated with a particular theme, part, state, and property"},{label:"_WinAPI_GetThemeBool",documentation:"Retrieves the value of a BOOL property from the SysMetrics section of theme data"},{label:"_WinAPI_GetThemeColor",documentation:"Retrieves the value of a color property"},{label:"_WinAPI_GetThemeDocumentationProperty",documentation:"Retrieves the value for a theme property from the documentation section of the specified theme file"},{label:"_WinAPI_GetThemeEnumValue",documentation:"Retrieves the value of an enumerated type property"},{label:"_WinAPI_GetThemeFilename",documentation:"Retrieves the value of a filename property"},{label:"_WinAPI_GetThemeFont",documentation:"Retrieves the value of a font property"},{label:"_WinAPI_GetThemeInt",documentation:"Retrieves the value of an INT property"},{label:"_WinAPI_GetThemeMargins",documentation:"Retrieves the value of a margins property"},{label:"_WinAPI_GetThemeMetric",documentation:"Retrieves the value of a metric property"},{label:"_WinAPI_GetThemePartSize",documentation:"Calculates the original size of the part defined by a visual style"},{label:"_WinAPI_GetThemePosition",documentation:"Retrieves the value of a position property"},{label:"_WinAPI_GetThemePropertyOrigin",documentation:"Retrieves the location of the theme property definition for a property"},{label:"_WinAPI_GetThemeRect",documentation:"Retrieves the value of a RECT property"},{label:"_WinAPI_GetThemeString",documentation:"Retrieves the value of a string property"},{label:"_WinAPI_GetThemeSysBool",documentation:"Retrieves the Boolean value of a system metric"},{label:"_WinAPI_GetThemeSysColor",documentation:"Retrieves the value of a system color"},{label:"_WinAPI_GetThemeSysColorBrush",documentation:"Retrieves a system color brush"},{label:"_WinAPI_GetThemeSysFont",documentation:"Retrieves the font information of a system font"},{label:"_WinAPI_GetThemeSysInt",documentation:"Retrieves the value of a system INT"},{label:"_WinAPI_GetThemeSysSize",documentation:"Retrieves the value of a system size metric from theme data"},{label:"_WinAPI_GetThemeSysString",documentation:"Retrieves the value of a system string"},{label:"_WinAPI_GetThemeTextExtent",documentation:"Calculates the size and location of the specified text when rendered in the visual style font"},{label:"_WinAPI_GetThemeTextMetrics",documentation:"Retrieves information about the font specified by a visual style for a particular part"},{label:"_WinAPI_GetThemeTransitionDuration",documentation:"Gets the duration for the specified transition"},{label:"_WinAPI_GetWindowTheme",documentation:"Retrieves a theme handle to a window that has visual styles applied"},{label:"_WinAPI_IsThemeActive",documentation:"Tests if a visual style for the current application is active"},{label:"_WinAPI_IsThemeBackgroundPartiallyTransparent",documentation:"Retrieves whether the background specified by the visual style has transparent pieces or alpha-blended pieces"},{label:"_WinAPI_IsThemePartDefined",documentation:"Retrieves whether a visual style has defined parameters for the specified part"},{label:"_WinAPI_OpenThemeData",documentation:"Opens the theme data for a window and its associated class"},{label:"_WinAPI_SetThemeAppProperties",documentation:"Sets the flags that determine how visual styles are implemented in the calling application"},{label:"_WinAPI_SetWindowTheme",documentation:"Causes a window to use a different set of visual style information than its class normally uses "}];const Xi=(0,Ce.fillCompletions)(Yi,t.CompletionItemKind.Function,"WinAPITheme UDF","WinAPITheme.au3");function zi(e){return function(e){if(Array.isArray(e))return Ki(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return Ki(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?Ki(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ki(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}const qi=[].concat(zi(rt),zi(lt),zi(On),zi(st),zi(dt),zi(ct),zi(It),zi(qt),zi(ma),zi(Ta),zi(Aa),zi(uo),zi(mo),zi(po),zi(Io),zi($o),zi(go),zi(Po),zi(Eo),zi(No),zi(Ho),zi(Qo),zi(hn),zi(un),zi(mn),zi(En),zi(xn),zi(vn),zi(Un),zi(Ln),zi(Bn),zi(Mn),zi(Nn),zi(Hn),zi(kn),zi(Vn),zi(jn),zi(Yn),zi(Xn),zi(zn),zi(Kn),zi(qn),zi(Qn),zi(Jn),zi(Zn),zi(ei),zi(ti),zi(ai),zi(oi),zi(ni),zi(ii),zi(ri),zi(li),zi(si),zi(di),zi(ci),zi(hi),zi(ui),zi(mi),zi(pi),zi(bi),zi(_i),zi(fi),zi(Ii),zi($i),zi(gi),zi(Ci),zi(Si),zi(Ti),zi(Gi),zi(Pi),zi(wi),zi(yi),zi(Ai),zi(Di),zi(Wi),zi(Ei),zi(Ri),zi(xi),zi(vi),zi(Ui),zi(Fi),zi(Li),zi(Bi),zi(Oi),zi(Mi),zi(Ni),zi(Hi),zi(ki),zi(Vi),zi(Xi),zi(We),zi(ve),zi(Be),zi(Ne),zi(ke),zi(je),zi(Xe)),Qi=["APIComConstants","APIConstants","APIDiagConstants","APIDlgConstants","APIErrorsConstants","APIFilesConstants","APIGdiConstants","APILocaleConstants","APIMiscConstants","APIProcConstants","APIRegConstants","APIResConstants","APIShellExConstants","APIShPathConstants","APISysConstants","APIThemeConstants","Array","AutoItConstants","AVIConstants","BorderConstants","ButtonConstants","Clipboard","Color","ColorConstants","ComboConstants","Constants","Crypt","Date","DateTimeConstants","Debug","DirConstants","EditConstants","EventLog","Excel","ExcelConstants","File","FileConstants","FontConstants","FrameConstants","FTPEx","GDIPlus","GDIPlusConstants","GuiAVI","GuiButton","GuiComboBox","GuiComboBoxEx","GUIConstants","GUIConstantsEx","GuiDateTimePicker","GuiEdit","GuiHeader","GuiImageList","GuiIPAddress","GuiListBox","GuiListView","GuiMenu","GuiMonthCal","GuiReBar","GuiRichEdit","GuiScrollBars","GuiSlider","GuiStatusBar","GuiTab","GuiToolbar","GuiToolTip","GuiTreeView","HeaderConstants","IE","ImageListConstants","Inet","InetConstants","IPAddressConstants","ListBoxConstants","ListViewConstants","Math","MathConstants","Memory","MemoryConstants","MenuConstants","Misc","MsgBoxConstants","NamedPipes","NetShare","NTSTATUSConstants","Process","ProcessConstants","ProgressConstants","RebarConstants","RichEditConstants","ScreenCapture","ScrollBarConstants","ScrollBarsConstants","Security","SecurityConstants","SendMessage","SliderConstants","Sound","SQLite","SQLite.dll","StaticConstants","StatusBarConstants","String","StringConstants","StructureConstants","TabConstants","Timers","ToolbarConstants","ToolTipConstants","TrayConstants","TreeViewConstants","UDFGlobalID","UpDownConstants","Visa","WinAPI","WinAPICom","WinAPIConstants","WinAPIDiag","WinAPIDlg","WinAPIError","WinAPIEx","WinAPIFiles","WinAPIGdi","WinAPIInternals","WinAPIlangConstants","WinAPILocale","WinAPIMisc","WinAPIProc","WinAPIReg","WinAPIRes","WinAPIShellEx","WinAPIShPath","WinAPISys","WinAPIsysinfoConstants","WinAPITheme","WinAPIvkeysConstants","WindowsConstants","WinNet","Word","WordConstants"];function Ji(e){return function(e){if(Array.isArray(e))return er(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Zi(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Zi(e,t){if(e){if("string"==typeof e)return er(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?er(e,t):void 0}}function er(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}var tr=[],ar=[],or=Ce.functionPattern.setFlags("gim"),nr=t.workspace.getConfiguration("autoit").get("enableParenTriggerForFunctions");t.workspace.onDidChangeConfiguration((function(e){e.affectsConfiguration("autoit.enableParenTriggerForFunctions")&&(nr=t.workspace.getConfiguration("autoit").get("enableParenTriggerForFunctions"))}));var ir=function(e,a){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Document Function",n=new t.CompletionItem(a,e);return n.detail=e===t.CompletionItemKind.Variable?"Variable":o,e===t.CompletionItemKind.Function&&nr&&(n.commitCharacters=["("]),n},rr=t.languages.registerCompletionItemProvider(Ce.AUTOIT_MODE,{provideCompletionItems:function(e,a){var o=e.getText(),n=e.getWordRangeAtPosition(a),i=n?e.getText(n)[0]:"",r=[];n||(n=new t.Range(a,a));var l=e.lineAt(a.line);if(";"===l.text.charAt(l.firstNonWhitespaceCharacterIndex)||Ce.functionPattern.test(l.text))return null;for(var s,d,c=function(e,a){var o,n,i,r=[],l={};if("$"===a)for(var s=Ce.variablePattern.exec(e);s;)void 0===(o=(n=s,i=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o,n,i,r,l=[],s=!0,d=!1;try{if(i=(a=a.call(e)).next,0===t){if(Object(a)!==a)return;s=!1}else for(;!(s=(o=i.call(a)).done)&&(l.push(o.value),l.length!==t);s=!0);}catch(e){d=!0,n=e}finally{try{if(!s&&null!=a.return&&(r=a.return(),Object(r)!==r))return}finally{if(d)throw n}}return l}}(n,i)||Zi(n,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[1])||o in l||(l[o]=!0,r.push(ir(t.CompletionItemKind.Variable,o))),s=Ce.variablePattern.exec(e);return r}(o,i),h=function(e){for(var a=[],o={},n=or.exec(e);n;){var i=n[1];i in o||(o[i]=!0,a.push(ir(t.CompletionItemKind.Function,i))),n=or.exec(e)}return a}(o),u=[].concat(Ji(c),Ji(h)),m=Ce.includePattern.exec(o);m;)r.push(m[1]),m=Ce.includePattern.exec(o);if(d=tr,(s=r).length!==d.length||!s.some((function(e){return d.indexOf(e)<=0}))){ar=[];var p=[];r.forEach((function(a){(p=(0,Ce.getIncludeData)(a,e))&&Object.keys(p).forEach((function(e){ar.push(ir(t.CompletionItemKind.Function,e,"Function from ".concat(a)))}))})),tr=r}var b=function(e){for(var t=[],a=Ce.libraryIncludePattern.exec(e);a;){var o=a[1].replace(".au3","");-1===Qi.indexOf(o)&&t.push(a[1]),a=Ce.libraryIncludePattern.exec(e)}return t}(o),_=function(e,a){return e.flatMap((function(e){var t=(0,Ce.findFilepath)(e);return t?Object.keys((0,Ce.getIncludeData)(t,a)).map((function(t){return{file:e,newFunc:t}})):[]})).map((function(e){var a=e.file,o=e.newFunc;return ir(t.CompletionItemKind.Function,o,"Function from ".concat(a))}))}(b,e);return[].concat(Ji(qi),Ji(u),Ji(ar),Ji(_))}},".","$","#");const lr=rr;function sr(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}var dr=t.workspace.getConfiguration("autoit"),cr=/^\s*#(?:ce|comments-end)/,hr=/^\s*#(?:cs|comments-start)/,ur=/\s_\b\s*(;.*)?\s*/,mr=function(e){var a=e.text,o=e.processedSymbols,n=e.doc,i=e.lineNum,r=e.result,l=e.scriptText,s=a.match(Ce.functionPattern);if(s&&!o.has(s[1])){var d=function(e,a,o,n,i){var r=new RegExp("[\t ]*(?:volatile[\t ]+)?Func[\t ]+\\b".concat(e,"+\\b.*?EndFunc"),"si"),l=a.offsetAt(a.lineAt(n).range.start);r.lastIndex=l;var s=r.exec(i);if(!s)return null;var d=s.index+s[0].length,c=a.positionAt(s.index),h=a.positionAt(d),u=new t.Range(c,h);return new t.SymbolInformation(e,t.SymbolKind.Function,"",new t.Location(a.uri,u))}(s[1],n,0,i,l);d&&(r.push(d),o.add(s[1]))}},pr=function(e){if(dr.showRegionsInGoToSymbol){var a=e.regionName,o=e.found,n=e.doc,i=e.result;if(a&&!o.has(a[0])){var r=function(e,a,o){var n=new RegExp("#Region\\s[- ]{0,}(".concat(e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),")"),"s").exec(o);if(!n)return null;var i=function(e,t){var a,o=/#(Region|EndRegion)(?:\s|$)/g,n=1;for(o.lastIndex=t,a=o.exec(e);null!==a;a=o.exec(e))if("Region"===a[1])n++;else if(0==--n)return a.index;return e.length}(o,n.index+n[0].length),r=a.positionAt(n.index),l=a.positionAt(i+10);return new t.SymbolInformation(n[1],t.SymbolKind.Namespace,"",new t.Location(a.uri,new t.Range(r,l)))}(a[1],n,n.getText());r&&(i.push(r),o.add(a[0]))}}},br=["'",'"',";"];function _r(e,a){return e.find((function(e){return e.location.range.contains(a.range)&&e.kind===t.SymbolKind.Function}))||{}}var fr=function(e,t,a){return!!e.find((function(e){return e.name===t&&e.containerName===a.name}))},Ir=/^\s*?(Local|Global)?\s*?(Const|Enum)/;function $r(e){return Ce.AI_CONSTANTS.includes(e)||br.includes(e.charAt(0))}function gr(e,a,o,n,i,r){e.push(function(e){var a=e.variable,o=e.variableKind,n=e.doc,i=e.line,r=e.container,l=void 0===r?null:r;return new t.SymbolInformation(a,o,l,new t.Location(n.uri,i.range))}({variable:a,variableKind:o,doc:n,line:i,container:r.name}))}function Cr(e){var a=e.text,o=e.result,n=e.line,i=e.found,r=e.doc,l=e.inContinuation,s=e.variableKind;if(!dr.showVariablesInGoToSymbol)return{inContinuation:l,variableKind:s};var d=a.match(Ce.variablePattern);if(!d)return{inContinuation:l,variableKind:s};s=l?s:function(e){switch((a=e.match(Ir)||[],o=3,function(e){if(Array.isArray(e))return e}(a)||function(e,t){var a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o,n,i,r,l=[],s=!0,d=!1;try{if(i=(a=a.call(e)).next,0===t){if(Object(a)!==a)return;s=!1}else for(;!(s=(o=i.call(a)).done)&&(l.push(o.value),l.length!==t);s=!0);}catch(e){d=!0,n=e}finally{try{if(!s&&null!=a.return&&(r=a.return(),Object(r)!==r))return}finally{if(d)throw n}}return l}}(a,o)||function(e,t){if(e){if("string"==typeof e)return sr(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?sr(e,t):void 0}}(a,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[2]){case"Const":return t.SymbolKind.Constant;case"Enum":return t.SymbolKind.Enum;default:return t.SymbolKind.Variable}var a,o}(a),l=ur.test(a);for(var c=0;c<d.length;c+=1){var h=d[c];if(!$r(h)){var u=_r(o,n);fr(o,h,u)||(gr(o,h,s,r,n,u),i.add(h))}}return{inContinuation:l,variableKind:s}}function Sr(e){for(var t,a=[],o=new Set,n=!1,i=!1,r=e.getText(),l=Math.min(e.lineCount,1e4),s=0;s<l;s+=1){var d=e.lineAt(s),c=d.text,h=c.match(Ce.regionPattern);if((!(0,Ce.isSkippableLine)(d)||h)&&!n){mr({text:c,processedSymbols:o,doc:e,lineNum:s,result:a,scriptText:r});var u=Cr({inContinuation:i,text:c,found:o,doc:e,result:a,line:d,variableKind:t});i=u.inContinuation,t=u.variableKind,pr({regionName:h,found:o,doc:e,result:a})}cr.test(c)&&(n=!1),hr.test(c)&&(n=!0)}return a}const Tr=t.languages.registerDocumentSymbolProvider(Ce.AUTOIT_MODE,{provideDocumentSymbols:Sr}),Gr=JSON.parse('{"Abs":{"documentation":"Calculates the absolute value of a number.","label":"Abs(expression)","params":[{"label":"expression","documentation":"Any valid numeric expression."}]},"ACos":{"documentation":"Calculates the arcCosine of a number.","label":"ACos(expression)","params":[{"label":"expression","documentation":"Any value between -1 and 1 inclusive."}]},"AdlibRegister":{"documentation":"Registers an Adlib function.","label":"AdlibRegister ( \\"function\\" [, time = 250] )","params":[{"label":"\\"function\\"","documentation":"The name of the adlib function to be registered."},{"label":"time","documentation":"**[optional]** how often in milliseconds to call the function. Default is 250 ms."}]},"AdlibUnRegister":{"documentation":"Registers an Adlib function.","label":"AdlibUnRegister ( [\\"function\\"] )","params":[{"label":"function","documentation":"**[optional]** The name of the adlib function to be Unregistered."}]},"Asc":{"documentation":"Returns the unicode code of a character.","label":"Asc ( \\"char\\" )","params":[{"label":"char","documentation":"The character to get the code for. If a string is used, the code for the first character is given."}]},"AscW":{"documentation":"Returns the ASCII code of a character.","label":"AscW ( \\"char\\" )","params":[{"label":"char","documentation":"The character to get the code for. If a string is used, the code for the first character is given."}]},"ASin":{"label":"ASin(expression)","documentation":"Calculates the arcsine of a number.","params":[{"label":"expression","documentation":"Any value between -1 and 1 (inclusive)."}]},"Assign":{"label":"Assign ( \\"varname\\", \\"data\\" [, flag = 0] )","documentation":"Assigns a variable by name with the data.","params":[{"label":"varname","documentation":"The name of the variable you wish to assign. Cannot be an array element and must only contain letters, digits and underscore characters (as per normal variable naming conventions)."},{"label":"data","documentation":"The data you wish to assign to the variable."},{"label":"flag","documentation":"**[optional]** controls the way that variables are assigned  (add required options together):  \\n&emsp;`$ASSIGN_CREATE` (`0`) = (default) Create variable if required  \\n&emsp;`$ASSIGN_FORCELOCAL` (`1`) = Force creation in local scope  \\n&emsp;`$ASSIGN_FORCEGLOBAL` (`2`) = Force creation in global scope  \\n&emsp;`$ASSIGN_EXISTFAIL` (`4`) = Fail if variable does not already exist  \\n\\nConstants are defined in AutoItConstants.au3"}]},"ATan":{"label":"ATan(expression)","documentation":"Calculates the arctangent of a number.","params":[{"label":"expression","documentation":"Any valid numeric expression."}]},"AutoItSetOption":{"label":"AutoItSetOption ( \\"option\\" [, param] )","documentation":"Changes the operation of various AutoIt functions/parameters.","params":[{"label":"option","documentation":"The option to change."},{"label":"param","documentation":"**[optional]** The value to assign to the option. The type and meaning vary by option. If the param is not provided, then the function just returns the value already assigned to the option. The keyword Default can be used for the parameter to reset the option to its default value."}]},"AutoItWinSetTitle":{"label":"AutoItWinSetTitle ( \\"newtitle\\" )","documentation":"Changes the title of the AutoIt window.","params":[{"label":"newtitle","documentation":"The new title to give to the window."}]},"Beep":{"label":"Beep ( [Frequency = 500 [, Duration = 1000]] )","documentation":"Plays back a beep to the user.","params":[{"label":"Frequency","documentation":"**[optional]** The frequency of the beep in hertz. Can be anywhere from 37 through 32,767 (0x25 through 0x7FFF). Default is 500 Hz."},{"label":"Duration","documentation":"**[optional]** The length of the beep in milliseconds. Default = 1000 ms."}]},"Binary":{"label":"Binary ( expression )","documentation":"Returns the binary representation of an expression.","params":[{"label":"expression","documentation":"An expression to convert into binary/byte data."}]},"BinaryLen":{"label":"BinaryLen ( binary )","documentation":"Returns the number of bytes in a binary variant.","params":[{"label":"binary","documentation":"The binary data to evaluate."}]},"BinaryMid":{"label":"BinaryMid ( binary, start [, count] )","documentation":"Returns the number of bytes in a binary variant.","params":[{"label":"binary","documentation":"The binary data to evaluate."},{"label":"start","documentation":"The byte position to start. (1 = first byte)"},{"label":"count","documentation":"**[optional]** The number of bytes to extract. By default the entire remainder of the binary data."}]},"BinaryToString":{"label":"BinaryToString ( expression [, flag = 1] )","documentation":"Converts a binary variant into a string.","params":[{"label":"expression","documentation":"An expression to convert into a string."},{"label":"flag","documentation":"**[optional]** Changes how the binary data is converted:  \\n&emsp;`$SB_ANSI` (`1`) = binary data is ANSI (default)  \\n&emsp;`$SB_UTF16LE` (`2`) = binary data is UTF16 Little Endian  \\n&emsp;`$SB_UTF16BE` (`3`) = binary data is UTF16 Big Endian  \\n&emsp;`$SB_UTF8` (`4`) = binary data is UTF8  \\n\\nConstants are defined in StringConstants.au3."}]},"BitAND":{"label":"BitAND (value1, value2 [, value n])","documentation":"Performs a bitwise AND operation.","params":[{"label":"value1","documentation":"The first number."},{"label":"value2","documentation":"The second number."},{"label":"value n","documentation":"**[optional]** The nth number - up to 255 values can be specified."}]},"BitNOT":{"label":"BitNOT ( value )","documentation":"Performs a bitwise NOT operation.","params":[{"label":"value","documentation":"The number to operate on."}]},"BitOR":{"label":"BitOR ( value1, value2 [, value n] )","documentation":"Performs a bitwise OR operation.","params":[{"label":"value1","documentation":"The first number."},{"label":"value2","documentation":"The second number."},{"label":"value n","documentation":"**[optional]** The nth number - up to 255 values can be specified."}]},"BitRotate":{"label":"BitRotate ( value [, shift = 1 [, size = \\"W\\"]] )","documentation":"Performs a bitwise OR operation.","params":[{"label":"value","documentation":"The number to be operated on."},{"label":"shift","documentation":"**[optional]** Number of bits to rotate to the left (negative numbers rotate right). If not given, the default is 1."},{"label":"size","documentation":"**[optional]** A string that determines the rotation size, the default is (16 bits). "}]},"BitShift":{"label":"BitShift ( value, shift )","documentation":"Performs a bit shifting operation.","params":[{"label":"value","documentation":"The number to be shifted."},{"label":"shift","documentation":"Number of bits to shift to the right (negative numbers shift left)."}]},"BitXOR":{"label":"BitXOR ( value1, value2 [, value n] )","documentation":"Performs a bitwise exclusive OR (XOR) operation.","params":[{"label":"value1","documentation":"The first number."},{"label":"value2","documentation":"The second number."},{"label":"value n","documentation":"**[optional]** The nth number - up to 255 values can be specified."}]},"BlockInput":{"label":"BlockInput ( flag )","documentation":"Disable/enable the mouse and keyboard.","params":[{"label":"flag","documentation":"&emsp;`$BI_DISABLE` (`1`) = Disable user input  \\n&emsp;`$BI_ENABLE` (`0`) = Enable user input"}]},"Break":{"label":"Break ( mode )","documentation:":"Enables or disables the users\' ability to exit a script from the tray icon menu.","params":[{"label":"mode","documentation":"Sets the script break mode:  \\n&emsp;`$BREAK_ENABLE` (`1`) = Break is enabled (user can quit) (default)  \\n&emsp;`$BREAK_DISABLE` (`0`) = Break is disabled (user cannot quit)  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"Call":{"label":"Call ( \\"function\\" [, paramN] )","documentation":"Calls a user-defined or built-in function contained in first parameter.","params":[{"label":"function","documentation":"The name of function or function to call."},{"label":"paramN","documentation":"Argument(s) that will be passed to the function being invoked."}]},"CDTray":{"label":"CDTray ( \\"drive\\", \\"status\\" )","documentation":"Opens or closes the CD tray.","params":[{"label":"drive","documentation":"The drive letter of the CD tray to control, in the format **D:**, **E:**, etc."},{"label":"status","documentation":"Specifies if you want the CD tray to be open or closed  \\n&emsp;`$CDTRAY_OPEN` (\\"open\\") - to be open  \\n&emsp;`$CDTRAY_CLOSED` (\\"closed\\") - to be closed on cd tray (not laptop-style)  \\n\\nConstants are defined in AutoItConstants.au3"}]},"Ceiling":{"label":"Ceiling ( expression )","documentation":"Returns a number rounded up to the next integer.","params":[{"label":"expression","documentation":"Any valid numeric expression."}]},"Chr":{"label":"Chr ( ASCIIcode )","documentation":"Returns a character corresponding to an ASCII code.","params":[{"label":"ASCIIcode","documentation":"An ASCII code in the range 0-255 (e.g., 65 returns the capital letter A)."}]},"ChrW":{"label":"ChrW ( UNICODEcode  )","documentation":"Returns a character corresponding to a unicode code.","params":[{"label":"UNICODEcode","documentation":"A unicode code in the range 0-65535 (e.g., 65 returns the capital letter A)."}]},"ClipPut":{"label":"ClipPut( \\"value\\" )","documentation":"Writes text to the clipboard.","params":[{"label":"\\"value\\"","documentation":"The text to write to the clipboard."}]},"ConsoleRead":{"label":"ConsoleRead ( [peek = False [, binary = False]] )","documentation":"Read from the STDIN stream of the AutoIt script process.","params":[{"label":"peek","documentation":"**[optional]** If True the function does not remove the read characters from the stream."},{"label":"binary","documentation":"**[optional]** If True the function reads the data as binary instead of text (default is text)."}]},"ConsoleWrite":{"label":"ConsoleWrite ( \\"data\\" )","documentation":"Writes data to the STDOUT stream. Some text editors can read this stream as can other programs which may be expecting data on this stream.","params":[{"label":"data","documentation":"The data you wish to output. This may either be text or binary."}]},"ConsoleWriteError":{"label":"ConsoleWriteError ( \\"data\\" )","documentation":"Writes data to the STDERR stream. Some text editors can read this stream as can other programs which may be expecting data on this stream.","params":[{"label":"data","documentation":"The data you wish to output. This may either be text or binary."}]},"ControlClick":{"label":"ControlClick ( \\"title\\", \\"text\\", controlID [, button = \\"left\\" [, clicks = 1 [, x [, y]]]] )","documentation":"Sends a mouse click command to a given control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."},{"label":"button","documentation":"**[optional]** The button to click, \\"left\\", \\"right\\", \\"middle\\", \\"main\\", \\"menu\\", \\"primary\\", \\"secondary\\". Default is the left button."},{"label":"clicks","documentation":"**[optional]** The number of times to click the mouse. Default is 1."},{"label":"x","documentation":"**[optional]** The x position to click within the control. Default is center."},{"label":"y","documentation":"**[optional]** The y position to click within the control. Default is center."}]},"ControlCommand":{"label":"ControlCommand ( \\"title\\", \\"text\\", controlID, \\"command\\" [, \\"option\\"] )","documentation":"Sends a command to a control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."},{"label":"command","documentation":"The command to send to the control."},{"label":"option","documentation":"**[optional]** Additional parameter required by some commands."}]},"ControlDisable":{"label":"ControlDisable ( \\"title\\", \\"text\\", controlID )","documentation":"Disables or \\"grays-out\\" a control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."}]},"ControlEnable":{"label":"ControlEnable ( \\"title\\", \\"text\\", controlID )","documentation":"Enables a \\"grayed-out\\" control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."}]},"ControlFocus":{"label":"ControlFocus ( \\"title\\", \\"text\\", controlID )","documentation":"Sets input focus to a given control on a window.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."}]},"ControlGetFocus":{"label":"ControlGetFocus ( \\"title\\" [, \\"text\\"] )","documentation":"Returns the ControlRef# of the control that has keyboard focus within a specified window.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"**[optional]** The text of the window to access."}]},"ControlGetHandle":{"label":"ControlGetHandle ( \\"title\\", \\"text\\", controlID )","documentation":"Retrieves the internal handle of a control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."}]},"ControlGetPos":{"label":"ControlGetPos ( \\"title\\", \\"text\\", controlID )","documentation":"Retrieves the position and size of a control relative to its window.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."}]},"ControlGetText":{"label":"ControlGetText ( \\"title\\", \\"text\\", controlID )","documentation":"Retrieves text from a control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."}]},"ControlHide":{"label":"ControlHide ( \\"title\\", \\"text\\", controlID )","documentation":"Hides a control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."}]},"ControlListView":{"label":"ControlListView ( \\"title\\", \\"text\\", controlID, \\"command\\" [, option1 [, option2]] )","documentation":"Sends a command to a ListView32 control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."},{"label":"command","documentation":"The command to send to the control."},{"label":"option1","documentation":"**[optional]** Additional parameter required by some commands."},{"label":"option2","documentation":"**[optional]** Additional parameter required by some commands."}]},"ControlMove":{"label":"ControlMove ( \\"title\\", \\"text\\", controlID, x, y [, width [, height]] )","documentation":"Moves a control within a window.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."},{"label":"x","documentation":"X coordinate to move to relative to the window client area."},{"label":"y","documentation":"Y coordinate to move to relative to the window client area."},{"label":"width","documentation":"**[optional]** New width of the window."},{"label":"height","documentation":"**[optional]** New height of the window."}]},"ControlSend":{"label":"ControlSend ( \\"title\\", \\"text\\", controlID, \\"string\\" [, flag = 0] )","documentation":"Sends a string of characters to a control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."},{"label":"string","documentation":"String of characters to send to the control."},{"label":"flag","documentation":"**[optional]** Changes how \\"keys\\" is processed:  \\n&emsp;`$SEND_DEFAULT` (`0`) = Text contains special characters like + and ! to indicate SHIFT and ALT key-presses (default).  \\n&emsp;`SEND_RAW` (`1`) = keys are sent raw.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"ControlSetText":{"label":"ControlSetText  ( \\"title\\", \\"text\\", controlID, \\"new text\\" [, flag = 0] )","documentation":"Sets text of a control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."},{"label":"new text","documentation":"The new text to be set into the control."},{"label":"flag","documentation":"**[optional]** when different from 0 (default) will force the target window to be redrawn."}]},"ControlShow":{"label":"ControlShow ( \\"title\\", \\"text\\", controlID )","documentation":"Shows a control that was hidden.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."}]},"ControlTreeView":{"label":"ControlTreeView ( \\"title\\", \\"text\\", controlID, \\"command\\" [, option1] )","documentation":"Sends a command to a TreeView32 control.","params":[{"label":"title","documentation":"The title/hWnd/class of the window to access."},{"label":"text","documentation":"The text of the window to access."},{"label":"controlID","documentation":"The control to interact with."},{"label":"command","documentation":"The command to send to the control."},{"label":"option1","documentation":"**[optional]** Additional parameter required by some commands."}]},"Cos":{"label":"Cos ( expression )","documentation":"Calculates the cosine of a number.","params":[{"label":"expression","documentation":"Value in radians."}]},"Dec":{"label":"Dec ( \\"hex\\" [, flag = 0] )","documentation":"Returns a numeric representation of a hexadecimal string.","params":[{"label":"hex","documentation":"The hexadecimal string to convert."},{"label":"flag","documentation":"**[optional]** Defines behavior.  \\nCan be one of the following:  \\n&emsp;Default = string is interpreted as an integer. See remarks.  \\n&emsp;`$NUMBER_32BIT` (`1`) = string is interpreted as a 32bit integer  \\n&emsp;`$NUMBER_64BIT` (`2`) = string is interpreted as a 64bit integer  \\n&emsp;`$NUMBER_DOUBLE` (`3`) = string is interpreted as a double  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"DirCopy":{"label":"DirCopy ( \\"source dir\\", \\"dest dir\\" [, flag = 0] )","documentation":"Copies a directory and all sub-directories and files (Similar to xcopy).","params":[{"label":"source dir","documentation":"Path of the source directory (with no trailing backslash). e.g. \\"C:\\\\Path1\\""},{"label":"dest dir","documentation":"Path of the destination dir (with no trailing backslash). e.g. \\"C:\\\\Path_Copy\\""},{"label":"flag","documentation":"**[optional]** this flag determines whether to overwrite files if they already exist:  \\n&emsp;`$FC_NOOVERWRITE` (`0`) = (default) do not overwrite existing files  \\n&emsp;`$FC_OVERWRITE` (`1`) = overwrite existing files  \\n\\nConstants are defined in FileConstants.au3."}]},"DirCreate":{"label":"DirCreate ( \\"path\\" )","documentation":"Creates a directory/folder.","params":[{"label":"path","documentation":"Path of the directory to create."}]},"DirGetSize":{"label":"DirGetSize ( \\"path\\" [, flag = 0] )","documentation":"Returns the size in bytes of a given directory.","params":[{"label":"path","documentation":"Path of the directory to create."},{"label":"flag","documentation":"**[optional]** this flag determines the behaviour and result of the function, and can be a combination of the following:  \\n&emsp;`$DIR_DEFAULT` (`0`) = (default)  \\n&emsp;`$DIR_EXTENDED` (`1`) = Extended mode is On -> returns an array that contains extended information (see Remarks).  \\n&emsp;`$DIR_NORECURSE` (`2`) = Don\'t get the size of files in subdirectories (recursive mode is Off)"}]},"DirMove":{"label":"DirMove ( \\"source dir\\", \\"dest dir\\" [, flag = 0] )","documentation":"Copies a directory and all sub-directories and files (Similar to xcopy).","params":[{"label":"source dir","documentation":"Path of the source directory (with no trailing backslash). e.g. \\"C:\\\\Path1\\""},{"label":"dest dir","documentation":"Path of the destination dir (with no trailing backslash). e.g. \\"C:\\\\Path_Copy\\""},{"label":"flag","documentation":"**[optional]** this flag determines whether to overwrite files if they already exist:  \\n&emsp;`$FC_NOOVERWRITE` (`0`) = (default) do not overwrite existing files;  \\n&emsp;`$FC_OVERWRITE` (`1`) = overwrite existing files  \\n\\nConstants are defined in FileConstants.au3."}]},"DirRemove":{"label":"DirRemove ( \\"path\\" [, recurse = 0] )","documentation":"Deletes a directory/folder.","params":[{"label":"path","documentation":"Path of the directory to remove."},{"label":"recurse","documentation":"**[optional]** Use this flag to specify if you want to delete sub-directories too.  \\n&emsp;`$DIR_DEFAULT` (`0`) = (default) deletes the folder, only if it is empty  \\n&emsp;`$DIR_REMOVE` (`1`) = remove files and subdirectories (like the DOS DelTree command)  \\nConstants are define in \\"AutoItConstants.au3\\"."}]},"DllCall":{"label":"DllCall ( \\"dll\\", \\"return type\\", \\"function\\" [, type1, param1 [, type n, param n]] )","documentation":"Dynamically calls a function in a DLL.","params":[{"label":"dll","documentation":"The filename of the DLL to use. e.g. \\"user32.dll\\". A handle obtained from DllOpen can also be used."},{"label":"return type","documentation":"The return type of the function"},{"label":"function","documentation":"The name, eg. \\"MessageBox\\" or the ordinal value, e.g. 62, of the function in the DLL to call."},{"label":"type1","documentation":"**[optional]** The type of the parameter "},{"label":"param1","documentation":"**[optional]** The actual parameter"},{"label":"type n","documentation":"**[optional]** The type of the nth parameter"},{"label":"param n","documentation":"**[optional]** The actual nth parameter"}]},"DllCallAddress":{"label":"DllCallAddress ( \\"return type\\", address  [, type1, param1 [, type n, param n]] )","documentation":"Dynamically calls a function in a DLL.","params":[{"label":"return type","documentation":"The return type of the function"},{"label":"address","documentation":"The address of a function. **If this value is invalid your script will crash!**"},{"label":"type1","documentation":"**[optional]** The type of the parameter "},{"label":"param1","documentation":"**[optional]** The actual parameter"},{"label":"type n","documentation":"**[optional]** The type of the nth parameter"},{"label":"param n","documentation":"**[optional]** The actual nth parameter"}]},"DllCallbackFree":{"documentation":"Frees a previously created handle created with DllCallbackRegister.","label":"DllCallbackFree ( handle )","params":[{"label":"handle","documentation":"The DllCallback handle, as returned by a previous call to `DllCallbackRegister()`."}]},"DllCallbackGetPtr":{"documentation":"Returns the pointer to a callback function that can be passed to the Win32 API.","label":"DllCallbackGetPtr ( handle )","params":[{"label":"handle","documentation":"A DllCallback handle returned from `DllCallbackRegister()`."}]},"DllCallbackRegister":{"label":"DllCallbackRegister ( \\"function\\", \\"return type\\", \\"params\\" )","documentation":"Creates a user-defined DLL Callback function.","params":[{"label":"function","documentation":"The name of the User Defined Function to call."},{"label":"return type","documentation":"The return type and calling convention of the function"},{"label":"params","documentation":"A semi-colon separated list of parameters that will be passed to this function."}]},"DllClose":{"label":"DllClose ( dllhandle )","documentation":"Closes a previously opened DLL.","params":[{"label":"dllhandle","documentation":"The handle of a dll, as returned by a previous call to `DllOpen()`."}]},"DllOpen":{"label":"DllOpen ( \\"filename\\" )","documentation":"Opens a DLL file for use in DllCall.","params":[{"label":"filename","documentation":"Filename of the DLL file to open."}]},"DllStructCreate":{"documentation":"Creates a C/C++ style structure to be used in DllCall.","label":"DllStructCreate ( Struct [, Pointer] )","params":[{"label":"Struct","documentation":"A string representing the structure to create."},{"label":"Pointer","documentation":"**[optional]** If supplied the struct will not allocate memory but use the pointer supplied."}]},"DllStructGetData":{"documentation":"Returns the data of an element of the struct.","label":"DllStructGetData ( Struct, Element [, index = Default] )","params":[{"label":"Struct","documentation":"The struct returned by `DllStructCreate()`."},{"label":"Element","documentation":"Which element of the struct you want to access, starting at 1 or the element name as defined in `DllStructCreate()`. "},{"label":"index","documentation":"**[optional]** For elements that are an array this specifies the 1-based index to retrieve. If omitted or the Default keyword then the entire array is retrieved (Useful for quickly retrieving strings). **Not used for non-array elements.**"}]},"DllStructGetPtr":{"documentation":"Returns the pointer to the struct or an element in the struct.","label":"DllStructGetPtr ( Struct [, Element] )","params":[{"label":"Struct","documentation":"The struct returned by `DllStructCreate()`. "},{"label":"Element","documentation":"**[optional]** The element of the struct whose pointer you need, starting at 1 or the element name as defined in `DllStructCreate()`. "}]},"DllStructGetSize":{"documentation":"Returns the size of the struct in bytes.","label":"DllStructGetSize ( Struct )","params":[{"label":"Struct","documentation":"The struct returned by `DllStructCreate()`."}]},"DllStructSetData":{"documentation":"Sets the data of an element in the struct.","label":"DllStructSetData ( Struct, Element, value [, index] )","params":[{"label":"Struct","documentation":"The struct returned by `DllStructCreate()`. "},{"label":"Element","documentation":"Which element of the struct you want to access, starting at 1, or the element name as defined in `DllStructCreate()`. "},{"label":"value","documentation":"The new value to place in the struct element. "},{"label":"index","documentation":"**[optional]** For elements that are an array this specifies the 1-based index to set. If omitted or the Default keyword then as much of the value as possible will be set in element starting at index 1 (Useful for quickly setting strings). **Not used for non-array elements.**"}]},"DriveGetDrive":{"documentation":"Returns an array containing the enumerated drives.","label":"DriveGetDrive ( \\"type\\" )","params":[{"label":"type","documentation":"Type of drive to find:  \\n&emsp;`$DT_ALL` (\\"ALL\\")  \\n&emsp;`$DT_CDROM` (\\"CDROM\\")  \\n&emsp;`$DT_REMOVABLE` (\\"REMOVABLE\\")  \\n&emsp;`$DT_FIXED` (\\"FIXED\\")  \\n&emsp;`$DT_NETWORK` (\\"NETWORK\\")  \\n&emsp;`$DT_RAMDISK` (\\"RAMDISK\\")  \\n&emsp;`$DT_UNKNOWN` (\\"UNKNOWN\\")  \\n\\nConstants are defined in AutoItConstants.au3"}]},"DriveGetFileSystem":{"documentation":"Returns File System Type of a drive.","label":"DriveGetFileSystem ( \\"path\\" )","params":[{"label":"path","documentation":"Path of drive to receive information from. "}]},"DriveGetLabel":{"documentation":"Returns Volume Label of a drive, if it has one.","label":"DriveGetLabel ( \\"path\\" )","params":[{"label":"path","documentation":"Path of drive to receive information from. "}]},"DriveGetSerial":{"documentation":"Returns Serial Number of a drive.","label":"DriveGetSerial ( \\"path\\" )","params":[{"label":"path","documentation":"Path of drive to receive information from. "}]},"DriveGetType":{"documentation":"Returns drive type.","label":"DriveGetType ( \\"path\\" [, operation = 1] )","params":[{"label":"path","documentation":"Path of drive to receive information from. "},{"label":"operation","documentation":"**[optional]** The drive type operation to perform.  \\n&emsp;`$DT_DRIVETYPE` (`1`) = the type of drive (default)  \\n&emsp;`$DT_SSDSTATUS` (`2`) = SSD status of the drive  \\n&emsp;`$DT_BUSTYPE` (`3`) = the bus type of drive  \\n\\nConstants are defined in AutoItConstants.au3."}]},"DriveMapAdd":{"documentation":"Maps a network drive.","label":"DriveMapAdd ( \\"device\\", \\"remote share\\" [, flags = 0 [, \\"user\\" [, \\"password\\"]]] )","params":[{"label":"device","documentation":"The device to map, for example \\"O:\\" or \\"LPT1:\\". If you pass an empty string for this parameter a connection is made but not mapped to a specific drive. If you specify \\"*\\" an unused drive letter will be automatically selected."},{"label":"remote share","documentation":"The remote share to connect to in the form \\"&#92;&#92;server&#92;share\\". "},{"label":"flags","documentation":"**[optional]** A combination of the following:  \\n&emsp;`$DMA_DEFAULT` (`0`) = default;  \\n&emsp;`$DMA_PERSISTENT` (`1`) = Persistent mapping;  \\n&emsp;`$DMA_AUTHENTICATION` (`8`) = Show authentication dialog if required  \\n\\nConstants are defined in \\"AutoItConstants.au3\\""},{"label":"user","documentation":"**[optional]** The username to use to connect. In the form \\"username\\" or \\"domain\\\\username\\"."},{"label":"password","documentation":"**[optional]** The password to use to connect."}]},"DriveMapDel":{"documentation":"Disconnects a network drive.","label":"DriveMapDel ( \\"drive\\" )","params":[{"label":"drive","documentation":"The device to disconnect, e.g. \\"O:\\" or \\"LPT1:\\". "}]},"DriveMapGet":{"documentation":"Retrieves the details of a mapped drive.","label":"DriveMapGet ( \\"device\\" )","params":[{"label":"device","documentation":"The device (drive or printer) letter to query, e.g. \\"O:\\" or \\"LPT1:\\" "}]},"DriveSetLabel":{"documentation":"Sets the Volume Label of a drive.","label":"DriveSetLabel ( \\"path\\", \\"label\\" )","params":[{"label":"path","documentation":"Path of drive to change. "},{"label":"label","documentation":"New volume label for the drive. (11 characters is usually max length) "}]},"DriveSpaceFree":{"documentation":"Returns the free disk space of a path in Megabytes.","label":"DriveSpaceFree ( \\"path\\" )","params":[{"label":"path","documentation":"Path of drive to receive information from. "}]},"DriveSpaceTotal":{"documentation":"Returns the total disk space of a path in Megabytes.","label":"DriveSpaceTotal ( \\"path\\" )","params":[{"label":"path","documentation":"Path of drive to receive information from. "}]},"DriveStatus":{"documentation":"Returns the status of the drive as a string.","label":"DriveStatus ( \\"path\\" )","params":[{"label":"path","documentation":"Path of drive to receive information from. "}]},"EnvGet":{"documentation":"Retrieves an environment variable.","label":"EnvGet ( \\"envvariable\\" )","params":[{"label":"envvariable","documentation":"Name of the environment variable to get such as \\"TEMP\\" or \\"PATH\\". "}]},"EnvSet":{"documentation":"Writes an environment variable.","label":"EnvSet ( \\"envvariable\\" [, \\"value\\"] )","params":[{"label":"envvariable","documentation":"Name of the environment variable to set. "},{"label":"value","documentation":"**[optional]** Value to set the environment variable to. If a value is not used the environment variable will be deleted. "}]},"Eval":{"documentation":"Return the value of the variable defined by a string.","label":"Eval ( string )","params":[{"label":"string","documentation":"string representing name of the variable. "}]},"Execute":{"documentation":"Execute an expression.","label":"Execute ( string )","params":[{"label":"string","documentation":"string representing an expression to be evaluated. "}]},"Exp":{"documentation":"Calculates e to the power of a number.","label":"Exp ( expression )","params":[{"label":"expression","documentation":"Any valid numeric expression. "}]},"FileChangeDir":{"documentation":"Changes the current working directory.","label":"FileChangeDir ( \\"path\\" )","params":[{"label":"path","documentation":"The path to make the current working directory. "}]},"FileClose":{"documentation":"Closes a previously opened file.","label":"FileClose ( \\"filehandle\\" )","params":[{"label":"filehandle","documentation":"The handle of a file, as returned by a previous call to FileOpen(). "}]},"FileCopy":{"documentation":"Copies one or more files.","label":"FileCopy ( \\"source\\", \\"dest\\" [, flag = 0] )","params":[{"label":"source","documentation":"The source path of the file(s) to copy. (* and ? wildcards accepted) "},{"label":"dest","documentation":"The destination path of the copied file(s). "},{"label":"flag","documentation":"**[optional]** this flag determines whether to overwrite files if they already exist.  \\nCan be a combination of the following:  \\n&emsp;`$FC_NOOVERWRITE` (`0`) = (default) do not overwrite existing files  \\n&emsp;`$FC_OVERWRITE` (`1`) = overwrite existing files  \\n&emsp;`$FC_CREATEPATH` (`8`) = Create destination directory structure if it doesn\'t exist (See Remarks).  \\n\\nConstants are defined in FileConstants.au3."}]},"FileCreateNTFSLink":{"documentation":"Creates an NTFS hardlink to a file or a directory.","label":"FileCreateNTFSLink ( \\"source\\", \\"hardlink\\" [, flag = 0] )","params":[{"label":"source","documentation":"Path of the source to which the hardlink will be created. "},{"label":"hardlink","documentation":"Path of the hardlink. "},{"label":"flag","documentation":"**[optional]** this flag determines whether to overwrite link if they already exist.  \\nCan be a combination of the following:  \\n&emsp;`$FC_NOOVERWRITE` (`0`) = (default) do not overwrite existing link  \\n&emsp;`$FC_OVERWRITE` (`1`) = overwrite existing link  \\n\\nConstants are defined in FileConstants.au3."}]},"FileCreateShortcut":{"documentation":"Creates a shortcut (.lnk) to a file.","label":"FileCreateShortcut ( \\"file\\", \\"lnk\\" [, \\"workdir\\" [, \\"args\\" [, \\"desc\\" [, \\"icon\\" [, \\"hotkey\\" [, icon number [, state]]]]]]] )","params":[{"label":"file","documentation":"Full path and file name of file to which the shortcut will point. "},{"label":"lnk","documentation":"Full path and file name of the shortcut. "},{"label":"workdir","documentation":"**[optional]** Working directory. "},{"label":"args","documentation":"**[optional]** Additional file arguments. "},{"label":"desc","documentation":"**[optional]** File Description. "},{"label":"icon","documentation":"**[optional]** Full Path/File name of icon to use. "},{"label":"hotkey","documentation":"**[optional]** Hotkey - same as the Send() key format. "},{"label":"icon number","documentation":"**[optional]** The icon instance to use (usually 0) "},{"label":"state","documentation":"**[optional]** The state the shortcut is launched in. Use either `@SW_SHOWNORMAL`, `@SW_SHOWMINNOACTIVE` or `@SW_SHOWMAXIMIZED`"}]},"FileDelete":{"documentation":"Delete one or more files.","label":"FileDelete ( \\"filename\\" )","params":[{"label":"filename","documentation":"The path of the file(s) to delete.  "}]},"FileExists":{"documentation":"Checks if a file or directory exists.","label":"FileExists ( \\"path\\" )","params":[{"label":"path","documentation":"The directory or file to check. "}]},"FileFindFirstFile":{"documentation":"Creates a search handle, defined by a path and file mask.","label":"FileFindFirstFile ( \\"filename\\" )","params":[{"label":"filename","documentation":"The path and file name. "}]},"FileFindNextFile":{"documentation":"Returns the next filename defined by the search handle.","label":"FileFindNextFile ( search [, flag = 0])","params":[{"label":"search","documentation":"The search handle, as returned by `FileFindFirstFile()`. "},{"label":"flag","documentation":"**[optional]** this flag determines whether to return detailed file attribute information in `@extended`.  \\n&emsp;0 = (default) use `@extended` to return 1 or 0 if search item is a directory.  \\n&emsp;1 = Return a string in `@extended` in the same format as `FileGetAttrib()`."}]},"FileFlush":{"documentation":"Flushes the file\'s buffer to disk.","label":"FileFlush ( \\"filehandle\\" )","params":[{"label":"filehandle","documentation":"The handle of a file, as returned by a previous call to FileOpen(). "}]},"FileGetAttrib":{"documentation":"Returns a code string representing a file\'s attributes.","label":"FileGetAttrib ( \\"filename\\" )","params":[{"label":"filename","documentation":"The path to the file or directory to check. "}]},"FileGetEncoding":{"documentation":"Determines the text encoding used in a file.","label":"FileGetEncoding ( \\"filehandle/filename\\" [, mode = 1] )","params":[{"label":"filehandle/filename","documentation":"The handle of a file, as returned by a previous call to `FileOpen()`. Alternatively you may use a string filename as the first parameter. "},{"label":"mode","documentation":"**[optional]** The UTF8 detection mode to use.  \\n&emsp;`$FE_ENTIRE_UTF8` (`1`) = Check entire file for UTF8 sequences (default)  \\n&emsp;`$FE_PARTIALFIRST_UTF8` (`2`) = Check first part of file for UTF8 sequences (the same as `FileOpen()` uses by default)  \\n\\nConstants are defined in FileConstants.au3."}]},"FileGetLongName":{"documentation":"Returns the long path+name of the path+name passed.","label":"FileGetLongName ( \\"filename\\" [, flag = 0] )","params":[{"label":"filename","documentation":"Full path and file name to convert "},{"label":"flag","documentation":"**[optional]**  \\n&emsp;`$FN_FULLPATH` (`0`) - Default;  \\n&emsp;`$FN_RELATIVEPATH` (`1`) - file can have relative dir, e.g. \\"..&#92;file.txt\\"  \\n\\nConstants are defined in FileConstants.au3."}]},"FileGetPos":{"documentation":"Retrieves the current file position.","label":"FileGetPos ( \\"filehandle\\" )","params":[{"label":"filehandle","documentation":"The handle of a file, as returned by a previous call to FileOpen(). "}]},"FileGetShortcut":{"documentation":"Retrieves details about a shortcut.","label":"FileGetShortcut ( \\"lnk\\" )","params":[{"label":"lnk","documentation":"Full path and file name of the shortcut. "}]},"FileGetShortName":{"documentation":"Returns the 8.3 short path+name of the path+name passed.","label":"FileGetShortName ( \\"filename\\" [, flag = 0] )","params":[{"label":"filename","documentation":"full path and file name to convert "},{"label":"flag","documentation":"**[optional]**  \\n&emsp;`$FN_FULLPATH` (`0`) - Default;  \\n&emsp;`$FN_RELATIVEPATH` (`1`) - file can have relative dir, e.g. \\"..&#92;file.txt\\"  \\n\\nConstants are defined in FileConstants.au3."}]},"FileGetSize":{"documentation":"Returns the size of a file in bytes.","label":"FileGetSize ( \\"filename\\" )","params":[{"label":"filename","documentation":"Filename to check. "}]},"FileGetTime":{"documentation":"Returns the time and date information for a file.","label":"FileGetTime ( \\"filename\\" [, option = 0 [, format = 0]] )","params":[{"label":"filename","documentation":"The path to the file or directory to check. "},{"label":"option","documentation":"**[optional]** Flag to indicate which timestamp:  \\n&emsp;`$FT_MODIFIED` (`0`) = Last modified (default);  \\n&emsp;`$FT_CREATED` (`1`) = Created;  \\n&emsp;`$FT_ACCESSED` (`2`) = Last accessed  \\n\\nConstants are defined in FileConstants.au3"},{"label":"format","documentation":"**[optional]** to specify type of return  \\n&emsp;`$FT_ARRAY` (`0`) = return an array (default)  \\n&emsp;`$FT_STRING` (`1`) = return a string YYYYMMDDHHMMSS  \\n\\nConstants are defined in FileConstants.au3"}]},"FileGetVersion":{"documentation":"Returns version information stored in a file.","label":"FileGetVersion ( \\"filename\\" [, \\"stringname\\"] )","params":[{"label":"filename","documentation":"Filename. "},{"label":"stringname","documentation":"**[optional]** Name of the string field to be retrieved from the header version file info:  \\n&emsp;`$FV_COMMENTS` (\\"Comments\\");  \\n&emsp;`$FV_COMPANYNAME` (\\"CompanyName\\");  \\n&emsp;`$FV_FILEDESCRIPTION` (\\"FileDescription\\");  \\n&emsp;`$FV_FILEVERSION` (\\"FileVersion\\");  \\n&emsp;`$FV_INTERNALNAME` (\\"InternalName\\");  \\n&emsp;`$FV_LEGALCOPYRIGHT` (\\"LegalCopyright\\");  \\n&emsp;`$FV_LEGALTRADEMARKS` (\\"LegalTrademarks\\");  \\n&emsp;`$FV_ORIGINALFILENAME` (\\"OriginalFilename\\");  \\n&emsp;`$FV_PRODUCTNAME` (\\"ProductName\\");  \\n&emsp;`$FV_PRODUCTVERSION` (\\"ProductVersion\\");  \\n&emsp;`$FV_PRIVATEBUILD` (\\"PrivateBuild\\");  \\n&emsp;`$FV_SPECIALBUILD` (\\"SpecialBuild\\")  \\n\\nConstants are defined in FileConstants.au3."}]},"FileInstall":{"documentation":"Include and install a file with the compiled script.","label":"FileInstall ( \\"source\\", \\"dest\\" [, flag = 0] )","params":[{"label":"source","documentation":"The source path of the file to compile. **This must be a literal string; it cannot be a variable or the result of a function call.** It can be a relative path (using .\\\\ or ..\\\\ in the path) to the source file (.au3)."},{"label":"dest","documentation":"The destination path of the file with trailing backslash if only the directory is used. This can be a variable."},{"label":"flag","documentation":"**[optional]** this flag determines whether to overwrite files if they already exist:  \\n&emsp;`$FC_NOOVERWRITE` (`0`) = (default) do not overwrite existing files  \\n&emsp;`$FC_OVERWRITE` (`1`) = overwrite existing files  \\n\\nConstants are defined in FileConstants.au3."}]},"FileMove":{"documentation":"Moves one or more files.","label":"FileMove ( \\"source\\", \\"dest\\" [, flag = 0] )","params":[{"label":"source","documentation":"The source path and filename of the file to move. (* wildcards accepted)"},{"label":"dest","documentation":"The destination path and filename of the moved file. (* wildcards accepted)"},{"label":"flag","documentation":"**[optional]** this flag determines whether to overwrite files if they already exist:  \\nCan be a combination of the following:  \\n&emsp;`$FC_NOOVERWRITE` (`0`) = (default) do not overwrite existing files.  \\n&emsp;`$FC_OVERWRITE` (`1`) = overwrite existing files.  \\n&emsp;`$FC_CREATEPATH` (`8`) = Create destination directory structure if it doesn\'t exist (See Remarks).  \\n\\nConstants are defined in FileConstants.au3."}]},"FileOpen":{"documentation":"Opens a file for reading or writing.","label":"FileOpen ( \\"filename\\" [, mode = 0] )","params":[{"label":"filename","documentation":"Filename of the file to open."},{"label":"mode","documentation":"**[optional]** Mode to open the file in.  \\nCan be a combination of the following:  \\n&emsp;`$FO_READ` (`0`) = Read mode (default)  \\n&emsp;`$FO_APPEND` (`1`) = Write mode (append to end of file)  \\n&emsp;`$FO_OVERWRITE` (`2`) = Write mode (erase previous contents)  \\n&emsp;`$FO_CREATEPATH` (`8`) = Create directory structure if it doesn\'t exist (See Remarks).  \\n&emsp;`$FO_BINARY` (`16`) = Force binary mode (See Remarks).  \\n&emsp;`$FO_UNICODE` or `$FO_UTF16_LE` (`32`) = Use Unicode UTF16 Little Endian reading and writing mode.  \\n&emsp;`$FO_UTF16_BE` (`64`) = Use Unicode UTF16 Big Endian reading and writing mode.  \\n&emsp;`$FO_UTF8` (`128`) = Use Unicode UTF8 (with BOM) reading and writing mode.  \\n&emsp;`$FO_UTF8_NOBOM` (`256`) = Use Unicode UTF8 (without BOM) reading and writing mode.  \\n&emsp;`$FO_ANSI` (`512`) = Use ANSI reading and writing mode.  \\n&emsp;`$FO_UTF16_LE_NOBOM` (`1024`) = Use Unicode UTF16 Little Endian (without BOM) reading and writing mode.  \\n&emsp;`$FO_UTF16_BE_NOBOM` (`2048`) = Use Unicode UTF16 Big Endian (without BOM) reading and writing mode.  \\n&emsp;`$FO_FULLFILE_DETECT` (`16384`) = When opening for reading and no BOM is present, use the entire file to determine if it is UTF8 or UTF16. If this is not used then only the initial part of the file (up to 64KB) is checked for performance reasons.  \\nThe folder path must already exist (except using `$FO_CREATEPATH` mode - See Remarks).  \\n\\nConstants are defined in FileConstants.au3."}]},"FileOpenDialog":{"documentation":"Initiates a Open File Dialog.","label":"FileOpenDialog ( \\"title\\", \\"init dir\\", \\"filter\\" [, options = 0 [, \\"default name\\" [, hwnd]]] )","params":[{"label":"title","documentation":"Title text of the Dialog GUI."},{"label":"init dir","documentation":"Initial directory selected in the GUI file tree."},{"label":"filter","documentation":"File type single filter such as \\"All (&ast;.&ast;)\\" or \\"Text files (&ast;.txt)\\" or multiple filter groups such as \\"All (&ast;.&ast;)|Text files (&ast;.txt)\\"."},{"label":"options","documentation":"**[optional]** Dialog Options: To use more than one option, BitOR the required values together.  \\n&emsp;`$FD_FILEMUSTEXIST` (`1`) = File Must Exist (if user types a filename);  \\n&emsp;`$FD_PATHMUSTEXIST` (`2`) = Path Must Exist (if user types a path, ending with a backslash)  \\n&emsp;`$FD_MULTISELECT` (`4`) = Allow MultiSelect  \\n&emsp;`$FD_PROMPTCREATENEW` (`8`) = Prompt to Create New File (if does not exist)  \\n\\nConstants are defined in FileConstants.au3."},{"label":"default name","documentation":"**[optional]** Suggested file name for the user to open. Default is blank (\\"\\")."},{"label":"hwnd","documentation":"**[optional]** The window handle to use as the parent for this dialog."}]},"FileRead":{"documentation":"Read in a number of characters from a previously opened file.","label":"FileRead ( \\"filehandle/filename\\" [, count] )","params":[{"label":"filehandle/filename","documentation":"The handle of a file, as returned by a previous call to `FileOpen()`. Alternatively you may use a string filename as the first parameter."},{"label":"count","documentation":"**[optional]** The number of characters to read."}]},"FileReadLine":{"documentation":"Read in a line of text from a previously opened text file.","label":"FileReadLine ( \\"filehandle/filename\\" [, line = 1] )","params":[{"label":"filehandle/filename","documentation":"The handle of a file, as returned by a previous call to `FileOpen()`. Alternatively you may use a string filename as the first parameter."},{"label":"line","documentation":"**[optional]** The line number to read. The first line of a text file is line 1 (not zero), last line is -1."}]},"FileReadToArray":{"documentation":"Reads the specified file into an array.","label":"FileReadToArray ( \\"filehandle/filename\\" )","params":[{"label":"filehandle/filename","documentation":"The handle of a file, as returned by a previous call to `FileOpen()`. Alternatively you may use a string filename as the first parameter."}]},"FileRecycle":{"documentation":"Sends a file or directory to the recycle bin.","label":"FileRecycle ( \\"source\\" )","params":[{"label":"source","documentation":"The source path of the file(s) or directory to Recycle. (* and ? wildcards accepted)"}]},"FileRecycleEmpty":{"documentation":"Empties the recycle bin.","label":"FileRecycleEmpty ( [\\"source\\"] )","params":[{"label":"source","documentation":"**[optional]** The rootpath to empty - if omitted the recycle bin for all drives is emptied."}]},"FileSaveDialog":{"documentation":"Initiates a Save File Dialog.","label":"FileSaveDialog ( \\"title\\", \\"init dir\\", \\"filter\\" [, options = 0 [, \\"default name\\" [, hwnd]]] )","params":[{"label":"title","documentation":"Title text of the Dialog GUI."},{"label":"init dir","documentation":"Initial directory selected in the GUI file tree."},{"label":"filter","documentation":"File type single filter such as \\"All (&ast;.&ast;)\\" or \\"Text files (&ast;.txt)\\" or multiple filter groups such as \\"All (&ast;.&ast;)|Text files (&ast;.txt)\\"."},{"label":"options","documentation":"**[optional]** Dialog Options: To use more than one option, `BitOR` the required values together.  \\n&emsp;`$FD_PATHMUSTEXIST` (`2`) = Path Must Exist (if user types a path, ending with a backslash)  \\n&emsp;`$FD_PROMPTOVERWRITE` (`16`) = Prompt to OverWrite File.  \\n\\nConstants are defined in FileConstants.au3."},{"label":"default name","documentation":"**[optional]** File name to suggest to the user to save the file with. Default is blank (\\"\\")."},{"label":"hwnd","documentation":"**[optional]** The window handle to use as the parent for this dialog."}]},"FileSelectFolder":{"documentation":"Initiates a Browse For Folder dialog.","label":"FileSelectFolder ( \\"dialog text\\", \\"root dir\\" [, flag = 0 [, \\"initial dir\\" [, hwnd]]] )","params":[{"label":"dialog text","documentation":"Text greeting in dialog."},{"label":"root dir","documentation":"Root directory of GUI file tree. It limits a choice in the root folder. Use \\"\\" for Desktop to be root."},{"label":"flag","documentation":"**[optional]**  \\n&emsp;`$FSF_CREATEBUTTON` (`1`) = Show Create Folder Button (XP only)  \\n&emsp;`$FSF_NEWDIALOG` (`2`) = Use New Dialog Style (XP only)  \\n&emsp;`$FSF_EDITCONTROL` (`4`) = Show Edit Control (XP only)  \\n\\nConstants are defined in FileConstants.au3."},{"label":"initial dir","documentation":"**[optional]** The full path of the folder you selected/highlighted when displaying dialogue (if it exists in the root folder). Default is blank (\\"\\")."},{"label":"hwnd","documentation":"**[optional]** The window handle to use as the parent for this dialog."}]},"FileSetAttrib":{"documentation":"Sets the attributes of one or more files/directories.","label":"FileSetAttrib ( \\"file pattern\\", \\"+-RASHNOT\\" [, recurse = 0] )","params":[{"label":"file pattern","documentation":"The path of the file(s) to set, e.g. C:&#92;&ast;.au3, C:&#92;Dir. (&ast; and ? wildcards accepted)"},{"label":"+-RASHNOT","documentation":"Attribute(s) to set/clear. e.g. \\"+A\\", \\"+RA-SH\\""},{"label":"recurse","documentation":"**[optional]**  \\n&emsp;`$FT_NONRECURSIVE` (`0`) - no recursion (Default)  \\n&emsp;`$FT_RECURSIVE` (`1`) - directories are recursed into.  \\n\\nConstants are defined in FileConstants.au3."}]},"FileSetEnd":{"documentation":"Sets the end of the file at the current file position.","label":"FileSetEnd ( \\"filehandle\\" )","params":[{"label":"filehandle","documentation":"The handle of a file, as returned by a previous call to `FileOpen()`."}]},"FileSetPos":{"documentation":"Sets the current file position.","label":"FileSetPos ( \\"filehandle\\", offset, origin )","params":[{"label":"filehandle","documentation":"The handle of a file, as returned by a previous call to `FileOpen()`."},{"label":"offset","documentation":"The offset to move from the origin. This value may be positive or negative. Negative values move backwards from the origin."},{"label":"origin","documentation":"Must be one of the following:  \\n&emsp;`$FILE_BEGIN` (`0`) = Beginning of the file.  \\n&emsp;`$FILE_CURRENT` (`1`) = Current position.  \\n&emsp;`$FILE_END` (`2`) = End of the file.  \\n\\nConstants are defined in FileConstants.au3."}]},"FileSetTime":{"documentation":"Sets the timestamp of one of more files.","label":"FileSetTime ( \\"file pattern\\", \\"time\\" [, type = 0 [, recurse = 0]] )","params":[{"label":"file pattern","documentation":"The path of the file(s) to set, e.g. C:&#92;&ast;.au3, C:&#92;Dir. (&ast; and ? wildcards accepted)"},{"label":"time","documentation":"The new time to set in the format \\"YYYYMMDDHHMMSS\\" (Year, month, day, hours (24hr clock), seconds). If the time is blank \\"\\" then the current time is used."},{"label":"type","documentation":"**[optional]** The timestamp to change:  \\n&emsp;`$FT_MODIFIED` (`0`) = Last modified (default)  \\n&emsp;`$FT_CREATED` (`1`) = Created  \\n&emsp;`$FT_ACCESSED` (`2`) = Last accessed.  \\n\\nConstants are defined in FileConstants.au3"},{"label":"recurse","documentation":"**[optional]**  \\n&emsp;`$FT_NONRECURSIVE` (`0`) - no recursion (Default).  \\n&emsp;`$FT_RECURSIVE` (`1`) - directories are recursed into.  \\n\\nConstants are defined in FileConstants.au3"}]},"FileWrite":{"documentation":"Write text/data to the end of a previously opened file.","label":"FileWrite ( \\"filehandle/filename\\", \\"text/data\\" )","params":[{"label":"filehandle/filename","documentation":"The handle of a file, as returned by a previous call to `FileOpen()`. Alternatively, you may use a string filename as the first parameter."},{"label":"text/data","documentation":"The text/data to write to the file. The text is written as is - no `@CR` or `@LF` characters are added."}]},"FileWriteLine":{"documentation":"Append a line of text to the end of a previously opened text file.","label":"FileWriteLine ( \\"filehandle/filename\\", \\"line\\" )","params":[{"label":"filehandle/filename","documentation":"The handle of a file, as returned by a previous call to `FileOpen()`. Alternatively, you may use a string filename as the first parameter."},{"label":"line","documentation":"The line of text to write to the text file. If the line does NOT end in `@CR` or `@LF` then a DOS linefeed (`@CRLF`) will be automatically added."}]},"Floor":{"documentation":"Returns a number rounded down to the closest integer.","label":"Floor ( expression )","params":[{"label":"expression","documentation":"Any valid numeric expression."}]},"FtpSetProxy":{"documentation":"Sets the internet proxy to use for ftp access.","label":"FtpSetProxy ( mode = 0 [, \\"proxy:port\\" [, \\"username\\" [, \\"password\\"]]] )","params":[{"label":"mode","documentation":"The proxy mode to use:  \\n&emsp;`$PROXY_IE` (`0`) = (default) Use current Internet Explorer settings for proxy.  \\n&emsp;`$PROXY_NONE` (`1`) = Use no proxy (direct access)  \\n&emsp;`$PROXY_SPECIFIED` (`2`) = Use the proxy specified  \\n\\nConstants are deined in \\"AutoItConstants.au3\\"."},{"label":"proxy:port","documentation":"**[optional]** The address and port of the proxy to use."},{"label":"username","documentation":"**[optional]** If required, the username for the proxy"},{"label":"password","documentation":"**[optional]** If required, the password for the proxy"}]},"FuncName":{"documentation":"Returns the name of a function stored in a variable.","label":"FuncName ( $Functionvariable )","params":[{"label":"$Functionvariable","documentation":"A variable containing a Function whose name you want to retrieve."}]},"GUICreate":{"documentation":"Create a GUI window.","label":"GUICreate ( \\"title\\" [, width [, height [, left = -1 [, top = -1 [, style = -1 [, exStyle = -1 [, parent = 0]]]]]]] )","params":[{"label":"title","documentation":"The title of the dialog box."},{"label":"width","documentation":"**[optional]** The width of the window."},{"label":"height","documentation":"**[optional]** The height of the window."},{"label":"left","documentation":"**[optional]** The left side of the dialog box. By default (-1), the window is centered. If defined, top must also be defined."},{"label":"top","documentation":"**[optional]** The top of the dialog box. Default (-1) is centered"},{"label":"style","documentation":"**[optional]** defines the style of the window. See GUI Control Styles Appendix.  \\nUse -1 for the default style which includes a combination of `$WS_MINIMIZEBOX`, `$WS_CAPTION`, `$WS_POPUP`, `$WS_SYSMENU` styles.  \\nSome styles are always included: `$WS_CLIPSIBLINGS`, and `$WS_SYSMENU` if `$WS_MAXIMIZEBOX` or `$WS_SIZEBOX` is specified."},{"label":"exStyle","documentation":"**[optional]** defines the extended style of the window. See the Extended Style Table.  \\nUse -1 for the default, which is no extended styles.  \\nForced styles: `$WS_EX_WINDOWEDGE`"},{"label":"parent","documentation":"**[optional]** The handle of another previously created window - this new window then becomes a child of that window."}]},"GUICtrlCreateAvi":{"documentation":"Creates an AVI video control for the GUI.","label":"GUICtrlCreateAvi ( filename, subfileid, left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"filename","documentation":"The filename of the video. Only .avi files are supported."},{"label":"subfileid","documentation":"id of the subfile to be used. If the file only contains one video then use 0."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default (-1) : `$ACS_TRANSPARENT`  \\n&emsp;`$ACS_TRANSPARENT` is always used unless `$ACS_NONTRANSPARENT` is specified."},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateButton":{"documentation":"Creates a Button control for the GUI.","label":"GUICtrlCreateButton ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The text of the button control."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default text autofit in width)."},{"label":"height","documentation":"**[optional]** The height of the control (default text autofit in height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default ( -1) : none.  \\n&emsp;forced styles : `$WS_TABSTOP`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table.  \\n&emsp;default ( -1) : `WS_EX_WINDOWEDGE`"}]},"GUICtrlCreateCheckbox":{"documentation":"Creates a Checkbox control for the GUI.","label":"GUICtrlCreateCheckbox ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The text of the control checkbox."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default text autofit in width)."},{"label":"height","documentation":"**[optional]** The height of the control (default text autofit in height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default ( -1) : `$BS_AUTOCHECKBOX`.  \\n&emsp;forced styles : `$WS_TABSTOP`, and `$BS_AUTOCHECKBOX` if no checkbox style defined."},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateCombo":{"documentation":"Creates a ComboBox control for the GUI.","label":"GUICtrlCreateCombo ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The text which will appear in the combo control."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default (-1) : `$CBS_DROPDOWN`, `$CBS_AUTOHSCROLL`, `$WS_VSCROLL`  \\n&emsp;forced style : `$WS_TABSTOP`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table.  \\n&emsp;default ( -1) : `$WS_EX_CLIENTEDGE`"}]},"GUICtrlCreateContextMenu":{"documentation":"Creates a context menu for a control or entire GUI window.","label":"GUICtrlCreateContextMenu ( [controlID] )","params":[{"label":"controlID","documentation":"**[optional]** Control identifier as returned by a GUICtrlCreate...() function."}]},"GUICtrlCreateDate":{"documentation":"Creates a date control for the GUI.","label":"GUICtrlCreateDate ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The preselected date (always as \\"yyyy/mm/dd\\")."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to GUICoordMode."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to GUICoordMode."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default (-1) : `$DTS_LONGDATEFORMAT`  \\n&emsp;forced style : `$WS_TABSTOP`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table.  \\n&emsp;default (-1) : `$WS_EX_CLIENTEDGE`"}]},"GUICtrlCreateEdit":{"documentation":"Creates an Edit control for the GUI.","label":"GUICtrlCreateEdit ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The text of the control."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to GUICoordMode."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to GUICoordMode."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default ( -1) : `$ES_WANTRETURN`, `$WS_VSCROLL`, `$WS_HSCROLL`, `$ES_AUTOVSCROLL`, `$ES_AUTOHSCROLL`  \\n&emsp;forced styles : `$ES_MULTILINE`, `$WS_TABSTOP` only if not `$ES_READONLY`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table.  \\n&emsp;default ( -1) : `$WS_EX_CLIENTEDGE`"}]},"GUICtrlCreateGraphic":{"documentation":"Creates a Graphic control for the GUI.","label":"GUICtrlCreateGraphic ( left, top [, width [, height [, style]]] )","params":[{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to GUICoordMode."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to GUICoordMode."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default ( -1) : `$SS_NOTIFY`."}]},"GUICtrlCreateGroup":{"documentation":"Creates a Group control for the GUI.","label":"GUICtrlCreateGroup ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The text of the control."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default ( -1) : none.  \\n&emsp;forced styles : `$WS_GROUP`, `$BS_GROUPBOX`."},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateIcon":{"documentation":"Creates an Icon control for the GUI.","label":"GUICtrlCreateIcon ( filename, iconName, left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"filename","documentation":"filename of the icon to be loaded."},{"label":"iconName","documentation":"Icon name if the file contains multiple icons. Can be an ordinal name if negative number. Otherwise -1."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is 32)."},{"label":"height","documentation":"**[optional]** The height of the control (default is 32)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default ( -1) : `$SS_NOTIFY`  \\n&emsp;forced styles : `$WS_TABSTOP`, `$SS_ICON`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateInput":{"documentation":"Creates an Input control for the GUI.","label":"GUICtrlCreateInput ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The text of the control."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default ( -1) : `$ES_LEFT`, `$ES_AUTOHSCROLL`  \\n&emsp;forced styles : `$WS_TABSTOP` only if no `$ES_READONLY`. `$ES_MULTILINE` is always reset."},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table.  \\n&emsp;default ( -1) : `$WS_EX_CLIENTEDGE`"}]},"GUICtrlCreateLabel":{"documentation":"Creates a static Label control for the GUI.","label":"GUICtrlCreateLabel ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The text of the control."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default text autofit in width)."},{"label":"height","documentation":"**[optional]** The height of the control (default text autofit in height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.  \\n&emsp;default ( -1) : none.  \\n&emsp;forced styles : `$SS_NOTIFY`, `$SS_LEFT`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateList":{"documentation":"Creates a List control for the GUI.","label":"GUICtrlCreateList ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The text of the control."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.    \\n&emsp;default ( -1) : `$LBS_SORT`, `$WS_BORDER`, `$WS_VSCROLL`    \\n&emsp;forced styles : `$WS_TABSTOP`, `$LBS_NOTIFY`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table.    \\n&emsp;default ( -1) : `$WS_EX_CLIENTEDGE`"}]},"GUICtrlCreateListView":{"documentation":"Creates a ListView control for the GUI.","label":"GUICtrlCreateListView ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"definition of columns heading. Each of them are separated with `Opt(\\"GUIDataSeparatorChar\\")`."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.    \\n&emsp;default (-1) : `$LVS_SHOWSELALWAYS`, `$LVS_SINGLESEL`    \\n&emsp;forced style : `$LVS_REPORT`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table or ListView Extended Style Table.    \\n&emsp;default (-1) : `$LVS_EX_FULLROWSELECT`, `$WS_EX_CLIENTEDGE`"}]},"GUICtrlCreateListViewItem":{"documentation":"Creates a ListView item.","label":"GUICtrlCreateListViewItem ( \\"text\\", listviewID )","params":[{"label":"text","documentation":"subitemtext separated with `Opt(\\"GUIDataSeparatorChar\\")`."},{"label":"listviewID","documentation":"controlID of the ListView control holding the item."}]},"GUICtrlCreateMenu":{"documentation":"Creates a Menu control for the GUI.","label":"GUICtrlCreateMenu ( \\"submenutext\\" [, menuID = -1 [, menuentry = -1]] )","params":[{"label":"submenutext","documentation":"The submenu text."},{"label":"menuID","documentation":"**[optional]** If defined, allows you to create a submenu in the referenced menu. If equal -1 it refers to first level menu."},{"label":"menuentry","documentation":"**[optional]** Allows you to define the entry number to be created. The entries are numbered starting at 0."}]},"GUICtrlCreateMenuItem":{"documentation":"Creates a MenuItem control for the GUI.","label":"GUICtrlCreateMenuItem ( \\"text\\", menuID [, menuentry = -1 [, menuradioitem = 0]] )","params":[{"label":"text","documentation":"The text of the control."},{"label":"menuID","documentation":"Allows you to create a submenu in the referenced menu. If equal -1 it refers to the first level menu."},{"label":"menuentry","documentation":"**[optional]** Allows you to define the entry number to be created. The entries are numbered starting at 0."},{"label":"menuradioitem","documentation":"**[optional]** 0 (default) = create a normal menuitem, 1 = create a menuradioitem"}]},"GUICtrlCreateMonthCal":{"documentation":"Creates a month calendar control for the GUI.","label":"GUICtrlCreateMonthCal ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The preselected date (always as \\"yyyy/mm/dd\\")."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.    \\n&emsp;default (-1) : none.    \\n&emsp;forced style : `$WS_TABSTOP`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table.    \\n&emsp;default (-1) : `$WS_EX_CLIENTEDGE`"}]},"GUICtrlCreateObj":{"documentation":"Creates an ActiveX control in the GUI.","label":"GUICtrlCreateObj ( ObjectVar, left, top [, width [, height]] )","params":[{"label":"ObjectVar","documentation":"A variable pointing to a previously opened object"},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."}]},"GUICtrlCreatePic":{"documentation":"Creates a Picture control for the GUI.","label":"GUICtrlCreatePic ( filename, left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"filename","documentation":"filename of the picture to be loaded : supported types BMP, JPG, GIF(but not animated)."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.    \\n&emsp;default (-1) : `$SS_NOTIFY`    \\n&emsp;forced style : `$SS_BITMAP`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateProgress":{"documentation":"Creates a Progress control for the GUI.","label":"GUICtrlCreateProgress ( left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix."},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateRadio":{"documentation":"Creates a Radio button control for the GUI.","label":"GUICtrlCreateRadio ( \\"text\\", left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"text","documentation":"The text of the control."},{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default text autofit in width)."},{"label":"height","documentation":"**[optional]** The height of the control (default text autofit in height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.    \\n&emsp;default ( -1) : none.    \\n&emsp;forced styles : `$BS_AUTORADIOBUTTON` and `$WS_TABSTOP` if first radio in the group."},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateSlider":{"documentation":"Creates a Slider control for the GUI.","label":"GUICtrlCreateSlider ( left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to GUICoordMode."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to GUICoordMode."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.    \\n&emsp;default (-1) : `$TBS_AUTOTICKS`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateTab":{"documentation":"Creates a Tab control for the GUI.","label":"GUICtrlCreateTab ( left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to GUICoordMode."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to GUICoordMode."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.    \\n&emsp;default ( -1) : none.    \\n&emsp;forced styles : `$TCS_TOOLTIPS`, `$WS_TABSTOP`, `$WS_CLIPSIBLINGS`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateTabItem":{"documentation":"Creates a TabItem control within an existing tab control in the GUI.","label":"GUICtrlCreateTabItem ( \\"text\\" )","params":[{"label":"text","documentation":"The text of the control."}]},"GUICtrlCreateTreeView":{"documentation":"Creates a TreeView control for the GUI.","label":"GUICtrlCreateTreeView ( left, top [, width [, height [, style = -1 [, exStyle = -1]]]] )","params":[{"label":"left","documentation":"The left side of the control. If -1 is used then left will be computed according to `GUICoordMode`."},{"label":"top","documentation":"The top of the control. If -1 is used then top will be computed according to `GUICoordMode`."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.    \\n&emsp;default (-1) : `$TVS_HASBUTTONS`, `$TVS_HASLINES`, `$TVS_LINESATROOT`, `$TVS_DISABLEDRAGDROP`, `$TVS_SHOWSELALWAYS`    \\n&emsp;forced style : `$WS_TABSTOP`"},{"label":"exStyle","documentation":"**[optional]** Defines the extended style of the control. See Extended Style Table."}]},"GUICtrlCreateTreeViewItem":{"documentation":"Creates a TreeViewItem control for the GUI.","label":"GUICtrlCreateTreeViewItem ( \\"text\\", treeviewID )","params":[{"label":"text","documentation":"The text of the control."},{"label":"treeviewID","documentation":"treeview identifier as return by treeview or treeviewitem creation if subtree is created."}]},"GUICtrlCreateUpdown":{"documentation":"Creates an UpDown control for the GUI.","label":"GUICtrlCreateUpdown ( inputcontrolID [, style = -1] )","params":[{"label":"inputcontrolID","documentation":"The controlID of the input control in which the updown control will be created, or -1 for the last created control."},{"label":"style","documentation":"**[optional]** Defines the style of the control. See GUI Control Styles Appendix.    \\n&emsp;default (-1) : `$UDS_ALIGNRIGHT`.    \\n&emsp;forced style : `$UDS_SETBUDDYINT` and `$UDS_ALIGNRIGHT` if no align defined."}]},"GUICtrlDelete":{"documentation":"Deletes a control.","label":"GUICtrlDelete ( controlID )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."}]},"GUICtrlGetHandle":{"documentation":"Returns the handle for a control and some special (item) handles (Menu, ContextMenu, TreeViewItem).","label":"GUICtrlGetHandle ( controlID )","params":[{"label":"controlID","documentation":"Control identifier as returned by a `GUICtrlCreate...()` function."}]},"GUICtrlGetState":{"documentation":"Gets the current state of a control.","label":"GUICtrlGetState ( controlID )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."}]},"GUICtrlRead":{"documentation":"Read state or data of a control.","label":"GUICtrlRead ( controlID [, advanced = 0] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"advanced","documentation":"**[optional]** returns extended information of a control.    \\n&emsp;`$GUI_READ_DEFAULT` (`0`) = (Default) Returns a value with state or data of a control.    \\n&emsp;`$GUI_READ_EXTENDED` (`1`) = Returns extended information of a control.  \\n\\nConstants are defined in GUIConstantsEx.au3."}]},"GUICtrlRecvMsg":{"documentation":"Send a message to a control and retrieve information in lParam.","label":"GUICtrlRecvMsg ( controlID , msg [, wParam [, lParamType]] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"msg","documentation":"type of message to be send to the control as defined in the Windows controls documentation."},{"label":"wParam","documentation":"**[optional]** An integer first param to be send to the control."},{"label":"lParamType","documentation":"**[optional]** Define the type of lParam that will be returned: 0 (default) for wParam and lParam, 1 for lParam String, 2 for lParam RECT struct."}]},"GUICtrlRegisterListViewSort":{"documentation":"Register a user defined function for an internal listview sorting callback function.","label":"GUICtrlRegisterListViewSort ( controlID, \\"function\\" )","params":[{"label":"controlID","documentation":"The listview controlID for which the user function should proceed."},{"label":"function","documentation":"The name of the user function to call when the sorting callback runs."}]},"GUICtrlSendMsg":{"documentation":"Send a message to a control.","label":"GUICtrlSendMsg ( controlID, msg , wParam, lParam )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"msg","documentation":"type of message to be send to the control as defined in the Windows control documentation."},{"label":"wParam","documentation":"The first param to send to the control."},{"label":"lParam","documentation":"The second param to send to the control."}]},"GUICtrlSendToDummy":{"documentation":"Sends a message to a Dummy control.","label":"GUICtrlSendToDummy ( controlID [, state] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by `GUICtrlCreateDummy()`"},{"label":"state","documentation":"**[optional]** value that can be retrieved later on by `GUICtrlRead()`"}]},"GUICtrlSetBkColor":{"documentation":"Sets the background color of a control.","label":"GUICtrlSetBkColor ( controlID, backgroundcolor )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"backgroundcolor","documentation":"The RGB color to use."}]},"GUICtrlSetColor":{"documentation":"Sets the text color of a control.","label":"GUICtrlSetColor ( controlID, textcolor )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"textcolor","documentation":"The RGB color to use."}]},"GUICtrlSetCursor":{"documentation":"Sets the mouse cursor icon for a particular control.","label":"GUICtrlSetCursor ( controlID, cursorID )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"cursorID","documentation":"cursor ID as used by Windows SetCursor API (use -1 for the default mouse cursor for the control)"}]},"GUICtrlSetData":{"documentation":"Modifies the data for a control.","label":"GUICtrlSetData ( controlID, data [, default] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"data","documentation":"Combo, List, ListView, ListViewItem: An `Opt(\\"GUIDataSeparatorChar\\",...)` separated list of items.  \\nProgress: The percentage.  \\nSlider: The value.  \\nButton, Checkbox, Combo, Edit, Group, Input, Label, List, Menu, MenuItem, Radio, TabItem, TreeViewItem: Replaces the text.  \\nDate : The date or time depending the style of the control and the regional settings.  \\nDummy: The value."},{"label":"default","documentation":"**[optional]**  \\nCombo, List: The default value.  \\nEdit, Input: If non-empty (\\"\\"), the string is inserted at the current insertion point (caret)."}]},"GUICtrlSetDefBkColor":{"documentation":"Sets the default background color of all the controls of the GUI window.","label":"GUICtrlSetDefBkColor ( defbkcolor [, winhandle] )","params":[{"label":"defbkcolor","documentation":"Default background color for all controls."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUICtrlSetDefColor":{"documentation":"Sets the default text color of all the controls of the GUI window.","label":"GUICtrlSetDefColor ( deftextcolor [, winhandle] )","params":[{"label":"deftextcolor","documentation":"Default text color for all controls."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUICtrlSetFont":{"documentation":"Sets the font for a control.","label":"GUICtrlSetFont ( controlID, size [, weight [, attribute [, fontname [, quality]]]] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"size","documentation":"Fontsize (default is 8.5)."},{"label":"weight","documentation":"**[optional]** The weight of the font in the range 0 through 1000. For example, 400 is normal and 700 is bold. If this value is zero, a default weight is used.  \\nThe following values are defined for convenience.  \\n&emsp;`$FW_DONTCARE` = `0` (Use the default font weight)    \\n&emsp;`$FW_THIN` = `100`    \\n&emsp;`$FW_EXTRALIGHT` = `200`    \\n&emsp;`$FW_LIGHT` = `300`    \\n&emsp;`$FW_NORMAL` = `400`    \\n&emsp;`$FW_MEDIUM` = `500`    \\n&emsp;`$FW_SEMIBOLD` = `600`    \\n&emsp;`$FW_BOLD` = `700`    \\n&emsp;`$FW_EXTRABOLD` = `800`    \\n&emsp;`$FW_HEAVY` = `900`  \\n\\nConstants are defined in FontConstants.au3."},{"label":"attribute","documentation":"**[optional]** Font attributes, which can be a combination of the following added together:    \\n&emsp;`$GUI_FONTITALIC` (`2`) = Italic    \\n&emsp;`$GUI_FONTUNDER` (`4`) = Underlined    \\n&emsp;`$GUI_FONTSTRIKE` (`8`) = Strike  \\n\\nConstants are defined in GUIConstantsEx.au3."},{"label":"fontname","documentation":"**[optional]** Name of the font to use. (OS default GUI font is used if the font is \\"\\" or is not found)."},{"label":"quality","documentation":"**[optional]** Font quality to select. The following qualities are accepted:    \\n&emsp;`$DEFAULT_QUALITY` (`0`) = Appearance of the font does not matter.    \\n&emsp;`$DRAFT_QUALITY` (`1`) = Appearance of the font is less important than when `$PROOF_QUALITY` is used. For GDI raster fonts, scaling is enabled, which means that more font sizes are available, but the quality may be lower. Bold, italic, underline, and strikeout fonts are synthesized if necessary.    \\n&emsp;`$PROOF_QUALITY` (`2`) = (default) Character quality of the font is more important than exact matching of the logical-font attributes. For GDI raster fonts, scaling is disabled and the font closest in size is chosen. Although the chosen font size may not be mapped exactly when `$PROOF_QUALITY` is used, the quality of the font is high and there is no distortion of appearance. Bold, italic, underline, and strikeout fonts are synthesized if necessary.    \\n&emsp;`$NONANTIALIASED_QUALITY` (`3`) = Font is never antialiased.    \\n&emsp;`$ANTIALIASED_QUALITY` (`4`) = Font is always antialiased if the font supports it and the size of the font is not too small or too large.    \\n&emsp;`$CLEARTYPE_QUALITY` (`5`) = If set, text is rendered (when possible) using ClearType antialiasing method. See the remarks on the msdn page for LOGFONT for details about when cleartype is not available.  \\nIf neither `$ANTIALIASED_QUALITY` nor `$NONANTIALIASED_QUALITY` is selected, the font is antialiased only if the user chooses smooth screen fonts in Control Panel.  \\nConstants are defined in FontConstants.au3"}]},"GUICtrlSetGraphic":{"documentation":"Modifies the data for a control.","label":"GUICtrlSetGraphic ( controlID, type [, par1 [, ... par6]] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreateGraphic()` function."},{"label":"type","documentation":"type of drawing : dot, line, bezier, rect, ellipse, pie."},{"label":"par1...par6","documentation":"See the Graphic Type table below."}]},"GUICtrlSetImage":{"documentation":"Sets the bitmap or icon image to use for a control.","label":"GUICtrlSetImage ( controlID, filename [, iconname [, icontype]] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"filename","documentation":"The filename containing the picture to be display on the control."},{"label":"iconname","documentation":"**[optional]** Icon name if the file contains multiple icons. Can be an ordinal name if negative number. Otherwise -1."},{"label":"icontype","documentation":"**[optional]** To select a specific icon size : 0 = small, 1 = normal (default).For a TreeViewItem the icon size : 2 = selected, 4 for non-selected item."}]},"GUICtrlSetLimit":{"documentation":"Limits the number of characters/pixels for a control.","label":"GUICtrlSetLimit ( controlID, max [, min = 0] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"max","documentation":"For List controls it is the extent you can scroll horizontally in pixels.For Input/Edit controls it is the max number of characters that can be entered."},{"label":"min","documentation":"**[optional]** For Slider and UpDown controls you can specify a min value. Default = 0"}]},"GUICtrlSetOnEvent":{"documentation":"Defines a user-defined function to be called when a control is clicked.","label":"GUICtrlSetOnEvent ( controlID, \\"function\\" )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"function","documentation":"The name of the user function to call."}]},"GUICtrlSetPos":{"documentation":"Changes the position of a control within the GUI window.","label":"GUICtrlSetPos ( controlID, left [, top [, width [, height]]] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"left","documentation":"The left side of the control."},{"label":"top","documentation":"**[optional]** The top of the control."},{"label":"width","documentation":"**[optional]** The width of the control."},{"label":"height","documentation":"**[optional]** The height of the control ."}]},"GUICtrlSetResizing":{"documentation":"Defines the resizing method used by a control.","label":"GUICtrlSetResizing ( controlID, resizing )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"resizing","documentation":"See the Docking Values table for values that can be used (add together multiple values if required)."}]},"GUICtrlSetState":{"documentation":"Changes the state of a control.","label":"GUICtrlSetState ( controlID, state )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a GUICtrlCreate...() function, or -1 for the last created control."},{"label":"state","documentation":"See the State table."}]},"GUICtrlSetStyle":{"documentation":"Changes the style of a control.","label":"GUICtrlSetStyle ( controlID, style [, exStyle] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"style","documentation":"Defines the style of the control. See GUI Control Styles Appendix."},{"label":"exStyle","documentation":"**[optional]** Defines the extended Style of the control. See Extended Style Table."}]},"GUICtrlSetTip":{"documentation":"Sets the tip text associated with a control.","label":"GUICtrlSetTip ( controlID, tiptext [, \\"title\\" [, icon [, options]]] )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `GUICtrlCreate...()` function, or -1 for the last created control."},{"label":"tiptext","documentation":"Tip text that will be displayed when the mouse is hovered over the control."},{"label":"title","documentation":"**[optional]** The title for the tooltip."},{"label":"icon","documentation":"**[optional]** Pre-defined icon to show next to the title: requires a title.    \\n&emsp;`$TIP_NOICON` (`0`) = No icon    \\n&emsp;`$TIP_INFOICON` (`1`) = Info icon    \\n&emsp;`$TIP_WARNINGICON` (`2`) = Warning icon    \\n&emsp;`$TIP_ERRORICON` (`3`) = Error Icon.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."},{"label":"options","documentation":"**[optional]** Sets different options for how the tooltip will be displayed (Can be added together):    \\n&emsp;`$TIP_BALLOON` (`1`) = Display as Balloon Tip.    \\n&emsp;`$TIP_CENTER` (`2`) = Center the tip horizontally along the control.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"GUIDelete":{"documentation":"Deletes a GUI window and all controls that it contains.","label":"GUIDelete ( [winhandle] )","params":[{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUIGetCursorInfo":{"documentation":"Gets the mouse cursor position relative to GUI window.","label":"GUIGetCursorInfo ( [winhandle] )","params":[{"label":"winhandle","documentation":"**[optional]** The handle of the window to use. If omitted the \\"current\\" window will be used."}]},"GUIGetMsg":{"documentation":"Polls the GUI to see if any events have occurred.","label":"GUIGetMsg ( [advanced = 0] )","params":[{"label":"advanced","documentation":"**[optional]** return extended information in an array.    \\n&emsp;`$GUI_EVENT_SINGLE` (`0`) = (default) Returns a single event.    \\n&emsp;`$GUI_EVENT_ARRAY` (`1`) = returns an array containing the event and extended information.  \\n\\nConstants are defined in GUIConstantsEx.au3."}]},"GUIGetStyle":{"documentation":"Retrieves the styles of a GUI window.","label":"GUIGetStyle ( [winhandle] )","params":[{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUIRegisterMsg":{"documentation":"Register a user defined function for a known Windows Message ID (WM_MSG).","label":"GUIRegisterMsg ( msgID, \\"function\\" )","params":[{"label":"msgID","documentation":"A Windows Message ID (see Appendix: Windows Message Codes)."},{"label":"function","documentation":"The name of the user function to call when the message appears or an empty string \\"\\" to unregister a message."}]},"GUISetAccelerators":{"documentation":"Sets the accelerator table to be used in a GUI window.","label":"GUISetAccelerators ( accelerators [, winhandle] )","params":[{"label":"accelerators","documentation":"A 2 dimensional array holding the accelerator table."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUISetBkColor":{"documentation":"Sets the background color of the GUI window.","label":"GUISetBkColor ( background [, winhandle] )","params":[{"label":"background","documentation":"Background color of the dialog box."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUISetCoord":{"documentation":"Sets absolute coordinates for the next control.","label":"GUISetCoord ( left, top [, width [, height [, winhandle]]] )","params":[{"label":"left","documentation":"The left side of the control."},{"label":"top","documentation":"The top of the control."},{"label":"width","documentation":"**[optional]** The width of the control (default is the previously used width)."},{"label":"height","documentation":"**[optional]** The height of the control (default is the previously used height)."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUISetCursor":{"documentation":"Sets the mouse cursor icon for a GUI window.","label":"GUISetCursor ( [cursorID [, override = 0 [, winhandle]]] )","params":[{"label":"cursorID","documentation":"**[optional]** Cursor Id."},{"label":"override","documentation":"**[optional]** Force the requested mouse cursor even when over controls (see below).    \\n&emsp;`$GUI_CURSOR_NOOVERRIDE` (`0`) = (default) Don\'t override a control\'s default mouse cursor.    \\n&emsp;`$GUI_CURSOR_OVERRIDE` (`1`) = override control\'s default mouse cursor.  \\n\\nConstants are defined in GUIConstantsEx.au3."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUISetFont":{"documentation":"Sets the default font for a GUI window.","label":"GUISetFont ( size [, weight [, attribute [, fontname [, winhandle [, quality]]]]] )","params":[{"label":"size","documentation":"Fontsize (default is 8.5)."},{"label":"weight","documentation":"**[optional]** The weight of the font in the range 0 through 1000. For example, 400 is normal and 700 is bold. If this value is zero, a default weight is used.  \\nThe following values are defined for convenience.  \\n&emsp;`$FW_DONTCARE` = `0` (Use the default font weight)    \\n&emsp;`$FW_THIN` = `100`    \\n&emsp;`$FW_EXTRALIGHT` = `200`    \\n&emsp;`$FW_LIGHT` = `300`    \\n&emsp;`$FW_NORMAL` = `400`    \\n&emsp;`$FW_MEDIUM` = `500`    \\n&emsp;`$FW_SEMIBOLD` = `600`    \\n&emsp;`$FW_BOLD` = `700`    \\n&emsp;`$FW_EXTRABOLD` = `800`    \\n&emsp;`$FW_HEAVY` = `900`  \\n\\nConstants are defined in FontConstants.au3."},{"label":"attribute","documentation":"**[optional]** Font attributes, which can be a combination of the following added together:    \\n&emsp;`$GUI_FONTNORMAL` (`0`) = Normal (Default)  \\n&emsp;`$GUI_FONTITALIC` (`2`) = Italic    \\n&emsp;`$GUI_FONTUNDER` (`4`) = Underlined    \\n&emsp;`$GUI_FONTSTRIKE` (`8`) = Strike  \\n\\nConstants are defined in GUIConstantsEx.au3."},{"label":"fontname","documentation":"**[optional]** Font to use. (OS default GUI font is used if the font is \\"\\" or is not found)."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by GUICreate() (default is the previously used window)."},{"label":"quality","documentation":"**[optional]** Font quality to select. The following qualities are accepted:    \\n&emsp;`$DEFAULT_QUALITY` (`0`) = Appearance of the font does not matter.    \\n&emsp;`$DRAFT_QUALITY` (`1`) = Appearance of the font is less important than when `$PROOF_QUALITY` is used. For GDI raster fonts, scaling is enabled, which means that more font sizes are available, but the quality may be lower. Bold, italic, underline, and strikeout fonts are synthesized if necessary.    \\n&emsp;`$PROOF_QUALITY` (`2`) = (default) Character quality of the font is more important than exact matching of the logical-font attributes. For GDI raster fonts, scaling is disabled and the font closest in size is chosen. Although the chosen font size may not be mapped exactly when `$PROOF_QUALITY` is used, the quality of the font is high and there is no distortion of appearance. Bold, italic, underline, and strikeout fonts are synthesized if necessary.    \\n&emsp;`$NONANTIALIASED_QUALITY` (`3`) = Font is never antialiased.    \\n&emsp;`$ANTIALIASED_QUALITY` (`4`) = Font is always antialiased if the font supports it and the size of the font is not too small or too large.    \\n&emsp;`$CLEARTYPE_QUALITY` (`5`) = If set, text is rendered (when possible) using ClearType antialiasing method. See the remarks on the msdn page for LOGFONT for details about when cleartype is not available.  \\nIf neither `$ANTIALIASED_QUALITY` nor `$NONANTIALIASED_QUALITY` is selected, the font is antialiased only if the user chooses smooth screen fonts in Control Panel.  \\nConstants are defined in FontConstants.au3"}]},"GUISetHelp":{"documentation":"Sets an executable file that will be run when F1 is pressed.","label":"GUISetHelp ( helpfile [, winhandle] )","params":[{"label":"helpfile","documentation":"file that will be run if F1 is pressed when the GUI is active."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUISetIcon":{"documentation":"Sets the icon used in a GUI window.","label":"GUISetIcon ( iconfile [, iconID [, winhandle]] )","params":[{"label":"iconfile","documentation":"used to display the icon in the title area."},{"label":"iconID","documentation":"**[optional]** The ID of the icon in the iconfile. (Default is -1)."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUISetOnEvent":{"documentation":"Defines a user function to be called when a system button is clicked.","label":"GUISetOnEvent ( specialID, \\"function\\" [, winhandle] )","params":[{"label":"specialID","documentation":"See the Special ID table."},{"label":"function","documentation":"The name of the user function to call."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUISetState":{"documentation":"Changes the state of a GUI window.","label":"GUISetState ( [flag [, winhandle]] )","params":[{"label":"flag","documentation":"**[optional]**  \\n&emsp;`@SW_SHOW` = Shows a previously hidden window (default)    \\n&emsp;`@SW_HIDE` = Hide window    \\n&emsp;`@SW_MINIMIZE` = Minimize window    \\n&emsp;`@SW_MAXIMIZE` = Maximize window    \\n&emsp;`@SW_RESTORE` = Undoes a window minimization    \\n&emsp;`@SW_DISABLE` = Disables the window    \\n&emsp;`@SW_ENABLE` = Enables the window    \\n&emsp;`@SW_LOCK` = Lock the window to avoid repainting.    \\n&emsp;`@SW_UNLOCK` = Unlock windows to allow painting.    \\n&emsp;`@SW_SHOWDEFAULT` - Sets the show state based on the SW_ flag specified in the STARTUPINFO structure    \\n&emsp;`@SW_SHOWMAXIMIZED` - Activates the window and displays it as a maximized window    \\n&emsp;`@SW_SHOWMINIMIZED` - Activates the window and displays it as a minimized window    \\n&emsp;`@SW_SHOWMINNOACTIVE` - Displays the window as a minimized window    \\n&emsp;`@SW_SHOWNA` - Displays the window in its current state    \\n&emsp;`@SW_SHOWNOACTIVATE` - Displays a window in its most recent size and position    \\n&emsp;`@SW_SHOWNORMAL` - Activates and displays a window"},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUISetStyle":{"documentation":"Changes the styles of a GUI window.","label":"GUISetStyle ( style [, exStyle [, winhandle]] )","params":[{"label":"style","documentation":"defines the style of the window. See GUI Control Styles Appendix.  \\n\\nUse -1 to leave it unchanged."},{"label":"exStyle","documentation":"**[optional]** defines the extended style of the window. See the Extended Style Table. -1 is the default.  \\nUse -1 to leave it unchanged."},{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUIStartGroup":{"documentation":"Defines that any subsequent controls that are created will be \\"grouped\\" together.","label":"GUIStartGroup ( [winhandle] )","params":[{"label":"winhandle","documentation":"**[optional]** Windows handle as returned by `GUICreate()` (default is the previously used window)."}]},"GUISwitch":{"documentation":"Switches the current window used for GUI functions.","label":"GUISwitch ( winhandle [, tabitemID] )","params":[{"label":"winhandle","documentation":"The handle of the window to switch to."},{"label":"tabitemID","documentation":"**[optional]** controlID of the tabitem control to be selected."}]},"Hex":{"documentation":"Returns a string representation of an integer or of a binary type converted to hexadecimal.","label":"Hex ( expression [, length] )","params":[{"label":"expression","documentation":"The expression to convert."},{"label":"length","documentation":"**[optional]** Number of characters to be returned for integer.  \\nCharacters are truncated from the left-hand side if length is too small.  \\nThis parameter is ignored if the data is binary data."}]},"HotKeySet":{"documentation":"Sets a hotkey that calls a user function.","label":"HotKeySet ( \\"key\\" [, \\"function\\"] )","params":[{"label":"key","documentation":"The key combination to use as the hotkey. Same format as `Send()`."},{"label":"function","documentation":"**[optional]** The name of the function to call when the key is pressed. Not specifying this parameter will unset a previous hotkey."}]},"HttpSetProxy":{"documentation":"Sets the internet proxy to use for http access.","label":"HttpSetProxy ( mode = 0 [, \\"proxy:port\\" [, \\"username\\" [, \\"password\\"]]] )","params":[{"label":"mode","documentation":"The proxy mode to use:    \\n&emsp;`$PROXY_IE` (`0`) = (default) Use current Internet Explorer settings for proxy.    \\n&emsp;`$PROXY_NONE` (`1`) = Use no proxy (direct access)    \\n&emsp;`$PROXY_SPECIFIED` (`2`) = Use the proxy specified  \\n\\nConstants are deined in \\"AutoItConstants.au3\\"."},{"label":"proxy:port","documentation":"**[optional]** The address and port of the proxy to use."},{"label":"username","documentation":"**[optional]** If required, the username for the proxy"},{"label":"password","documentation":"**[optional]** If required, the password for the proxy"}]},"HttpSetUserAgent":{"documentation":"Sets the HTTP user-agent string which is sent with all Inet requests.","label":"HttpSetUserAgent ( \\"user agent\\" )","params":[{"label":"user agent","documentation":"The string to set as the user-agent. The default user-agent is \\"AutoIt\\". Passing an empty string will reset the user-agent back to the default."}]},"HWnd":{"documentation":"Converts an expression into an HWND handle.","label":"HWnd ( expression )","params":[{"label":"expression","documentation":"An expression to convert into an HWND handle."}]},"InetClose":{"documentation":"Closes a handle returned from InetGet().","label":"InetClose ( handle )","params":[{"label":"handle","documentation":"A handle return from `InetGet()`."}]},"InetGet":{"documentation":"Downloads a file from the internet using the HTTP, HTTPS or FTP protocol.","label":"InetGet ( \\"URL\\", \\"filename\\" [, options = 0 [, background = 0]] )","params":[{"label":"URL","documentation":"URL of the file to download."},{"label":"filename","documentation":"Local filename to download to."},{"label":"options","documentation":"**[optional]**  \\n&emsp;`$INET_LOCALCACHE `(`0`) = Get the file from local cache if available (default).    \\n&emsp;`$INET_FORCERELOAD` (`1`) = Forces a reload from the remote site.    \\n&emsp;`$INET_IGNORESSL` (`2`) = Ignore all SSL errors (with HTTPS connections).    \\n&emsp;`$INET_ASCIITRANSFER` (`4`) = Use ASCII when transferring files with the FTP protocol (Can not be combined with flag `$INET_BINARYTRANSFER (8)`).    \\n&emsp;`$INET_BINARYTRANSFER` (`8`) = Use BINARY when transferring files with the FTP protocol (Can not be combined with flag `$INET_ASCIITRANSFER (4)`). This is the default transfer mode if none are provided.    \\n&emsp;`$INET_FORCEBYPASS` (`16`) = By-pass forcing the connection online.  \\n\\nConstants are defined in InetConstants.au3."},{"label":"background","documentation":"**[optional]**    \\n&emsp;`$INET_DOWNLOADWAIT` (`0`) = Wait until the download is complete before continuing (default).    \\n&emsp;`$INET_DOWNLOADBACKGROUND` (`1`) = return immediately and download in the background.  \\n\\nConstants are defined in InetConstants.au3"}]},"InetGetInfo":{"documentation":"Returns detailed data for a handle returned from InetGet().","label":"InetGetInfo ( [handle [, index = -1]] )","params":[{"label":"handle","documentation":"**[optional]** A handle return from `InetGet()`."},{"label":"index","documentation":"**[optional]** The index for the data to retrieve. If this value is -1 an array containing all of the below data will be returned.    \\n&emsp;`$INET_DOWNLOADREAD` (`0`) - Bytes read so far (this is updated while the download progresses).    \\n&emsp;`$INET_DOWNLOADSIZE` (`1`) - The size of the download in bytes (this may not always be present).    \\n&emsp;`$INET_DOWNLOADCOMPLETE` (`2`) - Set to True if the download is complete, False if the download is still ongoing.    \\n&emsp;`$INET_DOWNLOADSUCCESS` (`3`) - True if the download was successful. If this is False then the next data member will be non-zero.    \\n&emsp;`$INET_DOWNLOADERROR` (`4`) - The error value for the download. The value itself is arbitrary. Testing that the value is non-zero is sufficient for determining if an error occurred.    \\n&emsp;`$INET_DOWNLOADEXTENDED` (`5`) - The extended value for the download. The value is arbitrary and is primarily only useful to the AutoIt developers.  \\n\\nConstants are defined in InetConstants.au3."}]},"InetGetSize":{"documentation":"Returns the size (in bytes) of a file located on the internet.","label":"InetGetSize ( \\"URL\\" [, options = 0] )","params":[{"label":"URL","documentation":"URL of the file to download."},{"label":"options","documentation":"**[optional]**    \\n&emsp;`$INET_LOCALCACHE` (`0`) = Get the file from local cache if available (default).    \\n&emsp;`$INET_FORCERELOAD` (`1`) = Forces a reload from the remote site.    \\n&emsp;`$INET_IGNORESSL` (`2`) = Ignore all SSL errors (with HTTPS connections).    \\n&emsp;`$INET_ASCIITRANSFER` (`4`) = Use ASCII when transferring files with the FTP protocol (Can not be combined with flag `$INET_BINARYTRANSFER` (`8`)).    \\n&emsp;`$INET_BINARYTRANSFER` (`8`) = Use BINARY when transferring files with the FTP protocol (Can not be combined with flag `$INET_ASCIITRANSFER` (`4`)). This is the default transfer mode if none are provided.  \\n\\nConstants are defined in InetConstants.au3."}]},"InetRead":{"documentation":"Downloads a file from the internet using the HTTP, HTTPS or FTP protocol.","label":"InetRead ( \\"URL\\" [, options = 0] )","params":[{"label":"URL","documentation":"URL of the file to download."},{"label":"options","documentation":"**[optional]**    \\n&emsp;`$INET_LOCALCACHE` (`0`) = Get the file from local cache if available (default).    \\n&emsp;`$INET_FORCERELOAD` (`1`) = Forces a reload from the remote site.    \\n&emsp;`$INET_IGNORESSL` (`2`) = Ignore all SSL errors (with HTTPS connections).    \\n&emsp;`$INET_ASCIITRANSFER` (`4`) = Use ASCII when transferring files with the FTP protocol (Can not be combined with flag `$INET_BINARYTRANSFER` (`8`)).    \\n&emsp;`$INET_BINARYTRANSFER` (`8`) = Use BINARY when transferring files with the FTP protocol (Can not be combined with flag `$INET_ASCIITRANSFER` (`4`)). This is the default transfer mode if none are provided.    \\n&emsp;`$INET_FORCEBYPASS` (`16`) = By-pass forcing the connection online.  \\n\\nConstants are defined in InetConstants.au3."}]},"IniDelete":{"documentation":"Deletes a value from a standard format .ini file.","label":"IniDelete ( \\"filename\\", \\"section\\" [, \\"key\\"] )","params":[{"label":"filename","documentation":"The filename of the .ini file."},{"label":"section","documentation":"The section name in the .ini file."},{"label":"key","documentation":"**[optional]** The key name in the .ini file to delete. If the key name is not given the entire section is deleted. The Default keyword may also be used which will cause the section to be deleted."}]},"IniRead":{"documentation":"Reads a value from a standard format .ini file.","label":"IniRead ( \\"filename\\", \\"section\\", \\"key\\", \\"default\\" )","params":[{"label":"filename","documentation":"The filename of the .ini file."},{"label":"section","documentation":"The section name in the .ini file."},{"label":"key","documentation":"The key name in the .ini file."},{"label":"default","documentation":"The default value to return if the requested key is not found."}]},"IniReadSection":{"documentation":"Reads all key/value pairs from a section in a standard format .ini file.","label":"IniReadSection ( \\"filename\\", \\"section\\" )","params":[{"label":"filename","documentation":"The filename of the .ini file."},{"label":"section","documentation":"The section name in the .ini file."}]},"IniReadSectionNames":{"documentation":"Reads all sections in a standard format .ini file.","label":"IniReadSectionNames ( \\"filename\\" )","params":[{"label":"filename","documentation":"The filename of the .ini file."}]},"IniRenameSection":{"documentation":"Renames a section in a standard format .ini file.","label":"IniRenameSection ( \\"filename\\", \\"section\\", \\"new section\\" [, flag = 0] )","params":[{"label":"filename","documentation":"The filename of the .ini file."},{"label":"section","documentation":"The section name in the .ini file."},{"label":"new section","documentation":"The new section name."},{"label":"flag","documentation":"**[optional]**  \\n&emsp;`$FC_NOOVERWRITE` (`0`) = (default) Fail if \\"new section\\" already exists.  \\n&emsp;`$FC_OVERWRITE` (`1`) = Overwrite \\"new section\\". This will erase any existing keys in \\"new section\\".  \\n\\nConstants are defined in FileConstants.au3."}]},"IniWrite":{"documentation":"Writes a value to a standard format .ini file.","label":"IniWrite ( \\"filename\\", \\"section\\", \\"key\\", \\"value\\" )","params":[{"label":"filename","documentation":"The filename of the .ini file."},{"label":"section","documentation":"The section name in the .ini file."},{"label":"key","documentation":"The key name in the .ini file."},{"label":"value","documentation":"The value to write/change."}]},"IniWriteSection":{"documentation":"Writes a section to a standard format .ini file.","label":"IniWriteSection ( \\"filename\\", \\"section\\", \\"data\\" [, index = 1] )","params":[{"label":"filename","documentation":"The filename of the .ini file."},{"label":"section","documentation":"The section name in the .ini file."},{"label":"data","documentation":"The data to write. The data can either be a string or an array. If the data is a string, then each key=value pair must be delimited by `@LF`. If the data is an array, the array must be 2-dimensional and the second dimension must be 2 elements."},{"label":"index","documentation":"**[optional]** If an array is passed as data, this specifies the index to start writing from. By default, this is 1 so that the return value of `IniReadSection()` can be used immediately. For manually created arrays, this value may need to be different depending on how the array was created. This parameter is ignored if a string is passed as data."}]},"InputBox":{"documentation":"Displays an input box to ask the user to enter a string.","label":"InputBox ( \\"title\\", \\"prompt\\" [, \\"default\\" [, \\"password char\\" [, width = -1 [, height = -1 [, left = Default [, top = Default [, timeout = 0 [, hwnd]]]]]]]] )","params":[{"label":"title","documentation":"The title of the input box."},{"label":"prompt","documentation":"A message to the user indicating what kind of input is expected."},{"label":"default","documentation":"**[optional]** The value that the input box starts with."},{"label":"password char","documentation":"**[optional]** The character to replace all typed characters with in the display. If you want the actual typed character to appear, define with an empty string (\\"\\") (default) or a space for the first character. If you provide a multi-character string, only the first character is used for character masking. There are special meanings for the second and subsequent characters."},{"label":"width","documentation":"**[optional]** The width of the window."},{"label":"height","documentation":"**[optional]** The height of the window."},{"label":"left","documentation":"**[optional]** The left side of the input box. By default, the box is centered."},{"label":"top","documentation":"**[optional]** The top of the input box. By default, the box is centered."},{"label":"timeout","documentation":"**[optional]** How many seconds to wait before automatically canceling the InputBox()."},{"label":"hwnd","documentation":"**[optional]** The window handle to use as the parent for this dialog."}]},"Int":{"documentation":"Returns the integer (whole number) representation of an expression.","label":"Int ( expression [, flag = 0] )","params":[{"label":"expression","documentation":"An expression to convert into an integer."},{"label":"flag","documentation":"**[optional]** Defines behavior.  \\nCan be one of the following:  \\n&emsp;`$NUMBER_AUTO` (`0`) = (default) the result is auto-sized integer.  \\n&emsp;`$NUMBER_32BIT` (`1`) = string is interpreted as a 32bit integer  \\n&emsp;`$NUMBER_64BIT` (`2`) = string is interpreted as a 64bit integer.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"IsAdmin":{"documentation":"Checks if the current user has full administrator privileges.","label":"IsAdmin (  )","params":[]},"IsArray":{"documentation":"Checks if a variable is an array type.","label":"IsArray ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"IsBinary":{"documentation":"Checks if a variable or expression is a binary type.","label":"IsBinary ( expression )","params":[{"label":"expression","documentation":"The variable or expression to check."}]},"IsBool":{"documentation":"Checks if a variable\'s base type is boolean.","label":"IsBool ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"IsDeclared":{"documentation":"Check if a variable has been declared.","label":"IsDeclared ( expression )","params":[{"label":"expression","documentation":"string representing name of the variable to be checked."}]},"IsDllStruct":{"documentation":"Checks if a variable is a DllStruct type.","label":"IsDllStruct ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"IsFloat":{"documentation":"Checks if the value of a variable or expression has a fractional component.","label":"IsFloat ( variable )","params":[{"label":"variable","documentation":"The variable or expression to check."}]},"IsFunc":{"documentation":"Checks if a variable or expression is a function type.","label":"IsFunc ( expression )","params":[{"label":"expression","documentation":"The variable or expression to check."}]},"IsHWnd":{"documentation":"Checks if a variable\'s base type is a pointer and window handle.","label":"IsHWnd ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"IsInt":{"documentation":"Checks if the value of a variable or expression has no fractional component.","label":"IsInt ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"IsKeyword":{"documentation":"Checks if a variable is a keyword (for example, Default).","label":"IsKeyword ( variable )","params":[{"label":"variable","documentation":"The variable to check."}]},"IsMap":{"documentation":"Checks if a variables is a Map type.","label":"IsMap ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"IsNumber":{"documentation":"Checks if a variable\'s base type is numeric.","label":"IsNumber ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"IsObj":{"documentation":"Checks if a variable or expression is an object type.","label":"IsObj ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"IsPtr":{"documentation":"Checks if a variable\'s base type is a pointer.","label":"IsPtr ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"IsString":{"documentation":"Checks if a variable is a string type.","label":"IsString ( variable )","params":[{"label":"variable","documentation":"The variable/expression to check."}]},"Log":{"documentation":"Calculates the natural logarithm of a number.","label":"Log ( expression )","params":[{"label":"expression","documentation":"Any positive number."}]},"MapAppend":{"documentation":"Add an element to a Map variable.","label":"MapAppend ( map, value )","params":[{"label":"map","documentation":"An existing Map."},{"label":"value","documentation":"The value to add."}]},"MapExists":{"documentation":"Determine whether a key exists within a Map.","label":"MapExists ( map, key )","params":[{"label":"map","documentation":"An existing Map."},{"label":"key","documentation":"The key to check."}]},"MapKeys":{"documentation":"Returns an array holding the keys within a Map.","label":"MapKeys ( map )","params":[{"label":"map","documentation":"An existing Map."}]},"MapRemove":{"documentation":"Remove a key and its associated value from a Map.","label":"MapRemove ( map, key )","params":[{"label":"map","documentation":"An existing Map."},{"label":"key","documentation":"The key to remove."}]},"MemGetStats":{"documentation":"Retrieves memory related information.","label":"MemGetStats (  )","params":[]},"Mod":{"documentation":"Performs the modulus operation.","label":"Mod ( value1, value2 )","params":[{"label":"value1","documentation":"The dividend."},{"label":"value2","documentation":"The divisor."}]},"MouseClick":{"documentation":"Perform a mouse click operation.","label":"MouseClick ( \\"button\\" [, x, y [, clicks = 1 [, speed = 10]]] )","params":[{"label":"button","documentation":"The button to click:    \\n&emsp;`$MOUSE_CLICK_RIGHT` (\\"right\\")    \\n&emsp;`$MOUSE_CLICK_LEFT` (\\"left\\")    \\n&emsp;`$MOUSE_CLICK_MIDDLE` (\\"middle\\")    \\n&emsp;`$MOUSE_CLICK_MAIN` (\\"main\\")    \\n&emsp;`$MOUSE_CLICK_MENU` (\\"menu\\")    \\n&emsp;`$MOUSE_CLICK_PRIMARY` (\\"primary\\")    \\n&emsp;`$MOUSE_CLICK_SECONDARY` (\\"secondary\\")  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."},{"label":"x, y","documentation":"**[optional]** The x/y coordinates to move the mouse to. If no x and y coords are given, the current position is used (default)."},{"label":"clicks","documentation":"**[optional]** The number of times to click the mouse. Default is 1."},{"label":"speed","documentation":"**[optional]** the speed to move the mouse in the range 1 (fastest) to 100 (slowest). A speed of 0 will move the mouse instantly. Default speed is 10."}]},"MouseClickDrag":{"documentation":"Perform a mouse click and drag operation.","label":"MouseClickDrag ( \\"button\\", x1, y1, x2, y2 [, speed = 10] )","params":[{"label":"button","documentation":"The button to click:    \\n&emsp;`$MOUSE_CLICK_RIGHT` (\\"right\\")    \\n&emsp;`$MOUSE_CLICK_LEFT` (\\"left\\")    \\n&emsp;`$MOUSE_CLICK_MIDDLE` (\\"middle\\")    \\n&emsp;`$MOUSE_CLICK_MAIN` (\\"main\\")    \\n&emsp;`$MOUSE_CLICK_MENU` (\\"menu\\")    \\n&emsp;`$MOUSE_CLICK_PRIMARY` (\\"primary\\")    \\n&emsp;`$MOUSE_CLICK_SECONDARY` (\\"secondary\\")  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."},{"label":"x1, y1","documentation":"The x/y coords to start the drag operation from."},{"label":"x2, y2","documentation":"The x/y coords to end the drag operation at."},{"label":"speed","documentation":"**[optional]** the speed to move the mouse in the range 1 (fastest) to 100 (slowest). A speed of 0 will move the mouse instantly. Default speed is 10."}]},"MouseDown":{"documentation":"Perform a mouse down event at the current mouse position.","label":"MouseDown ( \\"button\\" )","params":[{"label":"button","documentation":"The button to click:    \\n&emsp;`$MOUSE_CLICK_RIGHT` (\\"right\\")    \\n&emsp;`$MOUSE_CLICK_MIDDLE` (\\"middle\\")    \\n&emsp;`$MOUSE_CLICK_MAIN` (\\"main\\")    \\n&emsp;`$MOUSE_CLICK_MENU` (\\"menu\\")    \\n&emsp;`$MOUSE_CLICK_PRIMARY` (\\"primary\\")    \\n&emsp;`$MOUSE_CLICK_SECONDARY` (\\"secondary\\")  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"MouseGetCursor":{"documentation":"Returns the cursor ID Number for the current Mouse Cursor.","label":"MouseGetCursor (  )","params":[]},"MouseGetPos":{"documentation":"Retrieves the current position of the mouse cursor.","label":"MouseGetPos ( [dimension] )","params":[{"label":"dimension","documentation":"**[optional]** argument that determines what the return value will be."}]},"MouseMove":{"documentation":"Moves the mouse pointer.","label":"MouseMove ( x, y [, speed = 10] )","params":[{"label":"x","documentation":"The screen x coordinate to move the mouse to."},{"label":"y","documentation":"The screen y coordinate to move the mouse to."},{"label":"speed","documentation":"**[optional]** the speed to move the mouse in the range 1 (fastest) to 100 (slowest). A speed of 0 will move the mouse instantly. Default speed is 10."}]},"MouseUp":{"documentation":"Perform a mouse up event at the current mouse position.","label":"MouseUp ( \\"button\\" )","params":[{"label":"button","documentation":"The button to click:    \\n&emsp;`$MOUSE_CLICK_RIGHT` (\\"right\\")    \\n&emsp;`$MOUSE_CLICK_MIDDLE` (\\"middle\\")    \\n&emsp;`$MOUSE_CLICK_MAIN` (\\"main\\")    \\n&emsp;`$MOUSE_CLICK_MENU` (\\"menu\\")    \\n&emsp;`$MOUSE_CLICK_PRIMARY` (\\"primary\\")    \\n&emsp;`$MOUSE_CLICK_SECONDARY` (\\"secondary\\")  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"MouseWheel":{"documentation":"Moves the mouse wheel up or down.","label":"MouseWheel ( \\"direction\\" [, clicks = 1] )","params":[{"label":"direction","documentation":"The direction to move the wheel:    \\n&emsp;`$MOUSE_WHEEL_UP `(\\"up\\")    \\n&emsp;`$MOUSE_WHEEL_DOWN` (\\"down\\")  \\n\\nConstants are defined in \\"AuoItConstants.au3\\"."},{"label":"clicks","documentation":"**[optional]** The number of times to move the wheel. Default is 1."}]},"MsgBox":{"documentation":"Displays a simple message box with optional timeout.","label":"MsgBox ( flag, \\"title\\", \\"text\\" [, timeout = 0 [, hwnd]] )","params":[{"label":"flag","documentation":"The flag indicates the type of message box and the possible button combinations."},{"label":"title","documentation":"The title of the message box."},{"label":"text","documentation":"The text of the message box."},{"label":"timeout","documentation":"**[optional]** Timeout in seconds. After the timeout has elapsed the message box will be automatically closed. The default is 0, which is no timeout."},{"label":"hwnd","documentation":"**[optional]** The window handle to use as the parent for this dialog."}]},"Number":{"documentation":"Returns the numeric representation of an expression.","label":"Number ( expression [, flag = 0] )","params":[{"label":"expression","documentation":"An expression to convert into a number."},{"label":"flag","documentation":"**[optional]** Defines behavior.  \\nCan be one of the following:  \\n&emsp;`$NUMBER_AUTO` (`0`) = (default) the result is auto-sized integer.  \\n&emsp;`$NUMBER_32BIT` (`1`) = the result is 32bit integer.  \\n&emsp;`$NUMBER_64BIT` (`2`) = the result is 64bit integer.  \\n&emsp;`$NUMBER_DOUBLE` (`3`) = the result is double.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"ObjCreate":{"documentation":"Creates a reference to a COM object from the given classname.","label":"ObjCreate ( \\"classname\\" [, \\"servername\\" [, \\"username\\" [, \\"password\\"]]] )","params":[{"label":"classname","documentation":"The class of the object in the following format: \\"appname.objectype\\"It can also be a string representation of the CLSID."},{"label":"servername","documentation":"**[optional]** name of a remote computer from which the object must be obtained."},{"label":"username","documentation":"**[optional]** name of a usercode on the remote computer.You have to enter this in the format \\"computer\\\\usercode\\" or \\"domain\\\\usercode\\"."},{"label":"password","documentation":"**[optional]** password for the usercode on the remote computer."}]},"ObjCreateInterface":{"documentation":"Creates a reference to an object from the given classname/object pointer, interface identifier and description string.","label":"ObjCreateInterface ( \\"CLSID\\" , \\"IID\\" [, \\"interface_description\\",[flag = True]] )","params":[{"label":"CLSID","documentation":"Class identifier or object pointer. If this is a class identifier it can be in either ProgID or the string representation of the CLSID."},{"label":"IID","documentation":"String representation of interface identifier."},{"label":"interface_description","documentation":"**[optional]** String describing v-table of the object. Use keyword Default to access IDispatch for dual interfaces."},{"label":"flag","documentation":"**[optional]** Default value is True meaning the object interface inherits from IUnknown."}]},"ObjEvent":{"documentation":"Handles incoming events from the given Object.","label":"ObjEvent ( $ObjectVar, \\"functionprefix\\" [, \\"interface name\\"] )","params":[{"label":"$ObjectVar","documentation":"A variable containing an Object from which you want to receive events"},{"label":"\\"functionprefix\\"","documentation":"The prefix of the functions you define to handle receiving events.  \\nThe prefix is appended by the Objects method name."},{"label":"\\"interface name\\"","documentation":"**[optional]** name of an Event interface to use.  \\nNote: It must be a supported as outgoing for the Object AND it must be of type DISPATCH."}]},"ObjGet":{"documentation":"Retrieves a reference to a COM object from an existing process or filename.","label":"ObjGet ( \\"filename\\" [, \\"classname\\" [, instance]] )","params":[{"label":"filename","documentation":"The full path and name to the file containing the object."},{"label":"classname","documentation":"**[optional]** Class identifier. Can be in either ProgID or the string representation of the CLSID."},{"label":"instance","documentation":"**[optional]** Instance of the object for ROT objects of the same (co)class."}]},"ObjName":{"documentation":"Returns the name or interface description of an Object.","label":"ObjName ( $Objectvariable [, Flag = 1] )","params":[{"label":"$Objectvariable","documentation":"A variable containing an Object whose name you want to retrieve"},{"label":"Flag","documentation":"**[optional]**    \\n&emsp;`$OBJ_NAME` (`1`) = (default) The name of the Object    \\n&emsp;`$OBJ_STRING` (`2`) = Description string of the Object    \\n&emsp;`$OBJ_PROGID` (`3`) = The ProgID of the Object    \\n&emsp;`$OBJ_FILE` (`4`) = The file that is associated with the object in the Registry    \\n&emsp;`$OBJ_MODULE` (`5`) = Module name in which the object runs (WIN XP And above). Marshaller for non-inproc objects.    \\n&emsp;`$OBJ_CLSID` (`6`) = CLSID of the object\'s coclass    \\n&emsp;`$OBJ_IID` (`7`) = IID of the object\'s interface.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"OnAutoItExitRegister":{"documentation":"Registers a function to be called when AutoIt exits.","label":"OnAutoItExitRegister ( \\"function\\" )","params":[{"label":"function","documentation":"The name of the user function to call."}]},"OnAutoItExitUnRegister":{"documentation":"UnRegisters a function that was called when AutoIt exits.","label":"OnAutoItExitUnRegister ( \\"function\\" )","params":[{"label":"function","documentation":"The name of the user function that was called."}]},"Ping":{"documentation":"Pings a host and returns the roundtrip-time.","label":"Ping ( \\"address/hostname\\" [, timeout = 4000] )","params":[{"label":"address/hostname","documentation":"Can be i.e. \\"www.autoitscript.com\\" or \\"87.106.244.38\\"."},{"label":"timeout","documentation":"**[optional]** Is the time to wait for an answer in milliseconds (default is 4000)."}]},"PixelChecksum":{"documentation":"Generates a checksum for a region of pixels.","label":"PixelChecksum ( left, top, right, bottom [, step = 1 [, hwnd [, mode = 0]]] )","params":[{"label":"left","documentation":"left coordinate of rectangle."},{"label":"top","documentation":"top coordinate of rectangle."},{"label":"right","documentation":"right coordinate of rectangle."},{"label":"bottom","documentation":"bottom coordinate of rectangle."},{"label":"step","documentation":"**[optional]** Instead of checksumming each pixel use a value larger than 1 to skip pixels (for speed). E.g. A value of 2 will only check every other pixel. Default is 1. **It is not recommended to use a step value greater than 1.**"},{"label":"hwnd","documentation":"**[optional]** Window handle to be used. Default is the desktop window."},{"label":"mode","documentation":"**[optional]** default 0 ADLER checksum, 1 CRC32 Checksum."}]},"PixelGetColor":{"documentation":"Returns a pixel color according to x,y pixel coordinates.","label":"PixelGetColor ( x , y [, hwnd] )","params":[{"label":"x","documentation":"x coordinate of pixel."},{"label":"y","documentation":"y coordinate of pixel."},{"label":"hwnd","documentation":"**[optional]** Window handle to be used. Default is the desktop window."}]},"PixelSearch":{"documentation":"Searches a rectangle of pixels for the pixel color provided.","label":"PixelSearch ( left, top, right, bottom, color [, shade-variation = 0 [, step = 1 [, hwnd]]] )","params":[{"label":"left","documentation":"left coordinate of rectangle."},{"label":"top","documentation":"top coordinate of rectangle."},{"label":"right","documentation":"right coordinate of rectangle."},{"label":"bottom","documentation":"bottom coordinate of rectangle."},{"label":"color","documentation":"Color value of pixel to find (in decimal or hex)."},{"label":"shade-variation","documentation":"**[optional]** A number between 0 and 255 to indicate the allowed number of shades of variation of the red, green, and blue components of the color. Default is 0 (exact match)."},{"label":"step","documentation":"**[optional]** Instead of searching each pixel use a value larger than 1 to skip pixels (for speed). E.g. A value of 2 will only check every other pixel. Default is 1. **It is not recommended to use a step value greater than 1.**"},{"label":"hwnd","documentation":"**[optional]** Window handle to be used. Default is the desktop window."}]},"ProcessClose":{"documentation":"Terminates a named process.","label":"ProcessClose ( \\"process\\" )","params":[{"label":"process","documentation":"The name or PID of the process to terminate."}]},"ProcessExists":{"documentation":"Checks to see if a specified process exists.","label":"ProcessExists ( \\"process\\" )","params":[{"label":"process","documentation":"The name or PID of the process to check."}]},"ProcessGetStats":{"documentation":"Returns an array about Memory or IO infos of a running process.","label":"ProcessGetStats ( [\\"process\\" [, type = 0]] )","params":[{"label":"process","documentation":"**[optional]** The name or PID of the process to get infos from. Default (-1) is the current process."},{"label":"type","documentation":"**[optional]**    \\n&emsp;`$PROCESS_STATS_MEMORY` (`0`) = (default) memory infos.    \\n&emsp;`$PROCESS_STATS_IO` (`1`) = IO infos.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"ProcessList":{"documentation":"Returns an array listing the currently running processes (names and PIDs).","label":"ProcessList ( [\\"name\\"] )","params":[{"label":"name","documentation":"**[optional]** If a name is given only processes of the same name will be returned."}]},"ProcessSetPriority":{"documentation":"Changes the priority of a process.","label":"ProcessSetPriority ( \\"process\\", priority )","params":[{"label":"process","documentation":"The name or PID of the process to check."},{"label":"priority","documentation":"A flag which determines what priority to set    \\n&emsp;`$PROCESS_LOW` (`0`) = Idle/Low    \\n&emsp;`$PROCESS_BELOWNORMAL` (`1`) = Below Normal    \\n&emsp;`$PROCESS_NORMAL` (`2`) = Normal    \\n&emsp;`$PROCESS_ABOVENORMAL` (`3`) = Above Normal    \\n&emsp;`$PROCESS_HIGH` (`4`) = High    \\n&emsp;`$PROCESS_REALTIME` (`5`) = Realtime (Use with caution, may make the system unstable)  \\n\\nConstants are define in \\"AutoItConstants.au3\\"."}]},"ProcessWait":{"documentation":"Pauses script execution until a given process exists.","label":"ProcessWait ( \\"process\\" [, timeout = 0] )","params":[{"label":"process","documentation":"The name of the process to check."},{"label":"timeout","documentation":"**[optional]** Specifies how long to wait (in seconds). Default is to wait indefinitely."}]},"ProcessWaitClose":{"documentation":"Pauses script execution until a given process does not exist.","label":"ProcessWaitClose ( \\"process\\" [, timeout = 0] )","params":[{"label":"process","documentation":"The name or PID of the process to check."},{"label":"timeout","documentation":"**[optional]** Specifies how long to wait (in seconds). Default is to wait indefinitely."}]},"ProgressOff":{"documentation":"Turns Progress window off.","label":"ProgressOff (  )","params":[]},"ProgressOn":{"documentation":"Creates a customizable progress bar window.","label":"ProgressOn ( \\"title\\", \\"maintext\\" [, \\"subtext\\" [, x pos [, y pos [, opt]]]] )","params":[{"label":"title","documentation":"Title for progress window."},{"label":"maintext","documentation":"Text for Main, Bold, Upper label."},{"label":"subtext","documentation":"**[optional]** text for Sub, Normal, Lower label. (default is blank)"},{"label":"x pos","documentation":"**[optional]** position from left (in pixels) of progress window. (default is centered)"},{"label":"y pos","documentation":"**[optional]** position from top (in pixels) of progress window. (default is centered)"},{"label":"opt","documentation":"**[optional]** Default is \'always on top/with title\'  \\nAdd up the following options you want:    \\n&emsp;`$DLG_NOTITLE` (`1`) = borderless, titleless window    \\n&emsp;`$DLG_NOTONTOP` (`2`) = Without \\"always on top\\" attribute    \\n&emsp;`$DLG_MOVEABLE` (`16`) = Window can be moved.  \\n\\nConstants are defined in AutoItConstants.au3"}]},"ProgressSet":{"documentation":"Sets the position and/or text of a previously created Progress bar window.","label":"ProgressSet ( percent [, \\"subtext\\" [, \\"maintext\\"]] )","params":[{"label":"percent","documentation":"Percentage (value between 0. and 100.) to set the progress bar at."},{"label":"subtext","documentation":"**[optional]** Set the text for the Sub, Normal, Lower label."},{"label":"maintext","documentation":"**[optional]** Set the text for the Main, Bold, Upper label."}]},"Ptr":{"documentation":"Converts an expression into a pointer variant.","label":"Ptr ( expression )","params":[{"label":"expression","documentation":"An expression to convert into a pointer variant."}]},"Random":{"documentation":"Generates a pseudo-random float-type number.","label":"Random ( [Min = 0 [, Max = 1 [, Flag = 0]]] )","params":[{"label":"Min","documentation":"**[optional]** The smallest number to be generated. The default is 0."},{"label":"Max","documentation":"**[optional]** The largest number to be generated. The default is 1."},{"label":"Flag","documentation":"**[optional]** If this is set to 1 then an integer result will be returned. Default is a floating point number."}]},"RegDelete":{"documentation":"Deletes a key or value from the registry.","label":"RegDelete ( \\"keyname\\" [, \\"valuename\\"] )","params":[{"label":"keyname","documentation":"The registry key to delete."},{"label":"valuename","documentation":"**[optional]** The valuename to delete."}]},"RegEnumKey":{"documentation":"Reads the name of a subkey according to its instance.","label":"RegEnumKey ( \\"keyname\\", instance )","params":[{"label":"keyname","documentation":"The registry key to read."},{"label":"instance","documentation":"The 1-based key instance to retrieve"}]},"RegEnumVal":{"documentation":"Reads the name of a value according to its instance.","label":"RegEnumVal ( \\"keyname\\", instance )","params":[{"label":"keyname","documentation":"The registry key to read."},{"label":"instance","documentation":"The 1-based value instance to retrieve"}]},"RegRead":{"documentation":"Reads a value from the registry.","label":"RegRead ( \\"keyname\\", \\"valuename\\" )","params":[{"label":"keyname","documentation":"The registry key to read."},{"label":"valuename","documentation":"The value to read."}]},"RegWrite":{"documentation":"Creates a key or value in the registry.","label":"RegWrite ( \\"keyname\\" [, \\"valuename\\", \\"type\\", value] )","params":[{"label":"keyname","documentation":"The registry key to write to. If no other parameters are specified this key will simply be created."},{"label":"valuename","documentation":"**[optional]** The valuename to write to."},{"label":"type","documentation":"**[optional]** Type of key to write: \\"REG_SZ\\", \\"REG_MULTI_SZ\\", \\"REG_EXPAND_SZ\\", \\"REG_DWORD\\", \\"REG_QWORD\\", or \\"REG_BINARY\\"."},{"label":"value","documentation":"**[optional]** The value to write."}]},"Round":{"documentation":"Returns a number rounded to a specified number of decimal places.","label":"Round ( expression [, decimalplaces] )","params":[{"label":"expression","documentation":"Any valid numeric expression."},{"label":"decimalplaces","documentation":"**[optional]** Number indicating how many places to the right of the decimal are included in the rounding. If omitted, Round returns an integer."}]},"Run":{"documentation":"Runs an external program.","label":"Run ( \\"program\\" [, \\"workingdir\\" [, show_flag [, opt_flag]]] )","params":[{"label":"program","documentation":"The full path of the program (EXE, BAT, COM, or PIF) to run."},{"label":"workingdir","documentation":"**[optional]** The working directory. Blank (\\"\\") uses the current working directory. This is not the path to the program."},{"label":"show_flag","documentation":"**[optional]** The \\"show\\" flag of the executed program:  \\n&emsp;`@SW_HIDE` = Hidden window (or Default keyword)  \\n&emsp;`@SW_MINIMIZE` = Minimized window  \\n&emsp;`@SW_MAXIMIZE` = Maximized window"},{"label":"opt_flag","documentation":"**[optional]** Controls various options related to how the parent and child process interact.  \\n&emsp;`$STDIN_CHILD` (`0x1`) = Provide a handle to the child\'s STDIN stream    \\n&emsp;`$STDOUT_CHILD` (`0x2`) = Provide a handle to the child\'s STDOUT stream    \\n&emsp;`$STDERR_CHILD` (`0x4`) = Provide a handle to the child\'s STDERR stream    \\n&emsp;`$STDERR_MERGED` (`0x8`) = Provides the same handle for STDOUT and STDERR. Implies both `$STDOUT_CHILD` and `$STDERR_CHILD`.    \\n&emsp;`$STDIO_INHERIT_PARENT` (`0x10`) = Provide the child with the parent\'s STDIO streams. \\nemsp;This flag can not be combined with any other STDIO flag. This flag is only useful when the parent is compiled as a Console application.    \\n&emsp;`$RUN_CREATE_NEW_CONSOLE` (`0x10000`) = The child console process should be created with it\'s own window instead of using the parent\'s window. This flag is only useful when the parent is compiled as a Console application.  \\n\\nConstants are defined in AutoItConstants.au3."}]},"RunAs":{"documentation":"Runs an external program under the context of a different user.","label":"RunAs ( \\"username\\", \\"domain\\", \\"password\\", logon_flag, \\"program\\" [, \\"workingdir\\" [, show_flag [, opt_flag]]] )","params":[{"label":"username","documentation":"The username to log on with."},{"label":"domain","documentation":"The domain to authenticate against."},{"label":"password","documentation":"The password for the user."},{"label":"logon_flag","documentation":"&emsp;`$RUN_LOGON_NOPROFILE` (`0`) - Interactive logon with no profile.    \\n&emsp;`$RUN_LOGON_PROFILE` (`1`) - Interactive logon with profile.    \\n&emsp;`$RUN_LOGON_NETWORK` (`2`) - Network credentials only.    \\n&emsp;`$RUN_LOGON_INHERIT` (`4`) - Inherit the calling process\'s environment instead of the user\'s environment.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."},{"label":"program","documentation":"The full path of the program (EXE, BAT, COM, or PIF) to run."},{"label":"workingdir","documentation":"**[optional]** The working directory. If not specified, then the value of `@SystemDir` will be used. This is not the path to the program."},{"label":"show_flag","documentation":"**[optional]** The \\"show\\" flag of the executed program:  \\n&emsp;`@SW_HIDE` = Hidden window (or Default keyword)  \\n&emsp;`@SW_MINIMIZE` = Minimized window  \\n&emsp;`@SW_MAXIMIZE` = Maximized window"},{"label":"opt_flag","documentation":"**[optional]** Controls various options related to how the parent and child process interact.  \\n&emsp;`$STDIN_CHILD` (`0x1`) = Provide a handle to the child\'s STDIN stream    \\n&emsp;`$STDOUT_CHILD` (`0x2`) = Provide a handle to the child\'s STDOUT stream    \\n&emsp;`$STDERR_CHILD` (`0x4`) = Provide a handle to the child\'s STDERR stream    \\n&emsp;`$STDERR_MERGED` (`0x8`) = Provides the same handle for STDOUT and STDERR. Implies both `$STDOUT_CHILD` and `$STDERR_CHILD`.    \\n&emsp;`$STDIO_INHERIT_PARENT` (`0x10`) = Provide the child with the parent\'s STDIO streams. \\nemsp;This flag can not be combined with any other STDIO flag. This flag is only useful when the parent is compiled as a Console application.    \\n&emsp;`$RUN_CREATE_NEW_CONSOLE` (`0x10000`) = The child console process should be created with it\'s own window instead of using the parent\'s window. This flag is only useful when the parent is compiled as a Console application.  \\n\\nConstants are defined in AutoItConstants.au3."}]},"RunAsWait":{"documentation":"Runs an external program under the context of a different user and pauses script execution until the program finishes.","label":"RunAsWait ( \\"username\\", \\"domain\\", \\"password\\", logon_flag, \\"program\\" [, \\"workingdir\\" [, show_flag [, opt_flag]]] )","params":[{"label":"username","documentation":"The username to log on with."},{"label":"domain","documentation":"The domain to authenticate against."},{"label":"password","documentation":"The password for the user."},{"label":"logon_flag","documentation":"&emsp;`$RUN_LOGON_NOPROFILE` (`0`) - Interactive logon with no profile.    \\n&emsp;`$RUN_LOGON_PROFILE` (`1`) - Interactive logon with profile.    \\n&emsp;`$RUN_LOGON_NETWORK` (`2`) - Network credentials only.    \\n&emsp;`$RUN_LOGON_INHERIT` (`4`) - Inherit the calling process\'s environment instead of the user\'s environment.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."},{"label":"program","documentation":"The full path of the program (EXE, BAT, COM, or PIF) to run."},{"label":"workingdir","documentation":"**[optional]** The working directory. If not specified, then the value of @SystemDir will be used. This is not the path to the program."},{"label":"show_flag","documentation":"**[optional]** The \\"show\\" flag of the executed program:  \\n&emsp;`@SW_HIDE` = Hidden window (or Default keyword)  \\n&emsp;`@SW_MINIMIZE` = Minimized window  \\n&emsp;`@SW_MAXIMIZE` = Maximized window"},{"label":"opt_flag","documentation":"**[optional]** Controls various options related to how the parent and child process interact.    \\n&emsp;`0x10000` (`$RUN_CREATE_NEW_CONSOLE`) = The child console process should be created with its own window instead of using the parents window. This flag is only useful when the parent is compiled as a Console application.  \\n\\nConstant is defined in AutoItConstants.au3"}]},"RunWait":{"documentation":"Runs an external program and pauses script execution until the program finishes.","label":"RunWait ( \\"program\\" [, \\"workingdir\\" [, show_flag [, opt_flag]]] )","params":[{"label":"program","documentation":"The full path of the program (EXE, BAT, COM, or PIF) to run."},{"label":"workingdir","documentation":"**[optional]** The working directory. Blank (\\"\\") uses the current working directory. This is not the path to the program."},{"label":"show_flag","documentation":"**[optional]** The \\"show\\" flag of the executed program:  \\n&emsp;`@SW_HIDE` = Hidden window (or Default keyword)  \\n&emsp;`@SW_MINIMIZE` = Minimized window  \\n&emsp;`@SW_MAXIMIZE` = Maximized window"},{"label":"opt_flag","documentation":"**[optional]** Controls various options related to how the parent and child process interact.    \\n&emsp;`0x10000` (`$RUN_CREATE_NEW_CONSOLE`) = The child console process should be created with its own window instead of using the parents window. This flag is only useful when the parent is compiled as a Console application.  \\n\\nConstant is defined in AutoItConstants.au3"}]},"Send":{"documentation":"Sends simulated keystrokes to the active window.","label":"Send ( \\"keys\\" [, flag = 0] )","params":[{"label":"keys","documentation":"The sequence of keys to send."},{"label":"flag","documentation":"**[optional]** Changes how \\"keys\\" is processed:    \\n&emsp;`$SEND_DEFAULT` (`0`) = Text contains special characters like + and ! to indicate SHIFT and ALT key-presses (default).    \\n&emsp;`$SEND_RAW` (`1`) = keys are sent raw.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"SendKeepActive":{"documentation":"Attempts to keep a specified window active during Send().","label":"SendKeepActive ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to activate. See Title special definition. Use a blank title to disable the function."},{"label":"text","documentation":"**[optional]** The text of the window. Default is an empty string. See Text special definition."}]},"SetError":{"documentation":"Manually set the value of the @error macro (and optionally @extended, and \\"Return Value\\").","label":"SetError ( code [, extended = 0 [, return value]] )","params":[{"label":"code","documentation":"The required value (integer) to set into the `@error` macro."},{"label":"extended","documentation":"**[optional]** The required value (integer) to set into the `@extended` macro. This sets the same macro as the `SetExtended()` function."},{"label":"return value","documentation":"**[optional]** The value to be returned by the function - if no parameter used the return value is undefined."}]},"SetExtended":{"documentation":"Manually set the value of the @extended macro.","label":"SetExtended ( code [, return value] )","params":[{"label":"code","documentation":"The required value (integer) to set into the @extended macro."},{"label":"return value","documentation":"**[optional]** The value to be returned by the function - if no parameter used the return value is undefined."}]},"ShellExecute":{"documentation":"Runs an external program using the ShellExecute API.","label":"ShellExecute ( \\"filename\\" [, \\"parameters\\" [, \\"workingdir\\" [, \\"verb\\" [, showflag]]]] )","params":[{"label":"filename","documentation":"The name of the file to run (EXE, .txt, .lnk, etc)."},{"label":"parameters","documentation":"**[optional]** Any parameters for the program. Blank (\\"\\") uses none."},{"label":"workingdir","documentation":"**[optional]** The working directory. Blank (\\"\\") uses the current working directory."},{"label":"verb","documentation":"**[optional]** The \\"verb\\" to use, common verbs include:    \\n&emsp;`$SHEX_OPEN` (\\"open\\") = Opens the file specified. The file can be an executable file, a document file, or a folder    \\n&emsp;`$SHEX_EDIT` (\\"edit\\") = Launches an editor and opens the document for editing. If \\"filename\\" is not a document file, the function will fail    \\n&emsp;`$SHEX_PRINT` (\\"print\\") = Prints the document file specified. If \\"filename\\" is not a document file, the function will fail    \\n&emsp;`$SHEX_PROPERTIES` (\\"properties\\") = Displays the file or folder\'s properties.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."},{"label":"showflag","documentation":"**[optional]** The \\"show\\" flag of the executed program:  \\n&emsp;`@SW_HIDE` = Hidden window  \\n&emsp;`@SW_MINIMIZE` = Minimized window  \\n&emsp;`@SW_MAXIMIZE` = Maximized window"}]},"ShellExecuteWait":{"documentation":"Runs an external program using the ShellExecute API and pauses script execution until it finishes.","label":"ShellExecuteWait ( \\"filename\\" [, \\"parameters\\" [, \\"workingdir\\" [, \\"verb\\" [, showflag]]]] )","params":[{"label":"filename","documentation":"The name of the file to run (EXE, .txt, .lnk, etc)."},{"label":"parameters","documentation":"**[optional]** Any parameters for the program. Blank (\\"\\") uses none."},{"label":"workingdir","documentation":"**[optional]** The working directory. Blank (\\"\\") uses the current working directory."},{"label":"verb","documentation":"**[optional]** The \\"verb\\" to use, common verbs include:    \\n&emsp;`$SHEX_OPEN` (\\"open\\") = Opens the file specified. The file can be an executable file, a document file, or a folder    \\n&emsp;`$SHEX_EDIT` (\\"edit\\") = Launches an editor and opens the document for editing. If \\"filename\\" is not a document file, the function will fail    \\n&emsp;`$SHEX_PRINT` (\\"print\\") = Prints the document file specified. If \\"filename\\" is not a document file, the function will fail    \\n&emsp;`$SHEX_PROPERTIES` (\\"properties\\") = Displays the file or folder\'s properties.  \\n**See remarks for more information on the default behavior when a verb is not specified.**  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."},{"label":"showflag","documentation":"**[optional]** The \\"show\\" flag of the executed program:  \\n&emsp;`@SW_HIDE` = Hidden window  \\n&emsp;`@SW_MINIMIZE` = Minimized window  \\n&emsp;`@SW_MAXIMIZE` = Maximized window"}]},"Shutdown":{"documentation":"Shuts down the system.","label":"Shutdown ( code )","params":[{"label":"code","documentation":"A combination of shutdown codes. See \\"remarks\\"."}]},"Sin":{"documentation":"Calculates the sine of a number.","label":"Sin ( expression )","params":[{"label":"expression","documentation":"Value in radians."}]},"Sleep":{"documentation":"Pause script execution.","label":"Sleep ( delay )","params":[{"label":"delay","documentation":"Amount of time to pause (in milliseconds)."}]},"SoundPlay":{"documentation":"Play a sound file.","label":"SoundPlay ( \\"filename\\" [, wait = 0] )","params":[{"label":"filename","documentation":"Name of the file to be played (typically a WAV or MP3)"},{"label":"wait","documentation":"**[optional]** This flag determines if the script should wait for the sound to finish before continuing:  \\n&emsp;`$SOUND_WAIT`(`1`) = wait until sound has finished  \\n&emsp;`$SOUND_NOWAIT`(`0`) = continue script while sound is playing (default)  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"SoundSetWaveVolume":{"documentation":"Sets the system wave volume by percent.","label":"SoundSetWaveVolume ( percent )","params":[{"label":"percent","documentation":"percentage number between 0 and 100"}]},"SplashImageOn":{"documentation":"Creates a customizable image popup window.","label":"SplashImageOn ( \\"title\\", \\"file\\" [, width [, height [, x pos [, y pos [, opt]]]]] )","params":[{"label":"title","documentation":"Title for splash window."},{"label":"file","documentation":"full path\\\\filename of image (BMP, GIF, or JPG)"},{"label":"width","documentation":"**[optional]** width of window in pixels. (default is 500)"},{"label":"height","documentation":"**[optional]** height of window in pixels. (default is 400)"},{"label":"x pos","documentation":"**[optional]** position from left (in pixels) of splash window. (default is centered)"},{"label":"y pos","documentation":"**[optional]** position from top (in pixels) of splash window. (default is centered)"},{"label":"opt","documentation":"**[optional]** Default is \'always on top/with title\'Add up the following options you want:    \\n&emsp;`$DLG_NOTITLE` (`1`) = borderless, titleless window    \\n&emsp;`$DLG_NOTONTOP` (`2`) = Without \\"always on top\\" attribute    \\n&emsp;`$DLG_MOVEABLE` (`16`) = Window can be moved.  \\n\\nConstants are defined in AutoItConstants.au3."}]},"SplashOff":{"documentation":"Turns SplashText or SplashImage off.","label":"SplashOff (  )","params":[]},"SplashTextOn":{"documentation":"Creates a customizable text popup window.","label":"SplashTextOn ( \\"title\\", \\"text\\" [, w = 500 [, h = 400 [, x pos [, y pos [, opt = 0 [, \\"fontname\\" [, fontsz = 12 [, fontwt]]]]]]]] )","params":[{"label":"title","documentation":"Title for splash window."},{"label":"text","documentation":"Text for splash window."},{"label":"w","documentation":"**[optional]** Width of window in pixels. (default 500)"},{"label":"h","documentation":"**[optional]** Height of window in pixels. (default 400)"},{"label":"x pos","documentation":"**[optional]** Position from left (in pixels) of splash window. (default is centered)"},{"label":"y pos","documentation":"**[optional]** Position from top (in pixels) of splash window. (default is centered)"},{"label":"opt","documentation":"**[optional]** Add them up - default is \'center justified/always on top/with title\'    \\n&emsp;`$DLG_CENTERONTOP` (`0`) = Center justified/always on top/with title (default)    \\n&emsp;`$DLG_NOTITLE` (`1`) = Thin bordered titleless window    \\n&emsp;`$DLG_NOTONTOP` (`2`) = Without \\"always on top\\" attribute    \\n&emsp;`$DLG_TEXTLEFT` (`4`) = Left justified text    \\n&emsp;`$DLG_TEXTRIGHT` (`8`) = Right justified text    \\n&emsp;`$DLG_MOVEABLE` (`16`) = Windows can be moved    \\n&emsp;`$DLG_TEXTVCENTER` (`32`) = Center text vertically.  \\n\\nConstants are defined in AutoItConstants.au3."},{"label":"fontname","documentation":"**[optional]** Name of the font to use. (OS default GUI font is used if the font is \\"\\" or is not found)"},{"label":"fontsz","documentation":"**[optional]** Font size. (default is 12; standard sizes are 6 8 9 10 11 12 14 16 18 20 22 24 26 28 36 48 72)"},{"label":"fontwt","documentation":"**[optional]** The weight of the font in the range 0 through 1000. For example, 400 is normal and 700 is bold. If this value is zero, a default weight is used.  \\nThe following values are defined for convenience.    \\n&emsp;`$FW_DONTCARE` (`0`) (Use the default font weight)    \\n&emsp;`$FW_THIN` (`100`)    \\n&emsp;`$FW_EXTRALIGHT` (`200`)    \\n&emsp;`$FW_LIGHT` (`300`)    \\n&emsp;`$FW_NORMAL` (`400`)    \\n&emsp;`$FW_MEDIUM` (`500`)    \\n&emsp;`$FW_SEMIBOLD` (`600`)    \\n&emsp;`$FW_BOLD` (`700`)    \\n&emsp;`$FW_EXTRABOLD` (`800`)    \\n&emsp;`$FW_HEAVY` (`900`)  \\n\\nConstants are defined in FontConstants.au3."}]},"Sqrt":{"documentation":"Calculates the square-root of a number.","label":"Sqrt ( expression )","params":[{"label":"expression","documentation":"Any nonnegative expression to get the square-root of."}]},"SRandom":{"documentation":"Set Seed for random number generation.","label":"SRandom ( Seed )","params":[{"label":"Seed","documentation":"Seed value for random number generation. Number between -2^31 and 2^31-1"}]},"StatusbarGetText":{"documentation":"Retrieves the text from a standard status bar control.","label":"StatusbarGetText ( \\"title\\" [, \\"text\\" [, part = 1]] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to check."},{"label":"text","documentation":"**[optional]** The text of the window to check. Default is an empty string."},{"label":"part","documentation":"**[optional]** The \\"part\\" number of the status bar to read - the default is 1. 1 is the first possible part and usually the one that contains the useful messages like \\"Ready\\" \\"Loading...\\", etc."}]},"StderrRead":{"documentation":"Reads from the STDERR stream of a previously run child process.","label":"StderrRead ( process_id [, peek = False [, binary = False]] )","params":[{"label":"process_id","documentation":"The process ID of a child process, as returned by a previous call to Run."},{"label":"peek","documentation":"**[optional]** If True the function does not remove the read characters from the stream."},{"label":"binary","documentation":"**[optional]** If True the function reads the data as binary instead of text (default is text)."}]},"StdinWrite":{"documentation":"Writes a number of characters to the STDIN stream of a previously run child process.","label":"StdinWrite ( process_id [, data] )","params":[{"label":"process_id","documentation":"The process ID of a child process, as returned by a previous call to Run."},{"label":"data","documentation":"**[optional]** The data you wish to output. This may either be text or binary."}]},"StdioClose":{"documentation":"Closes all resources associated with a process previously run with STDIO redirection.","label":"StdioClose ( process_id )","params":[{"label":"process_id","documentation":"The process ID of a child process, as returned by a previous call to Run."}]},"StdoutRead":{"documentation":"Reads from the STDOUT stream of a previously run child process.","label":"StdoutRead ( process_id [, peek = False [, binary = False]] )","params":[{"label":"process_id","documentation":"The process ID of a child process, as returned by a previous call to Run."},{"label":"peek","documentation":"**[optional]** If True the function does not remove the read characters from the stream."},{"label":"binary","documentation":"**[optional]** If True the function reads the data as binary instead of text (default is text)."}]},"String":{"documentation":"Returns the string representation of an expression.","label":"String ( expression )","params":[{"label":"expression","documentation":"An expression to convert into a string."}]},"StringAddCR":{"documentation":"Takes a string and prefixes all linefeed characters ( Chr(10) ) with a carriage return character ( Chr(13) ).","label":"StringAddCR ( \\"string\\" )","params":[{"label":"string","documentation":"The string to convert."}]},"StringCompare":{"documentation":"Compares two strings with options.","label":"StringCompare ( \\"string1\\", \\"string2\\" [, casesense = 0] )","params":[{"label":"string1","documentation":"The first string to evaluate."},{"label":"string2","documentation":"The second string to evaluate."},{"label":"casesense","documentation":"**[optional]** Flag to indicate if the operations should be case sensitive.    \\n&emsp;`$STR_NOCASESENSE` (`0`) = not case sensitive, using the user\'s locale (default)    \\n&emsp;`$STR_CASESENSE` (`1`) = case sensitive    \\n&emsp;`$STR_NOCASESENSEBASIC` (`2`) = not case sensitive, using a basic/faster comparison.  \\n\\nConstants are defined in StringConstants.au3."}]},"StringFormat":{"documentation":"Returns a formatted string (similar to the C sprintf() function).","label":"StringFormat ( \\"format control\\", var1 [, ... var32] )","params":[{"label":"format control","documentation":"The format and flags to use."},{"label":"var1...var32","documentation":"Up to 32 variables that will be output according to the \\"format control\\"."}]},"StringFromASCIIArray":{"documentation":"Converts an array of ASCII codes to a string.","label":"StringFromASCIIArray ( array, [start = 0 [, end = -1 [, encoding = 0]]] )","params":[{"label":"array","documentation":"The array of ASCII codes to convert to characters."},{"label":"start","documentation":"**[optional]** The 0-based index to start processing from (Default: 0)."},{"label":"end","documentation":"**[optional]** The 0-based index to end processing at (Default: `UBound($aArray)`). Note that the character at this index is NOT included in the output."},{"label":"encoding","documentation":"**[optional]** The array contains values in the specified character set:    \\n&emsp;`$SE_UTF16` (`0`) = UTF-16 (Default)    \\n&emsp;`$SE_ANSI` (`1`) = ANSI    \\n&emsp;`$SE_UTF8` (`2`) = UTF-8.  \\n\\nConstants are defined in StringConstants.au3."}]},"StringInStr":{"documentation":"Checks if a string contains a given substring.","label":"StringInStr ( \\"string\\", \\"substring\\" [, casesense = 0 [, occurrence = 1 [, start = 1 [, count]]]] )","params":[{"label":"string","documentation":"The string to evaluate."},{"label":"substring","documentation":"The substring to search for."},{"label":"casesense","documentation":"**[optional]** Flag to indicate if the operations should be case sensitive.    \\n&emsp;`$STR_NOCASESENSE` (`0`) = not case sensitive, using the user\'s locale (default)    \\n&emsp;`$STR_CASESENSE` (`1`) = case sensitive    \\n&emsp;`$STR_NOCASESENSEBASIC` (`2`) = not case sensitive, using a basic/faster comparison.  \\n\\nConstants are defined in StringConstants.au3."},{"label":"occurrence","documentation":"**[optional]** Which occurrence of the substring to find in the string. Use a negative occurrence to search from the right side. The default value is 1 (finds first occurrence)."},{"label":"start","documentation":"**[optional]** The starting position of the search."},{"label":"count","documentation":"**[optional]** The number of characters to search. This effectively limits the search to a portion of the full string."}]},"StringIsAlNum":{"documentation":"Checks if a string contains only alphanumeric characters.","label":"StringIsAlNum ( \\"string\\" )","params":[{"label":"string","documentation":"The string to check"}]},"StringIsAlpha":{"documentation":"Checks if a string contains only alphabetic characters.","label":"StringIsAlpha ( \\"string\\" )","params":[{"label":"string","documentation":"The string to check"}]},"StringIsASCII":{"documentation":"Checks if a string contains only ASCII characters in the range 0x00 - 0x7f (0 - 127).","label":"StringIsASCII ( \\"string\\" )","params":[{"label":"string","documentation":"The string to check"}]},"StringIsDigit":{"documentation":"Checks if a string contains only digit (0-9) characters.","label":"StringIsDigit ( \\"string\\" )","params":[{"label":"string","documentation":"The string to check"}]},"StringIsFloat":{"documentation":"Checks if a string is a floating point number.","label":"StringIsFloat ( \\"string\\" )","params":[{"label":"string","documentation":"The string or expression to check."}]},"StringIsInt":{"documentation":"Checks if a string is an integer.","label":"StringIsInt ( \\"string\\" )","params":[{"label":"string","documentation":"The string to check."}]},"StringIsLower":{"documentation":"Checks if a string contains only lowercase characters.","label":"StringIsLower ( \\"string\\" )","params":[{"label":"string","documentation":"The string to check"}]},"StringIsSpace":{"documentation":"Checks if a string contains only whitespace characters.","label":"StringIsSpace ( \\"string\\" )","params":[{"label":"string","documentation":"The string to check"}]},"StringIsUpper":{"documentation":"Checks if a string contains only uppercase characters.","label":"StringIsUpper ( \\"string\\" )","params":[{"label":"string","documentation":"The string to check"}]},"StringIsXDigit":{"documentation":"Checks if a string contains only hexadecimal digit (0-9, A-F) characters.","label":"StringIsXDigit ( \\"string\\" )","params":[{"label":"string","documentation":"The string to check"}]},"StringLeft":{"documentation":"Returns a number of characters from the left-hand side of a string.","label":"StringLeft ( \\"string\\", count )","params":[{"label":"string","documentation":"The string to evaluate."},{"label":"count","documentation":"The number of characters to get."}]},"StringLen":{"documentation":"Returns the number of characters in a string.","label":"StringLen ( \\"string\\" )","params":[{"label":"string","documentation":"The string to evaluate."}]},"StringLower":{"documentation":"Converts a string to lowercase.","label":"StringLower ( \\"string\\" )","params":[{"label":"string","documentation":"The string to convert."}]},"StringMid":{"documentation":"Extracts a number of characters from a string.","label":"StringMid ( \\"string\\", start [, count = -1] )","params":[{"label":"string","documentation":"The string to evaluate."},{"label":"start","documentation":"The character position to start. (1 = first character)"},{"label":"count","documentation":"**[optional]** The number of characters to extract. By default the entire remainder of the string."}]},"StringRegExp":{"documentation":"Check if a string fits a given regular expression pattern.","label":"StringRegExp ( \\"test\\", \\"pattern\\" [, flag = 0 [, offset = 1]] )","params":[{"label":"test","documentation":"The subject string to check"},{"label":"pattern","documentation":"The regular expression to match."},{"label":"flag","documentation":"**[optional]** A number to indicate how the function behaves. See below for details. The default is 0."},{"label":"offset","documentation":"**[optional]** The string position to start the match (starts at 1). The default is 1."}]},"StringRegExpReplace":{"documentation":"Replace text in a string based on regular expressions.","label":"StringRegExpReplace ( \\"test\\", \\"pattern\\", \\"replace\\" [, count = 0] )","params":[{"label":"test","documentation":"The string to check"},{"label":"pattern","documentation":"The regular expression to compare. See StringRegExp for pattern definition characters."},{"label":"replace","documentation":"The text to replace the regular expression matching text with. To insert matched group text, \\\\0 - \\\\9 (or $0 - $9) can be used as back-references."},{"label":"count","documentation":"**[optional]** The number of times to execute the replacement in the string. The default is 0. Use 0 for global replacement."}]},"StringReplace":{"documentation":"Replaces substrings in a string.","label":"StringReplace ( \\"string\\", \\"searchstring/start\\", \\"replacestring\\" [, occurrence = 0 [, casesense = 0]] )","params":[{"label":"string","documentation":"The string to evaluate."},{"label":"searchstring/start","documentation":"The substring to search for or the character position to start the replacement."},{"label":"replacestring","documentation":"The replacement string."},{"label":"occurrence","documentation":"**[optional]** The number of times to replace the searchstring. Use a negative occurrence to replace from the right side.    \\n&emsp;0 = all searchstrings will be replaced (default)"},{"label":"casesense","documentation":"**[optional]** Flag to indicate if the operations should be case sensitive.    \\n&emsp;$STR_NOCASESENSE` (`0`) = not case sensitive, using the user\'s locale (default)    \\n&emsp;`$STR_CASESENSE` (`1`) = case sensitive    \\n&emsp;`$STR_NOCASESENSEBASIC` (`2`) = not case sensitive, using a basic/faster comparison.  \\n\\nConstants are defined in StringConstants.au3."}]},"StringReverse":{"documentation":"Reverses the contents of the specified string.","label":"StringReverse ( \\"string\\" [, flag = 0] )","params":[{"label":"string","documentation":"The string to reverse."},{"label":"flag","documentation":"**[optional]** Changes the way the string is reversed    \\n&emsp;`$STR_UTF16` (`0`) = reversed in full UTF-16 mode. (default)    \\n&emsp;`$STR_UCS2` (`1`) = a much faster method - only use if using UCS-2 text.  \\n\\nConstants are defined in \\"StringConstants.au3\\"."}]},"StringRight":{"documentation":"Returns a number of characters from the right-hand side of a string.","label":"StringRight ( \\"string\\", count )","params":[{"label":"string","documentation":"The string to evaluate."},{"label":"count","documentation":"The number of characters to get."}]},"StringSplit":{"documentation":"Splits up a string into substrings depending on the given delimiters.","label":"StringSplit ( \\"string\\", \\"delimiters\\" [, flag = 0] )","params":[{"label":"string","documentation":"The string to evaluate."},{"label":"delimiters","documentation":"One or more characters to use as delimiters (case sensitive)."},{"label":"flag","documentation":"**[optional]** Changes how the string split works, add multiple flag values together if required:    \\n&emsp;`$STR_CHRSPLIT` (`0`) = each character in the delimiter string will mark where to split the string (default)    \\nemsp;`$STR_ENTIRESPLIT` (`1`) = entire delimiter string is needed to mark the split    \\n&emsp;`$STR_NOCOUNT` (`2`) = disable the return count in the first element - effectively makes the array 0-based (must use `UBound()` to get the size of the array in this case).  \\n\\nConstants are defined in StringConstants.au3."}]},"StringStripCR":{"documentation":"Removes all carriage return values ( Chr(13) ) from a string.","label":"StringStripCR ( \\"string\\" )","params":[{"label":"string","documentation":"The string to convert."}]},"StringStripWS":{"documentation":"Strips the white space in a string.","label":"StringStripWS ( \\"string\\", flag )","params":[{"label":"string","documentation":"The string to strip."},{"label":"flag","documentation":"Flag to indicate the type of stripping that should be performed (add the flags together for multiple operations):    \\n&emsp;`$STR_STRIPLEADING` (`1`) = strip leading white space    \\n&emsp;`$STR_STRIPTRAILING` (`2`) = strip trailing white space    \\n&emsp;`$STR_STRIPSPACES` (`4`) = strip double (or more) spaces between words    \\n&emsp;`$STR_STRIPALL` (`8`) = strip all spaces (over-rides all other flags)  \\n\\nConstants are defined in StringConstants.au3."}]},"StringToASCIIArray":{"documentation":"Converts a string to an array containing the ASCII code of each character.","label":"StringToASCIIArray ( \\"string\\",[start = 0 [, end [, encoding = 0]]] )","params":[{"label":"\\"string\\"","documentation":"The string to convert to an array of ASCII codes."},{"label":"start","documentation":"**[optional]** The 0-based position to start processing from (Default: 0)."},{"label":"end","documentation":"**[optional]** The 0-based position to end processing at (Default: `StringLen(\\"string\\")`)."},{"label":"encoding","documentation":"**[optional]** The returned array will contain values in the specified character set:    \\n&emsp;`$SE_UTF16` (`0`) = UTF-16 (Default)    \\n&emsp;`$SE_ANSI` (`1`) = ANSI    \\n&emsp;`$SE_UTF8` (`2`) = UTF-8.  \\n\\nConstants are defined in StringConstants.au3."}]},"StringToBinary":{"documentation":"Converts a string into binary data.","label":"StringToBinary ( expression [, flag = 1] )","params":[{"label":"expression","documentation":"An expression to convert into binary data."},{"label":"flag","documentation":"**[optional]** Changes how the string is stored as binary:  \\n&emsp;`$SB_ANSI` (`1`) = string data is ANSI (default)  \\n&emsp;`$SB_UTF16LE` (`2`) = string data is UTF16 Little Endian  \\n&emsp;`$SB_UTF16BE` (`3`) = string data is UTF16 Big Endian  \\n&emsp;`$SB_UTF8` (`4`) = string data is UTF8.  \\n\\nConstants are defined in StringConstants.au3."}]},"StringTrimLeft":{"documentation":"Trims a number of characters from the left hand side of a string.","label":"StringTrimLeft ( \\"string\\", count )","params":[{"label":"string","documentation":"The string to evaluate."},{"label":"count","documentation":"The number of characters to trim."}]},"StringTrimRight":{"documentation":"Trims a number of characters from the right hand side of a string.","label":"StringTrimRight ( \\"string\\", count )","params":[{"label":"string","documentation":"The string to evaluate."},{"label":"count","documentation":"The number of characters to trim."}]},"StringUpper":{"documentation":"Converts a string to uppercase.","label":"StringUpper ( \\"string\\" )","params":[{"label":"string","documentation":"The string to convert."}]},"Tan":{"documentation":"Calculates the tangent of a number.","label":"Tan ( expression )","params":[{"label":"expression","documentation":"Value in radians."}]},"TCPAccept":{"documentation":"Permits an incoming connection attempt on a socket.","label":"TCPAccept ( mainsocket )","params":[{"label":"mainsocket","documentation":"The main socket identifier (SocketID) as returned by a `TCPListen()` function."}]},"TCPCloseSocket":{"documentation":"Closes a TCP socket.","label":"TCPCloseSocket ( socket )","params":[{"label":"socket","documentation":"The socket identifier (SocketID) as returned by a `TCPListen()`, `TCPConnect()` or `TCPAccept()` functions."}]},"TCPConnect":{"documentation":"Create a socket connected to an existing server.","label":"TCPConnect ( IPAddr, port )","params":[{"label":"IPAddr","documentation":"Internet Protocol dotted address(IpV4) as \\"192.162.1.1\\"."},{"label":"port","documentation":"port on which the created socket will be connected."}]},"TCPListen":{"documentation":"Creates a socket listening for an incoming connection.","label":"TCPListen ( IPAddr, port [, MaxPendingConnection] )","params":[{"label":"IPAddr","documentation":"Internet Protocol dotted address(IpV4) as \\"192.162.1.1\\"."},{"label":"port","documentation":"port on which the created socket will be connected."},{"label":"MaxPendingConnection","documentation":"**[optional]** Maximum length of the queue of pending connections. By default the maximum reasonable value will be set."}]},"TCPNameToIP":{"documentation":"Converts an Internet name to IP address.","label":"TCPNameToIP ( name )","params":[{"label":"name","documentation":"String containing an Internet name."}]},"TCPRecv":{"documentation":"Receives data from a connected socket.","label":"TCPRecv ( mainsocket, maxlen [, flag = 0] )","params":[{"label":"mainsocket","documentation":"The connected socket identifier (SocketID) as returned by a `TCPAccept()` or a `TCPConnect()` function."},{"label":"maxlen","documentation":"max # of characters to receive."},{"label":"flag","documentation":"**[optional]** Forces the function to return binary data if set to 1 (default is 0, and will auto detect between binary/string).    \\n&emsp;`$TCP_DATA_DEFAULT` (`0`) - (Default) will auto detect between binary/string    \\n&emsp;`$TCP_DATA_BINARY` (`1`) - return binary data.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"TCPSend":{"documentation":"Sends data on a connected socket.","label":"TCPSend ( mainsocket, data )","params":[{"label":"mainsocket","documentation":"The connected socket identifier (SocketID) as returned by a `TCPConnect()` function."},{"label":"data","documentation":"binary/string to be send to the connected socket."}]},"TCPShutdown":{"documentation":"Stops TCP services.","label":"TCPShutdown (  )","params":[]},"UDPShutdown":{"documentation":"Stops UDP services.","label":"UDPShutdown (  )","params":[]},"TCPStartup":{"documentation":"Starts TCP services.","label":"TCPStartup (  )","params":[]},"UDPStartup":{"documentation":"Starts UDP services.","label":"UDPStartup (  )","params":[]},"TimerDiff":{"documentation":"Returns the difference in time from a previous call to TimerInit().","label":"TimerDiff ( handle )","params":[{"label":"handle","documentation":"Handle returned from a previous call to `TimerInit()`."}]},"TimerInit":{"documentation":"Returns a handle that can be passed to TimerDiff() to calculate the difference in milliseconds.","label":"TimerInit (  )","params":[]},"ToolTip":{"documentation":"Creates a tooltip anywhere on the screen.","label":"ToolTip ( \\"text\\" [, x [, y [, \\"title\\" [, icon = 0 [, options]]]]] )","params":[{"label":"text","documentation":"The text of the tooltip. (An empty string clears a displaying tooltip)"},{"label":"x","documentation":"**[optional]** The x position of the tooltip."},{"label":"y","documentation":"**[optional]** The y position of the tooltip."},{"label":"title","documentation":"**[optional]** The title for the tooltip."},{"label":"icon","documentation":"**[optional]** Pre-defined icon to show next to the title: Requires a title.    \\n&emsp;`$TIP_NOICON` (`0`) = No icon    \\n&emsp;`$TIP_INFOICON` (`1`) = Info icon    \\n&emsp;`$TIP_WARNINGICON` (`2`) = Warning icon    \\n&emsp;`$TIP_ERRORICON` (`3`) = Error Icon.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."},{"label":"options","documentation":"**[optional]** Sets different options for how the tooltip will be displayed (Can be added together):    \\n&emsp;`$TIP_BALLOON` (`1`) = Display as Balloon Tip    \\n&emsp;`$TIP_CENTER` (`2`) = Center the tip at the x,y coordinates instead of using them for the upper left corner.    \\n&emsp;`$TIP_FORCEVISIBLE` (`4`) = Force the tooltip to always be visible confining it to monitor borders if necessary. If multiple monitors are used, then the tooltip will \\"snap-to\\" the nearest monitor.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\""}]},"TrayCreateItem":{"documentation":"Creates a menuitem control for the tray.","label":"TrayCreateItem ( \\"text\\" [, menuID = -1 [, menuentry = -1 [, menuradioitem = 0]]] )","params":[{"label":"text","documentation":"The text of the control."},{"label":"menuID","documentation":"**[optional]** Allows you to create a submenu in the referenced menu. If equal -1 it will be added \'behind\' the last created item (default setting)."},{"label":"menuentry","documentation":"**[optional]** Allows you to define the entry number to be created. The entries are numbered starting at 0. If equal -1 it will be added \'behind\' the last created entry (default setting)."},{"label":"menuradioitem","documentation":"**[optional]**    \\n&emsp;`$TRAY_ITEM_NORMAL` (`0`) = (default) create a normal menuitem.    \\n&emsp;`$TRAY_ITEM_RADIO` (`1`) = create a menuradioitem.  \\n\\nConstants are defined in TrayConstants.au3."}]},"TrayCreateMenu":{"documentation":"Creates a menu control for the tray menu.","label":"TrayCreateMenu ( \\"sub/menutext\\" [, menuID = -1 [, menuentry = -1]] )","params":[{"label":"sub/menutext","documentation":"The sub/menu text."},{"label":"menuID","documentation":"**[optional]** If defined, allows you to create a submenu in the referenced menu. Default -1 (refers to first level menu)."},{"label":"menuentry","documentation":"**[optional]** Allows you to define the entry number to be created. The entries are numbered starting at 0. Default -1 (at the bottom)."}]},"TrayGetMsg":{"documentation":"Polls the tray to see if any events have occurred.","label":"TrayGetMsg (  )","params":[]},"TrayItemDelete":{"documentation":"Deletes a menu/item control from the tray menu.","label":"TrayItemDelete ( controlID )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `TrayCreateItem` or `TrayCreateMenu` function."}]},"TrayItemGetHandle":{"documentation":"Returns the handle for a tray menu(item).","label":"TrayItemGetHandle ( controlID )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `TrayCreateItem` or `TrayCreateMenu` function."}]},"TrayItemGetState":{"documentation":"Gets the current state of a control.","label":"TrayItemGetState ( [controlID] )","params":[{"label":"controlID","documentation":"**[optional]** The control identifier (controlID) as returned by a `TrayCreateItem` or `TrayCreateMenu` function."}]},"TrayItemGetText":{"documentation":"Gets the itemtext of a tray menu/item control.","label":"TrayItemGetText ( controlID )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `TrayCreateItem` or `TrayCreateMenu` function."}]},"TrayItemSetOnEvent":{"documentation":"Defines a user-defined function to be called when a tray item is clicked.","label":"TrayItemSetOnEvent ( itemID, \\"function\\" )","params":[{"label":"itemID","documentation":"The item identifier (itemID) as returned by a `TrayCreateItem` function."},{"label":"function","documentation":"The name of the user function to call."}]},"TrayItemSetState":{"documentation":"Sets the state of a tray menu/item control.","label":"TrayItemSetState ( controlID, state )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `TrayCreateItem` or `TrayCreateMenu` function."},{"label":"state","documentation":"See the State table."}]},"TrayItemSetText":{"documentation":"Sets the itemtext of a tray menu/item control.","label":"TrayItemSetText ( controlID, text )","params":[{"label":"controlID","documentation":"The control identifier (controlID) as returned by a `TrayCreateItem` or `TrayCreateMenu` function."},{"label":"text","documentation":"The new text of the tray menu/item control."}]},"TraySetClick":{"documentation":"Sets the clickmode of the tray icon - what mouseclicks will display the tray menu.","label":"TraySetClick ( flag )","params":[{"label":"flag","documentation":"0 = Tray menu will never be shown through a mouseclick  \\n1 = Pressing primary mouse button  \\n2 = Releasing primary mouse button  \\n4 = Double-click primary mouse button  \\n8 = Pressing secondary mouse button  \\n16 = Releasing secondary mouse button  \\n32 = Double-click secondary mouse button  \\n64 = Hovering over the tray icon"}]},"TraySetIcon":{"documentation":"Loads/Sets a specified tray icon.","label":"TraySetIcon ( [filename [, iconID]] )","params":[{"label":"filename","documentation":"**[optional]** The filename of the icon to be display in the tray."},{"label":"iconID","documentation":"**[optional]** Icon identifier if the file contains multiple icons."}]},"TraySetOnEvent":{"documentation":"Defines a user function to be called when a special tray action happens.","label":"TraySetOnEvent ( specialID, \\"function\\" )","params":[{"label":"specialID","documentation":"See the Special ID table."},{"label":"function","documentation":"The name of the user function to call."}]},"TraySetPauseIcon":{"documentation":"Loads/Sets a specified tray pause icon.","label":"TraySetPauseIcon ( [filename [, iconID]] )","params":[{"label":"filename","documentation":"**[optional]** The filename of the icon to be display as pause icon in the tray."},{"label":"iconID","documentation":"**[optional]** Icon identifier if the file contains multiple icons."}]},"TraySetState":{"documentation":"Sets the state of the tray icon.","label":"TraySetState ( [flag = 1] )","params":[{"label":"flag","documentation":"**[optional]** A combination of the following:    \\n&emsp;`$TRAY_ICONSTATE_SHOW` (`1`) = Shows the tray icon (default)    \\n&emsp;`$TRAY_ICONSTATE_HIDE` (`2`) = Destroys/Hides the tray icon    \\n&emsp;`$TRAY_ICONSTATE_FLASH` (`4`) = Flashes the tray icon    \\n&emsp;`$TRAY_ICONSTATE_STOPFLASH` (`8`) = Stops tray icon flashing    \\n&emsp;`$TRAY_ICONSTATE_RESET` (`16`) = Resets the icon to the defaults (no flashing, default tip text)  \\n\\nConstants are defined in TrayConstants.au3."}]},"TraySetToolTip":{"documentation":"(Re)Sets the tooltip text for the tray icon.","label":"TraySetToolTip ( [text] )","params":[{"label":"text","documentation":"**[optional]** The new text to be displayed as tooltip. The length is limited."}]},"TrayTip":{"documentation":"Displays a balloon tip from the AutoIt Icon.","label":"TrayTip ( \\"title\\", \\"text\\", timeout [, option = 0] )","params":[{"label":"title","documentation":"Text appears in bold at the top of the balloon tip. (63 characters maximum)"},{"label":"text","documentation":"Message the balloon tip will display. (255 characters maximum)"},{"label":"timeout","documentation":"A rough estimate of the time (in seconds) the balloon tip should be displayed. (Windows has a min and max of about 10-30 seconds but does not always honor a time in that range.)"},{"label":"option","documentation":"**[optional]**    \\n&emsp;`$TIP_ICONNONE` (`0`) = No icon (default)    \\n&emsp;`$TIP_ICONASTERISK` (`1`) = Info icon    \\n&emsp;`$TIP_ICONEXCLAMATION` (`2`) = Warning icon    \\n&emsp;`$TIP_ICONHAND` (`3`) = Error icon    \\n&emsp;`$TIP_NOSOUND` (`16`) = Disable sound.  \\n\\nConstants are defined in TrayConstants.au3."}]},"UBound":{"documentation":"Returns the size of array dimensions or the number of keys in a map.","label":"UBound ( Variable [, Dimension = 1] )","params":[{"label":"Variable","documentation":"An array or map variable"},{"label":"Dimension","documentation":"**[optional]** For an array - Which dimension size to return:  \\n&emsp;`$UBOUND_DIMENSIONS` (`0`) = Number of subscripts in the array  \\n&emsp;`$UBOUND_ROWS` (`1`) = Number of rows in the array (default)  \\n&emsp;`$UBOUND_COLUMNS` (`2`) = Number of columns in the array  \\nFor arrays with more than 2 dimensions, just use the corresponding integer  \\nFor a map - this parameter is ignored and the number of keys is returned.  \\n\\nConstants are defined in AutoItConstants.au3."}]},"UDPBind":{"documentation":"Create a socket bound to an incoming connection.","label":"UDPBind ( IPAddr, port )","params":[{"label":"IPAddr","documentation":"Internet Protocol dotted address(IpV4) as \\"192.162.1.1\\"."},{"label":"port","documentation":"port on which the created socket will be bound."}]},"UDPCloseSocket":{"documentation":"Close a UDP socket.","label":"UDPCloseSocket ( socketarray )","params":[{"label":"socketarray","documentation":"The socket/array as returned by a `UDPBind()` or `UDPOpen()` functions."}]},"UDPOpen":{"documentation":"Open a socket connected to an existing server .","label":"UDPOpen ( IPAddr, port [, flag = 0] )","params":[{"label":"IPAddr","documentation":"Internet Protocol dotted address(IpV4) as \\"192.162.1.1\\"."},{"label":"port","documentation":"port on which the created socket will be connected."},{"label":"flag","documentation":"**[optional]**    \\n&emsp;`$UDP_OPEN_DEFAULT` (`0`) - (Default) - No additional options are set.    \\n&emsp;`$UDP_OPEN_BROADCAST` (`1`) - Allow the broadcasting on the address \\"255.255.255.255\\".  \\n\\nConstants are defined in \\"AutoIt Constants.au3\\"."}]},"UDPRecv":{"documentation":"Receives data from an opened socket.","label":"UDPRecv ( socketarray, maxlen [, flag = 0] )","params":[{"label":"socketarray","documentation":"The socket/array as returned by a `UDPBind()` function."},{"label":"maxlen","documentation":"max # of characters to receive."},{"label":"flag","documentation":"**[optional]**    \\n&emsp;`$UDP_DATA_DEFAULT` (`0`) - will auto detect between binary/string.    \\n&emsp;`$UDP_DATA_BINARY` (`1`) - return binary data    \\n&emsp;`$UDP_DATA_ARRAY` (`2`) - returned in an Array : [0] data, [1] from IP, [2] from Port.  \\nIf you want both just use 3.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"UDPSend":{"documentation":"Sends data on an opened socket.","label":"UDPSend ( socketarray, data )","params":[{"label":"socketarray","documentation":"The main socket/array as returned by a `UDPOpen()` function."},{"label":"data","documentation":"binary/string to be sent to the connected socket"}]},"VarGetType":{"documentation":"Returns the internal type representation of a variant.","label":"VarGetType ( expression )","params":[{"label":"expression","documentation":"An expression to check the internal type of."}]},"WinActivate":{"documentation":"Activates (gives focus to) a window.","label":"WinActivate ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to activate. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to activate. Default is an empty string. See Text special definition."}]},"WinActive":{"documentation":"Checks to see if a specified window exists and is currently active.","label":"WinActive ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to check. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to check. Default is an empty string. See Text special definition."}]},"WinClose":{"documentation":"Closes a window.","label":"WinClose ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to close. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to close. Default is an empty string. See Text special definition."}]},"WinExists":{"documentation":"Checks to see if a specified window exists.","label":"WinExists ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to check. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to check. Default is an empty string. See Text special definition."}]},"WinFlash":{"documentation":"Flashes a window in the taskbar.","label":"WinFlash ( \\"title\\" [, \\"text\\" [, flashes = 4 [, delay = 500]]] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to change. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to change. Default is an empty string. See Text special definition."},{"label":"flashes","documentation":"**[optional]** The amount of times to flash the window. Default 4."},{"label":"delay","documentation":"**[optional]** The time in milliseconds to sleep between each flash. Default 500 ms."}]},"WinGetCaretPos":{"documentation":"Returns the coordinates of the caret in the foreground window.","label":"WinGetCaretPos (  )","params":[]},"WinGetClassList":{"documentation":"Retrieves the classes from a window.","label":"WinGetClassList ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to get the classes. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to get the classes. Default is an empty string. See Text special definition."}]},"WinGetClientSize":{"documentation":"Retrieves the size of a given window\'s client area.","label":"WinGetClientSize ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to get the size. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to get the size. Default is an empty string. See Text special definition."}]},"WinGetHandle":{"documentation":"Retrieves the internal handle of a window.","label":"WinGetHandle ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to get the handle. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to get the handle. Default is an empty string. See Text special definition."}]},"WinGetPos":{"documentation":"Retrieves the position and size of a given window.","label":"WinGetPos ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to get the position/size. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to get the position/size. Default is an empty string. See Text special definition."}]},"WinGetProcess":{"documentation":"Retrieves the Process ID (PID) associated with a window.","label":"WinGetProcess ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to get the PID. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to get the PID. Default is an empty string. See Text special definition."}]},"WinGetState":{"documentation":"Retrieves the state of a given window.","label":"WinGetState ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to get the state. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to get the state. Default is an empty string. See Text special definition."}]},"WinGetText":{"documentation":"Retrieves the text from a window.","label":"WinGetText ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to get the text. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to get the text. Default is an empty string. See Text special definition."}]},"WinGetTitle":{"documentation":"Retrieves the full title from a window.","label":"WinGetTitle ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to get the title. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to get the title. Default is an empty string. See Text special definition."}]},"WinKill":{"documentation":"Forces a window to close.","label":"WinKill ( \\"title\\" [, \\"text\\"] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to close. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to close. Default is an empty string. See Text special definition."}]},"WinList":{"documentation":"Retrieves a list of windows.","label":"WinList ( [\\"title\\" [, \\"text\\"]] )","params":[{"label":"title","documentation":"**[optional]** The title/hWnd/class of the windows to get the list. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the windows to get the list. Default is an empty string. See Text special definition."}]},"WinMenuSelectItem":{"documentation":"Invokes a menu item of a window.","label":"WinMenuSelectItem ( \\"title\\", \\"text\\", \\"item\\" [, \\"item\\" [, \\"item\\" [, \\"item\\" [, \\"item\\" [, \\"item\\" [, \\"item\\"]]]]]] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to select the item. See Title special definition."},{"label":"text","documentation":"The text of the window to select the item. See Text special definition."},{"label":"item","documentation":"Text of Menu Item"},{"label":"item","documentation":"**[optional]** Text of SubMenu item"},{"label":"item","documentation":"**[optional]** Text of SubMenu item"},{"label":"item","documentation":"**[optional]** Text of SubMenu item"},{"label":"item","documentation":"**[optional]** Text of SubMenu item"},{"label":"item","documentation":"**[optional]** Text of SubMenu item"},{"label":"item","documentation":"**[optional]** Text of SubMenu item"}]},"WinMinimizeAll":{"documentation":"Minimizes all windows.","label":"WinMinimizeAll (  )","params":[]},"WinMinimizeAllUndo":{"documentation":"Undoes a previous WinMinimizeAll function.","label":"WinMinimizeAllUndo (  )","params":[]},"WinMove":{"documentation":"Moves and/or resizes a window.","label":"WinMove ( \\"title\\", \\"text\\", x, y [, width [, height [, speed]]] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to move/resize. See Title special definition."},{"label":"text","documentation":"The text of the window to move/resize. See Text special definition."},{"label":"x","documentation":"X coordinate to move to."},{"label":"y","documentation":"Y coordinate to move to."},{"label":"width","documentation":"**[optional]** New width of the window."},{"label":"height","documentation":"**[optional]** New height of the window."},{"label":"speed","documentation":"**[optional]** the speed to move the windows in the range 1 (fastest) to 100 (slowest). If not defined the move is instantaneous."}]},"WinSetOnTop":{"documentation":"Change a window\'s \\"Always On Top\\" attribute.","label":"WinSetOnTop ( \\"title\\", \\"text\\", flag )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to change. See Title special definition."},{"label":"text","documentation":"The text of the window to change. See Text special definition."},{"label":"flag","documentation":"Determines whether the window should have the \\"TOPMOST\\" flag set.    \\n&emsp;`$WINDOWS_NOONTOP` (`0`) = remove on top flag    \\n&emsp;`$WINDOWS_ONTOP` (`1`) = set on top flag.  \\n\\nConstants are defined in \\"AutoItConstants.au3\\"."}]},"WinSetState":{"documentation":"Shows, hides, minimizes, maximizes, or restores a window.","label":"WinSetState ( \\"title\\", \\"text\\", flag )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to change the state. See Title special definition."},{"label":"text","documentation":"The text of the window to change the state. See Text special definition."},{"label":"flag","documentation":"The \\"show\\" flag of the executed program:    \\n&emsp;`@SW_HIDE` = Hide window    \\n&emsp;`@SW_SHOW` = Shows a previously hidden window    \\n&emsp;`@SW_MINIMIZE` = Minimize window    \\n&emsp;`@SW_MAXIMIZE` = Maximize window    \\n&emsp;`@SW_RESTORE` = Undoes a window minimization or maximization    \\n&emsp;`@SW_DISABLE` = Disables the window    \\n&emsp;`@SW_ENABLE` = Enables the window"}]},"WinSetTitle":{"documentation":"Changes the title of a window.","label":"WinSetTitle ( \\"title\\", \\"text\\", \\"newtitle\\" )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to change. See Title special definition."},{"label":"text","documentation":"The text of the window to change. See Text special definition."},{"label":"newtitle","documentation":"The new title to give to the window."}]},"WinSetTrans":{"documentation":"Sets the transparency of a window.","label":"WinSetTrans ( \\"title\\", \\"text\\", transparency )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to change. See Title special definition."},{"label":"text","documentation":"The text of the window to change. See Text special definition."},{"label":"transparency","documentation":"A number in the range 0 - 255. The lower the number, the more transparent the window will become. 255 = Solid, 0 = Invisible."}]},"WinWait":{"documentation":"Pauses execution of the script until the requested window exists.","label":"WinWait ( \\"title\\" [, \\"text\\" [, timeout = 0]] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to check. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to check. Default is an empty string. See Text special definition."},{"label":"timeout","documentation":"**[optional]** Timeout in seconds if the window does not exist. Default is 0 (no timeout)."}]},"WinWaitActive":{"documentation":"Pauses execution of the script until the requested window is active.","label":"WinWaitActive ( \\"title\\" [, \\"text\\" [, timeout = 0]] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to check. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to check. Default is an empty string. See Text special definition."},{"label":"timeout","documentation":"**[optional]** Timeout in seconds if the window is not active. Default is 0 (no timeout)."}]},"WinWaitClose":{"documentation":"Pauses execution of the script until the requested window does not exist.","label":"WinWaitClose ( \\"title\\" [, \\"text\\" [, timeout = 0]] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to check. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to check. Default is an empty string. See Text special definition."},{"label":"timeout","documentation":"**[optional]** Timeout in seconds if the window is not closed. Default is 0 (no timeout)."}]},"WinWaitNotActive":{"documentation":"Pauses execution of the script until the requested window is not active.","label":"WinWaitNotActive ( \\"title\\" [, \\"text\\" [, timeout = 0]] )","params":[{"label":"title","documentation":"The title/hWnd/class of the window to check. See Title special definition."},{"label":"text","documentation":"**[optional]** The text of the window to check. Default is an empty string. See Text special definition."},{"label":"timeout","documentation":"**[optional]** Timeout in seconds if the window is still active. Default is 0 (no timeout)."}]}}'),Pr=JSON.parse('{"_ArrayColDelete":{"documentation":"Deletes a specified column from a 2D array","label":"_ArrayColDelete ( ByRef $aArray, $iColumn [, $bConvert = False] )","params":[{"label":"$aArray","documentation":"Array to modify"},{"label":"$iColumn","documentation":"Column to delete"},{"label":"$bConvert","documentation":"**[optional]** If True then if only one column remains the array is converted to 1D"}]},"_ArrayColInsert":{"documentation":"Inserts a specified column into a 1D or 2D array","label":"_ArrayColInsert ( ByRef $aArray, $iColumn )","params":[{"label":"$aArray","documentation":"Array to modify"},{"label":"$iColumn","documentation":"Column to insert - if array is 1D it is automatically converted to 2D"}]},"_ArrayCombinations":{"documentation":"Returns an array of the combinations of a set of elements from a selected 1D array","label":"_ArrayCombinations ( Const ByRef $aArray, $iSet [, $sDelimiter = \\"\\"] )","params":[{"label":"$aArray","documentation":"The Array to use"},{"label":"$iSet","documentation":"Size of the combinations set"},{"label":"$sDelimiter","documentation":"**[optional]** String result separator, default is \\"\\" for none"}]},"_ArrayConcatenate":{"documentation":"Concatenate two arrays - either 1D or 2D with the same number of columns","label":"_ArrayConcatenate ( Const ByRef $aArrayTarget, ByRef $aArraySource [, $iStart = 0] )","params":[{"label":"$aArrayTarget","documentation":"The array to which the source array will be concatenated"},{"label":"$aArraySource","documentation":"The array to concatenate to the target array"},{"label":"$iStart","documentation":"**[optional]** index of the first Source array entry (Default = 0)"}]},"_ArrayDelete":{"documentation":"Deletes the specified element(s) from the specified 1D or 2D array","label":"_ArrayDelete ( ByRef $aArray, $vRange )","params":[{"label":"$aArray","documentation":"Array to modify"},{"label":"$vRange","documentation":"Element(s) to delete - either a single index, a range string or a 1D array with a count in the [0] element (see example for details)"}]},"_ArrayDisplay":{"documentation":"Displays a 1D or 2D array in a ListView","label":"_ArrayDisplay ( Const ByRef $aArray [, $sTitle = \\"ArrayDisplay\\" [, $sArrayRange = \\"\\" [, $iFlags = 0 [, $vUser_Separator = Default [, $sHeader = Default [, $iMax_ColWidth = Default [, $iAlt_Color = Default [, $hUser_Function = \\"\\"]]]]]]]] )","params":[{"label":"$aArray","documentation":"Array to display"},{"label":"$sTitle","documentation":"**[optional]** Title for dialog. Default = \\"ArrayDisplay\\"."},{"label":"$sArrayRange","documentation":"**[optional]** Range of rows/columns to display. Default (\\"\\") = entire array."},{"label":"$iFlags","documentation":"**[optional]** Determine UDF options. Add required values together  \\n  0 = (default) Column text alignment - left  \\n    1 = Transposes the array  \\n  2 = Column text alignment - right  \\n4 = Column text alignment - center  \\n8 = Verbose - display MsgBox on error and splash screens during processing of large arrays  \\n16 = Only \'Copy\' buttons displayed  \\n32 = No buttons displayed  \\n64 = No \'Row\' column displayed"},{"label":"$vUser_Separator","documentation":"**[optional]** Sets column display option when copying data to clipboard.  \\n> Character = Delimiter between columns.  \\n> Number = Fixed column width - longer items will be truncated.  \\n> Default = Current separator character (usually \\"|\\")."},{"label":"$sHeader","documentation":"**[optional]** Column names in header (string of names separated by current separator character - usually \\"|\\")."},{"label":"$iMax_ColWidth","documentation":"**[optional]** Max width to which a ListView column will expand to show content. Default = 350 pixels."},{"label":"$iAlt_Color","documentation":"**[optional]** ListView alternate rows set to defined color. Default = all rows ListView background color."},{"label":"$hUser_Function","documentation":"**[optional]** A variable assigned to the user defined function to run. Default = none."}]},"_ArrayExtract":{"documentation":"Extracts an array from the specified element(s) of a 1D or 2D array","label":"_ArrayExtract ( Const ByRef $aArray [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $iStart_Col = -1 [, $iEnd_Col = -1]]]] )","params":[{"label":"$aArray","documentation":"Array from which extraction should occur"},{"label":"$iStart_Row","documentation":"**[optional]** First row of the extracted array"},{"label":"$iEnd_Row","documentation":"**[optional]** Last row of the extracted array"},{"label":"$iStart_Col","documentation":"**[optional]** First column of the extracted array (2D only)"},{"label":"$iEnd_Col","documentation":"**[optional]** Last column of the extracted array (2D only)"}]},"_ArrayFindAll":{"documentation":"Find the indices of all ocurrences of a search query between two points in a 1D or 2D array using _ArraySearch()","label":"_ArrayFindAll ( Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iCase = 0 [, $iCompare = 0 [, $iSubItem = 0 [, $bRow = False]]]]]] )","params":[{"label":"$aArray","documentation":"The array to search"},{"label":"$vValue","documentation":"What to search $aArray for"},{"label":"$iStart","documentation":"**[optional]** Index of array to start search"},{"label":"$iEnd","documentation":"**[optional]** Index of array to end search"},{"label":"$iCase","documentation":"**[optional]** If set to 1, search is case sensitive"},{"label":"$iCompare","documentation":"**[optional]**  \\n0 Casting of variables to the same type (default), \\"string\\" = 0, \\"\\" = 0 or \\"0\\" = 0 match (If $iCase = 0)  \\n1 executes a partial search  \\n2 comparison match if variables have same type and same value  \\n3 compares using a regular expression pattern provided as $vValue"},{"label":"$iSubItem","documentation":"**[optional]** Sub-index to search on in 2D arrays"},{"label":"$bRow","documentation":"**[optional]** If True then $iSubItem sets the row to search - False (default) searches columns"}]},"_ArrayInsert":{"documentation":"Insert a new value at the specified position of a 1D or 2D array","label":"_ArrayInsert ( ByRef $aArray, $vRange [, $vValue = \\"\\" [, $iStart = 0 [, $sDelim_Item = \\"|\\" [, $sDelim_Row = @CRLF [, $iForce = $ARRAYFILL_FORCE_DEFAULT]]]]] )","params":[{"label":"$aArray","documentation":"Array to modify"},{"label":"$vRange","documentation":"Position(s) at which to insert item(s) - see Remarks for format"},{"label":"$vValue","documentation":"**[optional]** Value(s) to add - can be a single variable, a delimited string or a 1D array"},{"label":"$iStart","documentation":"**[optional]** Column in which insert is to begin (2D array only)"},{"label":"$sDelim_Item","documentation":"**[optional]** Delimiter used if a string is to be split into items"},{"label":"$sDelim_Row","documentation":"**[optional]** Delimiter used if a string is to be split into rows (2D only)"},{"label":"$iForce","documentation":"**[optional]** Maintains default behaviour,  \\n`$ARRAYFILL_FORCE_DEFAULT` (0)  \\nForces $vValue addition as a single item,  \\n`$ARRAYFILL_FORCE_SINGLEITEM` (1)  \\nOr forces datatype for all added items  \\n`$ARRAYFILL_FORCE_INT` (2)  \\n`$ARRAYFILL_FORCE_NUMBER` (3)  \\n`$ARRAYFILL_FORCE_PTR` (4)  \\n`$ARRAYFILL_FORCE_HWND` (5)  \\n`$ARRAYFILL_FORCE_STRING` (6)"}]},"_ArrayMax":{"documentation":"Returns the highest value held in a 1D or 2D array","label":"_ArrayMax ( Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]] )","params":[{"label":"$aArray","documentation":"Array to search"},{"label":"$iCompNumeric","documentation":"**[optional]** Comparison method:  \\n`0` - compare alphanumerically  \\n`1` - compare numerically"},{"label":"$iStart","documentation":"**[optional]** Index of array to start search"},{"label":"$iEnd","documentation":"**[optional]** Index of array to end search"},{"label":"$iSubItem","documentation":"**[optional]** Column of array to search"}]},"_ArrayMaxIndex":{"documentation":"Returns the index where the highest value occurs in a 1D or 2D array","label":"_ArrayMaxIndex ( Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]] )","params":[{"label":"$aArray","documentation":"Array to search"},{"label":"$iCompNumeric","documentation":"**[optional]** Comparison method:  \\n`0` - compare alphanumerically  \\n`1` - compare numerically"},{"label":"$iStart","documentation":"**[optional]** Index of array to start search"},{"label":"$iEnd","documentation":"**[optional]** Index of array to end search"},{"label":"$iSubItem","documentation":"**[optional]** Column of array to search"}]},"_ArrayMin":{"documentation":"Returns the lowest value held in a 1D or 2D array","label":"_ArrayMin ( Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]] )","params":[{"label":"$aArray","documentation":"Array to search"},{"label":"$iCompNumeric","documentation":"**[optional]** Comparison method:  \\n`0` - compare alphanumerically  \\n`1` - compare numerically"},{"label":"$iStart","documentation":"**[optional]** Index of array to start search"},{"label":"$iEnd","documentation":"**[optional]** Index of array to end search"},{"label":"$iSubItem","documentation":"**[optional]** Column of array to search"}]},"_ArrayMinIndex":{"documentation":"Returns the index where the lowest value occurs in a 1D or 2D array","label":"_ArrayMinIndex ( Const ByRef $aArray [, $iCompNumeric = 0 [, $iStart = -1 [, $iEnd = -1 [, $iSubItem = 0]]]] )","params":[{"label":"$aArray","documentation":"Array to search"},{"label":"$iCompNumeric","documentation":"**[optional]** Comparison method:  \\n`0` - compare alphanumerically  \\n`1` - compare numerically"},{"label":"$iStart","documentation":"**[optional]** Index of array to start search"},{"label":"$iEnd","documentation":"**[optional]** Index of array to end search"},{"label":"$iSubItem","documentation":"**[optional]** Column of array to search"}]},"_ArrayPermute":{"documentation":"Returns an array of the Permutations of all Elements in a 1D array","label":"_ArrayPermute ( ByRef $aArray [, $sDelimiter = \\"\\"] )","params":[{"label":"$aArray","documentation":"The Array to get Permutations"},{"label":"$sDelimiter","documentation":"**[optional]** String result separator, default is \\"\\" for none"}]},"_ArrayPop":{"documentation":"Returns the last element of an array, deleting that element from the array at the same time","label":"_ArrayPop ( ByRef $aArray )","params":[{"label":"$aArray","documentation":"Array to modify"}]},"_ArrayPush":{"documentation":"Add new values without increasing array size by inserting at the end the new value and deleting the first one or vice versa","label":"_ArrayPush ( ByRef $aArray, $vValue [, $iDirection = 0] )","params":[{"label":"$aArray","documentation":"Array to modify"},{"label":"$vValue","documentation":"Value(s) to add (can be in an array)"},{"label":"$iDirection","documentation":"**[optional]** Direction to push existing array elements:  \\n`0` = Slide left (adding at the end)  \\n`1` = Slide right (adding at the start)"}]},"_ArrayReverse":{"documentation":"Takes the given array and reverses the order in which the elements appear in a 1D array","label":"_ArrayReverse ( ByRef $aArray [, $iStart = 0 [, $iEnd = 0]] )","params":[{"label":"$aArray","documentation":"Array to modify"},{"label":"$iStart","documentation":"**[optional]** Index of array to start modifying at"},{"label":"$iEnd","documentation":"**[optional]** Index of array to stop modifying at"}]},"_ArraySearch":{"documentation":"Finds an entry within a 1D or 2D array. Similar to _ArrayBinarySearch(), except that the array does not need to be sorted","label":"_ArraySearch ( Const ByRef $aArray, $vValue [, $iStart = 0 [, $iEnd = 0 [, $iCase = 0 [, $iCompare = 0 [, $iForward = 1 [, $iSubItem = -1 [, $bRow = False]]]]]]] )","params":[{"label":"$aArray","documentation":"The array to search"},{"label":"$vValue","documentation":"What to search $aArray for"},{"label":"$iStart","documentation":"**[optional]** Index of array to start searching at"},{"label":"$iEnd","documentation":"**[optional]** Index of array to stop searching at"},{"label":"$iCase","documentation":"**[optional]** If set to 1, search is case sensitive"},{"label":"$iCompare","documentation":"**[optional]**  \\n`0` Casting of variables to the same type (default), \\"string\\" = 0, \\"\\" = 0 or \\"0\\" = 0 match (If $iCase = 0)  \\n`1` executes a partial search  \\n`2` comparison match if variables have same type and same value  \\n`3` compares using a regular expression pattern provided as `$vValue`"},{"label":"$iForward","documentation":"**[optional]** If set to 0, searches the array from end to beginning (instead of beginning to end)"},{"label":"$iSubItem","documentation":"**[optional]** Sub-index to search on in 2D arrays"},{"label":"$bRow","documentation":"**[optional]** If `True` then `$iSubItem` sets the row to search - `False` (default) searches columns"}]},"_ArrayShuffle":{"documentation":"Shuffles selected rows of 1D or 2D arrays - can be limited to a specific column in 2D arrays","label":"_ArrayShuffle ( ByRef $aArray [, $iStart_Row = 0 [, $iEnd_Row = 0 [, $iCol = -1]]] )","params":[{"label":"$aArray","documentation":"Array to modify"},{"label":"$iStart_Row","documentation":"**[optional]** Start row for shuffle - default first"},{"label":"$iEnd_Row","documentation":"**[optional]** End row for shuffle - default last"},{"label":"$iCol","documentation":"**[optional]** Specific column to shuffle (2D only)"}]},"_ArraySort":{"documentation":"Sort a 1D or 2D array on a specific index using the dualpivotsort/quicksort/insertionsort algorithms","label":"_ArraySort ( ByRef $aArray [, $iDescending = 0 [, $iStart = 0 [, $iEnd = 0 [, $iSubItem = 0 [, $iPivot = 0]]]]] )","params":[{"label":"$aArray","documentation":"Array to sort"},{"label":"$iDescending","documentation":"**[optional]** If set to 1, sort in descending order"},{"label":"$iStart","documentation":"**[optional]** Index of array to start sorting (default 0 = first element or row)"},{"label":"$iEnd","documentation":"**[optional]** Index of array to stop sorting (default 0 = last element or row)"},{"label":"$iSubItem","documentation":"**[optional]** Sub-index to sort on in 2D arrays (default 0 = first column)"},{"label":"$iPivot","documentation":"**[optional]** Use pivot sort algorithm (default = quicksort)"}]},"_ArraySwap":{"documentation":"Swaps elements of a 1D array and full or part rows/columns of a 2D array","label":"_ArraySwap ( ByRef $aArray, $iIndex_1, $iIndex_2 [, $bCol = False [, $iStart = -1 [, $iEnd = -1]]] )","params":[{"label":"$aArray","documentation":"Array to modify"},{"label":"$iIndex_1","documentation":"Index of first element (1D) or row/column (2D) to swap"},{"label":"$iIndex_2","documentation":"Index of second element (1D) or row/column (2D) to swap"},{"label":"$bCol","documentation":"**[optional]** If True then for 2D array above parameters refer to rows; if False (default) above parameters refer to columns"},{"label":"$iStart","documentation":"**[optional]** Index in row/column to start swap (2D array only)"},{"label":"$iEnd","documentation":"**[optional]** Index in row/column to end swap (2D array only)"}]},"_ArrayToClip":{"documentation":"Sends the contents of a 1D or 2D array to the clipboard, each element separated by a specified delimiter","label":"_ArrayToClip ( Const ByRef $aArray [, $sDelim_Col = \\"|\\" [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $sDelim_Row = @CRLF [, $iStart_Col = -1 [, $iEnd_Col = -1]]]]]] )","params":[{"label":"$aArray","documentation":"Array to copy to clipboard"},{"label":"$sDelim_Col","documentation":"**[optional]** Delimiter for elements of 1D array or columns of 2D array"},{"label":"$iStart_Row","documentation":"**[optional]** Index of array row to start copy"},{"label":"$iEnd_Row","documentation":"**[optional]** Index of array row to stop copy"},{"label":"$sDelim_Row","documentation":"**[optional]** Delimiter for rows of 2D array (2D only)"},{"label":"$iStart_Col","documentation":"**[optional]** Index of array column to start copy (2D only)"},{"label":"$iEnd_Col","documentation":"**[optional]** Index of array column to stop copy (2D only)"}]},"_ArrayToString":{"documentation":"Places the elements of a 1D or 2D array into a single string, separated by the specified delimiters","label":"_ArrayToString ( Const ByRef $aArray [, $sDelim_Col = \\"|\\" [, $iStart_Row = -1 [, $iEnd_Row = -1 [, $sDelim_Row = @CRLF [, $iStart_Col = -1 [, $iEnd_Col = -1]]]]]] )","params":[{"label":"$aArray","documentation":"Array to convert to a string"},{"label":"$sDelim_Col","documentation":"**[optional]** Delimiter for elements of 1D array or columns of 2D array"},{"label":"$iStart_Row","documentation":"**[optional]** Index of array row to start copy"},{"label":"$iEnd_Row","documentation":"**[optional]** Index of array row to stop copy"},{"label":"$sDelim_Row","documentation":"**[optional]** Delimiter for rows of 2D array (2D only)"},{"label":"$iStart_Col","documentation":"**[optional]** Index of array column to start copy (2D only)"},{"label":"$iEnd_Col","documentation":"**[optional]** Index of array column to stop copy (2D only)"}]},"_ArrayTranspose":{"documentation":"Transposes a 1D or 2D array (swaps rows and columns)","label":"_ArrayTranspose ( ByRef $aArray )","params":[{"label":"$aArray","documentation":"Array to modify"}]},"_ArrayTrim":{"documentation":"Trims a certain number of characters from all elements in a 1D or 2D array","label":"_ArrayTrim ( ByRef $aArray, $iTrimNum [, $iDirection = 0 [, $iStart = 0 [, $iEnd = 0 [, $iSubItem = 0]]]] )","params":[{"label":"$aArray","documentation":"Array to modify"},{"label":"$iTrimNum","documentation":"Number of characters to remove"},{"label":"$iDirection","documentation":"**[optional]** Direction to trim:  \\n`0` - trim left  \\n`1` - trim right"},{"label":"$iStart","documentation":"**[optional]** Index of array to start trim"},{"label":"$iEnd","documentation":"**[optional]** Index of array to stop trim"},{"label":"$iSubItem","documentation":"**[optional]** Column to trim"}]},"_ArrayUnique":{"documentation":"Returns the Elements from a column of a 1D or 2D array, removing all duplicates","label":"_ArrayUnique ( Const ByRef $aArray [, $iColumn = 0 [, $iBase = 0 [, $iCase = 0 [, $iCount = $ARRAYUNIQUE_COUNT [, $iIntType = $ARRAYUNIQUE_AUTO]]]]] )","params":[{"label":"$aArray","documentation":"The Array to use"},{"label":"$iColumn","documentation":"**[optional]** 0-based column to be used - default 0. (2D only)"},{"label":"$iBase","documentation":"**[optional]** The array is 0-based or 1-based. Default 0 : 0-based."},{"label":"$iCase","documentation":"**[optional]** Flag to indicate if the operations should be case sensitive. Default 0 : not case sensitive."},{"label":"$iCount","documentation":"**[optional]** Flag to determine if [0] element holds the count of returned items (default)"},{"label":"$iIntType","documentation":"**[optional]** Flag to change function algorithm"}]},"_ChooseColor":{"documentation":"Creates a Color dialog box that enables the user to select a color","label":"_ChooseColor ( [$iReturnType = 0 [, $iColorRef = 0 [, $iRefType = 0 [, $hWndOwnder = 0]]]] )","params":[{"label":"$iReturnType","documentation":"**[optional]** Determines return type, valid values:0 - COLORREF rgbcolor1 - BGR hex2 - RGB hex"},{"label":"$iColorRef","documentation":"**[optional]** Default selected Color"},{"label":"$iRefType","documentation":"**[optional]** Type of $iColorRef passed in, valid values:0 - COLORREF rgbcolor1 - BGR hex2 - RGB hex"},{"label":"$hWndOwnder","documentation":"**[optional]** Handle to the window that owns the dialog box"}]},"_ChooseFont":{"documentation":"Creates a Font dialog box that enables the user to choose attributes for a logical font","label":"_ChooseFont ( [$sFontName = \\"Courier New\\" [, $iPointSize = 10 [, $iFontColorRef = 0 [, $iFontWeight = 0 [, $bItalic = False [, $bUnderline = False [, $bStrikethru = False [, $hWndOwner = 0]]]]]]]] )","params":[{"label":"$sFontName","documentation":"**[optional]** Default font name"},{"label":"$iPointSize","documentation":"**[optional]** Pointsize of font"},{"label":"$iFontColorRef","documentation":"**[optional]** COLORREF rgbColors"},{"label":"$iFontWeight","documentation":"**[optional]** Font Weight"},{"label":"$bItalic","documentation":"**[optional]** Italic"},{"label":"$bUnderline","documentation":"**[optional]** Underline"},{"label":"$bStrikethru","documentation":"**[optional]** Strikethru"},{"label":"$hWndOwner","documentation":"**[optional]** Handle to the window that owns the dialog box"}]},"_ClipBoard_ChangeChain":{"documentation":"Removes a specified window from the chain of clipboard viewers","label":"_ClipBoard_ChangeChain ( $hRemove, $hNewNext )","params":[{"label":"$hRemove","documentation":"Handle to the window to be removed from the chain.The handle must have been passed to the _ClipBoard_SetViewer() function."},{"label":"$hNewNext","documentation":"Handle to the window that follows the $hRemove window in the clipboard viewer chain. This is the handle returned by _ClipBoard_SetViewer(), unless the sequence was changed in response to a $WM_CHANGECBCHAIN message."}]},"_ClipBoard_Close":{"documentation":"Closes the clipboard","label":"_ClipBoard_Close (  )","params":[]},"_ClipBoard_CountFormats":{"documentation":"Retrieves the number of different data formats currently on the clipboard","label":"_ClipBoard_CountFormats (  )","params":[]},"_ClipBoard_Empty":{"documentation":"Empties the clipboard and frees handles to data in the clipboard","label":"_ClipBoard_Empty (  )","params":[]},"_ClipBoard_EnumFormats":{"documentation":"Enumerates the data formats currently available on the clipboard","label":"_ClipBoard_EnumFormats ( $iFormat )","params":[{"label":"$iFormat","documentation":"Specifies a clipboard format that is known to be available. To start an enumeration of formats, set $iFormat to zero.  \\nWhen $iFormat is zero, the function retrieves the first available clipboard format.  \\nFor subsequent calls during an enumeration, set $iFormat to the result of the previous call."}]},"_ClipBoard_FormatStr":{"documentation":"Returns a string representation of a standard clipboard format","label":"_ClipBoard_FormatStr ( $iFormat )","params":[{"label":"$iFormat","documentation":"Specifies a clipboard format"}]},"_ClipBoard_GetData":{"documentation":"Retrieves data from the clipboard in a specified format","label":"_ClipBoard_GetData ( [$iFormat = 1] )","params":[{"label":"$iFormat","documentation":"**[optional]** Specifies a clipboard format"}]},"_ClipBoard_GetDataEx":{"documentation":"Retrieves data from the clipboard in a specified format","label":"_ClipBoard_GetDataEx ( [$iFormat = 1] )","params":[{"label":"$iFormat","documentation":"**[optional]** Specifies a clipboard format"}]},"_ClipBoard_GetFormatName":{"documentation":"Retrieves the name of the specified registered format","label":"_ClipBoard_GetFormatName ( $iFormat )","params":[{"label":"$iFormat","documentation":"Specifies the type of format to be retrieved"}]},"_ClipBoard_GetOpenWindow":{"documentation":"Retrieves the handle to the window that currently has the clipboard open","label":"_ClipBoard_GetOpenWindow (  )","params":[]},"_ClipBoard_GetOwner":{"documentation":"Retrieves the window handle of the current owner of the clipboard","label":"_ClipBoard_GetOwner (  )","params":[]},"_ClipBoard_GetPriorityFormat":{"documentation":"Retrieves the first available clipboard format in the specified list","label":"_ClipBoard_GetPriorityFormat ( $aFormats )","params":[{"label":"$aFormats","documentation":"Array with the following format:  \\n[0] - Number of formats (n)  \\n[1] - Format 1  \\n[2] - Format 2  \\n[n] - Format n"}]},"_ClipBoard_GetSequenceNumber":{"documentation":"Retrieves the clipboard sequence number for the current window station","label":"_ClipBoard_GetSequenceNumber (  )","params":[]},"_ClipBoard_GetViewer":{"documentation":"Retrieves the handle to the first window in the clipboard viewer chain","label":"_ClipBoard_GetViewer (  )","params":[]},"_ClipBoard_IsFormatAvailable":{"documentation":"Determines whether the clipboard contains data in the specified format","label":"_ClipBoard_IsFormatAvailable ( $iFormat )","params":[{"label":"$iFormat","documentation":"Specifies a standard or registered clipboard format"}]},"_ClipBoard_Open":{"documentation":"Opens the clipboard and prevents other applications from modifying the clipboard","label":"_ClipBoard_Open ( $hOwner )","params":[{"label":"$hOwner","documentation":"Handle to the window to be associated with the open clipboard. If this parameter is 0, the open clipboard is associated with the current task."}]},"_ClipBoard_RegisterFormat":{"documentation":"Registers a new clipboard format","label":"_ClipBoard_RegisterFormat ( $sFormat )","params":[{"label":"$sFormat","documentation":"The name of the new format"}]},"_ClipBoard_SetData":{"documentation":"Places data on the clipboard in a specified clipboard format","label":"_ClipBoard_SetData ( $vData [, $iFormat = 1] )","params":[{"label":"$vData","documentation":"Data in Binary or String format, or optionally NULL (0) (owner must render, see below).  \\nIMPORTANT: If a String is passed, and it is not of type $CF_TEXT, $CF_OEMTEXT, or $CF_UNICODETEXT, it will be treated as an ANSI string.  \\nTo force Unicode strings for other types, you must pass the data in Binary format.  \\nAlso, do NOT pass $CF_UNICODETEXT in Binary format (causes garbled data).  \\nWhen $vData is NULL, it indicates that the window provides data in the specified clipboard format upon request.  \\nIf a window delays rendering, it must process the $WM_RENDERFORMAT and $WM_RENDERALLFORMATS messages.  \\nIf this function succeeds, the system owns the object identified by the $hMemory parameter.  \\nThe application may not write to or free the data once ownership has been transferred to the system, but it can lock and read from the data until the _ClipBoard_Close() function is called.  \\nThe memory must be unlocked before the clipboard is closed.  \\nIf the $hMemory parameter identifies a memory object, the object must have been allocated using the function with the $GMEM_MOVEABLE flag."},{"label":"$iFormat","documentation":"**[optional]** Specifies a clipboard format"}]},"_ClipBoard_SetDataEx":{"documentation":"Places data on the clipboard in a specified clipboard format","label":"_ClipBoard_SetDataEx ( ByRef $hMemory [, $iFormat = 1] )","params":[{"label":"$hMemory","documentation":"Handle to the data in the specified format. This parameter can be NULL, indicating that the window provides data in the specified clipboard format upon request.  \\nIf a window delays rendering, it must process the $WM_RENDERFORMAT and $WM_RENDERALLFORMATS messages.  \\nIf this function succeeds, the system owns the object identified by the $hMemory parameter.  \\nThe application may not write to or free the data once ownership has been transferred to the system, but it can lock and read from the data until the _ClipBoard_Close() function is called.  \\nThe memory must be unlocked before the clipboard is closed.  \\nIf the $hMemory parameter identifies a memory object, the object must have been allocated using the function with the $GMEM_MOVEABLE flag."},{"label":"$iFormat","documentation":"**[optional]** Specifies a clipboard format"}]},"_ClipBoard_SetViewer":{"documentation":"Adds the specified window to the chain of clipboard viewers","label":"_ClipBoard_SetViewer ( $hViewer )","params":[{"label":"$hViewer","documentation":"Handle to the window to be added to the clipboard chain"}]},"_ClipPutFile":{"documentation":"Copy Files to Clipboard Like Explorer does","label":"_ClipPutFile ( $sFilePath [, $sDelimiter = \\"|\\"] )","params":[{"label":"$sFilePath","documentation":"Full Path to File(s)"},{"label":"$sDelimiter","documentation":"**[optional]** Separator for multiple Files, Default = \'|\'"}]},"_ColorConvertHSLtoRGB":{"documentation":"Converts HSL to RGB","label":"_ColorConvertHSLtoRGB ( $aArray )","params":[{"label":"$aArray","documentation":"An array containing HSL values in their respective positions"}]},"_ColorConvertRGBtoHSL":{"documentation":"Converts RGB to HSL","label":"_ColorConvertRGBtoHSL ( $aArray )","params":[{"label":"$aArray","documentation":"An array containing RGB values in their respective positions"}]},"_ColorGetBlue":{"documentation":"Returns the blue component of a given color","label":"_ColorGetBlue ( $iColor )","params":[{"label":"$iColor","documentation":"The RGB color to work with (0x00RRGGBB)."}]},"_ColorGetCOLORREF":{"documentation":"Returns the COLORREF color","label":"_ColorGetCOLORREF ( $iColor )","params":[{"label":"$iColor","documentation":"the COLORREF color to work with (0x00BBGGRR)"}]},"_ColorGetGreen":{"documentation":"Returns the green component of a given color","label":"_ColorGetGreen ( $iColor )","params":[{"label":"$iColor","documentation":"The RGB color to work with (0x00RRGGBB)."}]},"_ColorGetRed":{"documentation":"Returns the red component of a given color","label":"_ColorGetRed ( $iColor )","params":[{"label":"$iColor","documentation":"The RGB color to work with (0x00RRGGBB)."}]},"_ColorGetRGB":{"documentation":"Returns an array containing RGB values in their respective positions","label":"_ColorGetRGB ( $iColor )","params":[{"label":"$iColor","documentation":"The RGB color to work with (0x00RRGGBB)."}]},"_ColorSetCOLORREF":{"documentation":"Returns the COLORREF color","label":"_ColorSetCOLORREF ( $aColor )","params":[{"label":"$aColor","documentation":"an array of values in the range 0-255:  \\n[0] Red component color  \\n[1] Green component color  \\n[2] Blue component color"}]},"_ColorSetRGB":{"documentation":"Returns the RGB color","label":"_ColorSetRGB ( $aColor )","params":[{"label":"$aColor","documentation":"an array of values in the range 0-255:  \\n[0] Red component color  \\n[1] Green component color  \\n[2] Blue component color"}]},"_Crypt_DecryptData":{"documentation":"Decrypts data using the supplied key","label":"_Crypt_DecryptData ( $vData, $vCryptKey, $iAlgID [, $bFinal = True] )","params":[{"label":"$vData","documentation":"Data to decrypt"},{"label":"$vCryptKey","documentation":"Password or handle to a key if the CALG_USERKEY flag is specified"},{"label":"$iAlgID","documentation":"The algorithm to use"},{"label":"$bFinal","documentation":"**[optional]** False if this is only a segment of the full data"}]},"_Crypt_DecryptFile":{"documentation":"Decrypts a file with specified key and algorithm","label":"_Crypt_DecryptFile ( $sSourceFile, $sDestinationFile, $vCryptKey, $iAlgID )","params":[{"label":"$sSourceFile","documentation":"File to process"},{"label":"$sDestinationFile","documentation":"File to save the processed file"},{"label":"$vCryptKey","documentation":"Password or handle to a key if the CALG_USERKEY flag is specified"},{"label":"$iAlgID","documentation":"The algorithm to use"}]},"_Crypt_DeriveKey":{"documentation":"Creates a key from algorithm and password","label":"_Crypt_DeriveKey ( $vPassword, $iAlgID [, $iHashAlgID = $CALG_MD5] )","params":[{"label":"$vPassword","documentation":"Password to use"},{"label":"$iAlgID","documentation":"Encryption ID of algorithm to be used with the key"},{"label":"$iHashAlgID","documentation":"**[optional]** Id of the algo to hash the password with"}]},"_Crypt_DestroyKey":{"documentation":"Frees the resources used by a key","label":"_Crypt_DestroyKey ( $hCryptKey )","params":[{"label":"$hCryptKey","documentation":"Key to destroy"}]},"_Crypt_EncryptData":{"documentation":"Encrypts data using the supplied key","label":"_Crypt_EncryptData ( $vData, $vCryptKey, $iAlgID [, $bFinal = True] )","params":[{"label":"$vData","documentation":"Data to encrypt/decrypt"},{"label":"$vCryptKey","documentation":"Password or handle to a key if the CALG_USERKEY flag is specified"},{"label":"$iAlgID","documentation":"The algorithm to use"},{"label":"$bFinal","documentation":"**[optional]** False if this is only a segment of the full data"}]},"_Crypt_EncryptFile":{"documentation":"Encrypts a file with specified key and algorithm","label":"_Crypt_EncryptFile ( $sSourceFile, $sDestinationFile, $vCryptKey, $iAlgID )","params":[{"label":"$sSourceFile","documentation":"File to process"},{"label":"$sDestinationFile","documentation":"File to save the processed file"},{"label":"$vCryptKey","documentation":"Password or handle to a key if the CALG_USERKEY flag is specified"},{"label":"$iAlgID","documentation":"The algorithm to use"}]},"_Crypt_GenRandom":{"documentation":"Fill a buffer with cryptographically random data","label":"_Crypt_GenRandom ( $pBuffer, $iSize )","params":[{"label":"$pBuffer","documentation":"Pointer to buffer to fill with random data."},{"label":"$iSize","documentation":"Size of the buffer pointed to by $pBuffer."}]},"_Crypt_HashData":{"documentation":"Hash data with specified algorithm","label":"_Crypt_HashData ( $vData, $iAlgID [, $bFinal = True [, $hCryptHash = 0]] )","params":[{"label":"$vData","documentation":"Data to hash"},{"label":"$iAlgID","documentation":"Hash ID to use"},{"label":"$bFinal","documentation":"**[optional]** False if this is only a segment of the full data, also makes the function return a hash object instead of hash"},{"label":"$hCryptHash","documentation":"**[optional]** Hash object returned from a previous call to _Crypt_HashData()"}]},"_Crypt_HashFile":{"documentation":"Hash a string with specified algorithm","label":"_Crypt_HashFile ( $sFilePath, $iAlgID )","params":[{"label":"$sFilePath","documentation":"Path to file to hash"},{"label":"$iAlgID","documentation":"Hash ID to use"}]},"_Crypt_Shutdown":{"documentation":"Uninitialize the Crypt library","label":"_Crypt_Shutdown (  )","params":[]},"_Crypt_Startup":{"documentation":"Initialize the Crypt library","label":"_Crypt_Startup (  )","params":[]},"_DateAdd":{"documentation":"Calculates a new date/time by adding/subtracting a specified number of time intervals from an initial date/time","label":"_DateAdd ( $sType, $iNumber, $sDate )","params":[{"label":"$sType","documentation":"Time interval to be used:  \\nD - Add/subtract days to/from the specified date  \\nM - Add/subtract months to/from the specified date  \\nY - Add/subtract years to/from the specified date  \\nw - Add/subtract Weeks to/from the specified date  \\nh - Add/subtract hours to/from the specified date  \\nn - Add/subtract minutes to/from the specified en date  \\ns - Add/subtract seconds to/from the specified date"},{"label":"$iNumber","documentation":"Number of intervals to be added/subtracted (use unary minus for subtraction)"},{"label":"$sDate","documentation":"Initial date in the format YYYY/MM/DD[ HH:MM:SS]"}]},"_DateDayOfWeek":{"documentation":"Returns the name of the weekday, based on the specified day","label":"_DateDayOfWeek ( $iDayNum [, $iFormat = 0] )","params":[{"label":"$iDayNum","documentation":"Day number  \\n1 = Sunday  \\n2 = Monday  \\n3 = Tuesday  \\n4 = Wednesday  \\n5 = Thursday  \\n6 = Friday  \\n7 = Saturday"},{"label":"$iFormat","documentation":"**[optional]** Format:  \\n`$DMW_LOCALE_USER` (0) - Long name of the weekday (Default)  \\n`$DMW_SHORTNAME` (1) - Short name of the weekday e.g. Mon  \\n`$DMW_LOCALE_LONGNAME` (2) - Long name of the weekday in the user\'s default language  \\n`$DMW_LOCALE_SHORTNAME` (3) - Short name of the weekday in the user\'s default language"}]},"_DateDaysInMonth":{"documentation":"Returns the number of days in a month, based on the specified month and year","label":"_DateDaysInMonth ( $iYear, $iMonthNum )","params":[{"label":"$iYear","documentation":"4-digit year."},{"label":"$iMonthNum","documentation":"Month number (1 = January, 12 = December)."}]},"_DateDiff":{"documentation":"Returns the difference between 2 dates, expressed in the type requested","label":"_DateDiff ( $sType, $sStartDate, $sEndDate )","params":[{"label":"$sType","documentation":"One of the following:  \\nD = Difference in days between the given dates  \\nM = Difference in months between the given dates  \\nY = Difference in years between the given dates  \\nw = Difference in Weeks between the given dates  \\nh = Difference in hours between the given dates  \\nn = Difference in minutes between the given dates  \\ns = Difference in seconds between the given dates"},{"label":"$sStartDate","documentation":"Input Start date in the format \\"YYYY/MM/DD[ HH:MM:SS]\\""},{"label":"$sEndDate","documentation":"Input End date in the format \\"YYYY/MM/DD[ HH:MM:SS]\\""}]},"_DateIsLeapYear":{"documentation":"Checks a given year to see if it is a leap year","label":"_DateIsLeapYear ( $iYear )","params":[{"label":"$iYear","documentation":"The 4-digit year to check."}]},"_DateIsValid":{"documentation":"Checks the given date to determine if it is a valid date","label":"_DateIsValid ( $sDate )","params":[{"label":"$sDate","documentation":"The date to be checked."}]},"_DateTimeFormat":{"documentation":"Returns the date in the PC\'s regional settings format","label":"_DateTimeFormat ( $sDate, $sType )","params":[{"label":"$sDate","documentation":"Input date in the format \\"YYYY/MM/DD[ HH:MM:SS]\\""},{"label":"$sType","documentation":"one the following:  \\n0 - Display a date and/or time. If there is a date part, display it as a short date.  \\nIf there is a time part, display it as a long time. If present, both parts are displayed.  \\n1 - Display a date using the long date format specified in your computer\'s regional settings.  \\n2 - Display a date using the short date format specified in your computer\'s regional settings.  \\n3 - Display a time using the time format specified in your computer\'s regional settings.  \\n4 - Display a time using the 24-hour format (hh:mm).  \\n5 - Display a time using the 24-hour format (hh:mm:ss)."}]},"_DateTimeSplit":{"documentation":"Split a string containing Date and Time into two separate Arrays","label":"_DateTimeSplit ( $sDate, ByRef $aDatePart, ByRef $iTimePart )","params":[{"label":"$sDate","documentation":"Any of these formats: \\"yyyy/mm/dd[ hh:mm[:ss]]\\"; \\"yyyy/mm/dd[Thh:mm[:ss]]\\"; \\"yyyy-mm-dd[ hh:mm[:ss]]\\"; \\"yyyy-mm-dd[Thh:mm[:ss]]\\"; \\"yyyy.mm.dd[ hh:mm[:ss]]\\"; \\"yyyy.mm.dd[Thh:mm[:ss]]\\""},{"label":"$aDatePart","documentation":"array that contains the Date. $aDatePart[0] number of values returned"},{"label":"$iTimePart","documentation":"array that contains the Time. $aTimePart[0] number of values returned"}]},"_DateToDayOfWeek":{"documentation":"Returns the weekday number for a given date","label":"_DateToDayOfWeek ( $iYear, $iMonth, $iDay )","params":[{"label":"$iYear","documentation":"A valid year in format YYYY"},{"label":"$iMonth","documentation":"A valid month in format MM"},{"label":"$iDay","documentation":"A valid day in format DD"}]},"_DateToDayOfWeekISO":{"documentation":"Returns the ISO weekday number for a given date","label":"_DateToDayOfWeekISO ( $iYear, $iMonth, $iDay )","params":[{"label":"$iYear","documentation":"A valid year in format YYYY"},{"label":"$iMonth","documentation":"A valid month in format MM"},{"label":"$iDay","documentation":"A valid day in format DD"}]},"_DateToDayValue":{"documentation":"Returns the day number since noon 4713 BC January 1 for a given Gregorian date","label":"_DateToDayValue ( $iYear, $iMonth, $iDay )","params":[{"label":"$iYear","documentation":"A valid year in format YYYY"},{"label":"$iMonth","documentation":"A valid month in format MM"},{"label":"$iDay","documentation":"A valid day in format DD"}]},"_DateToMonth":{"documentation":"Returns the name of the month, based on the specified month","label":"_DateToMonth ( $iMonNum [, $iFormat = 0] )","params":[{"label":"$iMonNum","documentation":"Month number (1-12)"},{"label":"$iFormat","documentation":"**[optional]** Format:  \\n`$DMW_LOCALE_USER` (0) - Long name of the month (Default)  \\n`$DMW_SHORTNAME` (1) - Short name of the month e.g. Jan  \\n`$DMW_LOCALE_LONGNAME` (2) - Long name of the month in the user\'s default language           \\n`$DMW_LOCALE_SHORTNAME` (3) - Short name of the month in the user\'s default language"}]},"_Date_Time_CompareFileTime":{"documentation":"Compares two file times","label":"_Date_Time_CompareFileTime ( $tFileTime1, $tFileTime2 )","params":[{"label":"$tFileTime1","documentation":"first $tagFILETIME structure or a pointer to it"},{"label":"$tFileTime2","documentation":"second $tagFILETIME structure or a pointer to it"}]},"_Date_Time_DOSDateTimeToArray":{"documentation":"Decode a DOS date/time to an array","label":"_Date_Time_DOSDateTimeToArray ( $iDosDate, $iDosTime )","params":[{"label":"$iDosDate","documentation":"MS-DOS date, packed as follows:  \\nBits 0- 4 Day of the month (1–31)  \\nBits 5- 8 Month (1 = January, 2 = February, and so on)  \\nBits 9-15 Year offset from 1980 (add 1980 to get actual year)"},{"label":"$iDosTime","documentation":"MS-DOS date, packed as follows:  \\nBits 0- 4 Second divided by 2  \\nBits 5-10 Minute (0–59)  \\nBits 11-15 Hour (0–23 on a 24-hour clock)"}]},"_Date_Time_DOSDateTimeToFileTime":{"documentation":"Converts MS-DOS date and time values to a file time","label":"_Date_Time_DOSDateTimeToFileTime ( $iFatDate, $iFatTime )","params":[{"label":"$iFatDate","documentation":"The MS-DOS date, packed as follows:  \\nBits 0- 4 Day of the month (1–31)  \\nBits 5- 8 Month (1 = January, 2 = February, and so on)  \\nBits 9-15 Year offset from 1980 (add 1980 to get actual year)"},{"label":"$iFatTime","documentation":"The MS-DOS date, packed as follows:  \\nBits 0- 4 Second divided by 2  \\nBits 5-10 Minute (0–59)  \\nBits 11-15 Hour (0–23 on a 24-hour clock)"}]},"_Date_Time_DOSDateTimeToStr":{"documentation":"Decode a DOS date to a string","label":"_Date_Time_DOSDateTimeToStr ( $iDosDate, $iDosTime )","params":[{"label":"$iDosDate","documentation":"MS-DOS date, packed as follows:  \\nBits 0- 4 Day of the month (1–31)  \\nBits 5- 8 Month (1 = January, 2 = February, and so on)  \\nBits 9-15 Year offset from 1980 (add 1980 to get actual year)"},{"label":"$iDosTime","documentation":"MS-DOS date, packed as follows:  \\nBits 0- 4 Second divided by 2  \\nBits 5-10 Minute (0–59)  \\nBits 11-15 Hour (0–23 on a 24-hour clock)"}]},"_Date_Time_DOSDateToArray":{"documentation":"Decode a DOS date to an array","label":"_Date_Time_DOSDateToArray ( $iDosDate )","params":[{"label":"$iDosDate","documentation":"MS-DOS date, packed as follows:  \\nBits 0- 4 Day of the month (1–31)  \\nBits 5- 8 Month (1 = January, 2 = February, and so on)  \\nBits 9-15 Year offset from 1980 (add 1980 to get actual year)"}]},"_Date_Time_DOSDateToStr":{"documentation":"Decode a DOS date to a string","label":"_Date_Time_DOSDateToStr ( $iDosDate )","params":[{"label":"$iDosDate","documentation":"MS-DOS date, packed as follows:  \\nBits 0- 4 Day of the month (1–31)  \\nBits 5- 8 Month (1 = January, 2 = February, and so on)  \\nBits 9-15 Year offset from 1980 (add 1980 to get actual year)"}]},"_Date_Time_DOSTimeToArray":{"documentation":"Decode a DOS time to an array","label":"_Date_Time_DOSTimeToArray ( $iDosTime )","params":[{"label":"$iDosTime","documentation":"MS-DOS date, packed as follows:  \\nBits 0- 4 Second divided by 2  \\nBits 5-10 Minute (0–59)  \\nBits 11-15 Hour (0–23 on a 24-hour clock)"}]},"_Date_Time_DOSTimeToStr":{"documentation":"Decode a DOS time to a string","label":"_Date_Time_DOSTimeToStr ( $iDosTime )","params":[{"label":"$iDosTime","documentation":"MS-DOS date, packed as follows:  \\nBits 0- 4 Second divided by 2  \\nBits 5-10 Minute (0–59)  \\nBits 11-15 Hour (0–23 on a 24-hour clock)"}]},"_Date_Time_EncodeFileTime":{"documentation":"Encodes and returns a $tagFILETIME structure","label":"_Date_Time_EncodeFileTime ( $iMonth, $iDay, $iYear [, $iHour = 0 [, $iMinute = 0 [, $iSecond = 0 [, $iMSeconds = 0]]]] )","params":[{"label":"$iMonth","documentation":"Month"},{"label":"$iDay","documentation":"Day"},{"label":"$iYear","documentation":"Year"},{"label":"$iHour","documentation":"**[optional]** Hour"},{"label":"$iMinute","documentation":"**[optional]** Minute"},{"label":"$iSecond","documentation":"**[optional]** Second"},{"label":"$iMSeconds","documentation":"**[optional]** Milliseconds"}]},"_Date_Time_EncodeSystemTime":{"documentation":"Encodes and returns a $tagSYSTEMTIME structure","label":"_Date_Time_EncodeSystemTime ( $iMonth, $iDay, $iYear [, $iHour = 0 [, $iMinute = 0 [, $iSecond = 0 [, $iMSeconds = 0]]]] )","params":[{"label":"$iMonth","documentation":"Month"},{"label":"$iDay","documentation":"Day"},{"label":"$iYear","documentation":"Year"},{"label":"$iHour","documentation":"**[optional]** Hour"},{"label":"$iMinute","documentation":"**[optional]** Minute"},{"label":"$iSecond","documentation":"**[optional]** Second"},{"label":"$iMSeconds","documentation":"**[optional]** Milliseconds"}]},"_Date_Time_FileTimeToArray":{"documentation":"Decode a file time to an array","label":"_Date_Time_FileTimeToArray ( ByRef $tFileTime )","params":[{"label":"$tFileTime","documentation":"$tagFILETIME structure"}]},"_Date_Time_FileTimeToDOSDateTime":{"documentation":"Converts MS-DOS date and time values to a file time","label":"_Date_Time_FileTimeToDOSDateTime ( $tFileTime )","params":[{"label":"$tFileTime","documentation":"a $tagFILETIME structure containing the file time to convert to MS-DOS format or a pointer to it"}]},"_Date_Time_FileTimeToLocalFileTime":{"documentation":"Converts a file time based on the Coordinated Universal Time to a local file time","label":"_Date_Time_FileTimeToLocalFileTime ( $tFileTime )","params":[{"label":"$tFileTime","documentation":"a $tagFILETIME structure containing the UTC based file time to be converted into a local file time or a pointer to it."}]},"_Date_Time_FileTimeToStr":{"documentation":"Decode a file time to a date/time string","label":"_Date_Time_FileTimeToStr ( ByRef $tFileTime [, $iFmt = 0] )","params":[{"label":"$tFileTime","documentation":"$tagFILETIME structure"},{"label":"$iFmt","documentation":"**[optional]** 0 returns mm/dd/yyyy hh:mm:ss (Default)  \\n1 returns yyyy/mm/dd hh:mm:ss"}]},"_Date_Time_FileTimeToSystemTime":{"documentation":"Converts a file time to system time format","label":"_Date_Time_FileTimeToSystemTime ( $tFileTime )","params":[{"label":"$tFileTime","documentation":"a $tagFILETIME structure containing the file time to convert to system date and time format or a pointer to it."}]},"_Date_Time_GetFileTime":{"documentation":"Retrieves the date and time that a file was created, accessed and modified","label":"_Date_Time_GetFileTime ( $hFile )","params":[{"label":"$hFile","documentation":"Handle to the file for which dates and times are to be retrieved. The file handle must have been created using the CreateFile function with the GENERIC_READ access right."}]},"_Date_Time_GetLocalTime":{"documentation":"Retrieves the current local date and time","label":"_Date_Time_GetLocalTime (  )","params":[]},"_Date_Time_GetSystemTime":{"documentation":"Retrieves the current system date and time expressed in UTC","label":"_Date_Time_GetSystemTime (  )","params":[]},"_Date_Time_GetSystemTimeAdjustment":{"documentation":"Determines whether the system is applying periodic time adjustments","label":"_Date_Time_GetSystemTimeAdjustment (  )","params":[]},"_Date_Time_GetSystemTimeAsFileTime":{"documentation":"Retrieves the current system date and time expressed in UTC","label":"_Date_Time_GetSystemTimeAsFileTime (  )","params":[]},"_Date_Time_GetSystemTimes":{"documentation":"Retrieves system timing information","label":"_Date_Time_GetSystemTimes (  )","params":[]},"_Date_Time_GetTickCount":{"documentation":"Retrieves the number of milliseconds that have elapsed since Windows was started","label":"_Date_Time_GetTickCount (  )","params":[]},"_Date_Time_GetTimeZoneInformation":{"documentation":"Retrieves the current time zone settings","label":"_Date_Time_GetTimeZoneInformation (  )","params":[]},"_Date_Time_LocalFileTimeToFileTime":{"documentation":"Converts a local file time to a file time based on UTC","label":"_Date_Time_LocalFileTimeToFileTime ( $tLocalTime )","params":[{"label":"$tLocalTime","documentation":"a $tagFILETIME structure that specifies the local file time to be converted into a UTC based file time or a pointer to it."}]},"_Date_Time_SetFileTime":{"documentation":"Sets the date and time that a file was created, accessed and modified","label":"_Date_Time_SetFileTime ( $hFile, $tCreateTime, $tLastAccess, $tLastWrite )","params":[{"label":"$hFile","documentation":"Handle to the file. The file handle must have been created using the CreateFile function with the FILE_WRITE_ATTRIBUTES access right."},{"label":"$tCreateTime","documentation":"a $tagFILETIME structure that contains the new date and time the file was created.  \\nThis can be 0 if the application does not need to set this information."},{"label":"$tLastAccess","documentation":"a $tagFILETIME structure that contains the new date and time the file was last accessed.  \\nThe last access time includes the last time the file was written to, read from, or (in the case of executable files) run.  \\nThis can be 0 if the application does not need to set this information.  \\nTo preserve the existing last access time for a file even after accessing a file, call SetFileTime with this parameter set to -1 before closing the file handle."},{"label":"$tLastWrite","documentation":"a $tagFILETIME structure that contains the new date and time the file was last written to.  \\nThis can be 0 if the application does not want to set this information."}]},"_Date_Time_SetLocalTime":{"documentation":"Sets the current local date and time","label":"_Date_Time_SetLocalTime ( $tSYSTEMTIME )","params":[{"label":"$tSYSTEMTIME","documentation":"a $tagSYSTEMTIME structure that contains the new local date and time or a pointer to it"}]},"_Date_Time_SetSystemTime":{"documentation":"Sets the current system time and date, expressed in UTC","label":"_Date_Time_SetSystemTime ( $tSYSTEMTIME )","params":[{"label":"$tSYSTEMTIME","documentation":"a $tagSYSTEMTIME structure that contains the new system date and time or a pointer to it"}]},"_Date_Time_SetSystemTimeAdjustment":{"documentation":"Enables or disables periodic time adjustments to the system\'s time of day clock","label":"_Date_Time_SetSystemTimeAdjustment ( $iAdjustment, $bDisabled )","params":[{"label":"$iAdjustment","documentation":"The number of 100 nanosecond units added to the time of day clock at each clock interrupt if periodic time adjustment is enabled."},{"label":"$bDisabled","documentation":"A value of True specifies that periodic time adjustment is to be disabled. The system is free to adjust time of day using its own internal mechanisms. The system\'s internal adjustment mechanisms may cause the time-of-day clock to jump noticeably when adjustments are made. A value of False specifies that periodic time adjustment is to be enabled, and will be used to adjust the time of day clock. The system will not interfere with the time adjustment scheme, and will not attempt to synchronize time of day on its own.The system will add the value of $iAdjustment to the time of day at each clock interrupt."}]},"_Date_Time_SetTimeZoneInformation":{"documentation":"Sets the current time zone settings","label":"_Date_Time_SetTimeZoneInformation ( $iBias, $sStdName, $tStdDate, $iStdBias, $sDayName, $tDayDate, $iDayBias )","params":[{"label":"$iBias","documentation":"The current bias for local time translation on this computer. The bias is the difference in minutes between Coordinated Universal Time (UTC) and local time.  \\nAll translations between UTC and local time use the following formula: UTC = local time + bias"},{"label":"$sStdName","documentation":"The description for standard time"},{"label":"$tStdDate","documentation":"A $tagSYSTEMTIME structure that contains a date and local time when the transition from daylight saving time to standard time occurs."},{"label":"$iStdBias","documentation":"The bias value to be used during local time translations that occur during standard time. This value is added to the value of the Bias to form the bias used during standard time. In most time zones, this value is zero."},{"label":"$sDayName","documentation":"The description for daylight saving time"},{"label":"$tDayDate","documentation":"A $tagSYSTEMTIME structure that contains a date and local time when the transition from standard time to daylight saving time occurs."},{"label":"$iDayBias","documentation":"The bias value to be used during local time translation that occur during daylight saving time. This value is added to the value of the Bias member to form the bias used during daylight saving time. In most time zones this value is –60."}]},"_Date_Time_SystemTimeToArray":{"documentation":"Decode a system time to an array","label":"_Date_Time_SystemTimeToArray ( ByRef $tSYSTEMTIME )","params":[{"label":"$tSYSTEMTIME","documentation":"$tagSYSTEMTIME structure"}]},"_Date_Time_SystemTimeToDateStr":{"documentation":"Decode a system time to a date string","label":"_Date_Time_SystemTimeToDateStr ( ByRef $tSYSTEMTIME [, $iFmt = 0] )","params":[{"label":"$tSYSTEMTIME","documentation":"$tagSYSTEMTIME structure"},{"label":"$iFmt","documentation":"**[optional]** 0 returns mm/dd/yyyy (Default)  \\n1 returns yyyy/mm/dd"}]},"_Date_Time_SystemTimeToDateTimeStr":{"documentation":"Decode a system time to a date/time string","label":"_Date_Time_SystemTimeToDateTimeStr ( ByRef $tSYSTEMTIME [, $iFmt = 0] )","params":[{"label":"$tSYSTEMTIME","documentation":"$tagSYSTEMTIME structure"},{"label":"$iFmt","documentation":"**[optional]** 0 returns mm/dd/yyyy hh:mm:ss (Default)  \\n1 returns yyyy/mm/dd hh:mm:ss"}]},"_Date_Time_SystemTimeToFileTime":{"documentation":"Converts a system time to file time format","label":"_Date_Time_SystemTimeToFileTime ( $tSYSTEMTIME )","params":[{"label":"$tSYSTEMTIME","documentation":"a $tagSYSTEMTIME structure to be converted or a pointer to it."}]},"_Date_Time_SystemTimeToTimeStr":{"documentation":"Decode a system time to a time string","label":"_Date_Time_SystemTimeToTimeStr ( ByRef $tSYSTEMTIME )","params":[{"label":"$tSYSTEMTIME","documentation":"$tagSYSTEMTIME structure"}]},"_Date_Time_SystemTimeToTzSpecificLocalTime":{"documentation":"Converts a UTC time to a specified time zone\'s corresponding local time","label":"_Date_Time_SystemTimeToTzSpecificLocalTime ( $tUTC [, $tTimeZone = 0] )","params":[{"label":"$tUTC","documentation":"a $tagSYSTEMTIME structure that specifies a time in UTC or a pointer to it. The function converts this time to the specified time zone\'s local time."},{"label":"$tTimeZone","documentation":"**[optional]** a $tagTIME_ZONE_INFORMATION structure that specifies the time zone of interest or a pointer to it.  \\nIf 0, the function uses the currently active time zone."}]},"_Date_Time_TzSpecificLocalTimeToSystemTime":{"documentation":"Converts a local time to a time in UTC","label":"_Date_Time_TzSpecificLocalTimeToSystemTime ( $tLocalTime [, $tTimeZone = 0] )","params":[{"label":"$tLocalTime","documentation":"a $tagSYSTEMTIME structure that specifies a local time or a pointer to it. The function converts this time to the corresponding UTC time."},{"label":"$tTimeZone","documentation":"**[optional]** a $tagTIME_ZONE_INFORMATION structure that specifies the time zone of interest or a pointer to it.  \\nIf 0, the function uses the currently active time zone."}]},"_DayValueToDate":{"documentation":"Add the given days since noon 4713 BC January 1 and returns the Gregorian date","label":"_DayValueToDate ( $iJulianDate, ByRef $iYear, ByRef $iMonth, ByRef $iDay )","params":[{"label":"$iJulianDate","documentation":"A valid number of days."},{"label":"$iYear","documentation":"will return the year in format YYYY"},{"label":"$iMonth","documentation":"will return the month in format MM"},{"label":"$iDay","documentation":"will return the day in format DD"}]},"_Degree":{"documentation":"Converts radians to degrees","label":"_Degree ( $iRadians )","params":[{"label":"$iRadians","documentation":"Radians to be converted into degrees."}]},"_EventLog__Backup":{"documentation":"Saves the event log to a backup file","label":"_EventLog__Backup ( $hEventLog, $sFileName )","params":[{"label":"$hEventLog","documentation":"Handle to the event log"},{"label":"$sFileName","documentation":"The name of the backup file"}]},"_EventLog__Clear":{"documentation":"Clears the event log","label":"_EventLog__Clear ( $hEventLog, $sFileName )","params":[{"label":"$hEventLog","documentation":"Handle to the event log"},{"label":"$sFileName","documentation":"The name of the backup file. If the name is blank, the current event log is not backed up."}]},"_EventLog__Close":{"documentation":"Closes a read handle to the event log","label":"_EventLog__Close ( $hEventLog )","params":[{"label":"$hEventLog","documentation":"Handle to the event log"}]},"_EventLog__Count":{"documentation":"Retrieves the number of records in the event log","label":"_EventLog__Count ( $hEventLog )","params":[{"label":"$hEventLog","documentation":"A handle to the event log"}]},"_EventLog__DeregisterSource":{"documentation":"Closes a write handle to the event log","label":"_EventLog__DeregisterSource ( $hEventLog )","params":[{"label":"$hEventLog","documentation":"A handle to the event log"}]},"_EventLog__Full":{"documentation":"Retrieves whether the event log is full","label":"_EventLog__Full ( $hEventLog )","params":[{"label":"$hEventLog","documentation":"A handle to the event log"}]},"_EventLog__Notify":{"documentation":"Enables an application to receive event notifications","label":"_EventLog__Notify ( $hEventLog, $hEvent )","params":[{"label":"$hEventLog","documentation":"A handle to the event log"},{"label":"$hEvent","documentation":"A handle to a manual-reset event object"}]},"_EventLog__Oldest":{"documentation":"Retrieves the absolute record number of the oldest record in the event log","label":"_EventLog__Oldest ( $hEventLog )","params":[{"label":"$hEventLog","documentation":"A handle to the event log"}]},"_EventLog__Open":{"documentation":"Opens a handle to the event log","label":"_EventLog__Open ( $sServerName, $sSourceName )","params":[{"label":"$sServerName","documentation":"The UNC name of the server on where the event log will be opened. If blank, the operation is performed on the local computer."},{"label":"$sSourceName","documentation":"The name of the log"}]},"_EventLog__OpenBackup":{"documentation":"Opens a handle to a backup event log","label":"_EventLog__OpenBackup ( $sServerName, $sFileName )","params":[{"label":"$sServerName","documentation":"The UNC name of the server on where the event log will be opened.If blank, the operation is performed on the local computer."},{"label":"$sFileName","documentation":"The name of the backup file"}]},"_EventLog__Read":{"documentation":"Reads an entry from the event log","label":"_EventLog__Read ( $hEventLog [, $bRead = True [, $bForward = True [, $iOffset = 0]]] )","params":[{"label":"$hEventLog","documentation":"A handle to the event log"},{"label":"$bRead","documentation":"**[optional]** If True, operation proceeds sequentially from the last call to this function using this handle.  \\nIf False, the read will operation proceeds from the record specified by the `$iOffset` parameter."},{"label":"$bForward","documentation":"**[optional]** If True, the log is read in date order. If False, the log is read in reverse date order."},{"label":"$iOffset","documentation":"**[optional]** The number of the event record at which the read operation should start.  \\nThis parameter is ignored if `$bRead` is True."}]},"_EventLog__RegisterSource":{"documentation":"Retrieves a registered handle to the specified event log","label":"_EventLog__RegisterSource ( $sServerName, $sSourceName )","params":[{"label":"$sServerName","documentation":"The UNC name of the server on where the event log will be opened. If blank, the operation is performed on the local computer."},{"label":"$sSourceName","documentation":"The name of the event source whose handle is to be retrieved. The source name must be a subkey of a log under the Eventlog registry key."}]},"_EventLog__Report":{"documentation":"Writes an entry at the end of the specified event log","label":"_EventLog__Report ( $hEventLog, $iType, $iCategory, $iEventID, $sUserName, $sDesc, $aData )","params":[{"label":"$hEventLog","documentation":"A handle to the event log. As of Windows XP SP2, this cannot be a handle to the Security log."},{"label":"$iType","documentation":"Event type. This can be one of the following values:  \\n0 - Success event    \\n1 - Error event    \\n2 - Warning event    \\n4 - Information event    \\n8 - Success audit event    \\n16 - Failue audit event"},{"label":"$iCategory","documentation":"The event category. This is source specific information the category can have any value."},{"label":"$iEventID","documentation":"The event identifier. The event identifier specifies the entry in the message file associated with the event source."},{"label":"$sUserName","documentation":"User name for the event. This can be blank to indicate that no name is required."},{"label":"$sDesc","documentation":"Event description"},{"label":"$aData","documentation":"Data array formated as follows:    \\n[0] - Number of bytes in array    \\n[1] - Byte 1    \\n[2] - Byte 2    \\n[n] - Byte n"}]},"_Excel_BookAttach":{"documentation":"Attaches to the first instance of a workbook where the search string matches based on the selected mode","label":"_Excel_BookAttach ( $sString [, $sMode = \\"FilePath\\" [, $oInstance = Default]] )","params":[{"label":"$sString","documentation":"String to search for"},{"label":"$sMode","documentation":"**[optional]** specifies search mode:    \\nFileName - Name of the open workbook    \\nFilePath - Full path to the open workbook (default)    \\nTitle - Title of the Excel window"},{"label":"$oInstance","documentation":"**[optional]** Object of the Excel instance to be searched (default = keyword Default = all instances)"}]},"_Excel_BookClose":{"documentation":"Closes the specified workbook","label":"_Excel_BookClose ( $oWorkbook [, $bSave = True] )","params":[{"label":"$oWorkbook","documentation":"Workbook object"},{"label":"$bSave","documentation":"**[optional]** If True the workbook will be saved before closing (default = True)"}]},"_Excel_BookList":{"documentation":"Returns a list of workbooks of a specified or all Excel instances","label":"_Excel_BookList ( [$oExcel = Default] )","params":[{"label":"$oExcel","documentation":"**[optional]** An Excel application object (default = keyword Default = process all Excel instances)"}]},"_Excel_BookNew":{"documentation":"Creates a new workbook","label":"_Excel_BookNew ( $oExcel [, $iSheets = Default] )","params":[{"label":"$oExcel","documentation":"Excel application object where you want to create the new workbook"},{"label":"$iSheets","documentation":"**[optional]** Number of sheets to create in the new workbook (default = keyword Default = Excel default value). Maximum is 255"}]},"_Excel_BookOpen":{"documentation":"Opens an existing workbook","label":"_Excel_BookOpen ( $oExcel, $sFilePath [, $bReadOnly = False [, $bVisible = True [, $sPassword = Default [, $sWritePassword = Default [, $bUpdateLinks = Default]]]]] )","params":[{"label":"$oExcel","documentation":"Excel application object where you want to open the workbook"},{"label":"$sFilePath","documentation":"Path and filename of the file to be opened"},{"label":"$bReadOnly","documentation":"**[optional]** True opens the workbook as read-only (default = False)"},{"label":"$bVisible","documentation":"**[optional]** True specifies that the workbook window will be visible (default = True)"},{"label":"$sPassword","documentation":"**[optional]** The password that was used to read-protect the workbook, if any (default is none)"},{"label":"$sWritePassword","documentation":"**[optional]** The password that was used to write-protect the workbook, if any (default is none)"},{"label":"$bUpdateLinks","documentation":"**[optional]** Specifies the way external references (links) in the file are updated (default = keyword Default) Valid values are:  \\nDefault: Excel prompts the user to decide how to update links.  \\n0: Excel doesn\'t update links.  \\n3: Excel updates all links."}]},"_Excel_BookOpenText":{"documentation":"Opens a text file and parses the content to a new workbook with a single sheet","label":"_Excel_BookOpenText ( $oExcel, $sFilePath [, $iStartRow = 1 [, $iDataType = Default [, $sTextQualifier = $xlTextQualifierDoubleQuote [, $bConsecutiveDelimiter = False [, $sDelimiter = \\",\\" [, $aFieldInfo = \\"\\" [, $sDecimalSeparator = Default [, $sThousandsSeparator = Default [, $bTrailingMinusNumbers = True [, $iOrigin = Default]]]]]]]]]] )","params":[{"label":"$oExcel","documentation":"Excel application object where you want to open the new workbook"},{"label":"$sFilePath","documentation":"Path and filename of the file to be opened"},{"label":"$iStartRow","documentation":"**[optional]** The row at which to start parsing the file (default = 1)"},{"label":"$iDataType","documentation":"**[optional]** Specifies the column format of the data in the file. Can be any of the XlTextParsingType enumeration.  \\nIf set to keyword Default Excel attempts to determine the column format (default = keyword Default)"},{"label":"$sTextQualifier","documentation":"**[optional]** Specifies the text qualifier (default = $xlTextQualifierDoubleQuote)"},{"label":"$bConsecutiveDelimiter","documentation":"**[optional]** True will consider consecutive delimiters as one delimiter (default = False)"},{"label":"$sDelimiter","documentation":"**[optional]** One or multiple characters to be used as delimiter (default = \\",\\")"},{"label":"$aFieldInfo","documentation":"**[optional]** An array containing parse information for individual columns of data.  \\nThe interpretation depends on the value of DataType.  \\nWhen the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.  \\nThe first element is the column number (1-based), and the second element is one of the XlColumnDataType constants specifying how the column is parsed (default = keyword Default)"},{"label":"$sDecimalSeparator","documentation":"**[optional]** Decimal separator that Excel uses when recognizing numbers.  \\nDefault setting is the system setting (default = keyword Default)"},{"label":"$sThousandsSeparator","documentation":"**[optional]** Thousands separator that Excel uses when recognizing numbers.  \\nDefault setting is the system setting (default = keyword Default)"},{"label":"$bTrailingMinusNumbers","documentation":"**[optional]** True treats numbers with a minus character at the end as negative numbers.  \\nFalse treats such numbers as text (default = True)"},{"label":"$iOrigin","documentation":"**[optional]** Origin of the text file. Can be one of the XlPlatform constants.  \\nAdditionally, this could be an integer representing the code page number of the desired code page.  \\nFor example, \\"1256\\" would specify that the encoding is Arabic (Windows).  \\nIf this argument is omitted, the method uses the current setting of the File Origin option in the Text Import Wizard."}]},"_Excel_BookSave":{"documentation":"Saves the specified workbook","label":"_Excel_BookSave ( $oWorkbook )","params":[{"label":"$oWorkbook","documentation":"Object of the workbook to save"}]},"_Excel_BookSaveAs":{"documentation":"Saves the specified workbook with a new filename and/or type","label":"_Excel_BookSaveAs ( $oWorkbook, $sFilePath [, $iFormat = $xlWorkbookDefault [, $bOverWrite = False [, $sPassword = Default [, $sWritePassword = Default [, $bReadOnlyRecommended = False]]]]] )","params":[{"label":"$oWorkbook","documentation":"Workbook object to be saved"},{"label":"$sFilePath","documentation":"Path and filename of the file to be read"},{"label":"$iFormat","documentation":"**[optional]** Excel writeable filetype. Can be any value of the XlFileFormat enumeration."},{"label":"$bOverWrite","documentation":"**[optional]** True overwrites an already existing file (default = False)"},{"label":"$sPassword","documentation":"**[optional]** The string password to protect the sheet with. If set to keyword Default no password will be used (default = keyword Default)"},{"label":"$sWritePassword","documentation":"**[optional]** The string write-access password to protect the sheet with. If set to keyword Default no password will be used (default = keyword Default)"},{"label":"$bReadOnlyRecommended","documentation":"**[optional]** True displays a message when the file is opened, recommending that the file be opened as read-only (default = False)"}]},"_Excel_Close":{"documentation":"Closes all worksheets and the instance of the Excel application","label":"_Excel_Close ( $oExcel [, $bSaveChanges = True [, $bForceClose = False]] )","params":[{"label":"$oExcel","documentation":"Excel application object as returned by `_Excel_Open()`"},{"label":"$bSaveChanges","documentation":"**[optional]** Specifies whether changed worksheets should be saved before closing (default = True)"},{"label":"$bForceClose","documentation":"**[optional]** If True the Excel application is closed even when it was not started by `_Excel_Open()` (default = False)"}]},"_Excel_ColumnToLetter":{"documentation":"Converts the column number to letter(s)","label":"_Excel_ColumnToLetter ( $iColumn )","params":[{"label":"$iColumn","documentation":"The column number which you want to turn into letter(s)"}]},"_Excel_ColumnToNumber":{"documentation":"Converts the column letter(s) to a number","label":"_Excel_ColumnToNumber ( $sColumn )","params":[{"label":"$sColumn","documentation":"The column letter(s) which you want to turn into a number (e.g. \\"ZZ\\" to 702)"}]},"_Excel_ConvertFormula":{"documentation":"Converts cell references in a formula between A1 and R1C1 reference styles, relative and absolute reference type, or both","label":"_Excel_ConvertFormula ( $oExcel, $sFormula, $iFromStyle [, $iToStyle = Default [, $iToAbsolute = Default [, $vRelativeTo = Default]]] )","params":[{"label":"$oExcel","documentation":"Excel application object"},{"label":"$sFormula","documentation":"String containing the formula to convert"},{"label":"$iFromStyle","documentation":"The reference style of the formula. Can be any of the XlReferenceStyle enumeration"},{"label":"$iToStyle","documentation":"**[optional]** A XlReferenceStyle enumeration specifying the reference style to be returned. If omitted, the reference style isn\'t changed"},{"label":"$iToAbsolute","documentation":"**[optional]** A XlReferenceType which specifies the converted reference type. If this argument is omitted, the reference type isn\'t changed"},{"label":"$vRelativeTo","documentation":"**[optional]** A Range object or a A1 range that contains one cell. Relative references relate to this cell. If omitted A1 is used"}]},"_Excel_Export":{"documentation":"Exports a workbook, worksheet, chart or range as PDF or XPS","label":"_Excel_Export ( $oExcel, $vObject, $sFileName [, $iType = $xlTypePDF [, $iQuality = $xlQualityStandard [, $bIncludeProperties = True [, $iFrom = Default [, $iTo = Default [, $bOpenAfterPublish = Default]]]]]] )","params":[{"label":"$oExcel","documentation":"Excel application object"},{"label":"$vObject","documentation":"Workbook, worksheet, chart or range object to export as PDF or XPS. Range can be specified as A1 range too"},{"label":"$sFileName","documentation":"Path/name of the exported file"},{"label":"$iType","documentation":"**[optional]** Can be either $xlTypePDF or $xlTypeXPS of the XlFixedFormatType enumeration (default = $xlTypePDF)"},{"label":"$iQuality","documentation":"**[optional]** Can be any of the XlFixedFormatQuality enumeration (default = $xlQualityStandard)"},{"label":"$bIncludeProperties","documentation":"**[optional]** True indicates that document properties should be included (default = True)"},{"label":"$iFrom","documentation":"**[optional]** The page number at which to start publishing (default = keyword Default = start at the beginning)"},{"label":"$iTo","documentation":"**[optional]** The page number at which to end publishing (default = keyword Default = end at the last page)"},{"label":"$bOpenAfterPublish","documentation":"**[optional]** True displays the file in viewer after it is published (default = False)"}]},"_Excel_FilterGet":{"documentation":"Returns a list of set filters","label":"_Excel_FilterGet ( $oWorkbook [, $vWorksheet = Default] )","params":[{"label":"$oWorkbook","documentation":"Excel workbook object"},{"label":"$vWorksheet","documentation":"**[optional]** Name, index or worksheet object to be filtered. If set to keyword Default the active sheet will be filtered"}]},"_Excel_FilterSet":{"documentation":"Sets/unsets filter definitions and filters the range","label":"_Excel_FilterSet ( $oWorkbook, $vWorksheet, $vRange, $iField [, $sCriteria1 = Default [, $iOperator = Default [, $sCriteria2 = Default]]] )","params":[{"label":"$oWorkbook","documentation":"Excel workbook object"},{"label":"$vWorksheet","documentation":"Name, index or worksheet object to be filtered. If set to keyword Default the active sheet will be filtered"},{"label":"$vRange","documentation":"A range object or an A1 range to specify the columns to filter on.  \\nUse keyword Default to filter on all used columns of the specified worksheet"},{"label":"$iField","documentation":"Integer offset of the field on which you want to base the filter (the leftmost field is field one).  \\nIf set to 0 all Autofilters on the worksheet will be removed"},{"label":"$sCriteria1","documentation":"**[optional]** The criteria (a string or an array of strings). Use \\"=\\" to find blank fields, or use \\"<>\\" to find nonblank fields.  \\nIf this argument is omitted, the criteria is All.  \\nIf Operator is xlTop10Items, Criteria1 specifies the number of items (for example, \\"10\\")"},{"label":"$iOperator","documentation":"**[optional]** One of the constants of the XlAutoFilterOperator enumeration specifying the type of filter"},{"label":"$sCriteria2","documentation":"**[optional]** The second criteria (a string). Used with Criteria1 and Operator to construct compound criteria"}]},"_Excel_Open":{"documentation":"Connects to an existing Excel instance or creates a new one","label":"_Excel_Open ( [$bVisible = True [, $bDisplayAlerts = False [, $bScreenUpdating = True [, $bInteractive = True [, $bForceNew = False]]]]] )","params":[{"label":"$bVisible","documentation":"**[optional]** True specifies that the application will be visible (default = True)"},{"label":"$bDisplayAlerts","documentation":"**[optional]** False suppresses all prompts and alert messages while opening a workbook (default = False)"},{"label":"$bScreenUpdating","documentation":"**[optional]** False suppresses screen updating to speed up your script (default = True)"},{"label":"$bInteractive","documentation":"**[optional]** If False, Excel blocks all keyboard and mouse input by the user (except input to dialog boxes) (default = True)"},{"label":"$bForceNew","documentation":"**[optional]** True forces to create a new Excel instance even if there is already a running instance (default = False)"}]},"_Excel_PictureAdd":{"documentation":"Adds a picture on the specified workbook and worksheet","label":"_Excel_PictureAdd ( $oWorkbook, $vWorksheet, $sFile, $vRangeOrLeft [, $iTop = Default [, $iWidth = Default [, $iHeight = Default [, $bKeepRatio = True]]]] )","params":[{"label":"$oWorkbook","documentation":"Excel workbook object"},{"label":"$vWorksheet","documentation":"Name, index or worksheet object to be written to. If set to keyword Default the active sheet will be used"},{"label":"$sFile","documentation":"Full path to picture file being added"},{"label":"$vRangeOrLeft","documentation":"Either an A1 range, a range object or an integer denoting the left position of the pictures upper left corner"},{"label":"$iTop","documentation":"**[optional]** If `$vRangeOrLeft` is an integer then `$iTop` is the top position of the pictures upper left corner."},{"label":"$iWidth","documentation":"**[optional]** If specified, sets the width of the picture. If not specified, width will adjust automatically (default = Automatic)"},{"label":"$iHeight","documentation":"**[optional]** If specified, sets the height of the picture. If not specified, height will adjust automatically (default = Automatic)"},{"label":"$bKeepRatio","documentation":"**[optional]** Only used if `$vRangeOrLeft` is a multi-cell range (default = True)    \\nTrue will maintain image aspect ratio while staying within the bounds of `$vRangeOrLeft`.    \\nFalse will fill the `$vRangeOrLeft` regardless of original aspect ratio."}]},"_Excel_Print":{"documentation":"Prints a workbook, worksheet, chart or range","label":"_Excel_Print ( $oExcel, $vObject [, $iCopies = Default [, $sPrinter = Default [, $bPreview = Default [, $iFrom = Default [, $iTo = Default [, $bPrintToFile = Default [, $bCollate = Default [, $sPrToFileName = \\"\\"]]]]]]]] )","params":[{"label":"$oExcel","documentation":"Excel application object"},{"label":"$vObject","documentation":"Workbook, worksheet, chart or range object to print. Range can be specified as A1 range too"},{"label":"$iCopies","documentation":"**[optional]** Number of copies to print (default = keyword Default = 1)"},{"label":"$sPrinter","documentation":"**[optional]** Name of the printer to be used. Defaults to active printer (default = keyword Default)"},{"label":"$bPreview","documentation":"**[optional]** True to invoke print preview before printing (default = keyword Default = False)"},{"label":"$iFrom","documentation":"**[optional]** Page number where to start printing (default = keyword Default = first page)"},{"label":"$iTo","documentation":"**[optional]** Page number where to stop printing (default = keyword Default = last page)"},{"label":"$bPrintToFile","documentation":"**[optional]** True to print to a file. See parameter `$sPrToFileName` (default = keyword Default = False)"},{"label":"$bCollate","documentation":"**[optional]** True to collate multiple copies (default = keyword Default = False)"},{"label":"$sPrToFileName","documentation":"**[optional]** If `$bPrintToFile` is set to True, this argument specifies the name of the file you want to print to."}]},"_Excel_RangeCopyPaste":{"documentation":"Cuts or copies one or multiple cells, rows or columns to a range or from/to the clipboard","label":"_Excel_RangeCopyPaste ( $oWorksheet, $vSourceRange [, $vTargetRange = Default [, $bCut = False [, $iPaste = Default [, $iOperation = Default [, $bSkipBlanks = False [, $bTranspose = False]]]]]] )","params":[{"label":"$oWorksheet","documentation":"Object of the source worksheet"},{"label":"$vSourceRange","documentation":"Source range to copy/cut from. Can be a range object or an A1 range.  \\nIf set to keyword Default then the range will be copied from the clipboard."},{"label":"$vTargetRange","documentation":"**[optional]** Target range to copy/cut to. Can be a range object or an A1 range.  \\nIf set to keyword Default then the range will be copied to the clipboard (default = keyword Default)"},{"label":"$bCut","documentation":"**[optional]** If set to True the source range isn\'t copied but cut out (default = False)  \\nThis parameter is ignored when `$vSourceRange` is set to keyword Default."},{"label":"$iPaste","documentation":"**[optional]** The part of the range to be pasted from the clipboard (formulas, formats ...). Must be a value of the XlPasteType enumeration  \\n(default = keyword Default)"},{"label":"$iOperation","documentation":"**[optional]** The paste operation (add, divide, multiply ...). Must be a value of the XlPasteSpecialOperation enunmeration  \\n(default = keyword Default)"},{"label":"$bSkipBlanks","documentation":"**[optional]** If set to True blank cells from the clipboard will not be pasted into the target range (default = False)"},{"label":"$bTranspose","documentation":"**[optional]** Set to True to transpose rows and columns when the range is pasted (default = False)"}]},"_Excel_RangeDelete":{"documentation":"Deletes one or multiple cells, rows or columns from the specified worksheet","label":"_Excel_RangeDelete ( $oWorksheet, $vRange [, $iShift = Default [, $iEntireRowCol = Default]] )","params":[{"label":"$oWorksheet","documentation":"Excel worksheet object"},{"label":"$vRange","documentation":"Range can be a range object, an A1 range (e.g. \\"A1:B2\\", \\"1:2\\" (row 1 to 2), \\"D:G\\" (columns D to G) etc."},{"label":"$iShift","documentation":"**[optional]** Specifies which way to shift the cells. Can be xlShiftToLeft or xlShiftUp of the XlDeleteShiftDirection enumeration.  \\nIf set to keyword Default, Excel decides based on the shape of the range (default = keyword Default)"},{"label":"$iEntireRowCol","documentation":"**[optional]** If set to 1 the entire row is deleted, if set to 2 the entire column is deleted (default = keyword Default = only delete specified range)"}]},"_Excel_RangeFind":{"documentation":"Finds matching cells in a range or workbook and returns an array with information about the found cells","label":"_Excel_RangeFind ( $oWorkbook, $sSearch [, $vRange = Default [, $iLookIn = $xlValues [, $iLookAt = $xlPart [, $bMatchcase = False]]]] )","params":[{"label":"$oWorkbook","documentation":"Workbook object"},{"label":"$sSearch","documentation":"Search string. Can be a string (wildcards - *?~ - can be used) or any Excel data type. See Remarks"},{"label":"$vRange","documentation":"**[optional]** A range object, an A1 range (string) or keyword Default to search all sheets of the workbook (default = keyword Default)"},{"label":"$iLookIn","documentation":"**[optional]** Specifies where to search. Can be any of the XLFindLookIn enumeration (default = $xlValues)"},{"label":"$iLookAt","documentation":"**[optional]** Specifies whether the search text must match as a whole or any part. Can be any of the XLLookAt enumeration (default = $xlPart)"},{"label":"$bMatchcase","documentation":"**[optional]** True = case sensitive, False = case insensitive (default = False)"}]},"_Excel_RangeInsert":{"documentation":"Inserts one or multiple empty cells, rows or columns into the specified worksheet","label":"_Excel_RangeInsert ( $oWorksheet, $vRange [, $iShift = Default [, $iCopyOrigin = Default]] )","params":[{"label":"$oWorksheet","documentation":"Excel worksheet object"},{"label":"$vRange","documentation":"Range can be a range object, an A1 range (e.g. \\"A1:B2\\", \\"1:2\\" (row 1 to 2), \\"\\"D:G\\" (columns D to G) etc."},{"label":"$iShift","documentation":"**[optional]** Specifies which way to shift the cells. Can be xlShiftToRight or xlShiftDown of the XlInsertShiftDirection enumeration.  \\nIf set to keyword Default, Excel decides based on the shape of the range (default = keyword Default)"},{"label":"$iCopyOrigin","documentation":"**[optional]** Specifies which formatting option to copy. Can be any of the XlInsertFormatOrigin enumeration (default = keyword Default)"}]},"_Excel_RangeLinkAddRemove":{"documentation":"Adds or removes a hyperlink to/from a specified range","label":"_Excel_RangeLinkAddRemove ( $oWorkbook, $vWorksheet, $vRange, $sAddress [, $sSubAddress = Default [, $sScreenTip = Default [, $sTextToDisplay = Default]]] )","params":[{"label":"$oWorkbook","documentation":"Excel workbook object"},{"label":"$vWorksheet","documentation":"Name, index or worksheet object to be used. If set to keyword Default the active sheet will be used"},{"label":"$vRange","documentation":"Either a range object or an A1 range to be set to a hyperlink"},{"label":"$sAddress","documentation":"The address for the specified link. The address can be an E-mail address, an Internet address or a file name. \\"\\" removes an existing hyperlink"},{"label":"$sSubAddress","documentation":"**[optional]** The name of a location within the destination file, such as a bookmark, named range or slide number (default = keyword Default = None)"},{"label":"$sScreenTip","documentation":"**[optional]** The text that appears as a ScreenTip when the mouse pointer is positioned over the specified hyperlink (default = keyword Default = Uses value of `$sAddress`)"},{"label":"$sTextToDisplay","documentation":"**[optional]** The text to be displayed for the hyperlink (default = keyword Default = None)"}]},"_Excel_RangeRead":{"documentation":"Reads the value, formula or displayed text from a cell or range of cells of the specified workbook and worksheet","label":"_Excel_RangeRead ( $oWorkbook [, $vWorksheet = Default [, $vRange = Default [, $iReturn = 1 [, $bForceFunc = False]]]] )","params":[{"label":"$oWorkbook","documentation":"Excel workbook object"},{"label":"$vWorksheet","documentation":"**[optional]** Name, index or worksheet object to be read. If set to keyword Default the active sheet will be used (default = keyword Default)"},{"label":"$vRange","documentation":"**[optional]** Either a range object or an A1 range. If set to Default all used cells will be processed (default = keyword Default)"},{"label":"$iReturn","documentation":"**[optional]** What to return from the specified cell:    \\n1 - Value (default)    \\n2 - Formula    \\n3 - The displayed text    \\n4 - Value2. The only difference between Value and Value2 is that the Value2 property doesn’t use the Currency and Date data types"},{"label":"$bForceFunc","documentation":"**[optional]** True forces to use the `_ArrayTranspose` function instead of the Excel transpose method (default = False)."}]},"_Excel_RangeReplace":{"documentation":"Finds and replaces matching strings in a range or worksheet","label":"_Excel_RangeReplace ( $oWorkbook, $vWorksheet, $vRange, $sSearch, $sReplace [, $iLookAt = $xlPart [, $bMatchcase = False]] )","params":[{"label":"$oWorkbook","documentation":"Excel workbook object"},{"label":"$vWorksheet","documentation":"Name, index or worksheet object to be searched. If set to keyword Default the active sheet will be used"},{"label":"$vRange","documentation":"A range object, an A1 range or keyword Default to search all cells in the specified worksheet"},{"label":"$sSearch","documentation":"Search string"},{"label":"$sReplace","documentation":"Replace string"},{"label":"$iLookAt","documentation":"**[optional]** Specifies whether the search text must match as a whole or any part. Can be any of the XLLookAt enumeration (default = $xlPart)"},{"label":"$bMatchcase","documentation":"**[optional]** True = case sensitive, False = case insensitive (default = False)"}]},"_Excel_RangeSort":{"documentation":"Sorts a cell range","label":"_Excel_RangeSort ( $oWorkbook, $vWorksheet, $vRange, $vKey1 [, $iOrder1 = $xlAscending [, $iSortText = $xlSortNormal [, $iHeader = $xlNo [, $bMatchcase = False [, $iOrientation = $xlSortRows [, $vKey2 = Default [, $iOrder2 = Default [, $vKey3 = Default [, $iOrder3 = Default]]]]]]]]] )","params":[{"label":"$oWorkbook","documentation":"Excel workbook object"},{"label":"$vWorksheet","documentation":"Name, index or worksheet object to be sorted. If set to keyword Default the active sheet will be used"},{"label":"$vRange","documentation":"A range object, an A1 range or keyword Default to sort the whole worksheet (default = keyword Default)"},{"label":"$vKey1","documentation":"Specifies the first sort field, either as an A1 range or range object"},{"label":"$iOrder1","documentation":"**[optional]** Determines the sort order. Can be any of the XlSortOrder enumeration (default = $xlAscending)"},{"label":"$iSortText","documentation":"**[optional]** Specifies how to sort text in $vKey1, $vKey2 and $vKey3. Can be any of the XlSortDataOption enumeration (default = $xlSortNormal)"},{"label":"$iHeader","documentation":"**[optional]** Specifies whether the first row contains header information. Can be any of the XlYesNoGuess enumeration (default = $xlNo)"},{"label":"$bMatchCase","documentation":"**[optional]** True to perform a case-sensitive sort, False to perform non-case sensitive sort (default = False)"},{"label":"$iOrientation","documentation":"**[optional]** Specifies the sort orientation. Can be any of the XlSortOrientation enumeration (default = $xlSortColumns)"},{"label":"$vKey2","documentation":"**[optional]** See $vKey1"},{"label":"$iOrder2","documentation":"**[optional]** See $iOrder1"},{"label":"$vKey3","documentation":"**[optional]** See $vKey1"},{"label":"$iOrder3","documentation":"**[optional]** See $iOrder1"}]},"_Excel_RangeValidate":{"documentation":"Adds data validation to the specified range","label":"_Excel_RangeValidate ( $oWorkbook, $vWorksheet, $vRange, $iType, $sFormula1 [, $iOperator = Default [, $sFormula2 = Default [, $bIgnoreBlank = True [, $iAlertStyle = $xlValidAlertStop [, $sErrorMessage = Default [, $sInputMessage = Default]]]]]] )","params":[{"label":"$oWorkbook","documentation":"Excel workbook object"},{"label":"$vWorksheet","documentation":"Name, index or worksheet object. If set to keyword Default the active sheet will be used"},{"label":"$vRange","documentation":"A range object, an A1 range or keyword Default to validate all cells in the specified worksheet"},{"label":"$iType","documentation":"The validation type. Can be any of the XlDVType enumeration"},{"label":"$sFormula1","documentation":"The first part of the data validation equation"},{"label":"$iOperator","documentation":"**[optional]** The data validation operator. Can be any of the XlFormatConditionOperator enumeration (default = keyword Default)"},{"label":"$sFormula2","documentation":"**[optional]** The second part of the data validation when $iOperator is $xlBetween or $xlNotBetween. Otherwise it is ignored (default = keyword Default)"},{"label":"$bIgnoreBlank","documentation":"**[optional]** If set to True, cell data is considered valid if the cell is blank (default = True)"},{"label":"$iAlertStyle","documentation":"**[optional]** The validation alert style. Can be any of the XlDVAlertStyle enumeration (default = $xlValidAlertStop)"},{"label":"$sErrorMessage","documentation":"**[optional]** Message to be displayed in a MsgBox when invalid data has been entered (default = keyword Default)"},{"label":"$sInputMessage","documentation":"**[optional]** Message to be displayed in a Tooltip when you begin to enter data (default = keyword Default)"}]},"_Excel_RangeWrite":{"documentation":"Writes value(s) or formula(s) to a cell or a cell range on the specified workbook and worksheet","label":"_Excel_RangeWrite ( $oWorkbook, $vWorksheet, $vValue [, $vRange = \\"A1\\" [, $bValue = True [, $bForceFunc = False]]] )","params":[{"label":"$oWorkbook","documentation":"Excel workbook object"},{"label":"$vWorksheet","documentation":"Name, index or worksheet object to be written to. If set to keyword Default the active sheet will be used"},{"label":"$vValue","documentation":"Can be a string, a 1D or 2D zero based array containing the data to be written to the worksheet"},{"label":"$vRange","documentation":"**[optional]** Either an A1 range or a range object (default = \\"A1\\")"},{"label":"$bValue","documentation":"**[optional]** If True the $vValue will be written to the value property. If False $vValue will be written to the formula property (default = True)"},{"label":"$bForceFunc","documentation":"**[optional]** True forces to use the `_ArrayTranspose` function instead of the Excel transpose method (default = False)."}]},"_Excel_SheetAdd":{"documentation":"Adds new sheet(s) to a workbook and sets their names","label":"_Excel_SheetAdd ( $oWorkbook [, $vSheet = Default [, $bBefore = True [, $iCount = 1 [, $sName = \\"\\"]]]] )","params":[{"label":"$oWorkbook","documentation":"A workbook object"},{"label":"$vSheet","documentation":"**[optional]** Object, index or name of the sheet before/after which the new sheet is inserted.    -1 = insert before/after the last worksheet (default = keyword Default = active worksheet)"},{"label":"$bBefore","documentation":"**[optional]** The new sheet will be inserted before $vSheet if True, after $vSheet if False (default = True)"},{"label":"$iCount","documentation":"**[optional]** Number of worksheets to be inserted (default = 1). Maximum is 255"},{"label":"$sName","documentation":"**[optional]** Name(s) of the sheet(s) to create (default = \\"\\" = follows standard Excel new sheet convention).    When $iCount > 1 multiple names can be provided separated by | (pipe character). Sheets are named from left to right"}]},"_Excel_SheetCopyMove":{"documentation":"Copies or moves the specified sheet before or after a specified sheet in the same or a different workbook","label":"_Excel_SheetCopyMove ( $oSourceBook [, $vSourceSheet = Default [, $oTargetBook = $oSourceBook [, $vTargetSheet = 1 [, $bBefore = True [, $bCopy = True]]]]] )","params":[{"label":"$oSourceBook","documentation":"Object of the source workbook where the sheet should be copied/moved from"},{"label":"$vSourceSheet","documentation":"**[optional]** Name, index or object of the sheet to copy/move (default = keyword Default = active sheet)"},{"label":"$oTargetBook","documentation":"**[optional]** Object of the target workbook where the sheet should be copied/moved to (default = keyword Default = $oSourceBook)"},{"label":"$vTargetSheet","documentation":"**[optional]** The copied/moved sheet will be placed before or after this sheet (name, index or object) (default = keyword Default = first sheet)"},{"label":"$bBefore","documentation":"**[optional]** The copied/moved sheet will be placed before $vTargetSheet if True, after it if False (default = True)"},{"label":"$bCopy","documentation":"**[optional]** Copy the specified sheet if True, move the sheet if False (default = True)"}]},"_Excel_SheetDelete":{"documentation":"Deletes the specified sheet by object, string name or by number","label":"_Excel_SheetDelete ( $oWorkbook [, $vSheet = Default] )","params":[{"label":"$oWorkbook","documentation":"A workbook object"},{"label":"$vSheet","documentation":"**[optional]** The sheet to delete, either by object, string name or number (default = keyword Default = active Worksheet)"}]},"_Excel_SheetList":{"documentation":"Returns a list of all sheets in the specified workbook","label":"_Excel_SheetList ( $oWorkbook )","params":[{"label":"$oWorkbook","documentation":"A workbook object"}]},"_FileCountLines":{"documentation":"Returns the number of lines in the specified file","label":"_FileCountLines ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"Path and filename of the file to be read"}]},"_FileCreate":{"documentation":"Creates or zero\'s out the length of the file specified","label":"_FileCreate ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"Path and filename of the file to be created."}]},"_FileListToArray":{"documentation":"Lists files and\\\\or folders in a specified folder (Similar to using Dir with the /B Switch)","label":"_FileListToArray ( $sFilePath [, $sFilter = \\"*\\" [, $iFlag = $FLTA_FILESFOLDERS [, $bReturnPath = False]]] )","params":[{"label":"$sFilePath","documentation":"Folder to generate filelist for."},{"label":"$sFilter","documentation":"**[optional]** the filter to use, default is *. (* and ? wildcards accepted - See Remarks)"},{"label":"$iFlag","documentation":"**[optional]** specifies whether to return files folders or both    $FLTA_FILESFOLDERS (0) = (Default) Return both files and folders    $FLTA_FILES (1) = Return files only    $FLTA_FOLDERS (2) = Return Folders only    Constants are defined in FileConstants.au3"},{"label":"$bReturnPath","documentation":"**[optional]** If True the full path is appended to the file\\\\folder path, otherwise it is relative to the $sFilePath folder. Default is False."}]},"_FileListToArrayRec":{"documentation":"Lists files and\\\\or folders in specified path with optional recursion to defined level and result sorting","label":"_FileListToArrayRec ( $sFilePath [, $sMask = \\"*\\" [, $iReturn = $FLTAR_FILESFOLDERS [, $iRecur = $FLTAR_NORECUR [, $iSort = $FLTAR_NOSORT [, $iReturnPath = $FLTAR_RELPATH]]]]] )","params":[{"label":"$sFilePath","documentation":"Initial path used to generate filelist.If path ends in \\\\ then folders will be returned with an ending \\\\If path lengths > 260 chars, prefix path with \\"\\\\\\\\?\\\\\\" - return paths are not affected"},{"label":"$sMask","documentation":"**[optional]** Filter for result. Multiple filters must be separated by \\";\\"Use \\"|\\" to separate 3 possible sets of filters: \\"Include|Exclude|Exclude_Folders\\"    Include = Files/Folders to include (default = \\"*\\" [all])    Exclude = Files/Folders to exclude (default = \\"\\" [none])    Exclude_Folders = only used if $iRecur = 1 AND $iReturn <> 2 to exclude defined folders (default = \\"\\" [none])"},{"label":"$iReturn","documentation":"**[optional]** Specifies whether to return files, folders or both and omit those with certain attributes    $FLTAR_FILESFOLDERS (0) - (Default) Return both files and folders    $FLTAR_FILES (1) - Return files only    $FLTAR_FOLDERS (2) - Return Folders onlyAdd one or more of the following to $iReturn to omit files/folders with that attribute    + $FLTAR_NOHIDDEN (4) - Hidden files and folders    + $FLTAR_NOSYSTEM (8) - System files and folders    + $FLTAR_NOLINK (16) - Link/junction folders"},{"label":"$iRecur","documentation":"**[optional]** Specifies whether to search recursively in subfolders and to what level    $FLTAR_NORECUR (0) - Do not search in subfolders (Default)    $FLTAR_RECUR (1) - Search in all subfolders (unlimited recursion)Negative integer - Search in subfolders to specified depth"},{"label":"$iSort","documentation":"**[optional]** Sort results in alphabetical and depth order    $FLTAR_NOSORT (0) - Not sorted (Default)    $FLTAR_SORT (1) - Sorted    $FLTAR_FASTSORT (2) - Sorted with faster algorithm (assumes files in folder returned sorted - requires NTFS and not guaranteed)"},{"label":"$iReturnPath","documentation":"**[optional]** Specifies displayed path of results    $FLTAR_NOPATH (0) - File/folder name only    $FLTAR_RELPATH (1) - Relative to initial path (Default)    $FLTAR_FULLPATH (2) - Full path included"}]},"_FilePrint":{"documentation":"Prints a plain text file","label":"_FilePrint ( $sFilePath [, $iShow = @SW_HIDE] )","params":[{"label":"$sFilePath","documentation":"The file to print."},{"label":"$iShow","documentation":"**[optional]** The state of the window. (default = @SW_HIDE)"}]},"_FileReadToArray":{"documentation":"Reads the specified file into a 1D or 2D array","label":"_FileReadToArray ( $sFilePath, ByRef $vReturn [, $iFlags = $FRTA_COUNT [, $sDelimiter = \\"\\"]] )","params":[{"label":"$sFilePath","documentation":"Path and filename of the file to be read."},{"label":"$vReturn","documentation":"Variable to hold returned data - does not need to be an array."},{"label":"$iFlags","documentation":"**[optional]** Add multiple values together as required"},{"label":"$sDelimiter","documentation":"**[optional]** Used to further split each line of the file - e.g. reading CSV files into a 2D array"}]},"_FileWriteFromArray":{"documentation":"Writes an array to a specified file","label":"_FileWriteFromArray ( $sFilePath, Const ByRef $aArray [, $iBase = Default [, $iUBound = Default [, $sDelimiter = \\"|\\"]]] )","params":[{"label":"$sFilePath","documentation":"Path of the file to write to, or a file handle returned by FileOpen()."},{"label":"$aArray","documentation":"The array to be written to the specified file."},{"label":"$iBase","documentation":"**[optional]** Start array index to read, normally set to 0 or 1. Default is 0."},{"label":"$iUbound","documentation":"**[optional]** Set to the last record you want to write to the File. Default is the whole array."},{"label":"$sDelimiter","documentation":"**[optional]** Delimiter character(s) for 2-dimension arrays. Default is \\"|\\"."}]},"_FileWriteLog":{"documentation":"Writes current date, time and the specified text to a log file","label":"_FileWriteLog ( $sLogPath, $sLogMsg [, $iFlag = -1] )","params":[{"label":"$sLogPath","documentation":"Path of the file to write to, or a file handle returned from FileOpen()."},{"label":"$sLogMsg","documentation":"Message to be written to the log file"},{"label":"$iFlag","documentation":"**[optional]** Flag that defines if $sLogMsg will be written to the end of file, or to the beginning.If $iFlag = -1 (default) $sLogMsg will be written to the end of file.Otherwise $sLogMsg will be written to beginning of file."}]},"_FileWriteToLine":{"documentation":"Writes text to a specific line in a file","label":"_FileWriteToLine ( $sFilePath, $iLine, $sText [, $bOverWrite = False] )","params":[{"label":"$sFilePath","documentation":"The file to write to"},{"label":"$iLine","documentation":"The line number to write to"},{"label":"$sText","documentation":"The text to write"},{"label":"$bOverWrite","documentation":"**[optional]**    True - will overwrite the old line    False - (default) will not overwrite"}]},"_FTP_Close":{"documentation":"Closes the _FTP_Open or _FTP_Connect session","label":"_FTP_Close ( $hSession )","params":[{"label":"$hSession","documentation":"as returned by _FTP_Open() or _FTP_Connect()"}]},"_FTP_Command":{"documentation":"Sends a command to an FTP server","label":"_FTP_Command ( $hFTPSession, $sFTPCommand [, $iFlags = $FTP_TRANSFER_TYPE_ASCII [, $iExpectResponse = 0 [, $iContext = 0]]] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()"},{"label":"$sFTPCommand","documentation":"Command string to send to FTP Server"},{"label":"$iFlags","documentation":"**[optional]** $FTP_TRANSFER_TYPE_ASCII or $FTP_TRANSFER_TYPE_BINARY"},{"label":"$iExpectResponse","documentation":"**[optional]** Data socket for response in Async mode. See remarks."},{"label":"$iContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_Connect":{"documentation":"Connects to an FTP server","label":"_FTP_Connect ( $hInternetSession, $sServerName, $sUsername, $sPassword [, $iPassive = 0 [, $iServerPort = 0 [, $iService = $INTERNET_SERVICE_FTP [, $iFlags = 0 [, $fuContext = 0]]]]] )","params":[{"label":"$hInternetSession","documentation":"as returned by _FTP_Open()"},{"label":"$sServerName","documentation":"Server name/ip."},{"label":"$sUsername","documentation":"Username."},{"label":"$sPassword","documentation":"Password."},{"label":"$iPassive","documentation":"**[optional]** Passive mode."},{"label":"$iServerPort","documentation":"**[optional]** Server port ( 0 is default (21) )"},{"label":"$iService","documentation":"**[optional]** This can be one of the following constant values:    $INTERNET_SERVICE_FTP - FTP service.    $INTERNET_SERVICE_GOPHER - Gopher service. Available only on Windows XP, Windows Server 2003 R2 or earlier.    $INTERNET_SERVICE_HTTP - HTTP service."},{"label":"$iFlags","documentation":"**[optional]** Special flags.    $INTERNET_FLAG_PASSIVE    $INTERNET_FLAG_TRANSFER_ASCII    $INTERNET_FLAG_TRANSFER_BINARY"},{"label":"$fuContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_DecodeInternetStatus":{"documentation":"Decode a received Internet Status","label":"_FTP_DecodeInternetStatus ( $iInternetStatus )","params":[{"label":"$iInternetStatus","documentation":"Internet status"}]},"_FTP_DirCreate":{"documentation":"Makes an Directory on an FTP server","label":"_FTP_DirCreate ( $hFTPSession, $sRemote )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$sRemote","documentation":"The Directory to Create."}]},"_FTP_DirDelete":{"documentation":"Delete\'s an Directory on an FTP server","label":"_FTP_DirDelete ( $hFTPSession, $sRemote )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$sRemote","documentation":"The Directory to deleted."}]},"_FTP_DirGetCurrent":{"documentation":"Get Current Directory on an FTP server","label":"_FTP_DirGetCurrent ( $hFTPSession )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."}]},"_FTP_DirPutContents":{"documentation":"Puts an folder on an FTP server. Recursivley if selected","label":"_FTP_DirPutContents ( $hFTPSession, $sLocalFolder, $sRemoteFolder, $bRecursivePut [, $iContext = 0] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$sLocalFolder","documentation":"The local folder i.e. \\"c:\\\\temp\\"."},{"label":"$sRemoteFolder","documentation":"The remote folder i.e. \'/website/home\'."},{"label":"$bRecursivePut","documentation":"Recurse through sub-dirs. 0=Non recursive, 1=Recursive"},{"label":"$iContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_DirSetCurrent":{"documentation":"Set Current Directory on an FTP server","label":"_FTP_DirSetCurrent ( $hFTPSession, $sRemote )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$sRemote","documentation":"The Directory to be set."}]},"_FTP_FileClose":{"documentation":"Closes the Handle returned by _FTP_FileOpen","label":"_FTP_FileClose ( $hFTPFile )","params":[{"label":"$hFTPFile","documentation":"as returned by _FTP_FileOpen()"}]},"_FTP_FileDelete":{"documentation":"Delete an file from an FTP server","label":"_FTP_FileDelete ( $hFTPSession, $sRemoteFile )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()"},{"label":"$sRemoteFile","documentation":"The remote Location for the file."}]},"_FTP_FileGet":{"documentation":"Get file from a FTP server","label":"_FTP_FileGet ( $hFTPSession, $sRemoteFile, $sLocalFile [, $bFailIfExists = False [, $iFlagsAndAttributes = 0 [, $iFlags = $FTP_TRANSFER_TYPE_UNKNOWN [, $iContext = 0]]]] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()"},{"label":"$sRemoteFile","documentation":"The remote Location for the file."},{"label":"$sLocalFile","documentation":"The local file."},{"label":"$bFailIfExists","documentation":"**[optional]** True: do not overwrite existing (default = False)."},{"label":"$iFlagsAndAttributes","documentation":"**[optional]** File attributes for the new file."},{"label":"$iFlags","documentation":"**[optional]** as in _FTP_FileOpen()."},{"label":"$iContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_FileGetSize":{"documentation":"Gets filesize of a file on the FTP server","label":"_FTP_FileGetSize ( $hFTPSession, $sFileName )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$sFileName","documentation":"The file name."}]},"_FTP_FileOpen":{"documentation":"Initiates access to a remote file on an FTP server for reading or writing","label":"_FTP_FileOpen ( $hConnect, $sFileName [, $iAccess = $GENERIC_READ [, $iFlags = $INTERNET_FLAG_TRANSFER_BINARY [, $iContext = 0]]] )","params":[{"label":"$hConnect","documentation":"as returned by _FTP_Connect()."},{"label":"$sFileName","documentation":"String of the ftp file to open."},{"label":"$iAccess","documentation":"**[optional]** The Local attribute (default $GENERIC_READ)."},{"label":"$iFlags","documentation":"**[optional]** Specify the conditions under which the transfers occur. The application should select one transfer type and any of the flags that indicate how the caching of the file will be controlled.The transfer type can be one of the following values:    $FTP_TRANSFER_TYPE_ASCII - Transfers the file using FTP\'s ASCII (Type A) transfer method. Control and formatting information is converted to local equivalents.    $FTP_TRANSFER_TYPE_BINARY - Transfers the file using FTP\'s Image (Type I) transfer method. The file is transferred exactly as it exists with no changes. This is the default transfer method.    $FTP_TRANSFER_TYPE_UNKNOWN - Defaults to $FTP_TRANSFER_TYPE_BINARY.    $INTERNET_FLAG_TRANSFER_ASCII - Transfers the file as ASCII.    $INTERNET_FLAG_TRANSFER_BINARY - Transfers the file as binary.The following values are used to control the caching of the file. The application can use one or more of these values:    $INTERNET_FLAG_HYPERLINK - Forces a reload if there was no Expires time and no LastModified time returned from the server when determining whether to reload the item from the network.    $INTERNET_FLAG_NEED_FILE - Causes a temporary file to be created if the file cannot be cached.    $INTERNET_FLAG_RELOAD - Forces a download of the requested file, object, or directory listing from the origin server, not from the cache.    $INTERNET_FLAG_RESYNCHRONIZE - Reloads HTTP resources if the resource has been modified since the last time it was downloaded. All FTP and Gopher resources are reloaded."},{"label":"$iContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_FilePut":{"documentation":"Puts an file on an FTP server","label":"_FTP_FilePut ( $hFTPSession, $sLocalFile, $sRemoteFile [, $iFlags = 0 [, $iContext = 0]] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()"},{"label":"$sLocalFile","documentation":"The local file."},{"label":"$sRemoteFile","documentation":"The remote Location for the file."},{"label":"$iFlags","documentation":"**[optional]** Specify the conditions under which the transfers occur. The application should select one transfer type and any of the flags that indicate how the caching of the file will be controlled.The transfer type can be one of the following values:    $FTP_TRANSFER_TYPE_ASCII - Transfers the file using FTP\'s ASCII (Type A) transfer method. Control and formatting information is converted to local equivalents.    $FTP_TRANSFER_TYPE_BINARY - Transfers the file using FTP\'s Image (Type I) transfer method. The file is transferred exactly as it exists with no changes. This is the default transfer method.    $FTP_TRANSFER_TYPE_UNKNOWN - Defaults to $FTP_TRANSFER_TYPE_BINARY.    $INTERNET_FLAG_TRANSFER_ASCII - Transfers the file as ASCII.    $INTERNET_FLAG_TRANSFER_BINARY - Transfers the file as binary.The following values are used to control the caching of the file. The application can use one or more of these values:    $INTERNET_FLAG_HYPERLINK - Forces a reload if there was no Expires time and no LastModified time returned from the server when determining whether to reload the item from the network.    $INTERNET_FLAG_NEED_FILE - Causes a temporary file to be created if the file cannot be cached.    $INTERNET_FLAG_RELOAD - Forces a download of the requested file, object, or directory listing from the origin server, not from the cache.    $INTERNET_FLAG_RESYNCHRONIZE - Reloads HTTP resources if the resource has been modified since the last time it was downloaded. All FTP and Gopher resources are reloaded."},{"label":"$iContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_FileRead":{"documentation":"Reads data from a handle opened by _FTP_FileOpen()","label":"_FTP_FileRead ( $hFTPFile, $iNumberOfBytesToRead )","params":[{"label":"$hFTPFile","documentation":"Handle returned by _FTP_FileOpen() to the ftp file."},{"label":"$iNumberOfBytesToRead","documentation":"Number of bytes to read."}]},"_FTP_FileRename":{"documentation":"Renames an file on an FTP server","label":"_FTP_FileRename ( $hFTPSession, $sExisting, $sNew )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$sExisting","documentation":"The old file name."},{"label":"$sNew","documentation":"The new file name."}]},"_FTP_FileTimeLoHiToStr":{"documentation":"Converts filetime Loword and Hiword to a string","label":"_FTP_FileTimeLoHiToStr ( $iLoDWORD, $iHiDWORD [, $bFmt = 0] )","params":[{"label":"$iLoDWORD","documentation":"FileTime Low"},{"label":"$iHiDWORD","documentation":"File Time Hi"},{"label":"$bFmt","documentation":"**[optional]**    0 returns mm/dd/yyyy hh:mm:ss (Default)    1 returns yyyy/mm/dd hh:mm:ss"}]},"_FTP_FindFileClose":{"documentation":"Delete FindFile Handle","label":"_FTP_FindFileClose ( $hFTPFind )","params":[{"label":"$hFTPFind","documentation":"as returned by _FTP_FindFileFirst()"}]},"_FTP_FindFileFirst":{"documentation":"Find First File on an FTP server","label":"_FTP_FindFileFirst ( $hFTPSession, $sRemotePath, ByRef $hFTPFind [, $iFlags = 0 [, $iContext = 0]] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$sRemotePath","documentation":"path to be used when searching the file."},{"label":"$hFTPFind","documentation":"returns Handle to be used in _FTP_FindFileNext() or _FTP_FindFileClose()."},{"label":"$iFlags","documentation":"**[optional]** $iFlags can be a combination of :    $INTERNET_FLAG_HYPERLINK    $INTERNET_FLAG_NEED_FILE    $INTERNET_FLAG_NO_CACHE_WRITE    $INTERNET_FLAG_RELOAD    $INTERNET_FLAG_RESYNCHRONIZE"},{"label":"$iContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_FindFileNext":{"documentation":"Find Next File on an FTP server","label":"_FTP_FindFileNext ( $hFTPFind )","params":[{"label":"$hFTPFind","documentation":"Handle as returned by _FTP_FindFileFirst()."}]},"_FTP_GetLastResponseInfo":{"documentation":"Retrieves the last error description or server response on the thread calling this function","label":"_FTP_GetLastResponseInfo ( ByRef $iError, ByRef $sMessage )","params":[{"label":"$iError","documentation":"returns an error message pertaining to the operation that failed."},{"label":"$sMessage","documentation":"returns the error text."}]},"_FTP_ListToArray":{"documentation":"Get Filenames, Directories or Both of current remote directory","label":"_FTP_ListToArray ( $hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iContext = 0]]] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$iReturntype","documentation":"**[optional]** 0 = Both Files and Directories, 1 = Directories, 2 = Files."},{"label":"$iFlags","documentation":"**[optional]** default = $INTERNET_FLAG_NO_CACHE_WRITE. See _FTP_FindFileFirst()."},{"label":"$iContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_ListToArray2D":{"documentation":"Get Filenames and filesizes of current remote directory","label":"_FTP_ListToArray2D ( $hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iContext = 0]]] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$iReturntype","documentation":"**[optional]** 0 = Both Files and Directories, 1 = Directories, 2 = Files."},{"label":"$iFlags","documentation":"**[optional]** default = $INTERNET_FLAG_NO_CACHE_WRITE. See _FTP_FindFileFirst()."},{"label":"$iContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_ListToArrayEx":{"documentation":"Get names, sizes, attributes and times of files/dir of current remote directory","label":"_FTP_ListToArrayEx ( $hFTPSession [, $iReturnType = 0 [, $iFlags = $INTERNET_FLAG_NO_CACHE_WRITE [, $iFmt = 1 [, $iContext = 0]]]] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$iReturntype","documentation":"**[optional]** 0 = Both Files and Directories, 1 = Directories, 2 = Files."},{"label":"$iFlags","documentation":"**[optional]** default = $INTERNET_FLAG_NO_CACHE_WRITE. See _FTP_FindFileFirst()."},{"label":"$iFmt","documentation":"**[optional]** type on the date strings:    1 = yyyy/mm/dd    0 = mm/dd/yyyy"},{"label":"$iContext","documentation":"**[optional]** A variable that contains the application-defined value that associates this search with any application data.This is only used if the application has already called _FTP_SetStatusCallback() to set up a status callback function."}]},"_FTP_Open":{"documentation":"Opens an FTP session","label":"_FTP_Open ( $sAgent [, $iAccessType = $INTERNET_OPEN_TYPE_DIRECT [, $sProxyName = \'\' [, $sProxyBypass = \'\' [, $iFlags = 0]]]] )","params":[{"label":"$sAgent","documentation":"Random name. ( like \\"myftp\\" )"},{"label":"$iAccessType","documentation":"**[optional]** Set if proxy is used:    $INTERNET_OPEN_TYPE_DIRECT -> no proxy (Default)    $INTERNET_OPEN_TYPE_PRECONFIG -> Retrieves the proxy or direct configuration from the registry.    $INTERNET_OPEN_TYPE_PRECONFIG_WITH_NO_AUTOPROXY -> Retrieves the proxy or direct configuration from the registry and prevents the use of a startup Microsoft JScript or Internet Setup (INS) file.    $INTERNET_OPEN_TYPE_PROXY -> Passes requests to the proxy unless a proxy bypass list is supplied and the name to be resolved bypasses the proxy. Then no proxy is used."},{"label":"$sProxyName","documentation":"**[optional]** ProxyName."},{"label":"$sProxyBypass","documentation":"**[optional]** ProxyByPasses\'s."},{"label":"$iFlags","documentation":"**[optional]**    $INTERNET_FLAG_ASYNC -> Makes only asynchronous requests on handles descended from the handle returned from this function.    $INTERNET_FLAG_FROM_CACHE -> Does not make network requests. All entities are returned from the cache. If the requested item is not in the cache, a suitable error, such as ERROR_FILE_NOT_FOUND, is returned."}]},"_FTP_ProgressDownload":{"documentation":"Downloads a file in Binary Mode and shows a Progress window or by Calling a User defined Function","label":"_FTP_ProgressDownload ( $hFTPSession, $sLocalFile, $sRemoteFile [, $hFunctionToCall = 0] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$sLocalFile","documentation":"The local file to create."},{"label":"$sRemoteFile","documentation":"The remote source file."},{"label":"$hFunctionToCall","documentation":"**[optional]** A variable assigned to the user defined function to update a progress bar or react on user interation, such as aborting or exiting the process. Default = none. See remarks."}]},"_FTP_ProgressUpload":{"documentation":"Uploads a file in Binary Mode and shows a Progress window or by Calling a User defined Function","label":"_FTP_ProgressUpload ( $hFTPSession, $sLocalFile, $sRemoteFile [, $hFunctionToCall = 0] )","params":[{"label":"$hFTPSession","documentation":"as returned by _FTP_Connect()."},{"label":"$sLocalFile","documentation":"The local file to create."},{"label":"$sRemoteFile","documentation":"The remote source file."},{"label":"$hFunctionToCall","documentation":"**[optional]** A variable assigned to the user defined function to update a progress bar or react on user interation, such as aborting or exiting the process. Default = none. See remarks."}]},"_FTP_SetStatusCallback":{"documentation":"Registers callback function that WinINet functions can call as progress is made during an operation","label":"_FTP_SetStatusCallback ( $hInternetSession, $sFunctionName )","params":[{"label":"$hInternetSession","documentation":"as returned by _FTP_Open()"},{"label":"$sFunctionName","documentation":"the name of the User Defined Function to call."}]},"_GDIPlus_ArrowCapCreate":{"documentation":"Creates an adjustable arrow line cap with the specified height and width","label":"_GDIPlus_ArrowCapCreate ( $fHeight, $fWidth [, $bFilled = True] )","params":[{"label":"$fHeight","documentation":"Specifies the length, in units, of the arrow from its base to its point"},{"label":"$fWidth","documentation":"Specifies the distance, in units, between the corners of the base of the arrow"},{"label":"$bFilled","documentation":"**[optional]** Fill flag:    True - Arrow will be filled    False - Arrow will not be filled"}]},"_GDIPlus_ArrowCapDispose":{"documentation":"Release an adjustable arrow line cap object","label":"_GDIPlus_ArrowCapDispose ( $hCap )","params":[{"label":"$hCap","documentation":"Handle to an adjustable arrow line cap object"}]},"_GDIPlus_ArrowCapGetFillState":{"documentation":"Determines whether the arrow cap is filled","label":"_GDIPlus_ArrowCapGetFillState ( $hArrowCap )","params":[{"label":"$hArrowCap","documentation":"Handle to a ArrowCap object"}]},"_GDIPlus_ArrowCapGetHeight":{"documentation":"Gets the height of the arrow cap","label":"_GDIPlus_ArrowCapGetHeight ( $hArrowCap )","params":[{"label":"$hArrowCap","documentation":"Handle to a ArrowCap object"}]},"_GDIPlus_ArrowCapGetMiddleInset":{"documentation":"Gets the value of the inset","label":"_GDIPlus_ArrowCapGetMiddleInset ( $hArrowCap )","params":[{"label":"$hArrowCap","documentation":"Handle to a ArrowCap object"}]},"_GDIPlus_ArrowCapGetWidth":{"documentation":"Gets the width of the arrow cap","label":"_GDIPlus_ArrowCapGetWidth ( $hArrowCap )","params":[{"label":"$hArrowCap","documentation":"Handle to a ArrowCap object"}]},"_GDIPlus_ArrowCapSetFillState":{"documentation":"Sets whether the arrow cap is filled","label":"_GDIPlus_ArrowCapSetFillState ( $hArrowCap [, $bFilled = True] )","params":[{"label":"$hArrowCap","documentation":"Handle to a ArrowCap object"},{"label":"$bFilled","documentation":"**[optional]** Fill state:    True - Arrow cap is filled    False - Arrow cap is not filled"}]},"_GDIPlus_ArrowCapSetHeight":{"documentation":"Sets the height of the arrow cap","label":"_GDIPlus_ArrowCapSetHeight ( $hArrowCap, $fHeight )","params":[{"label":"$hArrowCap","documentation":"Handle to a ArrowCap object"},{"label":"$fHeight","documentation":"Specifies the length, in units, of the arrow from its base to its point"}]},"_GDIPlus_ArrowCapSetMiddleInset":{"documentation":"Gets the value of the inset","label":"_GDIPlus_ArrowCapSetMiddleInset ( $hArrowCap, $fInset )","params":[{"label":"$hArrowCap","documentation":"Handle to a ArrowCap object"},{"label":"$fInset","documentation":"Inset value"}]},"_GDIPlus_ArrowCapSetWidth":{"documentation":"Sets the width of the arrow cap","label":"_GDIPlus_ArrowCapSetWidth ( $hArrowCap, $fWidth )","params":[{"label":"$hArrowCap","documentation":"Handle to a ArrowCap object"},{"label":"$fWidth","documentation":"Specifies the width, in units, of the arrow between the endpoints of the base of the arrow"}]},"_GDIPlus_BitmapApplyEffect":{"documentation":"Alters a Bitmap by applying a specified effect","label":"_GDIPlus_BitmapApplyEffect ( $hBitmap, $hEffect [, $tRECT = Null] )","params":[{"label":"$hBitmap","documentation":"Handle to a Bitmap to which the effect is applied."},{"label":"$hEffect","documentation":"Handle to an Effect to be applied."},{"label":"$tRECT","documentation":"**[optional]** a $tagRECT structure that specifies the portion of the input bitmap to which the effect is applied."}]},"_GDIPlus_BitmapApplyEffectEx":{"documentation":"Alters a Bitmap by applying a specified effect","label":"_GDIPlus_BitmapApplyEffectEx ( $hBitmap, $hEffect [, $iX = 0 [, $iY = 0 [, $iW = 0 [, $iH = 0]]]] )","params":[{"label":"$hBitmap","documentation":"Handle to a Bitmap to which the effect is applied."},{"label":"$hEffect","documentation":"Handle to an Effect to be applied."},{"label":"$iX","documentation":"**[optional]** The X coordinate of the upper left corner of the portion to which the effect is applied."},{"label":"$iY","documentation":"**[optional]** The Y coordinate of the upper left corner of the portion to which the effect is applied."},{"label":"$iW","documentation":"**[optional]** Specifies the width of the portion to which the effect is applied."},{"label":"$iH","documentation":"**[optional]** Specifies the height of the portion to which the effect is applied."}]},"_GDIPlus_BitmapCloneArea":{"documentation":"Create a clone of a Bitmap object from the coordinates and format specified","label":"_GDIPlus_BitmapCloneArea ( $hBitmap, $nLeft, $nTop, $nWidth, $nHeight [, $iFormat = 0x00021808] )","params":[{"label":"$hBitmap","documentation":"Handle to a Bitmap object"},{"label":"$nLeft","documentation":"X coordinate of upper left corner of the rectangle to copy"},{"label":"$nTop","documentation":"Y coordinate of upper left corner of the rectangle to copy"},{"label":"$nWidth","documentation":"The width of the rectangle that specifies the portion of this bitmap to copy"},{"label":"$nHeight","documentation":"The height of the rectangle that specifies the portion of this bitmap to copy"},{"label":"$iFormat","documentation":"**[optional]** Pixel format for the new bitmap:    $GDIP_PXF01INDEXED = 1 bit per pixel, indexed    $GDIP_PXF04INDEXED = 4 bits per pixel, indexed    $GDIP_PXF08INDEXED = 8 bits per pixel, indexed    $GDIP_PXF16GRAYSCALE = 16 bits per pixel, grayscale    $GDIP_PXF16RGB555 = 16 bits per pixel; 5 bits for each RGB component    $GDIP_PXF16RGB565 = 16 bits per pixel; 5 bits for red, 6 bits for green and 5 bits blue    $GDIP_PXF16ARGB1555 = 16 bits per pixel; 1 bit for alpha and 5 bits for each RGB component    $GDIP_PXF24RGB = 24 bits per pixel; 8 bits for each RGB component    $GDIP_PXF32RGB = 32 bits per pixel; 8 bits for each RGB component. No alpha component.    $GDIP_PXF32ARGB = 32 bits per pixel; 8 bits for each RGB and alpha component    $GDIP_PXF32PARGB = 32 bits per pixel; 8 bits for each RGB and alpha component, pre-multiplied    $GDIP_PXF48RGB = 48 bits per pixel; 16 bits for each RGB component    $GDIP_PXF64ARGB = 64 bits per pixel; 16 bits for each RGB and alpha component    $GDIP_PXF64PARGB = 64 bits per pixel; 16 bits for each RGB and alpha component, pre-multiplied"}]},"_GDIPlus_BitmapConvertFormat":{"documentation":"Converts a bitmap to a specified pixel format","label":"_GDIPlus_BitmapConvertFormat ( $hBitmap, $iPixelFormat, $iDitherType, $iPaletteType, $tPalette [, $fAlphaThresholdPercent = 0.0] )","params":[{"label":"$hBitmap","documentation":"Handle to a Bitmap to which the effect is applied."},{"label":"$iPixelFormat","documentation":"Pixel format constant that specifies the new pixel format ($GDIP_PXF*)."},{"label":"$iDitherType","documentation":"DitherType constant that specifies the dithering algorithm ($GDIP_DitherType*)."},{"label":"$iPaletteType","documentation":"PaletteType constant that specifies a standard palette to be used for dithering ($GDIP_PaletteType*)."},{"label":"$tPalette","documentation":"Structure that specifies the palette whose indexes are stored in the pixel data of the converted bitmap."},{"label":"$fAlphaThresholdPercent","documentation":"**[optional]** Real number in the range 0.0 through 100.0 that specifies which pixels in the source bitmap will map to the transparent color in the converted bitmap."}]},"_GDIPlus_BitmapCreateApplyEffect":{"documentation":"Creates a new Bitmap by applying a specified effect to an existing Bitmap","label":"_GDIPlus_BitmapCreateApplyEffect ( $hBitmap, $hEffect [, $tRECT = Null [, $tOutRECT = Null]] )","params":[{"label":"$hBitmap","documentation":"Handle to a Bitmap to which the effect is applied."},{"label":"$hEffect","documentation":"Handle to an Effect to be applied."},{"label":"$tRECT","documentation":"**[optional]** a $tagRECT structure that specifies the portion of the input bitmap that is used."},{"label":"$tOutRECT","documentation":"**[optional]** a $tagRECT structure that receives the portion of the input bitmap that was used."}]},"_GDIPlus_BitmapCreateApplyEffectEx":{"documentation":"Creates a new Bitmap by applying a specified effect to an existing Bitmap","label":"_GDIPlus_BitmapCreateApplyEffectEx ( $hBitmap, $hEffect [, $iX = 0 [, $iY = 0 [, $iW = 0 [, $iH = 0]]]] )","params":[{"label":"$hBitmap","documentation":"Handle to a Bitmap to which the effect is applied."},{"label":"$hEffect","documentation":"Handle to an Effect to be applied."},{"label":"$iX","documentation":"**[optional]** The X coordinate of the upper left corner of the portion to which the effect is applied."},{"label":"$iY","documentation":"**[optional]** The Y coordinate of the upper left corner of the portion to which the effect is applied."},{"label":"$iW","documentation":"**[optional]** Specifies the width of the portion to which the effect is applied."},{"label":"$iH","documentation":"**[optional]** Specifies the height of the portion to which the effect is applied."}]},"_GDIPlus_BitmapCreateDIBFromBitmap":{"documentation":"Creates a DIB Section","label":"_GDIPlus_BitmapCreateDIBFromBitmap ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"A handle to a GDI+ bitmap"}]},"_GDIPlus_BitmapCreateFromFile":{"documentation":"Create a Bitmap object from file","label":"_GDIPlus_BitmapCreateFromFile ( $sFileName )","params":[{"label":"$sFileName","documentation":"Path to a bitmap file"}]},"_GDIPlus_BitmapCreateFromGraphics":{"documentation":"Creates a Bitmap object based on a Graphics object, a width, and a height","label":"_GDIPlus_BitmapCreateFromGraphics ( $iWidth, $iHeight, $hGraphics )","params":[{"label":"$iWidth","documentation":"Specifies the width, in pixels, of the bitmap"},{"label":"$iHeight","documentation":"Specifies the height, in pixels, of the bitmap"},{"label":"$hGraphics","documentation":"Handle to a Graphics object"}]},"_GDIPlus_BitmapCreateFromHBITMAP":{"documentation":"Create a Bitmap object from a bitmap handle","label":"_GDIPlus_BitmapCreateFromHBITMAP ( $hBitmap [, $hPal = 0] )","params":[{"label":"$hBitmap","documentation":"Handle to a HBITMAP"},{"label":"$hPal","documentation":"**[optional]** Handle to a HPALETTE"}]},"_GDIPlus_BitmapCreateFromHICON":{"documentation":"Creates a Bitmap object based on an icon","label":"_GDIPlus_BitmapCreateFromHICON ( $hIcon )","params":[{"label":"$hIcon","documentation":"Handle to an icon"}]},"_GDIPlus_BitmapCreateFromHICON32":{"documentation":"Creates a Bitmap object based on a 32bit icon","label":"_GDIPlus_BitmapCreateFromHICON32 ( $hIcon )","params":[{"label":"$hIcon","documentation":"Handle to an icon"}]},"_GDIPlus_BitmapCreateFromMemory":{"documentation":"Loads an image (JPG, BMP, PNG, etc.) which is saved as a binary string and converts it to a bitmap (GDI+) or hbitmap (GDI)","label":"_GDIPlus_BitmapCreateFromMemory ( $dImage [, $bHBITMAP = False] )","params":[{"label":"$dImage","documentation":"The binary string which contains any valid image which is supported by GDI+"},{"label":"$bHBITMAP","documentation":"**[optional]** If False a bitmap will be created, if True a hbitmap (GDI) will be created"}]},"_GDIPlus_BitmapCreateFromResource":{"documentation":"Creates a Bitmap object based on an icon","label":"_GDIPlus_BitmapCreateFromResource ( $hInst, $vResourceName )","params":[{"label":"$hInst","documentation":"Handle to an instance of a module whose executable file contains a bitmap resource"},{"label":"$vResourceName","documentation":"The resource name string or identifier"}]},"_GDIPlus_BitmapCreateFromScan0":{"documentation":"Creates a Bitmap object based on an array of bytes along with size and format information","label":"_GDIPlus_BitmapCreateFromScan0 ( $iWidth, $iHeight [, $iPixelFormat = $GDIP_PXF32ARGB [, $iStride = 0 [, $pScan0 = 0]]] )","params":[{"label":"$iWidth","documentation":"The bitmap width, in pixels."},{"label":"$iHeight","documentation":"The bitmap height, in pixels."},{"label":"$iPixelFormat","documentation":"**[optional]** Specifies the format of the pixel data.    $GDIP_PXF01INDEXED = 1 bit per pixel, indexed    $GDIP_PXF04INDEXED = 4 bits per pixel, indexed    $GDIP_PXF08INDEXED = 8 bits per pixel, indexed    $GDIP_PXF16GRAYSCALE = 16 bits per pixel, grayscale    $GDIP_PXF16RGB555 = 16 bits per pixel; 5 bits for each RGB component    $GDIP_PXF16RGB565 = 16 bits per pixel; 5 bits for red, 6 bits for green and 5 bits blue    $GDIP_PXF16ARGB1555 = 16 bits per pixel; 1 bit for alpha and 5 bits for each RGB component    $GDIP_PXF24RGB = 24 bits per pixel; 8 bits for each RGB component    $GDIP_PXF32RGB = 32 bits per pixel; 8 bits for each RGB component. No alpha component.    $GDIP_PXF32ARGB = 32 bits per pixel; 8 bits for each RGB and alpha component    $GDIP_PXF32PARGB = 32 bits per pixel; 8 bits for each RGB and alpha component, pre-multiplied"},{"label":"$iStride","documentation":"**[optional]** Integer that specifies the byte offset between the beginning of one scan line and the next."},{"label":"$pScan0","documentation":"**[optional]** Pointer to an array of bytes that contains the pixel data."}]},"_GDIPlus_BitmapCreateFromStream":{"documentation":"Creates a Bitmap object based on an IStream COM interface","label":"_GDIPlus_BitmapCreateFromStream ( $pStream )","params":[{"label":"$pStream","documentation":"Pointer to an IStream COM interface"}]},"_GDIPlus_BitmapCreateHBITMAPFromBitmap":{"documentation":"Create a handle to a bitmap from a bitmap object","label":"_GDIPlus_BitmapCreateHBITMAPFromBitmap ( $hBitmap [, $iARGB = 0xFF000000] )","params":[{"label":"$hBitmap","documentation":"Handle to a bitmap object"},{"label":"$iARGB","documentation":"**[optional]** Color object that specifies the background color"}]},"_GDIPlus_BitmapDispose":{"documentation":"Release a bitmap object","label":"_GDIPlus_BitmapDispose ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"Handle to a bitmap object"}]},"_GDIPlus_BitmapGetHistogram":{"documentation":"Returns one or more histograms for specified color channels of the specified Bitmap","label":"_GDIPlus_BitmapGetHistogram ( $hBitmap, $iHistogramFormat, $iHistogramSize, $tChannel_0 [, $tChannel_1 = 0 [, $tChannel_2 = 0 [, $tChannel_3 = 0]]] )","params":[{"label":"$hBitmap","documentation":"Handle to a Bitmap to which the effect is applied."},{"label":"$iHistogramFormat","documentation":"HistogramFormat constant that specifies the channels for which histograms will be created ($GDIP_HistogramFormat*)."},{"label":"$iHistogramSize","documentation":"Number of elements in each of the arrays pointed to by $tChannel_0, $tChannel_1, $tChannel_2, and $tChannel_3?"},{"label":"$tChannel_0","documentation":"A DLL struct array of UINTs that receives the first histogram."},{"label":"$tChannel_1","documentation":"**[optional]** A DLL struct array of UINTs that receives the second histogram if there is a second histogram.Pass NULL if there is no second histogram."},{"label":"$tChannel_2","documentation":"**[optional]** A DLL struct array of UINTs that receives the third histogram if there is a third histogram.Pass NULL if there is no third histogram."},{"label":"$tChannel_3","documentation":"**[optional]** A DLL struct array of UINTs that receives the fourth histogram if there is a fourth histogram.Pass NULL if there is no fourth histogram."}]},"_GDIPlus_BitmapGetHistogramEx":{"documentation":"Returns histograms for the Bitmap´s color channels: Red, Green, Blue, Alpha and Grey","label":"_GDIPlus_BitmapGetHistogramEx ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"Handle to a Bitmap to which the effect is applied."}]},"_GDIPlus_BitmapGetHistogramSize":{"documentation":"Returns the number of elements for allocation by _GDIPlus_BitmapGetHistogramEx()","label":"_GDIPlus_BitmapGetHistogramSize ( $iFormat )","params":[{"label":"$iFormat","documentation":"HistogramFormat constant ($GDIP_HistogramFormat*)"}]},"_GDIPlus_BitmapGetPixel":{"documentation":"Gets the color of a specified pixel in this bitmap","label":"_GDIPlus_BitmapGetPixel ( $hBitmap, $iX, $iY )","params":[{"label":"$hBitmap","documentation":"Pointer to the Bitmap object"},{"label":"$iX","documentation":"The X coordinate of the pixel"},{"label":"$iY","documentation":"The Y coordinate of the pixel"}]},"_GDIPlus_BitmapLockBits":{"documentation":"Locks a portion of a bitmap for reading or writing","label":"_GDIPlus_BitmapLockBits ( $hBitmap, $iLeft, $iTop, $iWidth, $iHeight [, $iFlags = $GDIP_ILMREAD [, $iFormat = $GDIP_PXF32RGB]] )","params":[{"label":"$hBitmap","documentation":"Handle to a bitmap object"},{"label":"$iLeft","documentation":"X coordinate of the upper-left corner of the rectangle to lock"},{"label":"$iTop","documentation":"Y coordinate of the upper-left corner of the rectangle to lock"},{"label":"$iWidth","documentation":"The width of the rectangle to lock"},{"label":"$iHeight","documentation":"The height of the rectangle to lock"},{"label":"$iFlags","documentation":"**[optional]** Set of flags that specify whether the locked portion of the bitmap is available for reading or for writing and whether the caller has already allocated a buffer. Can be a combination of the following:    $GDIP_ILMREAD - A portion of the image is locked for reading    $GDIP_ILMWRITE - A portion of the image is locked for writing    $GDIP_ILMUSERINPUTBUF - The buffer is allocated by the user"},{"label":"$iFormat","documentation":"**[optional]** Specifies the format of the pixel data in the temporary buffer. Can be one of the following:    $GDIP_PXF01INDEXED - 1 bpp, indexed    $GDIP_PXF04INDEXED - 4 bpp, indexed    $GDIP_PXF08INDEXED - 8 bpp, indexed    $GDIP_PXF16GRAYSCALE - 16 bpp, grayscale    $GDIP_PXF16RGB555 - 16 bpp; 5 bits for each RGB    $GDIP_PXF16RGB565 - 16 bpp; 5 bits red, 6 bits green, and 5 bits blue    $GDIP_PXF16ARGB1555 - 16 bpp; 1 bit for alpha and 5 bits for each RGB component    $GDIP_PXF24RGB - 24 bpp; 8 bits for each RGB    $GDIP_PXF32RGB - 32 bpp; 8 bits for each RGB. No alpha.    $GDIP_PXF32ARGB - 32 bpp; 8 bits for each RGB and alpha    $GDIP_PXF32PARGB - 32 bpp; 8 bits for each RGB and alpha, pre-multiplied"}]},"_GDIPlus_BitmapSetPixel":{"documentation":"Sets the color of a specified pixel in this bitmap","label":"_GDIPlus_BitmapSetPixel ( $hBitmap, $iX, $iY, $iARGB )","params":[{"label":"$hBitmap","documentation":"Pointer to the Bitmap object"},{"label":"$iX","documentation":"The X coordinate of the pixel"},{"label":"$iY","documentation":"The Y coordinate of the pixel"},{"label":"$iARGB","documentation":"The new color of the pixel"}]},"_GDIPlus_BitmapUnlockBits":{"documentation":"Unlocks a portion of a bitmap that was locked by _GDIPlus_BitmapLockBits","label":"_GDIPlus_BitmapUnlockBits ( $hBitmap, $tBitmapData )","params":[{"label":"$hBitmap","documentation":"Handle to a bitmap object"},{"label":"$tBitmapData","documentation":"$tagGDIPBITMAPDATA structure previously passed to _GDIPlus_BitmapLockBits()"}]},"_GDIPlus_BrushClone":{"documentation":"Clone a Brush object","label":"_GDIPlus_BrushClone ( $hBrush )","params":[{"label":"$hBrush","documentation":"Handle to a Brush object"}]},"_GDIPlus_BrushCreateSolid":{"documentation":"Create a solid Brush object","label":"_GDIPlus_BrushCreateSolid ( [$iARGB = 0xFF000000] )","params":[{"label":"$iARGB","documentation":"**[optional]** Alpha, Red, Green and Blue components of brush"}]},"_GDIPlus_BrushDispose":{"documentation":"Release a Brush object","label":"_GDIPlus_BrushDispose ( $hBrush )","params":[{"label":"$hBrush","documentation":"Handle to a Brush object"}]},"_GDIPlus_BrushGetSolidColor":{"documentation":"Get the color of a Solid Brush object","label":"_GDIPlus_BrushGetSolidColor ( $hBrush )","params":[{"label":"$hBrush","documentation":"Handle to a Brush object"}]},"_GDIPlus_BrushGetType":{"documentation":"Retrieve the type of Brush object","label":"_GDIPlus_BrushGetType ( $hBrush )","params":[{"label":"$hBrush","documentation":"Handle to a Brush object"}]},"_GDIPlus_BrushSetSolidColor":{"documentation":"Set the color of a Solid Brush object","label":"_GDIPlus_BrushSetSolidColor ( $hBrush [, $iARGB = 0xFF000000] )","params":[{"label":"$hBrush","documentation":"Handle to a Brush object"},{"label":"$iARGB","documentation":"**[optional]** Alpha, Red, Green and Blue components of brush"}]},"_GDIPlus_ColorMatrixCreate":{"documentation":"Creates and initializes an identity color matrix","label":"_GDIPlus_ColorMatrixCreate (  )","params":[]},"_GDIPlus_ColorMatrixCreateGrayScale":{"documentation":"Creates and initializes a gray-scaling color matrix","label":"_GDIPlus_ColorMatrixCreateGrayScale (  )","params":[]},"_GDIPlus_ColorMatrixCreateNegative":{"documentation":"Creates and initializes a negative color matrix","label":"_GDIPlus_ColorMatrixCreateNegative (  )","params":[]},"_GDIPlus_ColorMatrixCreateSaturation":{"documentation":"Creates and initializes a saturation color matrix","label":"_GDIPlus_ColorMatrixCreateSaturation ( $fSat )","params":[{"label":"$fSat","documentation":"Color saturation factor"}]},"_GDIPlus_ColorMatrixCreateScale":{"documentation":"Creates and initializes a scaling color matrix","label":"_GDIPlus_ColorMatrixCreateScale ( $fRed, $fGreen, $fBlue [, $fAlpha = 1] )","params":[{"label":"$fRed","documentation":"Red component scaling factor"},{"label":"$fGreen","documentation":"Green component scaling factor"},{"label":"$fBlue","documentation":"Blue component scaling factor"},{"label":"$fAlpha","documentation":"**[optional]** Alpha component scaling factor"}]},"_GDIPlus_ColorMatrixCreateTranslate":{"documentation":"Creates and initializes a translation color matrix","label":"_GDIPlus_ColorMatrixCreateTranslate ( $fRed, $fGreen, $fBlue [, $fAlpha = 0] )","params":[{"label":"$fRed","documentation":"Red component translation factor"},{"label":"$fGreen","documentation":"Green component translation factor"},{"label":"$fBlue","documentation":"Blue component translation factor"},{"label":"$fAlpha","documentation":"**[optional]** Alpha component translation factor"}]},"_GDIPlus_CustomLineCapClone":{"documentation":"Clones a CustomLineCap object","label":"_GDIPlus_CustomLineCapClone ( $hCustomLineCap )","params":[{"label":"$hCustomLineCap","documentation":"Pointer to a CustomLineCap object"}]},"_GDIPlus_CustomLineCapCreate":{"documentation":"Creates a CustomLineCap object","label":"_GDIPlus_CustomLineCapCreate ( $hPathFill, $hPathStroke [, $iLineCap = 0 [, $nBaseInset = 0]] )","params":[{"label":"$hPathFill","documentation":"Pointer to a Path object that defines the fill for the custom tip."},{"label":"$hPathStroke","documentation":"Pointer to a Path object that defines the contour of the nozzle custom."},{"label":"$iLineCap","documentation":"**[optional]** The line cap that will be used.    $GDIP_LINECAPFLAT = Specifies a flat cap    $GDIP_LINECAPSQUARE = Specifies a square cap    $GDIP_LINECAPROUND = Specifies a circular cap    $GDIP_LINECAPTRIANGLE = Specifies a triangular cap    $GDIP_LINECAPNOANCHOR = Specifies that the line ends are not anchored    $GDIP_LINECAPSQUAREANCHOR = Specifies that the line ends are anchored with a square    $GDIP_LINECAPROUNDANCHOR = Specifies that the line ends are anchored with a circle    $GDIP_LINECAPDIAMONDANCHOR = Specifies that the line ends are anchored with a diamond    $GDIP_LINECAPARROWANCHOR = Specifies that the line ends are anchored with arrowheads    $GDIP_LINECAPCUSTOM = Specifies that the line ends are made from a CustomLineCap"},{"label":"$nBaseInset","documentation":"**[optional]** Distance between the tip and the line. This distance is expressed in units."}]},"_GDIPlus_CustomLineCapDispose":{"documentation":"Release a custom line cap object","label":"_GDIPlus_CustomLineCapDispose ( $hCap )","params":[{"label":"$hCap","documentation":"Handle to a custom line cap object"}]},"_GDIPlus_CustomLineCapGetStrokeCaps":{"documentation":"Gets the end cap styles for both the start line cap and the end line cap","label":"_GDIPlus_CustomLineCapGetStrokeCaps ( $hCustomLineCap )","params":[{"label":"$hCustomLineCap","documentation":"Pointer to a CustomLineCap object"}]},"_GDIPlus_CustomLineCapSetStrokeCaps":{"documentation":"Sets the distance between the base cap to the start of the line","label":"_GDIPlus_CustomLineCapSetStrokeCaps ( $hCustomLineCap, $iStartCap, $iEndCap )","params":[{"label":"$hCustomLineCap","documentation":"Pointer to a CustomLineCap object"},{"label":"$iStartCap","documentation":"Line cap that will be used for the start of the line to be drawn"},{"label":"$iEndCap","documentation":"Line cap that will be used for the end of the line to be drawn"}]},"_GDIPlus_Decoders":{"documentation":"Get an array of information about the available image decoders","label":"_GDIPlus_Decoders (  )","params":[]},"_GDIPlus_DecodersGetCount":{"documentation":"Get the number of available image decoders","label":"_GDIPlus_DecodersGetCount (  )","params":[]},"_GDIPlus_DecodersGetSize":{"documentation":"Get the total size of the structure that is returned by _GDIPlus_GetImageDecoders","label":"_GDIPlus_DecodersGetSize (  )","params":[]},"_GDIPlus_DrawImageFX":{"documentation":"Draws a portion of an image after applying a specified effect","label":"_GDIPlus_DrawImageFX ( $hGraphics, $hImage, $hEffect [, $tRECTF = 0 [, $hMatrix = 0 [, $hImgAttributes = 0 [, $iUnit = 2]]]] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object."},{"label":"$hImage","documentation":"Handle to an Image object."},{"label":"$hEffect","documentation":"Handle to an Effect that is applied to the image before rendering. The image is not permanently altered by the effect."},{"label":"$tRECTF","documentation":"**[optional]** $tagGDIPRECTF structure that specifies the portion of the image to be drawn."},{"label":"$hMatrix","documentation":"**[optional]** Handle to a Matrix object that specifies the parallelogram in which the image portion is rendered."},{"label":"$hImgAttributes","documentation":"**[optional]** Handle to an ImageAttributes object that specifies color adjustments to be applied when the image is rendered."},{"label":"$iUnit","documentation":"**[optional]** Specifies the unit of measure for the image."}]},"_GDIPlus_DrawImageFXEx":{"documentation":"Draws a portion of an image after applying a specified effect","label":"_GDIPlus_DrawImageFXEx ( $hGraphics, $hImage, $hEffect [, $nX = 0 [, $nY = 0 [, $nW = 0 [, $nH = 0 [, $hMatrix = 0 [, $hImgAttributes = 0 [, $iUnit = 2]]]]]]] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object."},{"label":"$hImage","documentation":"Handle to an Image object."},{"label":"$hEffect","documentation":"Handle to an Effect that is applied to the image before rendering. The image is not permanently altered by the effect."},{"label":"$nX","documentation":"**[optional]** X coordinate of upper left hand corner of the portion of the image to be drawn."},{"label":"$nY","documentation":"**[optional]** X coordinate of upper left hand corner of the portion of the image to be drawn."},{"label":"$nW","documentation":"**[optional]** Width of the portion rectangle of the image to be drawn."},{"label":"$nH","documentation":"**[optional]** Height of the portion rectangle of the image to be drawn."},{"label":"$hMatrix","documentation":"**[optional]** Handle to a Matrix object that specifies the parallelogram in which the image portion is rendered."},{"label":"$hImgAttributes","documentation":"**[optional]** Handle to an ImageAttributes object that specifies color adjustments to be applied when the image is rendered."},{"label":"$iUnit","documentation":"**[optional]** Specifies the unit of measure for the image."}]},"_GDIPlus_DrawImagePoints":{"documentation":"Draws an image at a specified location","label":"_GDIPlus_DrawImagePoints ( $hGraphic, $hImage, $nULX, $nULY, $nURX, $nURY, $nLLX, $nLLY [, $iCount = 3] )","params":[{"label":"$hGraphic","documentation":"Handle to a Graphics object"},{"label":"$hImage","documentation":"Handle to an Image object"},{"label":"$nULX","documentation":"The X coordinate of the upper left corner of the source image"},{"label":"$nULY","documentation":"The Y coordinate of the upper left corner of the source image"},{"label":"$nURX","documentation":"The X coordinate of the upper right corner of the source image"},{"label":"$nURY","documentation":"The Y coordinate of the upper right corner of the source image"},{"label":"$nLLX","documentation":"The X coordinate of the lower left corner of the source image"},{"label":"$nLLY","documentation":"The Y coordinate of the lower left corner of the source image"},{"label":"$iCount","documentation":"**[optional]** Specifies the number of points (x,y)\'s in the structure."}]},"_GDIPlus_EffectCreate":{"documentation":"Creates an Effect object of the type specified by the guid parameter","label":"_GDIPlus_EffectCreate ( $sEffectGUID )","params":[{"label":"$sEffectGUID","documentation":"Effect Guid constant that specifies the kind of effect to create."}]},"_GDIPlus_EffectCreateBlur":{"documentation":"Creates a Blur class effect object","label":"_GDIPlus_EffectCreateBlur ( [$fRadius = 10.0 [, $bExpandEdge = False]] )","params":[{"label":"$fRadius","documentation":"**[optional]** Real number that specifies the blur radius (the radius of the Gaussian convolution kernel) in pixels.The radius must be in the range 0.0 through 255.0."},{"label":"$bExpandEdge","documentation":"**[optional]** Boolean value that specifies whether the bitmap expands by an amount equal to the blur radius.If TRUE, the bitmap expands by an amount equal to the radius so that it can have soft edges.If FALSE, the bitmap remains the same size and the soft edges are clipped."}]},"_GDIPlus_EffectCreateBrightnessContrast":{"documentation":"Creates a BrightnessContrast class effect object","label":"_GDIPlus_EffectCreateBrightnessContrast ( [$iBrightnessLevel = 0 [, $iContrastLevel = 0]] )","params":[{"label":"$iBrightnessLevel","documentation":"**[optional]** Integer in the range -255 through 255 that specifies the brightness level."},{"label":"$iContrastLevel","documentation":"**[optional]** Integer in the range -100 through 100 that specifies the contrast level."}]},"_GDIPlus_EffectCreateColorBalance":{"documentation":"Creates a ColorBalance class effect object","label":"_GDIPlus_EffectCreateColorBalance ( [$iCyanRed = 0 [, $iMagentaGreen = 0 [, $iYellowBlue = 0]]] )","params":[{"label":"$iCyanRed","documentation":"**[optional]** Integer in the range -100 through 100 that specifies a change in the amount of red in the image."},{"label":"$iMagentaGreen","documentation":"**[optional]** Integer in the range -100 through 100 that specifies a change in the amount of green in the image."},{"label":"$iYellowBlue","documentation":"**[optional]** Integer in the range -100 through 100 that specifies a change in the amount of blue in the image."}]},"_GDIPlus_EffectCreateColorCurve":{"documentation":"Creates a ColorBalance class effect object","label":"_GDIPlus_EffectCreateColorCurve ( $iAdjustment, $iChannel, $iAdjustValue )","params":[{"label":"$iAdjustment","documentation":"CurveAdjustments constant that specifies the adjustment to be applied ($GDIP_Adjust*)."},{"label":"$iChannel","documentation":"CurveChannel constant that specifies the color channel to which the adjustment applies ($GDIP_CurveChannel*)."},{"label":"$iAdjustValue","documentation":"Integer that specifies the intensity of the adjustment.The range of acceptable values depends on which adjustment is being applied (see $GDIP_Adjust* constants)."}]},"_GDIPlus_EffectCreateColorLUT":{"documentation":"Creates a ColorLUT class effect object","label":"_GDIPlus_EffectCreateColorLUT ( $aColorLUT )","params":[{"label":"$aColorLUT","documentation":"An array[256][4] of a color lookup table for the color channels, alpha, red, green, and blue:    [0][0] - first adjustment value for the alpha channel    [0][1] - first adjustment value for the red channel    [0][2] - first adjustment value for the green channel    [0][3] - first adjustment value for the blue channel    [1][0] - second adjustment value for the alpha channel    [1][1] - second adjustment value for the red channel    [1][2] - second adjustment value for the green channel    [1][3] - second adjustment value for the blue channel    ...    255][0] - last adjustment value for the alpha channel    [255][1] - last adjustment value for the red channel    [255][2] - last adjustment value for the green channel    [255][3] - last adjustment value for the blue channel"}]},"_GDIPlus_EffectCreateColorMatrix":{"documentation":"Creates a ColorMatrixEffect class effect object","label":"_GDIPlus_EffectCreateColorMatrix ( $tColorMatrix )","params":[{"label":"$tColorMatrix","documentation":"ColorMatrix structure."}]},"_GDIPlus_EffectCreateHueSaturationLightness":{"documentation":"Creates a HueSaturationLightness class effect object","label":"_GDIPlus_EffectCreateHueSaturationLightness ( [$iHueLevel = 0 [, $iSaturationLevel = 0 [, $iLightnessLevel = 0]]] )","params":[{"label":"$iHueLevel","documentation":"**[optional]** Integer in the range -180 through 180 that specifies the change in hue."},{"label":"$iSaturationLevel","documentation":"**[optional]** Integer in the range -100 through 100 that specifies the change in saturation."},{"label":"$iLightnessLevel","documentation":"**[optional]** Integer in the range -100 through 100 that specifies the change in lightness."}]},"_GDIPlus_EffectCreateLevels":{"documentation":"Creates a Levels class effect object","label":"_GDIPlus_EffectCreateLevels ( [$iHighlight = 100 [, $iMidtone = 0 [, $iShadow = 0]]] )","params":[{"label":"$iHighlight","documentation":"**[optional]** Integer in the range 0 through 100 that specifies which pixels should be lightened."},{"label":"$iMidtone","documentation":"**[optional]** Integer in the range -100 through 100 that specifies how much to lighten or darken an image."},{"label":"$iShadow","documentation":"**[optional]** Integer in the range 0 through 100 that specifies which pixels should be darkened."}]},"_GDIPlus_EffectCreateRedEyeCorrection":{"documentation":"Creates a RedEyeCorrection class effect object","label":"_GDIPlus_EffectCreateRedEyeCorrection ( $aAreas )","params":[{"label":"$aAreas","documentation":"An array of areas of the bitmap to which red eye correction should be applied:    [0][0] - Number of Area rectangles    [1][0] - X coordinate of the upper-left corner of the first rectangle    [1][1] - Y coordinate of the upper-left corner of the first rectangle    [1][2] - Width of the first rectangle    [1][3] - Height of the first rectangle    ...    [n][0] - X coordinate of the upper-left corner of the nth rectangle    [n][1] - Y coordinate of the upper-left corner of the nth rectangle    [n][2] - Width of the nth rectangle    [n][3] - Height of the nth rectangle"}]},"_GDIPlus_EffectCreateSharpen":{"documentation":"Creates a Sharpen class effect object","label":"_GDIPlus_EffectCreateSharpen ( [$fRadius = 10.0 [, $fAmount = 50.0]] )","params":[{"label":"$fRadius","documentation":"**[optional]** Real number that specifies the sharpening radius (the radius of the convolution kernel) in pixels.The radius must be in the range 0.0 through 255.0"},{"label":"$fAmount","documentation":"**[optional]** Real number in the range 0.0 through 100.0 that specifies the amount of sharpening to be applied"}]},"_GDIPlus_EffectCreateTint":{"documentation":"Creates a Tint class effect object","label":"_GDIPlus_EffectCreateTint ( [$iHue = 0 [, $iAmount = 0]] )","params":[{"label":"$iHue","documentation":"**[optional]** Integer in the range -180 through 180 that specifies the hue to be strengthened or weakened."},{"label":"$iAmount","documentation":"**[optional]** Integer in the range -100 through 100 that specifies how much the hue (given by the hue parameter) is strengthened or weakened."}]},"_GDIPlus_EffectDispose":{"documentation":"Deletes the specified Effect object","label":"_GDIPlus_EffectDispose ( $hEffect )","params":[{"label":"$hEffect","documentation":"Handle to an Effect object."}]},"_GDIPlus_EffectGetParameters":{"documentation":"Returns the parameters for the specified Effect object","label":"_GDIPlus_EffectGetParameters ( $hEffect, $tEffectParameters )","params":[{"label":"$hEffect","documentation":"Handle to an Effect object."},{"label":"$tEffectParameters","documentation":"A DLL structure that receives the effect parameters."}]},"_GDIPlus_EffectSetParameters":{"documentation":"Sets the parameters for the specified Effect object","label":"_GDIPlus_EffectSetParameters ( $hEffect, $tEffectParameters [, $iSizeAdjust = 1] )","params":[{"label":"$hEffect","documentation":"Handle to an Effect object."},{"label":"$tEffectParameters","documentation":"A DLL structure that specifies the parameters."},{"label":"$iSizeAdjust","documentation":"**[optional]** An integer value. Default is 1."}]},"_GDIPlus_Encoders":{"documentation":"Get an array of information about the available image encoders","label":"_GDIPlus_Encoders (  )","params":[]},"_GDIPlus_EncodersGetCLSID":{"documentation":"Return the encoder CLSID for a specific image file type","label":"_GDIPlus_EncodersGetCLSID ( $sFileExtension )","params":[{"label":"$sFileExtension","documentation":"File extension to search for (BMP, JPG, TIF, etc.)"}]},"_GDIPlus_EncodersGetCount":{"documentation":"Get the number of available image encoders","label":"_GDIPlus_EncodersGetCount (  )","params":[]},"_GDIPlus_EncodersGetParamList":{"documentation":"Get the parameter list for a specified image encoder","label":"_GDIPlus_EncodersGetParamList ( $hImage, $sEncoder )","params":[{"label":"$hImage","documentation":"Handle to an image object"},{"label":"$sEncoder","documentation":"GUID string of encoder to be used"}]},"_GDIPlus_EncodersGetParamListSize":{"documentation":"Get the size of the parameter list for a specified image encoder","label":"_GDIPlus_EncodersGetParamListSize ( $hImage, $sEncoder )","params":[{"label":"$hImage","documentation":"Handle to an image object"},{"label":"$sEncoder","documentation":"GUID string of encoder to be used"}]},"_GDIPlus_EncodersGetSize":{"documentation":"Get the total size of the structure that is returned by _GDIPlus_GetImageEncoders","label":"_GDIPlus_EncodersGetSize (  )","params":[]},"_GDIPlus_FontCreate":{"documentation":"Create a Font object","label":"_GDIPlus_FontCreate ( $hFamily, $fSize [, $iStyle = 0 [, $iUnit = 3]] )","params":[{"label":"$hFamily","documentation":"Handle to a Font Family object"},{"label":"$fSize","documentation":"The size of the font measured in the units specified in the $iUnit parameter"},{"label":"$iStyle","documentation":"**[optional]** The style of the typeface. Can be a combination of the following:    0 - Normal weight or thickness of the typeface    1 - Bold typeface    2 - Italic typeface    4 - Underline    8 - Strikethrough"},{"label":"$iUnit","documentation":"**[optional]** Unit of measurement for the font size:    0 - World coordinates, a nonphysical unit    1 - Display units    2 - A unit is 1 pixel    3 - A unit is 1 point or 1/72 inch    4 - A unit is 1 inch    5 - A unit is 1/300 inch    6 - A unit is 1 millimeter"}]},"_GDIPlus_FontDispose":{"documentation":"Release a Font object","label":"_GDIPlus_FontDispose ( $hFont )","params":[{"label":"$hFont","documentation":"Handle to a Font object"}]},"_GDIPlus_FontFamilyCreate":{"documentation":"Create a Font Family object","label":"_GDIPlus_FontFamilyCreate ( $sFamily [, $pCollection = 0] )","params":[{"label":"$sFamily","documentation":"Name of the Font Family"},{"label":"$pCollection","documentation":"**[optional]** Pointer to a FontCollection object that specifies the collection that the font family belongs to."}]},"_GDIPlus_FontFamilyCreateFromCollection":{"documentation":"Creates a FontFamily object based on a specified font family","label":"_GDIPlus_FontFamilyCreateFromCollection ( $sFontName, $hFontCollection )","params":[{"label":"$sFontName","documentation":" A string value that specifies the internal name of a font, e.g. Times.ttf has as internal name \'Times New Roman\'"},{"label":"$hFontCollection","documentation":" A handle to the font collection object"}]},"_GDIPlus_FontFamilyDispose":{"documentation":"Release a Font Family object","label":"_GDIPlus_FontFamilyDispose ( $hFamily )","params":[{"label":"$hFamily","documentation":"Handle to a Font Family object"}]},"_GDIPlus_FontFamilyGetCellAscent":{"documentation":"Gets the cell ascent, in design units, of a font family for the specified style or style combination","label":"_GDIPlus_FontFamilyGetCellAscent ( $hFontFamily [, $iStyle = 0] )","params":[{"label":"$hFontFamily","documentation":"Pointer to a FontFamily object"},{"label":"$iStyle","documentation":"**[optional]** The style of the typeface. Can be a combination of the following:    0 - Normal weight or thickness of the typeface    1 - Bold typeface    2 - Italic typeface    4 - Underline    8 - Strikethrough"}]},"_GDIPlus_FontFamilyGetCellDescent":{"documentation":"Gets the cell descent, in design units, of a font family for the specified style or style combination","label":"_GDIPlus_FontFamilyGetCellDescent ( $hFontFamily [, $iStyle = 0] )","params":[{"label":"$hFontFamily","documentation":"Pointer to a FontFamily object"},{"label":"$iStyle","documentation":"**[optional]** The style of the typeface. Can be a combination of the following:    0 - Normal weight or thickness of the typeface    1 - Bold typeface    2 - Italic typeface    4 - Underline    8 - Strikethrough"}]},"_GDIPlus_FontFamilyGetEmHeight":{"documentation":"Gets the size (commonly called em size or em height), in design units, of a font family","label":"_GDIPlus_FontFamilyGetEmHeight ( $hFontFamily [, $iStyle = 0] )","params":[{"label":"$hFontFamily","documentation":"Pointer to a FontFamily object"},{"label":"$iStyle","documentation":"**[optional]** The style of the typeface. Can be a combination of the following:    0 - Normal weight or thickness of the typeface    1 - Bold typeface    2 - Italic typeface    4 - Underline    8 - Strikethrough"}]},"_GDIPlus_FontFamilyGetLineSpacing":{"documentation":"Gets the line spacing, in design units, of this font family for the specified style or style combination","label":"_GDIPlus_FontFamilyGetLineSpacing ( $hFontFamily [, $iStyle = 0] )","params":[{"label":"$hFontFamily","documentation":"Pointer to a FontFamily object"},{"label":"$iStyle","documentation":"**[optional]** The style of the typeface. Can be a combination of the following:    0 - Normal weight or thickness of the typeface    1 - Bold typeface    2 - Italic typeface    4 - Underline    8 - Strikethrough"}]},"_GDIPlus_FontGetHeight":{"documentation":"Gets the line spacing of a font in the current unit of a specified Graphics object","label":"_GDIPlus_FontGetHeight ( $hFont, $hGraphics )","params":[{"label":"$hFont","documentation":"Pointer to a Font object"},{"label":"$hGraphics","documentation":"Pointer to a Graphics object"}]},"_GDIPlus_FontPrivateAddFont":{"documentation":"Adds a font file to the private font collection","label":"_GDIPlus_FontPrivateAddFont ( $hFontCollection, $sFontFile )","params":[{"label":"$hFontCollection","documentation":" A handle to the font collection object"},{"label":"$sFontFile","documentation":" A string value that specifies the name of a font file"}]},"_GDIPlus_FontPrivateAddMemoryFont":{"documentation":"Adds a font that is contained in system memory to a Microsoft® Windows® GDI+ font collection","label":"_GDIPlus_FontPrivateAddMemoryFont ( $hFontCollection, $tFont )","params":[{"label":"$hFontCollection","documentation":" A handle to the font collection object"},{"label":"$tFont","documentation":" A dll struct value filled with binary ttf font data"}]},"_GDIPlus_FontPrivateCollectionDispose":{"documentation":"Deletes the specified PrivateFontCollection object","label":"_GDIPlus_FontPrivateCollectionDispose ( $hFontCollection )","params":[{"label":"$hFontCollection","documentation":" A handle to the font collection object to delete"}]},"_GDIPlus_FontPrivateCreateCollection":{"documentation":"Creates a PrivateFont Collection object","label":"_GDIPlus_FontPrivateCreateCollection (  )","params":[]},"_GDIPlus_GraphicsClear":{"documentation":"Clears a Graphics object to a specified color","label":"_GDIPlus_GraphicsClear ( $hGraphics [, $iARGB = 0xFF000000] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$iARGB","documentation":"**[optional]** Alpha, Red, Green and Blue components of color"}]},"_GDIPlus_GraphicsCreateFromHDC":{"documentation":"Create a Graphics object from a device context (DC)","label":"_GDIPlus_GraphicsCreateFromHDC ( $hDC )","params":[{"label":"$hDC","documentation":"Device context"}]},"_GDIPlus_GraphicsCreateFromHWND":{"documentation":"Create a Graphics object from a window handle","label":"_GDIPlus_GraphicsCreateFromHWND ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to a window"}]},"_GDIPlus_GraphicsDispose":{"documentation":"Release a Graphics object","label":"_GDIPlus_GraphicsDispose ( $hGraphics )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"}]},"_GDIPlus_GraphicsDrawArc":{"documentation":"Draw an arc","label":"_GDIPlus_GraphicsDrawArc ( $hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle that bounds the ellipse in which to draw the arc"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle that bounds the ellipse in which to draw the arc"},{"label":"$nWidth","documentation":"The width of the rectangle that bounds the ellipse in which to draw the arc"},{"label":"$nHeight","documentation":"The height of the rectangle that bounds the ellipse in which to draw the arc"},{"label":"$fStartAngle","documentation":"The angle between the X axis and the starting point of the arc"},{"label":"$fSweepAngle","documentation":"The angle between the starting and ending points of the arc"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the arc. If 0, a solid black pen with a width of 1 will be used."}]},"_GDIPlus_GraphicsDrawBezier":{"documentation":"Draw a bezier spline","label":"_GDIPlus_GraphicsDrawBezier ( $hGraphics, $nX1, $nY1, $nX2, $nY2, $nX3, $nY3, $nX4, $nY4 [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$nX1","documentation":"X coordinate of the starting point"},{"label":"$nY1","documentation":"Y coordinate of the starting point"},{"label":"$nX2","documentation":"X coordinate of the first control point"},{"label":"$nY2","documentation":"Y coordinate of the first control point"},{"label":"$nX3","documentation":"X coordinate of the second control point"},{"label":"$nY3","documentation":"Y coordinate of the second control point"},{"label":"$nX4","documentation":"X coordinate of the ending point"},{"label":"$nY4","documentation":"Y coordinate of the ending point"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the bezier. If 0, a solid black pen with a width of 1 will be used."}]},"_GDIPlus_GraphicsDrawClosedCurve":{"documentation":"Draw a closed cardinal spline","label":"_GDIPlus_GraphicsDrawClosedCurve ( $hGraphics, $aPoints [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$aPoints","documentation":"Array that specifies the points of the curve:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the spline. If 0, a solid black pen with a width of 1 will be used."}]},"_GDIPlus_GraphicsDrawClosedCurve2":{"documentation":"Draws a closed cardinal spline","label":"_GDIPlus_GraphicsDrawClosedCurve2 ( $hGraphics, $aPoints, $nTension [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$aPoints","documentation":"Array of points that specify the coordinates of the closed cardinal spline. The array must    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$nTension","documentation":"Number that specifies how tightly the curve bends through the coordinates of the closed cardinal spline"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the splines. If 0, a solid black pen with a width of"}]},"_GDIPlus_GraphicsDrawCurve":{"documentation":"Draw a cardinal spline","label":"_GDIPlus_GraphicsDrawCurve ( $hGraphics, $aPoints [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$aPoints","documentation":"Array that specifies the points of the curve:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the spline. If 0, a solid black pen with a width of 1 will be used."}]},"_GDIPlus_GraphicsDrawCurve2":{"documentation":"Draws a cardinal spline","label":"_GDIPlus_GraphicsDrawCurve2 ( $hGraphics, $aPoints, $nTension [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$aPoints","documentation":"Array of points that specify the coordinates that the cardinal spline passes through:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$nTension","documentation":"Number that specifies how tightly the curve bends through the coordinates of the closed cardinal spline"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the splines. If 0, a solid black pen with a width of"}]},"_GDIPlus_GraphicsDrawEllipse":{"documentation":"Draw an ellipse","label":"_GDIPlus_GraphicsDrawEllipse ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle that bounds the ellipse"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle that bounds the ellipse"},{"label":"$nWidth","documentation":"The width of the rectangle that bounds the ellipse"},{"label":"$nHeight","documentation":"The height of the rectangle that bounds the ellipse"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the arc. If 0, a solid black pen with a width of 1 will be used."}]},"_GDIPlus_GraphicsDrawImage":{"documentation":"Draw an Image object","label":"_GDIPlus_GraphicsDrawImage ( $hGraphics, $hImage, $nX, $nY )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$hImage","documentation":"Handle to an Image object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rendered image"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rendered image"}]},"_GDIPlus_GraphicsDrawImagePointsRect":{"documentation":"Draws an image","label":"_GDIPlus_GraphicsDrawImagePointsRect ( $hGraphics, $hImage, $nULX, $nULY, $nURX, $nURY, $nLLX, $nLLY, $nSrcX, $nSrcY, $nSrcWidth, $nSrcHeight [, $hImageAttributes = 0 [, $iUnit = 2]] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$hImage","documentation":"Pointer to an Image object"},{"label":"$nULX","documentation":"The X coordinate of the upper left corner of the source image"},{"label":"$nULY","documentation":"The Y coordinate of the upper left corner of the source image"},{"label":"$nURX","documentation":"The X coordinate of the upper right corner of the source image"},{"label":"$nURY","documentation":"The Y coordinate of the upper right corner of the source image"},{"label":"$nLLX","documentation":"The X coordinate of the lower left corner of the source image"},{"label":"$nLLY","documentation":"The Y coordinate of the lower left corner of the source image"},{"label":"$nSrcX","documentation":"The X coordinate of the upper-left corner of the portion of the source image to be drawn"},{"label":"$nSrcY","documentation":"The Y coordinate of the upper-left corner of the portion of the source image to be drawn"},{"label":"$nSrcWidth","documentation":"The width of the portion of the source image to be drawn"},{"label":"$nSrcHeight","documentation":"The height of the portion of the source image to be drawn"},{"label":"$hImageAttributes","documentation":"**[optional]** Pointer to an ImageAttributes object that specifies the color and size attributes of the image to be drawn"},{"label":"$iUnit","documentation":"**[optional]** Unit of measurement:    0 - World coordinates, a nonphysical unit    1 - Display units    2 - A unit is 1 pixel    3 - A unit is 1 point or 1/72 inch    4 - A unit is 1 inch    5 - A unit is 1/300 inch    6 - A unit is 1 millimeter"}]},"_GDIPlus_GraphicsDrawImageRect":{"documentation":"Draws an image at a specified location","label":"_GDIPlus_GraphicsDrawImageRect ( $hGraphics, $hImage, $nX, $nY, $nW, $nH )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$hImage","documentation":"Handle to an Image object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rendered image"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rendered image"},{"label":"$nW","documentation":"Specifies the width of the destination rectangle at which to draw the image"},{"label":"$nH","documentation":"Specifies the height of the destination rectangle at which to draw the image"}]},"_GDIPlus_GraphicsDrawImageRectRect":{"documentation":"Draw an Image object","label":"_GDIPlus_GraphicsDrawImageRectRect ( $hGraphics, $hImage, $nSrcX, $nSrcY, $nSrcWidth, $nSrcHeight, $nDstX, $nDstY, $nDstWidth, $nDstHeight [, $pAttributes = 0 [, $iUnit = 2]] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$hImage","documentation":"Handle to an Image object"},{"label":"$nSrcX","documentation":"The X coordinate of the upper left corner of the source image"},{"label":"$nSrcY","documentation":"The Y coordinate of the upper left corner of the source image"},{"label":"$nSrcWidth","documentation":"Width of the source image"},{"label":"$nSrcHeight","documentation":"Height of the source image"},{"label":"$nDstX","documentation":"The X coordinate of the upper left corner of the destination image"},{"label":"$nDstY","documentation":"The Y coordinate of the upper left corner of the destination image"},{"label":"$nDstWidth","documentation":"Width of the destination image"},{"label":"$nDstHeight","documentation":"Height of the destination image"},{"label":"$pAttributes","documentation":"**[optional]** Pointer to an ImageAttributes structure that specifies the color and size attributes of the image to be drawn. The default value is NULL."},{"label":"$iUnit","documentation":"**[optional]** Specifies the unit of measure for the image"}]},"_GDIPlus_GraphicsDrawLine":{"documentation":"Draw a line","label":"_GDIPlus_GraphicsDrawLine ( $hGraphics, $nX1, $nY1, $nX2, $nY2 [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$nX1","documentation":"The X coordinate of the starting point of the line"},{"label":"$nY1","documentation":"The Y coordinate of the starting point of the line"},{"label":"$nX2","documentation":"The X coordinate of the ending point of the line"},{"label":"$nY2","documentation":"The Y coordinate of the ending point of the line"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the arc. If 0, a solid black pen with a width of 1 will be used."}]},"_GDIPlus_GraphicsDrawPath":{"documentation":"Draws a sequence of lines and curves defined by a GraphicsPath object","label":"_GDIPlus_GraphicsDrawPath ( $hGraphics, $hPath [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$hPath","documentation":"Pointer to a GraphicsPath object that specifies the sequence of lines and curves that make up thepath"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the splines. If 0, a solid black pen with a width of 1 will be used."}]},"_GDIPlus_GraphicsDrawPie":{"documentation":"Draw a pie","label":"_GDIPlus_GraphicsDrawPie ( $hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle that bounds the ellipse in which to draw the pie"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle that bounds the ellipse in which to draw the pie"},{"label":"$nWidth","documentation":"The width of the rectangle that bounds the ellipse in which to draw the pie"},{"label":"$nHeight","documentation":"The height of the rectangle that bounds the ellipse in which to draw the pie"},{"label":"$fStartAngle","documentation":"The angle, in degrees, between the X axis and the starting point of the arc that defines the pie.A positive value specifies clockwise rotation."},{"label":"$fSweepAngle","documentation":"The angle, in degrees, between the starting and ending points of the arc that defines the pie.A positive value specifies clockwise rotation."},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the arc. If 0, a solid black pen with a width of 1 will be used."}]},"_GDIPlus_GraphicsDrawPolygon":{"documentation":"Draw a polygon","label":"_GDIPlus_GraphicsDrawPolygon ( $hGraphics, $aPoints [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$aPoints","documentation":"Array that specify the vertices of the polygon:    [0][0] - Number of vertices    [1][0] - Vertice 1 X position    [1][1] - Vertice 1 Y position    [2][0] - Vertice 2 X position    [2][1] - Vertice 2 Y position    [n][0] - Vertice n X position    [n][1] - Vertice n Y position"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the polygon. If 0, a solid black pen with a width of 1 will be used."}]},"_GDIPlus_GraphicsDrawRect":{"documentation":"Draw a rectangle","label":"_GDIPlus_GraphicsDrawRect ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hPen = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle"},{"label":"$nWidth","documentation":"The width of the rectangle"},{"label":"$nHeight","documentation":"The height of the rectangle"},{"label":"$hPen","documentation":"**[optional]** Handle to a pen object that is used to draw the rectangle. If 0, a solid black pen with a width of 1 will be used"}]},"_GDIPlus_GraphicsDrawString":{"documentation":"Draw a string","label":"_GDIPlus_GraphicsDrawString ( $hGraphics, $sString, $nX, $nY [, $sFont = \\"Arial\\" [, $fSize = 10 [, $iFormat = 0]]] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$sString","documentation":"String to be drawn"},{"label":"$nX","documentation":"X coordinate where the string will be drawn"},{"label":"$nY","documentation":"Y coordinate where the string will be drawn"},{"label":"$sFont","documentation":"**[optional]** Name of the font to use for drawing"},{"label":"$fSize","documentation":"**[optional]** Font size to use for drawing"},{"label":"$iFormat","documentation":"**[optional]** Format flags. Can be one or more of the following:    0x0001 - Specifies that reading order is right to left    0x0002 - Specifies that individual lines of text are drawn vertically on the display device    0x0004 - Specifies that parts of characters are allowed to overhang the string\'s layout rectangle    0x0020 - Specifies that Unicode layout control characters are displayed with a representative character    0x0400 - Specifies that an alternate font is used for characters that are not supported in the requested font    0x0800 - Specifies that the space at the end of each line is included in a string measurement    0x1000 - Specifies that the wrapping of text to the next line is disabled    0x2000 - Specifies that only entire lines are laid out in the layout rectangle    0x4000 - Specifies that characters overhanging the layout rectangle and text extending outside the layout rectangle are allowed to show"}]},"_GDIPlus_GraphicsDrawStringEx":{"documentation":"Draw a string","label":"_GDIPlus_GraphicsDrawStringEx ( $hGraphics, $sString, $hFont, $tLayout, $hFormat, $hBrush )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$sString","documentation":"String to be drawn"},{"label":"$hFont","documentation":"Handle to the font to use to draw the string"},{"label":"$tLayout","documentation":"$tagGDIPRECTF structure that bounds the string"},{"label":"$hFormat","documentation":"Handle to the string format to draw the string"},{"label":"$hBrush","documentation":"Handle to the brush to draw the string"}]},"_GDIPlus_GraphicsFillClosedCurve":{"documentation":"Fill a closed cardinal spline","label":"_GDIPlus_GraphicsFillClosedCurve ( $hGraphics, $aPoints [, $hBrush = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$aPoints","documentation":"Array that specifies the points of the curve:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$hBrush","documentation":"**[optional]** Handle to a brush object that is used to fill the ellipse. If 0, a black brush will be used."}]},"_GDIPlus_GraphicsFillClosedCurve2":{"documentation":"Creates a closed cardinal spline from an array of points and uses a brush to fill the interior of the spline","label":"_GDIPlus_GraphicsFillClosedCurve2 ( $hGraphics, $aPoints, $nTension [, $hBrush = 0 [, $iFillMode = 0]] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$aPoints","documentation":"Array of points that specify the coordinates of the closed cardinal spline:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$nTension","documentation":"Number that specifies how tightly the spline bends as it passes through the points"},{"label":"$hBrush","documentation":"**[optional]** Handle to a brush object that is used to fill the cardinal spline. If 0, a black brush will be used."},{"label":"$iFillMode","documentation":"**[optional]** Fill mode of the interior of the spline:    0 - The areas are filled according to the even-odd parity rule    1 - The areas are filled according to the nonzero winding rule"}]},"_GDIPlus_GraphicsFillEllipse":{"documentation":"Fill an ellipse","label":"_GDIPlus_GraphicsFillEllipse ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hBrush = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle that bounds the ellipse"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle that bounds the ellipse"},{"label":"$nWidth","documentation":"The width of the rectangle that bounds the ellipse"},{"label":"$nHeight","documentation":"The height of the rectangle that bounds the ellipse"},{"label":"$hBrush","documentation":"**[optional]** Handle to a brush object that is used to fill the ellipse. If 0, a black brush will be used."}]},"_GDIPlus_GraphicsFillPath":{"documentation":"Uses a brush to fill the interior of a path","label":"_GDIPlus_GraphicsFillPath ( $hGraphics, $hPath [, $hBrush = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$hPath","documentation":"Pointer to a GraphicsPath object that specifies the path"},{"label":"$hBrush","documentation":"**[optional]** Handle to a Brush object that is used to paint the interior of the path. If 0, a black brush will be used."}]},"_GDIPlus_GraphicsFillPie":{"documentation":"Fill a pie","label":"_GDIPlus_GraphicsFillPie ( $hGraphics, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle [, $hBrush = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle that bounds the ellipse in which to draw the pie"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle that bounds the ellipse in which to draw the pie"},{"label":"$nWidth","documentation":"The width of the rectangle that bounds the ellipse in which to draw the pie"},{"label":"$nHeight","documentation":"The height of the rectangle that bounds the ellipse in which to draw the pie"},{"label":"$fStartAngle","documentation":"The angle, in degrees, between the X axis and the starting point of the arc that defines the pie.A positive value specifies clockwise rotation."},{"label":"$fSweepAngle","documentation":"The angle, in degrees, between the starting and ending points of the arc that defines the pie.A positive value specifies clockwise rotation."},{"label":"$hBrush","documentation":"**[optional]** Handle to a brush object that is used to fill the pie. If 0, a black brush will be used."}]},"_GDIPlus_GraphicsFillPolygon":{"documentation":"Fill a polygon","label":"_GDIPlus_GraphicsFillPolygon ( $hGraphics, $aPoints [, $hBrush = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$aPoints","documentation":"Array that specify the vertices of the polygon:    [0][0] - Number of vertices    [1][0] - Vertex 1 X position    [1][1] - Vertex 1 Y position    [2][0] - Vertex 2 X position    [2][1] - Vertex 2 Y position    [n][0] - Vertex n X position    [n][1] - Vertex n Y position"},{"label":"$hBrush","documentation":"**[optional]** Handle to a brush object that is used to fill the polygon."}]},"_GDIPlus_GraphicsFillRect":{"documentation":"Fill a rectangle","label":"_GDIPlus_GraphicsFillRect ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $hBrush = 0] )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle"},{"label":"$nWidth","documentation":"The width of the rectangle"},{"label":"$nHeight","documentation":"The height of the rectangle"},{"label":"$hBrush","documentation":"**[optional]** Handle to a brush object that is used to fill the rectangle. If 0, a black brush will be used."}]},"_GDIPlus_GraphicsFillRegion":{"documentation":"Uses a brush to fill a specified region","label":"_GDIPlus_GraphicsFillRegion ( $hGraphics, $hRegion [, $hBrush = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$hRegion","documentation":"Pointer to a region to be filled"},{"label":"$hBrush","documentation":"**[optional]** Pointer to a brush that is used to paint the region. If 0, a black brush will be used."}]},"_GDIPlus_GraphicsGetCompositingMode":{"documentation":"Gets the compositing mode currently set for a Graphics object","label":"_GDIPlus_GraphicsGetCompositingMode ( $hGraphics )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"}]},"_GDIPlus_GraphicsGetCompositingQuality":{"documentation":"Gets the compositing quality currently set for a Graphics object","label":"_GDIPlus_GraphicsGetCompositingQuality ( $hGraphics )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"}]},"_GDIPlus_GraphicsGetDC":{"documentation":"Gets a handle to the device context of the Graphics object","label":"_GDIPlus_GraphicsGetDC ( $hGraphics )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"}]},"_GDIPlus_GraphicsGetInterpolationMode":{"documentation":"Gets the interpolation mode currently set for a Graphics object","label":"_GDIPlus_GraphicsGetInterpolationMode ( $hGraphics )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"}]},"_GDIPlus_GraphicsGetSmoothingMode":{"documentation":"Gets the graphics object rendering quality","label":"_GDIPlus_GraphicsGetSmoothingMode ( $hGraphics )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"}]},"_GDIPlus_GraphicsGetTransform":{"documentation":"Gets the world transformation matrix of a Graphics object","label":"_GDIPlus_GraphicsGetTransform ( $hGraphics, $hMatrix )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$hMatrix","documentation":"Pointer to a Matrix object that receives the transformation matrix"}]},"_GDIPlus_GraphicsMeasureCharacterRanges":{"documentation":"Gets a set of region objects each of which bounds a range of character positions within a string","label":"_GDIPlus_GraphicsMeasureCharacterRanges ( $hGraphics, $sString, $hFont, $tLayout, $hStringFormat )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$sString","documentation":"The string to measure"},{"label":"$hFont","documentation":"Pointer to a Font object that specifies the font characteristics"},{"label":"$tLayout","documentation":"$tagGDIPRECTF structure that defines the string boundaries"},{"label":"$hStringFormat","documentation":"Pointer to a StringFormat object that specifies the character ranges and layout information, such as alignment, trimming, tab stops, and so forth"}]},"_GDIPlus_GraphicsMeasureString":{"documentation":"Measures the size of a string","label":"_GDIPlus_GraphicsMeasureString ( $hGraphics, $sString, $hFont, $tLayout, $hFormat )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$sString","documentation":"String to be drawn"},{"label":"$hFont","documentation":"Handle to the font to use to draw the string"},{"label":"$tLayout","documentation":"$tagGDIPRECTF structure that bounds the string"},{"label":"$hFormat","documentation":"Handle to the string format to draw the string"}]},"_GDIPlus_GraphicsReleaseDC":{"documentation":"Releases the device context of the Graphics object","label":"_GDIPlus_GraphicsReleaseDC ( $hGraphics, $hDC )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$hDC","documentation":"Handle to the Graphics device context"}]},"_GDIPlus_GraphicsResetClip":{"documentation":"Sets the clipping region of a Graphics object to an infinite region","label":"_GDIPlus_GraphicsResetClip ( $hGraphics )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"}]},"_GDIPlus_GraphicsResetTransform":{"documentation":"Sets the world transformation matrix of a Graphics object to the identity matrix","label":"_GDIPlus_GraphicsResetTransform ( $hGraphics )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"}]},"_GDIPlus_GraphicsRestore":{"documentation":"Restores the state of a Graphics object to the state stored by a previous call to the _GDIPlus_GraphicsSave method of the Graphics object","label":"_GDIPlus_GraphicsRestore ( $hGraphics, $iState )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$iState","documentation":"Value identifying the block of saved state previously returned by _GDIPlus_GraphicsSave()."}]},"_GDIPlus_GraphicsRotateTransform":{"documentation":"Updates the world transformation matrix of a Graphics object with the product of itself and a rotation matrix","label":"_GDIPlus_GraphicsRotateTransform ( $hGraphics, $fAngle [, $iOrder = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$fAngle","documentation":"The angle, in degrees, of rotation"},{"label":"$iOrder","documentation":"**[optional]** Order of matrices multiplication:    0 - The rotation matrix is on the left    1 - The rotation matrix is on the right"}]},"_GDIPlus_GraphicsSave":{"documentation":"Saves the current state (transformations, clipping region, and quality settings) of a Graphics object","label":"_GDIPlus_GraphicsSave ( $hGraphics )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"}]},"_GDIPlus_GraphicsScaleTransform":{"documentation":"Updates a Graphics object\'s world transformation matrix with the product of itself and a scaling matrix","label":"_GDIPlus_GraphicsScaleTransform ( $hGraphics, $fScaleX, $fScaleY [, $iOrder = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$fScaleX","documentation":"The horizontal scaling factor in the scaling matrix"},{"label":"$fScaleY","documentation":"The vertical scaling factor in the scaling matrix"},{"label":"$iOrder","documentation":"**[optional]** Order of matrices multiplication:    0 - The scaling matrix is on the left    1 - The scaling matrix is on the right"}]},"_GDIPlus_GraphicsSetClipPath":{"documentation":"Updates the clipping region of this Graphics object to a region that is the combination of itself and the region specified by a graphics path","label":"_GDIPlus_GraphicsSetClipPath ( $hGraphics, $hPath [, $iCombineMode = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$hPath","documentation":"Pointer to a GraphicsPath object that specifies the region to be combined with the clipping region of the Graphics object"},{"label":"$iCombineMode","documentation":"**[optional]** Regions combination mode:    0 - The existing region is replaced by the new region    1 - The existing region is replaced by the intersection of itself and the new region    2 - The existing region is replaced by the union of itself and the new region    3 - The existing region is replaced by the result of performing an XOR on the two regions    4 - The existing region is replaced by the portion of itself that is outside of the new region    5 - The existing region is replaced by the portion of the new region that is outside of the existing region"}]},"_GDIPlus_GraphicsSetClipRect":{"documentation":"Updates the clipping region of a Graphics object to a region that is the combination of itself and a rectangle","label":"_GDIPlus_GraphicsSetClipRect ( $hGraphics, $nX, $nY, $nWidth, $nHeight [, $iCombineMode = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$nX","documentation":"X coordinate of the upper-left corner of the rectangle"},{"label":"$nY","documentation":"Y coordinate of the upper-left corner of the rectangle"},{"label":"$nWidth","documentation":"Width of the rectangle"},{"label":"$nHeight","documentation":"Height of the rectangle"},{"label":"$iCombineMode","documentation":"**[optional]** Regions combination mode:    0 - The existing region is replaced by the new region    1 - The existing region is replaced by the intersection of itself and the new region    2 - The existing region is replaced by the union of itself and the new region    3 - The existing region is replaced by the result of performing an XOR on the two regions    4 - The existing region is replaced by the portion of itself that is outside of the new region    5 - The existing region is replaced by the portion of the new region that is outside of the existing region"}]},"_GDIPlus_GraphicsSetClipRegion":{"documentation":"Updates the clipping region of a Graphics object to a region that is the combination of itself and the region specified by a Region object","label":"_GDIPlus_GraphicsSetClipRegion ( $hGraphics, $hRegion [, $iCombineMode = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$hRegion","documentation":"Pointer to a Region object to be combined with the clipping region of the Graphics object"},{"label":"$iCombineMode","documentation":"**[optional]** Regions combination mode:    0 - The existing region is replaced by the new region    1 - The existing region is replaced by the intersection of itself and the new region    2 - The existing region is replaced by the union of itself and the new region    3 - The existing region is replaced by the result of performing an XOR on the two regions    4 - The existing region is replaced by the portion of itself that is outside of the new region    5 - The existing region is replaced by the portion of the new region that is outside of the existing region"}]},"_GDIPlus_GraphicsSetCompositingMode":{"documentation":"Sets the compositing mode of a Graphics object","label":"_GDIPlus_GraphicsSetCompositingMode ( $hGraphics, $iCompositionMode )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$iCompositionMode","documentation":"Compositing mode:    0 - Specifies that when a color is rendered, it is blended with the background color.    1 - Specifies that when a color is rendered, it overwrites the background color."}]},"_GDIPlus_GraphicsSetCompositingQuality":{"documentation":"Sets the compositing quality of a Graphics object","label":"_GDIPlus_GraphicsSetCompositingQuality ( $hGraphics, $iCompositionQuality )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$iCompositionQuality","documentation":"Compositing quality:    0 - Gamma correction is not applied.    1 - Gamma correction is not applied. High speed, low quality.    2 - Gamma correction is applied. Composition of high quality and speed.    3 - Gamma correction is applied.    4 - Gamma correction is not applied. Linear values are used."}]},"_GDIPlus_GraphicsSetInterpolationMode":{"documentation":"Sets the interpolation mode of a Graphics object","label":"_GDIPlus_GraphicsSetInterpolationMode ( $hGraphics, $iInterpolationMode )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$iInterpolationMode","documentation":"Interpolation mode:    0 - Default interpolation mode    1 - Low-quality mode    2 - High-quality mode    3 - Bilinear interpolation. No prefiltering is done    4 - Bicubic interpolation. No prefiltering is done    5 - Nearest-neighbor interpolation    6 - High-quality, bilinear interpolation. Prefiltering is performed to ensure high-quality shrinking    7 - High-quality, bicubic interpolation. Prefiltering is performed to ensure high-quality shrinking"}]},"_GDIPlus_GraphicsSetPixelOffsetMode":{"documentation":"Sets the pixel offset mode of a Graphics object","label":"_GDIPlus_GraphicsSetPixelOffsetMode ( $hGraphics, $iPixelOffsetMode )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$iPixelOffsetMode","documentation":"Pixel offset mode:\\t0,1,3 - Pixel centers have integer coordinates\\t2,4 - Pixel centers have coordinates that are half way between integer values (i.e. 0.5, 20, 105.5, etc...)"}]},"_GDIPlus_GraphicsSetSmoothingMode":{"documentation":"Sets the graphics object rendering quality","label":"_GDIPlus_GraphicsSetSmoothingMode ( $hGraphics, $iSmooth )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$iSmooth","documentation":"Smoothing mode:    0 - Smoothing is not applied    1 - Smoothing is applied using an 8 X 4 box filter    2 - Smoothing is applied using an 8 X 8 box filter"}]},"_GDIPlus_GraphicsSetTextRenderingHint":{"documentation":"Sets the contrast value of a Graphics object","label":"_GDIPlus_GraphicsSetTextRenderingHint ( $hGraphics, $iTextRenderingHint )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$iTextRenderingHint","documentation":"Text rendering mode:    0 - Character is drawn using the currently selected system font smoothing mode (also called a rendering hint)    1 - Character is drawn using its glyph bitmap and hinting to improve character appearance on stems and    2 - Character is drawn using its glyph bitmap and no hinting. This results in better performance at the    3 - Character is drawn using its antialiased glyph bitmap and hinting. This results in much better quality    4 - Character is drawn using its antialiased glyph bitmap and no hinting. Stem width differences may be    5 - Character is drawn using its glyph Microsoft ClearType bitmap and hinting. This type of text rendering"}]},"_GDIPlus_GraphicsSetTransform":{"documentation":"Sets the world transformation for a graphics object","label":"_GDIPlus_GraphicsSetTransform ( $hGraphics, $hMatrix )","params":[{"label":"$hGraphics","documentation":"Handle to a Graphics object"},{"label":"$hMatrix","documentation":"Handle to a Matrix object that specifies the world transformation"}]},"_GDIPlus_GraphicsTransformPoints":{"documentation":"Converts an array of points from one coordinate space to another","label":"_GDIPlus_GraphicsTransformPoints ( $hGraphics, ByRef $aPoints [, $iCoordSpaceTo = 0 [, $iCoordSpaceFrom = 1]] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$aPoints","documentation":"Array of points to be converted:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$iCoordSpaceTo","documentation":"**[optional]** Destination coordinate space"},{"label":"$iCoordSpaceFrom","documentation":"**[optional]** Source coordinate space:    0 - World coordinate space, not physical coordinates    1 - Page coordinate space, read-world coordinates    2 - Device coordinate space, physical coordinates"}]},"_GDIPlus_GraphicsTranslateTransform":{"documentation":"Updates a Graphics object\'s world transformation matrix with the product of itself and a translation matrix","label":"_GDIPlus_GraphicsTranslateTransform ( $hGraphics, $nDX, $nDY [, $iOrder = 0] )","params":[{"label":"$hGraphics","documentation":"Pointer to a Graphics object"},{"label":"$nDX","documentation":"Horizontal component of the translation"},{"label":"$nDY","documentation":"Vertical component of the translation"},{"label":"$iOrder","documentation":"**[optional]** Order of matrices multiplication:    0 - The translation matrix is on the left    1 - The translation matrix is on the right"}]},"_GDIPlus_HatchBrushCreate":{"documentation":"Creates a HatchBrush object based on a hatch style, a foreground color, and a background color","label":"_GDIPlus_HatchBrushCreate ( [$iHatchStyle = 0 [, $iARGBForeground = 0xFFFFFFFF [, $iARGBBackground = 0xFFFFFFFF]]] )","params":[{"label":"$iHatchStyle","documentation":"**[optional]** Pattern of hatch lines that will be used, see remarks. Default = $GDIP_HATCHSTYLE_HORIZONTAL (0)."},{"label":"$iARGBForeground","documentation":"**[optional]** Alpha, Red, Green and Blue components of the hatch lines"},{"label":"$iARGBBackground","documentation":"**[optional]** Alpha, Red, Green and Blue components of the hatch background"}]},"_GDIPlus_HICONCreateFromBitmap":{"documentation":"Creates an icon handle from a bitmap object","label":"_GDIPlus_HICONCreateFromBitmap ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"Pointer to the Bitmap object"}]},"_GDIPlus_ImageAttributesCreate":{"documentation":"Creates an ImageAttributes object","label":"_GDIPlus_ImageAttributesCreate (  )","params":[]},"_GDIPlus_ImageAttributesDispose":{"documentation":"Releases an ImageAttributes object","label":"_GDIPlus_ImageAttributesDispose ( $hImageAttributes )","params":[{"label":"$hImageAttributes","documentation":"Pointer to an ImageAttribute object"}]},"_GDIPlus_ImageAttributesSetColorKeys":{"documentation":"Sets or clears the color key (transparency range) for a specified category","label":"_GDIPlus_ImageAttributesSetColorKeys ( $hImageAttributes [, $iColorAdjustType = 0 [, $bEnable = False [, $iARGBLow = 0 [, $iARGBHigh = 0]]]] )","params":[{"label":"$hImageAttributes","documentation":"Pointer to an ImageAttribute object"},{"label":"$iColorAdjustType","documentation":"**[optional]** The category for which the color key is set or cleared:    0 - Color adjustment applies to all categories that do not have adjustment settings of their own    1 - Color adjustment applies to bitmapped images    2 - Color adjustment applies to brush operations in metafiles    3 - Color adjustment applies to pen operations in metafiles    4 - Color adjustment applies to text drawn in metafiles"},{"label":"$bEnable","documentation":"**[optional]** If True, transparency range for the specified category is applied; otherwise, transparency"},{"label":"$iARGBLow","documentation":"**[optional]** Alpha, Red, Green and Blue components of a color that specifies the low color-key value"},{"label":"$iARGBHigh","documentation":"**[optional]** Alpha, Red, Green and Blue components of a color that specifies the high color-key value"}]},"_GDIPlus_ImageAttributesSetColorMatrix":{"documentation":"Sets or clears the color- and grayscale-adjustment matrices for a specified category","label":"_GDIPlus_ImageAttributesSetColorMatrix ( $hImageAttributes [, $iColorAdjustType = 0 [, $bEnable = False [, $tClrMatrix = 0 [, $tGrayMatrix = 0 [, $iColorMatrixFlags = 0]]]]] )","params":[{"label":"$hImageAttributes","documentation":"Pointer to an ImageAttribute object"},{"label":"$iColorAdjustType","documentation":"**[optional]** The category for which the color- and grayscale-adjustment matrices are set or cleared:    0 - Color or grayscale adjustment applies to all categories that do not have adjustment settings of their own    1 - Color or grayscale adjustment applies to bitmapped images    2 - Color or grayscale adjustment applies to brush operations in metafiles    3 - Color or grayscale adjustment applies to pen operations in metafiles    4 - Color or grayscale adjustment applies to text drawn in metafiles"},{"label":"$bEnable","documentation":"**[optional]** If True, the specified matrices (color, grayscale or both) adjustments for the specified"},{"label":"$tClrMatrix","documentation":"**[optional]** $tagGDIPCOLORMATRIX structure that specifies a color-adjustment matrix"},{"label":"$tGrayMatrix","documentation":"**[optional]** $tagGDIPCOLORMATRIX structure that specifies a grayscale-adjustment matrix"},{"label":"$iColorMatrixFlags","documentation":"**[optional]** Type of image and color that will be affected by the adjustment matrices:    0 - All color values (including grays) are adjusted by the same color-adjustment matrix    1 - Colors are adjusted but gray shades are not adjusted.    2 - Colors are adjusted by one matrix and gray shades are adjusted by another matrix"}]},"_GDIPlus_ImageDispose":{"documentation":"Release an image object","label":"_GDIPlus_ImageDispose ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageGetDimension":{"documentation":"Gets the width and height of an image which is supported by GDIPlus","label":"_GDIPlus_ImageGetDimension ( $hImage )","params":[{"label":"$hImage","documentation":" A handle to image object"}]},"_GDIPlus_ImageGetFlags":{"documentation":"Returns enumeration of pixel data attributes contained in an image","label":"_GDIPlus_ImageGetFlags ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageGetGraphicsContext":{"documentation":"Get the graphics context of the image","label":"_GDIPlus_ImageGetGraphicsContext ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageGetHeight":{"documentation":"Get the image height","label":"_GDIPlus_ImageGetHeight ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageGetHorizontalResolution":{"documentation":"Returns horizontal resolution in DPI (pixels per inch) of an image","label":"_GDIPlus_ImageGetHorizontalResolution ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageGetPixelFormat":{"documentation":"Returns pixel format of an image: Bits per pixel, Alpha channels, RGB, Grayscale, Indexed etc","label":"_GDIPlus_ImageGetPixelFormat ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageGetRawFormat":{"documentation":"Returns file format GUID and image format name of an image","label":"_GDIPlus_ImageGetRawFormat ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageGetThumbnail":{"documentation":"Gets a thumbnail image from this Image object","label":"_GDIPlus_ImageGetThumbnail ( $hImage [, $iWidth = 0 [, $iHeight = 0 [, $bKeepRatio = True [, $hCallback = Null [, $hCallbackData = Null]]]]] )","params":[{"label":"$hImage","documentation":" A handle to image object"},{"label":"$iWidth","documentation":" **[optional]** Width, in pixels, of the requested thumbnail image. Default is 0."},{"label":"$iHeight","documentation":" **[optional]** Height, in pixels, of the requested thumbnail image. Default is 0."},{"label":"$bKeepRatio","documentation":" **[optional]** If true destination width and height of the image will be recalculated to keep image aspect ratio. Default is True."},{"label":"$hCallback","documentation":" **[optional]** Callback function that you provide. During the process of creating or retrieving the thumbnail image, Microsoft Windows GDI+ calls this function to give you the opportunity to abort the process. The default value is NULL."},{"label":"$hCallbackData","documentation":" **[optional]** Pointer to a block of memory that contains data to be used by the callback function. The default value is NULL."}]},"_GDIPlus_ImageGetType":{"documentation":"Returns type (bitmap or metafile) of an image","label":"_GDIPlus_ImageGetType ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageGetVerticalResolution":{"documentation":"Returns vertical resolution in DPI (pixels per inch) of an image","label":"_GDIPlus_ImageGetVerticalResolution ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageGetWidth":{"documentation":"Get the image width","label":"_GDIPlus_ImageGetWidth ( $hImage )","params":[{"label":"$hImage","documentation":"Handle to an image object"}]},"_GDIPlus_ImageLoadFromFile":{"documentation":"Create an image object based on a file","label":"_GDIPlus_ImageLoadFromFile ( $sFileName )","params":[{"label":"$sFileName","documentation":"Fully qualified image file name"}]},"_GDIPlus_ImageLoadFromStream":{"documentation":"Creates an Image object based on a stream","label":"_GDIPlus_ImageLoadFromStream ( $pStream )","params":[{"label":"$pStream","documentation":"Pointer to an IStream interface"}]},"_GDIPlus_ImageResize":{"documentation":"Resize an image to a new given size","label":"_GDIPlus_ImageResize ( $hImage, $iNewWidth, $iNewHeight [, $iInterpolationMode = $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC] )","params":[{"label":"$hImage","documentation":"A handle value"},{"label":"$iNewWidth","documentation":"An integer value"},{"label":"$iNewHeight","documentation":"An integer value"},{"label":"$iInterpolationMode","documentation":"**[optional]** An integer value. Default is $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC."}]},"_GDIPlus_ImageRotateFlip":{"documentation":"Rotates and flips an image","label":"_GDIPlus_ImageRotateFlip ( $hImage, $iRotateFlipType )","params":[{"label":"$hImage","documentation":"Pointer to an Image object"},{"label":"$iRotateFlipType","documentation":"Type of rotation and flip:    0 - No rotation and no flipping (A 180-degree rotation, a horizontal flip and then a vertical flip)    1 - A 90-degree rotation without flipping (A 270-degree rotation, a horizontal flip and then a vertical flip)    2 - A 180-degree rotation without flipping (No rotation, a horizontal flip followed by a vertical flip)    3 - A 270-degree rotation without flipping (A 90-degree rotation, a horizontal flip and then a vertical flip)    4 - No rotation and a horizontal flip (A 180-degree rotation followed by a vertical flip)    5 - A 90-degree rotation followed by a horizontal flip (A 270-degree rotation followed by a vertical flip)    6 - A 180-degree rotation followed by a horizontal flip (No rotation and a vertical flip)    7 - A 270-degree rotation followed by a horizontal flip (A 90-degree rotation followed by a vertical flip)"}]},"_GDIPlus_ImageSaveToFile":{"documentation":"Save an image to file","label":"_GDIPlus_ImageSaveToFile ( $hImage, $sFileName )","params":[{"label":"$hImage","documentation":"Handle to an image object"},{"label":"$sFileName","documentation":"Fully qualified image file name"}]},"_GDIPlus_ImageSaveToFileEx":{"documentation":"Save an image to file","label":"_GDIPlus_ImageSaveToFileEx ( $hImage, $sFileName, $sEncoder [, $tParams = 0] )","params":[{"label":"$hImage","documentation":"Handle to an image object"},{"label":"$sFileName","documentation":"Fully qualified image file name"},{"label":"$sEncoder","documentation":"GUID string of encoder to be used"},{"label":"$tParams","documentation":"**[optional]** a $tagGDIPENCODERPARAMS structure or a pointer to it"}]},"_GDIPlus_ImageSaveToStream":{"documentation":"Saves an Image object to a stream","label":"_GDIPlus_ImageSaveToStream ( $hImage, $pStream, $tEncoder [, $tParams = 0] )","params":[{"label":"$hImage","documentation":"Pointer to an Image object"},{"label":"$pStream","documentation":"Pointer to an IStream interface"},{"label":"$tEncoder","documentation":"a $tagGUID structure that defines the image encoder GUID"},{"label":"$tParams","documentation":"**[optional]** a $tagGDIPENCODERPARAMS structure or a pointer to it"}]},"_GDIPlus_ImageScale":{"documentation":"Scales an image by a given factor","label":"_GDIPlus_ImageScale ( $hImage, $iScaleW, $iScaleH [, $iInterpolationMode = $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC] )","params":[{"label":"$hImage","documentation":"A handle value"},{"label":"$iScaleW","documentation":"A floating point value"},{"label":"$iScaleH","documentation":"A floating point value"},{"label":"$iInterpolationMode","documentation":"**[optional]** An integer value. Default is $GDIP_INTERPOLATIONMODE_HIGHQUALITYBICUBIC."}]},"_GDIPlus_LineBrushCreate":{"documentation":"Creates a LinearGradientBrush object from a set of boundary points and boundary colors","label":"_GDIPlus_LineBrushCreate ( $nX1, $nY1, $nX2, $nY2, $iARGBClr1, $iARGBClr2 [, $iWrapMode = 0] )","params":[{"label":"$nX1","documentation":"X coordinate of the starting point of the gradient. The starting boundary line passes through the"},{"label":"$nY1","documentation":"Y coordinate of the starting point of the gradient. The starting boundary line passes through the"},{"label":"$nX2","documentation":"X coordinate of the ending point of the gradient. The ending boundary line passes through the"},{"label":"$nY2","documentation":"Y coordinate of the ending point of the gradient. The ending boundary line passes through the"},{"label":"$iARGBClr1","documentation":"Alpha, Red, Green and Blue components of the starting color of the line"},{"label":"$iARGBClr2","documentation":"Alpha, Red, Green and Blue components of the ending color of the line"},{"label":"$iWrapMode","documentation":"**[optional]** Wrap mode that specifies how areas filled with the brush are tiled:    0 - Tiling without flipping    1 - Tiles are flipped horizontally as you move from one tile to the next in a row    2 - Tiles are flipped vertically as you move from one tile to the next in a column    3 - Tiles are flipped horizontally as you move along a row and flipped vertically as you move along a column    4 - No tiling takes place"}]},"_GDIPlus_LineBrushCreateFromRect":{"documentation":"Creates a LinearGradientBrush object from a rectangle and boundary colors","label":"_GDIPlus_LineBrushCreateFromRect ( $tRECTF, $iARGBClr1, $iARGBClr2 [, $iGradientMode = 0 [, $iWrapMode = 0]] )","params":[{"label":"$tRECTF","documentation":"$tagGDIPRECTF that specifies the starting and ending points of the gradient"},{"label":"$iARGBClr1","documentation":"Alpha, Red, Green and Blue components of the starting color of the line"},{"label":"$iARGBClr2","documentation":"Alpha, Red, Green and Blue components of the ending color of the line"},{"label":"$iGradientMode","documentation":"**[optional]** The direction of the gradient:    0 - Horizontal direction from the left of the display to the right of the display    1 - Vertical direction from the top of the display to the bottom of the display    2 - Forward diagonal direction from the upper-left corner to the lower-right corner of the display    3 - Backward diagonal direction from the upper-right corner to the lower-left corner of the display"},{"label":"$iWrapMode","documentation":"**[optional]** Specifies how areas filled with the brush are tiled:    0 - Tiling without flipping    1 - Tiles are flipped horizontally as you move from one tile to the next in a row    2 - Tiles are flipped vertically as you move from one tile to the next in a column    3 - Tiles are flipped horizontally as you move along a row and flipped vertically as you move along a column    4 - No tiling takes place"}]},"_GDIPlus_LineBrushCreateFromRectWithAngle":{"documentation":"Creates a LinearGradientBrush object from a rectangle, boundary colors and angle of direction","label":"_GDIPlus_LineBrushCreateFromRectWithAngle ( $tRECTF, $iARGBClr1, $iARGBClr2, $fAngle [, $bIsAngleScalable = True [, $iWrapMode = 0]] )","params":[{"label":"$tRECTF","documentation":"$tagGDIPRECTF that specifies the starting and ending points of the gradient"},{"label":"$iARGBClr1","documentation":"Alpha, Red, Green and Blue components of the starting color of the line"},{"label":"$iARGBClr2","documentation":"Alpha, Red, Green and Blue components of the ending color of the line"},{"label":"$fAngle","documentation":"Depending the value of $fIsAngleScalable, this is the angle, in degrees (see remarks)"},{"label":"$bIsAngleScalable","documentation":"**[optional]** If True, the angle of the directional line is scalable. Not scalable otherwise"},{"label":"$iWrapMode","documentation":"**[optional]** Specifies how areas filled with the brush are tiled:    0 - Tiling without flipping    1 - Tiles are flipped horizontally as you move from one tile to the next in a row    2 - Tiles are flipped vertically as you move from one tile to the next in a column    3 - Tiles are flipped horizontally as you move along a row and flipped vertically as you move along a column    4 - No tiling takes place"}]},"_GDIPlus_LineBrushGetColors":{"documentation":"Gets the starting color and ending color of a linear gradient brush","label":"_GDIPlus_LineBrushGetColors ( $hLineGradientBrush )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"}]},"_GDIPlus_LineBrushGetRect":{"documentation":"Gets the rectangle that defines the boundaries of a linear gradient brush","label":"_GDIPlus_LineBrushGetRect ( $hLineGradientBrush )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"}]},"_GDIPlus_LineBrushMultiplyTransform":{"documentation":"Updates a brush\'s transformation matrix with the product of itself and another matrix","label":"_GDIPlus_LineBrushMultiplyTransform ( $hLineGradientBrush, $hMatrix [, $iOrder = 0] )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"},{"label":"$hMatrix","documentation":"Pointer to a Matrix object that specifies the transformation matrix"},{"label":"$iOrder","documentation":"**[optional]** Order of matrices multiplication:    0 - The passed matrix is on the left    1 - The passed matrix is on the right"}]},"_GDIPlus_LineBrushResetTransform":{"documentation":"Resets the transformation matrix of a linear gradient brush to the identity matrix","label":"_GDIPlus_LineBrushResetTransform ( $hLineGradientBrush )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"}]},"_GDIPlus_LineBrushSetBlend":{"documentation":"Sets the blend factors and the blend positions of a linear gradient brush to create a custom blend","label":"_GDIPlus_LineBrushSetBlend ( $hLineGradientBrush, $aBlends )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"},{"label":"$aBlends","documentation":"Array of blend factors and blend positions:    [0][0] - Number of blend factors and blend positions, must be at least 2    [1][0] - Factor 1    [1][1] - Position 1    [2][0] - Factor 2    [2][1] - Position 2    [n][0] - Factor n    [n][1] - Position n"}]},"_GDIPlus_LineBrushSetColors":{"documentation":"Sets the starting color and ending color of a linear gradient brush","label":"_GDIPlus_LineBrushSetColors ( $hLineGradientBrush, $iARGBStart, $iARGBEnd )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"},{"label":"$iARGBStart","documentation":"Alpha, Red, Green and Blue components of the starting color"},{"label":"$iARGBEnd","documentation":"Alpha, Red, Green and Blue components of the ending color"}]},"_GDIPlus_LineBrushSetGammaCorrection":{"documentation":"Specifies whether gamma correction is enabled for a linear gradient brush","label":"_GDIPlus_LineBrushSetGammaCorrection ( $hLineGradientBrush [, $bUseGammaCorrection = True] )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"},{"label":"$bUseGammaCorrection","documentation":"**[optional]** If True, gamma correction is enabled; otherwise gamma correction is disabled"}]},"_GDIPlus_LineBrushSetLinearBlend":{"documentation":"Sets the blend shape of a linear gradient brush to create a custom blend based on a triangular shape","label":"_GDIPlus_LineBrushSetLinearBlend ( $hLineGradientBrush, $fFocus [, $fScale = 1] )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"},{"label":"$fFocus","documentation":"Number in the range 0.0 to 1.0 that specifies the position of the ending color"},{"label":"$fScale","documentation":"**[optional]** Number in the range 0.0 to 1.0 that specifies the percentage of the gradient\'s ending color that gets blended, at the focus position, with the gradient\'s starting color. The default value is 1, which specifies that the ending color is at full intensity"}]},"_GDIPlus_LineBrushSetPresetBlend":{"documentation":"Sets the colors to be interpolated for a linear gradient brush and their corresponding blend positions","label":"_GDIPlus_LineBrushSetPresetBlend ( $hLineGradientBrush, $aInterpolations )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"},{"label":"$aInterpolations","documentation":"Array of blend colors and blend positions:    [0][0] - Number of blend colors and blend positions, must be at least 2    [1][0] - Color 1    [1][1] - Position 1    [2][0] - Color 2    [2][1] - Position 2    [n][0] - Color n    [n][1] - Position n"}]},"_GDIPlus_LineBrushSetSigmaBlend":{"documentation":"Sets the blend shape of a linear gradient brush to create a custom blend based on a bell-shaped curve","label":"_GDIPlus_LineBrushSetSigmaBlend ( $hLineGradientBrush, $fFocus [, $fScale = 1] )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"},{"label":"$fFocus","documentation":"Number in the range 0.0 to 1.0 that specifies the position of the ending color"},{"label":"$fScale","documentation":"**[optional]** Number in the range 0.0 to 1.0 that specifies the percentage of the gradient\'s ending"}]},"_GDIPlus_LineBrushSetTransform":{"documentation":"Sets the transformation matrix of a linear gradient brush","label":"_GDIPlus_LineBrushSetTransform ( $hLineGradientBrush, $hMatrix )","params":[{"label":"$hLineGradientBrush","documentation":"Pointer to a LinearGradientBrush object"},{"label":"$hMatrix","documentation":"Pointer to a Matrix object that specifies the transformation matrix"}]},"_GDIPlus_MatrixClone":{"documentation":"Clones a Matrix object","label":"_GDIPlus_MatrixClone ( $hMatrix )","params":[{"label":"$hMatrix","documentation":"Pointer to a Matrix object"}]},"_GDIPlus_MatrixCreate":{"documentation":"Creates and initializes a Matrix object that represents the identity matrix","label":"_GDIPlus_MatrixCreate (  )","params":[]},"_GDIPlus_MatrixDispose":{"documentation":"Release a matrix object","label":"_GDIPlus_MatrixDispose ( $hMatrix )","params":[{"label":"$hMatrix","documentation":"Handle to a Matrix object"}]},"_GDIPlus_MatrixGetElements":{"documentation":"Gets the elements of a matrix","label":"_GDIPlus_MatrixGetElements ( $hMatrix )","params":[{"label":"$hMatrix","documentation":"Pointer to a Matrix object"}]},"_GDIPlus_MatrixInvert":{"documentation":"Replaces the elements of a matrix with the elements of its inverse","label":"_GDIPlus_MatrixInvert ( $hMatrix )","params":[{"label":"$hMatrix","documentation":"Pointer to a Matrix object"}]},"_GDIPlus_MatrixMultiply":{"documentation":"Updates a matrix with the product of itself and another matrix","label":"_GDIPlus_MatrixMultiply ( $hMatrix1, $hMatrix2 [, $iOrder = 0] )","params":[{"label":"$hMatrix1","documentation":"Pointer to a Matrix object"},{"label":"$hMatrix2","documentation":"Pointer to a Matrix object that will be multiplied by the first matrix"},{"label":"$iOrder","documentation":"**[optional]** Order of matrices multiplication:    0 - The second matrix is on the left    1 - The second matrix is on the right"}]},"_GDIPlus_MatrixRotate":{"documentation":"Updates a matrix with the product of itself and a rotation matrix","label":"_GDIPlus_MatrixRotate ( $hMatrix, $fAngle [, $bAppend = False] )","params":[{"label":"$hMatrix","documentation":"Handle to a Matrix object"},{"label":"$fAngle","documentation":"The angle of rotation in degrees. Positive values specify clockwise rotation."},{"label":"$bAppend","documentation":"**[optional]** Specifies the order of the multiplication:    True - Specifies that the rotation matrix is on the left    False - Specifies that the rotation matrix is on the right"}]},"_GDIPlus_MatrixScale":{"documentation":"Updates a matrix with the product of itself and a scaling matrix","label":"_GDIPlus_MatrixScale ( $hMatrix, $fScaleX, $fScaleY [, $bOrder = False] )","params":[{"label":"$hMatrix","documentation":"Handle to a Matrix object"},{"label":"$fScaleX","documentation":"Multiplier to scale the x-axis"},{"label":"$fScaleY","documentation":"Multiplier to scale the y-axis"},{"label":"$bOrder","documentation":"**[optional]** Specifies the order of the multiplication:    True - Specifies that the scaling matrix is on the left    False - Specifies that the scaling matrix is on the right"}]},"_GDIPlus_MatrixSetElements":{"documentation":"Sets the elements of a matrix","label":"_GDIPlus_MatrixSetElements ( $hMatrix [, $nM11 = 1 [, $nM12 = 0 [, $nM21 = 0 [, $nM22 = 1 [, $nDX = 0 [, $nDY = 0]]]]]] )","params":[{"label":"$hMatrix","documentation":"A handle value"},{"label":"$nM11","documentation":"**[optional]** A floating point number value. Default is 1"},{"label":"$nM12","documentation":"**[optional]** A floating point number value. Default is 0"},{"label":"$nM21","documentation":"**[optional]** A floating point number value. Default is 0"},{"label":"$nM22","documentation":"**[optional]** A floating point number value. Default is 1"},{"label":"$nDX","documentation":"**[optional]** A floating point number value. Default is 0"},{"label":"$nDY","documentation":"**[optional]** A floating point number value. Default is 0"}]},"_GDIPlus_MatrixShear":{"documentation":"Updates a matrix with the product of itself and another matrix","label":"_GDIPlus_MatrixShear ( $hMatrix, $fShearX, $fShearY [, $iOrder = 0] )","params":[{"label":"$hMatrix","documentation":"Pointer to a Matrix object"},{"label":"$fShearX","documentation":"Real number that specifies the horizontal shear factor"},{"label":"$fShearY","documentation":"Real number that specifies the vertical shear factor"},{"label":"$iOrder","documentation":"**[optional]** Order of matrices multiplication:    0 - The passed matrix is on the left    1 - The passed matrix is on the right"}]},"_GDIPlus_MatrixTransformPoints":{"documentation":"Multiplies each point in an array by a matrix","label":"_GDIPlus_MatrixTransformPoints ( $hMatrix, ByRef $aPoints )","params":[{"label":"$hMatrix","documentation":"Pointer to a Matrix object"},{"label":"$aPoints","documentation":"Array of points to be transformed:    [0][0] - Number of points    [1][0] - Point 1 X coordinate    [1][1] - Point 1 Y coordinate    [2][0] - Point 2 X coordinate    [2][1] - Point 2 Y coordinate    [n][0] - Point n X coordinate    [n][1] - Point n Y coordinate"}]},"_GDIPlus_MatrixTranslate":{"documentation":"Updates a matrix with the product of itself and a translation matrix","label":"_GDIPlus_MatrixTranslate ( $hMatrix, $fOffsetX, $fOffsetY [, $bAppend = False] )","params":[{"label":"$hMatrix","documentation":"Handle to a Matrix object"},{"label":"$fOffsetX","documentation":"Amount of pixels to add along the x-axis"},{"label":"$fOffsetY","documentation":"Amount of pixels to add along the y-axis"},{"label":"$bAppend","documentation":"**[optional]** Specifies the order of the multiplication:    True - Specifies that the translation matrix is on the left    False - Specifies that the translation matrix is on the right"}]},"_GDIPlus_PaletteInitialize":{"documentation":"Initializes a standard, optimal, or custom color palette","label":"_GDIPlus_PaletteInitialize ( $iEntries [, $iPaletteType = $GDIP_PaletteTypeOptimal [, $iOptimalColors = 0 [, $bUseTransparentColor = True [, $hBitmap = Null]]]] )","params":[{"label":"$iEntries","documentation":"Number of Entries."},{"label":"$iPaletteType","documentation":"**[optional]** PaletteType constant that specifies the palette type ($GDIP_PaletteType*)."},{"label":"$iOptimalColors","documentation":"**[optional]** Integer that specifies the number of colors you want to have in an optimal palette based on a specified bitmap.If this parameter is greater than 0, the palettetype parameter must be set to PaletteTypeOptimal and the bitmap parameter must point to a Bitmap object."},{"label":"$bUseTransparentColor","documentation":"**[optional]** Boolean value that specifies whether to include the transparent color in the palette.Set to TRUE to include the transparent color; otherwise FALSE."},{"label":"$hBitmap","documentation":"**[optional]** Handle of a Bitmap object for which an optimal palette will be created."}]},"_GDIPlus_ParamAdd":{"documentation":"Add a value to an encoder parameter list","label":"_GDIPlus_ParamAdd ( ByRef $tParams, $sGUID, $iNbOfValues, $iType, $pValues )","params":[{"label":"$tParams","documentation":"$tagGDIPENCODERPARAMS structure returned from _GDIPlus_ParamInit()"},{"label":"$sGUID","documentation":"Encoder parameter GUID. Can be one of the following:    $GDIP_EPGCHROMINANCETABLE - Chrominance table settings    $GDIP_EPGCOLORDEPTH - Color depth settings    $GDIP_EPGCOMPRESSION - Compression settings    $GDIP_EPGLUMINANCETABLE - Luminance table settings    $GDIP_EPGQUALITY - Quality settings    $GDIP_EPGRENDERMETHOD - Render method settings    $GDIP_EPGSAVEFLAG - Save flag settings    $GDIP_EPGSCANMETHOD - Scan mode settings    $GDIP_EPGTRANSFORMATION - Transformation settings    $GDIP_EPGVERSION - Software version settings"},{"label":"$iNbOfValues","documentation":"Number of elements in the $pValues array"},{"label":"$iType","documentation":"Encoder parameter value type. Can be one of the following:    $GDIP_EPTBYTE - 8 bit unsigned integer    $GDIP_EPTASCII - Null terminated character string    $GDIP_EPTSHORT - 16 bit unsigned integer    $GDIP_EPTLONG - 32 bit unsigned integer    $GDIP_EPTRATIONAL - Two longs (numerator, denominator)    $GDIP_EPTLONGRANGE - Two longs (low, high)    $GDIP_EPTUNDEFINED - Array of bytes of any type    $GDIP_EPTRATIONALRANGE - Two longs (low, high)"},{"label":"$pValues","documentation":"Pointer to an array of values. Each value has the type specified by the $iType data member."}]},"_GDIPlus_ParamInit":{"documentation":"Allocate an empty encoder parameter list","label":"_GDIPlus_ParamInit ( $iCount )","params":[{"label":"$iCount","documentation":"The total number of $tagGDIPENCODERPARAM that the list can contain"}]},"_GDIPlus_ParamSize":{"documentation":"Get an encoder parameter size","label":"_GDIPlus_ParamSize (  )","params":[]},"_GDIPlus_PathAddArc":{"documentation":"Adds an elliptical arc to the current figure of a path","label":"_GDIPlus_PathAddArc ( $hPath, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$nX","documentation":"X coordinate of the upper-left corner of the ellipse that contains the arc"},{"label":"$nY","documentation":"Y coordinate of the upper-left corner of the ellipse that contains the arc"},{"label":"$nWidth","documentation":"Width of the bounding rectangle for the ellipse that contains the arc"},{"label":"$nHeight","documentation":"Height of the bounding rectangle for the ellipse that contains the arc"},{"label":"$fStartAngle","documentation":"The angle, in degrees, between the X axis and the starting point of the arc"},{"label":"$fSweepAngle","documentation":"The angle, in degrees, between the starting and ending points of the arc"}]},"_GDIPlus_PathAddBezier":{"documentation":"Adds a bezier spline to the current figure of a path","label":"_GDIPlus_PathAddBezier ( $hPath, $nX1, $nY1, $nX2, $nY2, $nX3, $nY3, $nX4, $nY4 )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$nX1","documentation":"X coordinate of the starting point"},{"label":"$nY1","documentation":"Y coordinate of the starting point"},{"label":"$nX2","documentation":"X coordinate of the first control point"},{"label":"$nY2","documentation":"Y coordinate of the first control point"},{"label":"$nX3","documentation":"X coordinate of the second control point"},{"label":"$nY3","documentation":"Y coordinate of the second control point"},{"label":"$nX4","documentation":"X coordinate of the ending point"},{"label":"$nY4","documentation":"Y coordinate of the ending point"}]},"_GDIPlus_PathAddClosedCurve":{"documentation":"Adds a closed cardinal spline to a path","label":"_GDIPlus_PathAddClosedCurve ( $hPath, $aPoints )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$aPoints","documentation":"Array of points that define the cardinal spline:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"}]},"_GDIPlus_PathAddClosedCurve2":{"documentation":"Adds a closed cardinal spline to a path","label":"_GDIPlus_PathAddClosedCurve2 ( $hPath, $aPoints [, $nTension = 0.5] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$aPoints","documentation":"Array of points that define the cardinal spline:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$nTension","documentation":"**[optional]** Nonnegative real number that controls the length of the curve and how the curve bends.A value of 0 specifies that the spline is a sequence of straight lines.As the value increases, the curve becomes fuller."}]},"_GDIPlus_PathAddCurve":{"documentation":"Adds a cardinal spline to the current figure of a path","label":"_GDIPlus_PathAddCurve ( $hPath, $aPoints )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$aPoints","documentation":"Array of points that define the cardinal spline:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"}]},"_GDIPlus_PathAddCurve2":{"documentation":"Adds a cardinal spline to the current figure of a path","label":"_GDIPlus_PathAddCurve2 ( $hPath, $aPoints [, $nTension = 0.5] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$aPoints","documentation":"Array of points that define the cardinal spline:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$nTension","documentation":"**[optional]** Nonnegative real number that controls the length of the curve and how the curve bends.A value of 0 specifies that the spline is a sequence of straight lines.As the value increases, the curve becomes fuller."}]},"_GDIPlus_PathAddCurve3":{"documentation":"Adds a cardinal spline to the current figure of a path","label":"_GDIPlus_PathAddCurve3 ( $hPath, $aPoints, $iOffset, $iNumOfSegments [, $nTension = 0.5] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$aPoints","documentation":"Array of points that define the cardinal spline:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"},{"label":"$iOffset","documentation":"The index of the array element that is used as the first point of the cardinal spline, this is the index of the specific point in the array minus 1"},{"label":"$iNumOfSegments","documentation":"Number of segments in the cardinal spline. Segments are the curves that connect consecutive points in the array"},{"label":"$nTension","documentation":"**[optional]** Nonnegative real number that controls the length of the curve and how the curve bends.As the value increases, the curve becomes fuller."}]},"_GDIPlus_PathAddEllipse":{"documentation":"Adds an ellipse to the current figure a path","label":"_GDIPlus_PathAddEllipse ( $hPath, $nX, $nY, $nWidth, $nHeight )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle that bounds the ellipse"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle that bounds the ellipse"},{"label":"$nWidth","documentation":"The width of the rectangle that bounds the ellipse"},{"label":"$nHeight","documentation":"The height of the rectangle that bounds the ellipse"}]},"_GDIPlus_PathAddLine":{"documentation":"Adds a line to the current figure of a path","label":"_GDIPlus_PathAddLine ( $hPath, $nX1, $nY1, $nX2, $nY2 )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$nX1","documentation":"The X coordinate of the starting point of the line"},{"label":"$nY1","documentation":"The Y coordinate of the starting point of the line"},{"label":"$nX2","documentation":"The X coordinate of the ending point of the line"},{"label":"$nY2","documentation":"The Y coordinate of the ending point of the line"}]},"_GDIPlus_PathAddLine2":{"documentation":"Adds a sequence of lines to the current figure of a path","label":"_GDIPlus_PathAddLine2 ( $hPath, $aPoints )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$aPoints","documentation":"Array of points that define the lines:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"}]},"_GDIPlus_PathAddPath":{"documentation":"Adds a path to another path","label":"_GDIPlus_PathAddPath ( $hPath1, $hPath2 [, $bConnect = True] )","params":[{"label":"$hPath1","documentation":"Pointer to a GraphicsPath object"},{"label":"$hPath2","documentation":"Pointer to a GraphicsPath object to be added to $hPath1"},{"label":"$bConnect","documentation":"**[optional]** Specifies whether the first figure in the added path is part of the last figure in this path:    True - The first figure in the added $hPath2 is part of the last figure in the $hPath1 path    False - The first figure in the added $hPath2 is separated from the last figure in the $hPath1 path"}]},"_GDIPlus_PathAddPie":{"documentation":"Adds a pie to a path","label":"_GDIPlus_PathAddPie ( $hPath, $nX, $nY, $nWidth, $nHeight, $fStartAngle, $fSweepAngle )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle that bounds the ellipse that bounds the pie"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle that bounds the ellipse that bounds the pie"},{"label":"$nWidth","documentation":"The width of the rectangle that bounds the ellipse that bounds the pie"},{"label":"$nHeight","documentation":"The height of the rectangle that bounds the ellipse that bounds the pie"},{"label":"$fStartAngle","documentation":"The angle, in degrees, between the X axis and the starting point of the arc that defines the pie.A positive value specifies clockwise rotation."},{"label":"$fSweepAngle","documentation":"The angle, in degrees, between the starting and ending points of the arc that defines the pie.A positive value specifies clockwise rotation."}]},"_GDIPlus_PathAddPolygon":{"documentation":"Adds a polygon to a path","label":"_GDIPlus_PathAddPolygon ( $hPath, $aPoints )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$aPoints","documentation":"Array of points that define the vertices of the polygon:    [0][0] - Number of points    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [2][0] - Point 2 X position    [2][1] - Point 2 Y position    [n][0] - Point n X position    [n][1] - Point n Y position"}]},"_GDIPlus_PathAddRectangle":{"documentation":"Adds a rectangle to a path","label":"_GDIPlus_PathAddRectangle ( $hPath, $nX, $nY, $nWidth, $nHeight )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$nX","documentation":"X coordinate of the upper-left corner of the rectangle"},{"label":"$nY","documentation":"Y coordinate of the upper-left corner of the rectangle"},{"label":"$nWidth","documentation":"Width of the rectangle"},{"label":"$nHeight","documentation":"Height of the rectangle"}]},"_GDIPlus_PathAddString":{"documentation":"Adds the outline of a string to a path","label":"_GDIPlus_PathAddString ( $hPath, $sString, $tLayout, $hFamily [, $iStyle = 0 [, $fSize = 8.5 [, $hFormat = 0]]] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$sString","documentation":"String to be drawn"},{"label":"$tLayout","documentation":"$tagGDIPRECTF structure that bounds the string"},{"label":"$hFamily","documentation":"Pointer to a FontFamily object that specifies the font family for the string"},{"label":"$iStyle","documentation":"**[optional]** The style of the typeface. Can be a combination of the following:    0 - Normal weight or thickness of the typeface    1 - Bold typeface    2 - Italic typeface    4 - Underline    8 - Strikethrough"},{"label":"$fSize","documentation":"**[optional]** The em size, in world units, of the string characters"},{"label":"$hFormat","documentation":"**[optional]** Pointer to a StringFormat object that specifies layout information for the string"}]},"_GDIPlus_PathBrushCreate":{"documentation":"Creates a PathGradientBrush object based on an array of points and initializes the wrap mode of the brush","label":"_GDIPlus_PathBrushCreate ( $aPoints [, $iWrapMode = 0] )","params":[{"label":"$aPoints","documentation":"Array of points that specify the boundary path of the path gradient brush    [0][0] - Number of points    [1][0] - Point 1 X coordinate    [1][1] - Point 1 Y coordinate    [2][0] - Point 2 X coordinate    [2][1] - Point 2 Y coordinate    [n][0] - Point n X coordinate    [n][1] - Point n Y coordinate"},{"label":"$iWrapMode","documentation":"**[optional]** Wrap mode that specifies how areas filled with the brush are tiled:    0 - Tiling without flipping    1 - Tiles are flipped horizontally as you move from one tile to the next in a row    2 - Tiles are flipped vertically as you move from one tile to the next in a column    3 - Tiles are flipped horizontally as you move along a row and flipped vertically as you move along a column    4 - No tiling takes place"}]},"_GDIPlus_PathBrushCreateFromPath":{"documentation":"Creates a PathGradientBrush object based on a GraphicsPath object","label":"_GDIPlus_PathBrushCreateFromPath ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object that specifies the boundary path of the path gradient brush"}]},"_GDIPlus_PathBrushGetCenterPoint":{"documentation":"Gets the center point of a path gradient brush","label":"_GDIPlus_PathBrushGetCenterPoint ( $hPathGradientBrush )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"}]},"_GDIPlus_PathBrushGetFocusScales":{"documentation":"Gets the focus scales of a path gradient brush","label":"_GDIPlus_PathBrushGetFocusScales ( $hPathGradientBrush )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"}]},"_GDIPlus_PathBrushGetPointCount":{"documentation":"Gets the number of points in the array of points that defines a brush\'s boundary path","label":"_GDIPlus_PathBrushGetPointCount ( $hPathGradientBrush )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"}]},"_GDIPlus_PathBrushGetRect":{"documentation":"Gets the smallest rectangle that encloses the boundary path of a path gradient brush","label":"_GDIPlus_PathBrushGetRect ( $hPathGradientBrush )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"}]},"_GDIPlus_PathBrushGetWrapMode":{"documentation":"Gets the wrap mode currently set for a path gradient brush","label":"_GDIPlus_PathBrushGetWrapMode ( $hPathGradientBrush )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"}]},"_GDIPlus_PathBrushMultiplyTransform":{"documentation":"Updates a brush\'s transformation matrix with the product of itself and another matrix","label":"_GDIPlus_PathBrushMultiplyTransform ( $hPathGradientBrush, $hMatrix [, $iOrder = 0] )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$hMatrix","documentation":"Pointer to a matrix to be multiplied by the brush\'s current transformation matrix"},{"label":"$iOrder","documentation":"**[optional]** Order of matrices multiplication:    0 - The passed matrix is on the left    1 - The passed matrix is on the right"}]},"_GDIPlus_PathBrushResetTransform":{"documentation":"Resets the transformation matrix of a path gradient brush to the identity matrix","label":"_GDIPlus_PathBrushResetTransform ( $hPathGradientBrush )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"}]},"_GDIPlus_PathBrushSetBlend":{"documentation":"Sets the blend factors and the blend positions of a path gradient brush","label":"_GDIPlus_PathBrushSetBlend ( $hPathGradientBrush, $aBlends )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$aBlends","documentation":"Array of blend factors and blend positions:    [0][0] - Number of blend factors and blend positions    [1][0] - Factor 1    [1][1] - Position 1    [2][0] - Factor 2    [2][1] - Position 2    [n][0] - Factor n    [n][1] - Position n"}]},"_GDIPlus_PathBrushSetCenterColor":{"documentation":"Sets the color of the center point of a path gradient brush","label":"_GDIPlus_PathBrushSetCenterColor ( $hPathGradientBrush, $iARGB )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$iARGB","documentation":"Alpha, Red, Green and Blue components of the new center color"}]},"_GDIPlus_PathBrushSetCenterPoint":{"documentation":"Sets the center point of a path gradient brush","label":"_GDIPlus_PathBrushSetCenterPoint ( $hPathGradientBrush, $nX, $nY )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$nX","documentation":"X coordinate of the new center point"},{"label":"$nY","documentation":"Y coordinate of the new center point"}]},"_GDIPlus_PathBrushSetFocusScales":{"documentation":"Sets the focus scales of a path gradient brush","label":"_GDIPlus_PathBrushSetFocusScales ( $hPathGradientBrush, $fScaleX, $fScaleY )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$fScaleX","documentation":"Real number that specifies the X focus scale"},{"label":"$fScaleY","documentation":"Real number that specifies the Y focus scale"}]},"_GDIPlus_PathBrushSetGammaCorrection":{"documentation":"Specifies whether gamma correction is enabled for a path gradient brush","label":"_GDIPlus_PathBrushSetGammaCorrection ( $hPathGradientBrush, $bUseGammaCorrection )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$bUseGammaCorrection","documentation":"If True, gamma correction is enabled; otherwise, gamma correction is disabled"}]},"_GDIPlus_PathBrushSetLinearBlend":{"documentation":"Sets the blend shape of a path gradient brush to create a custom blend based on a triangular shape","label":"_GDIPlus_PathBrushSetLinearBlend ( $hPathGradientBrush, $fFocus [, $fScale = 1] )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$fFocus","documentation":"Number in the range 0.0 to 1.0 that specifies where the center color will be at its highest intensity"},{"label":"$fScale","documentation":"**[optional]** Number in the range 0.0 to 1.0 that specifies the maximum intensity of center color that gets blended with the boundary color"}]},"_GDIPlus_PathBrushSetPresetBlend":{"documentation":"Sets the preset colors and the blend positions of a path gradient brush","label":"_GDIPlus_PathBrushSetPresetBlend ( $hPathGradientBrush, $aInterpolations )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$aInterpolations","documentation":"Array of blend colors and blend positions:    [0][0] - Number of preset colors and blend positions    [1][0] - Color 1    [1][1] - Position 1    [2][0] - Color 2    [2][1] - Position 2    [n][0] - Color n    [n][1] - Position n"}]},"_GDIPlus_PathBrushSetSigmaBlend":{"documentation":"Sets the blend shape of a path gradient brush to create a custom blend based on a bell-shaped curve","label":"_GDIPlus_PathBrushSetSigmaBlend ( $hPathGradientBrush, $fFocus [, $fScale = 1] )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$fFocus","documentation":"Number in the range 0.0 to 1.0 that specifies where the center color will be at its highest intensity"},{"label":"$fScale","documentation":"**[optional]** Number in the range 0.0 to 1.0 that specifies the maximum intensity of center color that gets blended with the boundary color"}]},"_GDIPlus_PathBrushSetSurroundColor":{"documentation":"Sets the surround color for a path gradient brush","label":"_GDIPlus_PathBrushSetSurroundColor ( $hPathGradientBrush, $iARGB )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$iARGB","documentation":"Alpha, Red, Green and Blue components of the new surrounding colors"}]},"_GDIPlus_PathBrushSetSurroundColorsWithCount":{"documentation":"Sets the surround colors currently specified for a path gradient brush","label":"_GDIPlus_PathBrushSetSurroundColorsWithCount ( $hPathGradientBrush, $aColors )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$aColors","documentation":"Array containing the surrounding colors:    [0] - Number of colors    [1] - Color 1    [2] - Color 2    [n] - Color n"}]},"_GDIPlus_PathBrushSetTransform":{"documentation":"Sets the transformation matrix of a path gradient brush","label":"_GDIPlus_PathBrushSetTransform ( $hPathGradientBrush, $hMatrix )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$hMatrix","documentation":"Pointer to a Matrix object that specifies the transformation matrix"}]},"_GDIPlus_PathBrushSetWrapMode":{"documentation":"Sets the wrap mode of a path gradient brush","label":"_GDIPlus_PathBrushSetWrapMode ( $hPathGradientBrush, $iWrapMode )","params":[{"label":"$hPathGradientBrush","documentation":"Pointer to a PathGradientBrush object"},{"label":"$iWrapMode","documentation":"Wrap mode that specifies how an area is tiled when it is painted with a brush:    0 - Tiling without flipping    1 - Tiles are flipped horizontally as you move from one tile to the next in a row    2 - Tiles are flipped vertically as you move from one tile to the next in a column    3 - Tiles are flipped horizontally as you move along a row and flipped vertically as you move along a column"}]},"_GDIPlus_PathClone":{"documentation":"Clones a path","label":"_GDIPlus_PathClone ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object to be cloned"}]},"_GDIPlus_PathCloseFigure":{"documentation":"Closes the current figure of a path","label":"_GDIPlus_PathCloseFigure ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathCreate":{"documentation":"Creates a GraphicsPath object and initializes the fill mode","label":"_GDIPlus_PathCreate ( [$iFillMode = 0] )","params":[{"label":"$iFillMode","documentation":"**[optional]** Fill mode of the interior of the path figures:    0 - The areas are filled according to the even-odd parity rule    1 - The areas are filled according to the nonzero winding rule"}]},"_GDIPlus_PathCreate2":{"documentation":"Creates a GraphicsPath object based on an array of points, an array of types, and a fill mode","label":"_GDIPlus_PathCreate2 ( $aPathData [, $iFillMode = 0] )","params":[{"label":"$aPathData","documentation":"Array of points and types that specifies the endpoints and control points of the lines and bezier splines that are used to draw the path and the points types:    [0][0] - Number of points and types    [1][0] - Point 1 X position    [1][1] - Point 1 Y position    [1][2] - Point 1 type    [n][0] - Point n X position    [n][1] - Point n Y position    [1][2] - Point n typeEach point type is one of the following values:    0x00 - The point is the start of a figure    0x01 - The point is one of the two endpoints of a line    0x03 - The point is an endpoint or control point of a cubic bezier spline    0x20 - The point is a marker    0x80 - The point is the last point in a closed subpath (figure)"},{"label":"$iFillMode","documentation":"**[optional]** Fill mode of the interior of the path figures:    0 - The areas are filled according to the even-odd parity rule    1 - The areas are filled according to the nonzero winding rule"}]},"_GDIPlus_PathDispose":{"documentation":"Releases a GraphicsPath object","label":"_GDIPlus_PathDispose ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathFlatten":{"documentation":"Applies a transformation to a path and converts each curve in the path to a sequence of connected lines","label":"_GDIPlus_PathFlatten ( $hPath [, $fFlatness = 0.25 [, $hMatrix = 0]] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$fFlatness","documentation":"**[optional]** Real number that specifies the maximum error between the path and its flattened approximation.Reducing the flatness increases the number of line segments in the approximation"},{"label":"$hMatrix","documentation":"**[optional]** Pointer to a Matrix object that specifies the transformation to be applied to the path\'s data points"}]},"_GDIPlus_PathGetData":{"documentation":"Gets an array of points and types from a path","label":"_GDIPlus_PathGetData ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathGetFillMode":{"documentation":"Gets the fill mode of a path","label":"_GDIPlus_PathGetFillMode ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathGetLastPoint":{"documentation":"Gets the ending point of the last figure in a path","label":"_GDIPlus_PathGetLastPoint ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathGetPointCount":{"documentation":"Gets the number of points in a path\'s array of data points","label":"_GDIPlus_PathGetPointCount ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathGetPoints":{"documentation":"Gets an array of points from a path","label":"_GDIPlus_PathGetPoints ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathGetWorldBounds":{"documentation":"Gets the bounding rectangle for a path","label":"_GDIPlus_PathGetWorldBounds ( $hPath [, $hMatrix = 0 [, $hPen = 0]] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$hMatrix","documentation":"**[optional]** Pointer to a Matrix object that specifies a transformation to be applied to this path before the bounding rectangle is calculated. The path is not permanently transformed"},{"label":"$hPen","documentation":"**[optional]** Pointer to a Pen object that influences the size of the bounding rectangle.The bounding rectangle bounds will be large enough to enclose the path when the path is drawn with the specified pen."}]},"_GDIPlus_PathIsOutlineVisiblePoint":{"documentation":"Determines whether a specified point touches the outline of a path with the specified Graphics and Pen","label":"_GDIPlus_PathIsOutlineVisiblePoint ( $hPath, $nX, $nY [, $hPen = 0 [, $hGraphics = 0]] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$nX","documentation":"X coordinate of the point to test"},{"label":"$nY","documentation":"Y coordinate of the point to test"},{"label":"$hPen","documentation":"**[optional]** Pointer to a Pen object that define the width of point to test. If 0, a solid black pen with a width of 1 will be used"},{"label":"$hGraphics","documentation":"**[optional]** Pointer to a Graphics object that specifies a world-to-device transformation. If 0, the test is done in world coordinates; otherwise, the test is done in device coordinates."}]},"_GDIPlus_PathIsVisiblePoint":{"documentation":"Determines whether a specified point lies in the area that is filled when a path is filled by a specified Graphics object","label":"_GDIPlus_PathIsVisiblePoint ( $hPath, $nX, $nY [, $hGraphics = 0] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$nX","documentation":"X coordinate of the point to test"},{"label":"$nY","documentation":"Y coordinate of the point to test"},{"label":"$hGraphics","documentation":"**[optional]** Pointer to a Graphics object that specifies a world-to-device transformation. If 0, the test is done in world coordinates; otherwise, the test is done in device coordinates."}]},"_GDIPlus_PathIterCreate":{"documentation":"Creates a new GraphicsPathIterator object and associates it with a GraphicsPath object","label":"_GDIPlus_PathIterCreate ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object that will be associated with this GraphicsPathIterator object"}]},"_GDIPlus_PathIterDispose":{"documentation":"Releases a GraphicsPathIterator object","label":"_GDIPlus_PathIterDispose ( $hPathIter )","params":[{"label":"$hPathIter","documentation":"Pointer to a GraphicsPath object that will be associated with this GraphicsPathIterator object"}]},"_GDIPlus_PathIterGetSubpathCount":{"documentation":"Gets the number of subpaths (also called figures) in the path","label":"_GDIPlus_PathIterGetSubpathCount ( $hPathIter )","params":[{"label":"$hPathIter","documentation":"Pointer to a GraphicsPathIterator object"}]},"_GDIPlus_PathIterNextMarkerPath":{"documentation":"Gets the next marker-delimited section of an iterator\'s associated path","label":"_GDIPlus_PathIterNextMarkerPath ( $hPathIter, $hPath )","params":[{"label":"$hPathIter","documentation":"Pointer to a GraphicsPathIterator object"},{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathIterNextSubpathPath":{"documentation":"Gets the next figure (subpath) from an iterator\'s associated path","label":"_GDIPlus_PathIterNextSubpathPath ( $hPathIter, $hPath )","params":[{"label":"$hPathIter","documentation":"Pointer to a GraphicsPathIterator object"},{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathIterRewind":{"documentation":"Rewinds an iterator to the beginning of its associated path","label":"_GDIPlus_PathIterRewind ( $hPathIter )","params":[{"label":"$hPathIter","documentation":"Pointer to a GraphicsPathIterator object"}]},"_GDIPlus_PathReset":{"documentation":"Empties a path and sets the fill mode to alternate (0)","label":"_GDIPlus_PathReset ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathReverse":{"documentation":"Reverses the order of the points that define a path\'s lines and curves","label":"_GDIPlus_PathReverse ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathSetFillMode":{"documentation":"Sets the fill mode of a path","label":"_GDIPlus_PathSetFillMode ( $hPath, $iFillMode )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$iFillMode","documentation":"Path fill mode:    0 - The areas are filled according to the even-odd parity rule    1 - The areas are filled according to the nonzero winding rule"}]},"_GDIPlus_PathSetMarker":{"documentation":"Designates the last point in a path as a marker point","label":"_GDIPlus_PathSetMarker ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathStartFigure":{"documentation":"Starts a new figure without closing the current figure. Subsequent points added to a path are added to the new figure","label":"_GDIPlus_PathStartFigure ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"}]},"_GDIPlus_PathTransform":{"documentation":"Multiplies each of a path\'s data points by a specified matrix","label":"_GDIPlus_PathTransform ( $hPath, $hMatrix )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$hMatrix","documentation":"Pointer to a Matrix object that specifies the transformation"}]},"_GDIPlus_PathWarp":{"documentation":"Applies a warp transformation to a path. The function also flattens (converts to a sequence of straight lines) the path","label":"_GDIPlus_PathWarp ( $hPath, $hMatrix, $aPoints, $nX, $nY, $nWidth, $nHeight [, $iWarpMode = 0 [, $fFlatness = 0.25]] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$hMatrix","documentation":"Pointer to a Matrix object that represents a transformation to be applied along with the warp."},{"label":"$aPoints","documentation":"Array of parallelogram points that, along with the rectangle parameters, define the wrap mode:    [0][0] - Number of points. This number must be 3 or 4    [1][0] - Point 1 X coordinate    [1][1] - Point 1 Y coordinate    [2][0] - Point 2 X coordinate    [2][1] - Point 2 Y coordinate    [n][0] - Point n X coordinate    [n][1] - Point n Y coordinate"},{"label":"$nX","documentation":"X coordinate of the upper left corner of the rectangle to be transformed into a parallelogram defined by $aPoints"},{"label":"$nY","documentation":"Y coordinate of the upper left corner of the rectangle to be transformed into a parallelogram defined by $aPoints"},{"label":"$nWidth","documentation":"Width of the rectangle to be transformed into a parallelogram defined by $aPoints"},{"label":"$nHeight","documentation":"Height of the rectangle to be transformed into a parallelogram defined by $aPoints"},{"label":"$iWarpMode","documentation":"**[optional]** Kind of warp to be applied:    0 - Specifies the perspective warp mode    1 - Specifies the bilinear warp mode"},{"label":"$fFlatness","documentation":"**[optional]** Real number that influences the number of line segments that are used to approximate the original path.Small values specify that many line segments are used, and large values specify that few line segments are used."}]},"_GDIPlus_PathWiden":{"documentation":"Replaces a path with curves that enclose the area that is filled when the path is drawn by a specified pen. The function also flattens the path","label":"_GDIPlus_PathWiden ( $hPath, $hPen [, $hMatrix = 0 [, $fFlatness = 0.25]] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$hPen","documentation":"Pointer to a Pen object. The path is made as wide as it would be when drawn by this pen. If 0, a solid black pen with a width of 1 will be used"},{"label":"$hMatrix","documentation":"**[optional]** Pointer to a Matrix object that represents a transformation to be applied along with the widening. If 0, no transformation is applied"},{"label":"$fFlatness","documentation":"**[optional]** Real number that specifies the maximum error between the path and its flattened approximation.Reducing the flatness increases the number of line segments in the approximation"}]},"_GDIPlus_PathWindingModeOutline":{"documentation":"Transforms and flattens a path, and then converts the path\'s data points so that they represent only the outline of the path","label":"_GDIPlus_PathWindingModeOutline ( $hPath [, $hMatrix = 0 [, $fFlatness = 0.25]] )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object"},{"label":"$hMatrix","documentation":"**[optional]** Pointer to a Matrix object that specifies the transformation. If 0, no transformation is applied"},{"label":"$fFlatness","documentation":"**[optional]** Real number that specifies the maximum error between the path and its flattened approximation.Reducing the flatness increases the number of line segments in the approximation."}]},"_GDIPlus_PenCreate":{"documentation":"Create a pen object","label":"_GDIPlus_PenCreate ( [$iARGB = 0xFF000000 [, $nWidth = 1 [, $iUnit = 2]]] )","params":[{"label":"$iARGB","documentation":"**[optional]** Alpha, Red, Green and Blue components of pen color"},{"label":"$nWidth","documentation":"**[optional]** The width of the pen measured in the units specified in the $iUnit parameter"},{"label":"$iUnit","documentation":"**[optional]** Unit of measurement for the pen size:    0 - World coordinates, a nonphysical unit    1 - Display units    2 - A unit is 1 pixel    3 - A unit is 1 point or 1/72 inch    4 - A unit is 1 inch    5 - A unit is 1/300 inch    6 - A unit is 1 millimeter"}]},"_GDIPlus_PenCreate2":{"documentation":"Creates a Pen object that uses the attributes of a brush","label":"_GDIPlus_PenCreate2 ( $hBrush [, $nWidth = 1 [, $iUnit = 2]] )","params":[{"label":"$hBrush","documentation":"Pointer to a brush object to base this pen on"},{"label":"$nWidth","documentation":"**[optional]** The width of the pen measured in the units specified in the $iUnit parameter"},{"label":"$iUnit","documentation":"**[optional]** Unit of measurement for the pen size:    0 - World coordinates, a nonphysical unit    1 - Display units    2 - A unit is 1 pixel    3 - A unit is 1 point or 1/72 inch    4 - A unit is 1 inch    5 - A unit is 1/300 inch    6 - A unit is 1 millimeter"}]},"_GDIPlus_PenDispose":{"documentation":"Release a pen object","label":"_GDIPlus_PenDispose ( $hPen )","params":[{"label":"$hPen","documentation":"Handle to a pen object"}]},"_GDIPlus_PenGetAlignment":{"documentation":"Gets the pen alignment","label":"_GDIPlus_PenGetAlignment ( $hPen )","params":[{"label":"$hPen","documentation":"Handle to a pen object"}]},"_GDIPlus_PenGetColor":{"documentation":"Gets the pen color","label":"_GDIPlus_PenGetColor ( $hPen )","params":[{"label":"$hPen","documentation":"Handle to a pen object"}]},"_GDIPlus_PenGetCustomEndCap":{"documentation":"Gets the custom end cap for the pen","label":"_GDIPlus_PenGetCustomEndCap ( $hPen )","params":[{"label":"$hPen","documentation":"Handle to a pen object"}]},"_GDIPlus_PenGetDashCap":{"documentation":"Gets the pen dash cap style","label":"_GDIPlus_PenGetDashCap ( $hPen )","params":[{"label":"$hPen","documentation":"Handle to a pen object"}]},"_GDIPlus_PenGetDashStyle":{"documentation":"Gets the pen dash style","label":"_GDIPlus_PenGetDashStyle ( $hPen )","params":[{"label":"$hPen","documentation":"Handle to a pen object"}]},"_GDIPlus_PenGetEndCap":{"documentation":"Gets the pen end cap","label":"_GDIPlus_PenGetEndCap ( $hPen )","params":[{"label":"$hPen","documentation":"Handle to a pen object"}]},"_GDIPlus_PenGetMiterLimit":{"documentation":"Gets the miter length currently set for a Pen object","label":"_GDIPlus_PenGetMiterLimit ( $hPen )","params":[{"label":"$hPen","documentation":"Pointer to a Pen object"}]},"_GDIPlus_PenGetWidth":{"documentation":"Retrieve the width of a pen","label":"_GDIPlus_PenGetWidth ( $hPen )","params":[{"label":"$hPen","documentation":"Handle to a pen object"}]},"_GDIPlus_PenSetAlignment":{"documentation":"Sets the pen alignment","label":"_GDIPlus_PenSetAlignment ( $hPen [, $iAlignment = 0] )","params":[{"label":"$hPen","documentation":"Handle to a pen object"},{"label":"$iAlignment","documentation":"**[optional]** Pen alignment. Can be one of the following:    0 - Specifies that the pen is aligned on the center of the line that is drawn    1 - Specifies, when drawing a polygon, that the pen is aligned on the inside of the edge of the polygon"}]},"_GDIPlus_PenSetColor":{"documentation":"Sets the pen color","label":"_GDIPlus_PenSetColor ( $hPen, $iARGB )","params":[{"label":"$hPen","documentation":"Handle to a pen object"},{"label":"$iARGB","documentation":"Alpha, Red, Green and Blue components of pen color"}]},"_GDIPlus_PenSetCustomEndCap":{"documentation":"Sets the custom end cap for the pen","label":"_GDIPlus_PenSetCustomEndCap ( $hPen, $hEndCap )","params":[{"label":"$hPen","documentation":"Handle to a pen object"},{"label":"$hEndCap","documentation":"Handle to a CustomLineCap object that specifies the pen custom end cap"}]},"_GDIPlus_PenSetDashCap":{"documentation":"Sets the pen dash cap style","label":"_GDIPlus_PenSetDashCap ( $hPen [, $iDash = 0] )","params":[{"label":"$hPen","documentation":"Handle to a pen object"},{"label":"$iDash","documentation":"**[optional]** Dash cap style. Can be one of the following:    $GDIP_DASHCAPFLAT - A square cap that squares off both ends of each dash    $GDIP_DASHCAPROUND - A circular cap that rounds off both ends of each dash    $GDIP_DASHCAPTRIANGLE - A triangular cap that points both ends of each dash"}]},"_GDIPlus_PenSetDashStyle":{"documentation":"Sets the pen dash style","label":"_GDIPlus_PenSetDashStyle ( $hPen [, $iStyle = 0] )","params":[{"label":"$hPen","documentation":"Handle to a pen object"},{"label":"$iStyle","documentation":"**[optional]** Dash style. Can be one of the following:    $GDIP_DASHSTYLESOLID - A solid line    $GDIP_DASHSTYLEDASH - A dashed line    $GDIP_DASHSTYLEDOT - A dotted line    $GDIP_DASHSTYLEDASHDOT - An alternating dash-dot line    $GDIP_DASHSTYLEDASHDOTDOT - An alternating dash-dot-dot line    $GDIP_DASHSTYLECUSTOM - A a user-defined, custom dashed line"}]},"_GDIPlus_PenSetEndCap":{"documentation":"Sets the pen end cap","label":"_GDIPlus_PenSetEndCap ( $hPen, $iEndCap )","params":[{"label":"$hPen","documentation":"Handle to a pen object"},{"label":"$iEndCap","documentation":"End cap type. Can be one of the following:    $GDIP_LINECAPFLAT - Specifies a flat cap    $GDIP_LINECAPSQUARE - Specifies a square cap    $GDIP_LINECAPROUND - Specifies a circular cap    $GDIP_LINECAPTRIANGLE - Specifies a triangular cap    $GDIP_LINECAPNOANCHOR - Specifies that the line ends are not anchored    $GDIP_LINECAPSQUAREANCHOR - Specifies that the line ends are anchored with a square    $GDIP_LINECAPROUNDANCHOR - Specifies that the line ends are anchored with a circle    $GDIP_LINECAPDIAMONDANCHOR - Specifies that the line ends are anchored with a diamond    $GDIP_LINECAPARROWANCHOR - Specifies that the line ends are anchored with arrowheads    $GDIP_LINECAPCUSTOM - Specifies that the line ends are made from a CustomLineCap"}]},"_GDIPlus_PenSetLineCap":{"documentation":"Sets the cap styles for the start, end, and dashes in a line drawn with the pen","label":"_GDIPlus_PenSetLineCap ( $hPen, $iStartCap, $iEndCap, $iDashCap )","params":[{"label":"$hPen","documentation":"Pointer to a Pen object"},{"label":"$iStartCap","documentation":"Line cap style for the start cap:    0x00 - Line ends at the last point. The end is squared off    0x01 - Square cap. The center of the square is the last point in the line.        The height and width of the square are the line width.    0x02 - Circular cap. The center of the circle is the last point in the line.        The diameter of the circle is the line width.    0x03 - Triangular cap.        The base of the triangle is the last point in the line.        The base of the triangle is the line width.    0x10 - Line ends are not anchored.    0x11 - Line ends are anchored with a square.        The center of the square is the last point in the line.        The height and width of the square are the line width.    0x12 - Line ends are anchored with a circle.        The center of the circle is at the last point in the line.        The circle is wider than the line.    0x13 - Line ends are anchored with a diamond (a square turned at 45 degrees).        The center of the diamond is at the last point in the line.        The diamond is wider than the line.    0x14 - Line ends are anchored with arrowheads.        The arrowhead point is located at the last point in the line.        The arrowhead is wider than the line.    0xff - Line ends are made from a CustomLineCap object"},{"label":"$iEndCap","documentation":"Line cap style for the end cap (same values as $iStartCap)"},{"label":"$iDashCap","documentation":"Start and end caps for a dashed line:    0 - A square cap that squares off both ends of each dash    2 - A circular cap that rounds off both ends of each dash    3 - A triangular cap that points both ends of each dash"}]},"_GDIPlus_PenSetLineJoin":{"documentation":"Sets the line join for a Pen object","label":"_GDIPlus_PenSetLineJoin ( $hPen, $iLineJoin )","params":[{"label":"$hPen","documentation":"Pointer to a Pen object"},{"label":"$iLineJoin","documentation":"Line join style:    0 - Line join produces a sharp corner or a clipped corner    1 - Line join produces a diagonal corner.    2 - Line join produces a smooth, circular arc between the lines.    3 - Line join produces a sharp corner or a clipped corner"}]},"_GDIPlus_PenSetMiterLimit":{"documentation":"Sets the miter limit of a Pen object","label":"_GDIPlus_PenSetMiterLimit ( $hPen, $fMiterLimit )","params":[{"label":"$hPen","documentation":"Pointer to a Pen object"},{"label":"$fMiterLimit","documentation":"Real number that specifies the miter limit of the Pen object.A real number value that is less than 1.0 will be replaced with 1.0."}]},"_GDIPlus_PenSetStartCap":{"documentation":"Sets the start cap for a Pen object","label":"_GDIPlus_PenSetStartCap ( $hPen, $iLineCap )","params":[{"label":"$hPen","documentation":"Pointer to a Pen object"},{"label":"$iLineCap","documentation":"Line cap style:    0x00 - Line ends at the last point. The end is squared off    0x01 - Square cap. The center of the square is the last point in the line. The height and width of the square are the line width.    0x02 - Circular cap. The center of the circle is the last point in the line. The diameter of the circle is the line width.    0x03 - Triangular cap. The base of the triangle is the last point in the line. The base of the triangle is the line width.    0x10 - Line ends are not anchored.    0x11 - Line ends are anchored with a square. The center of the square is the last point in the line. The height and width of the square are the line width.    0x12 - Line ends are anchored with a circle. The center of the circle is at the last point in the line. The circle is wider than the line.    0x13 - Line ends are anchored with a diamond (a square turned at 45 degrees). The center of the diamond is at the last point in the line. The diamond is wider than the line.    0x14 - Line ends are anchored with arrowheads. The arrowhead point is located at the last point in the line. The arrowhead is wider than the line.    0xff - Line ends are made from a CustomLineCap object."}]},"_GDIPlus_PenSetWidth":{"documentation":"Sets the width of a pen","label":"_GDIPlus_PenSetWidth ( $hPen, $fWidth )","params":[{"label":"$hPen","documentation":"Handle to a pen object"},{"label":"$fWidth","documentation":"Width of pen"}]},"_GDIPlus_RectFCreate":{"documentation":"Create a $tagGDIPRECTF structure","label":"_GDIPlus_RectFCreate ( [$nX = 0 [, $nY = 0 [, $nWidth = 0 [, $nHeight = 0]]]] )","params":[{"label":"$nX","documentation":"**[optional]** X coordinate of upper left hand corner of rectangle"},{"label":"$nY","documentation":"**[optional]** Y coordinate of upper left hand corner of rectangle"},{"label":"$nWidth","documentation":"**[optional]** Rectangle width"},{"label":"$nHeight","documentation":"**[optional]** Rectangle height"}]},"_GDIPlus_RegionClone":{"documentation":"Clones a Region object","label":"_GDIPlus_RegionClone ( $hRegion )","params":[{"label":"$hRegion","documentation":"Pointer to a Region object to be cloned"}]},"_GDIPlus_RegionCombinePath":{"documentation":"Updates a region to the portion of itself that intersects the specified path\'s interior","label":"_GDIPlus_RegionCombinePath ( $hRegion, $hPath [, $iCombineMode = 2] )","params":[{"label":"$hRegion","documentation":"Pointer to a Region object"},{"label":"$hPath","documentation":"Pointer to a GraphicsPath object that specifies the path to use to update the region"},{"label":"$iCombineMode","documentation":"**[optional]** Combine mode that specifies how the region is combined with the path:    0 - The existing region is replaced by the new region    1 - The existing region is replaced by the intersection of itself and the new region    2 - The existing region is replaced by the union of itself and the new region    3 - The existing region is replaced by the result of performing an XOR on the two regions.A point is in the XOR of two regions if it is in one region or the other but not in both regions    4 - The existing region is replaced by the portion of itself that is outside of the new region    5 - The existing region is replaced by the portion of the new region that is outside of the existing region"}]},"_GDIPlus_RegionCombineRect":{"documentation":"Updates a region to the portion of itself that intersects the specified rectangle\'s interior","label":"_GDIPlus_RegionCombineRect ( $hRegion, $nX, $nY, $nWidth, $nHeight [, $iCombineMode = 2] )","params":[{"label":"$hRegion","documentation":"Pointer to a Region object"},{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle"},{"label":"$nWidth","documentation":"The width of the rectangle"},{"label":"$nHeight","documentation":"The height of the rectangle"},{"label":"$iCombineMode","documentation":"**[optional]** Combine mode that specifies how the region is combined with the rectangle:    0 - The existing region is replaced by the new region    1 - The existing region is replaced by the intersection of itself and the new region    2 - The existing region is replaced by the union of itself and the new region    3 - The existing region is replaced by the result of performing an XOR on the two regions.A point is in the XOR of two regions if it is in one region or the other but not in both regions    4 - The existing region is replaced by the portion of itself that is outside of the new region    5 - The existing region is replaced by the portion of the new region that is outside of the existing region"}]},"_GDIPlus_RegionCombineRegion":{"documentation":"Updates a region to the portion of itself that intersects another region","label":"_GDIPlus_RegionCombineRegion ( $hRegionDst, $hRegionSrc [, $iCombineMode = 2] )","params":[{"label":"$hRegionDst","documentation":"Pointer to a Region object"},{"label":"$hRegionSrc","documentation":"Pointer to a Region object to use to update the $hRegionDst Region object"},{"label":"$iCombineMode","documentation":"**[optional]** Combine mode that specifies how the regions are combined:    0 - The existing region is replaced by the new region    1 - The existing region is replaced by the intersection of itself and the new region    2 - The existing region is replaced by the union of itself and the new region    3 - The existing region is replaced by the result of performing an XOR on the two regions.A point is in the XOR of two regions if it is in one region or the other but not in both regions    4 - The existing region is replaced by the portion of itself that is outside of the new region    5 - The existing region is replaced by the portion of the new region that is outside of the existing region"}]},"_GDIPlus_RegionCreate":{"documentation":"Creates a region that is infinite","label":"_GDIPlus_RegionCreate (  )","params":[]},"_GDIPlus_RegionCreateFromPath":{"documentation":"Creates a region that is defined by a path object and has a fill mode that is contained in the path object","label":"_GDIPlus_RegionCreateFromPath ( $hPath )","params":[{"label":"$hPath","documentation":"Pointer to a GraphicsPath object that specifies the path"}]},"_GDIPlus_RegionCreateFromRect":{"documentation":"Creates a region that is defined by a rectangle","label":"_GDIPlus_RegionCreateFromRect ( $nX, $nY, $nWidth, $nHeight )","params":[{"label":"$nX","documentation":"The X coordinate of the upper left corner of the rectangle"},{"label":"$nY","documentation":"The Y coordinate of the upper left corner of the rectangle"},{"label":"$nWidth","documentation":"The width of the rectangle"},{"label":"$nHeight","documentation":"The height of the rectangle"}]},"_GDIPlus_RegionDispose":{"documentation":"Releases a Region object","label":"_GDIPlus_RegionDispose ( $hRegion )","params":[{"label":"$hRegion","documentation":"Pointer to a Region object"}]},"_GDIPlus_RegionGetBounds":{"documentation":"Gets a rectangle that encloses a region","label":"_GDIPlus_RegionGetBounds ( $hRegion, $hGraphics )","params":[{"label":"$hRegion","documentation":"Pointer to a Region object"},{"label":"$hGraphics","documentation":"Pointer to a Graphics object that contains the world and page transformations required to calculate the device coordinates of the region and the rectangle"}]},"_GDIPlus_RegionGetHRgn":{"documentation":"Creates a GDI region from a GDI+ Region object","label":"_GDIPlus_RegionGetHRgn ( $hRegion [, $hGraphics = 0] )","params":[{"label":"$hRegion","documentation":"Pointer to a Region object"},{"label":"$hGraphics","documentation":"**[optional]** Pointer to a Graphics object that contains the world and page transformations required to calculate the device coordinates of the region"}]},"_GDIPlus_RegionTransform":{"documentation":"Tansforms a region by multiplying each of its data points by a specified matrix","label":"_GDIPlus_RegionTransform ( $hRegion, $hMatrix )","params":[{"label":"$hRegion","documentation":"Pointer to a Region object"},{"label":"$hMatrix","documentation":"Pointer to a matrix that specifies the transformation"}]},"_GDIPlus_RegionTranslate":{"documentation":"Offsets a region by specified amounts in the horizontal and vertical directions","label":"_GDIPlus_RegionTranslate ( $hRegion, $nDX, $nDY )","params":[{"label":"$hRegion","documentation":"Pointer to a Region object"},{"label":"$nDX","documentation":"Real number that specifies the amount to shift the region in the X direction"},{"label":"$nDY","documentation":"Real number that specifies the amount to shift the region in the Y direction"}]},"_GDIPlus_Shutdown":{"documentation":"Clean up resources used by Microsoft Windows GDI+","label":"_GDIPlus_Shutdown (  )","params":[]},"_GDIPlus_Startup":{"documentation":"Initialize Microsoft Windows GDI+","label":"_GDIPlus_Startup ( [$sGDIPDLL = Default [, $bRetDllHandle = False]] )","params":[{"label":"$sGDIPDLL","documentation":"**[optional]** the filename of the dll to be used. Default is the installed GDI Dll."},{"label":"$bRetDllHandle","documentation":"**[optional]** True if the handle to opened GDI Dll is to be returned. Default is False."}]},"_GDIPlus_StringFormatCreate":{"documentation":"Create a String Format object","label":"_GDIPlus_StringFormatCreate ( [$iFormat = 0 [, $iLangID = 0]] )","params":[{"label":"$iFormat","documentation":"**[optional]** Format flags. Can be one or more of the following:    0x0001 - Specifies that reading order is right to left    0x0002 - Specifies that individual lines of text are drawn vertically on the display device    0x0004 - Specifies that parts of characters are allowed to overhang the string\'s layout rectangle    0x0020 - Specifies that Unicode layout control characters are displayed with a representative character    0x0400 - Specifies that an alternate font is used for characters that are not supported in the requested font    0x0800 - Specifies that the space at the end of each line is included in a string measurement    0x1000 - Specifies that the wrapping of text to the next line is disabled    0x2000 - Specifies that only entire lines are laid out in the layout rectangle    0x4000 - Specifies that characters overhanging the layout rectangle and text extending outside the layout rectangle are allowed to show"},{"label":"$iLangID","documentation":"**[optional]** The language to use"}]},"_GDIPlus_StringFormatDispose":{"documentation":"Release a String Format object","label":"_GDIPlus_StringFormatDispose ( $hFormat )","params":[{"label":"$hFormat","documentation":"Handle to a String Format object"}]},"_GDIPlus_StringFormatGetMeasurableCharacterRangeCount":{"documentation":"Gets the number of measurable character ranges that are currently set for a StringFormat object","label":"_GDIPlus_StringFormatGetMeasurableCharacterRangeCount ( $hStringFormat )","params":[{"label":"$hStringFormat","documentation":"Pointer to a StringFormat object"}]},"_GDIPlus_StringFormatSetAlign":{"documentation":"Sets the text alignment of a string format object","label":"_GDIPlus_StringFormatSetAlign ( $hStringFormat, $iFlag )","params":[{"label":"$hStringFormat","documentation":"The string format object which is aligned"},{"label":"$iFlag","documentation":"The alignment can be one of the following:    0 - The text is aligned to the left    1 - The text is centered    2 - The text is aligned to the right"}]},"_GDIPlus_StringFormatSetLineAlign":{"documentation":"Sets the line alignment of a StringFormat object in relation to the origin of a layout rectangle","label":"_GDIPlus_StringFormatSetLineAlign ( $hStringFormat, $iStringAlign )","params":[{"label":"$hStringFormat","documentation":"Pointer to a StringFormat object"},{"label":"$iStringAlign","documentation":"Type of line alignment to use:    0 - Alignment is towards the origin of the bounding rectangle    1 - Alignment is centered between origin and the height of the formatting rectangle    2 - Alignment is to the far extent (right side) of the formatting rectangle"}]},"_GDIPlus_StringFormatSetMeasurableCharacterRanges":{"documentation":"Sets a series of character ranges for a StringFormat object that, when in a string, can be measured","label":"_GDIPlus_StringFormatSetMeasurableCharacterRanges ( $hStringFormat, $aRanges )","params":[{"label":"$hStringFormat","documentation":"Pointer to a StringFormat object"},{"label":"$aRanges","documentation":"Array of character ranges:    [0][0] - Number of character ranges    [1][0] - Character range 1 specifying the first position of range 1    [1][1] - Character range 1 specifying the number of positions in range 1    [2][0] - Character range 2 specifying the first position of range 2    [2][1] - Character range 2 specifying the number of positions in range 2    [n][0] - Character range n specifying the first position of range n    [n][1] - Character range n specifying the number of positions in range n"}]},"_GDIPlus_TextureCreate":{"documentation":"Creates a TextureBrush object based on an image and a wrap mode","label":"_GDIPlus_TextureCreate ( $hImage [, $iWrapMode = 0] )","params":[{"label":"$hImage","documentation":"Pointer to an Image object"},{"label":"$iWrapMode","documentation":"**[optional]** Wrap mode that specifies how repeated copies of an image are used to tile an area when it is    0 - Tiling without flipping    1 - Tiles are flipped horizontally as you move from one tile to the next in a row    2 - Tiles are flipped vertically as you move from one tile to the next in a column    3 - Tiles are flipped horizontally as you move along a row and flipped vertically as you move along a column    4 - No tiling takes place"}]},"_GDIPlus_TextureCreate2":{"documentation":"Creates a TextureBrush object based on an image, a wrap mode and a defining rectangle","label":"_GDIPlus_TextureCreate2 ( $hImage, $nX, $nY, $nWidth, $nHeight [, $iWrapMode = 0] )","params":[{"label":"$hImage","documentation":"Pointer to an Image object"},{"label":"$nX","documentation":"Leftmost coordinate of the image portion to be used by this brush"},{"label":"$nY","documentation":"Uppermost coordinate of the image portion to be used by this brush"},{"label":"$nWidth","documentation":"Width of the brush and width of the image portion to be used by the brush"},{"label":"$nHeight","documentation":"Height of the brush and height of the image portion to be used by the brush"},{"label":"$iWrapMode","documentation":"**[optional]** Wrap mode that specifies how repeated copies of an image are used to tile an area when it is    0 - Tiling without flipping    1 - Tiles are flipped horizontally as you move from one tile to the next in a row    2 - Tiles are flipped vertically as you move from one tile to the next in a column    3 - Tiles are flipped horizontally as you move along a row and flipped vertically as you move along a column    4 - No tiling takes place"}]},"_GDIPlus_TextureCreateIA":{"documentation":"Creates a TextureBrush object based on an image, a defining rectangle, and a set of image properties","label":"_GDIPlus_TextureCreateIA ( $hImage, $nX, $nY, $nWidth, $nHeight [, $pImageAttributes = 0] )","params":[{"label":"$hImage","documentation":"Pointer to an image object"},{"label":"$nX","documentation":"Leftmost coordinate of the image portion to be used by this brush"},{"label":"$nY","documentation":"Uppermost coordinate of the image portion to be used by this brush"},{"label":"$nWidth","documentation":"Width of the brush and width of the image portion to be used by the brush"},{"label":"$nHeight","documentation":"Height of the brush and height of the image portion to be used by the brush"},{"label":"$pImageAttributes","documentation":"**[optional]** Pointer to an ImageAttributes object that contains properties of the image"}]},"_GetIP":{"documentation":"Get public IP address of a network/computer","label":"_GetIP (  )","params":[]},"_GUICtrlAVI_Close":{"documentation":"Closes an AVI clip","label":"_GUICtrlAVI_Close ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlAVI_Create":{"documentation":"Creates an AVI control","label":"_GUICtrlAVI_Create ( $hWnd [, $sFilePath = \\"\\" [, $iSubFileID = -1 [, $iX = 0 [, $iY = 0 [, $iWidth = 0 [, $iHeight = 0 [, $iStyle = 0x00000006 [, $iExStyle = 0x00000000]]]]]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$sFilePath","documentation":"**[optional]** The filename of the video. Only .avi files are supported"},{"label":"$iSubFileID","documentation":"**[optional]** id of the subfile to be used."},{"label":"$iX","documentation":"**[optional]** Horizontal position of the control"},{"label":"$iY","documentation":"**[optional]** Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control styles:    $ACS_CENTER - Centers the animation in the animation control\'s window    $ACS_TRANSPARENT - Creates the control with a transparent background    $ACS_AUTOPLAY - Starts playing the animation as soon as the AVI clip is opened    $ACS_TIMER - The control plays the clip without creating a threadDefault: $ACS_TRANSPARENT, $ACS_AUTOPLAYForced: $WS_CHILD, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table."}]},"_GUICtrlAVI_Destroy":{"documentation":"Delete the control","label":"_GUICtrlAVI_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlAVI_IsPlaying":{"documentation":"Checks whether an Audio-Video Interleaved (AVI) clip is playing","label":"_GUICtrlAVI_IsPlaying ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlAVI_Open":{"documentation":"Opens an AVI clip and displays its first frame in an animation control","label":"_GUICtrlAVI_Open ( $hWnd, $sFileName )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFileName","documentation":"Fully qualified path to the AVI file"}]},"_GUICtrlAVI_OpenEx":{"documentation":"Opens an AVI clip and displays its first frame in an animation control","label":"_GUICtrlAVI_OpenEx ( $hWnd, $sFileName, $iResourceID )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFileName","documentation":"Fully qualified path to resource file"},{"label":"$iResourceID","documentation":"AVI resource identifier"}]},"_GUICtrlAVI_Play":{"documentation":"Plays an AVI clip in an animation control","label":"_GUICtrlAVI_Play ( $hWnd [, $iFrom = 0 [, $iTo = -1 [, $iRepeat = -1]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iFrom","documentation":"**[optional]** 0-based index of the frame where playing begins. The value must be less than 65,536.A value of 0 means begin with the first frame in the clip."},{"label":"$iTo","documentation":"**[optional]** 0-based index of the frame where playing ends. The value must be less than 65,536.A value of -1 means end with the last frame in the clip."},{"label":"$iRepeat","documentation":"**[optional]** Number of times to replay the AVI clip. A value of -1 means replay the clip indefinitely."}]},"_GUICtrlAVI_Seek":{"documentation":"Directs an AVI control to display a particular frame of an AVI clip","label":"_GUICtrlAVI_Seek ( $hWnd, $iFrame )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iFrame","documentation":"0-based index of the frame to display"}]},"_GUICtrlAVI_Show":{"documentation":"Show/Hide the AVI control","label":"_GUICtrlAVI_Show ( $hWnd, $iState )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iState","documentation":"State of the AVI, can be the following values:"}]},"_GUICtrlAVI_Stop":{"documentation":"Stops playing an AVI clip","label":"_GUICtrlAVI_Stop ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_Click":{"documentation":"Simulates the user clicking a button","label":"_GUICtrlButton_Click ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_Create":{"documentation":"Creates a Button control","label":"_GUICtrlButton_Create ( $hWnd, $sText, $iX, $iY, $iWidth, $iHeight [, $iStyle = -1 [, $iExStyle = -1]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$sText","documentation":"Text to add to Button"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"Control width"},{"label":"$iHeight","documentation":"Control height"},{"label":"$iStyle","documentation":"**[optional]** Control style:    $BS_AUTO3STATE - Creates a three-state check box in which the state cycles through selected, unavailable, and cleared each time the user selects the check box.    $BS_AUTOCHECKBOX - Creates a check box in which the check state switches between selected and cleared each time the user selects the check box.    $BS_AUTORADIOBUTTON - Same as a radio button, except that when the user selects it, the button automatically highlights itself and removes the selection from any other radio buttons with the same style in the same group.    $BS_FLAT - Specifies that the button is two-dimensional; it does not use the default shading to create a 3-D image.    $BS_GROUPBOX - Creates a rectangle in which other buttons can be grouped. Any text associated with this style is displayed in the rectangle’s upper-left corner.    $BS_PUSHLIKE - Makes a button (such as a check box, three-state check box, or radio button) look and act like a push button. The button looks raised when it isn\'t pushed or checked, and sunken when it is pushed or checked.    $BS_DEFPUSHBUTTON - Creates a push button with a heavy black border. If the button is in a dialog box, the user can select the button by pressing the ENTER key, even when the button does not have the input focus. This style is useful for enabling the user to quickly select the most likely option, or default.    $BS_BOTTOM - Places the text at the bottom of the button rectangle.    $BS_CENTER - Centers the text horizontally in the button rectangle.    $BS_LEFT - Left-aligns the text in the button rectangle on the right side of the check box.    $BS_MULTILINE - Wraps the button text to multiple lines if the text string is too long to fit on a single line in the button rectangle.    $BS_RIGHT - Right-aligns text in the button rectangle on the right side of the check box.    $BS_RIGHTBUTTON - Positions a check box square on the right side of the button rectangle.    $BS_TOP - Places text at the top of the button rectangle.    $BS_VCENTER - Vertically centers text in the button rectangle.    $BS_ICON - Specifies that the button displays an icon.    $BS_BITMAP - Specifies that the button displays a bitmap.    $BS_NOTIFY - Enables a button to send BN_KILLFOCUS and BN_SETFOCUS notification messages to its parent window. Note that buttons send the BN_CLICKED notification message regardless of whether it has this style. To get BN_DBLCLK notification messages, the button must have the BS_RADIOBUTTON or BS_OWNERDRAW style.Vista Sytles:    $BS_SPLITBUTTON - Creates a split button. A split button has a drop down arrow    $BS_DEFSPLITBUTTON - Creates a split button that behaves like a $BS_PUSHBUTTON style button, but also has a distinctive appearance.    $BS_COMMANDLINK - Creates a command link button    $BS_DEFCOMMANDLINK - Creates a command link button that behaves like a $BS_PUSHBUTTON style button.Default: ( -1) : noneForced : $WS_CHILD, $WS_TABSTOP, $WS_VISIBLE, $BS_NOTIFY"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table."}]},"_GUICtrlButton_Destroy":{"documentation":"Delete the Button control","label":"_GUICtrlButton_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_Enable":{"documentation":"Enables or disables mouse and keyboard input to the specified button","label":"_GUICtrlButton_Enable ( $hWnd [, $bEnable = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bEnable","documentation":"**[optional]** Specifies whether to enable or disable the button:    True - The button is enabled    False - The button is disabled"}]},"_GUICtrlButton_GetCheck":{"documentation":"Gets the check state of a radio button or check box","label":"_GUICtrlButton_GetCheck ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetFocus":{"documentation":"Retrieves if the button has keyboard focus","label":"_GUICtrlButton_GetFocus ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetIdealSize":{"documentation":"Gets the size of the button that best fits its text and image, if an image list is present","label":"_GUICtrlButton_GetIdealSize ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetImage":{"documentation":"Retrieves a handle to the image (icon or bitmap) associated with the button","label":"_GUICtrlButton_GetImage ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetImageList":{"documentation":"Retrieves an array that describes the image list assigned to a button control","label":"_GUICtrlButton_GetImageList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetNote":{"documentation":"Gets the text of the note associated with the Command Link button","label":"_GUICtrlButton_GetNote ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetNoteLength":{"documentation":"Gets the length of the note text that may be displayed in the description for a command link button","label":"_GUICtrlButton_GetNoteLength ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetSplitInfo":{"documentation":"Gets information for a split button control","label":"_GUICtrlButton_GetSplitInfo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetState":{"documentation":"Determines the state of a button or check box","label":"_GUICtrlButton_GetState ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetText":{"documentation":"Retrieve the text of the button","label":"_GUICtrlButton_GetText ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_GetTextMargin":{"documentation":"Gets the margins used to draw text in a button control","label":"_GUICtrlButton_GetTextMargin ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlButton_SetCheck":{"documentation":"Sets the check state of a radio button or check box","label":"_GUICtrlButton_SetCheck ( $hWnd [, $iState = $BST_CHECKED] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iState","documentation":"**[optional]** The check state. This parameter can be one of the following values:    $BST_CHECKED - Sets the button state to checked.    $BST_INDETERMINATE - Sets the button state to grayed, indicating an indeterminate state.        Use this value only if the button has the $BS_3STATE or $BS_AUTO3STATE style.    $BST_UNCHECKED - Sets the button state to cleared."}]},"_GUICtrlButton_SetDontClick":{"documentation":"Sets the state of $BST_DONTCLICK flag on a button","label":"_GUICtrlButton_SetDontClick ( $hWnd [, $bState = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bState","documentation":"**[optional]** The state. True to set the $BST_DONTCLICK, otherwise False"}]},"_GUICtrlButton_SetFocus":{"documentation":"Sets the keyboard focus to the specified button","label":"_GUICtrlButton_SetFocus ( $hWnd [, $bFocus = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bFocus","documentation":"**[optional]** This parameter can be one of the following values:    True - Sets the keyboard focus to the button    False - Removes the keyboard focus from the button"}]},"_GUICtrlButton_SetImage":{"documentation":"Sets the image of a button","label":"_GUICtrlButton_SetImage ( $hWnd, $sImageFile [, $iIconID = -1 [, $bLarge = False]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sImageFile","documentation":"File containing the Image"},{"label":"$iIconID","documentation":"**[optional]** Specifies the 0-based index of the icon to extract"},{"label":"$bLarge","documentation":"**[optional]** Extract Large Icon"}]},"_GUICtrlButton_SetImageList":{"documentation":"Assigns an image list to a button control","label":"_GUICtrlButton_SetImageList ( $hWnd, $hImage [, $iAlign = 0 [, $iLeft = 1 [, $iTop = 1 [, $iRight = 1 [, $iBottom = 1]]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hImage","documentation":"A handle to the image list.Should contain either a single image to be used for all states or individual images for each state listed in the following:    1 - Normal    2 - Hot    3 - Pressed    4 - Disabled    5 - Defaulted    6 - Stylus Hot (tablet computers only)"},{"label":"$iAlign","documentation":"**[optional]** Specifies the alignment to use. This parameter can be one of the following values:    0 - Align the image with the left margin.    1 - Align the image with the right margin.    2 - Align the image with the top margin.    3 - Align the image with the bottom margin.    4 - Center the image."},{"label":"$iLeft","documentation":"**[optional]** Left margin of the icon"},{"label":"$iTop","documentation":"**[optional]** Top margin of the icon"},{"label":"$iRight","documentation":"**[optional]** Right margin of the icon"},{"label":"$iBottom","documentation":"**[optional]** Bottom margin of the icon"}]},"_GUICtrlButton_SetNote":{"documentation":"Sets the text of the note associated with a command link button","label":"_GUICtrlButton_SetNote ( $hWnd, $sNote )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sNote","documentation":"String that contains the note"}]},"_GUICtrlButton_SetShield":{"documentation":"Sets the elevation required state for a specified button or command link to display an elevated icon","label":"_GUICtrlButton_SetShield ( $hWnd [, $bRequired = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bRequired","documentation":"**[optional]** True to draw an elevated icon, or False otherwise"}]},"_GUICtrlButton_SetSize":{"documentation":"Sets the size of the button","label":"_GUICtrlButton_SetSize ( $hWnd, $iWidth, $iHeight )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iWidth","documentation":"New width of the button"},{"label":"$iHeight","documentation":"New height of the button"}]},"_GUICtrlButton_SetSplitInfo":{"documentation":"Gets information for a split button control","label":"_GUICtrlButton_SetSplitInfo ( $hWnd [, $hImlGlyph = -1 [, $iSplitStyle = $BCSS_ALIGNLEFT [, $iWidth = 0 [, $iHeight = 0]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hImlGlyph","documentation":"**[optional]** Handle to the image list"},{"label":"$iSplitStyle","documentation":"**[optional]** The split button style. Value must be one or more of the following flags.    $BCSS_ALIGNLEFT - Align the image or glyph horizontally with the left margin    $BCSS_IMAGE - Draw an icon image as the glyph    $BCSS_NOSPLIT - No split    $BCSS_STRETCH - Stretch glyph, but try to retain aspect ratio"},{"label":"$iWidth","documentation":"**[optional]** Width of the glyph"},{"label":"$iHeight","documentation":"**[optional]** Height of the glyph"}]},"_GUICtrlButton_SetState":{"documentation":"Sets the highlight state of a button. The highlight state indicates whether the button is highlighted as if the user had pushed it","label":"_GUICtrlButton_SetState ( $hWnd [, $bHighlighted = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bHighlighted","documentation":"**[optional]** Specifies whether the button is highlighted."}]},"_GUICtrlButton_SetStyle":{"documentation":"Sets the style of a button","label":"_GUICtrlButton_SetStyle ( $hWnd, $iStyle )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iStyle","documentation":"Can be a combination of button styles"}]},"_GUICtrlButton_SetText":{"documentation":"Sets the text of the button","label":"_GUICtrlButton_SetText ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"New text"}]},"_GUICtrlButton_SetTextMargin":{"documentation":"Sets the margins for drawing text in a button control","label":"_GUICtrlButton_SetTextMargin ( $hWnd [, $iLeft = 1 [, $iTop = 1 [, $iRight = 1 [, $iBottom = 1]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iLeft","documentation":"**[optional]** Left margin to use for drawing text"},{"label":"$iTop","documentation":"**[optional]** Top margin to use for drawing text"},{"label":"$iRight","documentation":"**[optional]** Right margin to use for drawing text"},{"label":"$iBottom","documentation":"**[optional]** Bottom margin to use for drawing text"}]},"_GUICtrlButton_Show":{"documentation":"Show/Hide button","label":"_GUICtrlButton_Show ( $hWnd [, $bShow = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bShow","documentation":"**[optional]** One of the following:    True - Show button    False - Hide button"}]},"_GUICtrlComboBoxEx_AddDir":{"documentation":"Adds the names of directories and files","label":"_GUICtrlComboBoxEx_AddDir ( $hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sFilePath","documentation":"Specifies an absolute path, relative path, or filename"},{"label":"$iAttributes","documentation":"**[optional]** Specifies the attributes of the files or directories to be added:    $DDL_READWRITE - Includes read-write files with no additional attributes    $DDL_READONLY - Includes read-only files    $DDL_HIDDEN - Includes hidden files    $DDL_SYSTEM - Includes system files    $DDL_DIRECTORY - Includes subdirectories    $DDL_ARCHIVE - Includes archived files    $DDL_DRIVES - All mapped drives are added to the list    $DDL_EXCLUSIVE - Includes only files with the specified attributes"},{"label":"$bBrackets","documentation":"**[optional]** include/exclude brackets when $DDL_DRIVES is used"}]},"_GUICtrlComboBoxEx_AddString":{"documentation":"Add a string","label":"_GUICtrlComboBoxEx_AddString ( $hWnd, $sText [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Item text. If set to -1, the item set is set via the $CBEN_GETDISPINFO notification message."},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iSelectedImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iOverlayImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iIndent","documentation":"**[optional]** Number of image widths to indent the item. A single indentation equals the width of an image."},{"label":"$iParam","documentation":"**[optional]** Value specific to the item"}]},"_GUICtrlComboBoxEx_BeginUpdate":{"documentation":"Prevents updating of the control until the EndUpdate function is called","label":"_GUICtrlComboBoxEx_BeginUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_Create":{"documentation":"Create a ComboBoxEx control","label":"_GUICtrlComboBoxEx_Create ( $hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 200 [, $iStyle = 0x00200002 [, $iExStyle = 0x00000000]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$sText","documentation":"Delimited text to add to ComboBox"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control style:    $CBS_DROPDOWN - Similar to $CBS_SIMPLE, except that the list box is not displayed unless the user selects an icon next to the edit control    $CBS_DROPDOWNLIST - Similar to $CBS_DROPDOWN, except that the edit control is replaced by a static text item that displays the current selection in the list box    $CBS_SIMPLE - Displays the list box at all timesDefault: $CBS_DROPDOWN, $WS_VSCROLLForced : $WS_CHILD, $WS_TABSTOP, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style:    $CBES_EX_CASESENSITIVE - Searches in the list will be case sensitive    $CBES_EX_NOEDITIMAGE - The edit box and the dropdown list will not display item images    $CBES_EX_NOEDITIMAGEINDENT - The edit box and the dropdown list will not display item images    $CBES_EX_NOSIZELIMIT - Allows the ComboBoxEx control to be vertically sized smaller than its contained combo box control"}]},"_GUICtrlComboBoxEx_CreateSolidBitMap":{"documentation":"Creates a solid color bitmap","label":"_GUICtrlComboBoxEx_CreateSolidBitMap ( $hWnd, $iColor, $iWidth, $iHeight )","params":[{"label":"$hWnd","documentation":"Handle to the window where the bitmap will be displayed"},{"label":"$iColor","documentation":"The color of the bitmap, stated in RGB"},{"label":"$iWidth","documentation":"The width of the bitmap"},{"label":"$iHeight","documentation":"The height of the bitmap"}]},"_GUICtrlComboBoxEx_DeleteString":{"documentation":"Removes an item from a ComboBoxEx control","label":"_GUICtrlComboBoxEx_DeleteString ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the Item to delete"}]},"_GUICtrlComboBoxEx_Destroy":{"documentation":"Delete the control","label":"_GUICtrlComboBoxEx_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_EndUpdate":{"documentation":"Enables screen repainting that was turned off with the BeginUpdate function","label":"_GUICtrlComboBoxEx_EndUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_FindStringExact":{"documentation":"Search for a string","label":"_GUICtrlComboBoxEx_FindStringExact ( $hWnd, $sText [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"String to search for"},{"label":"$iIndex","documentation":"**[optional]** 0-based index of the item preceding the first item to be searched"}]},"_GUICtrlComboBoxEx_GetComboBoxInfo":{"documentation":"Gets information about the specified ComboBox","label":"_GUICtrlComboBoxEx_GetComboBoxInfo ( $hWnd, ByRef $tInfo )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$tInfo","documentation":"The information about the ComboBox."}]},"_GUICtrlComboBoxEx_GetComboControl":{"documentation":"Gets the handle to the child combo box control","label":"_GUICtrlComboBoxEx_GetComboControl ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetCount":{"documentation":"Retrieve the number of items","label":"_GUICtrlComboBoxEx_GetCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetCurSel":{"documentation":"Retrieve the index of the currently selected item","label":"_GUICtrlComboBoxEx_GetCurSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetDroppedControlRect":{"documentation":"Retrieve the screen coordinates of a combo box in its dropped-down state","label":"_GUICtrlComboBoxEx_GetDroppedControlRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetDroppedControlRectEx":{"documentation":"Retrieve the screen coordinates of a combo box in its dropped-down state","label":"_GUICtrlComboBoxEx_GetDroppedControlRectEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetDroppedState":{"documentation":"Determines whether the ListBox of a ComboBox is dropped down","label":"_GUICtrlComboBoxEx_GetDroppedState ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetDroppedWidth":{"documentation":"Retrieve the minimum allowable width, of the ListBox of a ComboBox","label":"_GUICtrlComboBoxEx_GetDroppedWidth ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetEditControl":{"documentation":"Gets the handle to the edit control portion of a ComboBoxEx control","label":"_GUICtrlComboBoxEx_GetEditControl ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetEditSel":{"documentation":"Gets the starting and ending character positions of the current selection in the edit control of a ComboBox","label":"_GUICtrlComboBoxEx_GetEditSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetEditText":{"documentation":"Get the text from the edit control of a ComboBoxEx","label":"_GUICtrlComboBoxEx_GetEditText ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetExtendedStyle":{"documentation":"Gets the extended styles that are in use for a ComboBoxEx control","label":"_GUICtrlComboBoxEx_GetExtendedStyle ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetExtendedUI":{"documentation":"Determines whether a ComboBox has the default user interface or the extended user interface","label":"_GUICtrlComboBoxEx_GetExtendedUI ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetImageList":{"documentation":"Retrieves the handle to an image list assigned to a ComboBoxEx control","label":"_GUICtrlComboBoxEx_GetImageList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetItem":{"documentation":"Retrieves an item\'s attributes","label":"_GUICtrlComboBoxEx_GetItem ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlComboBoxEx_GetItemEx":{"documentation":"Retrieves some or all of an item\'s attributes","label":"_GUICtrlComboBoxEx_GetItemEx ( $hWnd, ByRef $tItem )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$tItem","documentation":"$tagCOMBOBOXEXITEM structure that specifies the information to retrieve"}]},"_GUICtrlComboBoxEx_GetItemHeight":{"documentation":"Determines the height of list items or the selection field in a ComboBox","label":"_GUICtrlComboBoxEx_GetItemHeight ( $hWnd [, $iComponent = -1] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iComponent","documentation":"**[optional]** Use the following values:    –1 - Get the height of the selection field     0 - Get the height of list items"}]},"_GUICtrlComboBoxEx_GetItemImage":{"documentation":"Retrieves the index of the item\'s icon","label":"_GUICtrlComboBoxEx_GetItemImage ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlComboBoxEx_GetItemIndent":{"documentation":"Retrieves the number of image widths the item is indented","label":"_GUICtrlComboBoxEx_GetItemIndent ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlComboBoxEx_GetItemOverlayImage":{"documentation":"Retrieves the index of the item\'s overlay image icon","label":"_GUICtrlComboBoxEx_GetItemOverlayImage ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlComboBoxEx_GetItemParam":{"documentation":"Retrieves the application specific value of the item","label":"_GUICtrlComboBoxEx_GetItemParam ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlComboBoxEx_GetItemSelectedImage":{"documentation":"Retrieves the index of the item\'s selected image icon","label":"_GUICtrlComboBoxEx_GetItemSelectedImage ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlComboBoxEx_GetItemText":{"documentation":"Retrieve a string from the list of a ComboBox","label":"_GUICtrlComboBoxEx_GetItemText ( $hWnd, $iIndex, ByRef $sText )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index to Retrieve from"},{"label":"$sText","documentation":"Variable that will receive the string"}]},"_GUICtrlComboBoxEx_GetItemTextLen":{"documentation":"Gets the length, in characters, of a string in the list of a combo box","label":"_GUICtrlComboBoxEx_GetItemTextLen ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"index item"}]},"_GUICtrlComboBoxEx_GetList":{"documentation":"Retrieves all items from the list portion of a ComboBox control","label":"_GUICtrlComboBoxEx_GetList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetListArray":{"documentation":"Retrieves all items from the list portion of a ComboBox control","label":"_GUICtrlComboBoxEx_GetListArray ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetLocale":{"documentation":"Retrieves the current locale","label":"_GUICtrlComboBoxEx_GetLocale ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetLocaleCountry":{"documentation":"Retrieves the current country code","label":"_GUICtrlComboBoxEx_GetLocaleCountry ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetLocaleLang":{"documentation":"Retrieves the current language identifier","label":"_GUICtrlComboBoxEx_GetLocaleLang ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetLocalePrimLang":{"documentation":"Extract primary language id from a language id","label":"_GUICtrlComboBoxEx_GetLocalePrimLang ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetLocaleSubLang":{"documentation":"Extract sublanguage id from a language id","label":"_GUICtrlComboBoxEx_GetLocaleSubLang ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetMinVisible":{"documentation":"Retrieve the minimum number of visible items in the drop-down list of a ComboBox","label":"_GUICtrlComboBoxEx_GetMinVisible ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetTopIndex":{"documentation":"Retrieve the 0-based index of the first visible item in the ListBox portion of a ComboBox","label":"_GUICtrlComboBoxEx_GetTopIndex ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_GetUnicode":{"documentation":"Retrieves if control is using Unicode","label":"_GUICtrlComboBoxEx_GetUnicode ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_InitStorage":{"documentation":"Allocates memory for storing ListBox items","label":"_GUICtrlComboBoxEx_InitStorage ( $hWnd, $iNum, $iBytes )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iNum","documentation":"Number of items to add"},{"label":"$iBytes","documentation":"The amount of memory to allocate for item strings, in bytes"}]},"_GUICtrlComboBoxEx_InsertString":{"documentation":"Inserts a new item in the control","label":"_GUICtrlComboBoxEx_InsertString ( $hWnd, $sText [, $iIndex = -1 [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Item text. If set to -1, the item set is set via the $CBEN_GETDISPINFO notification message."},{"label":"$iIndex","documentation":"**[optional]** 0-based index at which the new string should be inserted.To insert an item at the end of the list, set the $iIndex member to -1"},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iSelectedImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iOverlayImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iIndent","documentation":"**[optional]** Number of image widths to indent the item. A single indentation equals the width of an image."},{"label":"$iParam","documentation":"**[optional]** Value specific to the item"}]},"_GUICtrlComboBoxEx_LimitText":{"documentation":"Limits the length of the text the user may type into the edit control of a ComboBox","label":"_GUICtrlComboBoxEx_LimitText ( $hWnd [, $iLimit = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iLimit","documentation":"**[optional]** Limit length of the text"}]},"_GUICtrlComboBoxEx_ReplaceEditSel":{"documentation":"Replace text selected in edit box","label":"_GUICtrlComboBoxEx_ReplaceEditSel ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"String containing the replacement text"}]},"_GUICtrlComboBoxEx_ResetContent":{"documentation":"Removes all items","label":"_GUICtrlComboBoxEx_ResetContent ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlComboBoxEx_SetCurSel":{"documentation":"Select a string in the list of a ComboBox","label":"_GUICtrlComboBoxEx_SetCurSel ( $hWnd [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based index of the string to select"}]},"_GUICtrlComboBoxEx_SetDroppedWidth":{"documentation":"Set the maximum allowable width, in pixels, of the ListBox of a ComboBox","label":"_GUICtrlComboBoxEx_SetDroppedWidth ( $hWnd, $iWidth )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iWidth","documentation":"The width of the ListBox, in pixels"}]},"_GUICtrlComboBoxEx_SetEditSel":{"documentation":"Select characters in the edit control of a ComboBox","label":"_GUICtrlComboBoxEx_SetEditSel ( $hWnd, $iStart, $iStop )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iStart","documentation":"Starting position"},{"label":"$iStop","documentation":"Ending postions"}]},"_GUICtrlComboBoxEx_SetEditText":{"documentation":"Set the text of the edit control of the ComboBox","label":"_GUICtrlComboBoxEx_SetEditText ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Text to be set"}]},"_GUICtrlComboBoxEx_SetExtendedStyle":{"documentation":"Sets extended styles within a ComboBoxEx control","label":"_GUICtrlComboBoxEx_SetExtendedStyle ( $hWnd, $iExStyle [, $iExMask = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iExStyle","documentation":"Extended control styles:    $CBES_EX_CASESENSITIVE - Searches in the list will be case sensitive    $CBES_EX_NOEDITIMAGE - The edit box and the dropdown list will not display item images    $CBES_EX_NOEDITIMAGEINDENT - The edit box and the dropdown list will not display item images    $CBES_EX_NOSIZELIMIT - Allows the ComboBoxEx control to be vertically sized smaller than its contained combo box control"},{"label":"$iExMask","documentation":"**[optional]** Specifies which styles in $iExStyle are to be affected.This parameter can be a combination of extended styles.Only the extended styles in $iExMask will be changed.All other styles will be maintained as they are.If this parameter is zero, all of the styles in $iExStyle will be affected."}]},"_GUICtrlComboBoxEx_SetExtendedUI":{"documentation":"Select either the default user interface or the extended user interface","label":"_GUICtrlComboBoxEx_SetExtendedUI ( $hWnd [, $bExtended = False] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bExtended","documentation":"**[optional]** Specifies whether the combo box uses the extended"}]},"_GUICtrlComboBoxEx_SetImageList":{"documentation":"Sets an image list for a ComboBoxEx control","label":"_GUICtrlComboBoxEx_SetImageList ( $hWnd, $hHandle )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$hHandle","documentation":"A handle to the image list to be set for the control"}]},"_GUICtrlComboBoxEx_SetItem":{"documentation":"Sets some or all of a item\'s attributes","label":"_GUICtrlComboBoxEx_SetItem ( $hWnd, $sText [, $iIndex = 0 [, $iImage = -1 [, $iSelectedImage = -1 [, $iOverlayImage = -1 [, $iIndent = -1 [, $iParam = -1]]]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Item text. See remark."},{"label":"$iIndex","documentation":"**[optional]** The 0-based index of the item"},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iSelectedImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iOverlayImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iIndent","documentation":"**[optional]** Number of image widths to indent the item. A single indentation equals the width of an image."},{"label":"$iParam","documentation":"**[optional]** Value specific to the item"}]},"_GUICtrlComboBoxEx_SetItemEx":{"documentation":"Sets some or all of a item\'s attributes","label":"_GUICtrlComboBoxEx_SetItemEx ( $hWnd, ByRef $tItem )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$tItem","documentation":"$tagCOMBOBOXEXITEM structure"}]},"_GUICtrlComboBoxEx_SetItemHeight":{"documentation":"Set the height of list items or the selection field in a ComboBox","label":"_GUICtrlComboBoxEx_SetItemHeight ( $hWnd, $iComponent, $iHeight )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iComponent","documentation":"Use the following values:    –1 - Set the height of the selection field     0 - Set the height of list items"},{"label":"$iHeight","documentation":"The height, in pixels, of the combo box component identified by $iComponent"}]},"_GUICtrlComboBoxEx_SetItemImage":{"documentation":"Sets the index of the item\'s icon in the control\'s image list","label":"_GUICtrlComboBoxEx_SetItemImage ( $hWnd, $iIndex, $iImage )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iImage","documentation":"0-based index into the control\'s image list"}]},"_GUICtrlComboBoxEx_SetItemIndent":{"documentation":"Sets the number of image widths to indent the item","label":"_GUICtrlComboBoxEx_SetItemIndent ( $hWnd, $iIndex, $iIndent )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iIndent","documentation":"Indention value"}]},"_GUICtrlComboBoxEx_SetItemOverlayImage":{"documentation":"Sets the index of the item\'s overlay icon in the control\'s image list","label":"_GUICtrlComboBoxEx_SetItemOverlayImage ( $hWnd, $iIndex, $iImage )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iImage","documentation":"0-based index into the control\'s image list"}]},"_GUICtrlComboBoxEx_SetItemParam":{"documentation":"Sets the value specific to the item","label":"_GUICtrlComboBoxEx_SetItemParam ( $hWnd, $iIndex, $iParam )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iParam","documentation":"Item specific value"}]},"_GUICtrlComboBoxEx_SetItemSelectedImage":{"documentation":"Sets the index of the item\'s overlay icon in the control\'s image list","label":"_GUICtrlComboBoxEx_SetItemSelectedImage ( $hWnd, $iIndex, $iImage )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iImage","documentation":"0-based index into the control\'s image list"}]},"_GUICtrlComboBoxEx_SetMinVisible":{"documentation":"Set the minimum number of visible items in the drop-down list of a ComboBox","label":"_GUICtrlComboBoxEx_SetMinVisible ( $hWnd, $iMinimum )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iMinimum","documentation":"Specifies the minimum number of visible items"}]},"_GUICtrlComboBoxEx_SetTopIndex":{"documentation":"Ensure that a particular item is visible in the ListBox of a ComboBox","label":"_GUICtrlComboBoxEx_SetTopIndex ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the list item"}]},"_GUICtrlComboBoxEx_SetUnicode":{"documentation":"Sets if control is using Unicode","label":"_GUICtrlComboBoxEx_SetUnicode ( $hWnd [, $bUnicode = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bUnicode","documentation":"**[optional]** May be one of the following:    True - Turn on Unicode    False - Turn off Unicode"}]},"_GUICtrlComboBoxEx_ShowDropDown":{"documentation":"Show or hide the ListBox of a ComboBox","label":"_GUICtrlComboBoxEx_ShowDropDown ( $hWnd [, $bShow = False] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bShow","documentation":"**[optional]** Specifies whether the drop-down ListBox is to be shown or hidden:    True - Show ListBox    False - Hide ListBox"}]},"_GUICtrlComboBox_AddDir":{"documentation":"Adds the names of directories and files","label":"_GUICtrlComboBox_AddDir ( $hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFilePath","documentation":"Specifies an absolute path, relative path, or filename"},{"label":"$iAttributes","documentation":"**[optional]** Specifies the attributes of the files or directories to be added:    $DDL_READWRITE - Includes read-write files with no additional attributes    $DDL_READONLY - Includes read-only files    $DDL_HIDDEN - Includes hidden files    $DDL_SYSTEM - Includes system files    $DDL_DIRECTORY - Includes directories    $DDL_ARCHIVE - Includes archived files    $DDL_DRIVES - All mapped drives are added to the list    $DDL_EXCLUSIVE - Includes only files with the specified attributes"},{"label":"$bBrackets","documentation":"**[optional]** include/exclude brackets when $DDL_DRIVES is used"}]},"_GUICtrlComboBox_AddString":{"documentation":"Add a string","label":"_GUICtrlComboBox_AddString ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String to add"}]},"_GUICtrlComboBox_AutoComplete":{"documentation":"AutoComplete a ComboBox edit control","label":"_GUICtrlComboBox_AutoComplete ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_BeginUpdate":{"documentation":"Prevents updating of the control until the EndUpdate function is called","label":"_GUICtrlComboBox_BeginUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_Create":{"documentation":"Create a ComboBox control","label":"_GUICtrlComboBox_Create ( $hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 120 [, $iStyle = 0x00200042 [, $iExStyle = 0x00000000]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$sText","documentation":"Delimited string to add to the combobox"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control style:    $CBS_AUTOHSCROLL - Automatically scrolls the text in an edit control to the right when the user types a character at the end of the line.    $CBS_DISABLENOSCROLL - Shows a disabled vertical scroll bar    $CBS_DROPDOWN - Similar to $CBS_SIMPLE, except that the list box is not displayed unless the user selects an icon next to the edit control    $CBS_DROPDOWNLIST - Similar to $CBS_DROPDOWN, except that the edit control is replaced by a static text item that displays the current selection in the list box    $CBS_LOWERCASE - Converts to lowercase all text in both the selection field and the list    $CBS_NOINTEGRALHEIGHT - Specifies that the size of the combo box is exactly the size specified by the application when it created the combo box    $CBS_OEMCONVERT - Converts text entered in the combo box edit control from the Windows character set to the OEM character set and then back to the Windows character set    $CBS_OWNERDRAWFIXED - Specifies that the owner of the list box is responsible for drawing its contents and that the items in the list box are all the same height    $CBS_OWNERDRAWVARIABLE - Specifies that the owner of the list box is responsible for drawing its contents and that the items in the list box are variable in height    $CBS_SIMPLE - Displays the list box at all times    $CBS_SORT - Automatically sorts strings added to the list box    $CBS_UPPERCASE - Converts to uppercase all text in both the selection field and the listDefault: $CBS_DROPDOWN, $CBS_AUTOHSCROLL, $WS_VSCROLLForced : $WS_CHILD, $WS_TABSTOP, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table."}]},"_GUICtrlComboBox_DeleteString":{"documentation":"Delete a string","label":"_GUICtrlComboBox_DeleteString ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of string"}]},"_GUICtrlComboBox_Destroy":{"documentation":"Delete the control","label":"_GUICtrlComboBox_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_EndUpdate":{"documentation":"Enables screen repainting that was turned off with the BeginUpdate function","label":"_GUICtrlComboBox_EndUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_FindString":{"documentation":"Search for a string","label":"_GUICtrlComboBox_FindString ( $hWnd, $sText [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String to search for"},{"label":"$iIndex","documentation":"**[optional]** 0-based index of the item preceding the first item to be searched"}]},"_GUICtrlComboBox_FindStringExact":{"documentation":"Search for a string","label":"_GUICtrlComboBox_FindStringExact ( $hWnd, $sText [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String to search for"},{"label":"$iIndex","documentation":"**[optional]** 0-based index of the item preceding the first item to be searched"}]},"_GUICtrlComboBox_GetComboBoxInfo":{"documentation":"Gets information about the specified ComboBox","label":"_GUICtrlComboBox_GetComboBoxInfo ( $hWnd, ByRef $tInfo )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$tInfo","documentation":"infos as defined by $tagCOMBOBOXINFO"}]},"_GUICtrlComboBox_GetCount":{"documentation":"Retrieve the number of items","label":"_GUICtrlComboBox_GetCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetCueBanner":{"documentation":"Gets the cue banner text displayed in the edit control of a combo box","label":"_GUICtrlComboBox_GetCueBanner ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetCurSel":{"documentation":"Retrieve the index of the currently selected item","label":"_GUICtrlComboBox_GetCurSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetDroppedControlRect":{"documentation":"Retrieve the screen coordinates of a combo box in its dropped-down state","label":"_GUICtrlComboBox_GetDroppedControlRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetDroppedControlRectEx":{"documentation":"Retrieve the screen coordinates of a combo box in its dropped-down state","label":"_GUICtrlComboBox_GetDroppedControlRectEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetDroppedState":{"documentation":"Determines whether the ListBox of a ComboBox is dropped down","label":"_GUICtrlComboBox_GetDroppedState ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetDroppedWidth":{"documentation":"Retrieve the minimum allowable width, of the ListBox of a ComboBox","label":"_GUICtrlComboBox_GetDroppedWidth ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetEditSel":{"documentation":"Gets the starting and ending character positions of the current selection in the edit control of a ComboBox","label":"_GUICtrlComboBox_GetEditSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetEditText":{"documentation":"Get the text from the edit control of a ComboBox","label":"_GUICtrlComboBox_GetEditText ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetExtendedUI":{"documentation":"Determines whether a ComboBox has the default user interface or the extended user interface","label":"_GUICtrlComboBox_GetExtendedUI ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetHorizontalExtent":{"documentation":"Gets the width, in pixels, that the ListBox of a ComboBox control can be scrolled horizontally","label":"_GUICtrlComboBox_GetHorizontalExtent ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetItemHeight":{"documentation":"Determines the height of list items or the selection field in a ComboBox","label":"_GUICtrlComboBox_GetItemHeight ( $hWnd [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"**[optional]** Determines which height to get:    –1 - Retrieve the height of the selection field     0 - Retrieve the height of list items"}]},"_GUICtrlComboBox_GetLBText":{"documentation":"Retrieve a string from the list of a ComboBox","label":"_GUICtrlComboBox_GetLBText ( $hWnd, $iIndex, ByRef $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index to Retrieve from"},{"label":"$sText","documentation":"Variable that will receive the string"}]},"_GUICtrlComboBox_GetLBTextLen":{"documentation":"Gets the length, in characters, of a string in the list of a combo box","label":"_GUICtrlComboBox_GetLBTextLen ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"index of the required entry"}]},"_GUICtrlComboBox_GetList":{"documentation":"Retrieves all items from the list portion of a ComboBox control","label":"_GUICtrlComboBox_GetList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetListArray":{"documentation":"Retrieves all items from the list portion of a ComboBox control","label":"_GUICtrlComboBox_GetListArray ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetLocale":{"documentation":"Retrieves the current locale","label":"_GUICtrlComboBox_GetLocale ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetLocaleCountry":{"documentation":"Retrieves the current country code","label":"_GUICtrlComboBox_GetLocaleCountry ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetLocaleLang":{"documentation":"Retrieves the current language identifier","label":"_GUICtrlComboBox_GetLocaleLang ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetLocalePrimLang":{"documentation":"Extract primary language id from a language id","label":"_GUICtrlComboBox_GetLocalePrimLang ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetLocaleSubLang":{"documentation":"Extract sublanguage id from a language id","label":"_GUICtrlComboBox_GetLocaleSubLang ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetMinVisible":{"documentation":"Retrieve the minimum number of visible items in the drop-down list of a ComboBox","label":"_GUICtrlComboBox_GetMinVisible ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_GetTopIndex":{"documentation":"Retrieve the 0-based index of the first visible item in the ListBox portion of a ComboBox","label":"_GUICtrlComboBox_GetTopIndex ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_InitStorage":{"documentation":"Allocates memory for storing ListBox items","label":"_GUICtrlComboBox_InitStorage ( $hWnd, $iNum, $iBytes )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iNum","documentation":"Number of items to add"},{"label":"$iBytes","documentation":"The amount of memory to allocate for item strings, in bytes"}]},"_GUICtrlComboBox_InsertString":{"documentation":"Insert a string","label":"_GUICtrlComboBox_InsertString ( $hWnd, $sText [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Text string to be inserted"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based index of the position at which to insert the string."}]},"_GUICtrlComboBox_LimitText":{"documentation":"Limits the length of the text the user may type into the edit control of a ComboBox","label":"_GUICtrlComboBox_LimitText ( $hWnd [, $iLimit = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iLimit","documentation":"**[optional]** limit length of the text"}]},"_GUICtrlComboBox_ReplaceEditSel":{"documentation":"Replace text selected in edit box","label":"_GUICtrlComboBox_ReplaceEditSel ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String containing the replacement text"}]},"_GUICtrlComboBox_ResetContent":{"documentation":"Remove all items from the ListBox and edit control of a ComboBox","label":"_GUICtrlComboBox_ResetContent ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlComboBox_SelectString":{"documentation":"Searches the ListBox of a ComboBox for an item that begins with the characters in a specified string","label":"_GUICtrlComboBox_SelectString ( $hWnd, $sText [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String that contains the characters for which to search"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based index of the item preceding the first item to be searched"}]},"_GUICtrlComboBox_SetCueBanner":{"documentation":"Sets the cue banner text that is displayed for the edit control of a combo box","label":"_GUICtrlComboBox_SetCueBanner ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String that contains the text"}]},"_GUICtrlComboBox_SetCurSel":{"documentation":"Select a string in the list of a ComboBox","label":"_GUICtrlComboBox_SetCurSel ( $hWnd [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based index of the string to select"}]},"_GUICtrlComboBox_SetDroppedWidth":{"documentation":"Set the maximum allowable width, in pixels, of the ListBox of a ComboBox","label":"_GUICtrlComboBox_SetDroppedWidth ( $hWnd, $iWidth )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iWidth","documentation":"The width of the ListBox, in pixels"}]},"_GUICtrlComboBox_SetEditSel":{"documentation":"Select characters in the edit control of a ComboBox","label":"_GUICtrlComboBox_SetEditSel ( $hWnd, $iStart, $iStop )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iStart","documentation":"Starting position"},{"label":"$iStop","documentation":"Ending postions"}]},"_GUICtrlComboBox_SetEditText":{"documentation":"Set the text of the edit control of the ComboBox","label":"_GUICtrlComboBox_SetEditText ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Text to be set"}]},"_GUICtrlComboBox_SetExtendedUI":{"documentation":"Select either the default user interface or the extended user interface","label":"_GUICtrlComboBox_SetExtendedUI ( $hWnd [, $bExtended = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bExtended","documentation":"**[optional]** Specifies whether the combo box uses the extended"}]},"_GUICtrlComboBox_SetHorizontalExtent":{"documentation":"Set the width, in pixels, by which a list box can be scrolled horizontally","label":"_GUICtrlComboBox_SetHorizontalExtent ( $hWnd, $iWidth )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iWidth","documentation":"Specifies the scrollable width of the list box, in pixels"}]},"_GUICtrlComboBox_SetItemHeight":{"documentation":"Set the height of list items or the selection field in a ComboBox","label":"_GUICtrlComboBox_SetItemHeight ( $hWnd, $iHeight [, $iComponent = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iHeight","documentation":"The height, in pixels, of the combo box component identified by $iComponent"},{"label":"$iComponent","documentation":"**[optional]** Use the following values:    –1 - Set the height of the selection field     0 - Set the height of list items"}]},"_GUICtrlComboBox_SetMinVisible":{"documentation":"Set the minimum number of visible items in the drop-down list of a ComboBox","label":"_GUICtrlComboBox_SetMinVisible ( $hWnd, $iMinimum )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMinimum","documentation":"Specifies the minimum number of visible items"}]},"_GUICtrlComboBox_SetTopIndex":{"documentation":"Ensure that a particular item is visible in the ListBox of a ComboBox","label":"_GUICtrlComboBox_SetTopIndex ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the list item"}]},"_GUICtrlComboBox_ShowDropDown":{"documentation":"Show or hide the ListBox of a ComboBox","label":"_GUICtrlComboBox_ShowDropDown ( $hWnd [, $bShow = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bShow","documentation":"**[optional]** Specifies whether the drop-down ListBox is to be shown or hidden:    True - Show ListBox    False - Hide ListBox"}]},"_GUICtrlDTP_Create":{"documentation":"Create a DTP control","label":"_GUICtrlDTP_Create ( $hWnd, $iX, $iY [, $iWidth = 120 [, $iHeight = 21 [, $iStyle = 0x00000000 [, $iExStyle = 0x00000000]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control styles:    $DTS_APPCANPARSE - Allows the owner to parse user input and take action    $DTS_LONGDATEFORMAT - Displays the date in long format    $DTS_RIGHTALIGN - The calendar will be right-aligned    $DTS_SHOWNONE - Displays a check box that can be checked once a date is entered    $DTS_SHORTDATEFORMAT - Displays the date in short format    $DTS_SHORTDATECENTURYFORMAT - The year is a four-digit field    $DTS_TIMEFORMAT - Displays the time    $DTS_UPDOWN - Places an up-down control to the right of the controlForced: $WS_CHILD, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table."}]},"_GUICtrlDTP_Destroy":{"documentation":"Delete the control","label":"_GUICtrlDTP_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlDTP_GetMCColor":{"documentation":"Retrieves the specified color","label":"_GUICtrlDTP_GetMCColor ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"Indicates which month calendar color to retrieve:    0 - Background color displayed between months    1 - Color used to display text within a month    2 - Background color displayed in the calendar title    3 - Color used to display text within the calendar title    4 - Background color displayed within the month    5 - Color used to display header day and trailing day text"}]},"_GUICtrlDTP_GetMCFont":{"documentation":"Retrieves the month calendar font handle","label":"_GUICtrlDTP_GetMCFont ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlDTP_GetMonthCal":{"documentation":"Retrieves the handle to child month calendar control","label":"_GUICtrlDTP_GetMonthCal ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlDTP_GetRange":{"documentation":"Retrieves the current minimum and maximum allowable system times","label":"_GUICtrlDTP_GetRange ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlDTP_GetRangeEx":{"documentation":"Retrieves the current minimum and maximum allowable system times","label":"_GUICtrlDTP_GetRangeEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlDTP_GetSystemTime":{"documentation":"Retrieves the currently selected date and time","label":"_GUICtrlDTP_GetSystemTime ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlDTP_GetSystemTimeEx":{"documentation":"Retrieves the currently selected date and time","label":"_GUICtrlDTP_GetSystemTimeEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlDTP_SetFormat":{"documentation":"Sets the display based on a given format string","label":"_GUICtrlDTP_SetFormat ( $hWnd, $sFormat )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sFormat","documentation":"String that defines the desired format. Setting this to blank will reset the control to the default format string for the current style. You can use the following format strings:    \\"d\\" - The one or two digit day    \\"dd\\" - The two digit day. Single digit day values are preceded by a zero    \\"ddd\\" - The three character weekday abbreviation    \\"dddd\\" - The full weekday name    \\"h\\" - The one or two digit hour in 12-hour format    \\"hh\\" - The two digit hour in 12-hour format    \\"H\\" - The one or two digit hour in 24-hour format    \\"HH\\" - The two digit hour in 24 hour format    \\"m\\" - The one or two digit minute    \\"mm\\" - The two digit minute    \\"M\\" - The one or two digit month number    \\"MM\\" - The two digit month number    \\"MMM\\" - The three-character month abbreviation    \\"MMMM\\" - The full month name    \\"t\\" - The one letter AM/PM abbreviation    \\"tt\\" - The two letter AM/PM abbreviation    \\"yy\\" - The last two digits of the year    \\"yyyy\\" - The full year"}]},"_GUICtrlDTP_SetMCColor":{"documentation":"Sets the color for a given portion of the month calendar","label":"_GUICtrlDTP_SetMCColor ( $hWnd, $iIndex, $iColor )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"Indicates which month calendar color to set:    0 - Background color displayed between months    1 - Color used to display text within a month    2 - Background color displayed in the calendar title    3 - Color used to display text within the calendar title    4 - Background color displayed within the month    5 - Color used to display header day and trailing day text"},{"label":"$iColor","documentation":"The color that will be set for the specified area"}]},"_GUICtrlDTP_SetMCFont":{"documentation":"Sets the month calendar font","label":"_GUICtrlDTP_SetMCFont ( $hWnd, $hFont [, $bRedraw = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$hFont","documentation":"Handle to the font that will be set"},{"label":"$bRedraw","documentation":"**[optional]** Specifies whether the control should be redrawn immediately"}]},"_GUICtrlDTP_SetRange":{"documentation":"Sets the current minimum and maximum allowable system times","label":"_GUICtrlDTP_SetRange ( $hWnd, ByRef $aRange )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$aRange","documentation":"Array formatted as follows:    [ 0] - True if Min data is to be set, otherwise False    [ 1] - Min Year    [ 2] - Min Month    [ 3] - Min Day    [ 4] - Min Hour    [ 5] - Min Minute    [ 6] - Min Second    [ 7] - True if Max data is to be set, otherwise False    [ 8] - Max Year    [ 9] - Max Month    [10] - Max Day    [11] - Max Hour    [12] - Max Minute    [13] - Max Second"}]},"_GUICtrlDTP_SetRangeEx":{"documentation":"Sets the current minimum and maximum allowable system times","label":"_GUICtrlDTP_SetRangeEx ( $hWnd, ByRef $tRange )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$tRange","documentation":"$tagDTPRANGE structure"}]},"_GUICtrlDTP_SetSystemTime":{"documentation":"Sets the currently selected date and time","label":"_GUICtrlDTP_SetSystemTime ( $hWnd, ByRef $aDate )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$aDate","documentation":"Array formatted as follows:    [0] - If True, the control will is set to \\"no date\\"    [1] - Year    [2] - Month    [3] - Day    [4] - Hour    [5] - Minute    [6] - Second"}]},"_GUICtrlDTP_SetSystemTimeEx":{"documentation":"Sets the currently selected date and time","label":"_GUICtrlDTP_SetSystemTimeEx ( $hWnd, ByRef $tDate [, $bFlag = False] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$tDate","documentation":"$tagSYSTEMTIME structure"},{"label":"$bFlag","documentation":"**[optional]** No date setting:    True - Control will be set to \\"no date\\"    False - Control is set to date and time value"}]},"_GUICtrlEdit_AppendText":{"documentation":"Append text","label":"_GUICtrlEdit_AppendText ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String to append"}]},"_GUICtrlEdit_BeginUpdate":{"documentation":"Prevents updating of the control until the _GUICtrlEdit_EndUpdate function is called","label":"_GUICtrlEdit_BeginUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_CanUndo":{"documentation":"Determines whether there are any actions in an edit control\'s undo queue","label":"_GUICtrlEdit_CanUndo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_CharFromPos":{"documentation":"Retrieve information about the character closest to a specified point in the client area","label":"_GUICtrlEdit_CharFromPos ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"horizontal position"},{"label":"$iY","documentation":"vertical position"}]},"_GUICtrlEdit_Create":{"documentation":"Create an Edit control","label":"_GUICtrlEdit_Create ( $hWnd, $sText, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x003010C4 [, $iExStyle = 0x00000200]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$sText","documentation":"Text to be displayed in the control"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control styles:    $ES_AUTOHSCROLL - Automatically scrolls text to the right by 10 characters when the user types a character at the end of the line.    $ES_AUTOVSCROLL - Automatically scrolls text up one page when the user presses the ENTER key on the last line.    $ES_CENTER - Centers text in an edit control.    $ES_LEFT - Aligns text with the left margin.    $ES_LOWERCASE - Converts all characters to lowercase as they are typed into the edit control.    $ES_MULTILINE - Designates a multiline edit control.    $ES_NOHIDESEL - The selected text is inverted, even if the control does not have the focus.    $ES_NUMBER - Allows only digits to be entered into the edit control.    $ES_OEMCONVERT - Converts text entered in the edit control.    $ES_READONLY - Prevents the user from typing or editing text in the edit control.    $ES_RIGHT - Right-aligns text edit control.    $ES_UPPERCASE - Converts all characters to uppercase as they are typed into the edit control.    $ES_WANTRETURN - Specifies that a carriage return be inserted when the user presses the ENTER key.    $ES_PASSWORD - Displays an asterisk (*) for each character that is typed into the edit controlDefault: $ES_MULTILINE, $ES_WANTRETURN, $WS_VSCROLL, $WS_HSCROLL, $ES_AUTOVSCROLL, $ES_AUTOHSCROLLForced : WS_CHILD, $WS_VISIBLE, $WS_TABSTOP only if not using $ES_READONLY"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table."}]},"_GUICtrlEdit_Destroy":{"documentation":"Delete the Edit control","label":"_GUICtrlEdit_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_EmptyUndoBuffer":{"documentation":"Resets the undo flag of an edit control","label":"_GUICtrlEdit_EmptyUndoBuffer ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_EndUpdate":{"documentation":"Enables screen repainting that was turned off with the _GUICtrlEdit_BeginUpdate function","label":"_GUICtrlEdit_EndUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_Find":{"documentation":"Initiates a find dialog","label":"_GUICtrlEdit_Find ( $hWnd [, $bReplace = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bReplace","documentation":"**[optional]** Replace Option:    True - Show option    False - Hide option"}]},"_GUICtrlEdit_FmtLines":{"documentation":"Determines whether an edit control includes soft line-break characters","label":"_GUICtrlEdit_FmtLines ( $hWnd [, $bSoftBreak = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bSoftBreak","documentation":"**[optional]** Specifies whether soft line-break characters are to be inserted:    True - Inserts the characters    False - Removes them"}]},"_GUICtrlEdit_GetCueBanner":{"documentation":"Gets the cue banner text displayed in the edit control","label":"_GUICtrlEdit_GetCueBanner ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetFirstVisibleLine":{"documentation":"Retrieves the 0-based index of the uppermost visible line in a multiline edit control","label":"_GUICtrlEdit_GetFirstVisibleLine ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetLimitText":{"documentation":"Gets the current text limit for an edit control","label":"_GUICtrlEdit_GetLimitText ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetLine":{"documentation":"Retrieves a line of text from an edit control","label":"_GUICtrlEdit_GetLine ( $hWnd, $iLine )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iLine","documentation":"0-based line index to get"}]},"_GUICtrlEdit_GetLineCount":{"documentation":"Retrieves the number of lines","label":"_GUICtrlEdit_GetLineCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetMargins":{"documentation":"Retrieves the widths of the left and right margins","label":"_GUICtrlEdit_GetMargins ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetModify":{"documentation":"Retrieves the state of an edit control\'s modification flag","label":"_GUICtrlEdit_GetModify ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetPasswordChar":{"documentation":"Gets the password character that an edit control displays when the user enters text","label":"_GUICtrlEdit_GetPasswordChar ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetRECT":{"documentation":"Retrieves the formatting rectangle of an edit control","label":"_GUICtrlEdit_GetRECT ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetRECTEx":{"documentation":"Retrieves the formatting rectangle of an edit control","label":"_GUICtrlEdit_GetRECTEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetSel":{"documentation":"Retrieves the starting and ending character positions of the current selection","label":"_GUICtrlEdit_GetSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetText":{"documentation":"Get the text from the edit control","label":"_GUICtrlEdit_GetText ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_GetTextLen":{"documentation":"Get the length of all the text from the edit control","label":"_GUICtrlEdit_GetTextLen ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_HideBalloonTip":{"documentation":"Hides any balloon tip associated with an edit control","label":"_GUICtrlEdit_HideBalloonTip ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlEdit_InsertText":{"documentation":"Insert text","label":"_GUICtrlEdit_InsertText ( $hWnd, $sText [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String to insert"},{"label":"$iIndex","documentation":"**[optional]** Character position to insert"}]},"_GUICtrlEdit_LineFromChar":{"documentation":"Retrieves the index of the line that contains the specified character index","label":"_GUICtrlEdit_LineFromChar ( $hWnd [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"**[optional]** The character index of the character contained in the line whose number is to be retrieved"}]},"_GUICtrlEdit_LineIndex":{"documentation":"Retrieves the character index of the first character of a specified line","label":"_GUICtrlEdit_LineIndex ( $hWnd [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based line number"}]},"_GUICtrlEdit_LineLength":{"documentation":"Retrieves the length, in characters, of a line","label":"_GUICtrlEdit_LineLength ( $hWnd [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based line index of the line whose length is to be retrieved"}]},"_GUICtrlEdit_LineScroll":{"documentation":"Scrolls the text","label":"_GUICtrlEdit_LineScroll ( $hWnd, $iHoriz, $iVert )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iHoriz","documentation":"Specifies the number of characters to scroll horizontally."},{"label":"$iVert","documentation":"Specifies the number of lines to scroll vertically."}]},"_GUICtrlEdit_PosFromChar":{"documentation":"Retrieves the client area coordinates of a specified character in an edit control","label":"_GUICtrlEdit_PosFromChar ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"The 0-based index of the character"}]},"_GUICtrlEdit_ReplaceSel":{"documentation":"Replaces the current selection","label":"_GUICtrlEdit_ReplaceSel ( $hWnd, $sText [, $bUndo = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String containing the replacement text."},{"label":"$bUndo","documentation":"**[optional]** Specifies whether the replacement operation can be undone:    True - The operation can be undone.    False - The operation cannot be undone."}]},"_GUICtrlEdit_Scroll":{"documentation":"Scrolls the text vertically","label":"_GUICtrlEdit_Scroll ( $hWnd, $iDirection )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iDirection","documentation":"This parameter can be one of the following values:    $SB_LINEDOWN - Scrolls down one line    $SB_LINEUP - Scrolls up one line    $SB_PAGEDOWN - Scrolls down one page    $SB_PAGEUP - Scrolls up one page    $SB_SCROLLCARET - Scrolls the caret into view"}]},"_GUICtrlEdit_SetCueBanner":{"documentation":"Sets the cue banner text that is displayed for the edit control","label":"_GUICtrlEdit_SetCueBanner ( $hWnd, $sText [, $bOnFocus = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String that contains the text"},{"label":"$bOnFocus","documentation":"**[optional]** True - if the cue banner should show even when the edit control has focus.False (Default) - the cue banner disappears when the user clicks in the control."}]},"_GUICtrlEdit_SetLimitText":{"documentation":"Sets the text limit","label":"_GUICtrlEdit_SetLimitText ( $hWnd, $iLimit )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iLimit","documentation":"The maximum number of TCHARs the user can enter"}]},"_GUICtrlEdit_SetMargins":{"documentation":"Sets the widths of the left and right margins","label":"_GUICtrlEdit_SetMargins ( $hWnd [, $iMargin = 0x1 [, $iLeft = 0xFFFF [, $iRight = 0xFFFF]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMargin","documentation":"**[optional]** Can be one or more of the following    $EC_LEFTMARGIN - Sets the left margin    $EC_RIGHTMARGIN - Sets the right marginDefault: $EC_LEFTMARGIN"},{"label":"$iLeft","documentation":"**[optional]** The new width of the left marginDefault: $EC_USEFONTINFO"},{"label":"$iRight","documentation":"**[optional]** The new width of the right marginDefault: $EC_USEFONTINFO"}]},"_GUICtrlEdit_SetModify":{"documentation":"Sets or clears the modification flag","label":"_GUICtrlEdit_SetModify ( $hWnd, $bModified )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bModified","documentation":"Specifies the new value for the modification flag:    True - Indicates the text has been modified.    False - Indicates it has not been modified."}]},"_GUICtrlEdit_SetPasswordChar":{"documentation":"Sets or removes the password character for an edit control","label":"_GUICtrlEdit_SetPasswordChar ( $hWnd [, $sDisplayChar = \\"0\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sDisplayChar","documentation":"**[optional]** The character to be displayed in place of the characters typed by the userIf this parameter is zero, the control removes the current password character and displays the characters typed by the user"}]},"_GUICtrlEdit_SetReadOnly":{"documentation":"Sets or removes the read-only style ($ES_READONLY)","label":"_GUICtrlEdit_SetReadOnly ( $hWnd, $bReadOnly )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bReadOnly","documentation":"Following values:    True - Sets the $ES_READONLY style    False - Removes the $ES_READONLY style"}]},"_GUICtrlEdit_SetRECT":{"documentation":"Sets the formatting rectangle of a multiline edit control","label":"_GUICtrlEdit_SetRECT ( $hWnd, $aRect )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$aRect","documentation":"Array in the following format:[0] - Specifies the x-coordinate of the upper-left corner of the rectangle.[1] - Specifies the y-coordinate of the upper-left corner of the rectangle.[2] - Specifies the x-coordinate of the lower-right corner of the rectangle.[3] - Specifies the y-coordinate of the lower-right corner of the rectangle."}]},"_GUICtrlEdit_SetRECTEx":{"documentation":"Sets the formatting rectangle of a multiline edit control","label":"_GUICtrlEdit_SetRECTEx ( $hWnd, $tRECT )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$tRECT","documentation":"$tagRECT structure that contains formatting rectangle of an edit control"}]},"_GUICtrlEdit_SetRECTNP":{"documentation":"Sets the formatting rectangle of a multiline edit control","label":"_GUICtrlEdit_SetRECTNP ( $hWnd, $aRect )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$aRect","documentation":"Array in the following format:[0] - Specifies the x-coordinate of the upper-left corner of the rectangle.[1] - Specifies the y-coordinate of the upper-left corner of the rectangle.[2] - Specifies the x-coordinate of the lower-right corner of the rectangle.[3] - Specifies the y-coordinate of the lower-right corner of the rectangle."}]},"_GUICtrlEdit_SetRectNPEx":{"documentation":"Sets the formatting rectangle of a multiline edit control","label":"_GUICtrlEdit_SetRectNPEx ( $hWnd, $tRECT )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$tRECT","documentation":"$tagRECT structure that contains formatting rectangle of an edit control"}]},"_GUICtrlEdit_SetSel":{"documentation":"Selects a range of characters","label":"_GUICtrlEdit_SetSel ( $hWnd, $iStart, $iEnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iStart","documentation":"Specifies the starting character position of the selection."},{"label":"$iEnd","documentation":"Specifies the ending character position of the selection."}]},"_GUICtrlEdit_SetTabStops":{"documentation":"Sets the tab stops","label":"_GUICtrlEdit_SetTabStops ( $hWnd, $aTabStops )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$aTabStops","documentation":"Array of tab stops in the following format:[0] - Tab stop 1[2] - Tab stop 2[n] - Tab stop n"}]},"_GUICtrlEdit_SetText":{"documentation":"Set the text","label":"_GUICtrlEdit_SetText ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String to place in edit control"}]},"_GUICtrlEdit_ShowBalloonTip":{"documentation":"Displays a balloon tip associated with an edit control","label":"_GUICtrlEdit_ShowBalloonTip ( $hWnd, $sTitle, $sText, $iIcon )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sTitle","documentation":"String for title of ToolTip (Unicode)"},{"label":"$sText","documentation":"String for text of ToolTip (Unicode)"},{"label":"$iIcon","documentation":"Icon can be one of the following:    $TTI_ERROR - Use the error icon    $TTI_INFO - Use the information icon    $TTI_NONE - Use no icon    $TTI_WARNING - Use the warning iconThe following for Windows Vista or later    $TTI_ERROR_LARGE - Use the error icon    $TTI_INFO_LARGE - Use the information icon    $TTI_WARNING_LARGE - Use the warning icon"}]},"_GUICtrlEdit_Undo":{"documentation":"Undoes the last edit control operation in the control\'s undo queue","label":"_GUICtrlEdit_Undo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlHeader_AddItem":{"documentation":"Adds a new header item","label":"_GUICtrlHeader_AddItem ( $hWnd, $sText [, $iWidth = 50 [, $iAlign = 0 [, $iImage = -1 [, $bOnRight = False]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Item text"},{"label":"$iWidth","documentation":"**[optional]** Item width"},{"label":"$iAlign","documentation":"**[optional]** Text alignment:    0 - Text is left-aligned    1 - Text is right-aligned    2 - Text is centered"},{"label":"$iImage","documentation":"**[optional]** 0-based index of an image within the image list"},{"label":"$bOnRight","documentation":"**[optional]** If True, the column image appears to the right of text"}]},"_GUICtrlHeader_ClearFilter":{"documentation":"Clears the filter","label":"_GUICtrlHeader_ClearFilter ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_ClearFilterAll":{"documentation":"Clears all of the filters","label":"_GUICtrlHeader_ClearFilterAll ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlHeader_Create":{"documentation":"Creates a Header control","label":"_GUICtrlHeader_Create ( $hWnd [, $iStyle = 0x00000046] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$iStyle","documentation":"**[optional]** Control styles"}]},"_GUICtrlHeader_CreateDragImage":{"documentation":"Creates a semi-transparent version of an item\'s image for use as a dragging image","label":"_GUICtrlHeader_CreateDragImage ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index. The image assigned to the item is the basis for the transparent image."}]},"_GUICtrlHeader_DeleteItem":{"documentation":"Deletes a header item","label":"_GUICtrlHeader_DeleteItem ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_Destroy":{"documentation":"Delete the Header control","label":"_GUICtrlHeader_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlHeader_EditFilter":{"documentation":"Starts editing the specified filter","label":"_GUICtrlHeader_EditFilter ( $hWnd, $iIndex [, $bDiscard = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$bDiscard","documentation":"**[optional]** Flag that specifies how to handle the user\'s editing changes. Use this flag to specify what to do if the user is in the process of editing the filter when the message is sent:    True - Discard the changes made by the user    False - Accept the changes made by the user"}]},"_GUICtrlHeader_GetBitmapMargin":{"documentation":"Retrieves the width of the bitmap margin","label":"_GUICtrlHeader_GetBitmapMargin ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlHeader_GetImageList":{"documentation":"Retrieves the handle to the image list","label":"_GUICtrlHeader_GetImageList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlHeader_GetItem":{"documentation":"Retrieves information about an item","label":"_GUICtrlHeader_GetItem ( $hWnd, $iIndex, ByRef $tItem )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$tItem","documentation":"$tagHDITEM structure"}]},"_GUICtrlHeader_GetItemAlign":{"documentation":"Retrieves the item text alignment","label":"_GUICtrlHeader_GetItemAlign ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemBitmap":{"documentation":"Retrieves the item bitmap handle","label":"_GUICtrlHeader_GetItemBitmap ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemCount":{"documentation":"Retrieves a count of the items","label":"_GUICtrlHeader_GetItemCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlHeader_GetItemDisplay":{"documentation":"Returns the item display information","label":"_GUICtrlHeader_GetItemDisplay ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemFlags":{"documentation":"Returns the item flag information","label":"_GUICtrlHeader_GetItemFlags ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemFormat":{"documentation":"Returns the format of the item","label":"_GUICtrlHeader_GetItemFormat ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemImage":{"documentation":"Retrieves the index of an image within the image list","label":"_GUICtrlHeader_GetItemImage ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemOrder":{"documentation":"Retrieves the order in which the item appears","label":"_GUICtrlHeader_GetItemOrder ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemParam":{"documentation":"Retrieves the param value of the item","label":"_GUICtrlHeader_GetItemParam ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemRect":{"documentation":"Retrieves the bounding rectangle for a given item","label":"_GUICtrlHeader_GetItemRect ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemRectEx":{"documentation":"Retrieves the bounding rectangle for a given item","label":"_GUICtrlHeader_GetItemRectEx ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemText":{"documentation":"Retrieves the item text","label":"_GUICtrlHeader_GetItemText ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetItemWidth":{"documentation":"Retrieves the item\'s width","label":"_GUICtrlHeader_GetItemWidth ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlHeader_GetOrderArray":{"documentation":"Retrieves the current left-to-right order of items in a header control","label":"_GUICtrlHeader_GetOrderArray ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlHeader_GetUnicodeFormat":{"documentation":"Retrieves the Unicode character format flag for the control","label":"_GUICtrlHeader_GetUnicodeFormat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlHeader_HitTest":{"documentation":"Tests a point to determine which item is at the specified point","label":"_GUICtrlHeader_HitTest ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iX","documentation":"X position to test"},{"label":"$iY","documentation":"Y position to text"}]},"_GUICtrlHeader_InsertItem":{"documentation":"Inserts a new header item","label":"_GUICtrlHeader_InsertItem ( $hWnd, $iIndex, $sText [, $iWidth = 50 [, $iAlign = 0 [, $iImage = -1 [, $bOnRight = False]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"Index of the item after which the new item is to be inserted.The new item is inserted at the end of the control if index is greater than or equal to the number of items in the control.If index is zero, the new item is inserted at the beginning of the control."},{"label":"$sText","documentation":"Item text. See remark."},{"label":"$iWidth","documentation":"**[optional]** Item width"},{"label":"$iAlign","documentation":"**[optional]** Text alignment:    0 - Text is left-aligned    1 - Text is right-aligned    2 - Text is centered"},{"label":"$iImage","documentation":"**[optional]** 0-based index of an image within the image list"},{"label":"$bOnRight","documentation":"**[optional]** If True, the column image appears to the right of text"}]},"_GUICtrlHeader_Layout":{"documentation":"Retrieves the correct size and position of the control","label":"_GUICtrlHeader_Layout ( $hWnd, ByRef $tRECT )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$tRECT","documentation":"$tagRECT structure that contains the rectangle the control will occupy."}]},"_GUICtrlHeader_OrderToIndex":{"documentation":"Retrieves an index value for an item based on its order","label":"_GUICtrlHeader_OrderToIndex ( $hWnd, $iOrder )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iOrder","documentation":"Order in which the item appears within the header control, from left to right"}]},"_GUICtrlHeader_SetBitmapMargin":{"documentation":"Sets the width of the margin, specified in pixels, of a bitmap","label":"_GUICtrlHeader_SetBitmapMargin ( $hWnd, $iWidth )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iWidth","documentation":"Width, specified in pixels, of the bitmap margin"}]},"_GUICtrlHeader_SetFilterChangeTimeout":{"documentation":"Sets the filter change timeout interval","label":"_GUICtrlHeader_SetFilterChangeTimeout ( $hWnd, $iTimeOut )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iTimeOut","documentation":"Timeout value, in milliseconds"}]},"_GUICtrlHeader_SetHotDivider":{"documentation":"Changes the hot divider color","label":"_GUICtrlHeader_SetHotDivider ( $hWnd, $iFlag, $iInputValue )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iFlag","documentation":"Value specifying the type of value represented by $iInputValue.This value can be one of the following:    True - Indicates that $iInputValue holds the client coordinates of the pointer    False - Indicates that $iInputValue holds a divider index value"},{"label":"$iInputValue","documentation":"Value interpreted by $iFlag"}]},"_GUICtrlHeader_SetImageList":{"documentation":"Assigns an image list","label":"_GUICtrlHeader_SetImageList ( $hWnd, $hImage )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$hImage","documentation":"Handle to an image list"}]},"_GUICtrlHeader_SetItem":{"documentation":"Sets information about an item","label":"_GUICtrlHeader_SetItem ( $hWnd, $iIndex, ByRef $tItem )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$tItem","documentation":"DllStructCreate($tagHDITEM) structure"}]},"_GUICtrlHeader_SetItemAlign":{"documentation":"Sets the item text alignment","label":"_GUICtrlHeader_SetItemAlign ( $hWnd, $iIndex, $iAlign )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iAlign","documentation":"Text alignment:    0 - Text is left-aligned    1 - Text is right-aligned    2 - Text is centered"}]},"_GUICtrlHeader_SetItemBitmap":{"documentation":"Sets the item bitmap handle","label":"_GUICtrlHeader_SetItemBitmap ( $hWnd, $iIndex, $hBitmap )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$hBitmap","documentation":"Item bitmap handle"}]},"_GUICtrlHeader_SetItemDisplay":{"documentation":"Returns the item display information","label":"_GUICtrlHeader_SetItemDisplay ( $hWnd, $iIndex, $iDisplay )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iDisplay","documentation":"Item display information. Can be a combination of the following:    1 - The item displays a bitmap    2 - The bitmap appears to the right of text    4 - The control\'s owner draws the item    8 - The item displays a string"}]},"_GUICtrlHeader_SetItemFlags":{"documentation":"Returns the item flag information","label":"_GUICtrlHeader_SetItemFlags ( $hWnd, $iIndex, $iFlags )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iFlags","documentation":"Item flag information. Can be a combination of the following:    1 - Displays an image from an image list    2 - Text reads in the opposite direction from the text in the parent window    4 - Draws a down arrow on this item    8 - Draws a up arrow on this item"}]},"_GUICtrlHeader_SetItemFormat":{"documentation":"Sets the format of the item","label":"_GUICtrlHeader_SetItemFormat ( $hWnd, $iIndex, $iFormat )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iFormat","documentation":"Combination of the following format identifiers:    $HDF_CENTER - The item\'s contents are centered    $HDF_LEFT - The item\'s contents are left-aligned    $HDF_RIGHT - The item\'s contents are right-aligned    $HDF_BITMAP - The item displays a bitmap    $HDF_BITMAP_ON_RIGHT - The bitmap appears to the right of text    $HDF_OWNERDRAW - The header control\'s owner draws the item    $HDF_STRING - The item displays a string    $HDF_IMAGE - Display an image from an image list    $HDF_RTLREADING - Text will read in the opposite direction from the text in the parent window    $HDF_SORTDOWN - Draws a down-arrow on this item    $HDF_SORTUP - Draws an up-arrow on this item"}]},"_GUICtrlHeader_SetItemImage":{"documentation":"Sets the index of an image within the image list","label":"_GUICtrlHeader_SetItemImage ( $hWnd, $iIndex, $iImage )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iImage","documentation":"0-based image index"}]},"_GUICtrlHeader_SetItemOrder":{"documentation":"Sets the order in which the item appears","label":"_GUICtrlHeader_SetItemOrder ( $hWnd, $iIndex, $iOrder )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iOrder","documentation":"0-based item order"}]},"_GUICtrlHeader_SetItemParam":{"documentation":"Sets the param value of the item","label":"_GUICtrlHeader_SetItemParam ( $hWnd, $iIndex, $iParam )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iParam","documentation":"Item param value"}]},"_GUICtrlHeader_SetItemText":{"documentation":"Sets the item text","label":"_GUICtrlHeader_SetItemText ( $hWnd, $iIndex, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$sText","documentation":"New item text. See remark."}]},"_GUICtrlHeader_SetItemWidth":{"documentation":"Sets the item\'s width","label":"_GUICtrlHeader_SetItemWidth ( $hWnd, $iIndex, $iWidth )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iWidth","documentation":"New width for item"}]},"_GUICtrlHeader_SetOrderArray":{"documentation":"Sets the current left-to-right order of items","label":"_GUICtrlHeader_SetOrderArray ( $hWnd, ByRef $aOrder )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$aOrder","documentation":"Array that specifies the index values for items in the header:    [0] - Number of items in array    [1] - Item index 1    [2] - Item index 2    [n] - Item index n"}]},"_GUICtrlHeader_SetUnicodeFormat":{"documentation":"Sets the Unicode character format flag for the control","label":"_GUICtrlHeader_SetUnicodeFormat ( $hWnd, $bUnicode )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bUnicode","documentation":"Unicode flag:    True - Control uses Unicode characters    False - Control uses ANSI characters"}]},"_GUICtrlIpAddress_ClearAddress":{"documentation":"Clears the contents of the IP address control","label":"_GUICtrlIpAddress_ClearAddress ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlIpAddress_Create":{"documentation":"Create a GUI IP Address Control","label":"_GUICtrlIpAddress_Create ( $hWnd, $iX, $iY [, $iWidth = 125 [, $iHeight = 25 [, $iStyles = 0x00000000 [, $iExstyles = 0x00000000]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyles","documentation":"**[optional]** Control styles:Forced : $WS_CHILD, $WS_VISIBLE, $WS_TABSTOP"},{"label":"$iExStyles","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table."}]},"_GUICtrlIpAddress_Destroy":{"documentation":"Delete the IP Address control","label":"_GUICtrlIpAddress_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlIpAddress_Get":{"documentation":"Retrieves the address from the IP address control","label":"_GUICtrlIpAddress_Get ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlIpAddress_GetArray":{"documentation":"Retrieves the address from the IP address control","label":"_GUICtrlIpAddress_GetArray ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlIpAddress_GetEx":{"documentation":"Retrieves the address from the IP address control","label":"_GUICtrlIpAddress_GetEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlIpAddress_IsBlank":{"documentation":"Determines if all fields in the IP address control are blank","label":"_GUICtrlIpAddress_IsBlank ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlIpAddress_Set":{"documentation":"Sets the address in the IP address control","label":"_GUICtrlIpAddress_Set ( $hWnd, $sAddress )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sAddress","documentation":"IP Address string"}]},"_GUICtrlIpAddress_SetArray":{"documentation":"Sets the address in the IP address control","label":"_GUICtrlIpAddress_SetArray ( $hWnd, $aAddress )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$aAddress","documentation":"Array formatted as follows:[0] - 1st address field[1] - 2nd address field[2] - 3rd address field[3] - 4th address field"}]},"_GUICtrlIpAddress_SetEx":{"documentation":"Sets the address in the IP address control","label":"_GUICtrlIpAddress_SetEx ( $hWnd, $tIP )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$tIP","documentation":"$tagGetIPAddress structure containing new ip address for the control"}]},"_GUICtrlIpAddress_SetFocus":{"documentation":"Sets the keyboard focus to the specified field in the IP address control","label":"_GUICtrlIpAddress_SetFocus ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based field index to which the focus should be set.If this value is greater than the number of fields, focus is set to the first blank field.If all fields are nonblank, focus is set to the first field."}]},"_GUICtrlIpAddress_SetFont":{"documentation":"Set font of the control","label":"_GUICtrlIpAddress_SetFont ( $hWnd [, $sFaceName = \\"Arial\\" [, $iFontSize = 12 [, $iFontWeight = 400 [, $bFontItalic = False]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sFaceName","documentation":"**[optional]** The Font Name of the font to use"},{"label":"$iFontSize","documentation":"**[optional]** The Font Size"},{"label":"$iFontWeight","documentation":"**[optional]** The Font Weight"},{"label":"$bFontItalic","documentation":"**[optional]** Use Italic Attribute"}]},"_GUICtrlIpAddress_SetRange":{"documentation":"Sets the valid range for the specified field in the IP address control","label":"_GUICtrlIpAddress_SetRange ( $hWnd, $iIndex [, $iLowRange = 0 [, $iHighRange = 255]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based field index to which the range will be applied"},{"label":"$iLowRange","documentation":"**[optional]** Lower limit of the range"},{"label":"$iHighRange","documentation":"**[optional]** Upper limit of the range"}]},"_GUICtrlIpAddress_ShowHide":{"documentation":"Shows/Hides the IP address control","label":"_GUICtrlIpAddress_ShowHide ( $hWnd, $iState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iState","documentation":"State of the IP Address control, can be the following values:"}]},"_GUICtrlListBox_AddFile":{"documentation":"Adds the specified filename that contains a directory listing","label":"_GUICtrlListBox_AddFile ( $hWnd, $sFilePath )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFilePath","documentation":"Name of the file to add"}]},"_GUICtrlListBox_AddString":{"documentation":"Add a string","label":"_GUICtrlListBox_AddString ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String that is to be added"}]},"_GUICtrlListBox_BeginUpdate":{"documentation":"Prevents updating of the control until the EndUpdate function is called","label":"_GUICtrlListBox_BeginUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_ClickItem":{"documentation":"Clicks an item","label":"_GUICtrlListBox_ClickItem ( $hWnd, $iIndex [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 0]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"},{"label":"$sButton","documentation":"**[optional]** Button to click with"},{"label":"$bMove","documentation":"**[optional]** If True, the mouse will be moved. If False, the mouse does not move."},{"label":"$iClicks","documentation":"**[optional]** Number of clicks"},{"label":"$iSpeed","documentation":"**[optional]** Mouse movement speed"}]},"_GUICtrlListBox_Create":{"documentation":"Create a Listbox control","label":"_GUICtrlListBox_Create ( $hWnd, $sText, $iX, $iY [, $iWidth = 100 [, $iHeight = 200 [, $iStyle = 0x00B00002 [, $iExStyle = 0x00000200]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$sText","documentation":"String to add to the combobox"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control style:    $LBS_COMBOBOX - Notifies a list box that it is part of a combo box    $LBS_DISABLENOSCROLL - Shows a disabled vertical scroll bar    $LBS_EXTENDEDSEL - Allows multiple items to be selected    $LBS_HASSTRINGS - Specifies that a list box contains items consisting of strings    $LBS_MULTICOLUMN - Specifies a multi columnn list box that will be scrolled horizontally    $LBS_MULTIPLESEL - Turns string selection on or off each time the user clicks a string    $LBS_NODATA - Specifies a no-data list box    $LBS_NOINTEGRALHEIGHT - Specifies that the size is exactly the size set by the application    $LBS_NOREDRAW - Specifies that the list box\'s appearance is not updated when changes are made    $LBS_NOSEL - Specifies that the list box contains items that can be viewed but not selected    $LBS_NOTIFY - Notifies whenever the user clicks or double clicks a string    $LBS_OWNERDRAWFIXED - Specifies that the list box is owner drawn    $LBS_OWNERDRAWVARIABLE - Specifies that the list box is owner drawn with variable height    $LBS_SORT - Sorts strings in the list box alphabetically    $LBS_STANDARD - Standard list box style    $LBS_USETABSTOPS - Enables a list box to recognize and expand tab characters    $LBS_WANTKEYBOARDINPUT - Specifies that the owner receives WM_VKEYTOITEM messagesDefault: $LBS_SORT, $WS_HSCROLL, $WS_VSCROLL, $WS_BORDERForced : $WS_CHILD, $WS_TABSTOP, $WS_VISIBLE, $LBS_NOTIFY"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table.Default: $WS_EX_CLIENTEDGE"}]},"_GUICtrlListBox_DeleteString":{"documentation":"Delete a string","label":"_GUICtrlListBox_DeleteString ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the string to be deleted"}]},"_GUICtrlListBox_Destroy":{"documentation":"Delete the control","label":"_GUICtrlListBox_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_Dir":{"documentation":"Adds the names of directories and files","label":"_GUICtrlListBox_Dir ( $hWnd, $sFilePath [, $iAttributes = 0 [, $bBrackets = True]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFilePath","documentation":"Specifies an absolute path, relative path, or filename"},{"label":"$iAttributes","documentation":"**[optional]** Specifies the attributes of the files or directories to be added:    $DDL_READWRITE - Includes read-write files with no additional attributes    $DDL_READONLY - Includes read-only files    $DDL_HIDDEN - Includes hidden files    $DDL_SYSTEM - Includes system files    $DDL_DIRECTORY - Includes subdirectories    $DDL_ARCHIVE - Includes archived files    $DDL_DRIVES - All mapped drives are added to the list    $DDL_EXCLUSIVE - Includes only files with the specified attributes"},{"label":"$bBrackets","documentation":"**[optional]** include/exclude brackets when $DDL_DRIVES is used"}]},"_GUICtrlListBox_EndUpdate":{"documentation":"Enables screen repainting that was turned off with the BeginUpdate function","label":"_GUICtrlListBox_EndUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_FindInText":{"documentation":"Searches for an item that contains the specified text anywhere in its text","label":"_GUICtrlListBox_FindInText ( $hWnd, $sText [, $iStart = -1 [, $bWrapOK = True]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Text to match"},{"label":"$iStart","documentation":"**[optional]** 0-based index of the item to begin the search with or -1 to start from the beginning.The specified item is itself excluded from the search."},{"label":"$bWrapOK","documentation":"**[optional]** If True, the search will continue with the first item if no match is found"}]},"_GUICtrlListBox_FindString":{"documentation":"Search for a string","label":"_GUICtrlListBox_FindString ( $hWnd, $sText [, $bExact = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String to search for"},{"label":"$bExact","documentation":"**[optional]** Exact match or not"}]},"_GUICtrlListBox_GetAnchorIndex":{"documentation":"Retrieves the index of the anchor item","label":"_GUICtrlListBox_GetAnchorIndex ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetCaretIndex":{"documentation":"Return index of item that has the focus rectangle","label":"_GUICtrlListBox_GetCaretIndex ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetCount":{"documentation":"Retrieves the number of items","label":"_GUICtrlListBox_GetCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetCurSel":{"documentation":"Retrieve the index of the currently selected item","label":"_GUICtrlListBox_GetCurSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetHorizontalExtent":{"documentation":"Retrieve from a list box the the scrollable width","label":"_GUICtrlListBox_GetHorizontalExtent ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetItemData":{"documentation":"Retrieves the application defined value associated with an item","label":"_GUICtrlListBox_GetItemData ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"}]},"_GUICtrlListBox_GetItemHeight":{"documentation":"Retrieves the height of items","label":"_GUICtrlListBox_GetItemHeight ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetItemRect":{"documentation":"Retrieves the rectangle that bounds an item","label":"_GUICtrlListBox_GetItemRect ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"}]},"_GUICtrlListBox_GetItemRectEx":{"documentation":"Retrieves the rectangle that bounds an item","label":"_GUICtrlListBox_GetItemRectEx ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"}]},"_GUICtrlListBox_GetListBoxInfo":{"documentation":"Retrieve the number of items per column in a specified list box","label":"_GUICtrlListBox_GetListBoxInfo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetLocale":{"documentation":"Retrieves the current locale","label":"_GUICtrlListBox_GetLocale ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetLocaleCountry":{"documentation":"Retrieves the current country code","label":"_GUICtrlListBox_GetLocaleCountry ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetLocaleLang":{"documentation":"Retrieves the current language identifier","label":"_GUICtrlListBox_GetLocaleLang ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetLocalePrimLang":{"documentation":"Extract primary language id from a language id","label":"_GUICtrlListBox_GetLocalePrimLang ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetLocaleSubLang":{"documentation":"Extract sublanguage id from a language id","label":"_GUICtrlListBox_GetLocaleSubLang ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetSel":{"documentation":"Retrieves the selection state of an item","label":"_GUICtrlListBox_GetSel ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"}]},"_GUICtrlListBox_GetSelCount":{"documentation":"Retrieves the total number of selected items","label":"_GUICtrlListBox_GetSelCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetSelItems":{"documentation":"Fills a buffer with an array of selected items","label":"_GUICtrlListBox_GetSelItems ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetSelItemsText":{"documentation":"Retrieves the text of selected items","label":"_GUICtrlListBox_GetSelItemsText ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_GetText":{"documentation":"Returns the item (string) at the specified index","label":"_GUICtrlListBox_GetText ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the string to retrieve"}]},"_GUICtrlListBox_GetTextLen":{"documentation":"Gets the length of a string in a list box","label":"_GUICtrlListBox_GetTextLen ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"}]},"_GUICtrlListBox_GetTopIndex":{"documentation":"Retrieve the index of the first visible item in a list","label":"_GUICtrlListBox_GetTopIndex ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_InitStorage":{"documentation":"This message allocates memory for storing items","label":"_GUICtrlListBox_InitStorage ( $hWnd, $iItems, $iBytes )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iItems","documentation":"The total amount of items that you intend to add"},{"label":"$iBytes","documentation":"The total amount of memory your strings will consume"}]},"_GUICtrlListBox_InsertString":{"documentation":"Insert a string into the list","label":"_GUICtrlListBox_InsertString ( $hWnd, $sText [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Text string to be inserted"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based index of the position at which to insert the string.If this parameter is -1 the string is added to the end of the list."}]},"_GUICtrlListBox_ItemFromPoint":{"documentation":"Retrieves the 0-based index of the item nearest the specified point","label":"_GUICtrlListBox_ItemFromPoint ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"X coordinate, relative to the upper-left corner of the client area"},{"label":"$iY","documentation":"Y coordinate, relative to the upper-left corner of the client area"}]},"_GUICtrlListBox_ReplaceString":{"documentation":"Replaces the text of an item","label":"_GUICtrlListBox_ReplaceString ( $hWnd, $iIndex, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"},{"label":"$sText","documentation":"String to replace old string"}]},"_GUICtrlListBox_ResetContent":{"documentation":"Remove all items from the list box","label":"_GUICtrlListBox_ResetContent ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_SelectString":{"documentation":"Searchs for an item that begins with the specified string","label":"_GUICtrlListBox_SelectString ( $hWnd, $sText [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"String that contains the string for which to search."},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based index of the item before the first item to be searched.When the search reaches the bottom of the list box, it continues searching from the top of the list box back to the item specified by $iIndex.If $iIndex is –1, the entire list box is searched from the beginning."}]},"_GUICtrlListBox_SelItemRange":{"documentation":"Select one or more consecutive items in a multiple-selection list box","label":"_GUICtrlListBox_SelItemRange ( $hWnd, $iFirst, $iLast [, $bSelect = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iFirst","documentation":"0-based index of the first item to select"},{"label":"$iLast","documentation":"0-based index of the last item to select"},{"label":"$bSelect","documentation":"**[optional]** Specifies how to set the selection.If this parameter is True, the string is selected and highlighted.If it is False, the highlight is removed and the string is no longer selected."}]},"_GUICtrlListBox_SelItemRangeEx":{"documentation":"Select one or more consecutive items in a multiple-selection list box","label":"_GUICtrlListBox_SelItemRangeEx ( $hWnd, $iFirst, $iLast )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iFirst","documentation":"0-based index of the first item to select"},{"label":"$iLast","documentation":"0-based index of the last item to select"}]},"_GUICtrlListBox_SetAnchorIndex":{"documentation":"Set the anchor item—that is, the item from which a multiple selection starts","label":"_GUICtrlListBox_SetAnchorIndex ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"}]},"_GUICtrlListBox_SetCaretIndex":{"documentation":"Set the focus rectangle to the item at the specified index in a multiple-selection list box","label":"_GUICtrlListBox_SetCaretIndex ( $hWnd, $iIndex [, $bPartial = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"},{"label":"$bPartial","documentation":"**[optional]** If False, the item is scrolled until it is fully visible.If it is True, the item is scrolled until it is at least partially visible."}]},"_GUICtrlListBox_SetColumnWidth":{"documentation":"Set the width, in pixels, of all columns","label":"_GUICtrlListBox_SetColumnWidth ( $hWnd, $iWidth )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iWidth","documentation":"Specifies the width, in pixels, of all columns"}]},"_GUICtrlListBox_SetCurSel":{"documentation":"Select a string and scroll it into view, if necessary","label":"_GUICtrlListBox_SetCurSel ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the string that is selected.If this parameter is -1 the list box is set to have no selection."}]},"_GUICtrlListBox_SetHorizontalExtent":{"documentation":"Set the width, in pixels, by which a list box can be scrolled horizontally","label":"_GUICtrlListBox_SetHorizontalExtent ( $hWnd, $iWidth )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iWidth","documentation":"Specifies the number of pixels the list box can be scrolled"}]},"_GUICtrlListBox_SetItemData":{"documentation":"Sets the value associated with the specified item","label":"_GUICtrlListBox_SetItemData ( $hWnd, $iIndex, $iValue )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"},{"label":"$iValue","documentation":"Specifies the value to be associated with the item"}]},"_GUICtrlListBox_SetItemHeight":{"documentation":"Sets the height, in pixels, of items","label":"_GUICtrlListBox_SetItemHeight ( $hWnd, $iHeight [, $iIndex = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iHeight","documentation":"Specifies the height, in pixels, of the item"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based index of the item in the list box.Use this only if the control has the LBS_OWNERDRAWVARIABLE style otherwise, set it to zero."}]},"_GUICtrlListBox_SetLocale":{"documentation":"Set the current locale","label":"_GUICtrlListBox_SetLocale ( $hWnd, $iLocal )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iLocal","documentation":"Specifies the locale identifier that the list box will use for sorting when adding text"}]},"_GUICtrlListBox_SetSel":{"documentation":"Select a string(s) in a multiple-selection list box","label":"_GUICtrlListBox_SetSel ( $hWnd [, $iIndex = -1 [, $iSelect = -1]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based index of the item"},{"label":"$iSelect","documentation":"**[optional]** Specifies how to set the selection."}]},"_GUICtrlListBox_SetTabStops":{"documentation":"Sets the tab-stop positions","label":"_GUICtrlListBox_SetTabStops ( $hWnd, $aTabStops )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$aTabStops","documentation":"Array with the following format:    [0] - Number of tab stops in the array (n)    [1] - First tab stop    [2] - Second tab stop    [n] - Nth tab stop"}]},"_GUICtrlListBox_SetTopIndex":{"documentation":"Ensure that a particular item in a list box is visible","label":"_GUICtrlListBox_SetTopIndex ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"}]},"_GUICtrlListBox_Sort":{"documentation":"Re-sorts list box if it has the $LBS_SORT style","label":"_GUICtrlListBox_Sort ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListBox_SwapString":{"documentation":"Swaps the text of two items at the specified indices","label":"_GUICtrlListBox_SwapString ( $hWnd, $iIndexA, $iIndexB )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndexA","documentation":"0-based index item to swap"},{"label":"$iIndexB","documentation":"0-based index item to swap"}]},"_GUICtrlListBox_UpdateHScroll":{"documentation":"Update the horizontal scroll bar based on the longest string","label":"_GUICtrlListBox_UpdateHScroll ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_AddArray":{"documentation":"Adds items from an array to the control","label":"_GUICtrlListView_AddArray ( $hWnd, ByRef $aItems )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$aItems","documentation":"Array with the following format:    [0][0] - Item 1 Text    [0][1] - Item 1 Subitem 1 text    [0][2] - Item 1 Subitem 2 text    [0][n] - Item 1 Subitem n text    [1][0] - Item 2 Text    [1][1] - Item 2 Subitem 1 text    [1][2] - Item 2 Subitem 2 text    [1][n] - Item 2 Subitem n text"}]},"_GUICtrlListView_AddColumn":{"documentation":"Adds a new column in the control","label":"_GUICtrlListView_AddColumn ( $hWnd, $sText [, $iWidth = 50 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Column header text"},{"label":"$iWidth","documentation":"**[optional]** Width of the column, in pixels"},{"label":"$iAlign","documentation":"**[optional]** Alignment of the column header and the subitem text in the column:    0 - Text is left aligned    1 - Text is right aligned    2 - Text is centered"},{"label":"$iImage","documentation":"**[optional]** 0-based index of an image within the image list"},{"label":"$bOnRight","documentation":"**[optional]** If True, the column image appears to the right of text"}]},"_GUICtrlListView_AddItem":{"documentation":"Adds a new item to the end of the list","label":"_GUICtrlListView_AddItem ( $hWnd, $sText [, $iImage = -1 [, $iParam = 0]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Item text. If set to -1, the item set is set via the $LVN_GETDISPINFO notification message."},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iParam","documentation":"**[optional]** Application Defined data"}]},"_GUICtrlListView_AddSubItem":{"documentation":"Adds a new subitem to the control","label":"_GUICtrlListView_AddSubItem ( $hWnd, $iIndex, $sText, $iSubItem [, $iImage = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$sText","documentation":"Item or subitem text"},{"label":"$iSubItem","documentation":"1-based index of the subitem"},{"label":"$iImage","documentation":"**[optional]** 0-based index of the icon in the control\'s image list"}]},"_GUICtrlListView_ApproximateViewHeight":{"documentation":"Calculates the approximate height required to display a given number of items","label":"_GUICtrlListView_ApproximateViewHeight ( $hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iCount","documentation":"**[optional]** Number of items to be displayed in the control. If this parameter is set to -1 the message uses the total number of items in the control."},{"label":"$iCX","documentation":"**[optional]** Proposed X dimension of the control, in pixels. This parameter can be set to -1 to allow the message to use the current width value."},{"label":"$iCY","documentation":"**[optional]** Proposed Y dimension of the control, in pixels. This parameter can be set to -1 to allow the message to use the current height value."}]},"_GUICtrlListView_ApproximateViewRect":{"documentation":"Calculates the approximate size required to display a given number of items","label":"_GUICtrlListView_ApproximateViewRect ( $hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iCount","documentation":"**[optional]** Number of items to be displayed in the control.If this parameter is set to -1 the message uses the total number of items in the control."},{"label":"$iCX","documentation":"**[optional]** Proposed X dimension of the control, in pixels.This parameter can be set to -1 to allow the message to use the current width value."},{"label":"$iCY","documentation":"**[optional]** Proposed Y dimension of the control, in pixels.This parameter can be set to -1 to allow the message to use the current height value."}]},"_GUICtrlListView_ApproximateViewWidth":{"documentation":"Calculates the approximate width required to display a given number of items","label":"_GUICtrlListView_ApproximateViewWidth ( $hWnd [, $iCount = -1 [, $iCX = -1 [, $iCY = -1]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iCount","documentation":"**[optional]** Number of items to be displayed in the control.If this parameter is set to -1 the message uses the total number of items in the control"},{"label":"$iCX","documentation":"**[optional]** Proposed X dimension of the control, in pixels.This parameter can be set to -1 to allow the message to use the current width value."},{"label":"$iCY","documentation":"**[optional]** Proposed Y dimension of the control, in pixels.This parameter can be set to -1 to allow the message to use the current height value."}]},"_GUICtrlListView_Arrange":{"documentation":"Arranges items in icon view","label":"_GUICtrlListView_Arrange ( $hWnd [, $iArrange = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iArrange","documentation":"**[optional]** Alignment. This can be one of the following values:    0 - Aligns items according to the controls default value    1 - Aligns items along the left edge of the window    2 - Aligns items along the top edge of the window    3 - Snaps all icons to the nearest grid position."}]},"_GUICtrlListView_BeginUpdate":{"documentation":"Prevents updating of the control until the _GUICtrlListView_EndUpdate() function is called","label":"_GUICtrlListView_BeginUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_CancelEditLabel":{"documentation":"Cancels an item text editing operation","label":"_GUICtrlListView_CancelEditLabel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_ClickItem":{"documentation":"Clicks an item","label":"_GUICtrlListView_ClickItem ( $hWnd, $iIndex [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$sButton","documentation":"**[optional]** Button to click"},{"label":"$bMove","documentation":"**[optional]** If True, the mouse will be moved. If False, the mouse does not move."},{"label":"$iClicks","documentation":"**[optional]** Number of clicks"},{"label":"$iSpeed","documentation":"**[optional]** Delay between clicks"}]},"_GUICtrlListView_CopyItems":{"documentation":"Copy Items between 2 list-view controls","label":"_GUICtrlListView_CopyItems ( $hWnd_Source, $hWnd_Destination [, $bDelFlag = False] )","params":[{"label":"$hWnd_Source","documentation":"Control ID/Handle to the control of the source"},{"label":"$hWnd_Destination","documentation":"Control ID/Handle to the control of the destination"},{"label":"$bDelFlag","documentation":"**[optional]** Delete after copying"}]},"_GUICtrlListView_Create":{"documentation":"Create a ListView control","label":"_GUICtrlListView_Create ( $hWnd, $sHeaderText, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x0000000D [, $iExStyle = 0x00000000 [, $bCoInit = False]]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$sHeaderText","documentation":"Text to be displayed in the header. Pipe \\"|\\" delimited."},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control styles:    $LVS_ALIGNLEFT - Items are left aligned in icon and small icon view    $LVS_ALIGNTOP - Items are aligned with the top of the control in icon and small icon view    $LVS_AUTOARRANGE - Icons are automatically kept arranged in icon and small icon view    $LVS_EDITLABELS - Item text can be edited in place    $LVS_ICON - This style specifies icon view    $LVS_LIST - This style specifies list view    $LVS_NOCOLUMNHEADER - Column headers are not displayed in report view    $LVS_NOLABELWRAP - Item text is displayed on a single line in icon view    $LVS_NOSCROLL - Scrolling is disabled    $LVS_NOSORTHEADER - Column headers do not work like buttons    $LVS_OWNERDATA - This style specifies a virtual control    $LVS_OWNERDRAWFIXED - The owner window can paint items in report view    $LVS_REPORT - This style specifies report view    $LVS_SHAREIMAGELISTS - The image list will not be deleted    $LVS_SHOWSELALWAYS - The selection, if any, is always shown    $LVS_SINGLESEL - Only one item at a time can be selected    $LVS_SMALLICON - This style specifies small icon view    $LVS_SORTASCENDING - Item indexes are sorted in ascending order    $LVS_SORTDESCENDING - Item indexes are sorted in descending orderDefault: $LVS_REPORT, $LVS_SINGLESEL, $LVS_SHOWSELALWAYSForced : $WS_CHILD, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Extended control styles. Can be a combination of the following:    $LVS_EX_BORDERSELECT - When an item is selected the border color of the item changes    $LVS_EX_CHECKBOXES - Enables check boxes for items in a list-view control    $LVS_EX_DOUBLEBUFFER - Paints via double-buffering, which reduces flicker    $LVS_EX_FLATSB - Enables flat scroll bars in the list view    $LVS_EX_FULLROWSELECT - When an item is selected, the item and all its subitems are highlighted    $LVS_EX_GRIDLINES - Displays gridlines around items and subitems    $LVS_EX_HEADERDRAGDROP - Enables drag-and-drop reordering of columns    $LVS_EX_INFOTIP - The $LVN_GETINFOTIP notification message is sent before displaying a ToolTip    $LVS_EX_LABELTIP - If not set, the unfolds partly hidden labels only for the large icon mode    $LVS_EX_MULTIWORKAREAS - The control will not autoarrange its icons until one or more work areas are defined    $LVS_EX_ONECLICKACTIVATE - The control sends an $LVN_ITEMACTIVATE messages when the user clicks an item    $LVS_EX_REGIONAL - Sets the control region to include only the item icons and text    $LVS_EX_SIMPLESELECT - In icon view moves the state image of the control to the top right    $LVS_EX_SUBITEMIMAGES - Allows images to be displayed for subitems    $LVS_EX_TRACKSELECT - Enables hot-track selection in the control    $LVS_EX_TWOCLICKACTIVATE - The control sends an $LVN_ITEMACTIVATE message when the user double-clicks an item    $LVS_EX_UNDERLINECOLD - Causes non-hot items that may be activated to be displayed with underlined text    $LVS_EX_UNDERLINEHOT - Causes hot items that may be activated to be displayed with underlined text"},{"label":"$bCoInit","documentation":"**[optional]** Initializes the COM library for use by the calling thread."}]},"_GUICtrlListView_CreateDragImage":{"documentation":"Creates a drag image list for the specified item","label":"_GUICtrlListView_CreateDragImage ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_CreateSolidBitMap":{"documentation":"Creates a solid color bitmap","label":"_GUICtrlListView_CreateSolidBitMap ( $hWnd, $iColor, $iWidth, $iHeight )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iColor","documentation":"The color of the bitmap, stated in RGB"},{"label":"$iWidth","documentation":"The width of the bitmap"},{"label":"$iHeight","documentation":"The height of the bitmap"}]},"_GUICtrlListView_DeleteAllItems":{"documentation":"Removes all items from a list-view control","label":"_GUICtrlListView_DeleteAllItems ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Control ID/Handle to the control"}]},"_GUICtrlListView_DeleteColumn":{"documentation":"Removes a column from a list-view control","label":"_GUICtrlListView_DeleteColumn ( $hWnd, $iCol )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iCol","documentation":"Index of the column to delete"}]},"_GUICtrlListView_DeleteItem":{"documentation":"Removes an item from a list-view control","label":"_GUICtrlListView_DeleteItem ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the list-view item to delete"}]},"_GUICtrlListView_DeleteItemsSelected":{"documentation":"Deletes item(s) selected","label":"_GUICtrlListView_DeleteItemsSelected ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_Destroy":{"documentation":"Delete the listview control","label":"_GUICtrlListView_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_DrawDragImage":{"documentation":"Draw the Drag Image","label":"_GUICtrlListView_DrawDragImage ( ByRef $hWnd, ByRef $aDrag )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$aDrag","documentation":"Array with the following format:    [0] - Handle to the drag image list    [1] - X coordinate of the upper left corner of the image    [2] - Y coordinate of the upper left corner of the image"}]},"_GUICtrlListView_EditLabel":{"documentation":"Begins in place editing of the specified item text","label":"_GUICtrlListView_EditLabel ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item to edit"}]},"_GUICtrlListView_EnableGroupView":{"documentation":"Enables or disables whether the items in the control display as a group","label":"_GUICtrlListView_EnableGroupView ( $hWnd [, $bEnable = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bEnable","documentation":"**[optional]** Indicates whether to enable group displayed itemsTrue - Enable group viewFalse - Disable group view"}]},"_GUICtrlListView_EndUpdate":{"documentation":"Enables screen repainting that was turned off with the _GUICtrlListView_BeginUpdate() function","label":"_GUICtrlListView_EndUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_EnsureVisible":{"documentation":"Ensures that a list-view item is either entirely or partially visible","label":"_GUICtrlListView_EnsureVisible ( $hWnd, $iIndex [, $bPartialOK = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Index of the list-view item"},{"label":"$bPartialOK","documentation":"**[optional]** Value specifying whether the item must be entirely visible"}]},"_GUICtrlListView_FindInText":{"documentation":"Searches for an item that contains the specified text anywhere in its text","label":"_GUICtrlListView_FindInText ( $hWnd, $sText [, $iStart = -1 [, $bWrapOK = True [, $bReverse = False]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Text to match"},{"label":"$iStart","documentation":"**[optional]** 0-based index of the item to begin the search with or -1 to start from the beginning.The specified item is itself excluded from the search."},{"label":"$bWrapOK","documentation":"**[optional]** If True, the search will continue with the first item if no match is found"},{"label":"$bReverse","documentation":"**[optional]** If True, the search will start at $iStart - 1 to Zero. If $bWrapOK = True search will continue"}]},"_GUICtrlListView_FindItem":{"documentation":"Searches for an item with the specified characteristics","label":"_GUICtrlListView_FindItem ( $hWnd, $iStart, ByRef $tFindInfo [, $sText = \\"\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iStart","documentation":"0-based index of the item to begin the search with or -1 to start from the beginning.The specified item is itself excluded from the search."},{"label":"$tFindInfo","documentation":"$tagLVFINDINFO structure that contains the search information."},{"label":"$sText","documentation":"**[optional]** String to compare with the item text.It is valid if $LVFI_STRING or $LVFI_PARTIAL is set in the Flags member."}]},"_GUICtrlListView_FindNearest":{"documentation":"Finds the item nearest to the position specified","label":"_GUICtrlListView_FindNearest ( $hWnd, $iX, $iY [, $iDir = 0 [, $iStart = -1 [, $bWrapOK = True]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"X position"},{"label":"$iY","documentation":"Y position"},{"label":"$iDir","documentation":"**[optional]** Specifies which direction to search:    0 - Left    1 - Right    2 - Up    3 - Down    4 - From start    5 - From end    6 - From prior item    7 - From next item"},{"label":"$iStart","documentation":"**[optional]** 0-based index of the item to begin the search with or -1 to start from the beginning.The specified item is itself excluded from the search."},{"label":"$bWrapOK","documentation":"**[optional]** If True, the search will continue with the first item if no match is found"}]},"_GUICtrlListView_FindParam":{"documentation":"Searches for an item with the specified lParam","label":"_GUICtrlListView_FindParam ( $hWnd, $iParam [, $iStart = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iParam","documentation":"Param value to search for"},{"label":"$iStart","documentation":"**[optional]** 0-based index of the item to begin the search with or -1 to start from the beginning.The specified item is itself excluded from the search."}]},"_GUICtrlListView_FindText":{"documentation":"Searches for an item with the specified text","label":"_GUICtrlListView_FindText ( $hWnd, $sText [, $iStart = -1 [, $bPartialOK = True [, $bWrapOK = True]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Text to match"},{"label":"$iStart","documentation":"**[optional]** 0-based index of the item to begin the search with or -1 to start from the beginning.The specified item is itself excluded from the search."},{"label":"$bPartialOK","documentation":"**[optional]** If True, a match will occur if the item text begins with the text"},{"label":"$bWrapOK","documentation":"**[optional]** If True, the search will continue with the first item if no match is found"}]},"_GUICtrlListView_GetBkColor":{"documentation":"Retrieves the background color of a list-view control","label":"_GUICtrlListView_GetBkColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetBkImage":{"documentation":"Retrieves the background image in the control","label":"_GUICtrlListView_GetBkImage ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetCallbackMask":{"documentation":"Retrieves the callback mask for the control","label":"_GUICtrlListView_GetCallbackMask ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlListView_GetColumn":{"documentation":"Retrieves the attributes of a column","label":"_GUICtrlListView_GetColumn ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of column"}]},"_GUICtrlListView_GetColumnCount":{"documentation":"Retrieve the number of columns","label":"_GUICtrlListView_GetColumnCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetColumnOrder":{"documentation":"Retrieves the current left-to-right order of columns","label":"_GUICtrlListView_GetColumnOrder ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetColumnOrderArray":{"documentation":"Retrieves the current left-to-right order of columns in the control","label":"_GUICtrlListView_GetColumnOrderArray ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetColumnWidth":{"documentation":"Retrieves the width of a column in report or list view","label":"_GUICtrlListView_GetColumnWidth ( $hWnd, $iCol )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iCol","documentation":"The index of the column. This parameter is ignored in list view."}]},"_GUICtrlListView_GetCounterPage":{"documentation":"Calculates the number of items that can fit vertically in the visible area","label":"_GUICtrlListView_GetCounterPage ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetEditControl":{"documentation":"Retrieves the handle to the edit control being used to edit an item\'s text","label":"_GUICtrlListView_GetEditControl ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetExtendedListViewStyle":{"documentation":"Retrieves the extended styles that are currently in use","label":"_GUICtrlListView_GetExtendedListViewStyle ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetFocusedGroup":{"documentation":"Gets the group that has the focus","label":"_GUICtrlListView_GetFocusedGroup ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetGroupCount":{"documentation":"Gets the number of groups","label":"_GUICtrlListView_GetGroupCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetGroupInfo":{"documentation":"Retrieves group information","label":"_GUICtrlListView_GetGroupInfo ( $hWnd, $iGroupID )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iGroupID","documentation":"ID that specifies the group whose information is retrieved"}]},"_GUICtrlListView_GetGroupInfoByIndex":{"documentation":"Retrieves group information","label":"_GUICtrlListView_GetGroupInfoByIndex ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index that specifies the group whose information is retrieved"}]},"_GUICtrlListView_GetGroupRect":{"documentation":"Gets the rectangle for a specified group","label":"_GUICtrlListView_GetGroupRect ( $hWnd, $iGroupID [, $iGet = $LVGGR_GROUP] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iGroupID","documentation":"ID that specifies the group whose information is retrieved"},{"label":"$iGet","documentation":"**[optional]** Flag to specify the coordinates of the rectangle to get, can be one of the following:    $LVGGR_GROUP - Coordinates of the entire expanded group    $LVGGR_HEADER - Coordinates of the header only (collapsed group)    $LVGGR_LABEL - Coordinates of the label only    $LVGGR_SUBSETLINK - Coordinates of the subset link only (markup subset)"}]},"_GUICtrlListView_GetGroupViewEnabled":{"documentation":"Checks whether the control has group view enabled","label":"_GUICtrlListView_GetGroupViewEnabled ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetHeader":{"documentation":"Retrieves the handle to the header control","label":"_GUICtrlListView_GetHeader ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetHotCursor":{"documentation":"Retrieves the HCURSOR value used when the pointer is over an item while hot tracking is enabled","label":"_GUICtrlListView_GetHotCursor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetHotItem":{"documentation":"Retrieves the index of the hot item","label":"_GUICtrlListView_GetHotItem ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetHoverTime":{"documentation":"Retrieves the amount of time that the mouse cursor must hover over an item before it is selected","label":"_GUICtrlListView_GetHoverTime ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetImageList":{"documentation":"Retrieves the handle to an image list used for drawing listview items","label":"_GUICtrlListView_GetImageList ( $hWnd, $iImageList )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iImageList","documentation":"Image list to retrieve:0 - Image list with large icons1 - Image list with small icons2 - Image list with state images"}]},"_GUICtrlListView_GetISearchString":{"documentation":"Retrieves the incremental search string of the control","label":"_GUICtrlListView_GetISearchString ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetItem":{"documentation":"Retrieves an item\'s attributes","label":"_GUICtrlListView_GetItem ( $hWnd, $iIndex [, $iSubItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iSubItem","documentation":"**[optional]** 1-based subitem index"}]},"_GUICtrlListView_GetItemChecked":{"documentation":"Returns the check state for a list-view control item","label":"_GUICtrlListView_GetItemChecked ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index to retrieve item check state from"}]},"_GUICtrlListView_GetItemCount":{"documentation":"Retrieves the number of items in a list-view control","label":"_GUICtrlListView_GetItemCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetItemCut":{"documentation":"Determines whether the item is marked for a cut and paste operation","label":"_GUICtrlListView_GetItemCut ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_GetItemDropHilited":{"documentation":"Determines whether the item is highlighted as a drag-and-drop target","label":"_GUICtrlListView_GetItemDropHilited ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_GetItemEx":{"documentation":"Retrieves some or all of an item\'s attributes","label":"_GUICtrlListView_GetItemEx ( $hWnd, ByRef $tItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$tItem","documentation":"$tagLVITEM structure that specifies the information to retrieve"}]},"_GUICtrlListView_GetItemFocused":{"documentation":"Determines whether the item is highlighted as a drag-and-drop target","label":"_GUICtrlListView_GetItemFocused ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_GetItemGroupID":{"documentation":"Gets the item group ID","label":"_GUICtrlListView_GetItemGroupID ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_GetItemImage":{"documentation":"Retrieves the index of the item\'s icon","label":"_GUICtrlListView_GetItemImage ( $hWnd, $iIndex [, $iSubItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iSubItem","documentation":"**[optional]** 1-based item sub item index"}]},"_GUICtrlListView_GetItemIndent":{"documentation":"Retrieves the number of image widths the item is indented","label":"_GUICtrlListView_GetItemIndent ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlListView_GetItemParam":{"documentation":"Retrieves the application specific value of the item","label":"_GUICtrlListView_GetItemParam ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlListView_GetItemPosition":{"documentation":"Retrieves the position of an item","label":"_GUICtrlListView_GetItemPosition ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_GetItemPositionX":{"documentation":"Retrieves the X position of an item","label":"_GUICtrlListView_GetItemPositionX ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_GetItemPositionY":{"documentation":"Retrieves the Y position of an item","label":"_GUICtrlListView_GetItemPositionY ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_GetItemRect":{"documentation":"Retrieves the bounding rectangle for all or part of an item","label":"_GUICtrlListView_GetItemRect ( $hWnd, $iIndex [, $iPart = 3] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iPart","documentation":"**[optional]** The portion of the item to retrieve:    0 - The bounding rectangle of the entire item    1 - The bounding rectangle of the icon or small icon    2 - The bounding rectangle of the item text    3 - The union of 1 and 2, but excludes columns in report view"}]},"_GUICtrlListView_GetItemRectEx":{"documentation":"Retrieves the bounding rectangle for all or part of an item","label":"_GUICtrlListView_GetItemRectEx ( $hWnd, $iIndex [, $iPart = 3] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iPart","documentation":"**[optional]** The portion of the item to retrieve:    $LVIR_BOUNDS - Returns the bounding rectangle of the entire item, including the icon and label    $LVIR_ICON - Returns the bounding rectangle of the icon or small icon    $LVIR_LABEL - Returns the bounding rectangle of the item text    $LVIR_SELECTBOUNDS - Returns the union of the $LVIR_ICON and $LVIR_LABEL rectangles, but excludes columns in report view."}]},"_GUICtrlListView_GetItemSelected":{"documentation":"Determines whether the item is selected","label":"_GUICtrlListView_GetItemSelected ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_GetItemSpacing":{"documentation":"Determines the spacing between items in the control","label":"_GUICtrlListView_GetItemSpacing ( $hWnd [, $bSmall = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bSmall","documentation":"**[optional]** View for which to retrieve the item spacing:    True - Small icon view    False - Icon view"}]},"_GUICtrlListView_GetItemSpacingX":{"documentation":"Determines the horizontal spacing between items in the control","label":"_GUICtrlListView_GetItemSpacingX ( $hWnd [, $bSmall = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bSmall","documentation":"**[optional]** View for which to retrieve the item spacing:    True - Small icon view    False - Icon view"}]},"_GUICtrlListView_GetItemSpacingY":{"documentation":"Determines the vertical spacing between items in the control","label":"_GUICtrlListView_GetItemSpacingY ( $hWnd [, $bSmall = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bSmall","documentation":"**[optional]** View for which to retrieve the item spacing:    True - Small icon view    False - Icon view"}]},"_GUICtrlListView_GetItemState":{"documentation":"Retrieves the state of a listview item","label":"_GUICtrlListView_GetItemState ( $hWnd, $iIndex, $iMask )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iMask","documentation":"State information to retrieve. This can be a combination of:    $LVIS_CUT - The item is marked for a cut-and-paste operation    $LVIS_DROPHILITED - The item is highlighted as a drag-and-drop target    $LVIS_FOCUSED - The item has the focus, so it is surrounded by a standard focus rectangle    $LVIS_SELECTED - The item is selected    $LVIS_OVERLAYMASK - Use this mask to retrieve the item\'s overlay image index    $LVIS_STATEIMAGEMASK - Use this mask to retrieve the item\'s state image index"}]},"_GUICtrlListView_GetItemStateImage":{"documentation":"Gets the state image that is displayed","label":"_GUICtrlListView_GetItemStateImage ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlListView_GetItemText":{"documentation":"Retrieves the text of an item or subitem","label":"_GUICtrlListView_GetItemText ( $hWnd, $iIndex [, $iSubItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iSubItem","documentation":"**[optional]** 1-based sub item index"}]},"_GUICtrlListView_GetItemTextArray":{"documentation":"Retrieves all of a list-view item","label":"_GUICtrlListView_GetItemTextArray ( $hWnd [, $iItem = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iItem","documentation":"**[optional]** 0-based index of item to retrieve"}]},"_GUICtrlListView_GetItemTextString":{"documentation":"Retrieves all of a list-view item","label":"_GUICtrlListView_GetItemTextString ( $hWnd [, $iItem = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iItem","documentation":"**[optional]** 0-based index of item to retrieve"}]},"_GUICtrlListView_GetNextItem":{"documentation":"Searches for an item that has the specified properties","label":"_GUICtrlListView_GetNextItem ( $hWnd [, $iStart = -1 [, $iSearch = 0 [, $iState = 8]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iStart","documentation":"**[optional]** Index of the item to begin the search with, or -1 to find the first item that matches the specified flags.The specified item itself is excluded from the search."},{"label":"$iSearch","documentation":"**[optional]** Relationship to the index of the item where the search is to begin:    0 - Searches for a subsequent item by index    1 - Searches for an item that is above the specified item    2 - Searches for an item that is below the specified item    3 - Searches for an item to the left of the specified item    4 - Searches for an item to the right of the specified item"},{"label":"$iState","documentation":"**[optional]** State of the item to find. Can be a combination of:    1 - The item is cut    2 - The item is highlighted    4 - The item is focused    8 - The item is selected"}]},"_GUICtrlListView_GetNumberOfWorkAreas":{"documentation":"Retrieves the number of working areas in the control","label":"_GUICtrlListView_GetNumberOfWorkAreas ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetOrigin":{"documentation":"Retrieves the current view origin for the control","label":"_GUICtrlListView_GetOrigin ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetOriginX":{"documentation":"Retrieves the current horizontal view origin for the control","label":"_GUICtrlListView_GetOriginX ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetOriginY":{"documentation":"Retrieves the current vertical view origin for the control","label":"_GUICtrlListView_GetOriginY ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetOutlineColor":{"documentation":"Retrieves the color of the border of the control","label":"_GUICtrlListView_GetOutlineColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetSelectedColumn":{"documentation":"Retrieves the index of the selected column","label":"_GUICtrlListView_GetSelectedColumn ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetSelectedCount":{"documentation":"Determines the number of selected items","label":"_GUICtrlListView_GetSelectedCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetSelectedIndices":{"documentation":"Retrieve indices of selected item(s)","label":"_GUICtrlListView_GetSelectedIndices ( $hWnd [, $bArray = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bArray","documentation":"**[optional]** Return string or Array    True - Returns array    False - Returns pipe \\"|\\" delimited string"}]},"_GUICtrlListView_GetSelectionMark":{"documentation":"Retrieves the selection mark from the control","label":"_GUICtrlListView_GetSelectionMark ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetStringWidth":{"documentation":"Determines the width of a specified string","label":"_GUICtrlListView_GetStringWidth ( $hWnd, $sString )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sString","documentation":"String for which the width will be calculated"}]},"_GUICtrlListView_GetSubItemRect":{"documentation":"Retrieves information about an item bounding rectangle","label":"_GUICtrlListView_GetSubItemRect ( $hWnd, $iIndex, $iSubItem [, $iPart = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the subitem\'s parent item"},{"label":"$iSubItem","documentation":"1-based index of the subitem"},{"label":"$iPart","documentation":"**[optional]** The portion of the subitem item to retrieve:    0 - The rectangle of the entire subitem, including the icon and label    1 - The rectangle of the icon or small icon"}]},"_GUICtrlListView_GetTextBkColor":{"documentation":"Retrieves the text background color of the control","label":"_GUICtrlListView_GetTextBkColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetTextColor":{"documentation":"Retrieves the text color of the control","label":"_GUICtrlListView_GetTextColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetToolTips":{"documentation":"Retrieves the ToolTip control handle","label":"_GUICtrlListView_GetToolTips ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetTopIndex":{"documentation":"Retrieves the index of the topmost visible item when in list or report view","label":"_GUICtrlListView_GetTopIndex ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetUnicodeFormat":{"documentation":"Retrieves the Unicode character format flag for the control","label":"_GUICtrlListView_GetUnicodeFormat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetView":{"documentation":"Retrieves the current view of the control","label":"_GUICtrlListView_GetView ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetViewDetails":{"documentation":"Determines whether the view mode is in detail mode","label":"_GUICtrlListView_GetViewDetails ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetViewLarge":{"documentation":"Determines whether the view mode is in large icon mode","label":"_GUICtrlListView_GetViewLarge ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetViewList":{"documentation":"Determines whether the view mode is in list mode","label":"_GUICtrlListView_GetViewList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetViewRect":{"documentation":"Retrieves the bounding rectangle of all items in the control","label":"_GUICtrlListView_GetViewRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetViewSmall":{"documentation":"Determines whether the view mode is in small icon mode","label":"_GUICtrlListView_GetViewSmall ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_GetViewTile":{"documentation":"Determines whether the view mode is in tile mode","label":"_GUICtrlListView_GetViewTile ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_HideColumn":{"documentation":"Hides the column \\"sets column width to zero\\"","label":"_GUICtrlListView_HideColumn ( $hWnd, $iCol )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iCol","documentation":"Column to hide"}]},"_GUICtrlListView_HitTest":{"documentation":"Determines which item is at a specified position","label":"_GUICtrlListView_HitTest ( $hWnd [, $iX = -1 [, $iY = -1]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"**[optional]** X position, in client coordinates, to be tested or -1 to use the current mouse position"},{"label":"$iY","documentation":"**[optional]** Y position, in client coordinates, to be tested or -1 to use the current mouse position"}]},"_GUICtrlListView_InsertColumn":{"documentation":"Inserts a new column in the control","label":"_GUICtrlListView_InsertColumn ( $hWnd, $iIndex, $sText [, $iWidth = 50 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of new column"},{"label":"$sText","documentation":"Column header text"},{"label":"$iWidth","documentation":"**[optional]** Width of the column, in pixels"},{"label":"$iAlign","documentation":"**[optional]** Alignment of the column header and the subitem text in the column:    0 - Text is left aligned    1 - Text is right aligned    2 - Text is centered"},{"label":"$iImage","documentation":"**[optional]** 0-based index of an image within the image list"},{"label":"$bOnRight","documentation":"**[optional]** If True, the column image appears to the right of text"}]},"_GUICtrlListView_InsertGroup":{"documentation":"Inserts a group","label":"_GUICtrlListView_InsertGroup ( $hWnd, $iIndex, $iGroupID, $sHeader [, $iAlign = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Index where the group is to be added. If this is -1, the group is added at the end of the list."},{"label":"$iGroupID","documentation":"ID of the group"},{"label":"$sHeader","documentation":"Header text"},{"label":"$iAlign","documentation":"**[optional]** Alignment of the header text for the group:    0 - Left    1 - Center    2 - Right"}]},"_GUICtrlListView_InsertItem":{"documentation":"Inserts a new item in the control","label":"_GUICtrlListView_InsertItem ( $hWnd, $sText [, $iIndex = -1 [, $iImage = -1 [, $iParam = 0]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Item text. If set to -1, the item text is set via the $LVN_GETDISPINFO notification message."},{"label":"$iIndex","documentation":"**[optional]** 0-based index at which the new item should be inserted.If this value is greater than the number of items currently contained by the control, the new item will be appended to the end of the list and assigned the correct index."},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iParam","documentation":"**[optional]** Application Defined Data"}]},"_GUICtrlListView_JustifyColumn":{"documentation":"Set Justification of a column for a list-view control","label":"_GUICtrlListView_JustifyColumn ( $hWnd, $iIndex [, $iAlign = -1] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of new column"},{"label":"$iAlign","documentation":"**[optional]** Alignment of the column header and the subitem text in the column:    0 - Text is left aligned    1 - Text is right aligned    2 - Text is centered"}]},"_GUICtrlListView_MapIDToIndex":{"documentation":"Maps the ID of an item to an index","label":"_GUICtrlListView_MapIDToIndex ( $hWnd, $iID )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iID","documentation":"ID of an item"}]},"_GUICtrlListView_MapIndexToID":{"documentation":"Maps an index to an item ID","label":"_GUICtrlListView_MapIndexToID ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of an item"}]},"_GUICtrlListView_RedrawItems":{"documentation":"Forces the control to redraw a range of items","label":"_GUICtrlListView_RedrawItems ( $hWnd, $iFirst, $iLast )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iFirst","documentation":"0-based index of the first item to redraw"},{"label":"$iLast","documentation":"0-based index of the last item to redraw"}]},"_GUICtrlListView_RegisterSortCallBack":{"documentation":"Register the Simple Sort callback function","label":"_GUICtrlListView_RegisterSortCallBack ( $hWnd [, $bNumbers = True [, $bArrows = True]] )","params":[{"label":"$hWnd","documentation":"Handle of the control"},{"label":"$bNumbers","documentation":"**[optional]** Treat number strings as numbers"},{"label":"$bArrows","documentation":"**[optional]** Draws a down-arrow/up-arrow on column selected"}]},"_GUICtrlListView_RemoveAllGroups":{"documentation":"Removes all groups from the control","label":"_GUICtrlListView_RemoveAllGroups ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlListView_RemoveGroup":{"documentation":"Removes a group from the control","label":"_GUICtrlListView_RemoveGroup ( $hWnd, $iGroupID )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iGroupID","documentation":"ID that specifies the group to remove"}]},"_GUICtrlListView_Scroll":{"documentation":"Scrolls the content of a list-view","label":"_GUICtrlListView_Scroll ( $hWnd, $iDX, $iDY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iDX","documentation":"Value of type int that specifies the amount of horizontal scrolling in pixels.If the list-view control is in list-view, this value specifies the number of columns to scroll."},{"label":"$iDY","documentation":"Value of type int that specifies the amount of vertical scrolling in pixels"}]},"_GUICtrlListView_SetBkColor":{"documentation":"Sets the background color of the control","label":"_GUICtrlListView_SetBkColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iColor","documentation":"Background color to set or CLR_NONE value for no background color"}]},"_GUICtrlListView_SetBkImage":{"documentation":"Sets the background image in the control","label":"_GUICtrlListView_SetBkImage ( $hWnd [, $sURL = \\"\\" [, $iStyle = 0 [, $iXOffset = 0 [, $iYOffset = 0]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sURL","documentation":"**[optional]** URL of the background image. If blank, the control has no background"},{"label":"$iStyle","documentation":"**[optional]** Determines the background image style:    0 - Normal    1 - Tiled"},{"label":"$iXOffset","documentation":"**[optional]** Percentage of the control\'s client area that the image should be offset horizontally.Only valid when 0 is used in $iStyle."},{"label":"$iYOffset","documentation":"**[optional]** Percentage of the control\'s client area that the image should be offset vertically.Only valid when 0 is used in $iStyle."}]},"_GUICtrlListView_SetCallBackMask":{"documentation":"Changes the callback mask for the control","label":"_GUICtrlListView_SetCallBackMask ( $hWnd, $iMask )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMask","documentation":"Value of the callback mask.The bits of the mask indicate the item states or images for which the application stores the current state data.This value can be any combination of the following:    1 - The item is marked for a cut-and-paste operation    2 - The item is highlighted as a drag-and-drop target    4 - The item has the focus    8 - The item is selected    16 - The application stores the image list index of the current overlay image    32 - The application stores the image list index of the current state image"}]},"_GUICtrlListView_SetColumn":{"documentation":"Sets the attributes of a column","label":"_GUICtrlListView_SetColumn ( $hWnd, $iIndex, $sText [, $iWidth = -1 [, $iAlign = -1 [, $iImage = -1 [, $bOnRight = False]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of new column"},{"label":"$sText","documentation":"Column header text"},{"label":"$iWidth","documentation":"**[optional]** Width of the column, in pixels"},{"label":"$iAlign","documentation":"**[optional]** Alignment of the column header and the subitem text in the column:    0 - Text is left aligned    1 - Text is right aligned    2 - Text is centered"},{"label":"$iImage","documentation":"**[optional]** 0-based index of an image within the image list"},{"label":"$bOnRight","documentation":"**[optional]** If True, the column image appears to the right of text"}]},"_GUICtrlListView_SetColumnOrder":{"documentation":"Sets the left-to-right order of columns","label":"_GUICtrlListView_SetColumnOrder ( $hWnd, $sOrder )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sOrder","documentation":"Use Opt(\'GUIDataSeparatorChar\', param) to set Separator Char, delimited column order, must be formated as follows:    \\"2|0|3|1\\""}]},"_GUICtrlListView_SetColumnOrderArray":{"documentation":"Sets the left-to-right order of columns in the control","label":"_GUICtrlListView_SetColumnOrderArray ( $hWnd, $aOrder )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$aOrder","documentation":"Array of integers that holds the index values of the columns in the control.The array must be formatted as follows:    [0] - Number of items in array    [1] - First column index    [2] - Second column index    [n] - Last column index"}]},"_GUICtrlListView_SetColumnWidth":{"documentation":"Changes the width of a column","label":"_GUICtrlListView_SetColumnWidth ( $hWnd, $iCol, $iWidth )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iCol","documentation":"0-based index of a valid column. For list-view mode, this parameter must be set to zero"},{"label":"$iWidth","documentation":"New width of the column, in pixels.For report-view mode, the following special values are supported:    $LVSCW_AUTOSIZE - Automatically sizes the column.    $LVSCW_AUTOSIZE_USEHEADER - Automatically sizes the column to fit the header text.If you use this value with the last column, its width is set to fill the remaining width of the list-view control."}]},"_GUICtrlListView_SetExtendedListViewStyle":{"documentation":"Sets extended styles","label":"_GUICtrlListView_SetExtendedListViewStyle ( $hWnd, $iExStyle [, $iExMask = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iExStyle","documentation":"Extended control styles:    $LVS_EX_BORDERSELECT - When an item is selected the border color of the item changes    $LVS_EX_CHECKBOXES - Enables check boxes for items in a list-view control    $LVS_EX_DOUBLEBUFFER - Paints via double-buffering, which reduces flicker    $LVS_EX_FLATSB - Enables flat scroll bars in the list view    $LVS_EX_FULLROWSELECT - When an item is selected, the item and all its subitems are highlighted    $LVS_EX_GRIDLINES - Displays gridlines around items and subitems    $LVS_EX_HEADERDRAGDROP - Enables drag-and-drop reordering of columns    $LVS_EX_INFOTIP - The $LVN_GETINFOTIP notification message is sent before displaying a ToolTip    $LVS_EX_LABELTIP - If not set, the unfolds partly hidden labels only for the large icon mode    $LVS_EX_MULTIWORKAREAS - The control will not autoarrange its icons until one or more work areas are defined    $LVS_EX_ONECLICKACTIVATE - The control sends an $LVN_ITEMACTIVATE messages when the user clicks an item    $LVS_EX_REGIONAL - Sets the control region to include only the item icons and text    $LVS_EX_SIMPLESELECT - In icon view moves the state image of the control to the top right    $LVS_EX_SUBITEMIMAGES - Allows images to be displayed for subitems    $LVS_EX_TRACKSELECT - Enables hot-track selection in the control    $LVS_EX_TWOCLICKACTIVATE - The control sends an $LVN_ITEMACTIVATE message when the user double-clicks an item    $LVS_EX_UNDERLINECOLD - Causes non-hot items that may be activated to be displayed with underlined text    $LVS_EX_UNDERLINEHOT - Causes hot items that may be activated to be displayed with underlined text"},{"label":"$iExMask","documentation":"**[optional]** Specifies which styles in $iExStyle are to be affected.This parameter can be a combination of extended styles. Only the extended styles in $iExMask will be changed.All other styles will be maintained as they are.If this parameter is zero, all of the styles in $iExStyle will be affected."}]},"_GUICtrlListView_SetGroupInfo":{"documentation":"Sets group information","label":"_GUICtrlListView_SetGroupInfo ( $hWnd, $iGroupID, $sHeader [, $iAlign = 0 [, $iState = $LVGS_NORMAL]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iGroupID","documentation":"ID of the group"},{"label":"$sHeader","documentation":"Header text"},{"label":"$iAlign","documentation":"**[optional]** Alignment of the header text for the group:    0 - Left    1 - Center    2 - Right"},{"label":"$iState","documentation":"**[optional]** Windows Vista or later can have one of the following values:    $LVGS_NORMAL - Groups are expanded, the group name is displayed, and all items in the group are displayed.    $LVGS_COLLAPSED - The group is collapsed.    $LVGS_HIDDEN - The group is hidden.    $LVGS_NOHEADER - The group does not display a header.    $LVGS_COLLAPSIBLE - The group can be collapsed.    $LVGS_FOCUSED - The group has keyboard focus.    $LVGS_SELECTED - The group is selected.    $LVGS_SUBSETED - The group displays only a portion of its items.    $LVGS_SUBSETLINKFOCUSED - The subset link of the group has keyboard focus"}]},"_GUICtrlListView_SetHotItem":{"documentation":"Sets the hot item","label":"_GUICtrlListView_SetHotItem ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item to be set as the hot item"}]},"_GUICtrlListView_SetHoverTime":{"documentation":"Sets the amount of time which the mouse cursor must hover over an item before it is selected","label":"_GUICtrlListView_SetHoverTime ( $hWnd, $iTime )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iTime","documentation":"The new amount of time, in milliseconds, that the mouse cursor must hover over an item before it is selected.If this value is (DWORD)-1, then the hover time is set to the default hover time."}]},"_GUICtrlListView_SetIconSpacing":{"documentation":"Sets the spacing between icons where the style is large icon","label":"_GUICtrlListView_SetIconSpacing ( $hWnd, $iCX, $iCY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iCX","documentation":"Distance, in pixels, to set between icons on the x-axis"},{"label":"$iCY","documentation":"Distance, in pixels, to set between icons on the y-axis"}]},"_GUICtrlListView_SetImageList":{"documentation":"Assigns an image list to the control","label":"_GUICtrlListView_SetImageList ( $hWnd, $hHandle [, $iType = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hHandle","documentation":"Handle to the image list to assign"},{"label":"$iType","documentation":"**[optional]** Type of image list:    0 - Image list with large icons    1 - Image list with small icons    2 - Image list with state images"}]},"_GUICtrlListView_SetItem":{"documentation":"Sets some or all of a item\'s attributes","label":"_GUICtrlListView_SetItem ( $hWnd, $sText [, $iIndex = 0 [, $iSubItem = 0 [, $iImage = -1 [, $iParam = -1 [, $iIndent = -1]]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Item text. See remark."},{"label":"$iIndex","documentation":"**[optional]** The 0-based index of the item"},{"label":"$iSubItem","documentation":"**[optional]** 1-based index of the subitem or zero if this refers to an item"},{"label":"$iImage","documentation":"**[optional]** 0-base index of the item\'s icon in the control\'s image list"},{"label":"$iParam","documentation":"**[optional]** Value specific to the item"},{"label":"$iIndent","documentation":"**[optional]** Number of image widths to indent the item. A single indentation equals the width of an image."}]},"_GUICtrlListView_SetItemChecked":{"documentation":"Sets the checked state","label":"_GUICtrlListView_SetItemChecked ( $hWnd, $iIndex [, $bCheck = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item, -1 sets all items"},{"label":"$bCheck","documentation":"**[optional]** Value to set checked state to:    True - Checked    False - Not checked"}]},"_GUICtrlListView_SetItemCount":{"documentation":"Causes the list-view control to allocate memory for the specified number of items","label":"_GUICtrlListView_SetItemCount ( $hWnd, $iItems )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iItems","documentation":"Number of items that the list-view control will ultimately contain"}]},"_GUICtrlListView_SetItemCut":{"documentation":"Sets whether the item is marked for a cut-and-paste operation","label":"_GUICtrlListView_SetItemCut ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set."}]},"_GUICtrlListView_SetItemDropHilited":{"documentation":"Sets whether the item is highlighted as a drag-and-drop target","label":"_GUICtrlListView_SetItemDropHilited ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set."}]},"_GUICtrlListView_SetItemEx":{"documentation":"Sets some or all of a item\'s attributes","label":"_GUICtrlListView_SetItemEx ( $hWnd, ByRef $tItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$tItem","documentation":"$tagLVITEM structure"}]},"_GUICtrlListView_SetItemFocused":{"documentation":"Sets whether the item has the focus","label":"_GUICtrlListView_SetItemFocused ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set."}]},"_GUICtrlListView_SetItemGroupID":{"documentation":"Sets the item group ID","label":"_GUICtrlListView_SetItemGroupID ( $hWnd, $iIndex, $iGroupID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iGroupID","documentation":"Group ID"}]},"_GUICtrlListView_SetItemImage":{"documentation":"Sets the index of the item\'s icon in the control\'s image list","label":"_GUICtrlListView_SetItemImage ( $hWnd, $iIndex, $iImage [, $iSubItem = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iImage","documentation":"0-based index into the control\'s image list"},{"label":"$iSubItem","documentation":"**[optional]** 1-based index of the subitem"}]},"_GUICtrlListView_SetItemIndent":{"documentation":"Sets the number of image widths to indent the item","label":"_GUICtrlListView_SetItemIndent ( $hWnd, $iIndex, $iIndent )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iIndent","documentation":"Indention value"}]},"_GUICtrlListView_SetItemParam":{"documentation":"Sets the value specific to the item","label":"_GUICtrlListView_SetItemParam ( $hWnd, $iIndex, $iParam )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iParam","documentation":"A value to associate with the item"}]},"_GUICtrlListView_SetItemPosition":{"documentation":"Moves an item to a specified position in the control","label":"_GUICtrlListView_SetItemPosition ( $hWnd, $iIndex, $iCX, $iCY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iCX","documentation":"New x-position of the item\'s upper-left corner, in view coordinates"},{"label":"$iCY","documentation":"New y-position of the item\'s upper-left corner, in view coordinates"}]},"_GUICtrlListView_SetItemPosition32":{"documentation":"Moves an item to a specified position in the control","label":"_GUICtrlListView_SetItemPosition32 ( $hWnd, $iIndex, $iCX, $iCY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iCX","documentation":"New x-position of the item\'s upper-left corner, in view coordinates"},{"label":"$iCY","documentation":"New y-position of the item\'s upper-left corner, in view coordinates"}]},"_GUICtrlListView_SetItemSelected":{"documentation":"Sets whether the item is selected","label":"_GUICtrlListView_SetItemSelected ( $hWnd, $iIndex [, $bSelected = True [, $bFocused = False]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item, -1 to set selected state of all items"},{"label":"$bSelected","documentation":"**[optional]** If True the item(s) are selected, otherwise not."},{"label":"$bFocused","documentation":"**[optional]** If True the item has focus, otherwise not."}]},"_GUICtrlListView_SetItemState":{"documentation":"Changes the state of an item in the control","label":"_GUICtrlListView_SetItemState ( $hWnd, $iIndex, $iState, $iStateMask )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iState","documentation":"Item state to be changed"},{"label":"$iStateMask","documentation":"Bits that determine whether state is active or inactive"}]},"_GUICtrlListView_SetItemStateImage":{"documentation":"Sets the state image that is displayed","label":"_GUICtrlListView_SetItemStateImage ( $hWnd, $iIndex, $iImage )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$iImage","documentation":"1-based overlay image index"}]},"_GUICtrlListView_SetItemText":{"documentation":"Changes the text of an item or subitem","label":"_GUICtrlListView_SetItemText ( $hWnd, $iIndex, $sText [, $iSubItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"},{"label":"$sText","documentation":"Item or subitem text"},{"label":"$iSubItem","documentation":"**[optional]** 1-based index of the subitem or 0 to set the item"}]},"_GUICtrlListView_SetOutlineColor":{"documentation":"Sets the color of the border","label":"_GUICtrlListView_SetOutlineColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iColor","documentation":"Color to set the border"}]},"_GUICtrlListView_SetSelectedColumn":{"documentation":"Sets the index of the selected column","label":"_GUICtrlListView_SetSelectedColumn ( $hWnd, $iCol )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iCol","documentation":"Specifies the column index"}]},"_GUICtrlListView_SetSelectionMark":{"documentation":"Sets the selection mark in the control","label":"_GUICtrlListView_SetSelectionMark ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the new selection mark. If -1, the selection mark is removed."}]},"_GUICtrlListView_SetTextBkColor":{"documentation":"Sets the background color of text in the control","label":"_GUICtrlListView_SetTextBkColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iColor","documentation":"Text color"}]},"_GUICtrlListView_SetTextColor":{"documentation":"Sets the color of text in the control","label":"_GUICtrlListView_SetTextColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iColor","documentation":"Text color"}]},"_GUICtrlListView_SetToolTips":{"documentation":"Sets the ToolTip control that the control will use to display ToolTips","label":"_GUICtrlListView_SetToolTips ( $hWnd, $hToolTip )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hToolTip","documentation":"Handle to the ToolTip control to be set"}]},"_GUICtrlListView_SetUnicodeFormat":{"documentation":"Sets the UNICODE character format flag for the control","label":"_GUICtrlListView_SetUnicodeFormat ( $hWnd, $bUnicode )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bUnicode","documentation":"Determines the character set that is used by the control.    True - the control will use Unicode    False - the control will use ANSI characters."}]},"_GUICtrlListView_SetView":{"documentation":"Sets the view of the control","label":"_GUICtrlListView_SetView ( $hWnd, $iView )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iView","documentation":"View state for the control:    0 - Large Icon    1 - Details    2 - List    3 - Small Icon    4 - Tile"}]},"_GUICtrlListView_SetWorkAreas":{"documentation":"Creates a work area within the control","label":"_GUICtrlListView_SetWorkAreas ( $hWnd, $iLeft, $iTop, $iRight, $iBottom )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iLeft","documentation":"X coordinate of the upper left corner of the rectangle"},{"label":"$iTop","documentation":"Y coordinate of the upper left corner of the rectangle"},{"label":"$iRight","documentation":"X coordinate of the lower right corner of the rectangle"},{"label":"$iBottom","documentation":"Y coordinate of the lower right corner of the rectangle"}]},"_GUICtrlListView_SimpleSort":{"documentation":"Sorts a list-view control (limited)","label":"_GUICtrlListView_SimpleSort ( $hWnd, ByRef $vSortSense, $iCol [, $bToggleSense = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$vSortSense","documentation":"Sets the defined sort order    True - Sort Descending    False - Sort AscendingUse a simple variable for a single column ListViewUse an array for multicolumn ListViews:    $aArray[0] - Order for first Column    $aArray[1] - Order for second Column    $aArray[n] - Order for last Column"},{"label":"$iCol","documentation":"Column number"},{"label":"$bToggleSense","documentation":"**[optional]** Toggle sort sense    True - Toggle sort sense after sort (default)    False - Sort sense unchanged after sort"}]},"_GUICtrlListView_SortItems":{"documentation":"Starts the sort call back, also sets the Arrow in the Header","label":"_GUICtrlListView_SortItems ( $hWnd, $iCol )","params":[{"label":"$hWnd","documentation":"Handle of the control"},{"label":"$iCol","documentation":"Column clicked"}]},"_GUICtrlListView_SubItemHitTest":{"documentation":"Determines which listview item or subitem is at a given position","label":"_GUICtrlListView_SubItemHitTest ( $hWnd [, $iX = -1 [, $iY = -1]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"**[optional]** X position to test or -1 to use the current mouse position"},{"label":"$iY","documentation":"**[optional]** Y position to test or -1 to use the current mouse position"}]},"_GUICtrlListView_UnRegisterSortCallBack":{"documentation":"UnRegister the Sort callback function","label":"_GUICtrlListView_UnRegisterSortCallBack ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of the control"}]},"_GUICtrlMenu_AddMenuItem":{"documentation":"Adds a new menu item to the end of the menu","label":"_GUICtrlMenu_AddMenuItem ( $hMenu, $sText [, $iCmdID = 0 [, $hSubMenu = 0]] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$sText","documentation":"Menu item text. If blank, a separator will be added."},{"label":"$iCmdID","documentation":"**[optional]** Command ID to assign to the item"},{"label":"$hSubMenu","documentation":"**[optional]** Handle to the submenu associated with the menu item"}]},"_GUICtrlMenu_AppendMenu":{"documentation":"Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu","label":"_GUICtrlMenu_AppendMenu ( $hMenu, $iFlags, $iNewItem, $vNewItem )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iFlags","documentation":"Specifies flags to control the appearance and behavior of the new menu item:    $MF_BITMAP - Uses a bitmap as the menu item    $MF_CHECKED - Places a check mark next to the menu item. If the application provides check-mark bitmaps, this flag displays the check-mark bitmap next to the menu item.    $MF_DISABLED - Disables the menu item so that it cannot be selected, but the flag does not gray it.    $MF_ENABLED - Enables the menu item so that it can be selected, and restores it from its grayed state.    $MF_GRAYED - Disables the menu item and grays it so that it cannot be selected.    $MF_MENUBARBREAK - Functions the same as $MF_MENUBREAK for a menu bar. For a drop down menu, submenu, or shortcut menu, the new column is separated from the old column by a vertical line.    $MF_MENUBREAK - Places the item on a new line (for a menu bar) or in a new column (for a drop down menu, submenu, or shortcut menu) without separating columns.    $MF_OWNERDRAW - Specifies that the item is an owner drawn item.        Before the menu is displayed for the first time, the window that owns the menu receives a $WM_MEASUREITEM message to retrieve the width and height of the menu item.        The $WM_DRAWITEM message is then sent to the window procedure of the owner window whenever the appearance of the menu item must be updated.    $MF_POPUP - Specifies that the menu item opens a drop down menu or submenu.        The $iNewItem parameter specifies a handle to the drop down menu or submenu.        This flag is used to add a menu name to a menu bar, or a menu item that opens a submenu to a drop down menu, submenu, or shortcut menu.    $MF_SEPARATOR - Draws a horizontal dividing line. This flag is used only in a drop down menu, submenu, or shortcut menu.        The line cannot be grayed, disabled, or highlighted. The $vNewItem and $iNewItem parameters are ignored.    $MF_STRING - Specifies that the menu item is a text string. The $vNewItem parameter is a string.    $MF_UNCHECKED - Does not place a check mark next to the item. If the application supplies check mark bitmaps, this flag displays the clear bitmap next to the menu item."},{"label":"$iNewItem","documentation":"Specifies either the identifier of the new menu item or, if the $iFlags parameter is set to a popup, a handle to the drop down menu or submenu."},{"label":"$vNewItem","documentation":"Specifies the content of the new menu item. The interpretation of $vNewItem depends on whether the $iFlags parameter includes the $MF_BITMAP, $MF_OWNERDRAW, or $MF_STRING flag:    $MF_BITMAP - Contains a bitmap handle    $MF_OWNERDRAW - Contains an application supplied value that can be used to maintain additional data related to the menu item.        The value is in the ItemData member of the structure pointed to by the lParam parameter of the $WM_MEASUREITEM or $WM_DRAWITEM message sent when the menu is created or its appearance is updated.    $MF_STRING - Contains a string"}]},"_GUICtrlMenu_CalculatePopupWindowPosition":{"documentation":"Calculates an appropriate pop-up window position","label":"_GUICtrlMenu_CalculatePopupWindowPosition ( $iX, $iY, $iWidth, $iHeight [, $iFlags = 0 [, $tExclude = 0]] )","params":[{"label":"$iX","documentation":"The x-coordinate, in logical units, of the specified anchor point."},{"label":"$iY","documentation":"The y-coordinate, in logical units, of the specified anchor point."},{"label":"$iWidth","documentation":"The width, in logical units, of the specified window."},{"label":"$iHeight","documentation":"The height, in logical units, of the specified window."},{"label":"$iFlags","documentation":"**[optional]** The flags that specify how the function positions the pop-up window horizontally and vertically.    $TPM_CENTERALIGN    $TPM_LEFTALIGN (Default)    $TPM_RIGHTALIGN    $TPM_BOTTOMALIGN    $TPM_TOPALIGN (Default)    $TPM_VCENTERALIGN    $TPM_HORIZONTAL (Default)    $TPM_VERTICAL    $TPM_WORKAREA"},{"label":"$tExclude","documentation":"**[optional]** $tagRECT structure that specifies the exclude rectangle."}]},"_GUICtrlMenu_CheckMenuItem":{"documentation":"Sets the state of the specified menu item\'s check mark attribute to either selected or clear","label":"_GUICtrlMenu_CheckMenuItem ( $hMenu, $iItem [, $bCheck = True [, $bByPos = True]] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item to check"},{"label":"$bCheck","documentation":"**[optional]** True to set the check mark, False to remove it"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_CheckRadioItem":{"documentation":"Checks a specified menu item and makes it a radio item","label":"_GUICtrlMenu_CheckRadioItem ( $hMenu, $iFirst, $iLast, $iCheck [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iFirst","documentation":"Identifier or position of the first menu item in the group"},{"label":"$iLast","documentation":"Identifier or position of the last menu item in the group"},{"label":"$iCheck","documentation":"Identifier or position of the menu item to check"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iFirst, $iLast and $iCheck are a 0-based item position    False - $iFirst, $iLast and $iCheck are a menu item identifier"}]},"_GUICtrlMenu_CreateMenu":{"documentation":"Creates a menu","label":"_GUICtrlMenu_CreateMenu ( [$iStyle = $MNS_CHECKORBMP] )","params":[{"label":"$iStyle","documentation":"**[optional]** Style of the menu"}]},"_GUICtrlMenu_CreatePopup":{"documentation":"Creates a drop down menu, submenu, or shortcut menu","label":"_GUICtrlMenu_CreatePopup ( [$iStyle = $MNS_CHECKORBMP] )","params":[{"label":"$iStyle","documentation":"**[optional]** Style of the menu"}]},"_GUICtrlMenu_DeleteMenu":{"documentation":"Deletes an item from the specified menu","label":"_GUICtrlMenu_DeleteMenu ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_DestroyMenu":{"documentation":"Destroys the specified menu and frees any memory that the menu occupies","label":"_GUICtrlMenu_DestroyMenu ( $hMenu )","params":[{"label":"$hMenu","documentation":"Menu handle"}]},"_GUICtrlMenu_DrawMenuBar":{"documentation":"Redraws the menu bar of the specified window","label":"_GUICtrlMenu_DrawMenuBar ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window whose menu bar needs redrawing"}]},"_GUICtrlMenu_EnableMenuItem":{"documentation":"Enables, disables, or grays the specified menu item","label":"_GUICtrlMenu_EnableMenuItem ( $hMenu, $iItem [, $iState = 0 [, $bByPos = True]] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$iState","documentation":"**[optional]** Indicates whether the menu item is enabled, disabled, or grayed:    0 - Enabled    1 - Grayed    2 - Disabled"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_FindItem":{"documentation":"Retrieves a menu item based on it\'s text","label":"_GUICtrlMenu_FindItem ( $hMenu, $sText [, $bInStr = False [, $iStart = 0]] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$sText","documentation":"Text to search for"},{"label":"$bInStr","documentation":"**[optional]** If True, the text can be anywhere in the item\'s text."},{"label":"$iStart","documentation":"**[optional]** Item to start searching from"}]},"_GUICtrlMenu_FindParent":{"documentation":"Retrieves the window to which a menu belongs","label":"_GUICtrlMenu_FindParent ( $hMenu )","params":[{"label":"$hMenu","documentation":"Menu handle"}]},"_GUICtrlMenu_GetItemBmp":{"documentation":"Retrieves the bitmap displayed for the item","label":"_GUICtrlMenu_GetItemBmp ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemBmpChecked":{"documentation":"Retrieves the bitmap displayed if the item is selected","label":"_GUICtrlMenu_GetItemBmpChecked ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemBmpUnchecked":{"documentation":"Retrieves the bitmap displayed if the item is not selected","label":"_GUICtrlMenu_GetItemBmpUnchecked ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemChecked":{"documentation":"Retrieves the status of the menu item checked state","label":"_GUICtrlMenu_GetItemChecked ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemCount":{"documentation":"Retrieves the number of items in the specified menu","label":"_GUICtrlMenu_GetItemCount ( $hMenu )","params":[{"label":"$hMenu","documentation":"Handle of the menu"}]},"_GUICtrlMenu_GetItemData":{"documentation":"Retrieves the application defined value associated with the menu item","label":"_GUICtrlMenu_GetItemData ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemDefault":{"documentation":"Retrieves the status of the menu item default state","label":"_GUICtrlMenu_GetItemDefault ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemDisabled":{"documentation":"Retrieves the status of the menu item disabled state","label":"_GUICtrlMenu_GetItemDisabled ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemEnabled":{"documentation":"Retrieves the status of the menu item enabled state","label":"_GUICtrlMenu_GetItemEnabled ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemGrayed":{"documentation":"Retrieves the status of the menu item grayed state","label":"_GUICtrlMenu_GetItemGrayed ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemHighlighted":{"documentation":"Retrieves the status of the menu item highlighted state","label":"_GUICtrlMenu_GetItemHighlighted ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemID":{"documentation":"Retrieves the menu item ID","label":"_GUICtrlMenu_GetItemID ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemInfo":{"documentation":"Retrieves information about a menu item","label":"_GUICtrlMenu_GetItemInfo ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemRect":{"documentation":"Retrieves the bounding rectangle for the specified menu item","label":"_GUICtrlMenu_GetItemRect ( $hWnd, $hMenu, $iItem )","params":[{"label":"$hWnd","documentation":"Handle to the window containing the menu"},{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"0-based position of the menu item"}]},"_GUICtrlMenu_GetItemRectEx":{"documentation":"Retrieves the bounding rectangle for the specified menu item","label":"_GUICtrlMenu_GetItemRectEx ( $hWnd, $hMenu, $iItem )","params":[{"label":"$hWnd","documentation":"Handle to the window containing the menu"},{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"0-based position of the menu item"}]},"_GUICtrlMenu_GetItemState":{"documentation":"Retrieves the menu item state","label":"_GUICtrlMenu_GetItemState ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemStateEx":{"documentation":"Retrieves the menu flags associated with the specified menu item","label":"_GUICtrlMenu_GetItemStateEx ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemSubMenu":{"documentation":"Retrieves a the submenu activated by a specified item","label":"_GUICtrlMenu_GetItemSubMenu ( $hMenu, $iItem )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"0-based position of the menu item"}]},"_GUICtrlMenu_GetItemText":{"documentation":"Retrieves the text of the specified menu item","label":"_GUICtrlMenu_GetItemText ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetItemType":{"documentation":"Retrieves the menu item type","label":"_GUICtrlMenu_GetItemType ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_GetMenu":{"documentation":"Retrieves the handle of the menu assigned to the given window","label":"_GUICtrlMenu_GetMenu ( $hWnd )","params":[{"label":"$hWnd","documentation":"Identifies the window whose menu handle is retrieved"}]},"_GUICtrlMenu_GetMenuBackground":{"documentation":"Retrieves the brush to use for the menu\'s background","label":"_GUICtrlMenu_GetMenuBackground ( $hMenu )","params":[{"label":"$hMenu","documentation":"Handle of the menu"}]},"_GUICtrlMenu_GetMenuBarInfo":{"documentation":"Retrieves information about the specified menu bar","label":"_GUICtrlMenu_GetMenuBarInfo ( $hWnd [, $iItem = 0 [, $iObject = 1]] )","params":[{"label":"$hWnd","documentation":"Handle to the window whose information is to be retrieved"},{"label":"$iItem","documentation":"**[optional]** Specifies the item for which to retrieve information. If 0, the function retrieves information about the menu itself.If 1, the function retrieves information about the first item on the menu, and so on."},{"label":"$iObject","documentation":"**[optional]** Specifies the menu object:    0 - The popup menu associated with the window    1 - The menu bar associated with the window    2 - The system menu associated with the window"}]},"_GUICtrlMenu_GetMenuContextHelpID":{"documentation":"Retrieves the context help identifier","label":"_GUICtrlMenu_GetMenuContextHelpID ( $hMenu )","params":[{"label":"$hMenu","documentation":"Handle of the menu"}]},"_GUICtrlMenu_GetMenuData":{"documentation":"Retrieves the application defined value","label":"_GUICtrlMenu_GetMenuData ( $hMenu )","params":[{"label":"$hMenu","documentation":"Handle of the menu"}]},"_GUICtrlMenu_GetMenuDefaultItem":{"documentation":"Retrieves the default menu item on the specified menu","label":"_GUICtrlMenu_GetMenuDefaultItem ( $hMenu [, $bByPos = True [, $iFlags = 0]] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$bByPos","documentation":"**[optional]** Determines whether to retrive the menu items\'s identifer of it\'s position:    True - Return menu item position    False - Return menu item identifier"},{"label":"$iFlags","documentation":"**[optional]** Specifies how the function searches for menu items:    0 - No special search parameters    1 - Specifies that the function will return a default item even if it is disabled    2 - Specifies that if the default item is one that opens a submenu the function is to search recursively in the corresponding submenu."}]},"_GUICtrlMenu_GetMenuHeight":{"documentation":"Retrieves the maximum height of a menu","label":"_GUICtrlMenu_GetMenuHeight ( $hMenu )","params":[{"label":"$hMenu","documentation":"Handle of the menu"}]},"_GUICtrlMenu_GetMenuInfo":{"documentation":"Retrieves information about a specified menu","label":"_GUICtrlMenu_GetMenuInfo ( $hMenu )","params":[{"label":"$hMenu","documentation":"Handle of the menu"}]},"_GUICtrlMenu_GetMenuStyle":{"documentation":"Retrieves the style information for a menu","label":"_GUICtrlMenu_GetMenuStyle ( $hMenu )","params":[{"label":"$hMenu","documentation":"Handle of the menu"}]},"_GUICtrlMenu_GetSystemMenu":{"documentation":"Allows the application to access the window menu for copying and modifying","label":"_GUICtrlMenu_GetSystemMenu ( $hWnd [, $bRevert = False] )","params":[{"label":"$hWnd","documentation":"Handle to the window that will own a copy of the window menu"},{"label":"$bRevert","documentation":"**[optional]** Specifies the action to be taken. If this parameter is False, the function returns a handle to the copy of the window menu currently in use. The copy is initially identical to the window menu, but it can be modified.If this parameter is True, the function resets the window menu back to the default state. The previous window menu, if any, is destroyed."}]},"_GUICtrlMenu_InsertMenuItem":{"documentation":"Inserts a new menu item at the specified position","label":"_GUICtrlMenu_InsertMenuItem ( $hMenu, $iIndex, $sText [, $iCmdID = 0 [, $hSubMenu = 0]] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iIndex","documentation":"0-based position of the menu item before which to insert the new item"},{"label":"$sText","documentation":"Menu item text. If blank, a separator will be inserted."},{"label":"$iCmdID","documentation":"**[optional]** Command ID to assign to the item"},{"label":"$hSubMenu","documentation":"**[optional]** Handle to the submenu associated with the menu item"}]},"_GUICtrlMenu_InsertMenuItemEx":{"documentation":"Inserts a new menu item at the specified position in a menu","label":"_GUICtrlMenu_InsertMenuItemEx ( $hMenu, $iIndex, ByRef $tMenu [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iIndex","documentation":"Position of the menu item before which to insert the new item"},{"label":"$tMenu","documentation":"$tagMENUITEMINFO structure"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iIndex is a 0-based item position    False - $iIndex is a menu item identifier"}]},"_GUICtrlMenu_IsMenu":{"documentation":"Determines whether a handle is a menu handle","label":"_GUICtrlMenu_IsMenu ( $hMenu )","params":[{"label":"$hMenu","documentation":"Handle to be tested"}]},"_GUICtrlMenu_LoadMenu":{"documentation":"Loads the specified menu resource from the executable file associated with an application instance","label":"_GUICtrlMenu_LoadMenu ( $hInst, $sMenuName )","params":[{"label":"$hInst","documentation":"Handle to the module containing the menu resource to be loaded"},{"label":"$sMenuName","documentation":"String that contains the name of the menu resource.Alternatively, this parameter can consist of the resource identifier in the low order word and 0 in the high order word."}]},"_GUICtrlMenu_MapAccelerator":{"documentation":"Maps a menu accelerator key to it\'s position in the menu","label":"_GUICtrlMenu_MapAccelerator ( $hMenu, $sAccelKey )","params":[{"label":"$hMenu","documentation":"Handle to menu"},{"label":"$sAccelKey","documentation":"Accelerator key"}]},"_GUICtrlMenu_MenuItemFromPoint":{"documentation":"Determines which menu item is at the specified location","label":"_GUICtrlMenu_MenuItemFromPoint ( $hWnd, $hMenu [, $iX = -1 [, $iY = -1]] )","params":[{"label":"$hWnd","documentation":"Handle to the window containing the menu. If this value is 0 and $hMenu represents a popup menu, the function will find the menu window."},{"label":"$hMenu","documentation":"Handle to the menu containing the menu items to hit test"},{"label":"$iX","documentation":"**[optional]** X position to test. If -1, the current mouse X position will be used."},{"label":"$iY","documentation":"**[optional]** Y position to test. If -1, the current mouse Y position will be used."}]},"_GUICtrlMenu_RemoveMenu":{"documentation":"Deletes a menu item or detaches a submenu from the specified menu","label":"_GUICtrlMenu_RemoveMenu ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle to the menu to be changed"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemBitmaps":{"documentation":"Associates the specified bitmap with a menu item","label":"_GUICtrlMenu_SetItemBitmaps ( $hMenu, $iItem, $hChecked, $hUnChecked [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$hChecked","documentation":"Handle to the bitmap displayed when the menu item is selected"},{"label":"$hUnChecked","documentation":"Handle to the bitmap displayed when the menu item is not selected"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemBmp":{"documentation":"Sets the bitmap displayed for the item","label":"_GUICtrlMenu_SetItemBmp ( $hMenu, $iItem, $hBitmap [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$hBitmap","documentation":"Handle to the item bitmap"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemBmpChecked":{"documentation":"Sets the bitmap displayed if the item is selected","label":"_GUICtrlMenu_SetItemBmpChecked ( $hMenu, $iItem, $hBitmap [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$hBitmap","documentation":"Handle to the bitmap to display next to the item if it is selected"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemBmpUnchecked":{"documentation":"Sets the bitmap displayed if the item is not selected","label":"_GUICtrlMenu_SetItemBmpUnchecked ( $hMenu, $iItem, $hBitmap [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$hBitmap","documentation":"Handle to the bitmap to display next to the item if it is not selected"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemChecked":{"documentation":"Sets the checked state of a menu item","label":"_GUICtrlMenu_SetItemChecked ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bState","documentation":"**[optional]** True to set state, otherwise False"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemData":{"documentation":"Sets the application defined value for a menu item","label":"_GUICtrlMenu_SetItemData ( $hMenu, $iItem, $iData [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$iData","documentation":"Application defined value"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemDefault":{"documentation":"Sets the status of the menu item default state","label":"_GUICtrlMenu_SetItemDefault ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bState","documentation":"**[optional]** Item state to set:    True - State is enabled    False - State is disabled"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemDisabled":{"documentation":"Sets the disabled state of a menu item","label":"_GUICtrlMenu_SetItemDisabled ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bState","documentation":"**[optional]** True to set state, otherwise False"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemEnabled":{"documentation":"Sets the enabled state of a menu item","label":"_GUICtrlMenu_SetItemEnabled ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bState","documentation":"**[optional]** Item state to set:    True - State is enabled    False - State is disabled"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemGrayed":{"documentation":"Sets the grayed state of a menu item","label":"_GUICtrlMenu_SetItemGrayed ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bState","documentation":"**[optional]** Item state to set:    True - State is enabled    False - State is disabled"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemHighlighted":{"documentation":"Sets the highlighted state of a menu item","label":"_GUICtrlMenu_SetItemHighlighted ( $hMenu, $iItem [, $bState = True [, $bByPos = True]] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$bState","documentation":"**[optional]** Item state to set:    True - State is enabled    False - State is disabled"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemID":{"documentation":"Sets the menu item ID","label":"_GUICtrlMenu_SetItemID ( $hMenu, $iItem, $iID [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$iID","documentation":"Menu item ID"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemInfo":{"documentation":"Changes information about a menu item","label":"_GUICtrlMenu_SetItemInfo ( $hMenu, $iItem, ByRef $tInfo [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$tInfo","documentation":"$tagMENUITEMINFO structure"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemState":{"documentation":"Sets the state of a menu item","label":"_GUICtrlMenu_SetItemState ( $hMenu, $iItem, $iState [, $bState = True [, $bByPos = True]] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$iState","documentation":"Menu item state:    $MFS_CHECKED - Item is checked    $MFS_DEFAULT - Item is the default item    $MFS_DISABLED - Item is disabled    $MFS_GRAYED - Item is disabled    $MFS_HILITE - Item is highlighted"},{"label":"$bState","documentation":"**[optional]** Item state to set:    True - State is enabled    False - State is disabled"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemSubMenu":{"documentation":"Sets the drop down menu or submenu associated with the menu item","label":"_GUICtrlMenu_SetItemSubMenu ( $hMenu, $iItem, $hSubMenu [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$hSubMenu","documentation":"Handle to the drop down menu or submenu"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemText":{"documentation":"Sets the text for a menu item","label":"_GUICtrlMenu_SetItemText ( $hMenu, $iItem, $sText [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$sText","documentation":"Menu item text"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetItemType":{"documentation":"Sets the menu item type","label":"_GUICtrlMenu_SetItemType ( $hMenu, $iItem, $iType [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the menu item"},{"label":"$iType","documentation":"Menu item type. This can be one or more of the following values:    $MFT_BITMAP - Item is displayed using a bitmap    $MFT_MENUBARBREAK - Item is placed on a new line. A vertical line separates the new column from the old.    $MFT_MENUBREAK - Item is placed on a new line. The columns are not separated by a vertical line.    $MFT_OWNERDRAW - Item is owner drawn    $MFT_RADIOCHECK - Item is displayed using a radio button mark    $MFT_RIGHTJUSTIFY - Item is right justified    $MFT_RIGHTORDER - Item cascades from right to left    $MFT_SEPARATOR - Item is a separator"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetMenu":{"documentation":"Assigns a new menu to the specified window","label":"_GUICtrlMenu_SetMenu ( $hWnd, $hMenu )","params":[{"label":"$hWnd","documentation":"Handle to the window to which the menu is to be assigned"},{"label":"$hMenu","documentation":"Handle to the new menu. If 0, the window\'s current menu is removed."}]},"_GUICtrlMenu_SetMenuBackground":{"documentation":"Sets the background brush for the menu","label":"_GUICtrlMenu_SetMenuBackground ( $hMenu, $hBrush )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$hBrush","documentation":"Brush to use for the background"}]},"_GUICtrlMenu_SetMenuContextHelpID":{"documentation":"Sets the context help identifier for the menu","label":"_GUICtrlMenu_SetMenuContextHelpID ( $hMenu, $iHelpID )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iHelpID","documentation":"Context help ID"}]},"_GUICtrlMenu_SetMenuData":{"documentation":"Sets the application defined for the menu","label":"_GUICtrlMenu_SetMenuData ( $hMenu, $iData )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iData","documentation":"Application defined data"}]},"_GUICtrlMenu_SetMenuDefaultItem":{"documentation":"Sets the default menu item","label":"_GUICtrlMenu_SetMenuDefaultItem ( $hMenu, $iItem [, $bByPos = True] )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$iItem","documentation":"Identifier or position of the default menu item or -1 for no default item"},{"label":"$bByPos","documentation":"**[optional]** Menu identifier flag:    True - $iItem is a 0-based item position    False - $iItem is a menu item identifier"}]},"_GUICtrlMenu_SetMenuHeight":{"documentation":"Sets the maximum height of the menu","label":"_GUICtrlMenu_SetMenuHeight ( $hMenu, $iHeight )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iHeight","documentation":"Maximum height of the menu"}]},"_GUICtrlMenu_SetMenuInfo":{"documentation":"Sets information for a specified menu","label":"_GUICtrlMenu_SetMenuInfo ( $hMenu, ByRef $tInfo )","params":[{"label":"$hMenu","documentation":"Menu handle"},{"label":"$tInfo","documentation":"$tagMENUINFO structure"}]},"_GUICtrlMenu_SetMenuStyle":{"documentation":"Sets the menu style","label":"_GUICtrlMenu_SetMenuStyle ( $hMenu, $iStyle )","params":[{"label":"$hMenu","documentation":"Handle of the menu"},{"label":"$iStyle","documentation":"Style of the menu."}]},"_GUICtrlMenu_TrackPopupMenu":{"documentation":"Displays a shortcut menu at the specified location","label":"_GUICtrlMenu_TrackPopupMenu ( $hMenu, $hWnd [, $iX = -1 [, $iY = -1 [, $iAlignX = 1 [, $iAlignY = 1 [, $iNotify = 0 [, $iButtons = 0]]]]]] )","params":[{"label":"$hMenu","documentation":"Handle to the shortcut menu to be displayed"},{"label":"$hWnd","documentation":"Handle to the window that owns the shortcut menu"},{"label":"$iX","documentation":"**[optional]** Specifies the horizontal location of the shortcut menu, in screen coordinates.If this is -1, the current mouse position is used."},{"label":"$iY","documentation":"**[optional]** Specifies the vertical location of the shortcut menu, in screen coordinates.If this is -1, the current mouse position is used."},{"label":"$iAlignX","documentation":"**[optional]** Specifies how to position the menu horizontally:    0 - Center the menu horizontally relative to $iX    1 - Position the menu so that its left side is aligned with $iX    2 - Position the menu so that its right side is aligned with $iX"},{"label":"$iAlignY","documentation":"**[optional]** Specifies how to position the menu vertically:    0 - Position the menu so that its bottom side is aligned with $iY    1 - Position the menu so that its top side is aligned with $iY    2 - Center the menu vertically relative to $iY"},{"label":"$iNotify","documentation":"**[optional]** Use to determine the selection withouta parent window:    1 - Do not send notification messages    2 - Return the menu item identifier of the user\'s selection"},{"label":"$iButtons","documentation":"**[optional]** Mouse button the shortcut menu tracks:    0 - The user can select items with only the left mouse button    1 - The user can select items with both left and right buttons"}]},"_GUICtrlMonthCal_Create":{"documentation":"Creates a Month Calendar control","label":"_GUICtrlMonthCal_Create ( $hWnd, $iX, $iY [, $iStyle = 0x00000000 [, $iExStyle = 0x00000000]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iStyle","documentation":"**[optional]** Control styles:    $MCS_DAYSTATE - The month calendar will send $MCN_GETDAYSTATE notifications to request information about which days should be displayed in bold.    $MCS_MULTISELECT - The month calendar will allow the user to select a range of dates within the control    $MCS_WEEKNUMBERS - The month calendar control will display week numbers to the left of each row of days    $MCS_NOTODAYCIRCLE - The month calendar control will not circle the \\"today\\" date    $MCS_NOTODAY - The month calendar control will not display the \\"today\\" date at the bottomForced: $WS_CHILD, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table."}]},"_GUICtrlMonthCal_Destroy":{"documentation":"Delete the MonthCal control","label":"_GUICtrlMonthCal_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetCalendarBorder":{"documentation":"Gets the size of the border, in pixels","label":"_GUICtrlMonthCal_GetCalendarBorder ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetCalendarCount":{"documentation":"Gets the number of calendars currently displayed in the calendar control","label":"_GUICtrlMonthCal_GetCalendarCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetColor":{"documentation":"Retrieves a given color for the control","label":"_GUICtrlMonthCal_GetColor ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Indicates which month calendar color to retrieve:    $MCSC_BACKGROUND - Background color displayed between months    $MCSC_TEXT - Color used to display text within a month    $MCSC_TITLEBK - Background color displayed in the calendar title    $MCSC_TITLETEXT - Color used to display text within the calendar title    $MCSC_MONTHBK - Background color displayed within the month    $MCSC_TRAILINGTEXT - Color used to display header day and trailing day text"}]},"_GUICtrlMonthCal_GetColorArray":{"documentation":"Retrieves the color for a given portion of a month calendar control","label":"_GUICtrlMonthCal_GetColorArray ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iColor","documentation":"Value of type int specifying which month calendar color to retrieveThis value can be one of the following:    $MCSC_BACKGROUND - Retrieve the background color displayed between months.    $MCSC_MONTHBK - Retrieve the background color displayed within the month.    $MCSC_TEXT - Retrieve the color used to display text within a month.    $MCSC_TITLEBK - Retrieve the background color displayed in the calendar\'s title.    $MCSC_TITLETEXT - Retrieve the color used to display text within the calendar\'s title.    $MCSC_TRAILINGTEXT - Retrieve the color used to display header day and trailing day text."}]},"_GUICtrlMonthCal_GetCurSel":{"documentation":"Retrieves the currently selected date","label":"_GUICtrlMonthCal_GetCurSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetCurSelStr":{"documentation":"Retrieves the currently selected date in string format","label":"_GUICtrlMonthCal_GetCurSelStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFormat","documentation":"**[optional]** StringFormat string used to format the date"}]},"_GUICtrlMonthCal_GetFirstDOW":{"documentation":"Retrieves the first day of the week","label":"_GUICtrlMonthCal_GetFirstDOW ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetFirstDOWStr":{"documentation":"Retrieves the first day of the week as a string","label":"_GUICtrlMonthCal_GetFirstDOWStr ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetMaxSelCount":{"documentation":"Retrieves the maximum date range that can be selected in a month calendar control","label":"_GUICtrlMonthCal_GetMaxSelCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetMaxTodayWidth":{"documentation":"Retrieves the maximum width of the \\"today\\" string in a month calendar control","label":"_GUICtrlMonthCal_GetMaxTodayWidth ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetMinReqHeight":{"documentation":"Retrieves the minimum height required to display a full month","label":"_GUICtrlMonthCal_GetMinReqHeight ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetMinReqRect":{"documentation":"Retrieves the minimum size required to display a full month","label":"_GUICtrlMonthCal_GetMinReqRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetMinReqRectArray":{"documentation":"Retrieves the minimum size required to display a full month in a month calendar control","label":"_GUICtrlMonthCal_GetMinReqRectArray ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetMinReqWidth":{"documentation":"Retrieves the minimum width required to display a full month","label":"_GUICtrlMonthCal_GetMinReqWidth ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetMonthDelta":{"documentation":"Retrieves the scroll rate for a month calendar control","label":"_GUICtrlMonthCal_GetMonthDelta ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetMonthRange":{"documentation":"Retrieves date information that represents the high and low display limits","label":"_GUICtrlMonthCal_GetMonthRange ( $hWnd [, $bPartial = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bPartial","documentation":"**[optional]** Specifies the scope of the range limits to be retrieved:    True - Preceding and trailing months are included    False - Only months that are entirely displayed are included"}]},"_GUICtrlMonthCal_GetMonthRangeMax":{"documentation":"Retrieves date information that represents the high limit of the controls display","label":"_GUICtrlMonthCal_GetMonthRangeMax ( $hWnd [, $bPartial = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bPartial","documentation":"**[optional]** Specifies the scope of the range limits to be retrieved:    True - Preceding and trailing months are included    False - Only months that are entirely displayed are included"}]},"_GUICtrlMonthCal_GetMonthRangeMaxStr":{"documentation":"Retrieves date information that represents the high limit of the controls display in string format","label":"_GUICtrlMonthCal_GetMonthRangeMaxStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFormat","documentation":"**[optional]** StringFormat string used to format the date"}]},"_GUICtrlMonthCal_GetMonthRangeMin":{"documentation":"Retrieves date information that represents the low limit of the controls display","label":"_GUICtrlMonthCal_GetMonthRangeMin ( $hWnd [, $bPartial = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bPartial","documentation":"**[optional]** Specifies the scope of the range limits to be retrieved:    True - Preceding and trailing months are included    False - Only months that are entirely displayed are included"}]},"_GUICtrlMonthCal_GetMonthRangeMinStr":{"documentation":"Retrieves date information that represents the low limit of the controls display in string format","label":"_GUICtrlMonthCal_GetMonthRangeMinStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFormat","documentation":"**[optional]** StringFormat string used to format the date"}]},"_GUICtrlMonthCal_GetMonthRangeSpan":{"documentation":"Returns a value that represents the range, in months, spanned","label":"_GUICtrlMonthCal_GetMonthRangeSpan ( $hWnd [, $bPartial = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bPartial","documentation":"**[optional]** Specifies the scope of the range limits to be retrieved:    True - Preceding and trailing months are included    False - Only months that are entirely displayed are included"}]},"_GUICtrlMonthCal_GetRange":{"documentation":"Retrieves the minimum and maximum allowable dates","label":"_GUICtrlMonthCal_GetRange ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetRangeMax":{"documentation":"Retrieves the upper limit date range","label":"_GUICtrlMonthCal_GetRangeMax ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetRangeMaxStr":{"documentation":"Retrieves the upper limit date range in string format","label":"_GUICtrlMonthCal_GetRangeMaxStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFormat","documentation":"**[optional]** StringFormat string used to format the date"}]},"_GUICtrlMonthCal_GetRangeMin":{"documentation":"Retrieves the lower limit date range","label":"_GUICtrlMonthCal_GetRangeMin ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetRangeMinStr":{"documentation":"Retrieves the lower limit date range in string form","label":"_GUICtrlMonthCal_GetRangeMinStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFormat","documentation":"**[optional]** StringFormat string used to format the date"}]},"_GUICtrlMonthCal_GetSelRange":{"documentation":"Retrieves the upper and lower limits of the date range currently selected","label":"_GUICtrlMonthCal_GetSelRange ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetSelRangeMax":{"documentation":"Retrieves the upper date range currently selected by the user","label":"_GUICtrlMonthCal_GetSelRangeMax ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetSelRangeMaxStr":{"documentation":"Retrieves the upper date range currently selected by the user in string form","label":"_GUICtrlMonthCal_GetSelRangeMaxStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFormat","documentation":"**[optional]** StringFormat string used to format the date"}]},"_GUICtrlMonthCal_GetSelRangeMin":{"documentation":"Retrieves the lower date range currently selected by the user","label":"_GUICtrlMonthCal_GetSelRangeMin ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetSelRangeMinStr":{"documentation":"Retrieves the lower date range currently selected by the user in string form","label":"_GUICtrlMonthCal_GetSelRangeMinStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFormat","documentation":"**[optional]** StringFormat string used to format the date"}]},"_GUICtrlMonthCal_GetToday":{"documentation":"Retrieves the date information for the date specified as \\"today\\"","label":"_GUICtrlMonthCal_GetToday ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_GetTodayStr":{"documentation":"Retrieves the date information for the date specified as \\"today\\" in string format","label":"_GUICtrlMonthCal_GetTodayStr ( $hWnd [, $sFormat = \\"%02d/%02d/%04d\\"] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sFormat","documentation":"**[optional]** StringFormat string used to format the date"}]},"_GUICtrlMonthCal_GetUnicodeFormat":{"documentation":"Retrieves the Unicode character format flag for the control","label":"_GUICtrlMonthCal_GetUnicodeFormat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlMonthCal_HitTest":{"documentation":"Determines which portion of a month calendar control is at a given point","label":"_GUICtrlMonthCal_HitTest ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"X position to test"},{"label":"$iY","documentation":"Y position to test"}]},"_GUICtrlMonthCal_SetCalendarBorder":{"documentation":"Sets the size of the border, in pixels","label":"_GUICtrlMonthCal_SetCalendarBorder ( $hWnd [, $iBorderSize = 4 [, $bSetBorder = True]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iBorderSize","documentation":"**[optional]** Number of pixels of the border size"},{"label":"$bSetBorder","documentation":"**[optional]** One of the Following:    True - The border size is set to the number of pixels that $iBorderSize specifies    False - The border size is reset to the default value specified by the theme, or zero if themes are not being used"}]},"_GUICtrlMonthCal_SetColor":{"documentation":"Sets the color for a given portion of the month calendar","label":"_GUICtrlMonthCal_SetColor ( $hWnd, $iIndex, $iColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Indicates which month calendar color to set:    $MCSC_BACKGROUND - Background color displayed between months    $MCSC_TEXT - Color used to display text within a month    $MCSC_TITLEBK - Background color displayed in the calendar title    $MCSC_TITLETEXT - Color used to display text within the calendar title    $MCSC_MONTHBK - Background color displayed within the month    $MCSC_TRAILINGTEXT - Color used to display header day and trailing day text"},{"label":"$iColor","documentation":"Color value"}]},"_GUICtrlMonthCal_SetCurSel":{"documentation":"Sets the currently selected date","label":"_GUICtrlMonthCal_SetCurSel ( $hWnd, $iYear, $iMonth, $iDay )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iYear","documentation":"Year value"},{"label":"$iMonth","documentation":"Month value"},{"label":"$iDay","documentation":"Day value"}]},"_GUICtrlMonthCal_SetDayState":{"documentation":"Sets the day states for all months that are currently visible","label":"_GUICtrlMonthCal_SetDayState ( $hWnd, $aMasks )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$aMasks","documentation":"An array of integers that corresponds to the months that are visible in the calendar"}]},"_GUICtrlMonthCal_SetFirstDOW":{"documentation":"Sets the first day of the week for a month calendar control","label":"_GUICtrlMonthCal_SetFirstDOW ( $hWnd, $sDay )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sDay","documentation":"In the following format:    0 or \\"Monday\\"    1 or \\"Tuesday\\"    2 or \\"Wednesday\\"    3 or \\"Thursday\\"    4 or \\"Friday\\"    5 or \\"Saturday\\"    6 or \\"Sunday\\""}]},"_GUICtrlMonthCal_SetMaxSelCount":{"documentation":"Sets the maximum number of days that can be selected in a month calendar control","label":"_GUICtrlMonthCal_SetMaxSelCount ( $hWnd, $iMaxSel )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMaxSel","documentation":"Value of type int that will be set to represent the maximum number of days that can be selected"}]},"_GUICtrlMonthCal_SetMonthDelta":{"documentation":"Sets the scroll rate for a month calendar control","label":"_GUICtrlMonthCal_SetMonthDelta ( $hWnd, $iDelta )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iDelta","documentation":"Value representing the number of months to be set as the control\'s scroll rate.If this value is zero, the month delta is reset to the default which is the number of months displayed in the control."}]},"_GUICtrlMonthCal_SetRange":{"documentation":"Sets date information that represents the high and low limits","label":"_GUICtrlMonthCal_SetRange ( $hWnd, $iMinYear, $iMinMonth, $iMinDay, $iMaxYear, $iMaxMonth, $iMaxDay )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMinYear","documentation":"Minimum year"},{"label":"$iMinMonth","documentation":"Minimum month"},{"label":"$iMinDay","documentation":"Minimum day"},{"label":"$iMaxYear","documentation":"Maximum year"},{"label":"$iMaxMonth","documentation":"Maximum month"},{"label":"$iMaxDay","documentation":"Maximum day"}]},"_GUICtrlMonthCal_SetSelRange":{"documentation":"Sets the selection for a month calendar control to a given date range","label":"_GUICtrlMonthCal_SetSelRange ( $hWnd, $iMinYear, $iMinMonth, $iMinDay, $iMaxYear, $iMaxMonth, $iMaxDay )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMinYear","documentation":"Minimum year"},{"label":"$iMinMonth","documentation":"Minimum month"},{"label":"$iMinDay","documentation":"Minimum day"},{"label":"$iMaxYear","documentation":"Maximum year"},{"label":"$iMaxMonth","documentation":"Maximum month"},{"label":"$iMaxDay","documentation":"Maximum day"}]},"_GUICtrlMonthCal_SetToday":{"documentation":"Sets the date information for the date specified as \\"today\\"","label":"_GUICtrlMonthCal_SetToday ( $hWnd, $iYear, $iMonth, $iDay )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iYear","documentation":"Year"},{"label":"$iMonth","documentation":"Month"},{"label":"$iDay","documentation":"Day"}]},"_GUICtrlMonthCal_SetUnicodeFormat":{"documentation":"Sets the Unicode character format flag for the control","label":"_GUICtrlMonthCal_SetUnicodeFormat ( $hWnd [, $bUnicode = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bUnicode","documentation":"**[optional]** Unicode format flag:    True - Control uses Unicode characters    False - Control uses ANSI characters"}]},"_GUICtrlRebar_AddBand":{"documentation":"Adds a new band in a rebar control","label":"_GUICtrlRebar_AddBand ( $hWndRebar, $hWndChild [, $iMinWidth = 100 [, $iDefaultWidth = 100 [, $sText = \\"\\" [, $iIndex = -1 [, $iStyle = -1]]]]] )","params":[{"label":"$hWndRebar","documentation":"Handle to the rebar control"},{"label":"$hWndChild","documentation":"Handle of control to add"},{"label":"$iMinWidth","documentation":"**[optional]** Minimum width for the band"},{"label":"$iDefaultWidth","documentation":"**[optional]** Length of the band, in pixels"},{"label":"$sText","documentation":"**[optional]** Display text for the band"},{"label":"$iIndex","documentation":"**[optional]** 0-based index of the location where the band will be inserted.If you set this parameter to -1, the control will add the new band at the last location"},{"label":"$iStyle","documentation":"**[optional]** Flags that specify the band style. This value can be a combination of the following:    $RBBS_BREAK - The band is on a new line.    $RBBS_CHILDEDGE - The band has an edge at the top and bottom of the child window.    $RBBS_FIXEDBMP - The background bitmap does not move when the band is resized.    $RBBS_FIXEDSIZE - The band can\'t be sized. With this style, the sizing grip is not displayed on the band.    $RBBS_GRIPPERALWAYS - Version 4.71. The band will always have a sizing grip, even if it is the only band in the rebar.    $RBBS_HIDDEN - The band will not be visible.    $RBBS_NOGRIPPER - Version 4.71. The band will never have a sizing grip, even if there is more than one band in the rebar.    $RBBS_USECHEVRON - Version 5.80. Show a chevron button if the band is smaller than cxIdeal.    $RBBS_VARIABLEHEIGHT - Version 4.71. The band can be resized by the rebar control; cyIntegral and cyMaxChild affect how the rebar will resize the band.    $RBBS_NOVERT - Don\'t show when vertical.    $RBBS_USECHEVRON - Display drop-down button.    $RBBS_HIDETITLE - Keep band title hidden.    $RBBS_TOPALIGN - Keep band in top row."}]},"_GUICtrlRebar_AddToolBarBand":{"documentation":"Adds a new band in a rebar control","label":"_GUICtrlRebar_AddToolBarBand ( $hWndRebar, $hWndToolbar [, $sText = \\"\\" [, $iIndex = -1 [, $iStyle = -1]]] )","params":[{"label":"$hWndRebar","documentation":"Handle to the rebar control"},{"label":"$hWndToolbar","documentation":"Handle of the Toolbar control to add"},{"label":"$sText","documentation":"**[optional]** Display text for the band"},{"label":"$iIndex","documentation":"**[optional]** 0-based index of the location where the band will be inserted.If you set this parameter to -1, the control will add the new band at the last location"},{"label":"$iStyle","documentation":"**[optional]** Flags that specify the band style. This value can be a combination of the following:    $RBBS_BREAK - The band is on a new line.    $RBBS_CHILDEDGE - The band has an edge at the top and bottom of the child window.    $RBBS_FIXEDBMP - The background bitmap does not move when the band is resized.    $RBBS_FIXEDSIZE - The band can\'t be sized. With this style, the sizing grip is not displayed on the band.    $RBBS_GRIPPERALWAYS - Version 4.71. The band will always have a sizing grip, even if it is the only band in the rebar.    $RBBS_HIDDEN - The band will not be visible.    $RBBS_NOGRIPPER - Version 4.71. The band will never have a sizing grip, even if there is more than one band in the rebar.    $RBBS_USECHEVRON - Version 5.80. Show a chevron button if the band is smaller than cxIdeal.    $RBBS_VARIABLEHEIGHT - Version 4.71. The band can be resized by the rebar control; cyIntegral and cyMaxChild affect how the rebar will resize the band.    $RBBS_NOVERT - Don\'t show when vertical.    $RBBS_USECHEVRON - Display drop-down button.    $RBBS_HIDETITLE - Keep band title hidden.    $RBBS_TOPALIGN - Keep band in top row."}]},"_GUICtrlRebar_BeginDrag":{"documentation":"Adds a new band in a rebar control","label":"_GUICtrlRebar_BeginDrag ( $hWnd, $iIndex [, $iPos = -1] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band that the drag-and-drop operation will affect"},{"label":"$iPos","documentation":"**[optional]** DWORD value that contains the starting mouse coordinates.The horizontal coordinate is contained in the LOWORD and the vertical coordinate is contained in the HIWORD.If you pass (DWORD)-1, the rebar control will use the position of the mouse the last time the control\'s thread called GetMessage or PeekMessage"}]},"_GUICtrlRebar_Create":{"documentation":"Create a Rebar control","label":"_GUICtrlRebar_Create ( $hWnd [, $iStyles = 0x513] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$iStyles","documentation":"**[optional]** Rebar controls support a variety of control styles in addition to standard window styles:    $RBS_AUTOSIZE - Version 4.71. The rebar control will automatically change the layout of the bands when the size or position of the control changes.        An $RBN_AUTOSIZE notification will be sent when this occurs    $RBS_BANDBORDERS - Version 4.71. The rebar control displays narrow lines to separate adjacent bands    $RBS_DBLCLKTOGGLE - Version 4.71. The rebar band will toggle its maximized or minimized state when the user double-clicks the band.        Without this style, the maximized or minimized state is toggled when the user single-clicks on the band    $RBS_FIXEDORDER - Version 4.70. The rebar control always displays bands in the same order. You can move bands to different rows, but the band order is static    $RBS_REGISTERDROP - Version 4.71. The rebar control generates $RBN_GETOBJECT notification messages when an object is dragged over a band in the control    $RBS_TOOLTIPS - Version 4.71. Not yet supported    $RBS_VARHEIGHT - Version 4.71. The rebar control displays bands at the minimum required height, when possible.        Without this style, the rebar control displays all bands at the same height, using the height of the tallest visible band to determine the height of other bands    $RBS_VERTICALGRIPPER - Version 4.71. The size grip will be displayed vertically instead of horizontally in a vertical rebar control.        This style is ignored for rebar controls that do not have the $CCS_VERT style    $CCS_LEFT - Version 4.70. Causes the control to be displayed vertically on the left side of the parent window    $CCS_NODIVIDER - Prevents a two-pixel highlight from being drawn at the top of the control    $CCS_RIGHT - Version 4.70. Causes the control to be displayed vertically on the right side of the parent window    $CCS_VERT - Version 4.70. Causes the control to be displayed verticallyDefault: $CCS_TOP, $RBS_VARHEIGHTForced: $WS_CHILD, $WS_VISIBLE, $WS_CLIPCHILDREN, $WS_CLIPSIBLINGS"}]},"_GUICtrlRebar_DeleteBand":{"documentation":"Deletes a band from a rebar control","label":"_GUICtrlRebar_DeleteBand ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band to be deleted"}]},"_GUICtrlRebar_Destroy":{"documentation":"Delete the control","label":"_GUICtrlRebar_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_DragMove":{"documentation":"Updates the drag position in the rebar control after a previous _GUICtrlRebar_BeginDrag message","label":"_GUICtrlRebar_DragMove ( $hWnd [, $iPos = -1] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iPos","documentation":"**[optional]** DWORD value that contains the new mouse coordinates.The horizontal coordinate is contained in the LOWORD and the vertical coordinate is contained in the HIWORD.If you pass (DWORD)-1, the rebar control will use the position of the mouse the last time the control\'s thread called GetMessage or PeekMessage"}]},"_GUICtrlRebar_EndDrag":{"documentation":"Terminates the rebar control\'s drag-and-drop operation","label":"_GUICtrlRebar_EndDrag ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetBandBackColor":{"documentation":"Retrieves the Band background color","label":"_GUICtrlRebar_GetBandBackColor ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandBorders":{"documentation":"Retrieves the borders of a band","label":"_GUICtrlRebar_GetBandBorders ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band for which the borders will be retrieved"}]},"_GUICtrlRebar_GetBandBordersEx":{"documentation":"Retrieves the borders of a band","label":"_GUICtrlRebar_GetBandBordersEx ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band for which the borders will be retrieved"}]},"_GUICtrlRebar_GetBandChildHandle":{"documentation":"Retrieves the Handle to the child window contained in the band, if any","label":"_GUICtrlRebar_GetBandChildHandle ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band for which the borders will be retrieved"}]},"_GUICtrlRebar_GetBandChildSize":{"documentation":"Retrieves the Child size settings","label":"_GUICtrlRebar_GetBandChildSize ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandCount":{"documentation":"Retrieves the count of bands currently in the rebar control","label":"_GUICtrlRebar_GetBandCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetBandForeColor":{"documentation":"Retrieves the Band foreground color","label":"_GUICtrlRebar_GetBandForeColor ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandHeaderSize":{"documentation":"Retrieves the size of the band\'s header, in pixels","label":"_GUICtrlRebar_GetBandHeaderSize ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandID":{"documentation":"Get the value that the control uses to identify this band for custom draw notification messages","label":"_GUICtrlRebar_GetBandID ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandIdealSize":{"documentation":"Get Ideal width of the band, in pixels","label":"_GUICtrlRebar_GetBandIdealSize ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandLength":{"documentation":"Get Length of the band, in pixels","label":"_GUICtrlRebar_GetBandLength ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandLParam":{"documentation":"Get Application-defined value","label":"_GUICtrlRebar_GetBandLParam ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandMargins":{"documentation":"Get Length of the band, in pixels","label":"_GUICtrlRebar_GetBandMargins ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetBandMarginsEx":{"documentation":"Get Length of the band, in pixels","label":"_GUICtrlRebar_GetBandMarginsEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetBandRect":{"documentation":"Retrieves the bounding rectangle for a given band in a rebar control","label":"_GUICtrlRebar_GetBandRect ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of a band in the rebar control"}]},"_GUICtrlRebar_GetBandRectEx":{"documentation":"Retrieves the bounding rectangle for a given band in a rebar control","label":"_GUICtrlRebar_GetBandRectEx ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of a band in the rebar control"}]},"_GUICtrlRebar_GetBandStyle":{"documentation":"Get the band style Flags","label":"_GUICtrlRebar_GetBandStyle ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleBreak":{"documentation":"Determine if band break flag is set","label":"_GUICtrlRebar_GetBandStyleBreak ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0based index of the band"}]},"_GUICtrlRebar_GetBandStyleChildEdge":{"documentation":"Determine if band child edge flag is set","label":"_GUICtrlRebar_GetBandStyleChildEdge ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleFixedBMP":{"documentation":"Determine if band fixed BMP flag is set","label":"_GUICtrlRebar_GetBandStyleFixedBMP ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleFixedSize":{"documentation":"Determine if band fixed size flag is set","label":"_GUICtrlRebar_GetBandStyleFixedSize ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleGripperAlways":{"documentation":"Determine if band gripper flag is set","label":"_GUICtrlRebar_GetBandStyleGripperAlways ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleHidden":{"documentation":"Determine if band hidden flag is set","label":"_GUICtrlRebar_GetBandStyleHidden ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleHideTitle":{"documentation":"Determine if band hide title flag is set","label":"_GUICtrlRebar_GetBandStyleHideTitle ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleNoGripper":{"documentation":"Determine if band noGripper flag is set","label":"_GUICtrlRebar_GetBandStyleNoGripper ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleTopAlign":{"documentation":"Determine if band top align flag is set","label":"_GUICtrlRebar_GetBandStyleTopAlign ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleUseChevron":{"documentation":"Determine if band use chevron flag is set","label":"_GUICtrlRebar_GetBandStyleUseChevron ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandStyleVariableHeight":{"documentation":"Determine if band variable height flag is set","label":"_GUICtrlRebar_GetBandStyleVariableHeight ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_GetBandText":{"documentation":"Retrieves the display text for the band","label":"_GUICtrlRebar_GetBandText ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band for which the information will be retrieved"}]},"_GUICtrlRebar_GetBarHeight":{"documentation":"Retrieves the height of the rebar control","label":"_GUICtrlRebar_GetBarHeight ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetBarInfo":{"documentation":"Retrieves information about the rebar control and the image list it uses","label":"_GUICtrlRebar_GetBarInfo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetBKColor":{"documentation":"Retrieves a rebar control\'s default background color","label":"_GUICtrlRebar_GetBKColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetColorScheme":{"documentation":"Retrieves the color scheme information from the rebar control","label":"_GUICtrlRebar_GetColorScheme ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetRowCount":{"documentation":"Retrieves the number of rows of bands in a rebar control","label":"_GUICtrlRebar_GetRowCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetRowHeight":{"documentation":"Retrieves the height of a specified row in a rebar control","label":"_GUICtrlRebar_GetRowHeight ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of a band. The height of the row that contains the specified band will be retrieved"}]},"_GUICtrlRebar_GetTextColor":{"documentation":"Retrieves a rebar control\'s default text color","label":"_GUICtrlRebar_GetTextColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetToolTips":{"documentation":"Retrieves the handle to any ToolTip control associated with the rebar control","label":"_GUICtrlRebar_GetToolTips ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_GetUnicodeFormat":{"documentation":"Retrieves the Unicode character format flag for the control","label":"_GUICtrlRebar_GetUnicodeFormat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"}]},"_GUICtrlRebar_HitTest":{"documentation":"Determines which band is at a specified position","label":"_GUICtrlRebar_HitTest ( $hWnd [, $iX = -1 [, $iY = -1]] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iX","documentation":"**[optional]** X position, in client coordinates, to be tested or -1 to use the current mouse position"},{"label":"$iY","documentation":"**[optional]** Y position, in client coordinates, to be tested or -1 to use the current mouse position"}]},"_GUICtrlRebar_IDToIndex":{"documentation":"Converts a band identifier to a band index in a rebar control","label":"_GUICtrlRebar_IDToIndex ( $hWnd, $iID )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iID","documentation":"The application-defined identifier of the band in question"}]},"_GUICtrlRebar_MaximizeBand":{"documentation":"Resizes a band in a rebar control to either its ideal or largest size","label":"_GUICtrlRebar_MaximizeBand ( $hWnd, $iIndex [, $bIdeal = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bIdeal","documentation":"**[optional]** Indicates if the ideal width of the band should be used when the band is maximized"}]},"_GUICtrlRebar_MinimizeBand":{"documentation":"Resizes a band in a rebar control to its smallest size","label":"_GUICtrlRebar_MinimizeBand ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"}]},"_GUICtrlRebar_MoveBand":{"documentation":"Moves a band from one index to another","label":"_GUICtrlRebar_MoveBand ( $hWnd, $iIndexFrom, $iIndexTo )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndexFrom","documentation":"0-based index of the band to be moved"},{"label":"$iIndexTo","documentation":"0-based index of the new band position"}]},"_GUICtrlRebar_SetBandBackColor":{"documentation":"Set the Band background color","label":"_GUICtrlRebar_SetBandBackColor ( $hWnd, $iIndex, $iColor )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$iColor","documentation":"New color for band background"}]},"_GUICtrlRebar_SetBandForeColor":{"documentation":"Set the Band foreground color","label":"_GUICtrlRebar_SetBandForeColor ( $hWnd, $iIndex, $iColor )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$iColor","documentation":"New color for band foreground"}]},"_GUICtrlRebar_SetBandHeaderSize":{"documentation":"Set the size of the band\'s header, in pixels","label":"_GUICtrlRebar_SetBandHeaderSize ( $hWnd, $iIndex, $iNewSize )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$iNewSize","documentation":"New size of the band\'s header"}]},"_GUICtrlRebar_SetBandID":{"documentation":"Set the value that the control uses to identify this band for custom draw notification messages","label":"_GUICtrlRebar_SetBandID ( $hWnd, $iIndex, $iID )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$iID","documentation":"value that the control uses to identify this band for custom draw notification messages"}]},"_GUICtrlRebar_SetBandIdealSize":{"documentation":"Set Ideal width of the band, in pixels","label":"_GUICtrlRebar_SetBandIdealSize ( $hWnd, $iIndex, $iNewSize )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$iNewSize","documentation":"Ideal width of the band, in pixels"}]},"_GUICtrlRebar_SetBandLength":{"documentation":"Set the size length of the band","label":"_GUICtrlRebar_SetBandLength ( $hWnd, $iIndex, $iLength )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$iLength","documentation":"Length of the band, in pixels"}]},"_GUICtrlRebar_SetBandLParam":{"documentation":"Set Application-defined value","label":"_GUICtrlRebar_SetBandLParam ( $hWnd, $iIndex, $lParam )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$lParam","documentation":"Application-defined value"}]},"_GUICtrlRebar_SetBandStyle":{"documentation":"Set the band style Flags","label":"_GUICtrlRebar_SetBandStyle ( $hWnd, $iIndex, $iStyle )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$iStyle","documentation":"see $tagREBARBANDINFO"}]},"_GUICtrlRebar_SetBandStyleBreak":{"documentation":"Set whether the band is on a new line","label":"_GUICtrlRebar_SetBandStyleBreak ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleChildEdge":{"documentation":"Set whether the band has an edge at the top and bottom of the child window","label":"_GUICtrlRebar_SetBandStyleChildEdge ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleFixedBMP":{"documentation":"Set whether the band background bitmap does not move when the band is resized","label":"_GUICtrlRebar_SetBandStyleFixedBMP ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleFixedSize":{"documentation":"Set whether the band can\'t be sized. With this style, the sizing grip is not displayed on the band","label":"_GUICtrlRebar_SetBandStyleFixedSize ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleGripperAlways":{"documentation":"Set whether the band will always have a sizing grip, even if it is the only band in the rebar","label":"_GUICtrlRebar_SetBandStyleGripperAlways ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleHidden":{"documentation":"Set whether the band will not be visible","label":"_GUICtrlRebar_SetBandStyleHidden ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleHideTitle":{"documentation":"Set whether to keep band title hidden","label":"_GUICtrlRebar_SetBandStyleHideTitle ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleNoGripper":{"documentation":"Set whether the band will never have a sizing grip, even if there is more than one band in the rebar","label":"_GUICtrlRebar_SetBandStyleNoGripper ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleTopAlign":{"documentation":"Set whether to keep band in top row","label":"_GUICtrlRebar_SetBandStyleTopAlign ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleUseChevron":{"documentation":"Set whether to display drop-down button","label":"_GUICtrlRebar_SetBandStyleUseChevron ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandStyleVariableHeight":{"documentation":"Set whether the band can be resized by the rebar control","label":"_GUICtrlRebar_SetBandStyleVariableHeight ( $hWnd, $iIndex [, $bEnabled = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bEnabled","documentation":"**[optional]** If True the item state is set, otherwise it is not set"}]},"_GUICtrlRebar_SetBandText":{"documentation":"Sets the display text for the band of a rebar control","label":"_GUICtrlRebar_SetBandText ( $hWnd, $iIndex, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band for which the information will be set"},{"label":"$sText","documentation":"New display text for the band"}]},"_GUICtrlRebar_SetBarInfo":{"documentation":"Sets the characteristics of a rebar control","label":"_GUICtrlRebar_SetBarInfo ( $hWnd, $hIml )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$hIml","documentation":"Handle to the Image list"}]},"_GUICtrlRebar_SetBKColor":{"documentation":"Sets the default background color of a rebar control","label":"_GUICtrlRebar_SetBKColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iColor","documentation":"COLORREF value that represents the new default background color"}]},"_GUICtrlRebar_SetColorScheme":{"documentation":"Sets the color scheme of a rebar control","label":"_GUICtrlRebar_SetColorScheme ( $hWnd, $iBtnHighlight, $iBtnShadow )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iBtnHighlight","documentation":"COLORREF value that represents the highlight color of the buttons"},{"label":"$iBtnShadow","documentation":"COLORREF value that represents the shadow color of the buttons"}]},"_GUICtrlRebar_SetTextColor":{"documentation":"Sets a rebar control\'s default text color","label":"_GUICtrlRebar_SetTextColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iColor","documentation":"COLORREF value that represents the new default text color"}]},"_GUICtrlRebar_SetToolTips":{"documentation":"Associates a ToolTip control with the rebar control","label":"_GUICtrlRebar_SetToolTips ( $hWnd, $hToolTip )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$hToolTip","documentation":"Handle to the ToolTip control to be set"}]},"_GUICtrlRebar_SetUnicodeFormat":{"documentation":"Sets the Unicode character format flag for the control","label":"_GUICtrlRebar_SetUnicodeFormat ( $hWnd [, $bUnicode = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$bUnicode","documentation":"**[optional]** Determines the character set that is used by the control:    True - The control will use Unicode characters    False - The control will use ANSI characters"}]},"_GUICtrlRebar_ShowBand":{"documentation":"Shows or hides a given band in a rebar control","label":"_GUICtrlRebar_ShowBand ( $hWnd, $iIndex [, $bShow = True] )","params":[{"label":"$hWnd","documentation":"Handle to the rebar control"},{"label":"$iIndex","documentation":"0-based index of the band"},{"label":"$bShow","documentation":"**[optional]** indicates if the band should be shown or hidden:    True - Show    False - Hide"}]},"_GUICtrlRichEdit_AppendText":{"documentation":"Appends text at the end of the client area","label":"_GUICtrlRichEdit_AppendText ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Text to be appended"}]},"_GUICtrlRichEdit_AutoDetectURL":{"documentation":"Enables or disables automatic detection of URLS","label":"_GUICtrlRichEdit_AutoDetectURL ( $hWnd, $bState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"True to detect URLs in text, False not to"}]},"_GUICtrlRichEdit_CanPaste":{"documentation":"Can the contents of the clipboard be pasted into the control?","label":"_GUICtrlRichEdit_CanPaste ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_CanPasteSpecial":{"documentation":"Can the contents of the clipboard be pasted into the control in both formats?","label":"_GUICtrlRichEdit_CanPasteSpecial ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_CanRedo":{"documentation":"Can an undone action be redone?","label":"_GUICtrlRichEdit_CanRedo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_CanUndo":{"documentation":"Can an action be undone?","label":"_GUICtrlRichEdit_CanUndo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_ChangeFontSize":{"documentation":"Increment or decrement font size(s) of selected text","label":"_GUICtrlRichEdit_ChangeFontSize ( $hWnd, $iIncrement )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIncrement","documentation":"Positive to increase, negative to decrease"}]},"_GUICtrlRichEdit_Copy":{"documentation":"Copy text to clipboard","label":"_GUICtrlRichEdit_Copy ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_Create":{"documentation":"Create an Edit control","label":"_GUICtrlRichEdit_Create ( $hWnd, $sText, $iLeft, $iTop [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = -1 [, $iExStyle = -1]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$sText","documentation":"Text to be displayed in the control"},{"label":"$iLeft","documentation":"Horizontal position of the control"},{"label":"$iTop","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control styles:    $ES_AUTOHSCROLL - Automatically scrolls text to the right by 10 characters when the user types a character at the end of the line.    $ES_AUTOVSCROLL - Automatically scrolls text up one page when the user presses the ENTER key on the last line.    $WS_HSCROLL - Control has horizontal scroll bar    $WS_VSCROLL - Control has vertical scroll bar    $ES_CENTER - Centers text in an edit control.    $ES_LEFT - Aligns text with the left margin.    $ES_MULTILINE - Generates a multi-line control (Default)    $ES_NOHIDESEL - The selected text is inverted, even if the control does not have the focus.    $ES_NUMBER - Allows only digits to be entered into the edit control.    $ES_READONLY - Prevents the user from typing or editing text in the edit control.    $ES_RIGHT - Right-aligns text edit control.    $ES_WANTRETURN - Specifies that a carriage return be inserted when the user presses the ENTER key. (Default)    $ES_PASSWORD - Displays an asterisk (*) for each character that is typed into the edit controlDefault: 0Forced : WS_CHILD, $WS_VISIBLE, $WS_TABSTOP unless $ES_READONLY"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table."}]},"_GUICtrlRichEdit_Cut":{"documentation":"Cut text to clipboard","label":"_GUICtrlRichEdit_Cut ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_Deselect":{"documentation":"Deselects text, leaving none selected","label":"_GUICtrlRichEdit_Deselect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_Destroy":{"documentation":"Delete the Rich Edit control","label":"_GUICtrlRichEdit_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlRichEdit_EmptyUndoBuffer":{"documentation":"Resets the undo flag of the control","label":"_GUICtrlRichEdit_EmptyUndoBuffer ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_FindText":{"documentation":"Search for a text starting at insertion point or at anchor point of selection","label":"_GUICtrlRichEdit_FindText ( $hWnd, $sText [, $bForward = True [, $bMatchCase = False [, $bWholeWord = False [, $iBehavior = 0]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Text to find"},{"label":"$bForward","documentation":"**[optional]** Search direction(Win 95: search is always forward)"},{"label":"$bMatchCase","documentation":"**[optional]** Search is case-sensitiveDefault: case-insensitive"},{"label":"$bWholeWord","documentation":"**[optional]** Search only for text as a whole wordDefault: partial or full word"},{"label":"$iBehavior","documentation":"**[optional]** Any BitOR combination of $FR_MATCHALEFHAMZA, $FR_MATCHDIAC and $FR_MATCHKASHIDADefault: 0"}]},"_GUICtrlRichEdit_FindTextInRange":{"documentation":"Search for a text in a range of inter-character positions","label":"_GUICtrlRichEdit_FindTextInRange ( $hWnd, $sText [, $iStart = 0 [, $iEnd = -1 [, $bMatchCase = False [, $bWholeWord = False [, $iBehavior = 0]]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Text to find"},{"label":"$iStart","documentation":"**[optional]** Starting inter-character position of searchDefault: beginning of control"},{"label":"$iEnd","documentation":"**[optional]** Ending inter-character position of searchDefault: end of control"},{"label":"$bMatchCase","documentation":"**[optional]** Search is case-sensitiveDefault: case-insensitive"},{"label":"$bWholeWord","documentation":"**[optional]** Search only for text as a whole wordDefault: partial or full word"},{"label":"$iBehavior","documentation":"**[optional]** Any BitOR combination of $FR_MATCHALEFHAMZA, $FR_MATCHDIAC and $FR_MATCHKASHIDADefault: 0"}]},"_GUICtrlRichEdit_GetBkColor":{"documentation":"Gets the background color of the control","label":"_GUICtrlRichEdit_GetBkColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetCharAttributes":{"documentation":"Returns attributes of selected text","label":"_GUICtrlRichEdit_GetCharAttributes ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetCharBkColor":{"documentation":"Retrieves the background color of the selected text or, if none selected, of the character to the right of the insertion point","label":"_GUICtrlRichEdit_GetCharBkColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetCharColor":{"documentation":"Retrieves the color of the selected text or, if none selected, of the character to the right of the insertion point","label":"_GUICtrlRichEdit_GetCharColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetCharPosFromXY":{"documentation":"Gets inter-character position closest to a specified point in the client area","label":"_GUICtrlRichEdit_GetCharPosFromXY ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iX","documentation":"horizontal coordinate relative to left side of control"},{"label":"$iY","documentation":"vertical coordinate relative to top of control"}]},"_GUICtrlRichEdit_GetCharPosOfNextWord":{"documentation":"Gets inter-character position before the next word","label":"_GUICtrlRichEdit_GetCharPosOfNextWord ( $hWnd, $iCpStart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCPStart","documentation":"inter-character position to start from"}]},"_GUICtrlRichEdit_GetCharPosOfPreviousWord":{"documentation":"Gets inter-character position before the Previous word","label":"_GUICtrlRichEdit_GetCharPosOfPreviousWord ( $hWnd, $iCpStart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCPStart","documentation":"inter-character position to start from"}]},"_GUICtrlRichEdit_GetCharWordBreakInfo":{"documentation":"Gets inter-character position before the Previous word/","label":"_GUICtrlRichEdit_GetCharWordBreakInfo ( $hWnd, $iCp )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCP","documentation":"Inter-character position to left of character of interest"}]},"_GUICtrlRichEdit_GetFirstCharPosOnLine":{"documentation":"Retrieves the inter-character position preceding the first character of a line","label":"_GUICtrlRichEdit_GetFirstCharPosOnLine ( $hWnd [, $iLine = -1] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iLine","documentation":"**[optional]** Line numberDefault: current line"}]},"_GUICtrlRichEdit_GetFont":{"documentation":"Gets the font attributes of a selection or, if no selection, at the insertion point","label":"_GUICtrlRichEdit_GetFont ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetLineCount":{"documentation":"Retrieves the number of lines in a multi-line edit control","label":"_GUICtrlRichEdit_GetLineCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetLineLength":{"documentation":"Retrieves the length of a line","label":"_GUICtrlRichEdit_GetLineLength ( $hWnd, $iLine )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iLine","documentation":"line numberSpecial value: -1 - return number of unselected characters on lines containing selected characters"}]},"_GUICtrlRichEdit_GetLineNumberFromCharPos":{"documentation":"Retrieves the line number on which an inter-character position is found","label":"_GUICtrlRichEdit_GetLineNumberFromCharPos ( $hWnd, $iCharPos )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCharPos","documentation":"Inter-character position"}]},"_GUICtrlRichEdit_GetNextRedo":{"documentation":"Retrieves the name or type ID of the next possible redo action","label":"_GUICtrlRichEdit_GetNextRedo ( $hWnd [, $bName = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bName","documentation":"**[optional]** True (return name, default) or False (return ID number)"}]},"_GUICtrlRichEdit_GetNextUndo":{"documentation":"Retrieves the name or type ID of the next possible Undo action","label":"_GUICtrlRichEdit_GetNextUndo ( $hWnd [, $bName = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bName","documentation":"**[optional]** True (return name, default) or False (return ID number)"}]},"_GUICtrlRichEdit_GetNumberOfFirstVisibleLine":{"documentation":"Gets number of the first line which is visible in the control","label":"_GUICtrlRichEdit_GetNumberOfFirstVisibleLine ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetParaAlignment":{"documentation":"Gets the alignment of selected paragraph(s), or (if no selection) of the current paragraph","label":"_GUICtrlRichEdit_GetParaAlignment ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetParaAttributes":{"documentation":"Gets the attributes of (first) selected paragraph or (if no selection) of the current paragraph","label":"_GUICtrlRichEdit_GetParaAttributes ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetParaBorder":{"documentation":"Gets the border settings of (first) selected paragraph or (if no selection) of the current paragraph","label":"_GUICtrlRichEdit_GetParaBorder ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetParaIndents":{"documentation":"Gets the border indent settings of (first) selected paragraph or (if no selection) of the current paragraph","label":"_GUICtrlRichEdit_GetParaIndents ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetParaNumbering":{"documentation":"Gets the numbering style of (first) selected paragraph or (if no selection) of the current paragraph","label":"_GUICtrlRichEdit_GetParaNumbering ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetParaShading":{"documentation":"Gets the shading settings of (first) selected paragraph or (if no selection) of the current paragraph","label":"_GUICtrlRichEdit_GetParaShading ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetParaSpacing":{"documentation":"Gets the spacing settings of (first) selected paragraph or (if no selection) of the current paragraph","label":"_GUICtrlRichEdit_GetParaSpacing ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetParaTabStops":{"documentation":"Gets the tabstops of (first) selected paragraph or (if no selection) of the current paragraph","label":"_GUICtrlRichEdit_GetParaTabStops ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetPasswordChar":{"documentation":"Gets the password character that a rich edit control displays when the user enters text","label":"_GUICtrlRichEdit_GetPasswordChar ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetRECT":{"documentation":"Retrieves the formatting rectangle of a control","label":"_GUICtrlRichEdit_GetRECT ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetScrollPos":{"documentation":"Gets the Scrolling position of the control","label":"_GUICtrlRichEdit_GetScrollPos ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetSel":{"documentation":"Gets the low and high inter-character positions of a selection","label":"_GUICtrlRichEdit_GetSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetSelAA":{"documentation":"Gets the anchor and active inter-character positions of a selection, in that order","label":"_GUICtrlRichEdit_GetSelAA ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetSelText":{"documentation":"Retrieves the currently selected text","label":"_GUICtrlRichEdit_GetSelText ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GetSpaceUnit":{"documentation":"Gets the unit of measure of horizontal and vertical space used in parameters of various _GUICtrlRichEdit functions","label":"_GUICtrlRichEdit_GetSpaceUnit (  )","params":[]},"_GUICtrlRichEdit_GetText":{"documentation":"Get all of the text in the control","label":"_GUICtrlRichEdit_GetText ( $hWnd [, $bCrToCrLf = False [, $iCodePage = 0 [, $sReplChar = \\"\\"]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bCrToCrLf","documentation":"**[optional]** Convert each CR to a CrLf    True - do it    False - don\'t (Default)"},{"label":"$iCodePage","documentation":"**[optional]** code page used in translationDefault: use system defaultCP_ACP for ANSI, 1200 for Unicode"},{"label":"$sReplChar","documentation":"**[optional]** Character used if $iCodePage is not 1200 and a wide character cannot be represented in specified code page"}]},"_GUICtrlRichEdit_GetTextInLine":{"documentation":"Gets a line of text","label":"_GUICtrlRichEdit_GetTextInLine ( $hWnd, $iLine )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iLine","documentation":"Line number"}]},"_GUICtrlRichEdit_GetTextInRange":{"documentation":"Gets the text from from one inter-character position to another","label":"_GUICtrlRichEdit_GetTextInRange ( $hWnd, $iStart, $iEnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iStart","documentation":"Inter-character position before the text"},{"label":"$iEnd","documentation":"Inter-character position after the textSpecial value: -1 - end of text"}]},"_GUICtrlRichEdit_GetTextLength":{"documentation":"Get the length of the whole text in the control","label":"_GUICtrlRichEdit_GetTextLength ( $hWnd [, $bExact = True [, $bChars = False]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bExact","documentation":"**[optional]**    True - Return the exact length    False - return at least the number of characters in the control (faster)Default: exact length"},{"label":"$bChars","documentation":"**[optional]**    True - return length in characters    False - return length in bytesDefault: bytes"}]},"_GUICtrlRichEdit_GetVersion":{"documentation":"Retrieves the version of Rich Edit","label":"_GUICtrlRichEdit_GetVersion (  )","params":[]},"_GUICtrlRichEdit_GetXYFromCharPos":{"documentation":"Retrieves the XY coordinates of an inter-character position","label":"_GUICtrlRichEdit_GetXYFromCharPos ( $hWnd, $iCharPos )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCharPos","documentation":"Inter-character position"}]},"_GUICtrlRichEdit_GetZoom":{"documentation":"Gets the zoom level of the control","label":"_GUICtrlRichEdit_GetZoom ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_GotoCharPos":{"documentation":"Moves the insertion point to an inter-character position","label":"_GUICtrlRichEdit_GotoCharPos ( $hWnd, $iCharPos )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCharPos","documentation":"the inter character positionSpecial value: -1 - end of text"}]},"_GUICtrlRichEdit_HideSelection":{"documentation":"Hides (or shows) a selection","label":"_GUICtrlRichEdit_HideSelection ( $hWnd [, $bHide = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bHide","documentation":"**[optional]**    True - hide    False - showDefault: hide"}]},"_GUICtrlRichEdit_InsertText":{"documentation":"Inserts text at insertion point or anchor point of selection","label":"_GUICtrlRichEdit_InsertText ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Text to be inserted"}]},"_GUICtrlRichEdit_IsModified":{"documentation":"Retrieves the state of a rich edit control\'s modification flag","label":"_GUICtrlRichEdit_IsModified ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_IsTextSelected":{"documentation":"Is text selected?","label":"_GUICtrlRichEdit_IsTextSelected ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_Paste":{"documentation":"Paste RTF or RTF with Objects from clipboard","label":"_GUICtrlRichEdit_Paste ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_PasteSpecial":{"documentation":"Paste RTF or RTF and Objects from clipboard","label":"_GUICtrlRichEdit_PasteSpecial ( $hWnd [, $bAndObjects = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bAndObjects","documentation":"**[optional]** Paste objects as well as RTF - True (default) or False"}]},"_GUICtrlRichEdit_PauseRedraw":{"documentation":"Pauses redrawing of the control","label":"_GUICtrlRichEdit_PauseRedraw ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_Redo":{"documentation":"Redoes last undone action","label":"_GUICtrlRichEdit_Redo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_ReplaceText":{"documentation":"Replaces selected text","label":"_GUICtrlRichEdit_ReplaceText ( $hWnd, $sText [, $bCanUndo = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Replacement text"},{"label":"$bCanUndo","documentation":"**[optional]** Can operation can be undone? True (Default) or False"}]},"_GUICtrlRichEdit_ResumeRedraw":{"documentation":"Resumes redrawing of the control","label":"_GUICtrlRichEdit_ResumeRedraw ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_ScrollLineOrPage":{"documentation":"Scrolls the text down or up a line or a page","label":"_GUICtrlRichEdit_ScrollLineOrPage ( $hWnd, $sAction )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sAction","documentation":"one of the following:    \\"ld\\" - line down    \\"lu\\" - line up    \\"pd\\" - page down    \\"pu\\" - page up"}]},"_GUICtrlRichEdit_ScrollLines":{"documentation":"Scrolls the text down or up a number of lines","label":"_GUICtrlRichEdit_ScrollLines ( $hWnd, $iQlines )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iQlines","documentation":"number of lines to scroll"}]},"_GUICtrlRichEdit_ScrollToCaret":{"documentation":"Scrolls to show line on which caret (insertion point) is","label":"_GUICtrlRichEdit_ScrollToCaret ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlRichEdit_SetBkColor":{"documentation":"Sets the background color of the control","label":"_GUICtrlRichEdit_SetBkColor ( $hWnd [, $iBngColor = Default] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iBngColor","documentation":"**[optional]** one of the following:a number - a COLORREF valueDefault keyword - the system color (default)"}]},"_GUICtrlRichEdit_SetCharAttributes":{"documentation":"Turns an attribute on or off for selected text or, if none selected, for text inserted at the insertion point","label":"_GUICtrlRichEdit_SetCharAttributes ( $hWnd, $sStatesAndEffects [, $bWord = False] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sStatesAndEffects","documentation":"a string consisting of three character groups: + (or -) for the state, and a two-letter abbreviation for the attributefirst character: + for on, - for offsecond and third character: any of:    bo - bold    di - disable - displays characters with a shadow [nd]    em - emboss [nd]    hi - hide, i.e. don\'t display    im - imprint [nd]    it - italcize    li - send EN_LINK messages when mouse is over text with this attribute    ou - outline [nd]    pr - send EN_PROTECT when user attempts to modify    re - mark as revised [nd]    sh - shadow [nd]    sm - small capital letters [nd]    st - strike out    sb - subscript [nd]    sp - superscript [nd]    un - underline"},{"label":"$bWord","documentation":"**[optional]** True    If text is selected, apply the attribute to whole words in the selected text    If not:    If the insertion point is in a word, or at the end of it, apply the attribute to the word    If not, apply the attribute to text inserted at the insertion pointFalse (Default)    If text is selected, apply the attribute to the selected text    If not, apply the attribute to text inserted at the insertion point"}]},"_GUICtrlRichEdit_SetCharBkColor":{"documentation":"Sets the background color of selected text or, if none selected, sets the background color of text inserted at the insertion point","label":"_GUICtrlRichEdit_SetCharBkColor ( $hWnd [, $iBkColor = Default] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iBkColor","documentation":"**[optional]** one of the following:a number - a COLORREF valueDefault keyword - the system color (default)"}]},"_GUICtrlRichEdit_SetCharColor":{"documentation":"Sets the color of selected text or, if none selected, sets the background color of text inserted at the insertion point","label":"_GUICtrlRichEdit_SetCharColor ( $hWnd [, $iColor = Default] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iColor","documentation":"**[optional]** one of the following:a number - a COLORREF valueDefault keyword - the system color (default)"}]},"_GUICtrlRichEdit_SetEventMask":{"documentation":"Specifies which notification messages are sent to the parent window","label":"_GUICtrlRichEdit_SetEventMask ( $hWnd, $iEventMask )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iEventMask","documentation":"BitOR combination of :    $ENM_CHANGE - Sends $EN_CHANGE notifications (user may have altered text)    $ENM_CORRECTTEXT - Sends $EN_CORRECTTEXT notifications (parent window can cancel correction of text)    $ENM_DRAGDROPDONE - Sends $EN_DRAGDROPDONE notifications (drag and drop operation completed)    $ENM_DROPFILES - Sends $EN_DROPFILES notifications (user is attempting to drop files into the control)    $ENM_KEYEVENTS - Sends $EN_MSGFILTER notifications for keyboard events    $ENM_LINK - Sends $EN_LINK notifications when the mouse pointer is over text having the link character attribute set and when user clicks the mouse [2.0+]    $ENM_MOUSEEVENTS - Sends $EN_MSGFILTER notifications for mouse events to parent window    $ENM_OBJECTPOSITIONS - Sends $EN_OBJECTPOSITIONS notifications when the control reads in objects    $ENM_PROTECTED - Sends $EN_PROTECTED notifications when the user attempts to change characters having the protected attribute set    $ENM_REQUESTRESIZE - Sends $EN_REQUESTRESIZE notifications that the control\'s contents are either smaller or larger than the control\'s window size    $ENM_SCROLL - Sends $EN_HSCROLL and $EN_VSCROLL notifications when the user clicks the horizontal/vertical scroll bar    $ENM_SCROLLEVENTS - Sends EN_MSGFILTER notifications for mouse wheel events    $ENM_SELCHANGE - Sends EN_SELCHANGE notifications when the current selection changes    $ENM_UPDATE - Sends EN_UPDATE notifications when a control is about to redraw itselfor    $ENM_NONE - Disables sending of notification messages to the parent window"}]},"_GUICtrlRichEdit_SetFont":{"documentation":"Sets the font attributes of selected text or, if none selected, sets those of text inserted at the insertion point","label":"_GUICtrlRichEdit_SetFont ( $hWnd [, $iPoints = Default [, $sName = Default [, $iCharset = Default [, $iLcid = Default]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPoints","documentation":"**[optional]** point size"},{"label":"$sName","documentation":"**[optional]** the name of the font face, e.g. \\"Courier\\" not \\"Courier Bold\\""},{"label":"$iCharSet","documentation":"**[optional]** the character set - one of:    $ANSI_CHARSET - 0    $BALTIC_CHARSET - 186    $CHINESEBIG5_CHARSET - 136    $DEFAULT_CHARSET - 1    $EASTEUROPE_CHARSET - 238    $GB2312_CHARSET - 134    $GREEK_CHARSET - 161    $HANGEUL_CHARSET - 129    $MAC_CHARSET - 77    $OEM_CHARSET - 255    $RUSSIAN_CHARSET - 204    $SHIFTJIS_CHARSET - 128    $SYMBOL_CHARSET - 2    $TURKISH_CHARSET - 162    $VIETNAMESE_CHARSET - 163"},{"label":"$iLcid","documentation":"**[optional]** see http://www.microsoft.com/globaldev/reference/lcid-all.mspx"}]},"_GUICtrlRichEdit_SetLimitOnText":{"documentation":"Change number of characters that can be typed, pasted or streamed in as Rich Text Format","label":"_GUICtrlRichEdit_SetLimitOnText ( $hWnd, $iNewLimit )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iNewLimit","documentation":"new limit"}]},"_GUICtrlRichEdit_SetModified":{"documentation":"Sets or clears the modification flag","label":"_GUICtrlRichEdit_SetModified ( $hWnd [, $bState = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"**[optional]** Specifies the new value for the modification flag:True - Indicates that the text has been modified (default)False - Indicates it has not been modified."}]},"_GUICtrlRichEdit_SetParaAlignment":{"documentation":"Sets alignment of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","label":"_GUICtrlRichEdit_SetParaAlignment ( $hWnd, $sAlignment )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sAlignment","documentation":"values:    \\"l\\" - align with the left margin.    \\"r\\" - align with the right margin.    \\"c\\" - center between margins    \\"j\\" - justify between margins    \\"f\\" - justify between margins by only expanding spaces"}]},"_GUICtrlRichEdit_SetParaAttributes":{"documentation":"Sets attributes of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","label":"_GUICtrlRichEdit_SetParaAttributes ( $hWnd, $sStatesAndAtts )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sStatesAndAtts","documentation":"a string consisting of groups separated by semicolons \\";\\".Each group consists of:First character - state:    + - turn attribute on    - - turn attribute off    \\"fpg\\" - force this/these paragraphs on to new page(s) (Initially off)    \\"hyp\\" - automatic hypthenation (Initially on)    \\"kpt\\" - keep this/these paragraph(s) together on a page (Initially off}    \\"kpn\\" - keep this/these paragraph(s) and the next together on a page (Initially off)    \\"pwo\\" - prevent widows and orphans, i.e. avoid a single line of this/these paragraphson a page (Initially off)    \\"r2l\\" - display text using right-to-left reading order (Initially off)    \\"row\\" - paragraph(s) is/are table row(s) (Initially off)    \\"sbs\\" - display paragraphs side by side (Initially off)    \\"sln\\" - suppress line numbers in documents or sections with line numbers (Initially off)"}]},"_GUICtrlRichEdit_SetParaBorder":{"documentation":"Sets the border of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","label":"_GUICtrlRichEdit_SetParaBorder ( $hWnd [, $sLocation = Default [, $vLineStyle = Default [, $sColor = Default [, $iSpace = Default]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sLocation","documentation":"**[optional]** a string consisting of any logical combination of:    l - left border    r - right border    t - top border    b - bottom border    i - inside border    o - outside border    or \\"\\" - no border (initial value)"},{"label":"$vLineStyle","documentation":"**[optional]** line style - one of:    \\"none\\" - no line (initial value)    .75 - 3/4 point    1.5 - 1 1/2 points    2.25 - 2 1/4 points    3 - 3 points    4.5 - 4 1/2 points    6 - 6 points    \\".75d\\" - 1/2 points, double    \\"1.5d\\" - 1 1/2 points, double    \\"2.25d\\" - 2 1/4 points, double    \\".75g\\" - 3/4 point grey    \\".75gd\\" - 3/4 point grey dashed"},{"label":"$sColor","documentation":"**[optional]** one of:    \\"aut\\" - autocolor    \\"blk\\" - black (initial value)    \\"blu\\" - blue    \\"cyn\\" - cyan    \\"grn\\" - green    \\"mag\\" - magenta    \\"red\\" - red    \\"yel\\" - yellow    \\"whi\\" - white    \\"dbl\\" - dark blue    \\"dgn\\" - dark green    \\"dmg\\" - dark magenta    \\"drd\\" - dark red    \\"dyl\\" - dark yellow    \\"dgy\\" - dark grey    \\"lgy\\" - light grey"},{"label":"$iSpace","documentation":"**[optional]** space between the border and the text (in space units) ( (initial value): 0)"}]},"_GUICtrlRichEdit_SetParaIndents":{"documentation":"Sets indents of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","label":"_GUICtrlRichEdit_SetParaIndents ( $hWnd [, $vLeft = Default [, $iRight = Default [, $iFirstLine = Default]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$vLeft","documentation":"**[optional]** indentation of left side of the body of the paragraph (in space units)    absolute - a number    relative to previous - a string - \\"+\\" or \\"-\\""},{"label":"$iRight","documentation":"**[optional]** indentation of right side of the paragraph (in space units)"},{"label":"$iFirstLine","documentation":"**[optional]** indentation of the first line relative to other lines (in space units)"}]},"_GUICtrlRichEdit_SetParaNumbering":{"documentation":"Sets numbering of paragraph(s) in the current selection or, if no selection, of paragraph(s) inserted at the insertion point","label":"_GUICtrlRichEdit_SetParaNumbering ( $hWnd, $sStyle [, $iTextToNbrSpace = Default [, $bForceRoman = False]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sStyle","documentation":"a string specifying style and starting \\"number\\": e.g. \\".\\" (bullet), \\"1)\\",\\"(b)\\", \\"C.\\", \\"iv\\", \\"V)\\"This is the \\"numbering\\" that will display for the first paragraph.Trailing spaces indicate the minimum spaces between the number and the paragraph unless $iTextToNbrSpace is enteredSpecial cases:    \\"=\\" - This paragraph is an unnumbered paragraph within the preceding list element    \\"\\" - removed the numbering from the selected paragraph(s)"},{"label":"$iTextToNbrSpace","documentation":"**[optional]** space between number/bullet and paragraph (in space units)Default: number of trailing spaces times point size"},{"label":"$bForceRoman","documentation":"**[optional]** False - i, v, x ... in $sStyle is letter i, v, x ... {Default)"}]},"_GUICtrlRichEdit_SetParaShading":{"documentation":"Sets the shading of paragraph(s) in the current selection or, if no selection, of paragraphs inserted at the insertion point","label":"_GUICtrlRichEdit_SetParaShading ( $hWnd [, $iWeight = Default [, $sStyle = Default [, $sForeColor = Default [, $sBackColor = Default]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iWeight","documentation":"**[optional]** percent of foreground color, the rest being background color"},{"label":"$sStyle","documentation":"**[optional]** shading style - a string containing one of the following:    non - none    dhz - dark horizontal    dvt - dark vertical    ddd - dark down diagonal    dud - dark up diagonal    dgr - dark grid    dtr - dark trellis    lhz - light horizontal    lvt - light vertical    ldd - light down diagonal    lud - light up diagonal    lgr - light grid    ltr - light trellis"},{"label":"$sForeColor","documentation":"**[optional]** one of the following:    \\"blk\\" - black (initial value)    \\"blu\\" - blue    \\"cyn\\" - cyan    \\"grn\\" - green    \\"mag\\" - magenta    \\"red\\" - red    \\"yel\\" - yellow    \\"whi\\" - white    \\"dbl\\" - dark blue    \\"dgn\\" - dark green    \\"dmg\\" - dark magenta    \\"drd\\" - dark red    \\"dyl\\" - dark yellow    \\"dgy\\" - dark grey    \\"lgy\\" - light grey"},{"label":"$sBackColor","documentation":"**[optional]** same values as for $sForeColor"}]},"_GUICtrlRichEdit_SetParaSpacing":{"documentation":"Sets paragraph spacing of paragraphs having selected text or, if none selected, sets it for text inserted at the insertion point","label":"_GUICtrlRichEdit_SetParaSpacing ( $hWnd [, $vInter = Default [, $iBefore = Default [, $iAfter = Default]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$vInter","documentation":"**[optional]** spacing between lines:either: a number - in space unitsor: \\" lines\\" - in lines"},{"label":"$iBefore","documentation":"**[optional]** spacing before paragraph(s) (in space units)"},{"label":"$iAfter","documentation":"**[optional]** spacing after paragraph(s) (in space units)"}]},"_GUICtrlRichEdit_SetParaTabStops":{"documentation":"Sets tab stops of paragraphs having selected text or, if none selected, sets it for text inserted at the insertion point","label":"_GUICtrlRichEdit_SetParaTabStops ( $hWnd, $sTabStops )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sTabStops","documentation":"A string consisting of groups separated by ; (semicolon). Format of a group:absolute position of a tab stop (in space units)kind of tab    l - left tab    c - center tab    r - decimal tab    b - bar tabkind of dot leader    . - dotted leader    - - dashed leader    _ - underline leader    = - double line leader    t - thick-line leader    a space - no leader"}]},"_GUICtrlRichEdit_SetPasswordChar":{"documentation":"Sets the characters to be displayed instead of those typed, or causes typed characters to show","label":"_GUICtrlRichEdit_SetPasswordChar ( $hWnd [, $sDisplayChar = \\"*\\"] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sDisplayChar","documentation":"**[optional]** The character to be displayed in place of the characters typed by the user.Special value: \\"\\" - characters typed are displayed"}]},"_GUICtrlRichEdit_SetReadOnly":{"documentation":"Sets or removes the read-only state","label":"_GUICtrlRichEdit_SetReadOnly ( $hWnd [, $bState = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"**[optional]** one of the following values:    True - Sets control to read-only (default)    False - Sets control to read-write"}]},"_GUICtrlRichEdit_SetRECT":{"documentation":"Sets the formatting rectangle of a Rich Edit control","label":"_GUICtrlRichEdit_SetRECT ( $hWnd [, $iLeft = Default [, $iTop = Default [, $iRight = Default [, $iBottom = Default [, $bRedraw = True]]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iLeft","documentation":"**[optional]** Left position in dialog units"},{"label":"$iTop","documentation":"**[optional]** Top position in dialog units"},{"label":"$iRight","documentation":"**[optional]** Right position in dialog units"},{"label":"$iBottom","documentation":"**[optional]** Bottom position in dialog unit"},{"label":"$bRedraw","documentation":"**[optional]** True to force redraw"}]},"_GUICtrlRichEdit_SetScrollPos":{"documentation":"Scrolls the display such that ($ix,$iY) is in the upper left corner of the control","label":"_GUICtrlRichEdit_SetScrollPos ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iX","documentation":"x coordinate (in pixels)"},{"label":"$iY","documentation":"y coordinate (in pixels)"}]},"_GUICtrlRichEdit_SetSel":{"documentation":"Sets the low and high character position of a selection","label":"_GUICtrlRichEdit_SetSel ( $hWnd, $iAnchor, $iActive [, $bHideSel = False] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iAnchor","documentation":"the character position of the first character to selectSpecial value: -1 - end of text"},{"label":"$iActive","documentation":"the character position of the last character to selectSpecial value: -1 - end of text"},{"label":"$bHideSel","documentation":"**[optional]** True to hide the selection"}]},"_GUICtrlRichEdit_SetSpaceUnit":{"documentation":"Sets the unit of measure of horizontal and vertical space used in parameters of various _GUICtrlRichEdit functions","label":"_GUICtrlRichEdit_SetSpaceUnit ( $sUnit )","params":[{"label":"$sUnit","documentation":"\\"in\\", \\"cm\\", \\"mm\\", \\"pt\\" (points), or \\"tw\\" (twips, 1/1440 inches, 1/567 centimeters)"}]},"_GUICtrlRichEdit_SetTabStops":{"documentation":"Sets tab stops for the control","label":"_GUICtrlRichEdit_SetTabStops ( $hWnd, $vTabStops [, $bRedraw = True] )","params":[{"label":"$hWnd","documentation":"handle of control"},{"label":"$VTabStops","documentation":"tab stop(s) to set in space units:If a string, semicolon-separated tab stop positionsIf numeric: set a tab stop every  space units"},{"label":"$bRedraw","documentation":"**[optional]** whether to redraw the control - True (default) or False"}]},"_GUICtrlRichEdit_SetText":{"documentation":"Sets the text of a control","label":"_GUICtrlRichEdit_SetText ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"Plain or RTF text to put into the control"}]},"_GUICtrlRichEdit_SetUndoLimit":{"documentation":"Sets the maximum number of actions that can stored in the undo queue","label":"_GUICtrlRichEdit_SetUndoLimit ( $hWnd, $iLimit )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iLimit","documentation":"the maximum number of actions that can be stored in the undo queue"}]},"_GUICtrlRichEdit_SetZoom":{"documentation":"Sets zoom level of the control","label":"_GUICtrlRichEdit_SetZoom ( $hWnd, $iPercent )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPercent","documentation":"percentage zoomvalues: 100 and 200 to 6400"}]},"_GUICtrlRichEdit_StreamFromFile":{"documentation":"Sets text in a control from a file","label":"_GUICtrlRichEdit_StreamFromFile ( $hWnd, $sFileSpec )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sFileSpec","documentation":"file specification"}]},"_GUICtrlRichEdit_StreamFromVar":{"documentation":"Sets text in a control from a variable","label":"_GUICtrlRichEdit_StreamFromVar ( $hWnd, $sVar )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sVar","documentation":"a string"}]},"_GUICtrlRichEdit_StreamToFile":{"documentation":"Writes contents of a control to a file","label":"_GUICtrlRichEdit_StreamToFile ( $hWnd, $sFileSpec [, $bIncludeCOM = True [, $iOpts = 0 [, $iCodePage = 0]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sFileSpec","documentation":"file specification"},{"label":"$bIncludeCOM","documentation":"**[optional]** True (default):    If writing to a .rtf file, includes any COM objects (space consuming)    If writing to any other file, writes a text represntation of COM objectsFalse: Writes spaces instead of COM objects"},{"label":"$iOpts","documentation":"**[optional]** additional options: (default: 0)    $SFF_PLAINRTF - write only rich text keywords common to all languages    $SF_UNICODE - write Unicode"},{"label":"$iCodePage","documentation":"**[optional]** Generate UTF-8 and text using this code pageDefault: do not"}]},"_GUICtrlRichEdit_StreamToVar":{"documentation":"Writes contents of a control to a variable","label":"_GUICtrlRichEdit_StreamToVar ( $hWnd [, $bRtf = True [, $bIncludeCOM = True [, $iOpts = 0 [, $iCodePage = 0]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bRtf","documentation":"**[optional]** True - write Rich Text Format (RTF) (Default)False - write only text"},{"label":"$bIncludeCOM","documentation":"**[optional]** True (default):    If writing RTF, include any COM objects (space consuming)    If writing only text, write a text represntation of COM objectsFalse: Write spaces instead of COM objects"},{"label":"$iOpts","documentation":"**[optional]** additional options:    $SFF_PLAINRTF - write only rich text keywords common to all languages    $SF_UNICODE - write Unicode"},{"label":"$iCodePage","documentation":"**[optional]** Generate UTF-8 and text using this code pageDefault: do not"}]},"_GUICtrlRichEdit_Undo":{"documentation":"Undoes the last edit control operation in the control\'s undo queue","label":"_GUICtrlRichEdit_Undo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlSlider_ClearSel":{"documentation":"Clears the current selection range","label":"_GUICtrlSlider_ClearSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_ClearTics":{"documentation":"Removes the current tick marks from a slider","label":"_GUICtrlSlider_ClearTics ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_Create":{"documentation":"Create a Slider control","label":"_GUICtrlSlider_Create ( $hWnd, $iX, $iY [, $iWidth = 100 [, $iHeight = 20 [, $iStyle = $TBS_AUTOTICKS [, $iExStyle = 0x00000000]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control style:    $TBS_AUTOTICKS - Adds tick marks when you set the range on the slider by using the TBM_SETRANGE message    $TBS_BOTH - Places ticks on both sides of the slider    $TBS_BOTTOM - Places ticks on the bottom of a horizontal slider    $TBS_DOWNISLEFT - Down equal left and up equal right    $TBS_ENABLESELRANGE - The tick marks at the starting and ending positions of a selection range are displayed as triangles        (instead of vertical dashes), and the selection range is highlighted.    $TBS_FIXEDLENGTH - allows the size of the slider to be changed with the $TBM_SETTHUMBLENGTH message    $TBS_HORZ - Specifies a horizontal slider. This is the default    $TBS_LEFT - Places ticks on the left side of a vertical slider    $TBS_NOTHUMB - Specifies that the slider has no slider    $TBS_NOTICKS - Specifies that no ticks are placed on the slider    $TBS_REVERSED - Smaller number indicates \\"higher\\" and a larger number indicates \\"lower\\"    $TBS_RIGHT - Places ticks on the right side of a vertical slider    $TBS_TOP - Places ticks on the top of a horizontal slider    $TBS_TOOLTIPS - Creates a default ToolTip control that displays the slider\'s current position    $TBS_VERT - Creates a vertical sliderDefault: $TBS_AUTOTICKSForced : $WS_CHILD, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table.Default: $WS_EX_STATICEDGE"}]},"_GUICtrlSlider_Destroy":{"documentation":"Delete the control","label":"_GUICtrlSlider_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetBuddy":{"documentation":"Retrieves the handle to a slider control buddy window at a given location","label":"_GUICtrlSlider_GetBuddy ( $hWnd, $bLocation )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bLocation","documentation":"Which buddy window handle will be retrieved. This value can be one of the following:    True - Retrieves the handle to the buddy to the left of the slider.        If the slider control uses the $TBS_VERT style, the message will retrieve the buddy above the slider.    False - Retrieves the handle to the buddy to the right of the slider.        If the slider control uses the $TBS_VERT style, the message will retrieve the buddy below the slider."}]},"_GUICtrlSlider_GetChannelRect":{"documentation":"Retrieves the size and position of the bounding rectangle for a sliders\'s channel","label":"_GUICtrlSlider_GetChannelRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetChannelRectEx":{"documentation":"Retrieves the size and position of the bounding rectangle for a sliders\'s channel","label":"_GUICtrlSlider_GetChannelRectEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetLineSize":{"documentation":"Retrieves the number of logical positions the slider moves","label":"_GUICtrlSlider_GetLineSize ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetLogicalTics":{"documentation":"Retrieves an array that contains the logical positions of the tick marks for a slider","label":"_GUICtrlSlider_GetLogicalTics ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetNumTics":{"documentation":"Retrieves the number of tick marks from a slider","label":"_GUICtrlSlider_GetNumTics ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetPageSize":{"documentation":"Retrieves the number of logical positions the slider moves","label":"_GUICtrlSlider_GetPageSize ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetPos":{"documentation":"Retrieves the logical position the slider","label":"_GUICtrlSlider_GetPos ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetRange":{"documentation":"Retrieves the maximum and minimum position for the slider","label":"_GUICtrlSlider_GetRange ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetRangeMax":{"documentation":"Retrieves the maximum position for the slider","label":"_GUICtrlSlider_GetRangeMax ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetRangeMin":{"documentation":"Retrieves the minimum position for the slider","label":"_GUICtrlSlider_GetRangeMin ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetSel":{"documentation":"Retrieves the ending and starting position of the current selection range","label":"_GUICtrlSlider_GetSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetSelEnd":{"documentation":"Retrieves the ending position of the current selection range","label":"_GUICtrlSlider_GetSelEnd ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetSelStart":{"documentation":"Retrieves the starting position of the current selection range","label":"_GUICtrlSlider_GetSelStart ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetThumbLength":{"documentation":"Retrieves the length of the slider","label":"_GUICtrlSlider_GetThumbLength ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetThumbRect":{"documentation":"Retrieves the size and position of the bounding rectangle for the slider","label":"_GUICtrlSlider_GetThumbRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetThumbRectEx":{"documentation":"Retrieves the size and position of the bounding rectangle for the slider","label":"_GUICtrlSlider_GetThumbRectEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetTic":{"documentation":"Retrieves the logical position of a tick mark","label":"_GUICtrlSlider_GetTic ( $hWnd, $iTic )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iTic","documentation":"0-based index identifying a tick mark. Valid indexes are in the range from zero to two less than the tick count returned by the _GUICtrlSlider_GetNumTics() depends on the _GUICtrlSlider_SetTicFreq()."}]},"_GUICtrlSlider_GetTicPos":{"documentation":"Retrieves the current physical position of a tick mark","label":"_GUICtrlSlider_GetTicPos ( $hWnd, $iTic )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iTic","documentation":"0-based index identifying a tick mark. The positions of the first and last tick marks are not directly available via this message."}]},"_GUICtrlSlider_GetToolTips":{"documentation":"Retrieves the handle to the ToolTip control assigned to the slider, if any","label":"_GUICtrlSlider_GetToolTips ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_GetUnicodeFormat":{"documentation":"Retrieves the Unicode character format flag for the control","label":"_GUICtrlSlider_GetUnicodeFormat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlSlider_SetBuddy":{"documentation":"Assigns a window as the buddy window for a slider control","label":"_GUICtrlSlider_SetBuddy ( $hWnd, $bLocation, $hBuddy )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bLocation","documentation":"Following values:    True - The buddy will appear to the left of the slider if the control uses the $TBS_HORZ style        The buddy will appear above the slider if the control uses the $TBS_VERT style    False - The buddy will appear to the right of the slider if the control uses the $TBS_HORZ style        The buddy will appear below the slider if the control uses the $TBS_VERT style"},{"label":"$hBuddy","documentation":"Handle to buddy control"}]},"_GUICtrlSlider_SetLineSize":{"documentation":"Sets the number of logical positions the slider moves","label":"_GUICtrlSlider_SetLineSize ( $hWnd, $iLineSize )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iLineSize","documentation":"New line size"}]},"_GUICtrlSlider_SetPageSize":{"documentation":"Sets the number of logical positions the slider moves","label":"_GUICtrlSlider_SetPageSize ( $hWnd, $iPageSize )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iPageSize","documentation":"New page size"}]},"_GUICtrlSlider_SetPos":{"documentation":"Sets the current logical position of the slider","label":"_GUICtrlSlider_SetPos ( $hWnd, $iPosition )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iPosition","documentation":"New logical position of the slider"}]},"_GUICtrlSlider_SetRange":{"documentation":"Sets the range of minimum and maximum logical positions for the slider","label":"_GUICtrlSlider_SetRange ( $hWnd, $iMinimum, $iMaximum )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMinimum","documentation":"Minimum position for the slider"},{"label":"$iMaximum","documentation":"Maximum position for the slider"}]},"_GUICtrlSlider_SetRangeMax":{"documentation":"Sets the maximum logical position for the slider","label":"_GUICtrlSlider_SetRangeMax ( $hWnd, $iMaximum )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMaximum","documentation":"Maximum position for the slider"}]},"_GUICtrlSlider_SetRangeMin":{"documentation":"Sets the minimum logical position for the slider","label":"_GUICtrlSlider_SetRangeMin ( $hWnd, $iMinimum )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMinimum","documentation":"Minimum position for the slider"}]},"_GUICtrlSlider_SetSel":{"documentation":"Sets the starting and ending positions for the available selection range","label":"_GUICtrlSlider_SetSel ( $hWnd, $iMinimum, $iMaximum )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMinimum","documentation":"Starting logical position for the selection range"},{"label":"$iMaximum","documentation":"Ending logical position for the selection range"}]},"_GUICtrlSlider_SetSelEnd":{"documentation":"Sets the ending logical position of the current selection range","label":"_GUICtrlSlider_SetSelEnd ( $hWnd, $iMaximum )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMaximum","documentation":"Ending logical position for the selection range"}]},"_GUICtrlSlider_SetSelStart":{"documentation":"Sets the starting logical position of the current selection range","label":"_GUICtrlSlider_SetSelStart ( $hWnd, $iMinimum )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMinimum","documentation":"Starting logical position for the selection range"}]},"_GUICtrlSlider_SetThumbLength":{"documentation":"Sets the length of the slider","label":"_GUICtrlSlider_SetThumbLength ( $hWnd, $iLength )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iLength","documentation":"Length, in pixels, of the slider"}]},"_GUICtrlSlider_SetTic":{"documentation":"Sets a tick mark in a slider at the specified logical position","label":"_GUICtrlSlider_SetTic ( $hWnd, $iPosition )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iPosition","documentation":"Position of the tick markThis parameter can be any of the integer values in the slider\'s range of minimum to maximum positions"}]},"_GUICtrlSlider_SetTicFreq":{"documentation":"Sets the interval frequency for tick marks in a slider","label":"_GUICtrlSlider_SetTicFreq ( $hWnd, $iFreg )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iFreg","documentation":"Frequency of the tick marks."}]},"_GUICtrlSlider_SetTipSide":{"documentation":"Positions a ToolTip control","label":"_GUICtrlSlider_SetTipSide ( $hWnd, $iLocation )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iLocation","documentation":"The location at which to display the ToolTip control. This value can be one of the following:    $TBTS_TOP - Will be positioned above the slider. This flag is for use with horizontal sliders.    $TBTS_LEFT - Will be positioned to the left of the slider. This flag is for use with vertical sliders.    $TBTS_BOTTOM - Will be positioned below the slider This flag is for use with horizontal sliders.    $TBTS_RIGHT - Will be positioned to the right of the slider. This flag is for use with vertical sliders."}]},"_GUICtrlSlider_SetToolTips":{"documentation":"Assigns a ToolTip control to a slider control","label":"_GUICtrlSlider_SetToolTips ( $hWnd, $hWndTT )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hWndTT","documentation":"Handle to an existing ToolTip control"}]},"_GUICtrlSlider_SetUnicodeFormat":{"documentation":"Sets the Unicode character format flag for the control","label":"_GUICtrlSlider_SetUnicodeFormat ( $hWnd, $bUnicode )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bUnicode","documentation":"Determines the character set that is used by the control:    True - The control will use Unicode characters    False - The control will use ANSI characters"}]},"_GUICtrlStatusBar_Create":{"documentation":"Create a statusbar","label":"_GUICtrlStatusBar_Create ( $hWnd [, $vPartEdge = -1 [, $vPartText = \\"\\" [, $iStyles = -1 [, $iExStyles = 0x00000000]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent window"},{"label":"$vPartEdge","documentation":"**[optional]** Width of part or parts, for more than 1 part pass in 0-based array in the following format:    $vPartEdge[0] - Right edge of part #1    $vPartEdge[1] - Right edge of part #2    $vPartEdge[n] - Right edge of part n"},{"label":"$vPartText","documentation":"**[optional]** Text of part or parts, for more than 1 part pass in 0-based array in the following format:    $vPartText[0] - First part    $vPartText[1] - Second part    $vPartText[n] - Last part"},{"label":"$iStyles","documentation":"**[optional]** Control styles:    $SBARS_SIZEGRIP - The status bar control will include a sizing grip at the right end of the status bar    $SBARS_TOOLTIPS - The status bar will have tooltipsForced: $WS_CHILD, $WS_VISIBLE"},{"label":"$iExStyles","documentation":"**[optional]** Control extended style. These correspond to the standard $WS_EX_* constants. See Extended Style Table."}]},"_GUICtrlStatusBar_Destroy":{"documentation":"Delete the control","label":"_GUICtrlStatusBar_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_EmbedControl":{"documentation":"Embeds a child control in the control","label":"_GUICtrlStatusBar_EmbedControl ( $hWnd, $iPart, $hControl [, $iFit = 4] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index"},{"label":"$hControl","documentation":"Handle of control to embed in panel"},{"label":"$iFit","documentation":"**[optional]** Determines how to fit the control. Can be a combination of:    1 - Center the control horizontally    2 - Center the control vertically    4 - Fit the control to the status bar part"}]},"_GUICtrlStatusBar_GetBorders":{"documentation":"Retrieves the current widths of the horizontal and vertical borders","label":"_GUICtrlStatusBar_GetBorders ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_GetBordersHorz":{"documentation":"Retrieves the current width of the horizontal border","label":"_GUICtrlStatusBar_GetBordersHorz ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_GetBordersRect":{"documentation":"Retrieves the current width of the rectangle border","label":"_GUICtrlStatusBar_GetBordersRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_GetBordersVert":{"documentation":"Retrieves the current width of the vertical border","label":"_GUICtrlStatusBar_GetBordersVert ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_GetCount":{"documentation":"Retrieves the number of parts","label":"_GUICtrlStatusBar_GetCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_GetHeight":{"documentation":"Retrieves the height of the statusbar","label":"_GUICtrlStatusBar_GetHeight ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_GetIcon":{"documentation":"Retrieves the icon for a part","label":"_GUICtrlStatusBar_GetIcon ( $hWnd [, $iIndex = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"**[optional]** 0-based index of the part that contains the icon to be retrieved.If this parameter is -1, the status bar is assumed to be a Simple Mode status bar."}]},"_GUICtrlStatusBar_GetParts":{"documentation":"Retrieves the number of parts and the part edges","label":"_GUICtrlStatusBar_GetParts ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_GetRect":{"documentation":"Retrieves the bounding rectangle of a part","label":"_GUICtrlStatusBar_GetRect ( $hWnd, $iPart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index"}]},"_GUICtrlStatusBar_GetRectEx":{"documentation":"Retrieves the bounding rectangle of a part","label":"_GUICtrlStatusBar_GetRectEx ( $hWnd, $iPart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index.If the control is in simple mode this field is ignored and the rectangle of the status bar is returned."}]},"_GUICtrlStatusBar_GetText":{"documentation":"Retrieves the text from the specified part","label":"_GUICtrlStatusBar_GetText ( $hWnd, $iPart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index"}]},"_GUICtrlStatusBar_GetTextFlags":{"documentation":"Retrieves the text length flags for a part","label":"_GUICtrlStatusBar_GetTextFlags ( $hWnd, $iPart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index"}]},"_GUICtrlStatusBar_GetTextLength":{"documentation":"Retrieves the length of a part text","label":"_GUICtrlStatusBar_GetTextLength ( $hWnd, $iPart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index"}]},"_GUICtrlStatusBar_GetTextLengthEx":{"documentation":"Retrieves the uFlag of a part","label":"_GUICtrlStatusBar_GetTextLengthEx ( $hWnd, $iPart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index"}]},"_GUICtrlStatusBar_GetTipText":{"documentation":"Retrieves the ToolTip text for a part","label":"_GUICtrlStatusBar_GetTipText ( $hWnd, $iPart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index"}]},"_GUICtrlStatusBar_GetUnicodeFormat":{"documentation":"Retrieves the Unicode character format flag","label":"_GUICtrlStatusBar_GetUnicodeFormat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_GetWidth":{"documentation":"Retrieves the width of a part","label":"_GUICtrlStatusBar_GetWidth ( $hWnd, $iPart )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index"}]},"_GUICtrlStatusBar_IsSimple":{"documentation":"Checks a status bar control to determine if it is in simple mode","label":"_GUICtrlStatusBar_IsSimple ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_Resize":{"documentation":"Causes the status bar to resize itself","label":"_GUICtrlStatusBar_Resize ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlStatusBar_SetBkColor":{"documentation":"Sets the background color","label":"_GUICtrlStatusBar_SetBkColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iColor","documentation":"New background color. Specify the CLR_DEFAULT value to cause the status bar to use its default background color."}]},"_GUICtrlStatusBar_SetIcon":{"documentation":"Sets the icon for a part","label":"_GUICtrlStatusBar_SetIcon ( $hWnd, $iPart [, $hIcon = -1 [, $sIconFile = \\"\\"]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index. If the control is in simple mode, this field is ignored."},{"label":"$hIcon","documentation":"**[optional]** Handle to the icon. If this value is -1, the icon is removed."},{"label":"$sIconFile","documentation":"**[optional]** Icon filename to be used."}]},"_GUICtrlStatusBar_SetMinHeight":{"documentation":"Sets the minimum height of a status window\'s drawing area","label":"_GUICtrlStatusBar_SetMinHeight ( $hWnd, $iMinHeight )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iMinHeight","documentation":"Minimum height, in pixels, of the window"}]},"_GUICtrlStatusBar_SetParts":{"documentation":"Sets the number of parts and the part edges","label":"_GUICtrlStatusBar_SetParts ( $hWnd [, $aParts = -1 [, $aPartWidth = 25]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$aParts","documentation":"**[optional]** Number of parts, can be an 0-based array of ints in the following format:    $aParts[0] - Right edge of part #1    $aParts[1] - Right edge of part #2    $aParts[n] - Right edge of part n"},{"label":"$aPartWidth","documentation":"**[optional]** Size of parts, can be an 0-based array of ints in the following format:    $aPartWidth[0] - width part #1    $aPartWidth[1] - width of part #2    $aPartWidth[n] - width of part n"}]},"_GUICtrlStatusBar_SetSimple":{"documentation":"Specifies whether a status window displays simple text or displays all window parts","label":"_GUICtrlStatusBar_SetSimple ( $hWnd [, $bSimple = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bSimple","documentation":"**[optional]** Sets the display of the windows    True - The window displays simple text    False - The window displays multiple parts"}]},"_GUICtrlStatusBar_SetText":{"documentation":"Sets the text in the specified part of a status window","label":"_GUICtrlStatusBar_SetText ( $hWnd [, $sText = \\"\\" [, $iPart = 0 [, $iUFlag = 0]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sText","documentation":"**[optional]** The text to display in the part"},{"label":"$iPart","documentation":"**[optional]** The part to hold the text"},{"label":"$iUFlag","documentation":"**[optional]** Type of drawing operation. The type can be one of the following values:    0 - The text is drawn with a border to appear lower than the plane of the window    $SBT_NOBORDERS - The text is drawn without borders    $SBT_OWNERDRAW - The text is drawn by the parent window    $SBT_POPOUT - The text is drawn with a border to appear higher than the plane of the window    $SBT_RTLREADING - The text will be displayed in the opposite direction to the text in the parent window"}]},"_GUICtrlStatusBar_SetTipText":{"documentation":"Sets the ToolTip text for a part","label":"_GUICtrlStatusBar_SetTipText ( $hWnd, $iPart, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iPart","documentation":"0-based part index"},{"label":"$sText","documentation":"Text of Tip"}]},"_GUICtrlStatusBar_SetUnicodeFormat":{"documentation":"Sets the Unicode character format flag","label":"_GUICtrlStatusBar_SetUnicodeFormat ( $hWnd [, $bUnicode = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bUnicode","documentation":"**[optional]** Unicode character format flag:    True - Control uses Unicode characters    False - Control uses ANSI characters"}]},"_GUICtrlStatusBar_ShowHide":{"documentation":"Show/Hide the StatusBar control","label":"_GUICtrlStatusBar_ShowHide ( $hWnd, $iState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iState","documentation":"State of the StatusBar, can be the following values:@SW_SHOW@SW_HIDE"}]},"_GUICtrlTab_ActivateTab":{"documentation":"Activates a tab by its index","label":"_GUICtrlTab_ActivateTab ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"}]},"_GUICtrlTab_ClickTab":{"documentation":"Clicks a tab","label":"_GUICtrlTab_ClickTab ( $hWnd, $iIndex [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the item"},{"label":"$sButton","documentation":"**[optional]** Button to click with"},{"label":"$bMove","documentation":"**[optional]** If True, the mouse will be moved. If False, the mouse does not move."},{"label":"$iClicks","documentation":"**[optional]** Number of clicks"},{"label":"$iSpeed","documentation":"**[optional]** Mouse movement speed"}]},"_GUICtrlTab_Create":{"documentation":"Create a TabControl control","label":"_GUICtrlTab_Create ( $hWnd, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x00000040 [, $iExStyle = 0x00000000]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control styles:    $TCS_BOTTOM - Tabs appear at the bottom of the control    $TCS_BUTTONS - Tabs appear as buttons, and no border is drawn around the display area    $TCS_FIXEDWIDTH - All tabs are the same width    $TCS_FLATBUTTONS - Selected tabs appear as being indented into the background while other tabs appear as being on the same plane as the background.        This only affects tab controls with the $TCS_BUTTONS style.    $TCS_FOCUSNEVER - The control does not receive the input focus when clicked    $TCS_FOCUSONBUTTONDOWN - The control receives the input focus when clicked    $TCS_FORCEICONLEFT - Icons are aligned with the left edge of each fixed width tab.        This style can only be used with the $TCS_FIXEDWIDTH style.    $TCS_FORCELABELLEFT - Labels are aligned on the left edge of each fixed width tab.        The label is displayed immediately to the right of the icon instead of being centered.        This style can only be used with the    $TCS_FIXEDWIDTH style and it implies the $TCS_FORCEICONLEFT style.    $TCS_HOTTRACK - Items under the pointer are automatically highlighted.        You can check whether or not hot tracking is enabled by calling SystemParametersInfo.    $TCS_MULTILINE - Multiple rows of tabs are displayed, if necessary, so all tabs are visible at once    $TCS_MULTISELECT - Multiple tabs can be selected by holding down the CTRL key when clicking.        This style must be used with the $TCS_BUTTONS style.    $TCS_OWNERDRAWFIXED - The parent window is responsible for drawing tabs    $TCS_RAGGEDRIGHT - Rows of tabs will not be stretched to fill the entire width of the control.        This style is the default.    $TCS_RIGHT - Tabs appear vertically on the right side of controls that use the $TCS_VERTICAL style.        This value equals $TCS_BOTTOM. This style is not supported if you use visual styles.    $TCS_RIGHTJUSTIFY - The width of each tab is increased, if necessary, so that each row of tabs fills the entire width of the tab control.        This style is ignored unless the $TCS_MULTILINE style is also specified.    $TCS_SCROLLOPPOSITE - Unneeded tabs scroll to the opposite side of the control when a tab is selected    $TCS_SINGLELINE - Only one row of tabs is displayed. The user can scroll to see more tabs, if necessary.        This style is the default.    $TCS_TABS - Tabs appear as tabs, and a border is drawn around the display area.        This style is the default.    $TCS_TOOLTIPS - The tab control has a ToolTip control associated with it    $TCS_VERTICAL - Tabs appear at the left side of the control with tab text displayed vertically.        This style is valid only when used with the $TCS_MULTILINE style.        To make tabs appear on the right side of the control, also use the $TCS_RIGHT style.Default: $TCS_HOTTRACKForced: $WS_CHILD, $WS_CLIPSIBLINGS, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Control extended styles:    $TCS_EX_FLATSEPARATORS - The control will draw separators between the tab items    $TCS_EX_REGISTERDROP - The control generates $TCN_GETOBJECT notification messages to request a drop target object when an object is dragged over the tab items."}]},"_GUICtrlTab_DeleteAllItems":{"documentation":"Deletes all tabs","label":"_GUICtrlTab_DeleteAllItems ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_DeleteItem":{"documentation":"Deletes a tab","label":"_GUICtrlTab_DeleteItem ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the item"}]},"_GUICtrlTab_DeselectAll":{"documentation":"Resets tabs, clearing any that were set to the pressed state","label":"_GUICtrlTab_DeselectAll ( $hWnd [, $bExclude = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bExclude","documentation":"**[optional]** Exclusion flag:    True - All tabs except for the one currently selected will be reset    False - All tab items will be reset"}]},"_GUICtrlTab_Destroy":{"documentation":"Delete the control","label":"_GUICtrlTab_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_FindTab":{"documentation":"Searches for a tab with the specific text","label":"_GUICtrlTab_FindTab ( $hWnd, $sText [, $bInStr = False [, $iStart = 0]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Text to search for"},{"label":"$bInStr","documentation":"**[optional]** If True, the text can be anywhere in the tab\'s text."},{"label":"$iStart","documentation":"**[optional]** 0-based index of the tab to start searching from"}]},"_GUICtrlTab_GetCurFocus":{"documentation":"Returns the index of the item that has the focus in a tab control","label":"_GUICtrlTab_GetCurFocus ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_GetCurSel":{"documentation":"Determines the currently selected tab","label":"_GUICtrlTab_GetCurSel ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_GetDisplayRect":{"documentation":"Retrieves the display rectangle of the client area","label":"_GUICtrlTab_GetDisplayRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlTab_GetDisplayRectEx":{"documentation":"Retrieves the display rectangle of the client area","label":"_GUICtrlTab_GetDisplayRectEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlTab_GetExtendedStyle":{"documentation":"Retrieves the extended styles that are currently in use","label":"_GUICtrlTab_GetExtendedStyle ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_GetImageList":{"documentation":"Retrieves the tab control image list","label":"_GUICtrlTab_GetImageList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_GetItem":{"documentation":"Retrieves information about a tab","label":"_GUICtrlTab_GetItem ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlTab_GetItemCount":{"documentation":"Retrieves the number of tabs","label":"_GUICtrlTab_GetItemCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_GetItemImage":{"documentation":"Retrieves the image index for a tab","label":"_GUICtrlTab_GetItemImage ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlTab_GetItemParam":{"documentation":"Retrieves the param data for a tab","label":"_GUICtrlTab_GetItemParam ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlTab_GetItemRect":{"documentation":"Retrieves the bounding rectangle for a tab","label":"_GUICtrlTab_GetItemRect ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlTab_GetItemRectEx":{"documentation":"Retrieves the bounding rectangle for a tab","label":"_GUICtrlTab_GetItemRectEx ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlTab_GetItemState":{"documentation":"Retrieves the state of a tab","label":"_GUICtrlTab_GetItemState ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlTab_GetItemText":{"documentation":"Retrieves the text of a tab","label":"_GUICtrlTab_GetItemText ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlTab_GetRowCount":{"documentation":"Retrieves the current number of rows of tabs","label":"_GUICtrlTab_GetRowCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_GetToolTips":{"documentation":"Retrieves the handle to the ToolTip control associated with the control","label":"_GUICtrlTab_GetToolTips ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_GetUnicodeFormat":{"documentation":"Retrieves the Unicode character format flag for the control","label":"_GUICtrlTab_GetUnicodeFormat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTab_HighlightItem":{"documentation":"Sets the highlight state of a tab item","label":"_GUICtrlTab_HighlightItem ( $hWnd, $iIndex [, $bHighlight = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$bHighlight","documentation":"**[optional]** If True, the tab is highlighted, otherwise the tab is reset"}]},"_GUICtrlTab_HitTest":{"documentation":"Determines where a point lies control","label":"_GUICtrlTab_HitTest ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"X position to test"},{"label":"$iY","documentation":"Y position to test"}]},"_GUICtrlTab_InsertItem":{"documentation":"Inserts a new tab","label":"_GUICtrlTab_InsertItem ( $hWnd, $iIndex, $sText [, $iImage = -1 [, $iParam = 0]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"Index of the new tab"},{"label":"$sText","documentation":"Tab text"},{"label":"$iImage","documentation":"**[optional]** 0-based tab image index"},{"label":"$iParam","documentation":"**[optional]** Application defined data"}]},"_GUICtrlTab_RemoveImage":{"documentation":"Removes an image from the control\'s image list","label":"_GUICtrlTab_RemoveImage ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the image to remove"}]},"_GUICtrlTab_SetCurFocus":{"documentation":"Sets the focus to a specified tab","label":"_GUICtrlTab_SetCurFocus ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlTab_SetCurSel":{"documentation":"Selects a tab","label":"_GUICtrlTab_SetCurSel ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"}]},"_GUICtrlTab_SetExtendedStyle":{"documentation":"Sets the extended styles that are currently in use","label":"_GUICtrlTab_SetExtendedStyle ( $hWnd, $iStyle )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iStyle","documentation":"Extended styles currently in use:    $TCS_EX_FLATSEPARATORS - The control will draw separators between the tab items    $TCS_EX_REGISTERDROP - The control generates TCN_GETOBJECT notification messages to request a drop target object when an object is dragged over the tab items."}]},"_GUICtrlTab_SetImageList":{"documentation":"Sets the image list associated with a tab control","label":"_GUICtrlTab_SetImageList ( $hWnd, $hImage )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hImage","documentation":"Handle to the image list to assign to the tab control"}]},"_GUICtrlTab_SetItem":{"documentation":"Sets information about a tab","label":"_GUICtrlTab_SetItem ( $hWnd, $iIndex [, $sText = -1 [, $iState = -1 [, $iImage = -1 [, $iParam = -1]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$sText","documentation":"**[optional]** Item text"},{"label":"$iState","documentation":"**[optional]** Item state"},{"label":"$iImage","documentation":"**[optional]** 0-based item image"},{"label":"$iParam","documentation":"**[optional]** Application defined data"}]},"_GUICtrlTab_SetItemImage":{"documentation":"Sets the image of a tab","label":"_GUICtrlTab_SetItemImage ( $hWnd, $iIndex, $iImage )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iImage","documentation":"0-based item image"}]},"_GUICtrlTab_SetItemParam":{"documentation":"Sets the param data of a tab","label":"_GUICtrlTab_SetItemParam ( $hWnd, $iIndex, $iParam )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iParam","documentation":"Application defined data"}]},"_GUICtrlTab_SetItemSize":{"documentation":"Sets the width and height of tabs in a fixed width or owner drawn control","label":"_GUICtrlTab_SetItemSize ( $hWnd, $iWidth, $iHeight )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iWidth","documentation":"New width, in pixels"},{"label":"$iHeight","documentation":"New height, in pixels"}]},"_GUICtrlTab_SetItemState":{"documentation":"Sets the state of a tab","label":"_GUICtrlTab_SetItemState ( $hWnd, $iIndex, $iState )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$iState","documentation":"Item state. Can be a combination of:    $TCIS_BUTTONPRESSED - The tab control item is selected    $TCIS_HIGHLIGHTED - The tab control item is highlighted"}]},"_GUICtrlTab_SetItemText":{"documentation":"Sets the text of a tab","label":"_GUICtrlTab_SetItemText ( $hWnd, $iIndex, $sText )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"0-based item index"},{"label":"$sText","documentation":"Item text"}]},"_GUICtrlTab_SetMinTabWidth":{"documentation":"Sets the minimum width of items in a tab control","label":"_GUICtrlTab_SetMinTabWidth ( $hWnd, $iMinWidth )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iMinWidth","documentation":"Minimum width to be set for a tab control item.If -1, the control will use the default width."}]},"_GUICtrlTab_SetPadding":{"documentation":"Sets the amount of space around each tab\'s icon and label","label":"_GUICtrlTab_SetPadding ( $hWnd, $iHorz, $iVert )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iHorz","documentation":"Amount of horizontal padding, in pixels"},{"label":"$iVert","documentation":"Amount of vertical padding, in pixels"}]},"_GUICtrlTab_SetToolTips":{"documentation":"Sets the handle to the ToolTip control associated with the control","label":"_GUICtrlTab_SetToolTips ( $hWnd, $hToolTip )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hToolTip","documentation":"Handle to the ToolTip control"}]},"_GUICtrlTab_SetUnicodeFormat":{"documentation":"Sets the Unicode character format flag for the control","label":"_GUICtrlTab_SetUnicodeFormat ( $hWnd, $bUnicode )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bUnicode","documentation":"Unicode character flag:    True - Control uses Unicode characters    False - Control uses ANSI characters"}]},"_GUICtrlToolbar_AddBitmap":{"documentation":"Adds images to the image list","label":"_GUICtrlToolbar_AddBitmap ( $hWnd, $iButtons, $hInst, $iID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iButtons","documentation":"Number of button images in the bitmap"},{"label":"$hInst","documentation":"Handle to the module instance with the executable file that contains a bitmap resource.To use bitmap handles instead of resource IDs, set this to 0. You can add system defined button bitmaps to the list by specifying -1 as the $hInst member and one of the following values as the $iID member:    $IDB_STD_LARGE_COLOR - Adds large, color standard bitmaps    $IDB_STD_SMALL_COLOR - Adds small, color standard bitmaps    $IDB_VIEW_LARGE_COLOR - Adds large, color view bitmaps    $IDB_VIEW_SMALL_COLOR - Adds small, color view bitmaps"},{"label":"$iID","documentation":"If $hInst is 0, set this member to the bitmap handle of the bitmap with the button images.Otherwise, set it to the resource identifier of the bitmap with the button images.The following are resource IDs to the standard and view bitmaps:    $STD_COPY - Copy image    $STD_CUT - Cut image    $STD_DELETE - Delete image    $STD_FILENEW - New file image    $STD_FILEOPEN - Open file image    $STD_FILESAVE - Save file image    $STD_FIND - Find image    $STD_HELP - Help image    $STD_PASTE - Paste image    $STD_PRINT - Print image    $STD_PRINTPRE - Print preview image    $STD_PROPERTIES - Properties image    $STD_REDOW - Redo image    $STD_REPLACE - Replace image    $STD_UNDO - Undo image    $VIEW_DETAILS - View details image    $VIEW_LARGEICONS - View large icons image    $VIEW_LIST - View list image    $VIEW_SMALLICONS - View small icons image.    $VIEW_SORTDATE - Sort by date image.    $VIEW_SORTNAME - Sort by name image.    $VIEW_SORTSIZE - Sort by size image.    $VIEW_SORTTYPE - Sort by type image."}]},"_GUICtrlToolbar_AddButton":{"documentation":"Adds a button","label":"_GUICtrlToolbar_AddButton ( $hWnd, $iID, $iImage [, $iString = 0 [, $iStyle = 0 [, $iState = 4 [, $iParam = 0]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iID","documentation":"Command ID"},{"label":"$iImage","documentation":"0-based index of the button image.Set this parameter to -1 and the control will send the $TBN_GETDISPINFO notification to retrieve the image index when it is needed.Set this to -2 to indicate that the button does not have an image.The button layout will only include space for the text.If the button is a separator, this is the width of the separator, in pixels."},{"label":"$iString","documentation":"**[optional]** 0-based index of the button string that was set with AddString"},{"label":"$iStyle","documentation":"**[optional]** Button style. Can be a combination of the following:    $BTNS_AUTOSIZE - The toolbar control should not assign the standard width to the button    $BTNS_BUTTON - Standard button (Default)    $BTNS_CHECK - Toggles between the pressed and nonpressed    $BTNS_CHECKGROUP - Button that stays pressed until another button in the group is pressed    $BTNS_DROPDOWN - Creates a drop-down style button that can display a list    $BTNS_GROUP - Button that stays pressed until another button in the group is pressed    $BTNS_NOPREFIX - The button text will not have an accelerator prefix    $BTNS_SEP - Creates a separator    $BTNS_SHOWTEXT - Specifies that button text should be displayed    $BTNS_WHOLEDROPDOWN - Specifies that the button will have a drop-down arrow"},{"label":"$iState","documentation":"**[optional]** Button state. Can be a combination of the following:    $TBSTATE_CHECKED - The button has the $TBSTYLE_CHECK style and is being clicked    $TBSTATE_PRESSED - The button is being clicked    $TBSTATE_ENABLED - The button accepts user input    $TBSTATE_HIDDEN - The button is not visible and cannot receive user input    $TBSTATE_INDETERMINATE - The button is grayed    $TBSTATE_WRAP - The button is followed by a line break    $TBSTATE_ELLIPSES - The button\'s text is cut off and an ellipsis is displayed    $TBSTATE_MARKED - The button is marked"},{"label":"$iParam","documentation":"**[optional]** Application-defined value"}]},"_GUICtrlToolbar_AddButtonSep":{"documentation":"Adds a separator","label":"_GUICtrlToolbar_AddButtonSep ( $hWnd [, $iWidth = 6] )","params":[{"label":"$hWnd","documentation":"Handle to toolbar"},{"label":"$iWidth","documentation":"**[optional]** Separator width"}]},"_GUICtrlToolbar_AddString":{"documentation":"Adds a new string to the toolbar\'s string pool","label":"_GUICtrlToolbar_AddString ( $hWnd, $sString )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sString","documentation":"String to add"}]},"_GUICtrlToolbar_ButtonCount":{"documentation":"Retrieves a count of the buttons","label":"_GUICtrlToolbar_ButtonCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_CheckButton":{"documentation":"Checks or unchecks a given button","label":"_GUICtrlToolbar_CheckButton ( $hWnd, $iCommandID [, $bCheck = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$bCheck","documentation":"**[optional]** Check state:    True - Button will be checked    False - Button will be unchecked"}]},"_GUICtrlToolbar_ClickAccel":{"documentation":"Clicks a specific button using it\'s accelerator","label":"_GUICtrlToolbar_ClickAccel ( $hWnd, $sAccelKey [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sAccelKey","documentation":"Button accelerator"},{"label":"$sButton","documentation":"**[optional]** Button to click"},{"label":"$bMove","documentation":"**[optional]** Mouse movement flag:    True - Mouse will be moved    False - Mouse will not be moved"},{"label":"$iClicks","documentation":"**[optional]** Number of clicks"},{"label":"$iSpeed","documentation":"**[optional]** Mouse movement speed"}]},"_GUICtrlToolbar_ClickButton":{"documentation":"Clicks a specific button","label":"_GUICtrlToolbar_ClickButton ( $hWnd, $iCommandID [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$sButton","documentation":"**[optional]** Button to click"},{"label":"$bMove","documentation":"**[optional]** Mouse movement flag:    True - Mouse will be moved    False - Mouse will not be moved"},{"label":"$iClicks","documentation":"**[optional]** Number of clicks"},{"label":"$iSpeed","documentation":"**[optional]** Mouse movement speed"}]},"_GUICtrlToolbar_ClickIndex":{"documentation":"Clicks a specific button using it\'s index","label":"_GUICtrlToolbar_ClickIndex ( $hWnd, $iIndex [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 1]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"Button index"},{"label":"$sButton","documentation":"**[optional]** Button to click"},{"label":"$bMove","documentation":"**[optional]** Mouse movement flag:    True - Mouse will be moved    False - Mouse will not be moved"},{"label":"$iClicks","documentation":"**[optional]** Number of clicks"},{"label":"$iSpeed","documentation":"**[optional]** Mouse movement speed"}]},"_GUICtrlToolbar_CommandToIndex":{"documentation":"Retrieves the index for the button associated with the specified command identifier","label":"_GUICtrlToolbar_CommandToIndex ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_Create":{"documentation":"Create a Toolbar control","label":"_GUICtrlToolbar_Create ( $hWnd [, $iStyle = 0x00000800 [, $iExStyle = 0x00000000]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$iStyle","documentation":"**[optional]** Control styles:    $TBSTYLE_ALTDRAG - Allows users to change a toolbar button\'s position by dragging it while holding down the ALT key.        If this style is not specified, the user must hold down the SHIFT key while dragging a button.        Note that the $CCS_ADJUSTABLE style must be specified to enable toolbar buttons to be dragged.    $TBSTYLE_CUSTOMERASE - Generates $NM_CUSTOMDRAW messages when the toolbar processes $WM_ERASEBKGND messages    $TBSTYLE_FLAT - Creates a flat toolbar    $TBSTYLE_LIST - Creates a flat toolbar with button text to the right of the bitmap    $TBSTYLE_REGISTERDROP - Generates $TBN_GETOBJECT notification messages to request drop target objects when the cursor passes over toolbar buttons.    $TBSTYLE_TOOLTIPS - Creates a ToolTip control that an application can use to display descriptive text for the buttons in the toolbar.    $TBSTYLE_TRANSPARENT - Creates a transparent toolbar. In a transparent toolbar, the toolbar is transparent but the buttons are not.        Button text appears under button bitmaps. To prevent repainting problems, this style should be set before the toolbar control becomes visible.    $TBSTYLE_WRAPABLE - Creates a toolbar that can have multiple lines of buttons.        Toolbar buttons can \\"wrap\\" to the next line when the toolbar becomes too narrow to include all buttons on the same line.        When the toolbar is wrapped, the break will occur on either the rightmost separator or the rightmost button if there are no separators on the bar.        This style must be set to display a vertical toolbar control when the toolbar is part of a vertical rebar control.Default: $TBSTYLE_FLATForced: $WS_CHILD, $WS_CLIPSIBLINGS, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Control extended styles:    $TBSTYLE_EX_DRAWDDARROWS - Allows buttons to have a separate dropdown arrow. Buttons that have the    $BTNS_DROPDOWN style will be drawn with a drop down arrow in a separate section, to the right of the button.        If the arrow is clicked, only the arrow portion of the button will depress, and the toolbar control will send a $TBN_DROPDOWN notification to prompt the application to display the dropdown menu.        If the main part of the button is clicked, the toolbar control sends a $WM_COMMAND message with the button\'s ID.    $TBSTYLE_EX_HIDECLIPPEDBUTTONS - Hides partially clipped buttons    $TBSTYLE_EX_DOUBLEBUFFER - Requires the toolbar to be double buffered    $TBSTYLE_EX_MIXEDBUTTONS - Allows you to set text for all buttons, but only display it for the buttons with the $BTNS_SHOWTEXT button style.        The $TBSTYLE_LIST style must also be set.        Normally, when a button does not display text, you must handle $TBN_GETINFOTIP to display a ToolTip.        With the $TBSTYLE_EX_MIXEDBUTTONS extended style, text that is set but not displayed on a button will automatically be used as the button\'s ToolTip text.        You only need to handle $TBN_GETINFOTIP if it needs more flexibility in specifying the ToolTip text."}]},"_GUICtrlToolbar_Customize":{"documentation":"Displays the Customize Toolbar dialog box","label":"_GUICtrlToolbar_Customize ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_DeleteButton":{"documentation":"Deletes a button from the toolbar","label":"_GUICtrlToolbar_DeleteButton ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_Destroy":{"documentation":"Delete the control","label":"_GUICtrlToolbar_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_EnableButton":{"documentation":"Enables or disables the specified button","label":"_GUICtrlToolbar_EnableButton ( $hWnd, $iCommandID [, $bEnable = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$bEnable","documentation":"**[optional]** Enable flag:    True - Button will be enabled    False - Button will be disabled"}]},"_GUICtrlToolbar_FindToolbar":{"documentation":"Finds a specific toolbar","label":"_GUICtrlToolbar_FindToolbar ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Window handle or text of window"},{"label":"$sText","documentation":"Button text to search for"}]},"_GUICtrlToolbar_GetAnchorHighlight":{"documentation":"Retrieves the anchor highlight setting","label":"_GUICtrlToolbar_GetAnchorHighlight ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetBitmapFlags":{"documentation":"Retrieves the flags that describe the type of bitmap to be used","label":"_GUICtrlToolbar_GetBitmapFlags ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetButtonBitmap":{"documentation":"Retrieves the index of the bitmap associated with a button","label":"_GUICtrlToolbar_GetButtonBitmap ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_GetButtonInfo":{"documentation":"Retrieves information for a button","label":"_GUICtrlToolbar_GetButtonInfo ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_GetButtonInfoEx":{"documentation":"Retrieves extended information for a button","label":"_GUICtrlToolbar_GetButtonInfoEx ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_GetButtonParam":{"documentation":"Retrieves the button param value","label":"_GUICtrlToolbar_GetButtonParam ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_GetButtonRect":{"documentation":"Retrieves the bounding rectangle for a button","label":"_GUICtrlToolbar_GetButtonRect ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_GetButtonRectEx":{"documentation":"Retrieves the bounding rectangle for a specified toolbar button","label":"_GUICtrlToolbar_GetButtonRectEx ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_GetButtonSize":{"documentation":"Retrieves the current button width and height, in pixels","label":"_GUICtrlToolbar_GetButtonSize ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetButtonState":{"documentation":"Retrieves information about the state of the specified button","label":"_GUICtrlToolbar_GetButtonState ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_GetButtonStyle":{"documentation":"Retrieves the style flags of a button","label":"_GUICtrlToolbar_GetButtonStyle ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_GetButtonText":{"documentation":"Retrieves the display text of a button","label":"_GUICtrlToolbar_GetButtonText ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_GetColorScheme":{"documentation":"Retrieves the color scheme information","label":"_GUICtrlToolbar_GetColorScheme ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetDisabledImageList":{"documentation":"Retrieves the disabled button image list","label":"_GUICtrlToolbar_GetDisabledImageList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetExtendedStyle":{"documentation":"Retrieves the extended styles","label":"_GUICtrlToolbar_GetExtendedStyle ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetHotImageList":{"documentation":"Retrieves the hot button image list","label":"_GUICtrlToolbar_GetHotImageList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetHotItem":{"documentation":"Retrieves the index of the hot item","label":"_GUICtrlToolbar_GetHotItem ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetImageList":{"documentation":"Retrieves the default state image list","label":"_GUICtrlToolbar_GetImageList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetInsertMark":{"documentation":"Retrieves the current insertion mark","label":"_GUICtrlToolbar_GetInsertMark ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetInsertMarkColor":{"documentation":"Retrieves the color used to draw the insertion mark","label":"_GUICtrlToolbar_GetInsertMarkColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetMaxSize":{"documentation":"Retrieves the total size of all of the visible buttons and separators","label":"_GUICtrlToolbar_GetMaxSize ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetMetrics":{"documentation":"Retrieves the metrics of a toolbar control","label":"_GUICtrlToolbar_GetMetrics ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetPadding":{"documentation":"Retrieves the horizontal and vertical padding","label":"_GUICtrlToolbar_GetPadding ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetRows":{"documentation":"Retrieves the number of rows of buttons","label":"_GUICtrlToolbar_GetRows ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetString":{"documentation":"Retrieves a string from the string pool","label":"_GUICtrlToolbar_GetString ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"Index of the string"}]},"_GUICtrlToolbar_GetStyle":{"documentation":"Retrieves the styles currently in use for a toolbar control","label":"_GUICtrlToolbar_GetStyle ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetStyleAltDrag":{"documentation":"Indicates that the control allows buttons to be dragged","label":"_GUICtrlToolbar_GetStyleAltDrag ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetStyleCustomErase":{"documentation":"Indicates that the control generates NM_CUSTOMDRAW notification messages","label":"_GUICtrlToolbar_GetStyleCustomErase ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetStyleFlat":{"documentation":"Indicates that the control is flat","label":"_GUICtrlToolbar_GetStyleFlat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetStyleList":{"documentation":"Indicates that the control has button text to the right of the bitmap","label":"_GUICtrlToolbar_GetStyleList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetStyleRegisterDrop":{"documentation":"Indicates that the control generates TBN_GETOBJECT notification messages","label":"_GUICtrlToolbar_GetStyleRegisterDrop ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetStyleToolTips":{"documentation":"Indicates that the control has tooltips","label":"_GUICtrlToolbar_GetStyleToolTips ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetStyleTransparent":{"documentation":"Indicates that the control is transparent","label":"_GUICtrlToolbar_GetStyleTransparent ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetStyleWrapable":{"documentation":"Indicates that the control is wrapable","label":"_GUICtrlToolbar_GetStyleWrapable ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetTextRows":{"documentation":"Retrieves the maximum number of text rows that can be displayed on a button","label":"_GUICtrlToolbar_GetTextRows ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetToolTips":{"documentation":"Retrieves the handle to the ToolTip control","label":"_GUICtrlToolbar_GetToolTips ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_GetUnicodeFormat":{"documentation":"Retrieves the Unicode character format flag","label":"_GUICtrlToolbar_GetUnicodeFormat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_GUICtrlToolbar_HideButton":{"documentation":"Hides or shows the specified button","label":"_GUICtrlToolbar_HideButton ( $hWnd, $iCommandID [, $bHide = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$bHide","documentation":"**[optional]** State indicator:    True - Button will be hidden    False - Button will be made visible"}]},"_GUICtrlToolbar_HighlightButton":{"documentation":"Sets the highlight state of a given button control","label":"_GUICtrlToolbar_HighlightButton ( $hWnd, $iCommandID [, $bHighlight = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$bHighlight","documentation":"**[optional]** Highlight state:    True - Button will be highlighted    False - Button will be unhighlighted"}]},"_GUICtrlToolbar_HitTest":{"documentation":"Determines where a point lies within the control","label":"_GUICtrlToolbar_HitTest ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iX","documentation":"X position to test"},{"label":"$iY","documentation":"Y position to test"}]},"_GUICtrlToolbar_IndexToCommand":{"documentation":"Retrieves the command identifier associated with the button","label":"_GUICtrlToolbar_IndexToCommand ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"Button index"}]},"_GUICtrlToolbar_InsertButton":{"documentation":"Inserts a button","label":"_GUICtrlToolbar_InsertButton ( $hWnd, $iIndex, $iID, $iImage [, $sText = \\"\\" [, $iStyle = 0 [, $iState = 4 [, $iParam = 0]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of a button"},{"label":"$iID","documentation":"Command ID"},{"label":"$iImage","documentation":"0-based image index"},{"label":"$sText","documentation":"**[optional]** Button text"},{"label":"$iStyle","documentation":"**[optional]** Button style. Can be a combination of the following:    $BTNS_AUTOSIZE - The toolbar control should not assign the standard width to the button    $BTNS_BUTTON - Standard button    $BTNS_CHECK - Toggles between the pressed and nonpressed    $BTNS_CHECKGROUP - Button that stays pressed until another button in the group is pressed    $BTNS_DROPDOWN - Creates a drop-down style button that can display a list    $BTNS_GROUP - Button that stays pressed until another button in the group is pressed    $BTNS_NOPREFIX - The button text will not have an accelerator prefix    $BTNS_SEP - Creates a separator    $BTNS_SHOWTEXT - Specifies that button text should be displayed    $BTNS_WHOLEDROPDOWN - Specifies that the button will have a drop-down arrow"},{"label":"$iState","documentation":"**[optional]** Button state. Can be a combination of the following:    $TBSTATE_CHECKED - The button has the $TBSTYLE_CHECK style and is being clicked    $TBSTATE_PRESSED - The button is being clicked    $TBSTATE_ENABLED - The button accepts user input    $TBSTATE_HIDDEN - The button is not visible and cannot receive user input    $TBSTATE_INDETERMINATE - The button is grayed    $TBSTATE_WRAP - The button is followed by a line break    $TBSTATE_ELLIPSES - The button\'s text is cut off and an ellipsis is displayed    $TBSTATE_MARKED - The button is marked"},{"label":"$iParam","documentation":"**[optional]** Application-defined value"}]},"_GUICtrlToolbar_InsertMarkHitTest":{"documentation":"Retrieves the insertion mark information for a point","label":"_GUICtrlToolbar_InsertMarkHitTest ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iX","documentation":"X position relative to the client area"},{"label":"$iY","documentation":"Y position relative to the client area"}]},"_GUICtrlToolbar_IsButtonChecked":{"documentation":"Indicates whether the specified button is checked","label":"_GUICtrlToolbar_IsButtonChecked ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_IsButtonEnabled":{"documentation":"Indicates whether the specified button is enabled","label":"_GUICtrlToolbar_IsButtonEnabled ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_IsButtonHidden":{"documentation":"Indicates whether the specified button is hidden","label":"_GUICtrlToolbar_IsButtonHidden ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_IsButtonHighlighted":{"documentation":"Indicates whether the specified button is hilighted","label":"_GUICtrlToolbar_IsButtonHighlighted ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_IsButtonIndeterminate":{"documentation":"Indicates whether the specified button is indeterminate","label":"_GUICtrlToolbar_IsButtonIndeterminate ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_IsButtonPressed":{"documentation":"Indicates that the button is being clicked","label":"_GUICtrlToolbar_IsButtonPressed ( $hWnd, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"}]},"_GUICtrlToolbar_LoadBitmap":{"documentation":"Adds a bitmap to the image list from a file","label":"_GUICtrlToolbar_LoadBitmap ( $hWnd, $sFileName )","params":[{"label":"$hWnd","documentation":"Handle to toolbar"},{"label":"$sFileName","documentation":"Fully qualified path to bitmap file"}]},"_GUICtrlToolbar_LoadImages":{"documentation":"Loads system defined button images into a toolbar control\'s image list","label":"_GUICtrlToolbar_LoadImages ( $hWnd, $iBitMapID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iBitMapID","documentation":"Identifier of a system-defined button image list. Can be set to one of the following values:    $IDB_HIST_LARGE_COLOR    $IDB_HIST_SMALL_COLOR    $IDB_STD_LARGE_COLOR    $IDB_STD_SMALL_COLOR    $IDB_VIEW_LARGE_COLOR    $IDB_VIEW_SMALL_COLOR    $IDB_HIST_NORMAL    $IDB_HIST_HOT    $IDB_HIST_DISABLED    $IDB_HIST_PRESSED"}]},"_GUICtrlToolbar_MapAccelerator":{"documentation":"Determines the ID of the button that corresponds to the specified accelerator","label":"_GUICtrlToolbar_MapAccelerator ( $hWnd, $sAccelKey )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sAccelKey","documentation":"Accelerator character"}]},"_GUICtrlToolbar_MoveButton":{"documentation":"Moves a button from one index to another","label":"_GUICtrlToolbar_MoveButton ( $hWnd, $iOldPos, $iNewPos )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iOldPos","documentation":"0-based index of the button to be moved"},{"label":"$iNewPos","documentation":"0-based index where the button will be moved"}]},"_GUICtrlToolbar_PressButton":{"documentation":"Presses or releases the specified button","label":"_GUICtrlToolbar_PressButton ( $hWnd, $iCommandID [, $bPress = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$bPress","documentation":"**[optional]** Pressed state:    True - Button will be set to a pressed state    False - Button will be set to an unpressed state"}]},"_GUICtrlToolbar_SetAnchorHighlight":{"documentation":"Sets the anchor highlight setting","label":"_GUICtrlToolbar_SetAnchorHighlight ( $hWnd, $bAnchor )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bAnchor","documentation":"Anchor highlighting setting:    True - Anchor highlighting will be enabled    False - Anchor highlighting will be disabled"}]},"_GUICtrlToolbar_SetBitmapSize":{"documentation":"Sets the size of the bitmapped images to be added to a toolbar","label":"_GUICtrlToolbar_SetBitmapSize ( $hWnd, $iWidth, $iHeight )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iWidth","documentation":"Width, in pixels, of the bitmapped images"},{"label":"$iHeight","documentation":"Height, in pixels, of the bitmapped images"}]},"_GUICtrlToolbar_SetButtonBitMap":{"documentation":"Sets the index of the bitmap associated with a button","label":"_GUICtrlToolbar_SetButtonBitMap ( $hWnd, $iCommandID, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$iIndex","documentation":"0-based index of an images image list"}]},"_GUICtrlToolbar_SetButtonInfo":{"documentation":"Sets information for a button","label":"_GUICtrlToolbar_SetButtonInfo ( $hWnd, $iCommandID [, $iImage = -3 [, $iState = -1 [, $iStyle = -1 [, $iWidth = -1 [, $iParam = -1]]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$iImage","documentation":"**[optional]** 0-based index of the button image.Set this parameter to -1 and the control will send the $TBN_GETDISPINFO notification to retrieve the image index when it is needed.Set this to -2 to indicate that the button does not have an image.The button layout will only include space for the text.If the button is a separator, this is the width of the separator, in pixels."},{"label":"$iState","documentation":"**[optional]** Button state. Can be a combination of the following:    $TBSTATE_CHECKED - The button being clicked    $TBSTATE_PRESSED - The button is being clicked    $TBSTATE_ENABLED - The button accepts user input    $TBSTATE_HIDDEN - The button is not visible    $TBSTATE_INDETERMINATE - The button is grayed    $TBSTATE_WRAP - The button is followed by a line break    $TBSTATE_ELLIPSES - The button\'s text is cut off    $TBSTATE_MARKED - The button is marked"},{"label":"$iStyle","documentation":"**[optional]** Button style. Can be a combination of the following:    $BTNS_AUTOSIZE - The control should not assign the standard width    $BTNS_BUTTON - Standard button    $BTNS_CHECK - Toggles between the pressed and nonpressed    $BTNS_CHECKGROUP - Button that stays pressed until another button is pressed    $BTNS_DROPDOWN - Creates a drop-down style button that can display a list    $BTNS_GROUP - Button that stays pressed until another button is pressed    $BTNS_NOPREFIX - The button text will not have an accelerator prefix    $BTNS_SEP - Creates a separator    $BTNS_SHOWTEXT - Specifies that button text should be displayed    $BTNS_WHOLEDROPDOWN - Specifies that the button will have a drop-down arrow"},{"label":"$iWidth","documentation":"**[optional]** Button width"},{"label":"$iParam","documentation":"**[optional]** Application-defined value"}]},"_GUICtrlToolbar_SetButtonInfoEx":{"documentation":"Sets extended information for a button","label":"_GUICtrlToolbar_SetButtonInfoEx ( $hWnd, $iCommandID, $tButton )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$tButton","documentation":"$tagTBBUTTONINFO structure"}]},"_GUICtrlToolbar_SetButtonParam":{"documentation":"Sets the button param value","label":"_GUICtrlToolbar_SetButtonParam ( $hWnd, $iCommandID, $iParam )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$iParam","documentation":"Application-defined value"}]},"_GUICtrlToolbar_SetButtonSize":{"documentation":"Sets the size of the buttons to be added to a toolbar","label":"_GUICtrlToolbar_SetButtonSize ( $hWnd, $iHeight, $iWidth )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iHeight","documentation":"Height, in pixels, of the buttons"},{"label":"$iWidth","documentation":"Width, in pixels, of the buttons"}]},"_GUICtrlToolbar_SetButtonState":{"documentation":"Sets information about the state of the specified button","label":"_GUICtrlToolbar_SetButtonState ( $hWnd, $iCommandID, $iState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$iState","documentation":"Button state. Can be one or more of the following:    $TBSTATE_CHECKED - The button has the $TBSTYLE_CHECK style and is being clicked    $TBSTATE_PRESSED - The button is being clicked    $TBSTATE_ENABLED - The button accepts user input    $TBSTATE_HIDDEN - The button is not visible and cannot receive user input    $TBSTATE_INDETERMINATE - The button is grayed    $TBSTATE_WRAP - The button is followed by a line break    $TBSTATE_ELLIPSES - The button\'s text is cut off and an ellipsis is displayed    $TBSTATE_MARKED - The button is marked"}]},"_GUICtrlToolbar_SetButtonStyle":{"documentation":"Sets the style flags of a button","label":"_GUICtrlToolbar_SetButtonStyle ( $hWnd, $iCommandID, $iStyle )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$iStyle","documentation":"Button style. Can be one or more of the following:    $BTNS_AUTOSIZE - The toolbar control should not assign the standard width to the button    $BTNS_CHECK - Toggles between the pressed and nonpressed    $BTNS_CHECKGROUP - Button that stays pressed until another button in the group is pressed    $BTNS_DROPDOWN - Drop-down style button that can display a list    $BTNS_GROUP - Button that stays pressed until another button in the group is pressed    $BTNS_NOPREFIX - The button text will not have an accelerator prefix    $BTNS_SEP - Separator    $BTNS_SHOWTEXT - Button text should be displayed    $BTNS_WHOLEDROPDOWN - The button has a drop-down arrow"}]},"_GUICtrlToolbar_SetButtonText":{"documentation":"Sets the display text of a button","label":"_GUICtrlToolbar_SetButtonText ( $hWnd, $iCommandID, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$sText","documentation":"Button text"}]},"_GUICtrlToolbar_SetButtonWidth":{"documentation":"Sets the minimum and maximum button widths in the toolbar control","label":"_GUICtrlToolbar_SetButtonWidth ( $hWnd, $iMin, $iMax )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iMin","documentation":"Minimum button width, in pixels"},{"label":"$iMax","documentation":"Maximum button width, in pixels"}]},"_GUICtrlToolbar_SetCmdID":{"documentation":"Sets the command identifier of a toolbar button","label":"_GUICtrlToolbar_SetCmdID ( $hWnd, $iIndex, $iCommandID )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"0-based index of the button whose command identifier is to be set"},{"label":"$iCommandID","documentation":"Command identifier"}]},"_GUICtrlToolbar_SetColorScheme":{"documentation":"Sets the color scheme information","label":"_GUICtrlToolbar_SetColorScheme ( $hWnd, $iHighlight, $iShadow )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iHighlight","documentation":"Highlight color"},{"label":"$iShadow","documentation":"Shadow color"}]},"_GUICtrlToolbar_SetDisabledImageList":{"documentation":"Sets the disabled image list","label":"_GUICtrlToolbar_SetDisabledImageList ( $hWnd, $hImageList )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$hImageList","documentation":"Handle to the image list that will be set"}]},"_GUICtrlToolbar_SetDrawTextFlags":{"documentation":"Sets the text drawing flags for the toolbar","label":"_GUICtrlToolbar_SetDrawTextFlags ( $hWnd, $iMask, $iDTFlags )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iMask","documentation":"One or more of the DT_ flags, specified in DrawText, that indicate which bits in $iDTFlags will be used when drawing the text."},{"label":"$iDTFlags","documentation":"One or more of the DT_ flags, specified in DrawText, that indicate how the button text will be drawn. This value will be passed to the DrawText API when the button text is drawn."}]},"_GUICtrlToolbar_SetExtendedStyle":{"documentation":"Sets the extended styles control","label":"_GUICtrlToolbar_SetExtendedStyle ( $hWnd, $iStyle )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iStyle","documentation":"Control extended styles. Can be one or more of the following:    $TBSTYLE_EX_DRAWDDARROWS - Allows buttons to have a separate dropdown arrow    $TBSTYLE_EX_MIXEDBUTTONS - Allows mixing buttons with text and images    $TBSTYLE_EX_HIDECLIPPEDBUTTONS - Hides partially clipped buttons    $TBSTYLE_EX_DOUBLEBUFFER - Requires the toolbar to be double buffered"}]},"_GUICtrlToolbar_SetHotImageList":{"documentation":"Sets the hot button image list","label":"_GUICtrlToolbar_SetHotImageList ( $hWnd, $hImageList )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$hImageList","documentation":"Handle to the image list that will be set"}]},"_GUICtrlToolbar_SetHotItem":{"documentation":"Sets the hot item","label":"_GUICtrlToolbar_SetHotItem ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndex","documentation":"Index of the item that will be made hot. If this value is -1, none of the items will be hot."}]},"_GUICtrlToolbar_SetImageList":{"documentation":"Sets the default button image list","label":"_GUICtrlToolbar_SetImageList ( $hWnd, $hImageList )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$hImageList","documentation":"Handle to the image list to set. If this parameter is 0, no images are displayed in the buttons."}]},"_GUICtrlToolbar_SetIndent":{"documentation":"Sets the indentation for the first button control","label":"_GUICtrlToolbar_SetIndent ( $hWnd, $iIndent )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iIndent","documentation":"Indentation in pixels"}]},"_GUICtrlToolbar_SetIndeterminate":{"documentation":"Sets or clears the indeterminate state of the specified button","label":"_GUICtrlToolbar_SetIndeterminate ( $hWnd, $iCommandID [, $bState = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCommandID","documentation":"Button command ID"},{"label":"$bState","documentation":"**[optional]** True if indeterminate, otherwise False"}]},"_GUICtrlToolbar_SetInsertMark":{"documentation":"Sets the current insertion mark for the toolbar","label":"_GUICtrlToolbar_SetInsertMark ( $hWnd, $iButton [, $iFlags = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iButton","documentation":"0-based index of the insertion mark. If -1, there is no mark."},{"label":"$iFlags","documentation":"**[optional]** Defines where the insertion mark is in relation to $iButton:    0 - Left of the specified button    1 - Right of the specified button    2 - Background of the toolbar"}]},"_GUICtrlToolbar_SetInsertMarkColor":{"documentation":"Sets the color used to draw the insertion mark","label":"_GUICtrlToolbar_SetInsertMarkColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iColor","documentation":"Insertion mark color"}]},"_GUICtrlToolbar_SetMaxTextRows":{"documentation":"Sets the maximum number of text rows displayed button","label":"_GUICtrlToolbar_SetMaxTextRows ( $hWnd, $iMaxRows )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iMaxRows","documentation":"Maximum number of rows of text that can be displayed"}]},"_GUICtrlToolbar_SetMetrics":{"documentation":"Sets the metrics of a toolbar control","label":"_GUICtrlToolbar_SetMetrics ( $hWnd, $iXPad, $iYPad, $iXSpacing, $iYSpacing )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iXPad","documentation":"Width of the padding inside the toolbar buttons"},{"label":"$iYPad","documentation":"Height of the padding inside the toolbar buttons"},{"label":"$iXSpacing","documentation":"Width of the space between toolbar buttons"},{"label":"$iYSpacing","documentation":"Height of the space between toolbar buttons"}]},"_GUICtrlToolbar_SetPadding":{"documentation":"Sets the padding control","label":"_GUICtrlToolbar_SetPadding ( $hWnd, $iCX, $iCY )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iCX","documentation":"The horizontal padding, in pixels"},{"label":"$iCY","documentation":"The vertical padding, in pixels"}]},"_GUICtrlToolbar_SetParent":{"documentation":"Sets the window to which the control sends notification messages","label":"_GUICtrlToolbar_SetParent ( $hWnd, $hParent )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$hParent","documentation":"Handle to the window to receive notification messages"}]},"_GUICtrlToolbar_SetRows":{"documentation":"Sets the number of rows of buttons","label":"_GUICtrlToolbar_SetRows ( $hWnd, $iRows [, $bLarger = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iRows","documentation":"Number of rows requested. The minimum number of rows is one, and the maximum number of rows is equal to the total number of buttons."},{"label":"$bLarger","documentation":"**[optional]** Flag that indicates whether to create more rows than requested when the system can not create the number of rows specified by $iRows.If this parameter is True, the system creates more rows.If it is False, the system creates fewer rows."}]},"_GUICtrlToolbar_SetStyle":{"documentation":"Sets the style control","label":"_GUICtrlToolbar_SetStyle ( $hWnd, $iStyle )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$iStyle","documentation":"Control styles. Can be a combination of the following:    $TBSTYLE_TOOLTIPS - Creates a ToolTip control    $TBSTYLE_WRAPABLE - Creates a toolbar that can have multiple lines of buttons    $TBSTYLE_ALTDRAG - Allows users to change a toolbar button\'s position by dragging it    $TBSTYLE_FLAT - Creates a flat toolbar    $TBSTYLE_LIST - Creates a flat toolbar with button text to the right of the bitmap    $TBSTYLE_CUSTOMERASE - Sends $NM_CUSTOMDRAW messages when processing $WM_ERASEBKGND messages    $TBSTYLE_REGISTERDROP - Sends $TBN_GETOBJECT messages to request drop target objects    $TBSTYLE_TRANSPARENT - Creates a transparent toolbar"}]},"_GUICtrlToolbar_SetStyleAltDrag":{"documentation":"Sets whether that the control allows buttons to be dragged","label":"_GUICtrlToolbar_SetStyleAltDrag ( $hWnd [, $bState = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"**[optional]** True to set, False to unset"}]},"_GUICtrlToolbar_SetStyleCustomErase":{"documentation":"Sets whether the control generates NM_CUSTOMDRAW notification messages","label":"_GUICtrlToolbar_SetStyleCustomErase ( $hWnd [, $bState = True] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"**[optional]** True to set, False to unset"}]},"_GUICtrlToolbar_SetStyleFlat":{"documentation":"Sets whether the control is flat","label":"_GUICtrlToolbar_SetStyleFlat ( $hWnd, $bState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"True to set, false to unset"}]},"_GUICtrlToolbar_SetStyleList":{"documentation":"Sets whether the control has button text to the right of the bitmap","label":"_GUICtrlToolbar_SetStyleList ( $hWnd, $bState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"True to set, false to unset"}]},"_GUICtrlToolbar_SetStyleRegisterDrop":{"documentation":"Sets whether the control generates TBN_GETOBJECT notification messages","label":"_GUICtrlToolbar_SetStyleRegisterDrop ( $hWnd, $bState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"True to set, false to unset"}]},"_GUICtrlToolbar_SetStyleToolTips":{"documentation":"Sets whether the control has tooltips","label":"_GUICtrlToolbar_SetStyleToolTips ( $hWnd, $bState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"True to set, false to unset"}]},"_GUICtrlToolbar_SetStyleTransparent":{"documentation":"Sets whether the control is transparent","label":"_GUICtrlToolbar_SetStyleTransparent ( $hWnd, $bState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"True to set, false to unset"}]},"_GUICtrlToolbar_SetStyleWrapable":{"documentation":"Sets whether the control is wrapable","label":"_GUICtrlToolbar_SetStyleWrapable ( $hWnd, $bState )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bState","documentation":"True to set, false to unset"}]},"_GUICtrlToolbar_SetToolTips":{"documentation":"Associates a ToolTip control with a toolbar","label":"_GUICtrlToolbar_SetToolTips ( $hWnd, $hToolTip )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$hToolTip","documentation":"Handle to the ToolTip control"}]},"_GUICtrlToolbar_SetUnicodeFormat":{"documentation":"Sets the Unicode character format flag","label":"_GUICtrlToolbar_SetUnicodeFormat ( $hWnd [, $bUnicode = False] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$bUnicode","documentation":"**[optional]** Unicode character setting:    True - Control uses Unicode characters    False - Control uses ANSI characters"}]},"_GUICtrlToolbar_SetWindowTheme":{"documentation":"Sets the visual style","label":"_GUICtrlToolbar_SetWindowTheme ( $hWnd, $sTheme )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sTheme","documentation":"String that contains the toolbar visual style"}]},"_GUICtrlTreeView_Add":{"documentation":"Adds a new item","label":"_GUICtrlTreeView_Add ( $hWnd, $hSibling, $sText [, $iImage = -1 [, $iSelImage = -1]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hSibling","documentation":"Sibling item"},{"label":"$sText","documentation":"Text of the item"},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iSelImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"}]},"_GUICtrlTreeView_AddChild":{"documentation":"Adds a new item","label":"_GUICtrlTreeView_AddChild ( $hWnd, $hParent, $sText [, $iImage = -1 [, $iSelImage = -1]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hParent","documentation":"Parent item"},{"label":"$sText","documentation":"Text of the item"},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iSelImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"}]},"_GUICtrlTreeView_AddChildFirst":{"documentation":"Adds a new item","label":"_GUICtrlTreeView_AddChildFirst ( $hWnd, $hParent, $sText [, $iImage = -1 [, $iSelImage = -1]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hParent","documentation":"Parent item"},{"label":"$sText","documentation":"Text of the item"},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iSelImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"}]},"_GUICtrlTreeView_AddFirst":{"documentation":"Adds a new item","label":"_GUICtrlTreeView_AddFirst ( $hWnd, $hSibling, $sText [, $iImage = -1 [, $iSelImage = -1]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hSibling","documentation":"Sibling item"},{"label":"$sText","documentation":"Text of the item"},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iSelImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"}]},"_GUICtrlTreeView_BeginUpdate":{"documentation":"Prevents updating of the control until the EndUpdate function is called","label":"_GUICtrlTreeView_BeginUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_ClickItem":{"documentation":"Click on a item","label":"_GUICtrlTreeView_ClickItem ( $hWnd, $hItem [, $sButton = \\"left\\" [, $bMove = False [, $iClicks = 1 [, $iSpeed = 0]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$sButton","documentation":"**[optional]** Button to click"},{"label":"$bMove","documentation":"**[optional]** If True, the mouse will be moved. If False, the mouse does not move."},{"label":"$iClicks","documentation":"**[optional]** Number of clicks"},{"label":"$iSpeed","documentation":"**[optional]** Mouse movement speed"}]},"_GUICtrlTreeView_Create":{"documentation":"Create a TreeView control","label":"_GUICtrlTreeView_Create ( $hWnd, $iX, $iY [, $iWidth = 150 [, $iHeight = 150 [, $iStyle = 0x00000037 [, $iExStyle = 0x00000000]]]] )","params":[{"label":"$hWnd","documentation":"Handle to parent or owner window"},{"label":"$iX","documentation":"Horizontal position of the control"},{"label":"$iY","documentation":"Vertical position of the control"},{"label":"$iWidth","documentation":"**[optional]** Control width"},{"label":"$iHeight","documentation":"**[optional]** Control height"},{"label":"$iStyle","documentation":"**[optional]** Control style:    $TVS_CHECKBOXES - Enables check boxes for items. A check box will be displayed only if an image is associated with the item.        When set to this style, the control effectively uses DrawFrameControl to create and set a state image list containing two images.        State image 1 is the unchecked box and state image 2 is the checked box.        Setting the state image to zero removes the check box.        Version 5.80 displays a check box even if no image is associated with the item.    $TVS_DISABLEDRAGDROP - Prevents the control from sending $TVN_BEGINDRAG notification messages    $TVS_EDITLABELS - Allows the user to edit the item labels    $TVS_FULLROWSELECT - Enables full row selection.        The entire row of the selected item is highlighted, and clicking anywhere on an item\'s row causes it to be selected.        This style cannot be used in conjunction with the $TVS_HASLINES style.    $TVS_HASBUTTONS - Displays plus and minus buttons next to parent items.        The user clicks the buttons to expand or collapse a parent item\'s list of child items.        To include buttons with items at the root, you must also specify $TVS_LINESATROOT.    $TVS_HASLINES - Uses lines to show the hierarchy of items    $TVS_INFOTIP - Obtains ToolTip information by sending the $TVN_GETINFOTIP notification    $TVS_LINESATROOT - Uses lines to link items at the root of the control. This value is ignored if    $TVS_HASLINES is not also specified.    $TVS_NOHSCROLL - Disables horizontal scrolling in the control. The control will not display any horizontal scroll bars.    $TVS_NONEVENHEIGHT - Sets the height of the items to an odd height with the $TVM_SETITEMHEIGHT message.        By default the height of items must be an even value.    $TVS_NOSCROLL - Disables both horizontal and vertical scrolling in the control. The control will not display any scroll bars.    $TVS_NOTOOLTIPS - Disables ToolTips    $TVS_RTLREADING - Causes text to be displayed from right to left    $TVS_SHOWSELALWAYS - Causes a selected item to remain selected when the control loses focus    $TVS_SINGLEEXPAND - Causes the item being selected to expand and the item being unselected to collapse upon selection.        If the mouse is used to single-click the selected item and that item is closed, it will be expanded.        If the user holds down the CTRL key while selecting an item, the item being unselected will not be collapsed.        Version 5.80 causes the item being selected to expand and the item being unselected to collapse upon selection.        If the user holds down the CTRL key while selecting an item, the item being unselected will not be collapsed.    $TVS_TRACKSELECT - Enables hot trackingDefault: $TVS_HASBUTTONS, $TVS_HASLINES, $TVS_LINESATROOT, $TVS_DISABLEDRAGDROP, $TVS_SHOWSELALWAYSForced: $WS_CHILD, $WS_VISIBLE"},{"label":"$iExStyle","documentation":"**[optional]** Control extended style"}]},"_GUICtrlTreeView_CreateDragImage":{"documentation":"Creates a dragging bitmap for the specified item","label":"_GUICtrlTreeView_CreateDragImage ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_CreateSolidBitMap":{"documentation":"Creates a solid color bitmap","label":"_GUICtrlTreeView_CreateSolidBitMap ( $hWnd, $iColor, $iWidth, $iHeight )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iColor","documentation":"The color of the bitmap, stated in RGB"},{"label":"$iWidth","documentation":"The width of the bitmap"},{"label":"$iHeight","documentation":"The height of the bitmap"}]},"_GUICtrlTreeView_Delete":{"documentation":"Removes an item and all its children","label":"_GUICtrlTreeView_Delete ( $hWnd [, $hItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** Handle/Control ID of item"}]},"_GUICtrlTreeView_DeleteAll":{"documentation":"Removes all items from a tree-view control","label":"_GUICtrlTreeView_DeleteAll ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_DeleteChildren":{"documentation":"Deletes all children of a item","label":"_GUICtrlTreeView_DeleteChildren ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item whose children will be deleted"}]},"_GUICtrlTreeView_Destroy":{"documentation":"Delete the control","label":"_GUICtrlTreeView_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_DisplayRect":{"documentation":"Returns the bounding rectangle for a tree item","label":"_GUICtrlTreeView_DisplayRect ( $hWnd, $hItem [, $bTextOnly = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item whose rectangle will be returned"},{"label":"$bTextOnly","documentation":"**[optional]** If the True, the bounding rectangle includes only the text of the item.Otherwise, it includes the entire line that the item occupies."}]},"_GUICtrlTreeView_DisplayRectEx":{"documentation":"Returns the bounding rectangle for a tree item","label":"_GUICtrlTreeView_DisplayRectEx ( $hWnd, $hItem [, $bTextOnly = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item whose rectangle will be returned"},{"label":"$bTextOnly","documentation":"**[optional]** If the True, the bounding rectangle includes only the text of the item.    Otherwise, it includes the entire line that the item occupies."}]},"_GUICtrlTreeView_EditText":{"documentation":"Begins in-place editing of the specified item\'s text","label":"_GUICtrlTreeView_EditText ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item to edit"}]},"_GUICtrlTreeView_EndEdit":{"documentation":"Ends the editing of the item\'s text","label":"_GUICtrlTreeView_EndEdit ( $hWnd [, $bCancel = False] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bCancel","documentation":"**[optional]** Indicates whether the editing is cancelled without being saved to the item.If True, the system cancels editing without saving the changes."}]},"_GUICtrlTreeView_EndUpdate":{"documentation":"Enables screen repainting that was turned off with the BeginUpdate function","label":"_GUICtrlTreeView_EndUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_EnsureVisible":{"documentation":"Ensures that a item is visible, expanding the parent item or scrolling the control if necessary","label":"_GUICtrlTreeView_EnsureVisible ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_Expand":{"documentation":"Expands or collapses the list of child items associated with the specified parent item, if any","label":"_GUICtrlTreeView_Expand ( $hWnd [, $hItem = 0 [, $bExpand = True]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** Handle to the item"},{"label":"$bExpand","documentation":"**[optional]** Expand or Collapse, use the following values:    True - Expand items    False - Collapse items"}]},"_GUICtrlTreeView_ExpandedOnce":{"documentation":"Indicates if the item\'s list of child items has been expanded at least once","label":"_GUICtrlTreeView_ExpandedOnce ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_FindItem":{"documentation":"Retrieves a item based on it\'s text","label":"_GUICtrlTreeView_FindItem ( $hWnd, $sText [, $bInStr = False [, $hStart = 0]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sText","documentation":"Text to search for"},{"label":"$bInStr","documentation":"**[optional]** If True, the text can be anywhere in the item\'s text."},{"label":"$hStart","documentation":"**[optional]** Item to start searching from. If 0, the root item is used."}]},"_GUICtrlTreeView_FindItemEx":{"documentation":"Retrieves a item based on a tree path","label":"_GUICtrlTreeView_FindItemEx ( $hWnd, $sTreePath [, $hStart = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the control"},{"label":"$sTreePath","documentation":"The path to take, delimiter of your choice, see Opt(\\"GUIDataSeparatorChar\\")"},{"label":"$hStart","documentation":"**[optional]** Item to start searching from. If 0, the root item is used."}]},"_GUICtrlTreeView_GetBkColor":{"documentation":"Retrieve the text back color","label":"_GUICtrlTreeView_GetBkColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetBold":{"documentation":"Indicates if the item is drawn in a bold style","label":"_GUICtrlTreeView_GetBold ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetChecked":{"documentation":"Indicates if a item has its checkbox checked","label":"_GUICtrlTreeView_GetChecked ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetChildCount":{"documentation":"Retrieves the number of children of an parent item","label":"_GUICtrlTreeView_GetChildCount ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to item"}]},"_GUICtrlTreeView_GetChildren":{"documentation":"Indicates whether the item children flag is set","label":"_GUICtrlTreeView_GetChildren ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetCount":{"documentation":"Retrieves a count of the items","label":"_GUICtrlTreeView_GetCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetCut":{"documentation":"Indicates if the item is drawn as if selected as part of a cut and paste operation","label":"_GUICtrlTreeView_GetCut ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetDropTarget":{"documentation":"Indicates whether the item is drawn as a drag and drop target","label":"_GUICtrlTreeView_GetDropTarget ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetEditControl":{"documentation":"Retrieves the handle to the edit control being used to edit a item\'s text","label":"_GUICtrlTreeView_GetEditControl ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetExpanded":{"documentation":"Indicates whether the item is expanded","label":"_GUICtrlTreeView_GetExpanded ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetFirstChild":{"documentation":"Retrieves the first child item of the specified item","label":"_GUICtrlTreeView_GetFirstChild ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetFirstItem":{"documentation":"Retrieves the topmost or very first item","label":"_GUICtrlTreeView_GetFirstItem ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetFirstVisible":{"documentation":"Retrieves the first visible item in the control","label":"_GUICtrlTreeView_GetFirstVisible ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetFocused":{"documentation":"Indicates whether the item has focus","label":"_GUICtrlTreeView_GetFocused ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetHeight":{"documentation":"Retrieves the current height of the each item","label":"_GUICtrlTreeView_GetHeight ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetImageIndex":{"documentation":"Retrieves the normal state image index","label":"_GUICtrlTreeView_GetImageIndex ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetImageListIconHandle":{"documentation":"Retrieve ImageList handle","label":"_GUICtrlTreeView_GetImageListIconHandle ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndex","documentation":"ImageList index to retrieve"}]},"_GUICtrlTreeView_GetIndent":{"documentation":"Retrieves the amount, in pixels, that child items are indented relative to their parent items","label":"_GUICtrlTreeView_GetIndent ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetInsertMarkColor":{"documentation":"Retrieves the color used to draw the insertion mark","label":"_GUICtrlTreeView_GetInsertMarkColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetISearchString":{"documentation":"Retrieves the incremental search string","label":"_GUICtrlTreeView_GetISearchString ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetItemByIndex":{"documentation":"Retrieve a item by its position in the list of child items","label":"_GUICtrlTreeView_GetItemByIndex ( $hWnd, $hItem, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iIndex","documentation":"0-based index of item in the list of child items"}]},"_GUICtrlTreeView_GetItemHandle":{"documentation":"Retrieve the item handle","label":"_GUICtrlTreeView_GetItemHandle ( $hWnd [, $hItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** Item ID"}]},"_GUICtrlTreeView_GetItemParam":{"documentation":"Retrieves the application specific value of the item","label":"_GUICtrlTreeView_GetItemParam ( $hWnd [, $hItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** Item ID"}]},"_GUICtrlTreeView_GetLastChild":{"documentation":"Retrieves the last child item of the specified item","label":"_GUICtrlTreeView_GetLastChild ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetLineColor":{"documentation":"Retrieve the line color","label":"_GUICtrlTreeView_GetLineColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetNext":{"documentation":"Retrieves the next item after the calling item","label":"_GUICtrlTreeView_GetNext ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetNextChild":{"documentation":"Returns the next item at the same level as the specified item","label":"_GUICtrlTreeView_GetNextChild ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the child item"}]},"_GUICtrlTreeView_GetNextSibling":{"documentation":"Returns the next item at the same level as the specified item","label":"_GUICtrlTreeView_GetNextSibling ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetNextVisible":{"documentation":"Retrieves the next visible item that follows the specified item","label":"_GUICtrlTreeView_GetNextVisible ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetNormalImageList":{"documentation":"Retrieves the normal image list","label":"_GUICtrlTreeView_GetNormalImageList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetParentHandle":{"documentation":"Retrieve the parent handle of item","label":"_GUICtrlTreeView_GetParentHandle ( $hWnd [, $hItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** item ID/handle"}]},"_GUICtrlTreeView_GetParentParam":{"documentation":"Retrieve the parent control ID/Param of item","label":"_GUICtrlTreeView_GetParentParam ( $hWnd [, $hItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** item ID/Param"}]},"_GUICtrlTreeView_GetPrev":{"documentation":"Retrieves the previous item before the calling item","label":"_GUICtrlTreeView_GetPrev ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetPrevChild":{"documentation":"Retrieves the previous child item of a specified item","label":"_GUICtrlTreeView_GetPrevChild ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetPrevSibling":{"documentation":"Returns the previous item before the calling item at the same level","label":"_GUICtrlTreeView_GetPrevSibling ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetPrevVisible":{"documentation":"Retrieves the first visible item that precedes the specified item","label":"_GUICtrlTreeView_GetPrevVisible ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetScrollTime":{"documentation":"Retrieves the maximum scroll time","label":"_GUICtrlTreeView_GetScrollTime ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetSelected":{"documentation":"Indicates whether the item appears in the selected state","label":"_GUICtrlTreeView_GetSelected ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetSelectedImageIndex":{"documentation":"Retrieves the index in the image list of the image displayed for the item when it is selected","label":"_GUICtrlTreeView_GetSelectedImageIndex ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetSelection":{"documentation":"Retrieves the currently selected item","label":"_GUICtrlTreeView_GetSelection ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetSiblingCount":{"documentation":"Retrieves the number of siblings at the level of an item","label":"_GUICtrlTreeView_GetSiblingCount ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to item"}]},"_GUICtrlTreeView_GetState":{"documentation":"Retrieve the state of the item","label":"_GUICtrlTreeView_GetState ( $hWnd [, $hItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** item ID/handle"}]},"_GUICtrlTreeView_GetStateImageIndex":{"documentation":"Retrieves the index of the state image to display for the item","label":"_GUICtrlTreeView_GetStateImageIndex ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetStateImageList":{"documentation":"Retrieves the handle to the state image list","label":"_GUICtrlTreeView_GetStateImageList ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetText":{"documentation":"Retrieve the item text","label":"_GUICtrlTreeView_GetText ( $hWnd [, $hItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** item ID/handle"}]},"_GUICtrlTreeView_GetTextColor":{"documentation":"Retrieve the text color","label":"_GUICtrlTreeView_GetTextColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetToolTips":{"documentation":"Retrieves the handle to the child ToolTip control","label":"_GUICtrlTreeView_GetToolTips ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetTree":{"documentation":"Retrieve all items text","label":"_GUICtrlTreeView_GetTree ( $hWnd [, $hItem = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** item ID/handle"}]},"_GUICtrlTreeView_GetUnicodeFormat":{"documentation":"Retrieves the Unicode character format flag","label":"_GUICtrlTreeView_GetUnicodeFormat ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_GetVisible":{"documentation":"Indicates whether the item is currently visible in the control image","label":"_GUICtrlTreeView_GetVisible ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_GetVisibleCount":{"documentation":"Returns the number of items that can be fully visible in the control","label":"_GUICtrlTreeView_GetVisibleCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUICtrlTreeView_HitTest":{"documentation":"Returns information about the location of a point relative to the control","label":"_GUICtrlTreeView_HitTest ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"X position, relative to the control, to test"},{"label":"$iY","documentation":"Y position, relative to the control, to test"}]},"_GUICtrlTreeView_HitTestEx":{"documentation":"Returns information about the location of a point relative to the control","label":"_GUICtrlTreeView_HitTestEx ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"X position to test"},{"label":"$iY","documentation":"Y position to test"}]},"_GUICtrlTreeView_HitTestItem":{"documentation":"Returns the item at the specified coordinates","label":"_GUICtrlTreeView_HitTestItem ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iX","documentation":"X position to test"},{"label":"$iY","documentation":"Y position to test"}]},"_GUICtrlTreeView_Index":{"documentation":"Retrieves the position of the item in the list","label":"_GUICtrlTreeView_Index ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to item"}]},"_GUICtrlTreeView_InsertItem":{"documentation":"Insert an item","label":"_GUICtrlTreeView_InsertItem ( $hWnd, $sItem_Text [, $hItem_Parent = 0 [, $hItem_After = 0 [, $iImage = -1 [, $iSelImage = -1]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$sItem_Text","documentation":"Text of new item. See remark."},{"label":"$hItem_Parent","documentation":"**[optional]** parent item ID/handle/item"},{"label":"$hItem_After","documentation":"**[optional]** item ID/handle/flag to insert new item after"},{"label":"$iImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"},{"label":"$iSelImage","documentation":"**[optional]** 0-based index of the item\'s icon in the control\'s image list"}]},"_GUICtrlTreeView_IsFirstItem":{"documentation":"Indicates whether the tree item is very first","label":"_GUICtrlTreeView_IsFirstItem ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_IsParent":{"documentation":"Indicates whether one item is the parent of another item","label":"_GUICtrlTreeView_IsParent ( $hWnd, $hParent, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hParent","documentation":"Handle to parent item"},{"label":"$hItem","documentation":"Handle to the item to test"}]},"_GUICtrlTreeView_Level":{"documentation":"Indicates the level of indentation of a item","label":"_GUICtrlTreeView_Level ( $hWnd, $hItem )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"}]},"_GUICtrlTreeView_SelectItem":{"documentation":"Selects the specified item, scrolls the item into view, or redraws the item","label":"_GUICtrlTreeView_SelectItem ( $hWnd, $hItem [, $iFlag = 0] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iFlag","documentation":"**[optional]** Action flag:    $TVGN_CARET - Sets the selection to the given item    $TVGN_DROPHILITE - Redraws the given item in the style used to indicate the target of a drag/drop operation    $TVGN_FIRSTVISIBLE - Scrolls the tree view vertically so that the given item is the first visible item"}]},"_GUICtrlTreeView_SelectItemByIndex":{"documentation":"Selects the item based on it\'s index in the parent list","label":"_GUICtrlTreeView_SelectItemByIndex ( $hWnd, $hItem, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iIndex","documentation":"0-based index of item in the parent list"}]},"_GUICtrlTreeView_SetBkColor":{"documentation":"Sets the back color","label":"_GUICtrlTreeView_SetBkColor ( $hWnd, $vRGBColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$vRGBColor","documentation":"New hex RGB Color"}]},"_GUICtrlTreeView_SetBold":{"documentation":"Sets whether the item is drawn using a bold sytle","label":"_GUICtrlTreeView_SetBold ( $hWnd, $hItem [, $bFlag = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$bFlag","documentation":"**[optional]** True if item is drawn bold, otherwise False"}]},"_GUICtrlTreeView_SetChecked":{"documentation":"Sets whether a item has it\'s checkbox checked or not","label":"_GUICtrlTreeView_SetChecked ( $hWnd, $hItem [, $bCheck = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$bCheck","documentation":"**[optional]** Value to set checked state to:    True - Checked    False - Not checked"}]},"_GUICtrlTreeView_SetCheckedByIndex":{"documentation":"Sets whether an item has it\'s checkbox checked or not by it\'s index","label":"_GUICtrlTreeView_SetCheckedByIndex ( $hWnd, $hItem, $iIndex [, $bCheck = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iIndex","documentation":"0-based index into $hItem list of items"},{"label":"$bCheck","documentation":"**[optional]** Value to set checked state to:    True - Checked    False - Not checked"}]},"_GUICtrlTreeView_SetChildren":{"documentation":"Sets whether the item children flag","label":"_GUICtrlTreeView_SetChildren ( $hWnd, $hItem [, $bFlag = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$bFlag","documentation":"**[optional]** Flag setting:    True - Item children flag is set    False - Item children flag is cleared"}]},"_GUICtrlTreeView_SetCut":{"documentation":"Sets whether the item is drawn as if selected as part of a cut and paste operation","label":"_GUICtrlTreeView_SetCut ( $hWnd, $hItem [, $bFlag = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$bFlag","documentation":"**[optional]** Flag setting:    True - Item is cut    False - Item is not"}]},"_GUICtrlTreeView_SetDropTarget":{"documentation":"Sets whether the item is drawn as a drag and drop target","label":"_GUICtrlTreeView_SetDropTarget ( $hWnd, $hItem [, $bFlag = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$bFlag","documentation":"**[optional]** Flag setting:    True - Item is drawn as a drag and drop target    False - Item is not"}]},"_GUICtrlTreeView_SetFocused":{"documentation":"Sets whether the item appears to have focus","label":"_GUICtrlTreeView_SetFocused ( $hWnd, $hItem [, $bFlag = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$bFlag","documentation":"**[optional]** Flag setting:    True - Item appears to have focus    False - Item does not"}]},"_GUICtrlTreeView_SetHeight":{"documentation":"Sets the height of the each item","label":"_GUICtrlTreeView_SetHeight ( $hWnd, $iHeight )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iHeight","documentation":"New height of every item in pixels. Heights less than 1 will be set to 1.If not even and the control does not have the $TVS_NONEVENHEIGHT style this value will be rounded down to the nearest even value.If -1, the control will revert to using its default item height."}]},"_GUICtrlTreeView_SetIcon":{"documentation":"Set an item icon","label":"_GUICtrlTreeView_SetIcon ( $hWnd [, $hItem = 0 [, $sIconFile = \\"\\" [, $iIconID = 0 [, $iImageMode = 6]]]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** item ID/handle"},{"label":"$sIconFile","documentation":"**[optional]** The file to extract the icon of"},{"label":"$iIconID","documentation":"**[optional]** The iconID to extract of the file"},{"label":"$iImageMode","documentation":"**[optional]** 2=normal image / 4=selected image to set"}]},"_GUICtrlTreeView_SetImageIndex":{"documentation":"Sets the index into image list for which image is displayed when a item is in its normal state","label":"_GUICtrlTreeView_SetImageIndex ( $hWnd, $hItem, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iIndex","documentation":"Image list index"}]},"_GUICtrlTreeView_SetIndent":{"documentation":"Sets the width of indentation for a tree-view control and redraws the control to reflect the new width","label":"_GUICtrlTreeView_SetIndent ( $hWnd, $iIndent )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iIndent","documentation":"Width, in pixels, of the indentation."}]},"_GUICtrlTreeView_SetInsertMark":{"documentation":"Sets the insertion mark","label":"_GUICtrlTreeView_SetInsertMark ( $hWnd, $hItem [, $bAfter = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Specifies at which item the insertion mark will be placed. If this is 0, the insertion mark is removed."},{"label":"$bAfter","documentation":"**[optional]** Specifies if the insertion mark is placed before or after the item.If this is True, the insertion mark will be placed after the item.If this is False, the insertion mark will be placed before the item."}]},"_GUICtrlTreeView_SetInsertMarkColor":{"documentation":"Sets the color used to draw the insertion mark","label":"_GUICtrlTreeView_SetInsertMarkColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iColor","documentation":"Insertion mark color"}]},"_GUICtrlTreeView_SetItemHeight":{"documentation":"Sets the height of an individual item","label":"_GUICtrlTreeView_SetItemHeight ( $hWnd, $hItem, $iIntegral )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iIntegral","documentation":"Height of the item. This height is in increments of the standard item height. By default, eachitem gets one increment of item height. Setting this field to 2 will give the item twice the standard height;setting this field to 3 will give the item three times the standard height; and so on. The control does notdraw in this extra area."}]},"_GUICtrlTreeView_SetItemParam":{"documentation":"Sets the value specific to the item","label":"_GUICtrlTreeView_SetItemParam ( $hWnd, $hItem, $iParam )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iParam","documentation":"A value to associate with the item"}]},"_GUICtrlTreeView_SetLineColor":{"documentation":"Sets the line color","label":"_GUICtrlTreeView_SetLineColor ( $hWnd, $vRGBColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$vRGBColor","documentation":"New Hex RGB line color"}]},"_GUICtrlTreeView_SetNormalImageList":{"documentation":"Sets the normal image list for the control","label":"_GUICtrlTreeView_SetNormalImageList ( $hWnd, $hImageList )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hImageList","documentation":"Handle to the image list. If 0, all images are removed"}]},"_GUICtrlTreeView_SetScrollTime":{"documentation":"Sets the maximum scroll time","label":"_GUICtrlTreeView_SetScrollTime ( $hWnd, $iTime )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$iTime","documentation":"New maximum scroll time, in milliseconds"}]},"_GUICtrlTreeView_SetSelected":{"documentation":"Sets whether the item appears in the selected state","label":"_GUICtrlTreeView_SetSelected ( $hWnd, $hItem [, $bFlag = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$bFlag","documentation":"**[optional]** True if item is to be selected, otherwise False"}]},"_GUICtrlTreeView_SetSelectedImageIndex":{"documentation":"Sets the selected image index","label":"_GUICtrlTreeView_SetSelectedImageIndex ( $hWnd, $hItem, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iIndex","documentation":"Image list index"}]},"_GUICtrlTreeView_SetState":{"documentation":"Set the state of the specified item","label":"_GUICtrlTreeView_SetState ( $hWnd, $hItem [, $iState = 0 [, $bSetState = True]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iState","documentation":"**[optional]** The new item state, can be one or more of the following:    $TVIS_SELECTED - Set item selected    $TVIS_CUT - Set item as part of a cut-and-paste operation    $TVIS_DROPHILITED - Set item as a drag-and-drop target    $TVIS_BOLD - Set item as bold    $TVIS_EXPANDED - Expand item    $TVIS_EXPANDEDONCE - Set item\'s list of child items has been expanded at least once    $TVIS_EXPANDPARTIAL - Set item as partially expanded"},{"label":"$bSetState","documentation":"**[optional]** True if item state is to be set, False remove item state"}]},"_GUICtrlTreeView_SetStateImageIndex":{"documentation":"Sets the index into image list for the state image","label":"_GUICtrlTreeView_SetStateImageIndex ( $hWnd, $hItem, $iIndex )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"Handle to the item"},{"label":"$iIndex","documentation":"Image list index"}]},"_GUICtrlTreeView_SetStateImageList":{"documentation":"Sets the state image list for the control","label":"_GUICtrlTreeView_SetStateImageList ( $hWnd, $hImageList )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hImageList","documentation":"Handle to the image list. If 0, all images are removed"}]},"_GUICtrlTreeView_SetText":{"documentation":"Set the text of an item","label":"_GUICtrlTreeView_SetText ( $hWnd [, $hItem = 0 [, $sText = \\"\\"]] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hItem","documentation":"**[optional]** Handle to the item"},{"label":"$sText","documentation":"**[optional]** The new item text"}]},"_GUICtrlTreeView_SetTextColor":{"documentation":"Sets the text color","label":"_GUICtrlTreeView_SetTextColor ( $hWnd, $vRGBColor )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$vRGBColor","documentation":"New Hex text color"}]},"_GUICtrlTreeView_SetToolTips":{"documentation":"Sets the handle to the child ToolTip control","label":"_GUICtrlTreeView_SetToolTips ( $hWnd, $hToolTip )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$hToolTip","documentation":"Handle to a ToolTip control"}]},"_GUICtrlTreeView_SetUnicodeFormat":{"documentation":"Sets the Unicode character format flag","label":"_GUICtrlTreeView_SetUnicodeFormat ( $hWnd [, $bFormat = True] )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"},{"label":"$bFormat","documentation":"**[optional]** Determines the character set that is used by the control.    True - The control will use Unicode characters    False - The control will use ANSI characters."}]},"_GUICtrlTreeView_Sort":{"documentation":"Sorts the items","label":"_GUICtrlTreeView_Sort ( $hWnd )","params":[{"label":"$hWnd","documentation":"Control ID/Handle to the control"}]},"_GUIImageList_Add":{"documentation":"Adds an image or images to an image list","label":"_GUIImageList_Add ( $hWnd, $hImage [, $hMask = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$hImage","documentation":"Handle to the bitmap that contains the image or images. The number of images is inferred from the width of the bitmap."},{"label":"$hMask","documentation":"**[optional]** Handle to the bitmap that contains the mask"}]},"_GUIImageList_AddBitmap":{"documentation":"Adds a bitmap to an image list","label":"_GUIImageList_AddBitmap ( $hWnd, $sImage [, $sMask = \\"\\"] )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$sImage","documentation":"Path to the bitmap that contains the image"},{"label":"$sMask","documentation":"**[optional]** Path to the bitmap that contains the mask"}]},"_GUIImageList_AddIcon":{"documentation":"Adds an icon to an image list","label":"_GUIImageList_AddIcon ( $hWnd, $sFilePath [, $iIndex = 0 [, $bLarge = False]] )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$sFilePath","documentation":"Path to the icon that contains the image"},{"label":"$iIndex","documentation":"**[optional]** Specifies the 0-based index of the icon to extract"},{"label":"$bLarge","documentation":"**[optional]** Extract Large Icon"}]},"_GUIImageList_AddMasked":{"documentation":"Adds an image or images to an image list, generating a mask from the specified bitmap","label":"_GUIImageList_AddMasked ( $hWnd, $hImage [, $iMask = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$hImage","documentation":"Handle to the bitmap that contains the image or images. The number of images is inferred from the width of the bitmap."},{"label":"$iMask","documentation":"**[optional]** Color used to generate the mask. Each pixel of this color in the specified bitmap is changed to black, and the corresponding bit in the mask is set to 1."}]},"_GUIImageList_BeginDrag":{"documentation":"Begins dragging an image","label":"_GUIImageList_BeginDrag ( $hWnd, $iTrack, $iXHotSpot, $iYHotSpot )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iTrack","documentation":"Index of the image to drag"},{"label":"$iXHotSpot","documentation":"X coordinate of the location of the drag position relative to image upper left corner"},{"label":"$iYHotSpot","documentation":"Y coordinate of the location of the drag position relative to image upper left corner"}]},"_GUIImageList_Copy":{"documentation":"Source image is copied to the destination image\'s index","label":"_GUIImageList_Copy ( $hWnd, $iSource, $iDestination )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iSource","documentation":"The 0-based index of the image to be used as the source of the copy operation"},{"label":"$iDestination","documentation":"The 0-based index of the image to be used as the destination of the copy operation. The image index must exist"}]},"_GUIImageList_Create":{"documentation":"Create an ImageList control","label":"_GUIImageList_Create ( [$iCX = 16 [, $iCY = 16 [, $iColor = 4 [, $iOptions = 0 [, $iInitial = 4 [, $iGrow = 4]]]]]] )","params":[{"label":"$iCX","documentation":"**[optional]** Width, in pixels, of each image"},{"label":"$iCY","documentation":"**[optional]** Height, in pixels, of each image"},{"label":"$iColor","documentation":"**[optional]** Image color depth:    0 - Use the default behavior    1 - Use a 4 bit DIB section    2 - Use a 8 bit DIB section    3 - Use a 16 bit DIB section    4 - Use a 24 bit DIB section    5 - Use a 32 bit DIB section    6 - Use a device-dependent bitmap"},{"label":"$iOptions","documentation":"**[optional]** Option flags. Can be a combination of the following:    1 - Use a mask    2 - The images in the lists are mirrored    4 - The image list contains a strip of images"},{"label":"$iInitial","documentation":"**[optional]** Number of images that the image list initially contains"},{"label":"$iGrow","documentation":"**[optional]** Number of images by which the image list can grow when the system needs to make room for new images. This parameter represents the number of new images that the resized image list can contain."}]},"_GUIImageList_Destroy":{"documentation":"Destroys an image list","label":"_GUIImageList_Destroy ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"}]},"_GUIImageList_DestroyIcon":{"documentation":"Destroys an icon and frees any memory the icon occupied","label":"_GUIImageList_DestroyIcon ( $hIcon )","params":[{"label":"$hIcon","documentation":"Handle to the icon"}]},"_GUIImageList_DragEnter":{"documentation":"Displays the drag image at the specified position within the window","label":"_GUIImageList_DragEnter ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iX","documentation":"The x-coordinate at which to display the drag image.The coordinate is relative to the upper-left corner of the window, not the client area."},{"label":"$iY","documentation":"The y-coordinate at which to display the drag image.The coordinate is relative to the upper-left corner of the window, not the client area."}]},"_GUIImageList_DragLeave":{"documentation":"Unlocks the specified window and hides the drag image, allowing the window to be updated","label":"_GUIImageList_DragLeave ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"}]},"_GUIImageList_DragMove":{"documentation":"Moves the image that is being dragged during a drag-and-drop operation","label":"_GUIImageList_DragMove ( $iX, $iY )","params":[{"label":"$iX","documentation":"The x-coordinate at which to display the drag image.The coordinate is relative to the upper-left corner of the window, not the client area."},{"label":"$iY","documentation":"The y-coordinate at which to display the drag image.The coordinate is relative to the upper-left corner of the window, not the client area."}]},"_GUIImageList_Draw":{"documentation":"Draws an image list item in the specified device context","label":"_GUIImageList_Draw ( $hWnd, $iIndex, $hDC, $iX, $iY [, $iStyle = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iIndex","documentation":"0-based index of the image to draw"},{"label":"$hDC","documentation":"Handle to the destination device context"},{"label":"$iX","documentation":"X coordinate where the image will be drawn"},{"label":"$iY","documentation":"Y coordinate where the image will be drawn"},{"label":"$iStyle","documentation":"**[optional]** Drawing style and overlay image:    1 - Draws the image transparently using the mask, regardless of the background color    2 - Draws the image, blending 25 percent with the system highlight color    4 - Draws the image, blending 50 percent with the system highlight color    8 - Draws the mask"}]},"_GUIImageList_DrawEx":{"documentation":"Draws an image list item in the specified device context","label":"_GUIImageList_DrawEx ( $hWnd, $iIndex, $hDC, $iX, $iY [, $iDX = 0 [, $iDY = 0 [, $iRGBBk = 0xFFFFFFFF [, $iRGBFg = 0xFFFFFFFF [, $iStyle = 0]]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iIndex","documentation":"0-based index of the image to draw"},{"label":"$hDC","documentation":"Handle to the destination device context"},{"label":"$iX","documentation":"X coordinate where the image will be drawn"},{"label":"$iY","documentation":"Y coordinate where the image will be drawn"},{"label":"$iDX","documentation":"**[optional]** The width of the portion of the image to draw relative to the upper-left corner of the image.If $iDX and $iDY are zero, the function draws the entire image. The function does not ensure that the parameters are valid."},{"label":"$iDY","documentation":"**[optional]** The height of the portion of the image to draw, relative to the upper-left corner of the image.If $iDX and $iDY are zero, the function draws the entire image. The function does not ensure that the parameters are valid."},{"label":"$iRGBBk","documentation":"**[optional]** The background color of the image. This parameter can be an application-defined RGB value or one of the following values:    $CLR_NONE - No background color. The image is drawn transparently.    $CLR_DEFAULT - The default background color. The image is drawn using the background color of the image list."},{"label":"$iRGBFg","documentation":"**[optional]** The foreground color of the image. This parameter can be an application-defined RGB value or one of the following values:    $CLR_NONE - No blend color. The image is blended with the color of the destination device context.    $CLR_DEFAULT - The default foreground color. The image is drawn using the system highlight color as the foreground color."},{"label":"$iStyle","documentation":"**[optional]** Drawing style and overlay image:    1 - Draws the image transparently using the mask, regardless of the background color    2 - Draws the image, blending 25 percent with the system highlight color    4 - Draws the image, blending 50 percent with the system highlight color    8 - Draws the mask"}]},"_GUIImageList_Duplicate":{"documentation":"Creates a duplicate of an existing image list","label":"_GUIImageList_Duplicate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"}]},"_GUIImageList_EndDrag":{"documentation":"Ends a drag operation","label":"_GUIImageList_EndDrag (  )","params":[]},"_GUIImageList_GetBkColor":{"documentation":"Retrieves the current background color for an image list","label":"_GUIImageList_GetBkColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"}]},"_GUIImageList_GetIcon":{"documentation":"Creates an icon from an image and mask in an image list","label":"_GUIImageList_GetIcon ( $hWnd, $iIndex [, $iStyle = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iIndex","documentation":"0-based index of the image"},{"label":"$iStyle","documentation":"**[optional]** Drawing style and overlay image:    1 - Draws the image transparently using the mask, regardless of the background color    2 - Draws the image, blending 25 percent with the system highlight color    4 - Draws the image, blending 50 percent with the system highlight color    8 - Draws the mask"}]},"_GUIImageList_GetIconHeight":{"documentation":"Retrieves the height of the images in an image list","label":"_GUIImageList_GetIconHeight ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"}]},"_GUIImageList_GetIconSize":{"documentation":"Retrieves the dimensions of images in an image list","label":"_GUIImageList_GetIconSize ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"}]},"_GUIImageList_GetIconSizeEx":{"documentation":"Retrieves the dimensions of images in an image list","label":"_GUIImageList_GetIconSizeEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"}]},"_GUIImageList_GetIconWidth":{"documentation":"Retrieves the width of the images in an image list","label":"_GUIImageList_GetIconWidth ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"}]},"_GUIImageList_GetImageCount":{"documentation":"Retrieves the number of images in an image list","label":"_GUIImageList_GetImageCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"}]},"_GUIImageList_GetImageInfoEx":{"documentation":"Retrieves information about an image","label":"_GUIImageList_GetImageInfoEx ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iIndex","documentation":"Index of the image"}]},"_GUIImageList_Remove":{"documentation":"Remove Image(s) from the ImageList","label":"_GUIImageList_Remove ( $hWnd [, $iIndex = -1] )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iIndex","documentation":"**[optional]** The index of the image to remove. If this parameter is -1, the function removes all images"}]},"_GUIImageList_ReplaceIcon":{"documentation":"Replaces an image with an icon or cursor","label":"_GUIImageList_ReplaceIcon ( $hWnd, $iIndex, $hIcon )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iIndex","documentation":"Index of the image to replace. If -1, the function appends the image to the end of the list."},{"label":"$hIcon","documentation":"Handle to the icon or cursor that contains the bitmap and mask for the new image"}]},"_GUIImageList_SetBkColor":{"documentation":"Sets the background color for an image list","label":"_GUIImageList_SetBkColor ( $hWnd, $iClrBk )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iClrBk","documentation":"The background color to set.This parameter can be the $CLR_NONE value; in that case, images are drawn transparently using the mask."}]},"_GUIImageList_SetIconSize":{"documentation":"Sets the dimensions of images in an image list and removes all images from the list","label":"_GUIImageList_SetIconSize ( $hWnd, $iCX, $iCY )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iCX","documentation":"The width, in pixels, of the images in the image list"},{"label":"$iCY","documentation":"The height, in pixels, of the images in the image list"}]},"_GUIImageList_SetImageCount":{"documentation":"Resizes an existing image list","label":"_GUIImageList_SetImageCount ( $hWnd, $iNewCount )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iNewCount","documentation":"The new size of the image list"}]},"_GUIImageList_Swap":{"documentation":"Swap image between Source and Destination image\'s index","label":"_GUIImageList_Swap ( $hWnd, $iSource, $iDestination )","params":[{"label":"$hWnd","documentation":"Handle to the imagelist"},{"label":"$iSource","documentation":"The 0-based index of the image to be used as the source of the swap operation"},{"label":"$iDestination","documentation":"The 0-based index of the image to be used as the destination of the swap operation"}]},"_GUIScrollBars_EnableScrollBar":{"documentation":"Enable/Disable scrollbar","label":"_GUIScrollBars_EnableScrollBar ( $hWnd [, $iSBflags = $SB_BOTH [, $iArrows = $ESB_ENABLE_BOTH]] )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iSBflags","documentation":"**[optional]** Specifies the scroll bar type. This parameter can be one of the following values:    $SB_BOTH - Enables or disables the arrows on the horizontal and vertical scroll bars associated with the specified window.    $SB_CTL - Indicates that the scroll bar is a scroll bar control. The $hWnd must be the handle to the scroll bar control.    $SB_HORZ - Enables or disables the arrows on the horizontal scroll bar associated with the specified window.    $SB_VERT - Enables or disables the arrows on the vertical scroll bar associated with the specified window."},{"label":"$iArrows","documentation":"**[optional]** Specifies whether the scroll bar arrows are enabled or disabled and indicates which arrows are enabled or disabled.This parameter can be one of the following values    $ESB_DISABLE_BOTH - Disables both arrows on a scroll bar.    $ESB_DISABLE_DOWN - Disables the down arrow on a vertical scroll bar.    $ESB_DISABLE_LEFT - Disables the left arrow on a horizontal scroll bar.    $ESB_DISABLE_LTUP - Disables the left arrow on a horizontal scroll bar or the up arrow of a vertical scroll bar.    $ESB_DISABLE_RIGHT - Disables the right arrow on a horizontal scroll bar.    $ESB_DISABLE_RTDN - Disables the right arrow on a horizontal scroll bar or the down arrow of a vertical scroll bar.    $ESB_DISABLE_UP - Disables the up arrow on a vertical scroll bar.    $ESB_ENABLE_BOTH - Enables both arrows on a scroll bar."}]},"_GUIScrollBars_GetScrollBarInfoEx":{"documentation":"Retrieves information about the specified scroll bar","label":"_GUIScrollBars_GetScrollBarInfoEx ( $hWnd, $iObject )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iObject","documentation":"Specifies the scroll bar object. This parameter can be one of the following values:    $OBJID_CLIENT - The $hWnd parameter is a handle to a scroll bar control.    $OBJID_HSCROLL - The horizontal scroll bar of the $hWnd window.    $OBJID_VSCROLL - The vertical scroll bar of the $hWnd window."}]},"_GUIScrollBars_GetScrollBarRect":{"documentation":"Retrieves coordinates of the scroll bar","label":"_GUIScrollBars_GetScrollBarRect ( $hWnd, $iObject )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iObject","documentation":"Specifies the scroll bar object. This parameter can be one of the following values:    $OBJID_CLIENT - The $hWnd parameter is a handle to a scroll bar control.    $OBJID_HSCROLL - The horizontal scroll bar of the $hWnd window.    $OBJID_VSCROLL - The vertical scroll bar of the $hWnd window."}]},"_GUIScrollBars_GetScrollBarRGState":{"documentation":"Retrieves the state of a scroll bar component","label":"_GUIScrollBars_GetScrollBarRGState ( $hWnd, $iObject )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iObject","documentation":"Specifies the scroll bar object. This parameter can be one of the following values:    $OBJID_CLIENT - The $hWnd parameter is a handle to a scroll bar control.    $OBJID_HSCROLL - The horizontal scroll bar of the $hWnd window.    $OBJID_VSCROLL - The vertical scroll bar of the $hWnd window."}]},"_GUIScrollBars_GetScrollBarXYLineButton":{"documentation":"Retrieves the Height or width of the thumb","label":"_GUIScrollBars_GetScrollBarXYLineButton ( $hWnd, $iObject )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iObject","documentation":"Specifies the scroll bar object. This parameter can be one of the following values:    $OBJID_CLIENT - The $hWnd parameter is a handle to a scroll bar control.    $OBJID_HSCROLL - The horizontal scroll bar of the $hWnd window.    $OBJID_VSCROLL - The vertical scroll bar of the $hWnd window."}]},"_GUIScrollBars_GetScrollBarXYThumbBottom":{"documentation":"Retrieves the Position of the bottom or right of the thumb","label":"_GUIScrollBars_GetScrollBarXYThumbBottom ( $hWnd, $iObject )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iObject","documentation":"Specifies the scroll bar object. This parameter can be one of the following values:    $OBJID_CLIENT - The $hWnd parameter is a handle to a scroll bar control.    $OBJID_HSCROLL - The horizontal scroll bar of the $hWnd window.    $OBJID_VSCROLL - The vertical scroll bar of the $hWnd window."}]},"_GUIScrollBars_GetScrollBarXYThumbTop":{"documentation":"Retrieves the Position of the top or left of the thumb","label":"_GUIScrollBars_GetScrollBarXYThumbTop ( $hWnd, $iObject )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iObject","documentation":"Specifies the scroll bar object. This parameter can be one of the following values:    $OBJID_CLIENT - The $hWnd parameter is a handle to a scroll bar control.    $OBJID_HSCROLL - The horizontal scroll bar of the $hWnd window.    $OBJID_VSCROLL - The vertical scroll bar of the $hWnd window."}]},"_GUIScrollBars_GetScrollInfo":{"documentation":"Retrieves the parameters of a scroll bar","label":"_GUIScrollBars_GetScrollInfo ( $hWnd, $iBar, ByRef $tSCROLLINFO )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Retrieves the parameters for a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Retrieves the parameters for the window\'s standard horizontal scroll bar.    $SB_VERT - Retrieves the parameters for the window\'s standard vertical scroll bar."},{"label":"$tSCROLLINFO","documentation":"Structure of type $tagSCROLLINFO"}]},"_GUIScrollBars_GetScrollInfoEx":{"documentation":"Retrieves the parameters of a scroll bar","label":"_GUIScrollBars_GetScrollInfoEx ( $hWnd, $iBar )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Retrieves the parameters for a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Retrieves the parameters for the window\'s standard horizontal scroll bar.    $SB_VERT - Retrieves the parameters for the window\'s standard vertical scroll bar."}]},"_GUIScrollBars_GetScrollInfoMax":{"documentation":"Retrieves the maximum scrolling position","label":"_GUIScrollBars_GetScrollInfoMax ( $hWnd, $iBar )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Retrieves the parameters for a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Retrieves the parameters for the window\'s standard horizontal scroll bar.    $SB_VERT - Retrieves the parameters for the window\'s standard vertical scroll bar."}]},"_GUIScrollBars_GetScrollInfoMin":{"documentation":"Retrieves the minimum scrolling position","label":"_GUIScrollBars_GetScrollInfoMin ( $hWnd, $iBar )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Retrieves the parameters for a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Retrieves the parameters for the window\'s standard horizontal scroll bar.    $SB_VERT - Retrieves the parameters for the window\'s standard vertical scroll bar."}]},"_GUIScrollBars_GetScrollInfoPage":{"documentation":"Retrieves the page size","label":"_GUIScrollBars_GetScrollInfoPage ( $hWnd, $iBar )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Retrieves the parameters for a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Retrieves the parameters for the window\'s standard horizontal scroll bar.    $SB_VERT - Retrieves the parameters for the window\'s standard vertical scroll bar."}]},"_GUIScrollBars_GetScrollInfoPos":{"documentation":"Retrieves the position of the scroll box","label":"_GUIScrollBars_GetScrollInfoPos ( $hWnd, $iBar )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Retrieves the parameters for a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Retrieves the parameters for the window\'s standard horizontal scroll bar.    $SB_VERT - Retrieves the parameters for the window\'s standard vertical scroll bar."}]},"_GUIScrollBars_GetScrollInfoTrackPos":{"documentation":"Retrieves the immediate position of a scroll box that the user is dragging","label":"_GUIScrollBars_GetScrollInfoTrackPos ( $hWnd, $iBar )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Retrieves the parameters for a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Retrieves the parameters for the window\'s standard horizontal scroll bar.    $SB_VERT - Retrieves the parameters for the window\'s standard vertical scroll bar."}]},"_GUIScrollBars_GetScrollPos":{"documentation":"Retrieves the current position of the scroll box (thumb) in the specified scroll bar","label":"_GUIScrollBars_GetScrollPos ( $hWnd, $iBar )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Retrieves the position of the scroll box in a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Retrieves the position of the scroll box in a window\'s standard horizontal scroll bar    $SB_VERT - Retrieves the position of the scroll box in a window\'s standard vertical scroll bar."}]},"_GUIScrollBars_GetScrollRange":{"documentation":"Retrieves the current minimum and maximum scroll box (thumb) positions for the specified scroll bar","label":"_GUIScrollBars_GetScrollRange ( $hWnd, $iBar )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Retrieves the positions of a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Retrieves the positions of the window\'s standard horizontal scroll bar.    $SB_VERT - Retrieves the positions of the window\'s standard vertical scroll bar."}]},"_GUIScrollBars_Init":{"documentation":"Initialize the scrollbars for the window","label":"_GUIScrollBars_Init ( $hWnd [, $iMaxH = -1 [, $iMaxV = -1]] )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iMaxH","documentation":"**[optional]** Max size of Horizontal scrollbar"},{"label":"$iMaxV","documentation":"**[optional]** Max size of Vertical scrollbar"}]},"_GUIScrollBars_ScrollWindow":{"documentation":"Scrolls the contents of the specified window\'s client area","label":"_GUIScrollBars_ScrollWindow ( $hWnd, $iXAmount, $iYAmount )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iXAmount","documentation":"Specifies the amount, in device units, of horizontal scrolling"},{"label":"$iYAmount","documentation":"Specifies the amount, in device units, of vertical scrolling"}]},"_GUIScrollBars_SetScrollInfo":{"documentation":"Sets the parameters of a scroll bar","label":"_GUIScrollBars_SetScrollInfo ( $hWnd, $iBar, $tSCROLLINFO [, $bRedraw = True] )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Sets the parameters of a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Sets the parameters of the window\'s standard horizontal scroll bar.    $SB_VERT - Sets the parameters of the window\'s standard vertical scroll bar."},{"label":"$tSCROLLINFO","documentation":"Structure of type $tagSCROLLINFO"},{"label":"$bRedraw","documentation":"**[optional]** Specifies whether the scroll bar is redrawn to reflect the changes to the scroll bar"}]},"_GUIScrollBars_SetScrollInfoMax":{"documentation":"Sets the maximum scrolling position","label":"_GUIScrollBars_SetScrollInfoMax ( $hWnd, $iBar, $iMax )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Sets the parameters of a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Sets the parameters of the window\'s standard horizontal scroll bar.    $SB_VERT - Sets the parameters of the window\'s standard vertical scroll bar."},{"label":"$iMax","documentation":"Maximum scrolling position"}]},"_GUIScrollBars_SetScrollInfoMin":{"documentation":"Sets the minimum scrolling position","label":"_GUIScrollBars_SetScrollInfoMin ( $hWnd, $iBar, $iMin )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Sets the parameters of a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Sets the parameters of the window\'s standard horizontal scroll bar.    $SB_VERT - Sets the parameters of the window\'s standard vertical scroll bar."},{"label":"$iMin","documentation":"Minimum scrolling position"}]},"_GUIScrollBars_SetScrollInfoPage":{"documentation":"Sets the page size","label":"_GUIScrollBars_SetScrollInfoPage ( $hWnd, $iBar, $iPage )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Sets the parameters of a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Sets the parameters of the window\'s standard horizontal scroll bar.    $SB_VERT - Sets the parameters of the window\'s standard vertical scroll bar."},{"label":"$iPage","documentation":"Page size"}]},"_GUIScrollBars_SetScrollInfoPos":{"documentation":"Sets the position of the scroll box (thumb) in the specified scroll bar","label":"_GUIScrollBars_SetScrollInfoPos ( $hWnd, $iBar, $iPos )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Sets the parameters of a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Sets the parameters of the window\'s standard horizontal scroll bar.    $SB_VERT - Sets the parameters of the window\'s standard vertical scroll bar."},{"label":"$iPos","documentation":"Position of the scroll box"}]},"_GUIScrollBars_SetScrollRange":{"documentation":"Sets the minimum and maximum scroll box positions for the specified scroll bar","label":"_GUIScrollBars_SetScrollRange ( $hWnd, $iBar, $iMinPos, $iMaxPos )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_CTL - Sets the range of a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Sets the range of a window\'s standard horizontal scroll bar.    $SB_VERT - Sets the range of a window\'s standard vertical scroll bar."},{"label":"$iMinPos","documentation":"Specifies the minimum scrolling position"},{"label":"$iMaxPos","documentation":"Specifies the maximum scrolling position"}]},"_GUIScrollBars_ShowScrollBar":{"documentation":"Shows or hides the specified scroll bar","label":"_GUIScrollBars_ShowScrollBar ( $hWnd, $iBar [, $bShow = True] )","params":[{"label":"$hWnd","documentation":"Handle to the window"},{"label":"$iBar","documentation":"Specifies the type of scroll bar. This parameter can be one of the following values:    $SB_BOTH - Shows or hides a window\'s standard horizontal and vertical scroll bars.    $SB_CTL - Shows or hides a scroll bar control. The $hWnd parameter must be the handle to the scroll bar control.    $SB_HORZ - Shows or hides a window\'s standard horizontal scroll bars.    $SB_VERT - Shows or hides a window\'s standard vertical scroll bar."},{"label":"$bShow","documentation":"**[optional]** Specifies whether the scroll bar is shown or hidden"}]},"_GUIToolTip_Activate":{"documentation":"Activates a ToolTip control","label":"_GUIToolTip_Activate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_AddTool":{"documentation":"Registers a tool with the ToolTip control","label":"_GUIToolTip_AddTool ( $hTool, $hWnd, $sText [, $iID = 0 [, $iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0 [, $iFlags = Default [, $iParam = 0]]]]]]] )","params":[{"label":"$hTool","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hWnd","documentation":"Handle of the window that contains the tool, or 0"},{"label":"$sText","documentation":"Text for the ToolTip control. See remark."},{"label":"$iID","documentation":"**[optional]** Identifier of the tool, or Window handle of the control the tool is to be assigned to"},{"label":"$iLeft","documentation":"**[optional]** X coordinate of the upper left corner of the rectangle"},{"label":"$iTop","documentation":"**[optional]** Y coordinate of the upper left corner of the rectangle"},{"label":"$iRight","documentation":"**[optional]** X coordinate of the lower right corner of the rectangle"},{"label":"$iBottom","documentation":"**[optional]** Y coordinate of the lower right corner of the rectangle"},{"label":"$iFlags","documentation":"**[optional]** Flags that control the ToolTip display"},{"label":"$iParam","documentation":"**[optional]** Application-defined value that is associated with the tool"}]},"_GUIToolTip_AdjustRect":{"documentation":"Calculates the text display rectangle from the window rectangle","label":"_GUIToolTip_AdjustRect ( $hWnd, ByRef $tRECT [, $bLarger = True] )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$tRECT","documentation":"$tagRECT structure that holds a window or text display rectangle"},{"label":"$bLarger","documentation":"**[optional]** Value that specifies which operation to perform. If True, $tRECT is used to specify a text display rectangle and it receives the corresponding window rectangle. If False, $tRECT is used to specify a window rectangle and it receives the corresponding text display rectangle."}]},"_GUIToolTip_BitsToTTF":{"documentation":"Decode bit flags to TTF_* strings","label":"_GUIToolTip_BitsToTTF ( $iFlags )","params":[{"label":"$iFlags","documentation":"A value representing the ToolTip constants needing decoding"}]},"_GUIToolTip_Create":{"documentation":"Creates a ToolTip control","label":"_GUIToolTip_Create ( $hWnd [, $iStyle = $_TT_ghTTDefaultStyle] )","params":[{"label":"$hWnd","documentation":"Handle to the window that will own the tool tip control. See remarks."},{"label":"$iStyle","documentation":"**[optional]** ToolTip style"}]},"_GUIToolTip_Deactivate":{"documentation":"Deactivates a ToolTip control","label":"_GUIToolTip_Deactivate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_DelTool":{"documentation":"Deletes a tool from a tooltip control","label":"_GUIToolTip_DelTool ( $hWnd, $hTool [, $iID = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hTool","documentation":"Handle to the window that contains the tool (see Remarks)"},{"label":"$iID","documentation":"**[optional]** Handle of the tool to delete (see Remarks)"}]},"_GUIToolTip_Destroy":{"documentation":"Delete a ToolTip control","label":"_GUIToolTip_Destroy ( ByRef $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_EnumTools":{"documentation":"Retrieves information about the current tool","label":"_GUIToolTip_EnumTools ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$iIndex","documentation":"0-based index of the tool for which to retrieve information"}]},"_GUIToolTip_GetBubbleHeight":{"documentation":"Returns the height of the control","label":"_GUIToolTip_GetBubbleHeight ( $hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010] )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hTool","documentation":"Handle to the window that contains the tool"},{"label":"$iID","documentation":"Handle of the control that the tool is associated with, or the ID of the tool"},{"label":"$iFlags","documentation":"**[optional]** Flags that control the ToolTip display:    $TTF_IDISHWND = Indicates that $iID is the window handle to the tool instead of the ID    $TTF_CENTERTIP = Centers the window below the tool specified by $iID    $TTF_RTLREADING = Indicates that text will be displayed in the opposite direction    $TTF_SUBCLASS = Indicates that the control should subclass the tool\'s window to intercept messages    $TTF_TRACK = Positions the control next to the tool to which it corresponds    $TTF_ABSOLUTE = Positions the window at the same coordinates provided by TTM_TRACKPOSITION    $TTF_TRANSPARENT = Causes the control to forward mouse messages to the parent window    $TTF_PARSELINKS = Indicates that links in the control text should be parsed"}]},"_GUIToolTip_GetBubbleSize":{"documentation":"Returns the width and height of a ToolTip control","label":"_GUIToolTip_GetBubbleSize ( $hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010] )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hTool","documentation":"Handle to the window that contains the tool"},{"label":"$iID","documentation":"Handle of the control that the tool is associated with, or the ID of the tool"},{"label":"$iFlags","documentation":"**[optional]** Flags that control the ToolTip display"}]},"_GUIToolTip_GetBubbleWidth":{"documentation":"Returns the width of a ToolTip control","label":"_GUIToolTip_GetBubbleWidth ( $hWnd, $hTool, $iID [, $iFlags = 0x00000001 + 0x00000010] )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hTool","documentation":"Handle to the window that contains the tool"},{"label":"$iID","documentation":"Handle of the control that the tool is associated with, or the ID of the tool"},{"label":"$iFlags","documentation":"**[optional]** Flags that control the ToolTip display"}]},"_GUIToolTip_GetCurrentTool":{"documentation":"Retrieves information for the current tool","label":"_GUIToolTip_GetCurrentTool ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_GetDelayTime":{"documentation":"Retrieves the initial, pop-up or reshow durations of a ToolTip control","label":"_GUIToolTip_GetDelayTime ( $hWnd, $iDuration )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$iDuration","documentation":"Flag that specifies which duration value will be retrieved"}]},"_GUIToolTip_GetMargin":{"documentation":"Retrieves the top, left, bottom, and right margins of a ToolTip control","label":"_GUIToolTip_GetMargin ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_GetMarginEx":{"documentation":"Retrieves the top, left, bottom, and right margins of a ToolTip control","label":"_GUIToolTip_GetMarginEx ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_GetMaxTipWidth":{"documentation":"Retrieves the maximum width of a ToolTip window","label":"_GUIToolTip_GetMaxTipWidth ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_GetText":{"documentation":"Retrieves the text of a tool","label":"_GUIToolTip_GetText ( $hWnd, $hTool, $iID )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hTool","documentation":"Handle to the window that contains the tool"},{"label":"$iID","documentation":"Identifier of the tool, or Window handle of the control the tool is assigned to"}]},"_GUIToolTip_GetTipBkColor":{"documentation":"Retrieves the background color","label":"_GUIToolTip_GetTipBkColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_GetTipTextColor":{"documentation":"Retrieves the text color of a ToolTip control","label":"_GUIToolTip_GetTipTextColor ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_GetTitleBitMap":{"documentation":"Retrieves the title bitmap icon","label":"_GUIToolTip_GetTitleBitMap ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_GetTitleText":{"documentation":"Retrieve the title","label":"_GUIToolTip_GetTitleText ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_GetToolCount":{"documentation":"Returns the count of tools maintained by the ToolTip control","label":"_GUIToolTip_GetToolCount ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_GetToolInfo":{"documentation":"Retrieves the information about a specific tool","label":"_GUIToolTip_GetToolInfo ( $hWnd, $hTool, $iID )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hTool","documentation":"Handle to the window that contains the tool"},{"label":"$iID","documentation":"Identifier of the tool, or Window handle of the control the tool is assigned to"}]},"_GUIToolTip_HitTest":{"documentation":"Retrieves the information that a ToolTip control maintains about a tool","label":"_GUIToolTip_HitTest ( $hWnd, $hTool, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hTool","documentation":"Handle to the window that contains the tool"},{"label":"$iX","documentation":"X position to test"},{"label":"$iY","documentation":"Y position to test"}]},"_GUIToolTip_NewToolRect":{"documentation":"Sets a new bounding rectangle for a tool","label":"_GUIToolTip_NewToolRect ( $hWnd, $hTool, $iID, $iLeft, $iTop, $iRight, $iBottom )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hTool","documentation":"Handle of the window that contains the tool, or 0"},{"label":"$iID","documentation":"Identifier of the tool, or Window handle of the control the tool is to be assigned to"},{"label":"$iLeft","documentation":"X coordinate of the upper left corner of the rectangle"},{"label":"$iTop","documentation":"Y coordinate of the upper left corner of the rectangle"},{"label":"$iRight","documentation":"X coordinate of the lower right corner of the rectangle"},{"label":"$iBottom","documentation":"Y coordinate of the lower right corner of the rectangle"}]},"_GUIToolTip_Pop":{"documentation":"Removes a displayed ToolTip from view","label":"_GUIToolTip_Pop ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_PopUp":{"documentation":"Causes the ToolTip to display at the coordinates of the last mouse message","label":"_GUIToolTip_PopUp ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_SetDelayTime":{"documentation":"Sets the initial, pop-up, and reshow durations of a ToolTip","label":"_GUIToolTip_SetDelayTime ( $hWnd, $iDuration, $iTime )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$iDuration","documentation":"Flag that specifies which duration value will be set:    $TTDT_AUTOMATIC (0) - Set all three delay times to default proportions. (see remarks)    $TTDT_RESHOW (1) - Time it takes for subsequent ToolTip windows to appear as the pointer moves from one tool to another    $TTDT_AUTOPOP (2) - Time the ToolTip window remains visible if the pointer is stationary within a tool\'s bounding rectangle    $TTDT_INITIAL (3) - Time the pointer must remain stationary within a tool\'s bounding rectangle before the window appears"},{"label":"$iTime","documentation":"Delay time in milliseconds"}]},"_GUIToolTip_SetMargin":{"documentation":"Sets the top, left, bottom, and right margins of a ToolTip","label":"_GUIToolTip_SetMargin ( $hWnd, $iLeft, $iTop, $iRight, $iBottom )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$iLeft","documentation":"Distance between left border and left end of text, in pixels"},{"label":"$iTop","documentation":"Distance between top border and top of text, in pixels"},{"label":"$iRight","documentation":"Distance between right border and right end of text, in pixels"},{"label":"$iBottom","documentation":"Distance between bottom border and bottom of text, in pixels"}]},"_GUIToolTip_SetMaxTipWidth":{"documentation":"Sets the maximum width for a ToolTip window","label":"_GUIToolTip_SetMaxTipWidth ( $hWnd, $iWidth )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$iWidth","documentation":"Maximum ToolTip window width to be set (in pixels)"}]},"_GUIToolTip_SetTipBkColor":{"documentation":"Sets the background color of a ToolTip","label":"_GUIToolTip_SetTipBkColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$iColor","documentation":"New text color (see remarks)"}]},"_GUIToolTip_SetTipTextColor":{"documentation":"Sets the text color","label":"_GUIToolTip_SetTipTextColor ( $hWnd, $iColor )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$iColor","documentation":"New text color (see remarks)"}]},"_GUIToolTip_SetTitle":{"documentation":"Adds a standard icon and title string","label":"_GUIToolTip_SetTitle ( $hWnd, $sTitle [, $iIcon = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$sTitle","documentation":"Title string"},{"label":"$iIcon","documentation":"**[optional]** Set to one of the values below:.    $TTI_NONE (0) - No icon [default]    $TTI_INFO (1) - Information icon    $TTI_WARNING (2) - Warning icon    $TTI_ERROR (3) - Error Icon    $TTI_INFO_LARGE (4) - Large Information Icon    $TTI_WARNING_LARGE (5) - Large Warning Icon    $TTI_ERROR_LARGE (6) - Large Error Icon"}]},"_GUIToolTip_SetToolInfo":{"documentation":"Sets the information for a tool","label":"_GUIToolTip_SetToolInfo ( $hWnd, $sText [, $iID = 0 [, $iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0 [, $iFlags = Default [, $iParam = 0]]]]]]] )","params":[{"label":"$hWnd","documentation":"Handle of the window that contains the tool, or 0"},{"label":"$sText","documentation":"Text for the ToolTip control"},{"label":"$iID","documentation":"**[optional]** Identifier of the tool, or Window handle of the control the tool is assigned to"},{"label":"$iLeft","documentation":"**[optional]** X coordinate of the upper left corner of the rectangle"},{"label":"$iTop","documentation":"**[optional]** Y coordinate of the upper left corner of the rectangle"},{"label":"$iRight","documentation":"**[optional]** X coordinate of the lower right corner of the rectangle"},{"label":"$iBottom","documentation":"**[optional]** Y coordinate of the lower right corner of the rectangle"},{"label":"$iFlags","documentation":"**[optional]** Flags that control the ToolTip display:    $TTF_IDISHWND - Indicates that $iID is a window or control handle, instead of the ID of the tool [default]    $TTF_CENTERTIP - Centers the tooltip below the control specified by $iID    $TTF_RTLREADING - Indicates that text will be displayed in the opposite direction (right to left)    $TTF_SUBCLASS - Indicates that the control should subclass the tool\'s window [default]    $TTF_TRACK    - Positions the tooltip window next to the tool to which it corresponds    $TTF_ABSOLUTE - Positions the window at the same coordinates provided by TTM_TRACKPOSITION. (see Remarks)    $TTF_TRANSPARENT- Causes the control to forward mouse messages to the parent window    $TTF_PARSELINKS - Indicates that links in the control text should be displayed as links"},{"label":"$iParam","documentation":"**[optional]** Application-defined value that is associated with the tool"}]},"_GUIToolTip_SetWindowTheme":{"documentation":"Sets the visual style","label":"_GUIToolTip_SetWindowTheme ( $hWnd, $sStyle )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$sStyle","documentation":"String that contains the ToolTip visual style to set"}]},"_GUIToolTip_ToolExists":{"documentation":"Determines whether a tool currently exists (is displayed)","label":"_GUIToolTip_ToolExists ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_ToolToArray":{"documentation":"Transfers a ToolInfo structure to an array","label":"_GUIToolTip_ToolToArray ( $hWnd, ByRef $tToolInfo, $iError )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$tToolInfo","documentation":"$tagTOOLINFO structure"},{"label":"$iError","documentation":"Error code to be returned"}]},"_GUIToolTip_TrackActivate":{"documentation":"Activates or deactivates a tracking ToolTip","label":"_GUIToolTip_TrackActivate ( $hWnd [, $bActivate = True [, $hTool = 0 [, $iID = 0]]] )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$bActivate","documentation":"**[optional]** True to activate, False to deactivate"},{"label":"$hTool","documentation":"**[optional]** Handle to the window that contains the tool"},{"label":"$iID","documentation":"**[optional]** Control handle that the tool is assigned to, or application-defined identifier of the tool"}]},"_GUIToolTip_TrackPosition":{"documentation":"Sets the position of a tracking ToolTip","label":"_GUIToolTip_TrackPosition ( $hWnd, $iX, $iY )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$iX","documentation":"X position in screen coordinates"},{"label":"$iY","documentation":"Y position in screen coordinates"}]},"_GUIToolTip_Update":{"documentation":"Forces the current tool to be redrawn","label":"_GUIToolTip_Update ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"}]},"_GUIToolTip_UpdateTipText":{"documentation":"Sets the ToolTip text for a tool","label":"_GUIToolTip_UpdateTipText ( $hWnd, $hTool, $iID, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the ToolTip control (returned by _GUIToolTip_Create.)"},{"label":"$hTool","documentation":"Handle of the window that contains the tool, or 0"},{"label":"$iID","documentation":"Identifier of the tool, or Window handle of the control the tool is to be assigned to"},{"label":"$sText","documentation":"Text for the ToolTip control."}]},"_HexToString":{"documentation":"Convert a hex string to a string","label":"_HexToString ( $sHex )","params":[{"label":"$sHex","documentation":"A hexadecimal string"}]},"_IEAction":{"documentation":"Perform any of a set of simple actions on the Browser","label":"_IEAction ( ByRef $oObject, $sAction )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application"},{"label":"$sAction","documentation":"Action selection (see remarks)"}]},"_IEAttach":{"documentation":"Attach to the specified instance of Internet Explorer where the search string sub-string matches (based on the selected mode)","label":"_IEAttach ( $sString [, $sMode = \\"title\\" [, $iInstance = 1]] )","params":[{"label":"$sString","documentation":"String to search for (for \\"embedded\\" or \\"dialogbox\\", use Title sub-string or HWND of window)"},{"label":"$sMode","documentation":"**[optional]** specifies search mode    \\"title\\" = (Default) sub-string of main document title    \\"windowtitle\\" = sub-string of full window title (instead of document title)    \\"url\\" = sub-string or url of the current page    \\"text\\" = sub-string in text from the body of the current page    \\"html\\" = sub-string in html from the body of the current page    \\"hwnd\\" = hwnd of the browser window    \\"embedded\\" = title sub-string or hwnd of the window embedding the control    \\"dialogbox\\" = title sub-string or hwnd of modal/modeless dialogbox    \\"instance\\" = $sString is ignored, one browser reference returned (by matching instance number) from all available browser instances"},{"label":"$iInstance","documentation":"**[optional]** 1-based index into group of browsers or embedded browsers matching $sString and $sMode. See Remarks."}]},"_IEBodyReadHTML":{"documentation":"Returns the HTML inside the <body> tag of the document","label":"_IEBodyReadHTML ( ByRef $oObject )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"}]},"_IEBodyReadText":{"documentation":"Returns the Text inside the <body> tag of the document","label":"_IEBodyReadText ( ByRef $oObject )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"}]},"_IEBodyWriteHTML":{"documentation":"Replaces the HTML inside the <body> tag of the document","label":"_IEBodyWriteHTML ( ByRef $oObject, $sHTML )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sHTML","documentation":"The HTML string to write to the document"}]},"_IECreate":{"documentation":"Create an Internet Explorer Browser Window","label":"_IECreate ( [$sUrl = \\"about:blank\\" [, $iTryAttach = 0 [, $iVisible = 1 [, $iWait = 1 [, $iTakeFocus = 1]]]]] )","params":[{"label":"$sUrl","documentation":"**[optional]** specifies the Url to navigate to upon creation"},{"label":"$iTryAttach","documentation":"**[optional]** specifies whether to try to attach to an existing window    0 = (Default) do not try to attach    1 = Try to attach to an existing window"},{"label":"$iVisible","documentation":"**[optional]** specifies whether the browser window will be visible    0 = Browser Window is hidden    1 = (Default) Browser Window is visible"},{"label":"$iWait","documentation":"**[optional]** specifies whether to wait for page to load before returning    0 = Return immediately, not waiting for page to load    1 = (Default) Wait for page load to complete before returning"},{"label":"$iTakeFocus","documentation":"**[optional]** specifies whether to bring the attached window to focus    0 = Do not bring window into focus    1 = (Default) bring window into focus"}]},"_IECreateEmbedded":{"documentation":"Create a Webbrowser object suitable for embedding in an AutoIt GUI with GUICtrlCreateObj()","label":"_IECreateEmbedded (  )","params":[]},"_IEDocGetObj":{"documentation":"Given any DOM object, returns a reference to the associated document object","label":"_IEDocGetObj ( ByRef $oObject )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window, Frame or any DOM object"}]},"_IEDocInsertHTML":{"documentation":"Inserts HTML Text in or around an element","label":"_IEDocInsertHTML ( ByRef $oObject, $sString [, $sWhere = \\"beforeend\\"] )","params":[{"label":"$oObject","documentation":"Object variable pointing to a document element."},{"label":"$sString","documentation":"The string containing the HTML text to insert."},{"label":"$sWhere","documentation":"**[optional]** specifies the string insertion point    \\"beforebegin\\" = Inserts string immediately before the object.    \\"afterbegin\\" = Inserts string after the start of the object but before all other content in the object.    \\"beforeend\\" = (Default) Inserts string immediately before the end of the object but after all other content in the object.    \\"afterend\\" = Inserts string immediately after the end of the object."}]},"_IEDocInsertText":{"documentation":"Inserts Text in or around an element","label":"_IEDocInsertText ( ByRef $oObject, $sString [, $sWhere = \\"beforeend\\"] )","params":[{"label":"$oObject","documentation":"Object variable pointing to a document element."},{"label":"$sString","documentation":"The string containing the text to insert."},{"label":"$sWhere","documentation":"**[optional]** specifies the string insertion point    \\"beforebegin\\" = Inserts string immediately before the object.    \\"afterbegin\\" = Inserts string after the start of the object but before all other content in the object.    \\"beforeend\\" = (Default) Inserts string immediately before the end of the object but after all other content in the object.    \\"afterend\\" = Inserts string immediately after the end of the object."}]},"_IEDocReadHTML":{"documentation":"Returns the full HTML source of a document","label":"_IEDocReadHTML ( ByRef $oObject )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"}]},"_IEDocWriteHTML":{"documentation":"Replaces the HTML for the entire document","label":"_IEDocWriteHTML ( ByRef $oObject, $sHTML )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sHTML","documentation":"The HTML string to write to the document"}]},"_IEErrorNotify":{"documentation":"Specifies whether IE.au3 automatically notifies of Warnings and Errors (to the console)","label":"_IEErrorNotify ( [$vNotify = Default] )","params":[{"label":"$vNotify","documentation":"**[optional]** specifies whether notification should be on or off    -1 = (Default) return current setting    True = Turn On    False = Turn Off"}]},"_IEFormElementCheckBoxSelect":{"documentation":"Set the value of a specified form element","label":"_IEFormElementCheckBoxSelect ( ByRef $oObject, $sString [, $sName = \\"\\" [, $iSelect = 1 [, $sMode = \\"byValue\\" [, $iFireEvent = 1]]]] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Form object"},{"label":"$sString","documentation":"Value used to match element - treatment based on $sMode"},{"label":"$sName","documentation":"**[optional]** Name or Id of checkbox(es)"},{"label":"$iSelect","documentation":"**[optional]** specifies whether element should be checked or unchecked    -1 = Return checked state     0 = Uncheck the element     1 = (Default) Check the element"},{"label":"$sMode","documentation":"**[optional]** specify search mode    \\"byValue\\" = (Default) value of the checkbox you wish to select    \\"byIndex\\" = 0-based index of checkbox you wish to select"},{"label":"$iFireEvent","documentation":"**[optional]** specifies whether to fire OnChange and OnClick events after changing value    0 = do not fire OnChange or OnClick event after setting value    1 = (Default) fire OnChange and OnClick events after setting value"}]},"_IEFormElementGetCollection":{"documentation":"Returns a collection object variable representing all Form Elements within a given Form","label":"_IEFormElementGetCollection ( ByRef $oObject [, $iIndex = -1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Form object"},{"label":"$iIndex","documentation":"**[optional]** specifies whether to return a collection or indexed instance     0 or positive integer returns an indexed instance    -1 = (Default) returns a collection"}]},"_IEFormElementGetObjByName":{"documentation":"Returns an object reference to a Form Element by name","label":"_IEFormElementGetObjByName ( ByRef $oObject, $sName [, $iIndex = 0] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Form object"},{"label":"$sName","documentation":"Specifies the name of the Form Element you wish to match"},{"label":"$iIndex","documentation":"**[optional]** If the Form Element name occurs more than once, specifies instance by 0-based index     0 (Default) or positive integer returns an indexed instance    -1 returns a collection of the specified Form Elements"}]},"_IEFormElementGetValue":{"documentation":"Returns the value of a given Form Element","label":"_IEFormElementGetValue ( ByRef $oObject )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Form Element object"}]},"_IEFormElementOptionSelect":{"documentation":"Set the value of a specified form element","label":"_IEFormElementOptionSelect ( ByRef $oObject, $sString [, $iSelect = 1 [, $sMode = \\"byValue\\" [, $iFireEvent = 1]]] )","params":[{"label":"$oObject","documentation":"Form Element Object of type \\"Select Option\\""},{"label":"$sString","documentation":"Value used to match element - treatment based on $sMode"},{"label":"$iSelect","documentation":"**[optional]** specifies whether element should be selected or deselected    -1 = Return selected state     0 = Deselect the element     1 = (Default) Select the element"},{"label":"$sMode","documentation":"**[optional]** specifies search mode    \\"byValue\\" = (Default) value of the option you wish to select    \\"byText\\" = text of the option you wish to select    \\"byIndex\\" = 0-based index of option you wish to select"},{"label":"$iFireEvent","documentation":"**[optional]** specifies whether to fire OnChange and OnClick events after changing value    0 = do not fire OnChange or OnClick event after setting value    1 = (Default) fire OnChange and OnClick events after setting value"}]},"_IEFormElementRadioSelect":{"documentation":"Set the value of a specified form element","label":"_IEFormElementRadioSelect ( ByRef $oObject, $sString, $sName [, $iSelect = 1 [, $sMode = \\"byValue\\" [, $iFireEvent = 1]]] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Form object"},{"label":"$sString","documentation":"Value used to match element - treatment based on $sMode"},{"label":"$sName","documentation":"Name or Id of Radio Group"},{"label":"$iSelect","documentation":"**[optional]** specifies whether element should be selected or deselected    -1 = Return selected state     0 = Unselect the element     1 = (Default) Select the element"},{"label":"$sMode","documentation":"**[optional]** specifies search mode    \\"byValue\\" = (Default) value of the radio you wish to select    \\"byIndex\\" = 0-based index of radio you wish to select"},{"label":"$iFireEvent","documentation":"**[optional]** specifies whether to fire OnChange and OnClick events after changing value    0 = do not fire OnChange or OnClick event after setting value    1 = (Default) fire OnChange and OnClick events after setting value"}]},"_IEFormElementSetValue":{"documentation":"Set the value of a specified Form Element","label":"_IEFormElementSetValue ( ByRef $oObject, $sNewValue [, $iFireEvent = 1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Form Element object"},{"label":"$sNewValue","documentation":"The new value to be set into the Form Element"},{"label":"$iFireEvent","documentation":"**[optional]** specifies whether to fire an OnChange event after changing value    0 = Do not fire OnChange or OnClick event after setting value    1 = (Default) fire OnChange and OnClick event after setting value"}]},"_IEFormGetCollection":{"documentation":"Returns a collection object variable representing the Forms in the document or a single form by index","label":"_IEFormGetCollection ( ByRef $oObject [, $iIndex = -1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window, Frame or iFrame object"},{"label":"$iIndex","documentation":"**[optional]** specifies whether to return a collection or indexed instance 0 or positive integer returns an indexed instance-1 = (Default) returns a collection"}]},"_IEFormGetObjByName":{"documentation":"Returns an object reference to a Form by name","label":"_IEFormGetObjByName ( ByRef $oObject, $sName [, $iIndex = 0] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sName","documentation":"Specifies the name of the Form you wish to match"},{"label":"$iIndex","documentation":"**[optional]** If Form name occurs more than once, specifies instance by 0-based index     0 (Default) or positive integer returns an indexed instance    -1 returns a collection of the specified Forms"}]},"_IEFormImageClick":{"documentation":"Simulate a mouse click on an <input type=image>. Match by sub-string match of alt text, name or src","label":"_IEFormImageClick ( ByRef $oObject, $sLinkText [, $sMode = \\"src\\" [, $iIndex = 0 [, $iWait = 1]]] )","params":[{"label":"$oObject","documentation":"Object variable of any DOM element (will be converted to the associated document object)"},{"label":"$sLinkText","documentation":"Value used to match element - treatment based on $sMode"},{"label":"$sMode","documentation":"**[optional]** specifies search mode    \\"src\\" = (Default) match the url of the image    \\"id\\" = match the id of the image (see remarks)    \\"alt\\" = match the alternate text of the image"},{"label":"$iIndex","documentation":"**[optional]** If the img text occurs more than once, specifies which instance you want by 0-based index"},{"label":"$iWait","documentation":"**[optional]** specifies whether to wait for page to load before returning    0 = Return immediately, not waiting for page to load    1 = (Default) Wait for page load to complete before returning"}]},"_IEFormReset":{"documentation":"Reset a specified Form setting the values back to their loaded defaults","label":"_IEFormReset ( ByRef $oObject )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Form object"}]},"_IEFormSubmit":{"documentation":"Submit a specified Form","label":"_IEFormSubmit ( ByRef $oObject [, $iWait = 1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Form object"},{"label":"$iWait","documentation":"**[optional]** specifies whether to wait for page to load before returning    0 = Return immediately, not waiting for page to load    1 = (Default) Wait for page load to complete before returning"}]},"_IEFrameGetCollection":{"documentation":"Returns a collection object containing the frames in a FrameSet or the iFrames on a normal page or a single Frame or iFrame by index","label":"_IEFrameGetCollection ( ByRef $oObject [, $iIndex = -1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$iIndex","documentation":"**[optional]** specifies whether to return a collection or indexed instance     0 or positive integer returns an indexed instance    -1 = (Default) returns a collection"}]},"_IEFrameGetObjByName":{"documentation":"Returns an object reference to a Frame or iFrame by name","label":"_IEFrameGetObjByName ( ByRef $oObject, $sName )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sName","documentation":"Name of the Frame you wish to match"}]},"_IEGetObjById":{"documentation":"Returns an object variable by id","label":"_IEGetObjById ( ByRef $oObject, $sID )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sID","documentation":"Specifies id of the object you wish to match"}]},"_IEGetObjByName":{"documentation":"Returns an object variable by name","label":"_IEGetObjByName ( ByRef $oObject, $sName [, $iIndex = 0] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sName","documentation":"Specifies name of the object you wish to match"},{"label":"$iIndex","documentation":"**[optional]** If name occurs more than once, specifies instance by 0-based index     0 (Default) or positive integer returns an indexed instance    -1 returns a collection of the specified objects"}]},"_IEHeadInsertEventScript":{"documentation":"Inserts a Javascript into the Head of the document","label":"_IEHeadInsertEventScript ( ByRef $oObject, $sHTMLFor, $sEvent, $sScript )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sHTMLFor","documentation":"The HTML element for event monitoring (e.g. \\"document\\", \\"window\\" or an element ID)"},{"label":"$sEvent","documentation":"The event to monitor (e.g. \\"onclick\\" or \\"oncontextmenu\\")"},{"label":"$sScript","documentation":"Javascript string to be executed"}]},"_IEImgClick":{"documentation":"Simulate a mouse click on an image. Match by sub-string match of alt text, name, or src","label":"_IEImgClick ( ByRef $oObject, $sLinkText [, $sMode = \\"src\\" [, $iIndex = 0 [, $iWait = 1]]] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sLinkText","documentation":"Text to match the content of the attribute specified in $sMode"},{"label":"$sMode","documentation":"**[optional]** specifies search mode    \\"src\\" = (Default) match the url of the image    \\"id\\" = match the id of the image (see remarks)    \\"alt\\" = match the alternate text of the image"},{"label":"$iIndex","documentation":"**[optional]** If the img text occurs more than once, specify which instance you want by 0-based index"},{"label":"$iWait","documentation":"**[optional]** specifies whether to wait for page to load before returning    0 = Return immediately, not waiting for page to load    1 = (Default) Wait for page load to complete before returning"}]},"_IEImgGetCollection":{"documentation":"Returns a collection object variable representing the IMG tags in the document or a single image by index","label":"_IEImgGetCollection ( ByRef $oObject [, $iIndex = -1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window, Frame or iFrame object"},{"label":"$iIndex","documentation":"**[optional]** specifies whether to return a collection or indexed instance     0 or positive integer returns an indexed instance    -1 = (Default) returns a collection"}]},"_IEIsFrameSet":{"documentation":"Checks to see if the specified Window contains a FrameSet","label":"_IEIsFrameSet ( ByRef $oObject )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"}]},"_IELinkClickByIndex":{"documentation":"Simulate a mouse click on a link by 0-based index (in source order)","label":"_IELinkClickByIndex ( ByRef $oObject, $iIndex [, $iWait = 1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$iIndex","documentation":"0-based index of the link you wish to match"},{"label":"$iWait","documentation":"**[optional]** specifies whether to wait for page to load before returning    0 = Return immediately, not waiting for page to load    1 = (Default) Wait for page load to complete before returning"}]},"_IELinkClickByText":{"documentation":"Simulate a mouse click on a link with text sub-string matching the string provided","label":"_IELinkClickByText ( ByRef $oObject, $sLinkText [, $iIndex = 0 [, $iWait = 1]] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sLinkText","documentation":"Text displayed on the web page for the desired link to click"},{"label":"$iIndex","documentation":"**[optional]** If the link text occurs more than once, specify which instance you want by 0-based index"},{"label":"$iWait","documentation":"**[optional]** specifies whether to wait for page to load before returning    0 = Return immediately, not waiting for page to load    1 = (Default) Wait for page load to complete before returning"}]},"_IELinkGetCollection":{"documentation":"Returns a collection object containing all links in the document or a single link by index","label":"_IELinkGetCollection ( ByRef $oObject [, $iIndex = -1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$iIndex","documentation":"**[optional]** specifies whether to return a collection or indexed instance     0 or positive integer returns an indexed instance    -1 = (Default) returns a collection"}]},"_IELoadWait":{"documentation":"Wait for a browser page load to complete before returning","label":"_IELoadWait ( ByRef $oObject [, $iDelay = 0 [, $iTimeout = -1]] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application or DOM element"},{"label":"$iDelay","documentation":"**[optional]** Milliseconds to wait before checking status"},{"label":"$iTimeout","documentation":"**[optional]** Period of time to wait before exiting function (default = 300000 ms aka 5 min)"}]},"_IELoadWaitTimeout":{"documentation":"Retrieve or set the current value in milliseconds _IELoadWait() will try before timing out","label":"_IELoadWaitTimeout ( [$iTimeout = -1] )","params":[{"label":"$iTimeout","documentation":"**[optional]** retrieve or specify the number of milliseconds     0 or positive integer sets timeout to this value    -1 = (Default) returns the current timeout value (stored in global variable $__IELoadWaitTimeout)"}]},"_IENavigate":{"documentation":"Directs an existing browser window to navigate to the specified URL","label":"_IENavigate ( ByRef $oObject, $sUrl [, $iWait = 1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$sUrl","documentation":"URL to navigate to (e.g. \\"http://www.autoitscript.com\\")"},{"label":"$iWait","documentation":"**[optional]** specifies whether to wait for page to load before returning    0 = Return immediately, not waiting for page to load    1 = (Default) Wait for page load to complete before returning"}]},"_IEPropertyGet":{"documentation":"Returns a select property of the Browser or DOM element","label":"_IEPropertyGet ( ByRef $oObject, $sProperty )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application or DOM element"},{"label":"$sProperty","documentation":"Property selection (see remarks)"}]},"_IEPropertySet":{"documentation":"Set a select property of the Browser or DOM element","label":"_IEPropertySet ( ByRef $oObject, $sProperty, $vValue )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application"},{"label":"$sProperty","documentation":"Property selection (see remarks)"},{"label":"$vValue","documentation":"The new value to be set into the Browser Property"}]},"_IEQuit":{"documentation":"Close the browser and remove the object reference to it","label":"_IEQuit ( ByRef $oObject )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application"}]},"_IETableGetCollection":{"documentation":"Returns a collection object variable representing all the tables in a document or a single table by index","label":"_IETableGetCollection ( ByRef $oObject [, $iIndex = -1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window or Frame object"},{"label":"$iIndex","documentation":"**[optional]** specifies whether to return a collection or indexed instance     0 or positive integer returns an indexed instance    -1 = (Default) returns a collection"}]},"_IETableWriteToArray":{"documentation":"Reads the contents of a Table into an array","label":"_IETableWriteToArray ( ByRef $oObject [, $bTranspose = False] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Table object"},{"label":"$bTranspose","documentation":"**[optional]** Boolean value specifying whether to swap the rows and columns in the output array"}]},"_IETagNameAllGetCollection":{"documentation":"Returns a collection object all elements in the document or document hierarchy in source order or a single element by index","label":"_IETagNameAllGetCollection ( ByRef $oObject [, $iIndex = -1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window, Frame, iFrame or any object in the DOM"},{"label":"$iIndex","documentation":"**[optional]** specifies whether to return a collection or indexed instance     0 or positive integer returns an indexed instance    -1 = (Default) returns a collection"}]},"_IETagNameGetCollection":{"documentation":"Returns a collection object of all elements in the object with the specified TagName or a single element by index","label":"_IETagNameGetCollection ( ByRef $oObject, $sTagName [, $iIndex = -1] )","params":[{"label":"$oObject","documentation":"Object variable of an InternetExplorer.Application, Window, Frame, iFrame or any object in the DOM"},{"label":"$sTagName","documentation":"TagName of collection to return (e.g. IMG, TR etc.)"},{"label":"$iIndex","documentation":"**[optional]** specifies whether to return a collection or indexed instance     0 or positive integer returns an indexed instance    -1 = (Default) returns a collection"}]},"_IE_Example":{"documentation":"Display a new browser window pre-loaded with documents to be used in IE.au3 examples or your own testing","label":"_IE_Example ( [$sModule = \\"basic\\"] )","params":[{"label":"$sModule","documentation":"**[optional]** specifies which module to run    \\"basic\\" = (Default) simple HTML page with text, links and images    \\"form\\" = simple HTML page with multiple form elements    \\"frameset\\" = simple HTML page with frames    \\"iframe\\" = simple HTML page with iframes    \\"table\\" = simple HTML page with tables"}]},"_IE_Introduction":{"documentation":"Display introductory information about IE.au3 in a new browser window","label":"_IE_Introduction ( [$sModule = \\"basic\\"] )","params":[{"label":"$sModule","documentation":"**[optional]** specifies which module to run    \\"basic\\" = (Default) basic introduction"}]},"_IE_VersionInfo":{"documentation":"Returns an array of information about the IE.au3 version","label":"_IE_VersionInfo (  )","params":[]},"_INetExplorerCapable":{"documentation":"Converts a string to IE(Internet Explorer) capable line","label":"_INetExplorerCapable ( $sIEString )","params":[{"label":"$sIEString","documentation":"String to be converted"}]},"_INetGetSource":{"documentation":"Gets the source from an URL without writing a temp file","label":"_INetGetSource ( $sURL [, $bString = True] )","params":[{"label":"$sURL","documentation":"(The URL of the site.) eg \'http://www.autoitscript.com\'"},{"label":"$bString","documentation":"**[optional]** If True the data is returned in string format, otherwise binary format."}]},"_INetMail":{"documentation":"Opens default user\'s mail client with given address, subject, and body","label":"_INetMail ( $sMailTo, $sMailSubject, $sMailBody )","params":[{"label":"$sMailTo","documentation":"Address for the E-Mail"},{"label":"$sMailSubject","documentation":"Subject for the E-Mail"},{"label":"$sMailBody","documentation":"Body for the E-Mail"}]},"_INetSmtpMail":{"documentation":"Sends an email without using an external email program","label":"_INetSmtpMail ( $sSMTPServer, $sFromName, $sFromAddress, $sToAddress [, $sSubject = \\"\\" [, $aBody = \\"\\" [, $sEHLO = \\"\\" [, $sFirst = \\"\\" [, $bTrace = 0]]]]] )","params":[{"label":"$sSMTPServer","documentation":"Smtp server the eMail is to be sent though May be either alpha or a numeric IP address. In order to fight spam, many ISPs require this to be their server.eg \\"smtp.ispdomain.com\\", \\"mail.ispdomain.com\\" or \\"192.168.1.1\\""},{"label":"$sFromName","documentation":"The name you wish the message to appear to be sent from.eg \\"Bob Smith\\""},{"label":"$sFromAddress","documentation":"The email address you wish the message to appear to be sent from.eg \\"bob.smith@mydomain.com\\"."},{"label":"$sToAddress","documentation":"The email address the message is to go to.eg \\"jane.brown@yourdomain.com\\""},{"label":"$sSubject","documentation":"**[optional]** The subject of the email."},{"label":"$aBody","documentation":"**[optional]** The body of the email as a single dimensional array of strings. Each value in the array will be terminated with a @CRLF in the email."},{"label":"$sEHLO","documentation":"**[optional]** identifier for the smtp server connection (by default @ComputerName). If Smtp server require a \\"EHLO\\" string just set the string to \\"EHLO \\" & @ComputerName."},{"label":"$sFirst","documentation":"**[optional]** string sent before helo for the smtp server connection (by default {SPACE}). To not send any character this parameter must equal -1, some SMTP server required it."},{"label":"$bTrace","documentation":"**[optional]** trace the dialog in a splash window"}]},"_IsPressed":{"documentation":"Check if key has been pressed","label":"_IsPressed ( $sHexKey [, $vDLL = \'user32.dll\'] )","params":[{"label":"$sHexKey","documentation":"Key to check for"},{"label":"$vDLL","documentation":"**[optional]** Handle to DLL or default to user32.dll"}]},"_MathCheckDiv":{"documentation":"Checks if first number is divisible by the second number","label":"_MathCheckDiv ( $iNum1 [, $iNum2 = 2] )","params":[{"label":"$iNum1","documentation":"Integer value to check"},{"label":"$iNum2","documentation":"**[optional]** Integer value to divide by (default = 2)"}]},"_Max":{"documentation":"Evaluates which of the two numbers is higher","label":"_Max ( $iNum1, $iNum2 )","params":[{"label":"$iNum1","documentation":"First number."},{"label":"$iNum2","documentation":"Second number."}]},"_MemGlobalAlloc":{"documentation":"Allocates the specified number of bytes from the heap","label":"_MemGlobalAlloc ( $iBytes [, $iFlags = 0] )","params":[{"label":"$iBytes","documentation":"The number of bytes to allocate. If this parameter is zero and the $iFlags parameter specifies $GMEM_MOVEABLE, the function returns a handle to a memory object that is marked as discarded."},{"label":"$iFlags","documentation":"**[optional]** The memory allocation attributes"}]},"_MemGlobalFree":{"documentation":"Frees the specified global memory object and invalidates its handle","label":"_MemGlobalFree ( $hMemory )","params":[{"label":"$hMemory","documentation":"Handle to the global memory object"}]},"_MemGlobalLock":{"documentation":"Locks a global memory object and returns a pointer to the first byte of the object\'s memory block","label":"_MemGlobalLock ( $hMemory )","params":[{"label":"$hMemory","documentation":"Handle to the global memory object"}]},"_MemGlobalSize":{"documentation":"Retrieves the current size of the specified global memory object","label":"_MemGlobalSize ( $hMemory )","params":[{"label":"$hMemory","documentation":"Handle to the global memory object"}]},"_MemGlobalUnlock":{"documentation":"Decrements the lock count associated with a memory object that was allocated with GMEM_MOVEABLE","label":"_MemGlobalUnlock ( $hMemory )","params":[{"label":"$hMemory","documentation":"Handle to the global memory object"}]},"_MemMoveMemory":{"documentation":"Moves memory either forward or backward, aligned or unaligned","label":"_MemMoveMemory ( $pSource, $pDest, $iLength )","params":[{"label":"$pSource","documentation":"Pointer to the source of the move"},{"label":"$pDest","documentation":"Pointer to the destination of the move"},{"label":"$iLength","documentation":"Specifies the number of bytes to be copied"}]},"_MemVirtualAlloc":{"documentation":"Reserves or commits a region of pages in the virtual address space of the calling process","label":"_MemVirtualAlloc ( $pAddress, $iSize, $iAllocation, $iProtect )","params":[{"label":"$pAddress","documentation":"Specifies the desired starting address of the region to allocate"},{"label":"$iSize","documentation":"Specifies the size, in bytes, of th region"},{"label":"$iAllocation","documentation":"Specifies the type of allocation"},{"label":"$iProtect","documentation":"Type of access protection"}]},"_MemVirtualAllocEx":{"documentation":"Reserves a region of memory within the virtual address space of a specified process","label":"_MemVirtualAllocEx ( $hProcess, $pAddress, $iSize, $iAllocation, $iProtect )","params":[{"label":"$hProcess","documentation":"Handle to process"},{"label":"$pAddress","documentation":"Specifies the desired starting address of the region to allocate"},{"label":"$iSize","documentation":"Specifies the size, in bytes, of th region"},{"label":"$iAllocation","documentation":"Specifies the type of allocation:    $MEM_COMMIT - Allocates physical storage in memory or in the paging file on disk for the specified region of pages.    $MEM_RESERVE - Reserves a range of the process\'s virtual address space without allocating any physical storage.    $MEM_TOP_DOWN - Allocates memory at the highest possible address"},{"label":"$iProtect","documentation":"Type of access protection:    $PAGE_READONLY - Enables read access to the committed region of pages    $PAGE_READWRITE - Enables read and write access to the committed region    $PAGE_EXECUTE - Enables execute access to the committed region    $PAGE_EXECUTE_READ - Enables execute and read access to the committed region    $PAGE_EXECUTE_READWRITE - Enables execute, read, and write access to the committed region of pages    $PAGE_GUARD - Pages in the region become guard pages    $PAGE_NOACCESS - Disables all access to the committed region of pages    $PAGE_NOCACHE - Allows no caching of the committed regions of pages"}]},"_MemVirtualFree":{"documentation":"Releases a region of pages within the virtual address space of a process","label":"_MemVirtualFree ( $pAddress, $iSize, $iFreeType )","params":[{"label":"$pAddress","documentation":"Points to the base address of the region of pages to be freed"},{"label":"$iSize","documentation":"Specifies the size, in bytes, of the region to be freed"},{"label":"$iFreeType","documentation":"Specifies the type of free operation:    $MEM_DECOMMIT - Decommits the specified region of committed pages    $MEM_RELEASE - Releases the specified region of reserved pages"}]},"_MemVirtualFreeEx":{"documentation":"Releases a region of pages within the virtual address space of a process","label":"_MemVirtualFreeEx ( $hProcess, $pAddress, $iSize, $iFreeType )","params":[{"label":"$hProcess","documentation":"Handle to a process"},{"label":"$pAddress","documentation":"A pointer to the starting address of the region of memory to be freed"},{"label":"$iSize","documentation":"The size of the region of memory to free, in bytes"},{"label":"$iFreeType","documentation":"Specifies the type of free operation:    $MEM_DECOMMIT - Decommits the specified region of committed pages    $MEM_RELEASE - Releases the specified region of reserved pages"}]},"_Min":{"documentation":"Evaluates which of the two numbers is lower","label":"_Min ( $iNum1, $iNum2 )","params":[{"label":"$iNum1","documentation":"First number."},{"label":"$iNum2","documentation":"Second number."}]},"_MouseTrap":{"documentation":"Confine the Mouse Cursor to specified coords","label":"_MouseTrap ( [$iLeft = 0 [, $iTop = 0 [, $iRight = 0 [, $iBottom = 0]]]] )","params":[{"label":"$iLeft","documentation":"**[optional]** Left coord"},{"label":"$iTop","documentation":"**[optional]** Top coord"},{"label":"$iRight","documentation":"**[optional]** Right coord"},{"label":"$iBottom","documentation":"**[optional]** Bottom coord"}]},"_NamedPipes_CallNamedPipe":{"documentation":"Performs a read/write operation on a named pipe","label":"_NamedPipes_CallNamedPipe ( $sPipeName, $pInpBuf, $iInpSize, $pOutBuf, $iOutSize, ByRef $iRead [, $iTimeOut = 0] )","params":[{"label":"$sPipeName","documentation":"Pipe name"},{"label":"$pInpBuf","documentation":"Pointer to the buffer containing the data written to the pipe"},{"label":"$iInpSize","documentation":"Size of the write buffer, in bytes"},{"label":"$pOutBuf","documentation":"Pointer to the buffer that receives the data read from the pipe"},{"label":"$iOutSize","documentation":"Size of the read buffer, in bytes"},{"label":"$iRead","documentation":"On return, contains the number of bytes read from the pipe"},{"label":"$iTimeOut","documentation":"**[optional]** Number of milliseconds to wait for the named pipe to be available.In addition to numeric values, the following special values can be specified:    -1 - Wait indefinitely     0 - Uses the default time-out specified in the call to the CreateNamedPipe     1 - Do not wait. If the pipe is not available, return an error"}]},"_NamedPipes_ConnectNamedPipe":{"documentation":"Enables a named pipe server process to wait for a client process to connect","label":"_NamedPipes_ConnectNamedPipe ( $hNamedPipe [, $tOverlapped = 0] )","params":[{"label":"$hNamedPipe","documentation":"Handle to the server end of a named pipe instance"},{"label":"$tOverlapped","documentation":"**[optional]** a $tagOVERLAPPED structure.    If $hNamedPipe was opened with $PIPE_FLAG_OVERLAPPED, $pOverlapped must not be 0.    If $hNamedPipe was created with $PIPE_FLAG_OVERLAPPED and $pOverlapped is not 0, the $tagOVERLAPPED structure should contain a handle to a manual reset event object.    If $hNamedPipe was not opened with $PIPE_FLAG_OVERLAPPED, the function does not return until a client is connected or an error occurs.Successful synchronous operations result in the function returning a nonzero value if a client connects after the function is called."}]},"_NamedPipes_CreateNamedPipe":{"documentation":"Creates an instance of a named pipe","label":"_NamedPipes_CreateNamedPipe ( $sName [, $iAccess = 2 [, $iFlags = 2 [, $iACL = 0 [, $iType = 1 [, $iRead = 1 [, $iWait = 0 [, $iMaxInst = 25 [, $iOutBufSize = 4096 [, $iInpBufSize = 4096 [, $iDefaultTimeout = 5000 [, $tSecurity = 0]]]]]]]]]]] )","params":[{"label":"$sName","documentation":"Pipe name with the following format: \\\\\\\\.\\\\pipe\\\\pipename.The pipename part of the name can include any character other than a backslash, including numbers and special characters.The pipe name string can be up to 256 characters long.Pipe names are not case sensitive."},{"label":"$iAccess","documentation":"**[optional]** The pipe access mode. Must be one of the following:    0 - The flow of data in the pipe goes from client to server only (inbound)    1 - The flow of data in the pipe goes from server to client only (outbound)    2 - The pipe is bi-directional (duplex)"},{"label":"$iFlags","documentation":"**[optional]** The pipe flags. Can be any combination of the following:    1 - If you attempt to create multiple instances of a pipe with this flag, creation of the first instance succeeds, but creation of the next instance fails.    2 - Overlapped mode is enabled. If this mode is enabled functions performing read, write, and connect operations that may take a significant time to be completed can return immediately.    4 - Write-through mode is enabled. This mode affects only write operations on byte type pipes and only when the client and server are on different computers."},{"label":"$iACL","documentation":"**[optional]** Security ACL flags. Can be any combination of the following:    1 - The caller will have write access to the named pipe\'s discretionary ACL    2 - The caller will have write access to the named pipe\'s owner    4 - The caller will have write access to the named pipe\'s security ACL"},{"label":"$iType","documentation":"**[optional]** Pipe type mode. Must be one of the following:    0 - Data is written to the pipe as a stream of bytes    1 - Data is written to the pipe as a stream of messages"},{"label":"$iRead","documentation":"**[optional]** Pipe read mode. Must be one of the following:    0 - Data is read from the pipe as a stream of bytes    1 - Data is read from the pipe as a stream of messages"},{"label":"$iWait","documentation":"**[optional]** Pipe wait mode. Must be one of the following:    0 - Blocking mode is enabled. When the pipe handle is specified in ReadFile, WriteFile, or ConnectNamedPipe, the operation is not completed until there is data to read, all data is written, or a client is connected.    1 - Nonblocking mode is enabled. ReadFile, WriteFile, and ConnectNamedPipe always return immediately."},{"label":"$iMaxInst","documentation":"**[optional]** The maximum number of instances that can be created for this pipe"},{"label":"$iOutBufSize","documentation":"**[optional]** The number of bytes to reserve for the output buffer"},{"label":"$iInpBufSize","documentation":"**[optional]** The number of bytes to reserve for the input buffer"},{"label":"$iDefaultTimeOut","documentation":"**[optional]** The default time out value, in milliseconds"},{"label":"$tSecurity","documentation":"**[optional]** a $tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new named pipe and determines whether child processes can inherit the returned handle.If $tSecurity is 0, the named pipe gets a default security descriptor and the handle cannot be inherited.The ACLs in the default security descriptor for a named pipe grant full control to the LocalSystem account administrators, and the creator owner.They also grant read access to members of the Everyone group and the anonymous account."}]},"_NamedPipes_CreatePipe":{"documentation":"Creates an anonymous pipe","label":"_NamedPipes_CreatePipe ( ByRef $hReadPipe, ByRef $hWritePipe [, $tSecurity = 0 [, $iSize = 0]] )","params":[{"label":"$hReadPipe","documentation":"Variable that receives the read handle for the pipe"},{"label":"$hWritePipe","documentation":"Variable that receives the write handle for the pipe"},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that determines if the returned handle can be inherited by child processes.If 0, the handles cannot be inherited."},{"label":"$iSize","documentation":"**[optional]** The size of the buffer for the pipe, in bytes.If 0, the system uses the default buffer size."}]},"_NamedPipes_DisconnectNamedPipe":{"documentation":"Disconnects the server end of a named pipe instance from a client process","label":"_NamedPipes_DisconnectNamedPipe ( $hNamedPipe )","params":[{"label":"$hNamedPipe","documentation":"Handle to the server end of a named pipe instance."}]},"_NamedPipes_GetNamedPipeHandleState":{"documentation":"Retrieves information about a specified named pipe","label":"_NamedPipes_GetNamedPipeHandleState ( $hNamedPipe )","params":[{"label":"$hNamedPipe","documentation":"Handle to the server end of a named pipe instance"}]},"_NamedPipes_GetNamedPipeInfo":{"documentation":"Retrieves information about the specified named pipe","label":"_NamedPipes_GetNamedPipeInfo ( $hNamedPipe )","params":[{"label":"$hNamedPipe","documentation":"Handle to the named pipe instance. The handle must have GENERIC_READ access to the named pipe"}]},"_NamedPipes_PeekNamedPipe":{"documentation":"Copies data from a pipe into a buffer without removing it from the pipe","label":"_NamedPipes_PeekNamedPipe ( $hNamedPipe )","params":[{"label":"$hNamedPipe","documentation":"Handle to the pipe"}]},"_NamedPipes_SetNamedPipeHandleState":{"documentation":"Sets the read mode and the blocking mode of the specified named pipe","label":"_NamedPipes_SetNamedPipeHandleState ( $hNamedPipe, $iRead, $iWait [, $iBytes = 0 [, $iTimeOut = 0]] )","params":[{"label":"$hNamedPipe","documentation":"Handle to the named pipe instance"},{"label":"$iRead","documentation":"Pipe read mode. Must be one of the following:    0 - Data is read from the pipe as a stream of bytes    1 - Data is read from the pipe as a stream of messages"},{"label":"$iWait","documentation":"Pipe wait mode. Must be one of the following:    0 - Blocking mode is enabled    1 - Nonblocking mode is enabled"},{"label":"$iBytes","documentation":"**[optional]** Maximum number of bytes collected on the client computer before transmission to the server"},{"label":"$iTimeout","documentation":"**[optional]** Maximum time, in milliseconds, that can pass before a remote named pipe transfers information"}]},"_NamedPipes_TransactNamedPipe":{"documentation":"Reads and writes to a named pipe in one network operation","label":"_NamedPipes_TransactNamedPipe ( $hNamedPipe, $pInpBuf, $iInpSize, $pOutBuf, $iOutSize [, $tOverlapped = 0] )","params":[{"label":"$hNamedPipe","documentation":"The handle to the named pipe"},{"label":"$pInpBuf","documentation":"Pointer to the buffer containing the data to be written to the pipe"},{"label":"$iInpSize","documentation":"Size of the write buffer, in bytes"},{"label":"$pOutBuf","documentation":"Pointer to the buffer that receives the data read from the pipe"},{"label":"$iOutSize","documentation":"Size of the read buffer, in bytes"},{"label":"$tOverlapped","documentation":"**[optional]** a $tagOVERLAPPED structure.    This structure is required if $hNamedPipe was opened with $PIPE_FLAG_OVERLAPPED.    If $hNamedPipe was opened with $PIPE_FLAG_OVERLAPPED, $tOverlapped must not be 0.    If $hNamedPipe was opened with $PIPE_FLAG_OVERLAPPED and $tOverlapped is not 0, TransactNamedPipe is executed as an overlapped operation.    The $tagOVERLAPPED structure should contain a manual reset event object.    If the operation cannot be completed immediately, TransactNamedPipe returns False and GetLastError will return ERROR_IO_PENDING."}]},"_NamedPipes_WaitNamedPipe":{"documentation":"Waits for an instance of a named pipe to become available","label":"_NamedPipes_WaitNamedPipe ( $sPipeName [, $iTimeOut = 0] )","params":[{"label":"$sPipeName","documentation":"The name of the named pipe. The string must include the name of the computer on which the server process is executing.A period may be used for the servername if the pipe is local."},{"label":"$iTimeout","documentation":"**[optional]** The number of milliseconds that the function will wait for the named pipe to be available.You can also use one of the following values:    -1 - The function does not return until an instance of the named pipe is available     0 - The time-out interval is the default value specified by the server process"}]},"_Net_Share_ConnectionEnum":{"documentation":"Lists all connections made to a shared resource","label":"_Net_Share_ConnectionEnum ( $sServer, $sQualifier )","params":[{"label":"$sServer","documentation":"String that specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank the local computer is used."},{"label":"$sQualifier","documentation":"Specifies a share name or computer name of interest.If it is a share name, then all of the connections made to that share name are listed.If it is a computer name, the function lists all connections made from that computer to the server specified."}]},"_Net_Share_FileClose":{"documentation":"Forces a resource to close","label":"_Net_Share_FileClose ( $sServer, $iFileID )","params":[{"label":"$sServer","documentation":"Specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank, the local computer is used."},{"label":"$iFileID","documentation":"Specifies the file identifier of the opened resource instance to close"}]},"_Net_Share_FileEnum":{"documentation":"Returns information about open files on a server","label":"_Net_Share_FileEnum ( [$sServer = \\"\\" [, $sBaseName = \\"\\" [, $sUserName = \\"\\"]]] )","params":[{"label":"$sServer","documentation":"**[optional]** String that contains the name of the server on which the function is to execute.A blank specifies the local computer."},{"label":"$sBaseName","documentation":"**[optional]** String containing a qualifier for the returned information.If blank all open resources are enumerated.If not blank, the function enumerates only resources that have $sBaseName as a prefix."},{"label":"$sUserName","documentation":"**[optional]** String that specifies the name of the user.If not blank $sUserName serves as a qualifier to the enumeration."}]},"_Net_Share_FileGetInfo":{"documentation":"Retrieves information about a particular opening of a server resource","label":"_Net_Share_FileGetInfo ( $sServer, $iFileID )","params":[{"label":"$sServer","documentation":"Specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank, the local computer is used."},{"label":"$iFileID","documentation":"File identifier of the resource for which to return information.The value of this parameter must have been returned in a previous enumeration call."}]},"_Net_Share_PermStr":{"documentation":"Returns the string representation of a resource\'s permissions","label":"_Net_Share_PermStr ( $iPerm )","params":[{"label":"$iPerm","documentation":"The resource\'s permissions:    1 - Permission to read data from a resource and to execute    2 - Permission to write data to the resource    4 - Permission to create an instance of the resource    8 - Permission to execute the resource    16 - Permission to delete the resource    32 - Permission to modify the resource\'s attributes    64 - Permission to modify the permissions assigned to a resource"}]},"_Net_Share_ResourceStr":{"documentation":"Returns the string representation of a resource","label":"_Net_Share_ResourceStr ( $iResource )","params":[{"label":"$iResource","documentation":"Resource type. Can be a combination of:    $STYPE_DISKTREE - Print queue    $STYPE_PRINTQ - Disk drive    $STYPE_DEVICE - Communication device    $STYPE_IPC - IPC    $STYPE_SPECIAL - Special share reserved for IPC$ or remote administration of the server    $STYPE_TEMPORARY - A temporary share"}]},"_Net_Share_SessionDel":{"documentation":"Ends a network session between a server and a workstation","label":"_Net_Share_SessionDel ( [$sServer = \\"\\" [, $sClientName = \\"\\" [, $sUserName = \\"\\"]]] )","params":[{"label":"$sServer","documentation":"**[optional]** Specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank, the local computer is used."},{"label":"$sClientName","documentation":"**[optional]** Specifies the computer name of the client to disconnect.If blank, then all the sessions of the user identified by the username parameter will be deleted on the server specified by $sServer."},{"label":"$sUserName","documentation":"**[optional]** Specifies the name of the user whose session is to be terminated.If this parameter is blank, all user sessions from the client specified by the $sClientName parameter are to be terminated."}]},"_Net_Share_SessionEnum":{"documentation":"Provides information about sessions established on a server","label":"_Net_Share_SessionEnum ( [$sServer = \\"\\" [, $sClientName = \\"\\" [, $sUserName = \\"\\"]]] )","params":[{"label":"$sServer","documentation":"**[optional]** String that specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank the local computer is used."},{"label":"$sClientName","documentation":"**[optional]** Specifies the name of the computer session for which information is to be returned.If this parameter is blank, the function returns information for all computer sessions on the server."},{"label":"$sUserName","documentation":"**[optional]** Specifies the name of the user for which information is to be returned.If this parameter is blank, the function returns information for all users."}]},"_Net_Share_SessionGetInfo":{"documentation":"Retrieves information about a session established between a server and workstation","label":"_Net_Share_SessionGetInfo ( $sServer, $sClientName, $sUserName )","params":[{"label":"$sServer","documentation":"String that specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank the local computer is used."},{"label":"$sClientName","documentation":"Specifies the name of the computer session for which information is to be returned.This parameter cannot be blank."},{"label":"$sUserName","documentation":"String that specifies the name of the user whose session information is to be returned.This parameter cannot be blank."}]},"_Net_Share_ShareAdd":{"documentation":"Shares a server resource","label":"_Net_Share_ShareAdd ( $sServer, $sShare, $iType, $sResourcePath [, $sComment = \\"\\" [, $iMaxUses = -1]] )","params":[{"label":"$sServer","documentation":"Specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank, the local computer is used."},{"label":"$sShare","documentation":"Share name of a resource"},{"label":"$iType","documentation":"Contains the type of the shared resource. Can be a combination of:    $STYPE_DISKTREE - Disk drive    $STYPE_PRINTQ - Print queue    $STYPE_DEVICE - Communication device    $STYPE_IPC - IPC    $STYPE_SPECIAL - Special share reserved for IPC$ or remote administration of the server    $STYPE_TEMPORARY - A temporary share"},{"label":"$sResourcePath","documentation":"Local path for the shared resource. For disks, this is the path being shared.For print queues, this is the name of the print queue being shared."},{"label":"$sComment","documentation":"**[optional]** String that contains an comment about the shared resource"},{"label":"$iMaxUses","documentation":"**[optional]** The maximum number of concurrent connections that the shared resource can accommodate.The number of connections is unlimited if the value specified is –1."}]},"_Net_Share_ShareCheck":{"documentation":"Checks whether or not a server is sharing a device","label":"_Net_Share_ShareCheck ( $sServer, $sShare )","params":[{"label":"$sServer","documentation":"Specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank, the local computer is used."},{"label":"$sShare","documentation":"Specifies the name of the device to check for shared access"}]},"_Net_Share_ShareDel":{"documentation":"Deletes a share name from a server\'s list of shared resources","label":"_Net_Share_ShareDel ( $sServer, $sShare )","params":[{"label":"$sServer","documentation":"Specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank, the local computer is used."},{"label":"$sShare","documentation":"Specifies the name of the share to delete"}]},"_Net_Share_ShareEnum":{"documentation":"Retrieves information about each shared resource on a server","label":"_Net_Share_ShareEnum ( [$sServer = \\"\\"] )","params":[{"label":"$sServer","documentation":"**[optional]** String that specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank the local computer is used."}]},"_Net_Share_ShareGetInfo":{"documentation":"Retrieves information about a particular shared resource on a server","label":"_Net_Share_ShareGetInfo ( $sServer, $sShare )","params":[{"label":"$sServer","documentation":"String that specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank the local computer is used."},{"label":"$sShare","documentation":"Name of the share for which to return information"}]},"_Net_Share_ShareSetInfo":{"documentation":"Shares a server resource","label":"_Net_Share_ShareSetInfo ( $sServer, $sShare, $sComment, $iMaxUses )","params":[{"label":"$sServer","documentation":"Specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank, the local computer is used."},{"label":"$sShare","documentation":"Specifies the name of the share to set information on"},{"label":"$sComment","documentation":"String that contains an optional comment about the shared resource"},{"label":"$iMaxUses","documentation":"Indicates the maximum number of connections that the resource can accommodate.The number of connections is unlimited if this value is –1."}]},"_Net_Share_StatisticsGetSvr":{"documentation":"Retrieves operating statistics for a server","label":"_Net_Share_StatisticsGetSvr ( [$sServer = \\"\\"] )","params":[{"label":"$sServer","documentation":"**[optional]** Specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank, the local computer is used."}]},"_Net_Share_StatisticsGetWrk":{"documentation":"Retrieves operating statistics for a workstation","label":"_Net_Share_StatisticsGetWrk ( [$sWorkStation = \\"\\"] )","params":[{"label":"$sWorkStation","documentation":"**[optional]** Specifies the DNS or NetBIOS name of the remote server on which the function is to execute.If this parameter is blank, the local computer is used."}]},"_Now":{"documentation":"Returns the current Date and Time in PC\'s format","label":"_Now (  )","params":[]},"_NowCalc":{"documentation":"Returns the current Date and Time in format YYYY/MM/DD HH:MM:SS for use in date calculations","label":"_NowCalc (  )","params":[]},"_NowCalcDate":{"documentation":"Returns the current Date in format YYYY/MM/DD","label":"_NowCalcDate (  )","params":[]},"_NowDate":{"documentation":"Returns the current Date in the Pc\'s format","label":"_NowDate (  )","params":[]},"_NowTime":{"documentation":"Returns the current Time in the requested format","label":"_NowTime ( [$sType = 3] )","params":[{"label":"$sType","documentation":"**[optional]**    3 = (default) Display a time using the time format specified in your computer\'s regional settings.    4 - Display a time using the 24-hour format (hh:mm).    5 - Display a time using the 24-hour format (hh:mm:ss)."}]},"_PathFull":{"documentation":"Creates a path based on the relative path you provide. The newly created absolute path is returned","label":"_PathFull ( $sRelativePath [, $sBasePath = @WorkingDir] )","params":[{"label":"$sRelativePath","documentation":"The relative path to be created"},{"label":"$sBasePath","documentation":"**[optional]** The base path to be used. Default = @WorkingDir"}]},"_PathGetRelative":{"documentation":"Returns the relative path to a directory","label":"_PathGetRelative ( $sFrom, $sTo )","params":[{"label":"$sFrom","documentation":"Path to the source directory"},{"label":"$sTo","documentation":"Path to the destination file or directory"}]},"_PathMake":{"documentation":"Creates a path from drive, directory, file name and file extension parts","label":"_PathMake ( $sDrive, $sDir, $sFileName, $sExtension )","params":[{"label":"$sDrive","documentation":"Drive (Can be UNC). If it\'s a drive letter, a : is automatically appended"},{"label":"$sDir","documentation":"Directory. A trailing and preceding slash are added if not found."},{"label":"$sFileName","documentation":"The name of the file"},{"label":"$sExtension","documentation":"The file extension. A period is supplied if not found in the extension"}]},"_PathSplit":{"documentation":"Splits a path into the drive, directory, file name and file extension parts. An empty string is set if a part is missing","label":"_PathSplit ( $sFilePath, ByRef $sDrive, ByRef $sDir, ByRef  $sFileName, ByRef  $sExtension )","params":[{"label":"$sFilePath","documentation":"The path to be split (Can contain a UNC server or drive letter)"},{"label":"$sDrive","documentation":"String to hold the drive"},{"label":"$sDir","documentation":"String to hold the directory"},{"label":"$sFileName","documentation":"String to hold the file name"},{"label":"$sExtension","documentation":"String to hold the file extension"}]},"_ProcessGetName":{"documentation":"Returns a string containing the process name that belongs to a given PID","label":"_ProcessGetName ( $iPID )","params":[{"label":"$iPID","documentation":"The PID of a currently running process."}]},"_ProcessGetPriority":{"documentation":"Get the priority of an open process","label":"_ProcessGetPriority ( $vProcess )","params":[{"label":"$vProcess","documentation":"The name or PID of the process to be examined."}]},"_Radian":{"documentation":"Converts degrees to radians","label":"_Radian ( $iDegrees )","params":[{"label":"$iDegrees","documentation":"Degrees to be converted into radians."}]},"_ReplaceStringInFile":{"documentation":"Replaces substrings in a file","label":"_ReplaceStringInFile ( $sFilePath, $sSearchString, $sReplaceString [, $iCaseSensitive = 0 [, $iOccurance = 1]] )","params":[{"label":"$sFilePath","documentation":"Full path of file to replace substrings."},{"label":"$sSearchString","documentation":"The string to evaluate."},{"label":"$sReplaceString","documentation":"The replacement string."},{"label":"$iCaseSensitive","documentation":"**[optional]** Flag to indicate if the operations should be case sensitive.    $STR_NOCASESENSE (0) = not case sensitive, using the user\'s locale (default)    $STR_CASESENSE (1) = case sensitive    $STR_NOCASESENSEBASIC (2) = not case sensitive, using a basic/faster comparisonConstants are defined in StringConstants.au3"},{"label":"$iOccurance","documentation":"**[optional]** 0 - Only the first occurrence is replaced or 1 - all occurrences are replaced (default)"}]},"_RunDos":{"documentation":"Executes a DOS command in a hidden command window","label":"_RunDos ( $sCommand )","params":[{"label":"$sCommand","documentation":"Command to execute"}]},"_ScreenCapture_Capture":{"documentation":"Captures a region of the screen","label":"_ScreenCapture_Capture ( [$sFileName = \\"\\" [, $iLeft = 0 [, $iTop = 0 [, $iRight = -1 [, $iBottom = -1 [, $bCursor = True]]]]]] )","params":[{"label":"$sFileName","documentation":"**[optional]** Full path and extension of the image file"},{"label":"$iLeft","documentation":"**[optional]** X coordinate of the upper left corner of the rectangle"},{"label":"$iTop","documentation":"**[optional]** Y coordinate of the upper left corner of the rectangle"},{"label":"$iRight","documentation":"**[optional]** X coordinate of the lower right corner of the rectangle. If this is -1, the current screen width will be used."},{"label":"$iBottom","documentation":"**[optional]** Y coordinate of the lower right corner of the rectangle. If this is -1, the current screen height will be used."},{"label":"$bCursor","documentation":"**[optional]** If True the cursor will be captured with the image"}]},"_ScreenCapture_CaptureWnd":{"documentation":"Captures a screen shot of a specified window or controlID","label":"_ScreenCapture_CaptureWnd ( $sFileName, $hWnd [, $iLeft = 0 [, $iTop = 0 [, $iRight = -1 [, $iBottom = -1 [, $bCursor = True]]]]] )","params":[{"label":"$sFileName","documentation":"Full path and extension of the image file"},{"label":"$hWnd","documentation":"Handle to the window to be captured"},{"label":"$iLeft","documentation":"**[optional]** X coordinate of the upper left corner of the client rectangle"},{"label":"$iTop","documentation":"**[optional]** Y coordinate of the upper left corner of the client rectangle"},{"label":"$iRight","documentation":"**[optional]** X coordinate of the lower right corner of the rectangle"},{"label":"$iBottom","documentation":"**[optional]** Y coordinate of the lower right corner of the rectangle"},{"label":"$bCursor","documentation":"**[optional]** If True the cursor will be captured with the image"}]},"_ScreenCapture_SaveImage":{"documentation":"Saves an image to file","label":"_ScreenCapture_SaveImage ( $sFileName, $hBitmap [, $bFreeBmp = True] )","params":[{"label":"$sFileName","documentation":"Full path and extension of the bitmap file to be saved"},{"label":"$hBitmap","documentation":"HBITMAP handle"},{"label":"$bFreeBmp","documentation":"**[optional]** If True, $hBitmap will be freed on a successful save (default)"}]},"_ScreenCapture_SetBMPFormat":{"documentation":"Sets the bit format that will be used for BMP screen captures","label":"_ScreenCapture_SetBMPFormat ( $iFormat )","params":[{"label":"$iFormat","documentation":"Image bits per pixel (bpp) setting:    0 = 16 bpp; 5 bits for each RGB component    1 = 16 bpp; 5 bits for red, 6 bits for green and 5 bits blue    2 = 24 bpp; 8 bits for each RGB component    3 = 32 bpp; 8 bits for each RGB component. No alpha component.    4 = 32 bpp; 8 bits for each RGB and alpha component"}]},"_ScreenCapture_SetJPGQuality":{"documentation":"Sets the quality level that will be used for JPEG screen captures","label":"_ScreenCapture_SetJPGQuality ( $iQuality )","params":[{"label":"$iQuality","documentation":"The quality level of the image. Must be in the range of 0 to 100."}]},"_ScreenCapture_SetTIFColorDepth":{"documentation":"Sets the color depth used for TIFF screen captures","label":"_ScreenCapture_SetTIFColorDepth ( $iDepth )","params":[{"label":"$iDepth","documentation":"Image color depth:    0 - Default encoder color depth    24 - 24 bit    32 - 32 bit"}]},"_ScreenCapture_SetTIFCompression":{"documentation":"Sets the compression used for TIFF screen captures","label":"_ScreenCapture_SetTIFCompression ( $iCompress )","params":[{"label":"$iCompress","documentation":"Image compression type:    0 - Default encoder compression    1 - No compression    2 - LZW compression"}]},"_Security__AdjustTokenPrivileges":{"documentation":"Enables or disables privileges in the specified access token","label":"_Security__AdjustTokenPrivileges ( $hToken, $bDisableAll, $tNewState, $iBufferLen [, $tPrevState = 0 [, $pRequired = 0]] )","params":[{"label":"$hToken","documentation":"Handle to the access token that contains privileges to be modified"},{"label":"$bDisableAll","documentation":"If True, the function disables all privileges and ignores the NewState parameter.If False, the function modifies privileges based on the information pointed to by the $pNewState parameter."},{"label":"$tNewState","documentation":"A $tagTOKEN_PRIVILEGES structure or a pointer to it that contains the privilege and it\'s attributes"},{"label":"$iBufferLen","documentation":"Size, in bytes, of the buffer pointed to by $pNewState"},{"label":"$tPrevState","documentation":"**[optional]** A $tagTOKEN_PRIVILEGES structure or a pointer to it that specifies the previous state of the privilege that the function modified. This can be 0."},{"label":"$pRequired","documentation":"**[optional]** Pointer to a variable that receives the required size, in bytes, of the buffer pointed to by $tPrevState.This parameter can be 0 if $tPrevState is 0."}]},"_Security__CreateProcessWithToken":{"documentation":"Creates a new process and its primary thread running in the security context of the specified token","label":"_Security__CreateProcessWithToken ( $hToken, $iLogonFlags, $sCommandLine, $iCreationFlags, $sCurDir, $tSTARTUPINFO, $tPROCESS_INFORMATION )","params":[{"label":"$hToken","documentation":"A handle to the primary token that represents a user"},{"label":"$iLogonFlags","documentation":"The logon option"},{"label":"$sCommandLine","documentation":"The command line to be executed"},{"label":"$iCreationFlags","documentation":"The flags that control how the process is created"},{"label":"$sCurDir","documentation":"The full path to the current directory for the process"},{"label":"$tSTARTUPINFO","documentation":"A (pointer to a) STARTUPINFO structure"},{"label":"$tPROCESS_INFORMATION","documentation":"A (pointer to a) PROCESS_INFORMATION structure that receives identification information for the new process"}]},"_Security__DuplicateTokenEx":{"documentation":"Creates a new access token that duplicates an existing token","label":"_Security__DuplicateTokenEx ( $hExistingToken, $iDesiredAccess, $iImpersonationLevel, $iTokenType )","params":[{"label":"$hExistingToken","documentation":"A handle to an access token opened with TOKEN_DUPLICATE access"},{"label":"$iDesiredAccess","documentation":"The requested access rights for the new token"},{"label":"$iImpersonationLevel","documentation":"The impersonation level of the new token"},{"label":"$iTokenType","documentation":"The type of new token"}]},"_Security__GetAccountSid":{"documentation":"Retrieves the security identifier (SID) for an account","label":"_Security__GetAccountSid ( $sAccount [, $sSystem = \\"\\"] )","params":[{"label":"$sAccount","documentation":"Specifies the account name.Use a fully qualified string in the domain_name\\\\user_name format to ensure that the function finds the account in the desired domain."},{"label":"$sSystem","documentation":"**[optional]** Name of the system. This string can be the name of a remote computer.If this string is blank, the account name translation begins on the local system.If the name cannot be resolved on the local system, this function will try to resolve the name using domain controllers trusted by the local system."}]},"_Security__GetLengthSid":{"documentation":"Returns the length, in bytes, of a valid SID","label":"_Security__GetLengthSid ( $pSID )","params":[{"label":"$pSID","documentation":"Pointer to a SID"}]},"_Security__GetTokenInformation":{"documentation":"Retrieves a specified type of information about an access token","label":"_Security__GetTokenInformation ( $hToken, $iClass )","params":[{"label":"$hToken","documentation":"A handle to an access token from which information is retrieved.If $iClass specifies $sTokenSource, the handle must have $TOKEN_QUERY_SOURCE access.For all other $iClass values, the handle must have $TOKEN_QUERY access."},{"label":"$iClass","documentation":"Specifies a value to identify the type of information the function retrieves"}]},"_Security__ImpersonateSelf":{"documentation":"Obtains an access token that impersonates the calling process security context","label":"_Security__ImpersonateSelf ( [$iLevel = $SECURITYIMPERSONATION] )","params":[{"label":"$iLevel","documentation":"**[optional]** Impersonation level of the new token:    $SECURITYANONYMOUS. The server process cannot obtain identification information about the client, and it cannot impersonate the client.    $SECURITYIDENTIFICATION. The server process can obtain information about the client, such as security identifiers and privileges, but it cannot impersonate the client.    $SECURITYIMPERSONATION. The server process can impersonate the clients security context on its local system. The server cannot impersonate the client on remote systems.    $SECURITYDELEGATION. The server process can impersonate the client\'s security context on remote systems."}]},"_Security__IsValidSid":{"documentation":"Validates a SID","label":"_Security__IsValidSid ( $pSID )","params":[{"label":"$pSID","documentation":"Pointer to a SID"}]},"_Security__LookupAccountName":{"documentation":"Retrieves a security identifier (SID) for the account and the name of the domain","label":"_Security__LookupAccountName ( $sAccount [, $sSystem = \\"\\"] )","params":[{"label":"$sAccount","documentation":"Specifies the account name.Use a fully qualified string in the domain_name\\\\user_name format to ensure that the function finds the account in the desired domain."},{"label":"$sSystem","documentation":"**[optional]** Name of the system.This string can be the name of a remote computer.If this string is blank, the account name translation begins on the local system.If the name cannot be resolved on the local system, this function will try to resolve the name using domain controllers trusted by the local system."}]},"_Security__LookupAccountSid":{"documentation":"Retrieves the name of the account for a SID","label":"_Security__LookupAccountSid ( $vSID [, $sSystem = \\"\\"] )","params":[{"label":"$vSID","documentation":"Either a binary SID or a string SID"},{"label":"$sSystem","documentation":"**[optional]** The name of a remote computer. By default the local system."}]},"_Security__LookupPrivilegeValue":{"documentation":"Retrieves the locally unique identifier (LUID) for a privilege value in form of 64bit integer","label":"_Security__LookupPrivilegeValue ( $sSystem, $sName )","params":[{"label":"$sSystem","documentation":"Specifies the name of the system on which the privilege name is retrieved.If blank, the function attempts to find the privilege name on the local system."},{"label":"$sName","documentation":"Specifies the name of the privilege."}]},"_Security__OpenProcessToken":{"documentation":"Returns the access token associated with a process","label":"_Security__OpenProcessToken ( $hProcess, $iAccess )","params":[{"label":"$hProcess","documentation":"A handle to the process whose access token is opened.The process must have been given the $PROCESS_QUERY_INFORMATION access permission."},{"label":"$iAccess","documentation":"Specifies an access mask that specifies the requested types of access to the access token."}]},"_Security__OpenThreadToken":{"documentation":"Opens the access token associated with a thread","label":"_Security__OpenThreadToken ( $iAccess [, $hThread = 0 [, $bOpenAsSelf = False]] )","params":[{"label":"$iAccess","documentation":"Access mask that specifies the requested types of access to the access token.These requested access types are reconciled against the token\'s discretionary access control list (DACL) to determine which accesses are granted or denied."},{"label":"$hThread","documentation":"**[optional]** Handle to the thread whose access token is opened"},{"label":"$bOpenAsSelf","documentation":"**[optional]** Indicates whether the access check is to be made against the security context of the thread calling the OpenThreadToken function or against the security context of the process for the calling thread.If this parameter is False, the access check is performed using the security context for the calling thread.If the thread is impersonating a client, this security context can be that of a client process.If this parameter is True, the access check is made using the security context of the process for the calling thread."}]},"_Security__OpenThreadTokenEx":{"documentation":"Opens the access token associated with a thread, impersonating the client\'s security context if required","label":"_Security__OpenThreadTokenEx ( $iAccess [, $hThread = 0 [, $bOpenAsSelf = False]] )","params":[{"label":"$iAccess","documentation":"Access mask that specifies the requested types of access to the access token.These requested access types are reconciled against the token\'s discretionary access control list (DACL) to determine which accesses are granted or denied."},{"label":"$hThread","documentation":"**[optional]** Handle to the thread whose access token is opened"},{"label":"$bOpenAsSelf","documentation":"**[optional]** Indicates whether the access check is to be made against the security context of the thread calling the OpenThreadToken function or against the security context of the process for the calling thread.If this parameter is False, the access check is performed using the security context for the calling thread.If the thread is impersonating a client, this security context can be that of a client process.If this parameter is True, the access check is made using the security context of the process for the calling thread."}]},"_Security__SetPrivilege":{"documentation":"Enables or disables a local token privilege","label":"_Security__SetPrivilege ( $hToken, $sPrivilege, $bEnable )","params":[{"label":"$hToken","documentation":"Handle to a token"},{"label":"$sPrivilege","documentation":"Privilege name"},{"label":"$bEnable","documentation":"Privilege setting:    True - Enable privilege    False - Disable privilege"}]},"_Security__SetTokenInformation":{"documentation":"Sets various types of information for a specified access token","label":"_Security__SetTokenInformation ( $hToken, $iTokenInformation, $vTokenInformation, $iTokenInformationLength )","params":[{"label":"$hToken","documentation":"A handle to the access token for which information is to be set"},{"label":"$iTokenInformation","documentation":"The type of information the function sets"},{"label":"$vTokenInformation","documentation":"A (pointer to a) structure that contains the information set in the access token"},{"label":"$iTokenInformationLength","documentation":"The length, in bytes, of the buffer pointed to by $vTokenInformation"}]},"_Security__SidToStringSid":{"documentation":"Converts a binary SID to a string","label":"_Security__SidToStringSid ( $pSID )","params":[{"label":"$pSID","documentation":"Pointer to a binary SID to be converted"}]},"_Security__SidTypeStr":{"documentation":"Converts a SID type to string form","label":"_Security__SidTypeStr ( $iType )","params":[{"label":"$iType","documentation":"SID type"}]},"_Security__StringSidToSid":{"documentation":"Converts a String SID to a binary SID","label":"_Security__StringSidToSid ( $sSID )","params":[{"label":"$sSID","documentation":"String SID to be converted"}]},"_SendMessage":{"documentation":"Wrapper for commonly used DLL Call","label":"_SendMessage ( $hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iReturn = 0 [, $wParamType = \\"wparam\\" [, $lParamType = \\"lparam\\" [, $sReturnType = \\"lresult\\"]]]]]] )","params":[{"label":"$hWnd","documentation":"Window/control handle"},{"label":"$iMsg","documentation":"Message to send to control (number)"},{"label":"$wParam","documentation":"**[optional]** Specifies additional message-specific information"},{"label":"$lParam","documentation":"**[optional]** Specifies additional message-specific information"},{"label":"$iReturn","documentation":"**[optional]** What to return:    0 - Return value from DLL call    1 - $ihWnd    2 - $iMsg    3 - $wParam    4 - $lParam     4 - array same as DllCall()"},{"label":"$wParamType","documentation":"**[optional]** See DllCall in Related"},{"label":"$lParamType","documentation":"**[optional]** See DllCall in Related"},{"label":"$sReturnType","documentation":"**[optional]** See DllCall in Related"}]},"_SendMessageA":{"documentation":"Send a Message to a Window/Control (Force Ansi Call)","label":"_SendMessageA ( $hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iReturn = 0 [, $wParamType = \\"wparam\\" [, $lParamType = \\"lparam\\" [, $sReturnType = \\"lresult\\"]]]]]] )","params":[{"label":"$hWnd","documentation":"Window/control handle"},{"label":"$iMsg","documentation":"Message to send to control (number)"},{"label":"$wParam","documentation":"**[optional]** Specifies additional message-specific information"},{"label":"$lParam","documentation":"**[optional]** Specifies additional message-specific information"},{"label":"$iReturn","documentation":"**[optional]** What to return:    0 - Return value from DLL call    1 - $ihWnd    2 - $iMsg    3 - $wParam    4 - $lParam     4 - array same as DllCall"},{"label":"$wParamType","documentation":"**[optional]** See DllCall in Related"},{"label":"$lParamType","documentation":"**[optional]** See DllCall in Related"},{"label":"$sReturnType","documentation":"**[optional]** See DllCall in Related"}]},"_SetDate":{"documentation":"Sets the current date of the system","label":"_SetDate ( $iDay [, $iMonth = 0 [, $iYear = 0]] )","params":[{"label":"$iDay","documentation":"Day of the month. Values: 1-31"},{"label":"$iMonth","documentation":"**[optional]** month. Values: 1-12"},{"label":"$iYear","documentation":"**[optional]** year. Values: > 0 (windows might restrict this further!!)"}]},"_SetTime":{"documentation":"Sets the current time of the system","label":"_SetTime ( $iHour, $iMinute [, $iSecond = 0 [, $iMSeconds = 0]] )","params":[{"label":"$iHour","documentation":"the hour. Values: 0-23"},{"label":"$iMinute","documentation":"the minute. Values: 0-59"},{"label":"$iSecond","documentation":"**[optional]** the seconds. Values: 0-59"},{"label":"$iMSeconds","documentation":"**[optional]** the milliseconds. Values: 0-999"}]},"_Singleton":{"documentation":"Enforce a design paradigm where only one instance of the script may be running","label":"_Singleton ( $sOccurrenceName [, $iFlag = 0] )","params":[{"label":"$sOccurrenceName","documentation":"String to identify the occurrence of the script. This string may not contain the \\\\ character unless you are placing the object in a namespace (See Remarks)."},{"label":"$iFlag","documentation":"**[optional]** Behavior options.0 - Exit the script with the exit code -1 if another instance already exists.1 - Return from the function without exiting the script.2 - Allow the object to be accessed by anybody in the system. This is useful if specifying a \\"Global\\\\\\" object in a multi-user environment."}]},"_SoundClose":{"documentation":"Closes a sound previously opened with _SoundOpen","label":"_SoundClose ( $aSndID )","params":[{"label":"$aSndID","documentation":"Sound ID array as returned by _SoundOpen()"}]},"_SoundLength":{"documentation":"Returns the length of the soundfile","label":"_SoundLength ( $aSndID [, $iMode = 1] )","params":[{"label":"$aSndID","documentation":"Sound ID array as returned by _SoundOpen() or a file name"},{"label":"$iMode","documentation":"**[optional]** This flag determines the format of the returned sound length    1 = (by default) hh:mm:ss where h = hours, m = minutes and s = seconds (default)    2 = milliseconds"}]},"_SoundOpen":{"documentation":"Opens a sound file for use with other _Sound functions","label":"_SoundOpen ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"Path to sound file"}]},"_SoundPause":{"documentation":"Pause a playing sound","label":"_SoundPause ( $aSndID )","params":[{"label":"$aSndID","documentation":"Sound ID array as returned by _SoundOpen() or a file name"}]},"_SoundPlay":{"documentation":"Play a sound file","label":"_SoundPlay ( $aSndID [, $iWait = 0] )","params":[{"label":"$aSndID","documentation":"Sound ID array as returned by _SoundOpen() or a file name"},{"label":"$iWait","documentation":"**[optional]** This flag determines if the script should wait for the sound to finish before continuing:    0 = continue script while sound is playing (default)    1 = wait until sound has finished"}]},"_SoundPos":{"documentation":"Returns the current position of the sound","label":"_SoundPos ( $aSndID [, $iMode = 1] )","params":[{"label":"$aSndID","documentation":"Sound ID array as returned by _SoundOpen() or a file name"},{"label":"$iMode","documentation":"**[optional]** This flag determines which format the position of the sound is returned in    1 = (by default) hh:mm:ss where h = hours, m = minutes and s = seconds (default)    2 = milliseconds"}]},"_SoundResume":{"documentation":"Resume a paused sound","label":"_SoundResume ( $aSndID )","params":[{"label":"$aSndID","documentation":"Sound ID array as returned by _SoundOpen() or a file name"}]},"_SoundSeek":{"documentation":"Seeks the sound to the specified position","label":"_SoundSeek ( ByRef $aSndID, $iHour, $iMin, $iSec )","params":[{"label":"$aSndID","documentation":"Sound ID array as returned by _SoundOpen()"},{"label":"$iHour","documentation":"Hour to seek to"},{"label":"$iMin","documentation":"Minute to seek to"},{"label":"$iSec","documentation":"Second to seek to"}]},"_SoundStatus":{"documentation":"Returns the status of the sound","label":"_SoundStatus ( $aSndID )","params":[{"label":"$aSndID","documentation":"Sound ID array as returned by _SoundOpen() or a file name"}]},"_SoundStop":{"documentation":"Stop a playing sound","label":"_SoundStop ( ByRef $aSndID )","params":[{"label":"$aSndID","documentation":"Sound ID array as returned by _SoundOpen() or a file name (must be a variable)"}]},"_SQLite_Changes":{"documentation":"Returns the number of database rows that were changed by the most recently completed statement with this connection","label":"_SQLite_Changes ( [$hDB = -1] )","params":[{"label":"$hDB","documentation":"**[optional]** An open database, default is the last opened database"}]},"_SQLite_Close":{"documentation":"Close an open database","label":"_SQLite_Close ( [$hDB = -1] )","params":[{"label":"$hDB","documentation":"**[optional]** Database handle."}]},"_SQLite_Display2DResult":{"documentation":"Returns or prints to Console a formated display of a 2Dimensional array","label":"_SQLite_Display2DResult ( $aResult [, $iCellWidth = 0 [, $bReturn = False]] )","params":[{"label":"$aResult","documentation":"The array to be displayed"},{"label":"$iCellWidth","documentation":"**[optional]** specifies the size of a data field"},{"label":"$bReturn","documentation":"**[optional]** if True the formated string is returned, not displayedIf False the formatted string is send to StdOut"}]},"_SQLite_Encode":{"documentation":"Binary encodes a string, number or binary data for use as BLOB in SQLite statements","label":"_SQLite_Encode ( $vData )","params":[{"label":"$vData","documentation":"Data To be encoded (String, Number or Binary)"}]},"_SQLite_ErrCode":{"documentation":"Returns last error code (numeric)","label":"_SQLite_ErrCode ( [$hDB = -1] )","params":[{"label":"$hDB","documentation":"**[optional]** An open database, default is the last opened database"}]},"_SQLite_ErrMsg":{"documentation":"Returns a string describing in english the error condition for the most recent sqlite3_* API call","label":"_SQLite_ErrMsg ( [$hDB = -1] )","params":[{"label":"$hDB","documentation":"**[optional]** An open database, default is the last opened database"}]},"_SQLite_Escape":{"documentation":"Escapes a string or number for use as TEXT in SQLite statements","label":"_SQLite_Escape ( $sString [, $iBuffSize = Default] )","params":[{"label":"$sString","documentation":"string to escape"},{"label":"$iBuffSize","documentation":"**[optional]** Size of the escaped string to be returned (Default = complete escaped string)"}]},"_SQLite_Exec":{"documentation":"Executes a SQLite query, does not handle results","label":"_SQLite_Exec ( $hDB, $sSQL [, $sCallBack = \\"\\"] )","params":[{"label":"$hDB","documentation":"An open database, use -1 to use last opened database"},{"label":"$sSQL","documentation":"SQL statement to be executed"},{"label":"$sCallback","documentation":"**[optional]** if specified the function will be called for each row"}]},"_SQLite_FastEncode":{"documentation":"Fast encodes binary data (exclusively) for use in SQLite statements","label":"_SQLite_FastEncode ( $vData )","params":[{"label":"$vData","documentation":"Data To be encoded (Binary only)"}]},"_SQLite_FastEscape":{"documentation":"Fast escapes a string or number for use as TEXT in SQLite statements","label":"_SQLite_FastEscape ( $sString )","params":[{"label":"$sString","documentation":"string to escape"}]},"_SQLite_FetchData":{"documentation":"Fetches 1 row of data from a _SQLite_Query() based query","label":"_SQLite_FetchData ( $hQuery, ByRef $aRow [, $bBinary = False [, $bDoNotFinalize = False [, $iColumns = 0]]] )","params":[{"label":"$hQuery","documentation":"Queryhandle passed out by _SQLite_Query()"},{"label":"$aRow","documentation":"A 1 dimensional array containing a row of data"},{"label":"$bBinary","documentation":"**[optional]** Switch for binary mode ($aRow will be an array of binary strings)"},{"label":"$bDoNotFinalize","documentation":"**[optional]** Switch can be set to True if you need to keep the query unfinalized for further use.(It is then the caller\'s responsability to invoke _SQLite_QueryFinalize() before closing database.)"},{"label":"$iColumns","documentation":"**[optional]** Number of columns to be returned ((Default = all)"}]},"_SQLite_FetchNames":{"documentation":"Read out the Column names of a _SQLite_Query() based query","label":"_SQLite_FetchNames ( $hQuery, ByRef $aNames )","params":[{"label":"$hQuery","documentation":"Query handle generated by SQLite_Query()"},{"label":"$aNames","documentation":"1 dimensional array containing the Column names"}]},"_SQLite_GetTable":{"documentation":"Passes Out a 1Dimensional Array Containing Tablenames and Data of Executed Query","label":"_SQLite_GetTable ( $hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1] )","params":[{"label":"$hDB","documentation":"An open database, use -1 to use last opened database"},{"label":"$sSQL","documentation":"SQL Statement to be executed"},{"label":"$aResult","documentation":"Passes out the result"},{"label":"$iRows","documentation":"Passes out the amount of \'data\' Rows"},{"label":"$iColumns","documentation":"Passes out the amount of columns"},{"label":"$iCharSize","documentation":"**[optional]** Specifies the maximal size of a data field"}]},"_SQLite_GetTable2d":{"documentation":"Passes out a 2Dimensional array containing column names and data of executed query","label":"_SQLite_GetTable2d ( $hDB, $sSQL, ByRef $aResult, ByRef $iRows, ByRef $iColumns [, $iCharSize = -1 [, $bSwichDimensions = False]] )","params":[{"label":"$hDB","documentation":"An Open Database, Use -1 To use Last Opened Database"},{"label":"$sSQL","documentation":"SQL Statement to be executed"},{"label":"$aResult","documentation":"Passes out the result"},{"label":"$iRows","documentation":"Passes out the amount of \'data\' Rows"},{"label":"$iColumns","documentation":"Passes out the amount of columns"},{"label":"$iCharSize","documentation":"**[optional]** Specifies the maximal size of a data field"},{"label":"$bSwichDimensions","documentation":"**[optional]** Switches dimensions of $aResult"}]},"_SQLite_LastInsertRowID":{"documentation":"Returns the ROWID of the most recent insert in the database by this connection","label":"_SQLite_LastInsertRowID ( [$hDB = -1] )","params":[{"label":"$hDB","documentation":"**[optional]** An open database, use -1 to use last opened database"}]},"_SQLite_LibVersion":{"documentation":"Returns the version number of the library","label":"_SQLite_LibVersion (  )","params":[]},"_SQLite_Open":{"documentation":"Opens/creates a SQLite database","label":"_SQLite_Open ( [$sDatabase_Filename = \\":memory:\\" [, $iAccessMode = Default [, $iEncoding = $SQLITE_ENCODING_UTF8]]] )","params":[{"label":"$sDatabase_Filename","documentation":"**[optional]** Database filename, by default will open a memory database."},{"label":"$iAccessMode","documentation":"**[optional]** access mode flags. Defaults to $SQLITE_OPEN_READWRITE + $SQLITE_OPEN_CREATE"},{"label":"$iEncoding","documentation":"**[optional]** encoding mode flag, only used at creation time. Defaults to $SQLITE_ENCODING_UTF8"}]},"_SQLite_Query":{"documentation":"Prepares a SQLite Query","label":"_SQLite_Query ( $hDB, $sSQL, ByRef $hQuery )","params":[{"label":"$hDB","documentation":"An open database, use -1 to use last opened database"},{"label":"$sSQL","documentation":"SQL statement to be executed"},{"label":"$hQuery","documentation":"Passes out a query handle"}]},"_SQLite_QueryFinalize":{"documentation":"Finalizes an _SQLite_Query() based query. The query is interrupted","label":"_SQLite_QueryFinalize ( $hQuery )","params":[{"label":"$hQuery","documentation":"Query handle generated by _SQLite_Query()"}]},"_SQLite_QueryReset":{"documentation":"Reset a _SQLite_Query() based query","label":"_SQLite_QueryReset ( $hQuery )","params":[{"label":"$hQuery","documentation":"Query handle generated by _SQLite_Query()"}]},"_SQLite_QuerySingleRow":{"documentation":"Read out the first row of the result from the specified query","label":"_SQLite_QuerySingleRow ( $hDB, $sSQL, ByRef $aRow )","params":[{"label":"$hDB","documentation":"An open database, use -1 to use last opened database"},{"label":"$sSQL","documentation":"SQL statement to be executed"},{"label":"$aRow","documentation":"Passes out the amount of \'data\' rows"}]},"_SQLite_SafeMode":{"documentation":"Disable or Enable Safe mode","label":"_SQLite_SafeMode ( $bSafeModeState )","params":[{"label":"$bSafeModeState","documentation":"True or False to enable or disable SafeMode"}]},"_SQLite_SetTimeout":{"documentation":"Sets timeout for busy handler","label":"_SQLite_SetTimeout ( [$hDB = -1 [, $iTimeout = 1000]] )","params":[{"label":"$hDB","documentation":"**[optional]** An open database, use -1 to use last opened database"},{"label":"$iTimeout","documentation":"**[optional]** Timeout [msec]"}]},"_SQLite_Shutdown":{"documentation":"Unloads SQLite.dll","label":"_SQLite_Shutdown (  )","params":[]},"_SQLite_SQLiteExe":{"documentation":"Executes commands in sqlite3.exe","label":"_SQLite_SQLiteExe ( $sDatabaseFile, $sInput, ByRef $sOutput [, $sSQLiteExeFilename = \\"sqlite3.exe\\" [, $bDebug = False]] )","params":[{"label":"$sDatabaseFile","documentation":"Database filename"},{"label":"$sInput","documentation":"Commands for sqlite3.exe"},{"label":"$sOutput","documentation":"Raw output from sqlite3.exe"},{"label":"$sSQLiteExeFilename","documentation":"**[optional]** Path to sqlite3.exe"},{"label":"$bDebug","documentation":"**[optional]** Write sqlite3.exe exitcode through the callback function specified in _SQLite_Startup() (default is don\'t print)"}]},"_SQLite_Startup":{"documentation":"Loads SQLite3.dll","label":"_SQLite_Startup ( [$sDll_Filename = \\"\\" [, $bUTF8ErrorMsg = False [, $iForceLocal = 0 [, $hPrintCallback = $__g_hPrintCallback_SQLite]]]] )","params":[{"label":"$sDll_Filename","documentation":"**[optional]** DLL filename. Default is \\"sqlite3.dll\\" or \\"sqlite3_x64.dll\\" in X64 mode."},{"label":"$bUTF8ErrorMsg","documentation":"**[optional]** to force ConsoleWrite() to display UTF8 chars"},{"label":"$iForceLocal","documentation":"**[optional]** 1 = use the defined DLL file. No version checking. Automatic \\"_x64.dll\\" in X64 mode.0 = the DLL will be search in @ScriptDir, @SystemDir, @WindowsDir, and @WorkingDir."},{"label":"$hPrintCallback","documentation":"**[optional]** A variable assigned to the user defined function to display a SQLite diagnostic message. Default = __SQLite_ConsoleWrite(). See remarks."}]},"_SQLite_TotalChanges":{"documentation":"Returns number of all changes (including via triggers and foreign keys) from start of connection","label":"_SQLite_TotalChanges ( [$hDB = -1] )","params":[{"label":"$hDB","documentation":"**[optional]** An open database, default is the last opened database"}]},"_StringBetween":{"documentation":"Find strings between two string delimiters","label":"_StringBetween ( $sString, $sStart, $sEnd [, $iMode = $STR_ENDISSTART [, $bCase = False]] )","params":[{"label":"$sString","documentation":"The string to search."},{"label":"$sStart","documentation":"The beginning of the string to find. Passing an empty string starts at the beginning"},{"label":"$sEnd","documentation":"The end of the string to find. Passing an empty string searches from $sStart to end of string"},{"label":"$iMode","documentation":"**[optional]** Search mode when $sStart = $sEnd\\n$STR_ENDISSTART (0) the $sEnd string at the end of a match starts the next possible match (default)\\n$STR_ENDNOTSTART (1) a further instance of the $sStart starts the next match"},{"label":"$bCase","documentation":"**[optional]** False (default setting) = case-insensitive. True = case-sensitive."}]},"_StringExplode":{"documentation":"Splits up a string into substrings depending on the given delimiters as PHP Explode v5","label":"_StringExplode ( $sString, $sDelimiter [, $iLimit = 0] )","params":[{"label":"$sString","documentation":"String to be split"},{"label":"$sDelimiter","documentation":"Delimiter to split on (split is performed on entire string, not individual characters)"},{"label":"$iLimit","documentation":"**[optional]** Maximum elements to be returned    =0 : (default) Split on every instance of the delimiter    >0 : Split until limit, last element will contain remaining portion of the string    "}]},"_StringInsert":{"documentation":"Inserts a string within another string","label":"_StringInsert ( $sString, $sInsertString, $iPosition )","params":[{"label":"$sString","documentation":"Original string"},{"label":"$sInsertString","documentation":"String to be inserted"},{"label":"$iPosition","documentation":"Position to insert string (negatives values count from right hand side)"}]},"_StringProper":{"documentation":"Changes a string to proper case, same as the =Proper function in Excel","label":"_StringProper ( $sString )","params":[{"label":"$sString","documentation":"Input string"}]},"_StringRepeat":{"documentation":"Repeats a string a specified number of times","label":"_StringRepeat ( $sString, $iRepeatCount )","params":[{"label":"$sString","documentation":"String to repeat"},{"label":"$iRepeatCount","documentation":"Number of times to repeat the string"}]},"_StringTitleCase":{"documentation":"Changes a string to a title case string","label":"_StringTitleCase ( $sString )","params":[{"label":"$sString","documentation":"Input string"}]},"_StringToHex":{"documentation":"Convert a string to a hex string","label":"_StringToHex ( $sString )","params":[{"label":"$sString","documentation":"String to be converted."}]},"_TCPIpToName":{"documentation":"Resolves IP address to Hostname(s)","label":"_TCPIpToName ( $sIp [, $iOption = 0 [, $hDll = \\"Ws2_32.dll\\"]] )","params":[{"label":"$sIp","documentation":"Ip Adress in dotted (v4) Format"},{"label":"$iOption","documentation":"**[optional]** Default = 00 = Return String Hostname1 = Return Array (see Remarks)"},{"label":"$hDll","documentation":"**[optional]** Handle to Ws2_32.dll"}]},"_TempFile":{"documentation":"Generate a name for a temporary file. The file is guaranteed not to exist yet","label":"_TempFile ( [$sDirectoryName = @TempDir [, $sFilePrefix = \\"~\\" [, $sFileExtension = \\".tmp\\" [, $iRandomLength = 7]]]] )","params":[{"label":"$sDirectoryName","documentation":"**[optional]** Name of directory for filename, defaults to the users %TEMP% directory"},{"label":"$sFilePrefix","documentation":"**[optional]** Filename prefix, defaults to \\"~\\""},{"label":"$sFileExtension","documentation":"**[optional]** File extenstion, defaults to \\".tmp\\""},{"label":"$iRandomLength","documentation":"**[optional]** Number of characters to use to generate a unique name, defaults to 7"}]},"_TicksToTime":{"documentation":"Converts the specified tick amount to hours, minutes and seconds","label":"_TicksToTime ( $iTicks, ByRef $iHours, ByRef $iMins, ByRef $iSecs )","params":[{"label":"$iTicks","documentation":"Tick amount."},{"label":"$iHours","documentation":"Variable to store the hours."},{"label":"$iMins","documentation":"Variable to store the minutes."},{"label":"$iSecs","documentation":"Variable to store the seconds."}]},"_Timer_Diff":{"documentation":"Returns the difference in time from a previous call to _Timer_Init","label":"_Timer_Diff ( $iTimeStamp )","params":[{"label":"$iTimeStamp","documentation":"Timestamp returned from a previous call to _Timer_Init()."}]},"_Timer_GetIdleTime":{"documentation":"Returns the number of ticks since last user activity (i.e. KYBD/Mouse)","label":"_Timer_GetIdleTime (  )","params":[]},"_Timer_GetTimerID":{"documentation":"Returns the Timer ID from $wParam","label":"_Timer_GetTimerID ( $wParam )","params":[{"label":"$wParam","documentation":"Specifies the timer identifier event."}]},"_Timer_Init":{"documentation":"Returns a timestamp (in milliseconds)","label":"_Timer_Init (  )","params":[]},"_Timer_KillAllTimers":{"documentation":"Destroys all the timers","label":"_Timer_KillAllTimers ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window associated with the timers.This value must be the same as the $hWnd value passed to the _Timer_SetTimer() function that created the timer"}]},"_Timer_KillTimer":{"documentation":"Destroys the specified timer","label":"_Timer_KillTimer ( $hWnd, $iTimerID )","params":[{"label":"$hWnd","documentation":"Handle to the window associated with the specified timer.This value must be the same as the $hWnd value passed to the _Timer_SetTimer() function that created the timer"},{"label":"$iTimerID","documentation":"Specifies the timer to be destroyed"}]},"_Timer_SetTimer":{"documentation":"Creates a timer with the specified time-out value","label":"_Timer_SetTimer ( $hWnd [, $iElapse = 250 [, $sTimerFunc = \\"\\" [, $iTimerID = -1]]] )","params":[{"label":"$hWnd","documentation":"Handle to the window to be associated with the timer.This window must be owned by the calling thread"},{"label":"$iElapse","documentation":"**[optional]** Specifies the time-out value, in milliseconds"},{"label":"$sTimerFunc","documentation":"**[optional]** Function name to be notified when the time-out value elapses"},{"label":"$iTimerID","documentation":"**[optional]** Specifies a timer identifier.If $iTimerID = -1 then a new timer is createdIf $iTimerID matches an existing timer then the timer is replacedIf $iTimerID = -1 and $sTimerFunc = \\"\\" then timer will use WM_TIMER events"}]},"_TimeToTicks":{"documentation":"Converts the specified hours, minutes, and seconds to ticks","label":"_TimeToTicks ( [$iHours = @HOUR [, $iMins = @MIN [, $iSecs = @SEC]]] )","params":[{"label":"$iHours","documentation":"**[optional]** The hours."},{"label":"$iMins","documentation":"**[optional]** The minutes."},{"label":"$iSecs","documentation":"**[optional]** The seconds."}]},"_VersionCompare":{"documentation":"Compares two file versions for equality","label":"_VersionCompare ( $sVersion1, $sVersion2 )","params":[{"label":"$sVersion1","documentation":"The first version value"},{"label":"$sVersion2","documentation":"The second version value"}]},"_viClose":{"documentation":"Closes a VISA connection to an Instrument/Device","label":"_viClose ( $hSession )","params":[{"label":"$hSession","documentation":"A VISA session handle as returned by _viOpen()"}]},"_viExecCommand":{"documentation":"Send a Command/Query to an Instrument/Device through the VISA interface (GPIB / TCP)","label":"_viExecCommand ( $hSession, $sCommand [, $iTimeoutMS = -1 [, $sMode = @LF]] )","params":[{"label":"$hSession","documentation":"A VISA descriptor (STRING) OR a VISA session handle (INTEGER)This it can be a string or an integer (a handle):* STRING -&gr; A VISA DESCRIPTOR is a string which specifies the resource with which to establish a communication session.An example descriptor is \\"GPIB::20::0\\".This function supports all valid VISA descriptors, including GPIB, TCP, VXI and Serial Interface instruments (ASRL).A detailed explanation of VISA descriptors is shown in the Remarks section of this function.As a SHORTCUT you can also use a STRING containing the address number (e.g. \\"20\\") of a GPIB instrument instead of typing the full descriptor (in that case, \\"GPIB::20::0\\")* INTEGER -&gr; A VISA session handle is an integer value returned by _viOpen().It is recommended that instead you use _viOpen() and VISA session handles instead of descriptors if you plan to communicate repeteadly with an Instrument or Device, as otherwise each time that you contact the instrument you would incur the overhead of opening and closing the communication link.Once you are done using the instrument you must remember to close the link with _viClose()."},{"label":"$sCommand","documentation":"Command/Query to execute (e.g. \\"*IDN?\\" or \\"SOURCE:POWER -20 dBM\\")A query MUST contain a QUESTION MARK (?)When the command is a QUERY the function will automatically wait for the instrument\'s answer (or until the operation times out)"},{"label":"$iTimeoutMS","documentation":"**[optional]** The operation timeout in MILISECONDS.This is mostly important for QUERIES only.If it is not specified the last set timeout will be used. If it was never set before the default timeout (which depends on the VISA implementation) will be used.Timeouts can also be set separatelly with the _viSetTimeout() function.Depending on the bus type (GPIB, TCP, etc) the timeout might not be set to the exact value that you request. Instead the closest valid timeout bigger than the one that you requested will be used."},{"label":"$sMode","documentation":"**[optional]** Control the mode in which the VISA viPrintf is called when $sCommand is not a query.Default is @LF, which means \\"attach @LF mode\\".Some instruments and in particular many GPIB cards do not honor the terminator character attribute in those cases an @LF terminator needs to be added.As this is the most common case, by default the mode is set to @LF, which appends @LF to the SCPI command you can also set this mode to @CR and @CRLF if your card uses those terminators.If you do not want to use a terminator, set this parameter to an empty string (\\"\\")Also, some cards support the execution of a \\"sprintf\\" on the SCPI string prior to sending it through the VISA interface.For those who do, it is possible, by setting this parameter to \\"str\\" to \\"protect\\" the VISa interface from accidentally applying an escape sequence when a \\"/\\" is found within the VISA command string.This is normally NOT necessary and should only be set if your GPIB card or instrument require it."}]},"_viFindGpib":{"documentation":"Send a Command/Query to an Instrument/Device through the VISA interface (GPIB / TCP)","label":"_viFindGpib ( ByRef $aDescriptorList, ByRef $aIDNList [, $iShow_Search_Results = 0] )","params":[{"label":"$aDescriptorList","documentation":"RETURNS an array of the VISA resource descriptors of the instruments that were found in the GPIB bus (see the Remarks of the _viExecCommand() for more info)"},{"label":"$aIDNList","documentation":"RETURNS an array of the IDNs (i.e names) of the instruments that were found in the GPIB bus"},{"label":"$iShow_Search_Results","documentation":"**[optional]** If 1 a message box showing the results of the search will be shown.The default is 0, which means that the results are not shown"}]},"_viGpibBusReset":{"documentation":"GPIB BUS \\"reset\\": Use this function when the GPIB BUS gets stuck for some reason. You might be lucky and resolve the problem by calling this function","label":"_viGpibBusReset (  )","params":[]},"_viGTL":{"documentation":"Go To Local mode: Instruments that accept this command will exit the \\"Remote Control mode\\" and go to \\"Local mode\\". If the instrument is already in \\"Local mode\\" this is simply ignored. Normally, if an instrument does not support this command it will simply stay in the \\"Remote Control mode\\"","label":"_viGTL ( $hSession )","params":[{"label":"$hSession","documentation":"A VISA descriptor (STRING) OR a VISA session handle (INTEGER).See the Remarks of the _viExecCommand() for more info."}]},"_viInteractiveControl":{"documentation":"Interactive VISA control to test your SCPI commands","label":"_viInteractiveControl ( [$sCommand_Save_FilePath = \\"\\"] )","params":[{"label":"$sCommand_Save_FilePath","documentation":"**[optional]** The name of the file in which the SCPI commands issued during the interactive session will be saved.If no filename is passed the funcion asks the user where does he wants to save the issued commands."}]},"_viOpen":{"documentation":"Opens a VISA connection to an Instrument/Device","label":"_viOpen ( $sVisa_Address [, $sVisa_Secondary_Address = 0] )","params":[{"label":"$sVisa_Address","documentation":"A VISA resource descriptor STRING (see the NOTES of _viExecCommand() above for more info)As as shortcut you can also directly pass a GPIB address as an integer"},{"label":"$sVisa_Secondary_Address","documentation":"**[optional]** The \\"secondary GPIB address\\". Only used if the primary address is passed as an integer.Only some GPIB instruments have secondary addresses. In those cases this optional parameter can be used to specify it.This parameter is ZERO by default, which means NO SECONDARY ADDRESS."}]},"_viSetAttribute":{"documentation":"Set any VISA attribute This function, which is called by _viSetTimeout, can ALSO be used to set the other VISA specific attributes. Read the VISA documentation for more information and a list of VISA attributes and their corresponding values","label":"_viSetAttribute ( $hSession, $iAttribute, $iValue )","params":[{"label":"$hSession","documentation":"A VISA descriptor (STRING) OR a VISA session handle (INTEGER).See the Remarks of the _viExecCommand() for more info."},{"label":"$iAttribute","documentation":"The index of the attribute that must be changed.Attributes are defined in the VISA library.This AutoIt library only defines a CONSTANT for the TIMEOUT attribute ($VI_ATTR_TMO_VALUE) and for the Serial Interface attributes and values (see the remarks) but you can pass any other valid index (as an integer) if you want to."},{"label":"$iValue","documentation":"The value of the attribute. It must be an integer and the possible values depend on the attribute type and are defined in the VISA documentation."}]},"_viSetTimeout":{"documentation":"Sets the VISA timeout in MILISECONDS","label":"_viSetTimeout ( $hSession, $iTimeoutMS )","params":[{"label":"$hSession","documentation":"A VISA descriptor (STRING) OR a VISA session handle (INTEGER).See the Remarks of the _viExecCommand() for more info."},{"label":"$iTimeoutMS","documentation":"The timeout IN MILISECONDS for VISA operations (mainly for GPIB queries)If you set it to 0 the tiemouts are DISABLED.If you set it to \\"INF\\" the VISA operations will NEVER timeout.Be careful with this as it could easly hung your program ifv your instrument does not respond to one of your queries.Depending on the bus type (GPIB, TCP, etc) the timeout might not be set to the exact value that you request. Instead the closest valid timeout bigger than the one that you requested will be used."}]},"_WeekNumberISO":{"documentation":"Calculate the weeknumber of a given date","label":"_WeekNumberISO ( [$iYear = @YEAR [, $iMonth = @MON [, $iDay = @MDAY]]] )","params":[{"label":"$iYear","documentation":"**[optional]** Year value (default = current year)"},{"label":"$iMonth","documentation":"**[optional]** Month value (default = current month)"},{"label":"$iDay","documentation":"**[optional]** Day value (default = current day)"}]},"_WinAPI_AbortPath":{"documentation":"Closes and discards any paths in the specified device context","label":"_WinAPI_AbortPath ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context from which a path will be discarded."}]},"_WinAPI_ActivateKeyboardLayout":{"documentation":"Sets the input locale identifier for the calling thread or the current process","label":"_WinAPI_ActivateKeyboardLayout ( $hLocale [, $iFlag = 0] )","params":[{"label":"$hLocale","documentation":"The input locale identifier to be activated.This parameter must be either the handle to a keyboard layout or one of the following values:    $HKL_NEXT    $HKL_PREV"},{"label":"$iFlag","documentation":"**[optional]** The flag that specifies how the input locale identifier is to be activated.This parameter can be one of the following values:    $KLF_REORDER    $KLF_RESET    $KLF_SETFORPROCESS    $KLF_SHIFTLOCK"}]},"_WinAPI_AddClipboardFormatListener":{"documentation":"Places the given window in the system-maintained clipboard format listener list","label":"_WinAPI_AddClipboardFormatListener ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to be placed."}]},"_WinAPI_AddFontMemResourceEx":{"documentation":"Adds the font resource from a memory image to the system","label":"_WinAPI_AddFontMemResourceEx ( $pData, $iSize )","params":[{"label":"$pData","documentation":"The pointer to a font resource."},{"label":"$iSize","documentation":"The number of bytes in the font resource."}]},"_WinAPI_AddFontResourceEx":{"documentation":"Adds the font resource from the specified file to the system font table","label":"_WinAPI_AddFontResourceEx ( $sFont [, $iFlag = 0 [, $bNotify = False]] )","params":[{"label":"$sFont","documentation":"String that contains a valid font file name. This parameter can specify any of the following files:\\n.fon - Font resource file.\\n.fnt - Raw bitmap font file.\\n.ttf - Raw TrueType file.\\n.ttc - East Asian Windows: TrueType font collection.\\n.fot - TrueType resource file.\\n.otf - PostScript OpenType font.\\n.mmm - Multiple master Type1 font resource file. It must be used with .pfm and .pfb files.\\n.pfb - Type 1 font bits file. It is used with a .pfm file.\\n.pfm - Type 1 font metrics file. It is used with a .pfb file.\\n\\nTo add a font whose information comes from several resource files, they must be separated by a \\"|\\".\\nFor example, abcxxxxx.pfm|abcxxxxx.pfb."},{"label":"$iFlag","documentation":"**[optional]** The characteristics of the font to be added to the system. This parameter can be one of the following values.\\n$FR_PRIVATE\\n$FR_NOT_ENUM"},{"label":"$bNotify","documentation":"**[optional]** Specifies whether sends a WM_FONTCHANGE message, valid values:\\n\\tTrue - Send the WM_FONTCHANGE message to all top-level windows after changing the pool of font resources.\\n\\tFalse - Don\'t send (Default)."}]},"_WinAPI_AddIconOverlay":{"documentation":"Creates an icon by merging the source icon and overlay mask","label":"_WinAPI_AddIconOverlay ( $hIcon, $hOverlay )","params":[{"label":"$hIcon","documentation":"Handle to the source icon."},{"label":"$hOverlay","documentation":"Handle to the icon to use as an overlay mask."}]},"_WinAPI_AddIconTransparency":{"documentation":"Adds a transparency to the specified 32 bits-per-pixel icon","label":"_WinAPI_AddIconTransparency ( $hIcon [, $iPercent = 50 [, $bDelete = False]] )","params":[{"label":"$hIcon","documentation":"Handle to the icon."},{"label":"$iPercent","documentation":"**[optional]** A value (in percent) that specifies how much to decrease the values of the alpha channel for the specified icon. If this parameter is 0, the function returns a fully transparent icon. Default is 80."},{"label":"$bDelete","documentation":"**[optional]** Specifies whether to delete the icon after the function is successful, valid values:    True - Icon will be deleted if the function succeeds.    False - Do not delete, you must release the icon when you are finished using it (Default)."}]},"_WinAPI_AddMRUString":{"documentation":"Adds a string to the top of the most recently used (MRU) list","label":"_WinAPI_AddMRUString ( $hMRU, $sStr )","params":[{"label":"$hMRU","documentation":"Handle of the MRU list."},{"label":"$sStr","documentation":"The string be added."}]},"_WinAPI_AdjustBitmap":{"documentation":"Creates a new device-depended bitmap (DDB) from the source bitmap with new dimensions and color adjustment","label":"_WinAPI_AdjustBitmap ( $hBitmap, $iWidth, $iHeight [, $iMode = 3 [, $tAdjustment = 0]] )","params":[{"label":"$hBitmap","documentation":"A handle to the source bitmap."},{"label":"$iWidth","documentation":"The width of the new bitmap, in pixels.If this parameter is (-1), the width will be the same as in the source bitmap."},{"label":"$iHeight","documentation":"The height of the new bitmap, in pixels.If this parameter is (-1), the height will be the same as in the source bitmap."},{"label":"$iMode","documentation":"**[optional]** The stretching mode.This parameter can be one of the following values:    $BLACKONWHITE    $COLORONCOLOR (Default)    $HALFTONE    $WHITEONBLACK    $STRETCH_ANDSCANS    $STRETCH_DELETESCANS    $STRETCH_HALFTONE    $STRETCH_ORSCANS"},{"label":"$tAdjustment","documentation":"**[optional]** $tagCOLORADJUSTMENT structure containing the color adjustment values.This color adjustment is used only if $HALFTONE ($STRETCH_HALFTONE) stretching mode are set."}]},"_WinAPI_AdjustTokenPrivileges":{"documentation":"Enables or disables privileges in the specified access token","label":"_WinAPI_AdjustTokenPrivileges ( $hToken, $aPrivileges, $iAttributes, ByRef $aAdjust )","params":[{"label":"$hToken","documentation":"Handle to the access token that contains the privileges to be modified.The handle must have $TOKEN_ADJUST_PRIVILEGES and $TOKEN_QUERY accesses to the token."},{"label":"$aPrivileges","documentation":"The variable that specifies a privileges.If this parameter is (-1), the function disables of the token\'s privileges and ignores the $iAttributes parameter.$aPrivileges can be one of the following types.The privilege constant ($SE_*).1D array of $SE_* constants.2D array of $SE_* constants and their attributes (see below).[0][0] - Privilege[0][1] - Attributes[n][0] - Privilege[n][1] - Attributes"},{"label":"$iAttributes","documentation":"The privilege attributes. If $aPrivileges parameter is 1D array, $iAttributes applied to the entire array.If $aPrivileges parameter is (-1) or 2D array, the function ignores this parameter and will use the attributes that specified in this array.This parameter can be 0 (disables privilege) or any combination of the following values:    $SE_PRIVILEGE_ENABLED    $SE_PRIVILEGE_ENABLED_BY_DEFAULT    $SE_PRIVILEGE_REMOVED    $SE_PRIVILEGE_USED_FOR_ACCESS"},{"label":"$aAdjust","documentation":"2D array of the previous state of any privileges that the function modifies. That is, if a privilege has been modified by this function, the privilege and its previous state are contained in this array."}]},"_WinAPI_AdjustWindowRectEx":{"documentation":"Calculates the required size of the window rectangle, based on the desired size of the client rectangle","label":"_WinAPI_AdjustWindowRectEx ( ByRef $tRECT, $iStyle [, $iExStyle = 0 [, $bMenu = False]] )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that contains the coordinates of the desired client area. This structure must be created before function call."},{"label":"$iStyle","documentation":"The window style of the window whose required size is to be calculated. Note that you cannot specify the $WS_OVERLAPPED style."},{"label":"$iExStyle","documentation":"**[optional]** The extended window style of the window whose required size is to be calculated."},{"label":"$bMenu","documentation":"**[optional]** Specifies whether the window has a menu, valid values:True - The window has a menu.False - The window does not has a menu (Default)."}]},"_WinAPI_AlphaBlend":{"documentation":"Displays bitmaps that have transparent or semitransparent pixels","label":"_WinAPI_AlphaBlend ( $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iAlpha [, $bAlpha = False] )","params":[{"label":"$hDestDC","documentation":"Handle to the destination device context."},{"label":"$iXDest","documentation":"The x-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iYDest","documentation":"The y-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iWidthDest","documentation":"The width, in logical units, of the destination rectangle."},{"label":"$iHeightDest","documentation":"The height, in logical units, of the destination rectangle."},{"label":"$hSrcDC","documentation":"Handle to the source device context."},{"label":"$iXSrc","documentation":"The x-coordinate, in logical units, of the upper-left corner of the source rectangle."},{"label":"$iYSrc","documentation":"The y-coordinate, in logical units, of the upper-left corner of the source rectangle."},{"label":"$iWidthSrc","documentation":"The width, in logical units, of the source rectangle."},{"label":"$iHeightSrc","documentation":"The height, in logical units, of the source rectangle."},{"label":"$iAlpha","documentation":"The alpha transparency value to be used on the entire source bitmap.This value is combined with any per-pixel alpha values in the source bitmap.If you set $iAlpha to 0, it is assumed that your image is transparent.Set $iAlpha value to 255 (opaque) when you only want to use per-pixel alpha values."},{"label":"$bAlpha","documentation":"**[optional]** Specifies whether uses an alpha channel from the source bitmap, valid values:    True    - Use the alpha channel (that is, per-pixel alpha).        Note that the APIs use premultiplied alpha, which means that the red, green and blue channel values in the bitmap must be premultiplied with the alpha channel value.        For example, if the alpha channel value is x, the red, green and blue channels must be multiplied by x and divided by 255 prior to the call.    False - Do not use the alpha channel (Default)."}]},"_WinAPI_AngleArc":{"documentation":"Draws a line segment and an arc","label":"_WinAPI_AngleArc ( $hDC, $iX, $iY, $iRadius, $nStartAngle, $nSweepAngle )","params":[{"label":"$hDC","documentation":"Handle to a device context."},{"label":"$iX","documentation":"The x-coordinate, in logical units, of the center of the circle."},{"label":"$iY","documentation":"The y-coordinate, in logical units, of the center of the circle."},{"label":"$iRadius","documentation":"The radius, in logical units, of the circle."},{"label":"$nStartAngle","documentation":"The start angle, in degrees, relative to the x-axis."},{"label":"$nSweepAngle","documentation":"The sweep angle, in degrees, relative to the starting angle."}]},"_WinAPI_AnimateWindow":{"documentation":"Enables you to produce special effects when showing or hiding windows","label":"_WinAPI_AnimateWindow ( $hWnd, $iFlags [, $iDuration = 1000] )","params":[{"label":"$hWnd","documentation":"Handle to the window to animate."},{"label":"$iFlags","documentation":"The flags that specify the type of animation.This parameter can be one or more of the following values. Note that, by default, these flags take effect when showing a window.To take effect when hiding a window, use AW_HIDE and a logical OR operator with the appropriate flags:    $AW_ACTIVATE    $AW_BLEND    $AW_CENTER    $AW_HIDE    $AW_HOR_NEGATIVE    $AW_HOR_POSITIVE    $AW_SLIDE    $AW_VER_NEGATIVE    $AW_VER_POSITIVE"},{"label":"$iDuration","documentation":"**[optional]** Specifies how long it takes to play the animation, in milliseconds. Default is 1000."}]},"_WinAPI_Arc":{"documentation":"Draws an elliptical arc","label":"_WinAPI_Arc ( $hDC, $tRECT, $iXStartArc, $iYStartArc, $iXEndArc, $iYEndArc )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the bounding rectangle."},{"label":"$iXStartArc","documentation":"The x-coordinate, in logical units, of the ending point of the radial line defining the starting point of the arc."},{"label":"$iYStartArc","documentation":"The y-coordinate, in logical units, of the ending point of the radial line defining the starting point of the arc."},{"label":"$iXEndArc","documentation":"The x-coordinate, in logical units, of the ending point of the radial line defining the ending point of the arc."},{"label":"$iYEndArc","documentation":"The y-coordinate, in logical units, of the ending point of the radial line defining the ending point of the arc."}]},"_WinAPI_ArcTo":{"documentation":"Draws an elliptical arc","label":"_WinAPI_ArcTo ( $hDC, $tRECT, $iXRadial1, $iYRadial1, $iXRadial2, $iYRadial2 )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the bounding rectangle."},{"label":"$iXRadial1","documentation":"The x-coordinate, in logical units, of the endpoint of the radial defining the starting point of the arc."},{"label":"$iYRadial1","documentation":"The y-coordinate, in logical units, of the endpoint of the radial defining the starting point of the arc."},{"label":"$iXRadial2","documentation":"The x-coordinate, in logical units, of the endpoint of the radial defining the ending point of the arc."},{"label":"$iYRadial2","documentation":"The y-coordinate, in logical units, of the endpoint of the radial defining the ending point of the arc."}]},"_WinAPI_ArrayToStruct":{"documentation":"Converts an array of strings to the structure","label":"_WinAPI_ArrayToStruct ( Const ByRef $aData [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$aData","documentation":"The array to convert."},{"label":"$iStart","documentation":"**[optional]** The index of array to start converting at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop converting at."}]},"_WinAPI_AssignProcessToJobObject":{"documentation":"Assigns a process to an existing job object","label":"_WinAPI_AssignProcessToJobObject ( $hJob, $hProcess )","params":[{"label":"$hJob","documentation":"Handle to the job object to which the process will be associated. The handle must have the$JOB_OBJECT_ASSIGN_PROCESS access right."},{"label":"$hProcess","documentation":"Handle to the process to associate with the job object. The process must not already be assigned to a job."}]},"_WinAPI_AssocGetPerceivedType":{"documentation":"Retrieves a file\'s perceived type based on its extension","label":"_WinAPI_AssocGetPerceivedType ( $sExt )","params":[{"label":"$sExt","documentation":"The file\'s extension. This should include the leading period, for example \\".txt\\"."}]},"_WinAPI_AssocQueryString":{"documentation":"Searches for and retrieves a file or protocol association-related string from the registry","label":"_WinAPI_AssocQueryString ( $sAssoc, $iType [, $iFlags = 0 [, $sExtra = \'\']] )","params":[{"label":"$sAssoc","documentation":"The string that is used to determine the root key. The following four types of strings can be used.The file name extension, such as \\".txt\\".The class identifier (CLSID) GUID in the standard \\"{GUID}\\" format.The application\'s ProgID, such as Word.Document.8.The name of an application\'s .exe file. The $ASSOCF_OPEN_BYEXENAME flag must be set."},{"label":"$iType","documentation":"The value that specifies the type of string that is to be returned. This parameter can be one of the following values:    $ASSOCSTR_COMMAND    $ASSOCSTR_EXECUTABLE    $ASSOCSTR_FRIENDLYDOCNAME    $ASSOCSTR_FRIENDLYAPPNAME    $ASSOCSTR_NOOPEN    $ASSOCSTR_SHELLNEWVALUE    $ASSOCSTR_DDECOMMAND    $ASSOCSTR_DDEIFEXEC    $ASSOCSTR_DDEAPPLICATION    $ASSOCSTR_DDETOPIC    $ASSOCSTR_INFOTIP    $ASSOCSTR_QUICKTIP    $ASSOCSTR_TILEINFO    $ASSOCSTR_CONTENTTYPE    $ASSOCSTR_DEFAULTICON    $ASSOCSTR_SHELLEXTENSION"},{"label":"$iFlags","documentation":"**[optional]** The flags that can be used to control the search. It can be any combination of the following values, except that only one $ASSOCF_INIT_* value can be included.    $ASSOCF_INIT_NOREMAPCLSID    $ASSOCF_INIT_BYEXENAME    $ASSOCF_OPEN_BYEXENAME    $ASSOCF_INIT_DEFAULTTOSTAR    $ASSOCF_INIT_DEFAULTTOFOLDER    $ASSOCF_NOUSERSETTINGS    $ASSOCF_NOTRUNCATE    $ASSOCF_VERIFY    $ASSOCF_REMAPRUNDLL    $ASSOCF_NOFIXUPS    $ASSOCF_IGNOREBASECLASS    $ASSOCF_INIT_IGNOREUNKNOWN"},{"label":"$sExtra","documentation":"**[optional]** The string with additional information about the location of the string.It is typically set to a Shell verb such as open."}]},"_WinAPI_AttachConsole":{"documentation":"Attaches the calling process to the console of the specified process","label":"_WinAPI_AttachConsole ( [$iPID = -1] )","params":[{"label":"$iPID","documentation":"**[optional]** Identifier of the process. Set to -1 to attach to the current process."}]},"_WinAPI_AttachThreadInput":{"documentation":"Attaches the input processing mechanism of one thread to that of another thread","label":"_WinAPI_AttachThreadInput ( $iAttach, $iAttachTo, $bAttach )","params":[{"label":"$iAttach","documentation":"Identifier of the thread to be attached to another thread"},{"label":"$iAttachTo","documentation":"Identifier of the thread to be attached to"},{"label":"$bAttach","documentation":"Attachment mode:    True - The threads are attached    False - The threads are detached"}]},"_WinAPI_BackupRead":{"documentation":"Backs up a file or directory, including the security information","label":"_WinAPI_BackupRead ( $hFile, $pBuffer, $iLength, ByRef $iBytes, ByRef $pContext [, $bSecurity = False] )","params":[{"label":"$hFile","documentation":"Handle to the file or directory to be backed up.To obtain the handle, call the _WinAPI_CreateFileEx() function.The SACLs are not read unless the file handle was created with the $ACCESS_SYSTEM_SECURITY access right."},{"label":"$pBuffer","documentation":"A pointer to a buffer that receives the data."},{"label":"$iLength","documentation":"The size of the buffer, in bytes.The buffer size must be greater than the size of the $tagWIN32_STREAM_ID structure.(see also MSDN for more information)"},{"label":"$iBytes","documentation":"The number of bytes read."},{"label":"$pContext","documentation":"A pointer to an internal data structure used by this function to maintain context information during a backup operation.You must set this variable to 0 before the first call to _WinAPI_BackupRead() for the specified file or directory.The function allocates memory for the data structure, and then sets the variable to point to that structure.You must not change this variable or the variable that it points to between calls to _WinAPI_BackupRead()."},{"label":"$bSecurity","documentation":"**[optional]** Specifies whether the function will backup the access-control list (ACL) data, valid values:    True - The ACL data will be backed up.    False - The ACL data will be omitted (Default)."}]},"_WinAPI_BackupReadAbort":{"documentation":"Finishes the use of _WinAPI_BackupRead() on the handle","label":"_WinAPI_BackupReadAbort ( ByRef $pContext )","params":[{"label":"$pContext","documentation":"A pointer to an internal data structure used by _WinAPI_BackupRead() function to maintain context information during a backup operation."}]},"_WinAPI_BackupSeek":{"documentation":"Seeks forward in a data stream initially accessed by using the _WinAPI_BackupRead() or _WinAPI_BackupWrite() function","label":"_WinAPI_BackupSeek ( $hFile, $iSeek, ByRef $iBytes, ByRef $pContext )","params":[{"label":"$hFile","documentation":"Handle to the file or directory."},{"label":"$iSeek","documentation":"The number of bytes to seek."},{"label":"$iBytes","documentation":"The number of bytes the function actually seeks."},{"label":"$pContext","documentation":"A pointer to an internal data structure. This structure must be the same structure that was initialized by the _WinAPI_BackupRead().An application must not touch the contents of this structure."}]},"_WinAPI_BackupWrite":{"documentation":"Restore a file or directory that was backed up using _WinAPI_BackupRead()","label":"_WinAPI_BackupWrite ( $hFile, $pBuffer, $iLength, ByRef $iBytes, ByRef $pContext [, $bSecurity = False] )","params":[{"label":"$hFile","documentation":"Handle to the file or directory to be restored. To obtain the handle, call the _WinAPI_CreateFileEx() function.The SACLs are not restored unless the file handle was created with the $ACCESS_SYSTEM_SECURITY access right.To ensure that the integrity ACEs are restored correctly, the file handle must also have been created with the $WRITE_OWNER access right."},{"label":"$pBuffer","documentation":"A pointer to a buffer that the function writes data from."},{"label":"$iLength","documentation":"The size of the buffer, in bytes. The buffer size must be greater than the size of the $tagWIN32_STREAM_ID structure.(see MSDN for more information)"},{"label":"$iBytes","documentation":"The number of bytes written."},{"label":"$pContext","documentation":"A pointer to an internal data structure used by this function to maintain context information during a restore operation.You must set this variable to 0 before the first call to _WinAPI_BackupWrite() for the specified file or directory.The function allocates memory for the data structure, and then sets the variable to point to that structure.You must not change this variable or the variable that it points to between calls to _WinAPI_BackupWrite()."},{"label":"$bSecurity","documentation":"**[optional]** Specifies whether the function will restore the access-control list (ACL) data, valid values:    True - The ACL data will be restored.        Furthermore, you need to specify $WRITE_OWNER and $WRITE_DAC access when opening the file or directory handle.        If the handle does not have those access rights, the operating system denies access to the ACL data, and ACL data restoration will not occur.    False - The ACL data will be omitted (Default)."}]},"_WinAPI_BackupWriteAbort":{"documentation":"Finishes the use of _WinAPI_BackupWrite() on the handle","label":"_WinAPI_BackupWriteAbort ( ByRef $pContext )","params":[{"label":"$pContext","documentation":"A pointer to an internal data structure used by _WinAPI_BackupWrite() function to maintain context information during a restore operation."}]},"_WinAPI_Beep":{"documentation":"Generates simple tones on the speaker","label":"_WinAPI_Beep ( [$iFreq = 500 [, $iDuration = 1000]] )","params":[{"label":"$iFreq","documentation":"**[optional]** The frequency of the sound, in hertz. This parameter must be in the range 37 through 32,767."},{"label":"$iDuration","documentation":"**[optional]** The duration of the sound, in milliseconds. Windows Me/98/95: This parameter is ignored."}]},"_WinAPI_BeginDeferWindowPos":{"documentation":"Allocates memory for a multiple-window-position structure","label":"_WinAPI_BeginDeferWindowPos ( [$iAmount = 1] )","params":[{"label":"$iAmount","documentation":"**[optional]** The initial number of windows for which to store position information. Default is 1."}]},"_WinAPI_BeginPaint":{"documentation":"Prepares the specified window for painting","label":"_WinAPI_BeginPaint ( $hWnd, ByRef $tPAINTSTRUCT )","params":[{"label":"$hWnd","documentation":"Handle to the window to be repainted."},{"label":"$tPAINTSTRUCT","documentation":"$tagPAINTSTRUCT structure that will receive painting information.When the function call, this parameter should be any valid variable, the function creates this structure itself."}]},"_WinAPI_BeginPath":{"documentation":"Opens a path bracket in the specified device context","label":"_WinAPI_BeginPath ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_BeginUpdateResource":{"documentation":"Retrieves a handle that can be used to add, delete, or replace resources in a binary module","label":"_WinAPI_BeginUpdateResource ( $sFilePath [, $bDelete = False] )","params":[{"label":"$sFilePath","documentation":"The binary file in which to update resources.An application must be able to obtain write-access to this file; the file referenced by $sFilePath cannot be currently executing."},{"label":"$bDelete","documentation":"**[optional]** Specifies whether to delete existing resources, valid values:True- The resources are deleted and the updated file includes only resources added with the _WinAPI_UpdateResource().False - The updated file includes existing resources (Default)."}]},"_WinAPI_BitBlt":{"documentation":"Performs a bit-block transfer of color data","label":"_WinAPI_BitBlt ( $hDestDC, $iXDest, $iYDest, $iWidth, $iHeight, $hSrcDC, $iXSrc, $iYSrc, $iROP )","params":[{"label":"$hDestDC","documentation":"Handle to the destination device context"},{"label":"$iXDest","documentation":"X value of the upper-left corner of the destination rectangle"},{"label":"$iYDest","documentation":"Y value of the upper-left corner of the destination rectangle"},{"label":"$iWidth","documentation":"Width of the source and destination rectangles"},{"label":"$iHeight","documentation":"Height of the source and destination rectangles"},{"label":"$hSrcDC","documentation":"Handle to the source device context"},{"label":"$iXSrc","documentation":"X value of the upper-left corner of the source rectangle"},{"label":"$iYSrc","documentation":"Y value of the upper-left corner of the source rectangle"},{"label":"$iROP","documentation":"Specifies a raster operation code. These codes define how the color data for the source rectangle is to be combined with the color data for the destination rectangle to achieve the final color:$BLACKNESS - Fills the destination rectangle using the color associated with palette index 0$CAPTUREBLT - Includes any window that are layered on top of your window in the resulting image$DSTINVERT - Inverts the destination rectangle$MERGECOPY - Merges the color of the source rectangle with the brush currently selected in hDest, by using the AND operator.$MERGEPAINT - Merges the color of the inverted source rectangle with the colors of the destination rectangle by using the OR operator.$NOMIRRORBITMAP - Prevents the bitmap from being mirrored$NOTSRCCOPY - Copies the inverted source rectangle to the destination$NOTSRCERASE - Combines the colors of the source and destination rectangles by using the OR operator and then inverts the resultant color.$PATCOPY - Copies the brush selected in hdcDest, into the destination bitmap$PATINVERT - Combines the colors of the brush currently selected in hDest, with the colors of the destination rectangle by using the XOR operator.$PATPAINT - Combines the colors of the brush currently selected in hDest, with the colors of the inverted source rectangle by using the OR operator. The result of this operation is combined with the color of the destination rectangle by using the OR operator.$SRCAND - Combines the colors of the source and destination rectangles by using the AND operator$SRCCOPY - Copies the source rectangle directly to the destination rectangle$SRCERASE - Combines the inverted color of the destination rectangle with the colors of the source rectangle by using the AND operator.$SRCINVERT - Combines the colors of the source and destination rectangles by using the XOR operator$SRCPAINT - Combines the colors of the source and destination rectangles by using the OR operator$WHITENESS - Fills the destination rectangle using the color associated with index 1 in the physical palette."}]},"_WinAPI_BringWindowToTop":{"documentation":"Brings the specified window to the top of the Z order","label":"_WinAPI_BringWindowToTop ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to bring to the top of the Z order."}]},"_WinAPI_BroadcastSystemMessage":{"documentation":"Sends a message to the specified recipients","label":"_WinAPI_BroadcastSystemMessage ( $iMsg [, $wParam = 0 [, $lParam = 0 [, $iFlags = 0 [, $iRecipients = 0]]]] )","params":[{"label":"$iMsg","documentation":"The message to be sent."},{"label":"$wParam","documentation":"**[optional]** The message-specific information."},{"label":"$lParam","documentation":"**[optional]** The message-specific information."},{"label":"$iFlags","documentation":"**[optional]** The broadcast option. This parameter can be one or more of the following values:    $BSF_ALLOWSFW    $BSF_FLUSHDISK    $BSF_FORCEIFHUNG    $BSF_IGNORECURRENTTASK    $BSF_NOHANG    $BSF_NOTIMEOUTIFNOTHUNG    $BSF_POSTMESSAGE    $BSF_QUERY    $BSF_SENDNOTIFYMESSAGE"},{"label":"$iRecipients","documentation":"**[optional]** The recipients of the message. This parameter can be one or more of the following values:    $BSM_ALLCOMPONENTS (Default)    $BSM_ALLDESKTOPS    $BSM_APPLICATIONS    $BSM_INSTALLABLEDRIVERS    $BSM_NETDRIVER    $BSM_VXDS"}]},"_WinAPI_BrowseForFolderDlg":{"documentation":"Displays a dialog box that enables the user to select a Shell folder","label":"_WinAPI_BrowseForFolderDlg ( [$sRoot = \'\' [, $sText = \'\' [, $iFlags = 0 [, $pBrowseProc = 0 [, $lParam = 0 [, $hParent = 0]]]]]] )","params":[{"label":"$sRoot","documentation":"**[optional]** The root folder from which to start browsing.Only the specified folder and its subfolders in the namespace hierarchy appear in the dialog box.If this parameter is 0, the namespace root (the Desktop folder) is used."},{"label":"$sText","documentation":"**[optional]** The string that is displayed above the tree view control in the dialog box."},{"label":"$iFlags","documentation":"**[optional]** Flags that specify the options for the dialog box. This parameter can a combination of the following values:    $BIF_BROWSEFORCOMPUTER    $BIF_BROWSEFORPRINTER    $BIF_BROWSEINCLUDEFILES    $BIF_BROWSEINCLUDEURLS    $BIF_DONTGOBELOWDOMAIN    $BIF_EDITBOX    $BIF_NEWDIALOGSTYLE    $BIF_NONEWFOLDERBUTTON    $BIF_NOTRANSLATETARGETS    $BIF_RETURNFSANCESTORS    $BIF_RETURNONLYFSDIRS    $BIF_SHAREABLE    $BIF_STATUSTEXT    $BIF_USENEWUI    $BIF_UAHINT    $BIF_VALIDATEWindows 7 or later    $BIF_BROWSEFILEJUNCTIONS"},{"label":"$pBrowseProc","documentation":"**[optional]** Pointer to a callback function that the dialog box calls when an event occurs.This function will receive one of the following event messages:    $BFFM_INITIALIZED    $BFFM_IUNKNOWN    $BFFM_SELCHANGED    $BFFM_VALIDATEFAILED(See MSDN for more information)"},{"label":"$lParam","documentation":"**[optional]** The value that the dialog box passes to the callback function."},{"label":"$hParent","documentation":"**[optional]** Handle to the parent window for the dialog box."}]},"_WinAPI_CallNextHookEx":{"documentation":"Passes the hook information to the next hook procedure in the current hook chain","label":"_WinAPI_CallNextHookEx ( $hHook, $iCode, $wParam, $lParam )","params":[{"label":"$hHook","documentation":"Parameter ignored."},{"label":"$iCode","documentation":"Specifies the hook code passed to the current hook procedure. The next hook procedure uses this code to determine how to process the hook information"},{"label":"$wParam","documentation":"Specifies the wParam value passed to the current hook procedure.The meaning of this parameter depends on the type of hook associated with the current hook chain"},{"label":"$lParam","documentation":"Specifies the lParam value passed to the current hook procedure.The meaning of this parameter depends on the type of hook associated with the current hook chain"}]},"_WinAPI_CallWindowProc":{"documentation":"Passes the hook information to the next hook procedure in the current hook chain","label":"_WinAPI_CallWindowProc ( $pPrevWndFunc, $hWnd, $iMsg, $wParam, $lParam )","params":[{"label":"$pPrevWndFunc","documentation":"Pointer to the previous window procedure.If this value is obtained by calling the _WinAPI_GetWindowLong() function with the $iIndex parameter set to $GWL_WNDPROC or $DWL_DLGPROC, it is actually either the address of a window or dialog box procedure, or a special internal value meaningful only to _WinAPI_CallWindowProc()."},{"label":"$hWnd","documentation":"Handle to the window procedure to receive the message"},{"label":"$iMsg","documentation":"Specifies the message"},{"label":"$wParam","documentation":"Specifies additional message-specific information. The contents of this parameter depend on the value of the Msg parameter"},{"label":"$lParam","documentation":"Specifies additional message-specific information. The contents of this parameter depend on the value of the Msg parameter"}]},"_WinAPI_CallWindowProcW":{"documentation":"Passes message information to the specified window procedure","label":"_WinAPI_CallWindowProcW ( $pPrevWndProc, $hWnd, $iMsg, $wParam, $lParam )","params":[{"label":"$pPrevWndProc","documentation":"The address of a previous window procedure, or a special internal value meaningful only to _WinAPI_CallWindowProcW() function."},{"label":"$hWnd","documentation":"A handle to the window procedure that received the message."},{"label":"$iMsg","documentation":"The message."},{"label":"$wParam","documentation":"Additional message-specific information. The content of this parameter depends on the message."},{"label":"$lParam","documentation":"Additional message-specific information. The content of this parameter depends on the message."}]},"_WinAPI_CascadeWindows":{"documentation":"Cascades the specified child windows of the specified parent window","label":"_WinAPI_CascadeWindows ( $aWnds [, $tRECT = 0 [, $hParent = 0 [, $iFlags = 0 [, $iStart = 0 [, $iEnd = -1]]]]] )","params":[{"label":"$aWnds","documentation":"The array of handles to the child windows to arrange.If a specified child window is a top-level window with the style $WS_EX_TOPMOST or $WS_EX_TOOLWINDOW, the child window is not arranged.If this parameter is 0, all child windows of the specified parent window (or of the desktop window) are arranged."},{"label":"$tRECT","documentation":"**[optional]** $tagRECT structure that specifies the rectangular area, in client coordinates, within which the windows are arranged.This parameter can be 0 (Default), in which case the client area of the parent window is used."},{"label":"$hParent","documentation":"**[optional]** Handle to the parent window. If this parameter is 0 (Default), the desktop window is assumed."},{"label":"$iFlags","documentation":"**[optional]** A cascade flag. This parameter can be one or more of the following values:    $MDITILE_SKIPDISABLED    $MDITILE_ZORDER"},{"label":"$iStart","documentation":"**[optional]** The index of array to start arranging at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop arranging at."}]},"_WinAPI_ChangeWindowMessageFilterEx":{"documentation":"Modifies the User Interface Privilege Isolation (UIPI) message filter for a specified window","label":"_WinAPI_ChangeWindowMessageFilterEx ( $hWnd, $iMsg, $iAction )","params":[{"label":"$hWnd","documentation":"Handle to the window whose UIPI message filter is to be modified.If this parameter is 0, the UIPI message filter will be modified in a process-wide manner.Moreover, under Windows Vista this parameter is not used and should be set to 0."},{"label":"$iMsg","documentation":"The message that the message filter allows through or blocks."},{"label":"$iAction","documentation":"The action to be performed. This parameter can be one of the following values:    $MSGFLT_ALLOW    $MSGFLT_DISALLOWWindows 7 or later    $MSGFLT_RESET"}]},"_WinAPI_CharToOem":{"documentation":"Converts a string into the OEM-defined character set","label":"_WinAPI_CharToOem ( $sStr )","params":[{"label":"$sStr","documentation":"The string that must be converted."}]},"_WinAPI_ChildWindowFromPointEx":{"documentation":"Determines which, if any, of the child windows belonging to the specified parent window contains the specified point","label":"_WinAPI_ChildWindowFromPointEx ( $hWnd, $tPOINT [, $iFlags = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the parent window."},{"label":"$tPOINT","documentation":"$tagPOINT structure that defines the client coordinates (relative to hwndParent) of the point to be checked."},{"label":"$iFlags","documentation":"**[optional]** The flags that specify which child windows to skip. This parameter can be one or more of the following values:    $CWP_ALL (Default)    $CWP_SKIPINVISIBLE    $CWP_SKIPDISABLED    $CWP_SKIPTRANSPARENT"}]},"_WinAPI_ClientToScreen":{"documentation":"Converts the client coordinates of a specified point to screen coordinates","label":"_WinAPI_ClientToScreen ( $hWnd, ByRef $tPoint )","params":[{"label":"$hWnd","documentation":"Identifies the window that will be used for the conversion"},{"label":"$tPoint","documentation":"$tagPOINT structure that contains the client coordinates to be converted"}]},"_WinAPI_ClipCursor":{"documentation":"Confines the cursor to a rectangular area on the screen","label":"_WinAPI_ClipCursor ( $tRECT )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that contains the screen coordinates of the confining rectangle.If this parameter is 0, the cursor is free to move anywhere on the screen."}]},"_WinAPI_CloseDesktop":{"documentation":"Closes an open handle to a desktop object","label":"_WinAPI_CloseDesktop ( $hDesktop )","params":[{"label":"$hDesktop","documentation":"Handle to the desktop to be closed."}]},"_WinAPI_CloseEnhMetaFile":{"documentation":"Closes an enhanced-metafile device context and returns a handle that identifies an enhanced-format metafile","label":"_WinAPI_CloseEnhMetaFile ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to an enhanced-metafile device context."}]},"_WinAPI_CloseFigure":{"documentation":"Closes an open figure in a path","label":"_WinAPI_CloseFigure ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context in which the figure will be closed."}]},"_WinAPI_CloseHandle":{"documentation":"Closes an open object handle","label":"_WinAPI_CloseHandle ( $hObject )","params":[{"label":"$hObject","documentation":"Handle of object to close"}]},"_WinAPI_CloseWindow":{"documentation":"Minimizes (but does not destroy) the specified window","label":"_WinAPI_CloseWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to be minimized."}]},"_WinAPI_CloseWindowStation":{"documentation":"Closes an open window station handle","label":"_WinAPI_CloseWindowStation ( $hStation )","params":[{"label":"$hStation","documentation":"Handle to the window station to be closed."}]},"_WinAPI_CLSIDFromProgID":{"documentation":"Looks up a CLSID in the registry, given a ProgID","label":"_WinAPI_CLSIDFromProgID ( $sProgID )","params":[{"label":"$sProgID","documentation":"The string containing the ProgID whose CLSID is requested."}]},"_WinAPI_CoInitialize":{"documentation":"Initializes the COM library for use by the calling process","label":"_WinAPI_CoInitialize ( [$iFlags = 0] )","params":[{"label":"$iFlags","documentation":"**[optional]** This parameter can be one or more of the following values.    $COINIT_APARTMENTTHREADED    $COINIT_DISABLE_OLE1DDE    $COINIT_MULTITHREADED (Default)    $COINIT_SPEED_OVER_MEMORY"}]},"_WinAPI_ColorAdjustLuma":{"documentation":"Changes the luminance of a RGB value","label":"_WinAPI_ColorAdjustLuma ( $iRGB, $iPercent [, $bScale = True] )","params":[{"label":"$iRGB","documentation":"The initial RGB value."},{"label":"$iPercent","documentation":"The luminance of the total range, in percent, or absolute luminance."},{"label":"$bScale","documentation":"**[optional]** Specifies how to use the $iPercent parameter, valid values:    True - The $iPercent specifies how much to increment or decrement the current luminance, $iPercent can range from -1000 to +1000.    False - The $iPercent specifies the absolute luminance, $iPercent can range 0 to 1000. Available luminance values range from 0 to a maximum. If the requested value is negative or exceeds the maximum, the luminance will be set to either zero or the maximum value, respectively.        Default is True."}]},"_WinAPI_ColorHLSToRGB":{"documentation":"Converts colors from hue-luminance-saturation (HLS) to RGB format","label":"_WinAPI_ColorHLSToRGB ( $iHue, $iLuminance, $iSaturation )","params":[{"label":"$iHue","documentation":"HLS hue value."},{"label":"$iLuminance","documentation":"HLS luminance value."},{"label":"$iSaturation","documentation":"HLS saturation value."}]},"_WinAPI_ColorRGBToHLS":{"documentation":"Converts colors from RGB to hue-luminance-saturation (HLS) format","label":"_WinAPI_ColorRGBToHLS ( $iRGB, ByRef $iHue, ByRef $iLuminance, ByRef $iSaturation )","params":[{"label":"$iRGB","documentation":"RGB color."},{"label":"$iHue","documentation":"Returns HLS hue value."},{"label":"$iLuminance","documentation":"Returns HLS luminance value."},{"label":"$iSaturation","documentation":"Returns HLS saturation value."}]},"_WinAPI_CombineRgn":{"documentation":"Combines two regions and stores the result in a third region","label":"_WinAPI_CombineRgn ( $hRgnDest, $hRgnSrc1, $hRgnSrc2, $iCombineMode )","params":[{"label":"$hRgnDest","documentation":"Handle to a new region with dimensions defined by combining two other regions. (This region must exist before CombineRgn is called.)"},{"label":"$hRgnSrc1","documentation":"Handle to the first of two regions to be combined."},{"label":"$hRgnSrc2","documentation":"Handle to the second of two regions to be combined."},{"label":"$iCombineMode","documentation":"Specifies a mode indicating how the two regions will be combined. This parameter can be one of the following values.$RGN_AND - Creates the intersection of the two combined regions.$RGN_COPY - Creates a copy of the region identified by $hRgnSrc1.$RGN_DIFF - Combines the parts of $hRgnSrc1 that are not part of $hRgnSrc2.$RGN_OR - Creates the union of two combined regions.$RGN_XOR - Creates the union of two combined regions except for any overlapping areas."}]},"_WinAPI_CombineTransform":{"documentation":"Concatenates two world-space to page-space transformations","label":"_WinAPI_CombineTransform ( $tXFORM1, $tXFORM2 )","params":[{"label":"$tXFORM1","documentation":"$tagXFORM structure that specifies the first transformation."},{"label":"$tXFORM2","documentation":"$tagXFORM structure that specifies the second transformation."}]},"_WinAPI_CommandLineToArgv":{"documentation":"Parses a command-line string and returns an array of the command-line arguments","label":"_WinAPI_CommandLineToArgv ( $sCmd )","params":[{"label":"$sCmd","documentation":"The string that contains the full command line. If this parameter is an empty string the function returns an empty array (zeroth element is 0)."}]},"_WinAPI_CommDlgExtendedError":{"documentation":"Returns a common dialog box error string. This string indicates the most recent error to occur during the execution of one of the common dialog box functions","label":"_WinAPI_CommDlgExtendedError (  )","params":[]},"_WinAPI_CommDlgExtendedErrorEx":{"documentation":"Returns a common dialog box error code","label":"_WinAPI_CommDlgExtendedErrorEx (  )","params":[]},"_WinAPI_CompareString":{"documentation":"Compares two character strings for a specified locale","label":"_WinAPI_CompareString ( $iLCID, $sString1, $sString2 [, $iFlags = 0] )","params":[{"label":"$iLCID","documentation":"The locale identifier (LCID) that specifies the locale or one of the following predefined values:    $LOCALE_INVARIANT    $LOCALE_SYSTEM_DEFAULT    $LOCALE_USER_DEFAULTWindows Vista or later    $LOCALE_CUSTOM_DEFAULT    $LOCALE_CUSTOM_UI_DEFAULT    $LOCALE_CUSTOM_UNSPECIFIED"},{"label":"$sString1","documentation":"The first string to compare."},{"label":"$sString2","documentation":"The second string to compare."},{"label":"$iFlags","documentation":"**[optional]** The flags that indicate how the function compares the two strings. This parameter can be 0 or combination of the following values:    $LINGUISTIC_IGNORECASE    $LINGUISTIC_IGNOREDIACRITIC    $NORM_IGNORECASE    $NORM_IGNOREKANATYPE    $NORM_IGNORENONSPACE    $NORM_IGNORESYMBOLS    $NORM_IGNOREWIDTH    $NORM_LINGUISTIC_CASING    $SORT_STRINGSORTWindows 7 or later    $SORT_DIGITSASNUMBERS"}]},"_WinAPI_CompressBitmapBits":{"documentation":"Creates a compressed data block from the specified bitmap","label":"_WinAPI_CompressBitmapBits ( $hBitmap, ByRef $pBuffer [, $iCompression = 0 [, $iQuality = 100]] )","params":[{"label":"$hBitmap","documentation":"A handle to the bitmap to be compressed."},{"label":"$pBuffer","documentation":"A pointer to a memory block (buffer) that receives the compressed data. Optionaly, you can set this parameter to 0 before function call, then the function will allocate the required memory block itself.Otherwise, it must be a valid memory pointer returned by the _WinAPI_CreateBuffer() function, or by previously calling this function."},{"label":"$iCompression","documentation":"**[optional]** The compression method. This parameter can be one of the following values.    $COMPRESSION_BITMAP_PNG (Default)    $COMPRESSION_BITMAP_JPEG"},{"label":"$iQuality","documentation":"**[optional]** The quality of JPEG image, in percent. This value is ignored for non JPEG compression. Default is 100."}]},"_WinAPI_CompressBuffer":{"documentation":"Compresses a buffer with specified compression format and engine type","label":"_WinAPI_CompressBuffer ( $pUncompressedBuffer, $iUncompressedSize, $pCompressedBuffer, $iCompressedSize [, $iFormatAndEngine = 0x0002] )","params":[{"label":"$pUncompressedBuffer","documentation":"A pointer to a caller-allocated buffer that contains the data to be compressed."},{"label":"$iUncompressedSize","documentation":"The size of the uncompressed buffer, in bytes."},{"label":"$pCompressedBuffer","documentation":"A pointer to a caller-allocated buffer that receives the compressed data."},{"label":"$iCompressedSize","documentation":"The size of the compressed buffer, in bytes."},{"label":"$iFormatAndEngine","documentation":"**[optional]** A bitmask that specifies the compression format and engine type.This parameter must be set to a valid bitwise OR combination of one format type and one engine type.    $COMPRESSION_FORMAT_LZNT1 (Default)    $COMPRESSION_FORMAT_XPRESS    $COMPRESSION_FORMAT_XPRESS_HUFF    $COMPRESSION_ENGINE_STANDARD (Default)    $COMPRESSION_ENGINE_MAXIMUM"}]},"_WinAPI_ComputeCrc32":{"documentation":"Calculates the CRC32 checksum of a block of memory","label":"_WinAPI_ComputeCrc32 ( $pMemory, $iLength )","params":[{"label":"$pMemory","documentation":"A pointer to the memory block to calculate the checksum."},{"label":"$iLength","documentation":"The number of bytes to be calculated."}]},"_WinAPI_ConfirmCredentials":{"documentation":"Confirms the validity of the credential harvested","label":"_WinAPI_ConfirmCredentials ( $sTarget, $bConfirm )","params":[{"label":"$sTarget","documentation":"The string that contains the name of the target for the credentials, typically a domain or server name.This must be the same value passed to _WinAPI_ShellUserAuthenticationDlg() function."},{"label":"$bConfirm","documentation":"Specifies whether the credentials returned from the prompt function are valid, valid values:    True - The credentials are stored in the credential manager.    False - The credentials are not stored and various pieces of memory are cleaned up."}]},"_WinAPI_CopyBitmap":{"documentation":"Creates a duplicate of a specified bitmap with a device-independent bitmap (DIB) section","label":"_WinAPI_CopyBitmap ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"Handle to the bitmap to be duplicated."}]},"_WinAPI_CopyCursor":{"documentation":"Creates a duplicate of a specified cursor","label":"_WinAPI_CopyCursor ( $hCursor )","params":[{"label":"$hCursor","documentation":"Handle to the cursor to be duplicated."}]},"_WinAPI_CopyEnhMetaFile":{"documentation":"Copies the contents of an enhanced-format metafile to a specified file","label":"_WinAPI_CopyEnhMetaFile ( $hEmf [, $sFilePath = \'\'] )","params":[{"label":"$hEmf","documentation":"Handle to the enhanced metafile to be copied."},{"label":"$sFilePath","documentation":"**[optional]** The name of the destination file (.emf). If this parameter is \'\' (Default), the source metafile is copied to memory."}]},"_WinAPI_CopyFileEx":{"documentation":"Copies an existing file to a new file, notifying the application of its progress through a callback function","label":"_WinAPI_CopyFileEx ( $sExistingFile, $sNewFile [, $iFlags = 0 [, $pProgressProc = 0 [, $pData = 0]]] )","params":[{"label":"$sExistingFile","documentation":"The name of an existing file."},{"label":"$sNewFile","documentation":"The name of the new file."},{"label":"$iFlags","documentation":"**[optional]** The flags that specify how the file is to be copied. This parameter can be a combination of the following values:    $COPY_FILE_ALLOW_DECRYPTED_DESTINATION (0x0008)    $COPY_FILE_COPY_SYMLINK (0x0800)    $COPY_FILE_FAIL_IF_EXISTS (0x0001)    $COPY_FILE_NO_BUFFERING (0x1000)    $COPY_FILE_OPEN_SOURCE_FOR_WRITE (0x0004)    $COPY_FILE_RESTARTABLE (0x0002)"},{"label":"$pProgressProc","documentation":"**[optional]** The address of a callback function that is called each time another portion of the file has been copied.(See MSDN for more information)"},{"label":"$pData","documentation":"**[optional]** pointer to an argument to be passed to the callback function. Can be NULL."}]},"_WinAPI_CopyIcon":{"documentation":"Copies the specified icon from another module","label":"_WinAPI_CopyIcon ( $hIcon )","params":[{"label":"$hIcon","documentation":"Handle to the icon to be copied"}]},"_WinAPI_CopyImage":{"documentation":"Creates a new image (icon, cursor, or bitmap) and copies the attributes of the specified image to the new one","label":"_WinAPI_CopyImage ( $hImage [, $iType = 0 [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]] )","params":[{"label":"$hImage","documentation":"Handle to the image to be copied."},{"label":"$iType","documentation":"**[optional]** Specifies the type of image to be copied. This parameter can be one of the following values:    $IMAGE_BITMAP \'Default)    $IMAGE_CURSOR    $IMAGE_ICON"},{"label":"$iXDesiredPixels","documentation":"**[optional]** Specifies the desired width, in pixels, of the image. If this is zero (Default), then the returned image will have the same width as the original $hImage."},{"label":"$iYDesiredPixels","documentation":"**[optional]** Specifies the desired height, in pixels, of the image. If this is zero (Default), then the returned image will have the same height as the original $hImage."},{"label":"$iFlags","documentation":"**[optional]** This parameter can be one or more of the following values.$LR_DEFAULTCOLOR (Default)$LR_COPYDELETEORG$LR_COPYFROMRESOURCE$LR_COPYRETURNORG$LR_CREATEDIBSECTION$LR_DEFAULTSIZE$LR_MONOCHROME"}]},"_WinAPI_CopyRect":{"documentation":"Copies the coordinates of one rectangle to another","label":"_WinAPI_CopyRect ( $tRECT )","params":[{"label":"$tRECT","documentation":"$tagRECT structure whose coordinates are to be copied in logical units."}]},"_WinAPI_CopyStruct":{"documentation":"Creates a duplicate of a specified structure","label":"_WinAPI_CopyStruct ( $tStruct [, $sStruct = \'\'] )","params":[{"label":"$tStruct","documentation":"The structure to be duplicated."},{"label":"$sStruct","documentation":"**[optional]** The string representing the structure (same as for the DllStructCreate() function)."}]},"_WinAPI_CoTaskMemAlloc":{"documentation":"Allocates a block of task memory","label":"_WinAPI_CoTaskMemAlloc ( $iSize )","params":[{"label":"$iSize","documentation":"The size of the memory block to be allocated, in bytes."}]},"_WinAPI_CoTaskMemFree":{"documentation":"Frees a block of task memory","label":"_WinAPI_CoTaskMemFree ( $pMemory )","params":[{"label":"$pMemory","documentation":"The pointer to the memory block to be freed."}]},"_WinAPI_CoTaskMemRealloc":{"documentation":"Changes the size of a previously allocated block of task memory","label":"_WinAPI_CoTaskMemRealloc ( $pMemory, $iSize )","params":[{"label":"$pMemory","documentation":"The pointer to the memory block to be reallocated."},{"label":"$iSize","documentation":"The size of the memory block to be reallocated, in bytes."}]},"_WinAPI_CoUninitialize":{"documentation":"Closes the COM library on the current process","label":"_WinAPI_CoUninitialize (  )","params":[]},"_WinAPI_Create32BitHBITMAP":{"documentation":"Creates a 32 bits-per-pixel bitmap from the specified icon","label":"_WinAPI_Create32BitHBITMAP ( $hIcon [, $bDib = False [, $bDelete = False]] )","params":[{"label":"$hIcon","documentation":"Handle to the source icon."},{"label":"$bDib","documentation":"**[optional]** Specifies whether to create device-independent (DIB) or device-dependent (DDB) bitmap, valid values: True - Creates DIB.False - Creates DDB (Default)."},{"label":"$bDelete","documentation":"**[optional]** Specifies whether to delete the icon after the function is successful, valid values:    True - Icon will be deleted if the function succeeds.    False - Do not delete, you must release the icon when you are finished using it (Default)."}]},"_WinAPI_Create32BitHICON":{"documentation":"Converts an icon to a 32 bits-per-pixel format and copies to the new icon","label":"_WinAPI_Create32BitHICON ( $hIcon [, $bDelete = False] )","params":[{"label":"$hIcon","documentation":"Handle to the icon to be converted."},{"label":"$bDelete","documentation":"**[optional]** Specifies whether to delete the icon after the function is successful, valid values:    True - Icon will be deleted if the function succeeds.    False - Do not delete, you must release the icon themselves when you are finished using it (Default)."}]},"_WinAPI_CreateANDBitmap":{"documentation":"Creates AND bitmask device-independent bitmap (DIB) from the specified bitmap","label":"_WinAPI_CreateANDBitmap ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"Handle to the bitmap from which to create AND bitmask DIB."}]},"_WinAPI_CreateBitmap":{"documentation":"Creates a bitmap with the specified width, height, and color format","label":"_WinAPI_CreateBitmap ( $iWidth, $iHeight [, $iPlanes = 1 [, $iBitsPerPel = 1 [, $pBits = 0]]] )","params":[{"label":"$iWidth","documentation":"Specifies the bitmap width, in pixels"},{"label":"$iHeight","documentation":"Specifies the bitmap height, in pixels"},{"label":"$iPlanes","documentation":"**[optional]** Specifies the number of color planes used by the device"},{"label":"$iBitsPerPel","documentation":"**[optional]** Specifies the number of bits required to identify the color of a single pixel"},{"label":"$pBits","documentation":"**[optional]** Pointer to an array of color data used to set the colors in a rectangle of pixels.Each scan line in the rectangle must be word aligned (scan lines that are not word aligned must be padded with zeros).If this parameter is 0, the contents of the new bitmap is undefined."}]},"_WinAPI_CreateBitmapIndirect":{"documentation":"Creates a bitmap with the specified width, height, and color format (color planes and bits-per-pixel)","label":"_WinAPI_CreateBitmapIndirect ( $tBITMAP )","params":[{"label":"$tBITMAP","documentation":"$tagBITMAP structure that contains information about the bitmap.If an application sets the \\"bmWidth\\" or \\"bmHeight\\" members to zero, _WinAPI_CreateBitmapIndirect() returns the handle to a 1-by-1 pixel, monochrome bitmap."}]},"_WinAPI_CreateBrushIndirect":{"documentation":"Creates a logical brush that has the specified style, color, and pattern","label":"_WinAPI_CreateBrushIndirect ( $iStyle, $iRGB [, $iHatch = 0] )","params":[{"label":"$iStyle","documentation":"The brush style. This parameter can be one of the following styles:    $BS_DIBPATTERN    $BS_DIBPATTERN8X8    $BS_DIBPATTERNPT    $BS_HATCHED    $BS_HOLLOW    $BS_NULL    $BS_PATTERN    $BS_PATTERN8X8    $BS_SOLID"},{"label":"$iRGB","documentation":"The color of a brush, in RGB, or one of the following values.    $DIB_PAL_COLORS    $DIB_RGB_COLORS"},{"label":"$iHatch","documentation":"**[optional]** A hatch style. The meaning depends on the brush style defined by $iStyle parameter.$BS_DIBPATTERNContains a handle to a packed DIB.$BS_DIBPATTERNPTContains a pointer to a packed DIB.$BS_HATCHEDSpecifies the orientation of the lines used to create the hatch. It can be one of the orientation constants ($HS_*).$BS_PATTERNContains a handle to the bitmap that defines the pattern. The bitmap cannot be a DIB section bitmap.$BS_HOLLOW$BS_SOLID (Default)Ignored."}]},"_WinAPI_CreateBuffer":{"documentation":"Allocates a block of memory from the internal library heap","label":"_WinAPI_CreateBuffer ( $iLength [, $pBuffer = 0 [, $bAbort = True]] )","params":[{"label":"$iLength","documentation":"The required buffer length, in bytes."},{"label":"$pBuffer","documentation":"**[optional]** A pointer to the existing buffer that to be replaced by a new buffer.If this parameter is a valid buffer pointer, the memory will be reallocated for a new buffer.However, the new memory is allocated at a different location. Therefore, you should always use the pointer that returns this function.If this parameter is 0 (Default) or invalid buffer pointer, the function just allocates a new memory."},{"label":"$bAbort","documentation":"**[optional]** Specifies whether to exit the script if not enough memory, valid values:    True - Displaying an error message and exit the script with error code 1 (Default).    False - Continue the script and return an error."}]},"_WinAPI_CreateBufferFromStruct":{"documentation":"Allocates a block of memory from the internal library heap and initializes it with the structure\'s data","label":"_WinAPI_CreateBufferFromStruct ( $tStruct [, $pBuffer = 0 [, $bAbort = True]] )","params":[{"label":"$tStruct","documentation":"The structure that contains data to initialize the buffer."},{"label":"$pBuffer","documentation":"**[optional]** A pointer to the existing buffer that to be replaced by a new buffer.If this parameter is a valid buffer pointer, the memory will be reallocated for a new buffer. However, the new memory is allocated at a different location.Therefore, you should always use the pointer that returns this function.If this parameter is 0 (Default) or invalid buffer pointer, the function just allocates a new memory."},{"label":"$bAbort","documentation":"**[optional]** Specifies whether to exit the script if not enough memory, valid values:    True - Displaying an error message and exit the script with error code 1 (Default).    False - Continue the script and return an error."}]},"_WinAPI_CreateCaret":{"documentation":"Creates a new shape for the system caret and assigns ownership of the caret to the specified window","label":"_WinAPI_CreateCaret ( $hWnd, $hBitmap [, $iWidth = 0 [, $iHeight = 0]] )","params":[{"label":"$hWnd","documentation":"Handle to the window that owns the caret."},{"label":"$hBitmap","documentation":"Handle to the bitmap that defines the caret shape.If this parameter is 0, the caret is solid.If this parameter is 1, the caret is gray. If this parameter is a bitmap handle, the caret is the specified bitmap."},{"label":"$iWidth","documentation":"**[optional]** The width of the caret in logical units.If this parameter is 0 (Default), the width is set to the system-defined window border width.If $hBitmap is a bitmap handle, _WinAPI_CreateCaret() ignores this parameter."},{"label":"$iHeight","documentation":"**[optional]** The height of the caret in logical units.If this parameter is 0 (Default), the height is set to the system-defined window border height.If $hBitmap is a bitmap handle, _WinAPI_CreateCaret() ignores this parameter."}]},"_WinAPI_CreateColorAdjustment":{"documentation":"Creates $tagCOLORADJUSTMENT structure specifies the color adjustment","label":"_WinAPI_CreateColorAdjustment ( [$iFlags = 0 [, $iIlluminant = 0 [, $iGammaR = 10000 [, $iGammaG = 10000 [, $iGammaB = 10000 [, $iBlack = 0 [, $iWhite = 10000 [, $iContrast = 0 [, $iBrightness = 0 [, $iColorfulness = 0 [, $iTint = 0]]]]]]]]]]] )","params":[{"label":"$iFlags","documentation":"**[optional]** The flags that specify how the output image should be prepared. This parameter can be 0 or any combination of the following values:    $CA_NEGATIVE    $CA_LOG_FILTER"},{"label":"$iIlluminant","documentation":"**[optional]** The type of standard light source under which the image is viewed. This parameter can be only one of the following values:    $ILLUMINANT_DEVICE_DEFAULT (Default)    $ILLUMINANT_A    $ILLUMINANT_B    $ILLUMINANT_C    $ILLUMINANT_D50    $ILLUMINANT_D55    $ILLUMINANT_D65    $ILLUMINANT_D75    $ILLUMINANT_F2    $ILLUMINANT_TUNGSTEN    $ILLUMINANT_DAYLIGHT    $ILLUMINANT_FLUORESCENT    $ILLUMINANT_NTSC"},{"label":"$iGammaR","documentation":"**[optional]** The n(th) power gamma-correction value for the red primary of the source colors.The value must be in the range from 2500 to 65,000.A value of 10,000 (Default) means no gamma correction."},{"label":"$iGammaG","documentation":"**[optional]** The n(th) power gamma-correction value for the green primary of the source colors.The value must be in the range from 2500 to 65,000.A value of 10,000 (Default) means no gamma correction."},{"label":"$iGammaB","documentation":"**[optional]** The n(th) power gamma-correction value for the blue primary of the source colors.The value must be in the range from 2500 to 65,000.A value of 10,000 (Default) means no gamma correction."},{"label":"$iBlack","documentation":"**[optional]** The black reference for the source colors. Any colors that are darker than this are treated as black.The value must be in the range from 0 to 4000.Default is 0."},{"label":"$iWhite","documentation":"**[optional]** The white reference for the source colors. Any colors that are lighter than this are treated as white.The value must be in the range from 6000 to 10,000.Default is 10,000"},{"label":"$iContrast","documentation":"**[optional]** The amount of contrast to be applied to the source object.The value must be in the range from -100 to 100.A value of 0 (Default) means no contrast adjustment."},{"label":"$iBrightness","documentation":"**[optional]** The amount of brightness to be applied to the source object.The value must be in the range from -100 to 100.A value of 0 (Default) means no brightness adjustment."},{"label":"$iColorfulness","documentation":"**[optional]** The amount of colorfulness to be applied to the source object.The value must be in the range from -100 to 100.A value of 0 (Default) means no colorfulness adjustment)."},{"label":"$iTint","documentation":"**[optional]** The amount of red or green tint adjustment to be applied to the source object.The value must be in the range from -100 to 100.Positive numbers adjust toward red and negative numbers adjust toward green.A value of 0 (Default) means no tint adjustment."}]},"_WinAPI_CreateCompatibleBitmap":{"documentation":"Creates a bitmap compatible with the specified device context","label":"_WinAPI_CreateCompatibleBitmap ( $hDC, $iWidth, $iHeight )","params":[{"label":"$hDC","documentation":"Identifies a device context"},{"label":"$iWidth","documentation":"Specifies the bitmap width, in pixels"},{"label":"$iHeight","documentation":"Specifies the bitmap height, in pixels"}]},"_WinAPI_CreateCompatibleBitmapEx":{"documentation":"Creates a bitmap compatible with the device and fills it the specified color","label":"_WinAPI_CreateCompatibleBitmapEx ( $hDC, $iWidth, $iHeight, $iRGB )","params":[{"label":"$hDC","documentation":"Handle to a device context."},{"label":"$iWidth","documentation":"The bitmap width, in pixels."},{"label":"$iHeight","documentation":"The bitmap height, in pixels."},{"label":"$iRGB","documentation":"The bitmap color, in RGB."}]},"_WinAPI_CreateCompatibleDC":{"documentation":"Creates a memory device context compatible with the specified device","label":"_WinAPI_CreateCompatibleDC ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to an existing DC. If this handle is 0, the function creates a memory DC compatible with the application\'s current screen."}]},"_WinAPI_CreateDesktop":{"documentation":"Creates a new desktop, associates it with the current window station of the calling process","label":"_WinAPI_CreateDesktop ( $sName [, $iAccess = 0x0002 [, $iFlags = 0 [, $iHeap = 0 [, $tSecurity = 0]]]] )","params":[{"label":"$sName","documentation":"The name of the desktop to be created. Desktop names are case-insensitive and may not contain backslash characters (\\\\)."},{"label":"$iAccess","documentation":"**[optional]** The requested access to the desktop. This parameter can be one or more of the following values:    $DESKTOP_ALL_ACCESS    $DESKTOP_CREATEMENU    $DESKTOP_CREATEWINDOW (Default)    $DESKTOP_ENUMERATE    $DESKTOP_HOOKCONTROL    $DESKTOP_JOURNALPLAYBACK    $DESKTOP_JOURNALRECORD    $DESKTOP_READOBJECTS    $DESKTOP_SWITCHDESKTOP    $DESKTOP_WRITEOBJECTS"},{"label":"$iFlags","documentation":"**[optional]** The optional flags. It can be zero or the following value:    $DF_ALLOWOTHERACCOUNTHOOK"},{"label":"$iHeap","documentation":"**[optional]** The size of the desktop heap, in kilobytes. Default is 0."},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by child processes.If this parameter is 0 (Default), the handle cannot be inherited ."}]},"_WinAPI_CreateDIB":{"documentation":"Creates an uncompressed device-independent bitmap (DIB) with the specified width, height, and color depth","label":"_WinAPI_CreateDIB ( $iWidth, $iHeight [, $iBitsPerPel = 32 [, $tColorTable = 0 [, $iColorCount = 0]]] )","params":[{"label":"$iWidth","documentation":"The width of the bitmap, in pixels."},{"label":"$iHeight","documentation":"The height of the bitmap, in pixels. If this value is positive, the bitmap is a bottom-up DIB and its origin is the lower-left corner, otherwise, the bitmap is a top-down DIB and its origin is the upper-left corner."},{"label":"$iBitsPerPel","documentation":"**[optional]** The number of bits that define each pixel and the maximum number of colors in the bitmap. Default is 32."},{"label":"$tColorTable","documentation":"**[optional]** \\"dword[n]\\" structure that represents a DIB color table.The number of colors in this table depends on the values of the $iBitsPerPel parameters."},{"label":"$iColorCount","documentation":"**[optional]** The number of color indexes in the DIB color table that are actually used by the bitmap.The value of this parameter should not exceed the number of colors in the color table pointed to by the $pColorTable parameter. Default is 0."}]},"_WinAPI_CreateDIBColorTable":{"documentation":"Creates RGB color table from the specified array of colors","label":"_WinAPI_CreateDIBColorTable ( Const ByRef $aColorTable [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$aColorTable","documentation":"The array of colors, in RGB, that to be make up the DIB color table."},{"label":"$iStart","documentation":"**[optional]** The index of array to start creating at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop creating at."}]},"_WinAPI_CreateDIBitmap":{"documentation":"Creates a compatible bitmap (DDB) from a DIB and, optionally, sets the bitmap bits","label":"_WinAPI_CreateDIBitmap ( $hDC, $tBITMAPINFO, $iUsage [, $pBits = 0] )","params":[{"label":"$hDC","documentation":"Handle to a device context."},{"label":"$tBITMAPINFO","documentation":"$tagBITMAPINFO structure that specifies various attributes of the DIB, including the bitmap dimensions and colors.Note that a positive value for the height indicates a bottom-up DIB while a negative value for the height indicates a top-down DIB."},{"label":"$iUsage","documentation":"The type of colors used. This parameter must be one of the following values:    $DIB_PAL_COLORS    $DIB_RGB_COLORS"},{"label":"$pBits","documentation":"**[optional]** A pointer to an array of bytes containing the initial bitmap data."}]},"_WinAPI_CreateDIBSection":{"documentation":"Creates a DIB that applications can write to directly","label":"_WinAPI_CreateDIBSection ( $hDC, $tBITMAPINFO, $iUsage, ByRef $pBits [, $hSection = 0 [, $iOffset = 0]] )","params":[{"label":"$hDC","documentation":"Handle to a device context. If the value of $iUsage is $DIB_PAL_COLORS, the function uses this device context\'s logical palette to initialize the DIB colors."},{"label":"$tBITMAPINFO","documentation":"$tagBITMAPINFO structure that specifies various attributes of the DIB, including the bitmap dimensions and colors."},{"label":"$iUsage","documentation":"The type of colors used (either logical palette indexes or literal RGB values). The following values are defined:    $DIB_PAL_COLORS    $DIB_RGB_COLORS"},{"label":"$pBits","documentation":"Returns a pointer to the location of the DIB bit values."},{"label":"$hSection","documentation":"**[optional]** Handle to a file-mapping object that the function will use to create the DIB."},{"label":"$iOffset","documentation":"**[optional]** The offset from the beginning of the file-mapping object referenced by $hSection where storage for the bitmap bit values is to begin. This value is ignored if $hSection is 0 (Default)."}]},"_WinAPI_CreateDirectory":{"documentation":"Creates a new directory","label":"_WinAPI_CreateDirectory ( $sDir [, $tSecurity = 0] )","params":[{"label":"$sDir","documentation":"The path of the directory to be created."},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new directory.If this parameter is 0 (Default), the directory gets a default security descriptor. The ACL in the default security descriptor for a directory are inherited from its parent directory."}]},"_WinAPI_CreateDirectoryEx":{"documentation":"Creates a new directory with the attributes of a specified template directory","label":"_WinAPI_CreateDirectoryEx ( $sNewDir, $sTemplateDir [, $tSecurity = 0] )","params":[{"label":"$sNewDir","documentation":"The path of the directory to be created."},{"label":"$sTemplateDir","documentation":"The path of the directory to use as a template when creating the new directory."},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new directory.If this parameter is 0 (Default), the directory gets a default security descriptor.The ACL in the default security descriptor for a directory are inherited from its parent directory."}]},"_WinAPI_CreateEllipticRgn":{"documentation":"Creates an elliptical region","label":"_WinAPI_CreateEllipticRgn ( $tRECT )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that contains the coordinates of the upper-left and lower-right corners of the bounding rectangle of the ellipse in logical units."}]},"_WinAPI_CreateEmptyIcon":{"documentation":"Creates a fully transparent icon with the specified width, height, and color depth","label":"_WinAPI_CreateEmptyIcon ( $iWidth, $iHeight [, $iBitsPerPel = 32] )","params":[{"label":"$iWidth","documentation":"The width, in pixels, of the icon."},{"label":"$iHeight","documentation":"The height, in pixels, of the icon."},{"label":"$iBitsPerPel","documentation":"**[optional]** The number of bits-per-pixel in the XOR bitmask of the icon. Default is 32."}]},"_WinAPI_CreateEnhMetaFile":{"documentation":"Creates a device context for an enhanced-format metafile","label":"_WinAPI_CreateEnhMetaFile ( [$hDC = 0 [, $tRECT = 0 [, $bPixels = False [, $sFilePath = \'\' [, $sDescription = \'\']]]]] )","params":[{"label":"$hDC","documentation":"**[optional]** Handle to a reference device for the enhanced metafile. The system uses this device context to record the resolution and units of the device on which a picture originally appeared.If this parameter is 0 (Default), it uses the current display device for reference."},{"label":"$tRECT","documentation":"**[optional]** $tagRECT structure that specifies the dimensions of the picture to be stored in the enhanced metafile.If this parameter is 0 (Default), the graphics device interface computes the dimensions of the smallest rectangle that surrounds the picture drawn by the application."},{"label":"$bPixels","documentation":"**[optional]** Specifies whether the $tRECT structure defined in pixels, valid values:    True     - In logical units (pixels).    False    - In .01-millimeter units (Default)."},{"label":"$sFilePath","documentation":"**[optional]** The file name for the enhanced metafile to be created.If this parameter is \'\' (Default), the enhanced metafile is memory based and its contents are lost when it is deleted by using the _WinAPI_DeleteEnhMetaFile() function."},{"label":"$sDescription","documentation":"**[optional]** The string that specifies the name of the application that created the picture, as well as the picture\'s title. This string must be an empty string or represented as follows:    \\"application name|picture name\\""}]},"_WinAPI_CreateEvent":{"documentation":"Creates or opens a named or unnamed event object","label":"_WinAPI_CreateEvent ( [$tAttributes = 0 [, $bManualReset = True [, $bInitialState = True [, $sName = \\"\\"]]]] )","params":[{"label":"$tAttributes","documentation":"**[optional]** a $tagSECURITY_ATTRIBUTES structure or a pointer to it. If 0, the handle cannot be inherited by child processes.The Descriptor member of the structure specifies a security descriptor for the new event.If $tAttributes is 0, the event gets a default security descriptor.The ACLs in the default security descriptor for an event come from the primary or impersonation token of the creator."},{"label":"$bManualReset","documentation":"**[optional]** If True, the function creates a manual-reset event object, which requires the use of the ResetEvent function to set the event state to nonsignaled.If False, the function creates an auto-reset event object and system automatically resets the event state to nonsignaled after a single waiting thread has been released."},{"label":"$bInitialState","documentation":"**[optional]** If True, the initial state of the event object is signaled; otherwise, it is nonsignaled"},{"label":"$sName","documentation":"**[optional]** The name of the event object. Name comparison is case sensitive.If $sName matches the name of an existing named event object, this function requests the EVENT_ALL_ACCESS access right.In this case the $bManualReset and $bInitialState parameters are ignored because they have already been set by the creating process.If the $tAttributes parameter is not 0, it determines whether the handle can be inherited, but its security-descriptor member is ignored.If Name is blank, the event object is created without a name."}]},"_WinAPI_CreateFile":{"documentation":"Creates or opens a file or other device","label":"_WinAPI_CreateFile ( $sFileName, $iCreation [, $iAccess = 4 [, $iShare = 0 [, $iAttributes = 0 [, $tSecurity = 0]]]] )","params":[{"label":"$sFileName","documentation":"Name of an object to create or open"},{"label":"$iCreation","documentation":"Action to take on files that exist and do not exist:    0 - Creates a new file. The function fails if the file exists    1 - Creates a new file. If a file exists, it is overwritten    2 - Opens a file. The function fails if the file does not exist    3 - Opens a file. If the file does not exist, the function creates the file    4 - Opens a file and truncates it so that its size is 0 bytes. The function fails if the file does not exist."},{"label":"$iAccess","documentation":"**[optional]** Access to the object:    1 - Execute    2 - Read    4 - Write"},{"label":"$iShare","documentation":"**[optional]** Sharing mode of an object:    1 - Delete    2 - Read    4 - Write"},{"label":"$iAttributes","documentation":"**[optional]** The file attributes:    1 - File should be archived    2 - File is hidden    4 - File is read only    8 - File is part of or used exclusively by an operating system."},{"label":"$tSecurity","documentation":"**[optional]** a $tagSECURITY_ATTRIBUTES structure or a pointer to it that determines if the returned handle can be inherited by child processes.If $tSecurity is 0, the handle cannot be inherited."}]},"_WinAPI_CreateFileEx":{"documentation":"Creates or opens a file or I/O device","label":"_WinAPI_CreateFileEx ( $sFilePath, $iCreation [, $iAccess = 0 [, $iShare = 0 [, $iFlagsAndAttributes = 0 [, $tSecurity = 0 [, $hTemplate = 0]]]]] )","params":[{"label":"$sFilePath","documentation":"The name of the file or device to be created or opened."},{"label":"$iCreation","documentation":"The action to take on a file or device that exists or does not exist. This parameter must be one of the following values, which cannot be combined.    $CREATE_NEW    $CREATE_ALWAYS    $OPEN_EXISTING    $OPEN_ALWAYS    $TRUNCATE_EXISTING"},{"label":"$iAccess","documentation":"**[optional]** The requested access to the file or device, which can be summarized as read, write, both or neither (zero) (Default).    $GENERIC_READ    $GENERIC_WRITE    (See MSDN for more information)"},{"label":"$iShare","documentation":"**[optional]** The requested sharing mode of the file or device, which can be read, write, both, delete, all of these, or none.If this parameter is 0 (Default) and _WinAPI_CreateFileEx() succeeds, the file or device cannot be shared and cannot be opened again until the handle to the file or device is closed.    $FILE_SHARE_DELETE    $FILE_SHARE_READ    $FILE_SHARE_WRITE"},{"label":"$iFlagsAndAttributes","documentation":"**[optional]** The file or device attributes and flags. This parameter can be one or more of the following values:    $FILE_ATTRIBUTE_READONLY    $FILE_ATTRIBUTE_HIDDEN    $FILE_ATTRIBUTE_SYSTEM    $FILE_ATTRIBUTE_DIRECTORY    $FILE_ATTRIBUTE_ARCHIVE    $FILE_ATTRIBUTE_DEVICE    $FILE_ATTRIBUTE_NORMAL    $FILE_ATTRIBUTE_TEMPORARY    $FILE_ATTRIBUTE_SPARSE_FILE    $FILE_ATTRIBUTE_REPARSE_POINT    $FILE_ATTRIBUTE_COMPRESSED    $FILE_ATTRIBUTE_OFFLINE    $FILE_ATTRIBUTE_NOT_CONTENT_INDEXED    $FILE_ATTRIBUTE_ENCRYPTED    $FILE_FLAG_BACKUP_SEMANTICS    $FILE_FLAG_DELETE_ON_CLOSE    $FILE_FLAG_NO_BUFFERING    $FILE_FLAG_OPEN_NO_RECALL    $FILE_FLAG_OPEN_REPARSE_POINT    $FILE_FLAG_OVERLAPPED    $FILE_FLAG_POSIX_SEMANTICS    $FILE_FLAG_RANDOM_ACCESS    $FILE_FLAG_SEQUENTIAL_SCAN    $FILE_FLAG_WRITE_THROUGH    $SECURITY_ANONYMOUS (Default)    $SECURITY_CONTEXT_TRACKING    $SECURITY_DELEGATION    $SECURITY_EFFECTIVE_ONLY    $SECURITY_IDENTIFICATION    $SECURITY_IMPERSONATION"},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that contains two separate but related data members: an optional security descriptor, and a Boolean value that determines whether the returned handle can be inherited by child processes.If this parameter is 0 (Default), the handle cannot be inherited by any child processes the application may create and the file or device associated with the returned handle gets a default security descriptor."},{"label":"$hTemplate","documentation":"**[optional]** Handle to a template file with the $GENERIC_READ access right. The template file supplies file attributes and extended attributes for the file that is being created."}]},"_WinAPI_CreateFileMapping":{"documentation":"Creates or opens a named or unnamed file mapping object for a specified file","label":"_WinAPI_CreateFileMapping ( $hFile [, $iSize = 0 [, $sName = \'\' [, $iProtect = 0x0004 [, $tSecurity = 0]]]] )","params":[{"label":"$hFile","documentation":"Handle to the file from which to create a file mapping object.If this parameter is (-1), the calling process must also specify a size for the file mapping object in the $iSize parameters.In this scenario, _WinAPI_CreateFileMapping() creates a file mapping object of a specified size that is backed by the system paging file instead of by a file in the file system."},{"label":"$iSize","documentation":"**[optional]** The maximum size of the file mapping object.If this parameter is 0 (Default), the maximum size of the file mapping object is equal to the current size of the file that $hFile identifies."},{"label":"$sName","documentation":"**[optional]** The name of the file mapping object."},{"label":"$iProtect","documentation":"**[optional]** Specifies the page protection of the file mapping object and can be one of the following values.    $PAGE_EXECUTE_READ    $PAGE_EXECUTE_READWRITE    $PAGE_EXECUTE_WRITECOPY    $PAGE_READONLY    $PAGE_READWRITE (Default)    $PAGE_WRITECOPYAn application can specify one or more of the following attributes for the file mapping object by combining them with one of the preceding page protection values.    $SEC_COMMIT    $SEC_IMAGE    $SEC_LARGE_PAGES    $SEC_NOCACHE    $SEC_RESERVE    $SEC_WRITECOMBINE"},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that determines whether a returned handle can be inherited by child processes.If this parameter is 0 (Default), the handle cannot be inherited and the file mapping object gets a default security descriptor."}]},"_WinAPI_CreateFont":{"documentation":"Creates a logical font with the specified characteristics","label":"_WinAPI_CreateFont ( $iHeight, $iWidth [, $iEscape = 0 [, $iOrientn = 0 [, $iWeight = $FW_NORMAL [, $bItalic = False [, $bUnderline = False [, $bStrikeout = False [, $iCharset = $DEFAULT_CHARSET [, $iOutputPrec = $OUT_DEFAULT_PRECIS [, $iClipPrec = $CLIP_DEFAULT_PRECIS [, $iQuality = $DEFAULT_QUALITY [, $iPitch = 0 [, $sFace = \'Arial\']]]]]]]]]]]] )","params":[{"label":"$iHeight","documentation":"height of font"},{"label":"$iWidth","documentation":"average character width"},{"label":"$iEscape","documentation":"**[optional]** angle of escapement"},{"label":"$iOrientn","documentation":"**[optional]** base-line orientation angle"},{"label":"$iWeight","documentation":"**[optional]** font weight, The following values are defined for convenience:$FW_DONTCARE - 0$FW_THIN - 100$FW_EXTRALIGHT - 200$FW_LIGHT - 300$FW_NORMAL - 400$FW_MEDIUM - 500$FW_SEMIBOLD - 600$FW_BOLD - 700$FW_EXTRABOLD - 800$FW_HEAVY - 900"},{"label":"$bItalic","documentation":"**[optional]** italic attribute option"},{"label":"$bUnderline","documentation":"**[optional]** underline attribute option"},{"label":"$bStrikeout","documentation":"**[optional]** strikeout attribute option"},{"label":"$iCharset","documentation":"**[optional]** Specifies the character set. The following values are predefined:$ANSI_CHARSET - 0$BALTIC_CHARSET - 186$CHINESEBIG5_CHARSET - 136$DEFAULT_CHARSET - 1$EASTEUROPE_CHARSET - 238$GB2312_CHARSET - 134$GREEK_CHARSET - 161$HANGEUL_CHARSET - 129$MAC_CHARSET - 77$OEM_CHARSET - 255$RUSSIAN_CHARSET - 204$SHIFTJIS_CHARSET - 128$SYMBOL_CHARSET - 2$TURKISH_CHARSET - 162$VIETNAMESE_CHARSET - 163"},{"label":"$iOutputPrec","documentation":"**[optional]** Specifies the output precision, It can be one of the following values:$OUT_CHARACTER_PRECIS - Not used$OUT_DEFAULT_PRECIS - Specifies the default font mapper behavior$OUT_DEVICE_PRECIS - Instructs the font mapper to choose a Device font when the system contains multiple fonts with the same name$OUT_OUTLINE_PRECIS - This value instructs the font mapper to choose from TrueType and other outline-based fonts$OUT_PS_ONLY_PRECIS - Instructs the font mapper to choose from only PostScript fonts.If there are no PostScript fonts installed in the system, the font mapper returns to default behavior$OUT_RASTER_PRECIS - Instructs the font mapper to choose a raster font when the system contains multiple fonts with the same name$OUT_STRING_PRECIS - This value is not used by the font mapper, but it is returned when raster fonts are enumerated$OUT_STROKE_PRECIS - This value is not used by the font mapper, but it is returned when TrueType, other outline-based fonts, and vector fonts are enumerated$OUT_TT_ONLY_PRECIS - Instructs the font mapper to choose from only TrueType fonts. If there are no TrueType fonts installed in the system, the font mapper returns to default behavior$OUT_TT_PRECIS - Instructs the font mapper to choose a TrueType font when the system contains multiple fonts with the same name"},{"label":"$iClipPrec","documentation":"**[optional]** Specifies the clipping precision, It can be one or more of the following values:$CLIP_CHARACTER_PRECIS - Not used$CLIP_DEFAULT_PRECIS - Specifies default clipping behavior$CLIP_EMBEDDED - You must specify this flag to use an embedded read-only font$CLIP_LH_ANGLES - When this value is used, the rotation for all fonts depends on whether the orientation of the coordinate system is left-handed or right-handed.If not used, device fonts always rotate counterclockwise, but the rotation of other fonts is dependent on the orientation of the coordinate system.$CLIP_MASK - Not used$CLIP_STROKE_PRECIS - Not used by the font mapper, but is returned when raster, vector, or TrueType fonts are enumeratedFor compatibility, this value is always returned when enumerating fonts$CLIP_TT_ALWAYS - Not used"},{"label":"$iQuality","documentation":"**[optional]** Specifies the output quality, It can be one of the following values:$ANTIALIASED_QUALITY - Font is antialiased, or smoothed, if the font supports it and the size of the font is not too small or too large.In addition, you must select a TrueType font into a screen DC prior to using it in a DIBSection, otherwise antialiasing does not happen$DEFAULT_QUALITY - Appearance of the font does not matter$DRAFT_QUALITY - Appearance of the font is less important than when the PROOF_QUALITY value is used.For GDI raster fonts, scaling is enabled, which means that more font sizes are available, but the quality may be lower.Bold, italic, underline, and strikeout fonts are synthesized, if necessary$NONANTIALIASED_QUALITY - Font is never antialiased, that is, font smoothing is not done$PROOF_QUALITY - Character quality of the font is more important than exact matching of the logical-font attributes.For GDI raster fonts, scaling is disabled and the font closest in size is chosen.Although the chosen font size may not be mapped exactly when PROOF_QUALITY is used, the quality of the font is high and there is no distortion of appearance.Bold, italic, underline, and strikeout fonts are synthesized, if necessary"},{"label":"$iPitch","documentation":"**[optional]** Specifies the pitch and family of the font. The two low-order bits specify the pitch of the font and can be one of the following values:$DEFAULT_PITCH, $FIXED_PITCH, $VARIABLE_PITCHThe four high-order bits specify the font family and can be one of the following values:$FF_DECORATIVE - Novelty fonts. Old English is an example$FF_DONTCARE - Use default font$FF_MODERN - Fonts with constant stroke width, with or without serifs. Pica, Elite, and Courier New are examples$FF_ROMAN - Fonts with variable stroke width and with serifs. MS Serif is an example$FF_SCRIPT - Fonts designed to look like handwriting. Script and Cursive are examples$FF_SWISS - Fonts with variable stroke width and without serifs. MS Sans Serif is an example"},{"label":"$sFace","documentation":"**[optional]** typeface name"}]},"_WinAPI_CreateFontEx":{"documentation":"Creates a logical font with the specified characteristics","label":"_WinAPI_CreateFontEx ( $iHeight [, $iWidth = 0 [, $iEscapement = 0 [, $iOrientation = 0 [, $iWeight = 400 [, $bItalic = False [, $bUnderline = False [, $bStrikeOut = False [, $iCharSet = 1 [, $iOutPrecision = 0 [, $iClipPrecision = 0 [, $iQuality = 0 [, $iPitchAndFamily = 0 [, $sFaceName = \'\' [, $iStyle = 0]]]]]]]]]]]]]] )","params":[{"label":"$iHeight","documentation":"The height of the font\'s character cell or character, in logical units."},{"label":"$iWidth","documentation":"**[optional]** The average width, in logical units. Default is 0."},{"label":"$iEscapement","documentation":"**[optional]** The angle, in tenths of degrees, between the escapement vector and the x-axis of the device. Default is 0"},{"label":"$iOrientation","documentation":"**[optional]** The angle, in tenths of degrees, between each character\'s base line and the x-axis of the device. Default is 0"},{"label":"$iWeight","documentation":"**[optional]** The weight of the font in the range 0 through 1000, or one of the following values.    $FW_DONTCARE    $FW_THIN    $FW_EXTRALIGHT    $FW_ULTRALIGHT    $FW_LIGHT    $FW_NORMAL (Default)    $FW_REGULAR    $FW_MEDIUM    $FW_SEMIBOLD    $FW_DEMIBOLD    $FW_BOLD    $FW_EXTRABOLD    $FW_ULTRABOLD    $FW_HEAVY    $FW_BLACK"},{"label":"$bItalic","documentation":"**[optional]** Specifies whether to set italic font attribute, valid values:    True - The attribute is set.    False - The attribute is not set (Default)."},{"label":"$bUnderline","documentation":"**[optional]** Specifies whether to set underlined font attribute, valid values:    True - The attribute is set.    False - The attribute is not set (Default)."},{"label":"$bStrikeOut","documentation":"**[optional]** Specifies whether to set strikeout font attribute, valid values:    True - The attribute is set.    False - The attribute is not set (Default)."},{"label":"$iCharSet","documentation":"**[optional]** The character set. It can be one of the following values.    $ANSI_CHARSET    $BALTIC_CHARSET    $CHINESEBIG5_CHARSET    $DEFAULT_CHARSET (Default)    $EASTEUROPE_CHARSET    $GB2312_CHARSET    $GREEK_CHARSET    $HANGEUL_CHARSET    $MAC_CHARSET    $OEM_CHARSET    $RUSSIAN_CHARSET    $SHIFTJIS_CHARSET    $SYMBOL_CHARSET    $TURKISH_CHARSET    $VIETNAMESE_CHARSETKorean language edition of Windows:    $JOHAB_CHARSETMiddle East language edition of Windows:    $ARABIC_CHARSET    $HEBREW_CHARSETThai language edition of Windows:    $THAI_CHARSET"},{"label":"$iOutPrecision","documentation":"**[optional]** The output precision. It can be one of the following values.    $OUT_CHARACTER_PRECIS    $OUT_DEFAULT_PRECIS (Default)    $OUT_DEVICE_PRECIS    $OUT_OUTLINE_PRECIS    $OUT_PS_ONLY_PRECIS    $OUT_RASTER_PRECIS    $OUT_STRING_PRECIS    $OUT_STROKE_PRECIS    $OUT_TT_ONLY_PRECIS    $OUT_TT_PRECIS"},{"label":"$iClipPrecision","documentation":"**[optional]** The clipping precision. It can be one or more of the following values.    $CLIP_CHARACTER_PRECIS    $CLIP_DEFAULT_PRECIS (Default)    $CLIP_DFA_DISABLE    $CLIP_EMBEDDED    $CLIP_LH_ANGLES    $CLIP_DFA_OVERRIDE    $CLIP_STROKE_PRECIS"},{"label":"$iQuality","documentation":"**[optional]** The output quality. It can be one of the following values.    $ANTIALIASED_QUALITY    $CLEARTYPE_QUALITY    $DEFAULT_QUALITY (Default)    $DRAFT_QUALITY    $NONANTIALIASED_QUALITY    $PROOF_QUALITY"},{"label":"$iPitchAndFamily","documentation":"**[optional]** The pitch and family of the font. The two low-order bits specify the pitch of the font and can be one of the following values.    $DEFAULT_PITCH (Default    $FIXED_PITCH    $VARIABLE_PITCHThe four high-order bits specify the font family and can be one of the following values.    $FF_DECORATIVE    $FF_DONTCARE    $FF_MODERN    $FF_ROMAN    $FF_SCRIPT    $FF_SWISS"},{"label":"$sFaceName","documentation":"**[optional]** The typeface name of the font (not including style). For example, \\"Arial\\", \\"Tahoma\\", etc."},{"label":"$iStyle","documentation":"**[optional]** The style of the font. It can be one or more of the following values.    $FS_REGULAR (Default)    $FS_BOLD    $FS_ITALIC"}]},"_WinAPI_CreateFontIndirect":{"documentation":"Creates a logical font that has specific characteristics","label":"_WinAPI_CreateFontIndirect ( $tLogFont )","params":[{"label":"$tLogFont","documentation":"$tagLOGFONT structure that defines the characteristics of the logical font"}]},"_WinAPI_CreateGUID":{"documentation":"Creates a globally unique identifier (GUID)","label":"_WinAPI_CreateGUID (  )","params":[]},"_WinAPI_CreateHardLink":{"documentation":"Establishes a hard link between an existing file and a new file","label":"_WinAPI_CreateHardLink ( $sNewFile, $sExistingFile )","params":[{"label":"$sNewFile","documentation":"The name of the new file."},{"label":"$sExistingFile","documentation":"The name of the existing file."}]},"_WinAPI_CreateIcon":{"documentation":"Creates an icon that has the specified size, colors, and bit patterns","label":"_WinAPI_CreateIcon ( $hInstance, $iWidth, $iHeight, $iPlanes, $iBitsPixel, $pANDBits, $pXORBits )","params":[{"label":"$hInstance","documentation":"Handle to the instance of the module creating the icon."},{"label":"$iWidth","documentation":"The width, in pixels, of the icon."},{"label":"$iHeight","documentation":"The height, in pixels, of the icon."},{"label":"$iPlanes","documentation":"The number of planes in the XOR bitmask of the icon."},{"label":"$iBitsPixel","documentation":"The number of bits-per-pixel in the XOR bitmask of the icon."},{"label":"$pANDBits","documentation":"An array of bytes that contains the bit values for the AND bitmask of the icon. This bitmask describes a monochrome bitmap."},{"label":"$pXORBits","documentation":"An array of bytes that contains the bit values for the XOR bitmask of the icon. This bitmask describes a monochrome or device-dependent color bitmap."}]},"_WinAPI_CreateIconFromResourceEx":{"documentation":"Creates an icon or cursor from resource bits describing the icon","label":"_WinAPI_CreateIconFromResourceEx ( $pData, $iSize [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]] )","params":[{"label":"$pData","documentation":"The icon or cursor resource bits. These bits are typically loaded by calls to the _WinAPI_LookupIconIdFromDirectoryEx() and _WinAPI_LoadResource() functions."},{"label":"$iSize","documentation":"The size, in bytes, of the set of bits pointed to by the $pData parameter."},{"label":"$bIcon","documentation":"**[optional]** Specifies whether an icon or a cursor is to be created, valid values:    True - An icon is to be created (Default).    False - A cursor is to be created."},{"label":"$iXDesiredPixels","documentation":"**[optional]** The desired width, in pixels, of the icon or cursor. If this parameter is zero (Default), the function uses the system metric value to set the width."},{"label":"$iYDesiredPixels","documentation":"**[optional]** The desired height, in pixels, of the icon or cursor. If this parameter is zero (Default), the function uses the system metric value to set the height."},{"label":"$iFlags","documentation":"**[optional]** This parameter can be one or more of the following values.    $LR_DEFAULTCOLOR (Default)    $LR_DEFAULTSIZE    $LR_MONOCHROME    $LR_SHARED"}]},"_WinAPI_CreateIconIndirect":{"documentation":"Creates an icon or cursor that has the specified size, colors, and bit patterns","label":"_WinAPI_CreateIconIndirect ( $hBitmap, $hMask [, $iXHotspot = 0 [, $iYHotspot = 0 [, $bIcon = True]]] )","params":[{"label":"$hBitmap","documentation":"Handle to the icon color bitmap."},{"label":"$hMask","documentation":"Handle to the icon bitmask bitmap."},{"label":"$iXHotspot","documentation":"**[optional]** Specifies the x-coordinate of a cursor\'s hot spot. If creates an icon, the hot spot is always in the center of the icon, and this parameter is ignored. Default is 0."},{"label":"$iYHotspot","documentation":"**[optional]** Specifies the y-coordinate of a cursor\'s hot spot. If creates an icon, the hot spot is always in the center of the icon, and this parameter is ignored. Default is 0."},{"label":"$bIcon","documentation":"**[optional]** Specifies whether creates an icon or a cursor, valid values:    True - Creates an icon (Default).    False - Creates a cursor."}]},"_WinAPI_CreateJobObject":{"documentation":"Creates or opens a job object","label":"_WinAPI_CreateJobObject ( [$sName = \'\' [, $tSecurity = 0]] )","params":[{"label":"$sName","documentation":"**[optional]** The name of the job. Name comparison is case-sensitive. If this parameter is \'\', the job is created without a name."},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that specifies the security descriptor for the job object and determines whether child processes can inherit the returned handle.If this parameter is 0 (Default), the job object gets a default security descriptor and the handle cannot be inherited."}]},"_WinAPI_CreateMargins":{"documentation":"Creates $tagMARGINS structure with specified left, right, top, and bottom retaining borders","label":"_WinAPI_CreateMargins ( $iLeftWidth, $iRightWidth, $iTopHeight, $iBottomHeight )","params":[{"label":"$iLeftWidth","documentation":"The width of the left border that retains its size."},{"label":"$iRightWidth","documentation":"The width of the right border that retains its size."},{"label":"$iTopHeight","documentation":"The height of the top border that retains its size."},{"label":"$iBottomHeight","documentation":"The height of the bottom border that retains its size."}]},"_WinAPI_CreateMRUList":{"documentation":"Creates a new most recently used (MRU) list","label":"_WinAPI_CreateMRUList ( $hKey, $sSubKey [, $iMax = 26] )","params":[{"label":"$hKey","documentation":"Handle to the currently open key, or one of the following predefined values under which to store the MRU data.$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE"},{"label":"$sSubKey","documentation":"The subkey under which to store the MRU data."},{"label":"$iMax","documentation":"**[optional]** The maximum number of entries in the MRU list. Default is 26 (A..Z)."}]},"_WinAPI_CreateMutex":{"documentation":"Creates or opens a named or unnamed mutex object","label":"_WinAPI_CreateMutex ( $sMutex [, $bInitial = True [, $tSecurity = 0]] )","params":[{"label":"$sMutex","documentation":"The name of the mutex object. Name comparisons are case sensitive."},{"label":"$bInitial","documentation":"**[optional]** Specifies whether the calling process obtains the initial ownership of the mutex object, valid values:    True - The calling thread obtains initial ownership of the mutex object (Default).    False - The calling thread does not obtain ownership of the mutex object."},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new mutex.If this parameter is 0 (Default), the mutex gets a default security descriptor."}]},"_WinAPI_CreateNullRgn":{"documentation":"Creates an empty region","label":"_WinAPI_CreateNullRgn (  )","params":[]},"_WinAPI_CreateNumberFormatInfo":{"documentation":"Creates a $tagNUMBERFMT structure with the specified number formatting information","label":"_WinAPI_CreateNumberFormatInfo ( $iNumDigits, $iLeadingZero, $iGrouping, $sDecimalSep, $sThousandSep, $iNegativeOrder )","params":[{"label":"$iNumDigits","documentation":"The number of fractional digits placed after the decimal separator."},{"label":"$iLeadingZero","documentation":"Specifier for leading zeros in decimal fields, valid values:    0 - No leading zeros.    1 - Leading zeros."},{"label":"$iGrouping","documentation":"The number of digits in each group of numbers to the left of the decimal separator.The values in the range 0 through 9 and 32 are valid.Typical examples are:    0 to group digits as in 123456789.00;    3 to group digits as in 123,456,789.00;    and 32 to group digits as in 12,34,56,789.00."},{"label":"$sDecimalSep","documentation":"The decimal separator string."},{"label":"$sThousandSep","documentation":"The thousand separator string."},{"label":"$iNegativeOrder","documentation":"The negative number mode, valid values:    0 - Left parenthesis, number, right parenthesis; for example, (1.1).    1 - Negative sign, number; for example, -1.1.    2 - Negative sign, space, number; for example, - 1.1.    3 - Number, negative sign; for example, 1.1-.    4 - Number, space, negative sign; for example, 1.1 -."}]},"_WinAPI_CreateObjectID":{"documentation":"Creates or retrieves the object identifier for the specified file or directory","label":"_WinAPI_CreateObjectID ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"Path to the file or directory to create or retrieve object identifier."}]},"_WinAPI_CreatePen":{"documentation":"Creates a logical pen that has the specified style, width, and color","label":"_WinAPI_CreatePen ( $iPenStyle, $iWidth, $iColor )","params":[{"label":"$iPenStyle","documentation":"Specifies the pen style. It can be any one of the following values.PS_SOLID - The pen is solid.PS_DASH - The pen is dashed. This style is valid only when the pen width is one or less in device units.PS_DOT - The pen is dotted. This style is valid only when the pen width is one or less in device units.PS_DASHDOT - The pen has alternating dashes and dots. This style is valid only when the pen width is one or less in device units.PS_DASHDOTDOT - The pen has alternating dashes and double dots. This style is valid only when the pen width is one or less in device units.PS_NULL - The pen is invisible.PS_INSIDEFRAME - The pen is solid. When this pen is used in any GDI drawing function that takes a bounding rectangle, the dimensions of the figure are shrunk so that it fits entirely in the bounding rectangle, taking into account the width of the pen. This applies only to geometric pens."},{"label":"$iWidth","documentation":"Specifies the width of the pen, in logical units."},{"label":"$iColor","documentation":"Specifies the color of the pen (BGR)"}]},"_WinAPI_CreatePoint":{"documentation":"Creates $tagPOINT structure with the x- and y-coordinates of the specified point","label":"_WinAPI_CreatePoint ( $iX, $iY )","params":[{"label":"$iX","documentation":"The x-coordinate of the point."},{"label":"$iY","documentation":"The y-coordinate of the point."}]},"_WinAPI_CreatePolygonRgn":{"documentation":"Creates a polygonal region","label":"_WinAPI_CreatePolygonRgn ( Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1 [, $iMode = 1]]] )","params":[{"label":"$aPoint","documentation":"The 2D array ([x1, y1], [x2, y2], ... [xN, yN]) that contains the vertices of the polygon in logical units.The polygon is presumed closed. Each vertex can be specified only once."},{"label":"$iStart","documentation":"**[optional]** The index of array to start creating at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop creating at."},{"label":"$iMode","documentation":"**[optional]** The fill mode used to determine which pixels are in the region. This parameter can be one of the following values:    $ALTERNATE (Default)    $WINDING"}]},"_WinAPI_CreateProcess":{"documentation":"Creates a new process and its primary thread","label":"_WinAPI_CreateProcess ( $sAppName, $sCommand, $tSecurity, $tThread, $bInherit, $iFlags, $pEnviron, $sDir, $tStartupInfo, $tProcess )","params":[{"label":"$sAppName","documentation":"The name of the module to be executed"},{"label":"$sCommand","documentation":"The command line to be executed"},{"label":"$tSecurity","documentation":"a $tagSECURITY_ATTRIBUTES structure or a pointer to it that determines whether the returned handle to the new process can be inherited by child processes."},{"label":"$tThread","documentation":"a $tagSECURITY_ATTRIBUTES structure or a pointer to it that determines whether the returned handle to the new thread can be inherited by child processes."},{"label":"$bInherit","documentation":"If True, each inheritable handle in the calling process is inherited by the new process"},{"label":"$iFlags","documentation":"Flags that control the priority class and creation of the process"},{"label":"$pEnviron","documentation":"Pointer to the environment block for the new process"},{"label":"$sDir","documentation":"The full path to the current directory for the process"},{"label":"$tStartupInfo","documentation":"a $tagSTARTUPINFO structure or a pointer to it"},{"label":"$tProcess","documentation":"a $tagPROCESS_INFORMATION structure or a pointer to it"}]},"_WinAPI_CreateProcessWithToken":{"documentation":"Creates a new process and its primary thread in the security context of the specified token","label":"_WinAPI_CreateProcessWithToken ( $sApp, $sCmd, $iFlags, $tStartupInfo, $tProcessInfo, $hToken [, $iLogon = 0 [, $pEnvironment = 0 [, $sDir = \'\']]] )","params":[{"label":"$sApp","documentation":"The name of the module to be executed. If this parameter is an empty string, the module name must be the first white space–delimited token in the command line string."},{"label":"$sCmd","documentation":"The command line to be executed. If this parameter is an empty string, the function uses the module name as the command line."},{"label":"$iFlags","documentation":"The flags that control how the process is created.The $CREATE_DEFAULT_ERROR_MODE, $CREATE_NEW_CONSOLE, and $CREATE_NEW_PROCESS_GROUP are enabled by default.You can specify additional flags as noted:    $CREATE_DEFAULT_ERROR_MODE    $CREATE_NEW_CONSOLE    $CREATE_NEW_PROCESS_GROUP    $CREATE_SEPARATE_WOW_VDM    $CREATE_SUSPENDED    $CREATE_UNICODE_ENVIRONMENT"},{"label":"$tStartupInfo","documentation":"a $tagSTARTUPINFO structure or a pointer to it."},{"label":"$tProcessInfo","documentation":"a $tagPROCESS_INFORMATION structure or a pointer to it that receives information for the new process, including a handle to the process."},{"label":"$hToken","documentation":"A handle to the primary token that represents a user. The handle must have the $TOKEN_QUERY, $TOKEN_DUPLICATE, and $TOKEN_ASSIGN_PRIMARY access rights."},{"label":"$iLogon","documentation":"**[optional]** The logon option. This parameter can be zero or one of the following values:    $LOGON_WITH_PROFILE    $LOGON_NETCREDENTIALS_ONLY"},{"label":"$pEnvironment","documentation":"**[optional]** A pointer to an environment block for the new process."},{"label":"$sDir","documentation":"**[optional]** The path to the current directory for the process.If this parameter is an empty string (Default), the new process will have the same current drive and directory as the calling process."}]},"_WinAPI_CreateRect":{"documentation":"Creates $tagRECT structure with the coordinates of the specified rectangle","label":"_WinAPI_CreateRect ( $iLeft, $iTop, $iRight, $iBottom )","params":[{"label":"$iLeft","documentation":"The x-coordinate of the upper-left corner of the rectangle."},{"label":"$iTop","documentation":"The y-coordinate of the upper-left corner of the rectangle."},{"label":"$iRight","documentation":"The x-coordinate of the lower-right corner of the rectangle."},{"label":"$iBottom","documentation":"The y-coordinate of the lower-right corner of the rectangle."}]},"_WinAPI_CreateRectEx":{"documentation":"Creates $tagRECT structure with the coordinates of the specified rectangle","label":"_WinAPI_CreateRectEx ( $iX, $iY, $iWidth, $iHeight )","params":[{"label":"$iX","documentation":"The x-coordinate of the upper-left corner of the rectangle."},{"label":"$iY","documentation":"The y-coordinate of the upper-left corner of the rectangle."},{"label":"$iWidth","documentation":"The width of the rectangle."},{"label":"$iHeight","documentation":"The height of the rectangle."}]},"_WinAPI_CreateRectRgn":{"documentation":"Creates a rectangular region","label":"_WinAPI_CreateRectRgn ( $iLeftRect, $iTopRect, $iRightRect, $iBottomRect )","params":[{"label":"$iLeftRect","documentation":"X-coordinate of the upper-left corner of the region"},{"label":"$iTopRect","documentation":"Y-coordinate of the upper-left corner of the region"},{"label":"$iRightRect","documentation":"X-coordinate of the lower-right corner of the region"},{"label":"$iBottomRect","documentation":"Y-coordinate of the lower-right corner of the region"}]},"_WinAPI_CreateRectRgnIndirect":{"documentation":"Creates a rectangular region","label":"_WinAPI_CreateRectRgnIndirect ( $tRECT )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that contains the coordinates of the upper-left and lower-right corners of the rectangle that defines the region in logical units."}]},"_WinAPI_CreateRoundRectRgn":{"documentation":"Creates a rectangular region with rounded corners","label":"_WinAPI_CreateRoundRectRgn ( $iLeftRect, $iTopRect, $iRightRect, $iBottomRect, $iWidthEllipse, $iHeightEllipse )","params":[{"label":"$iLeftRect","documentation":"X-coordinate of the upper-left corner of the region"},{"label":"$iTopRect","documentation":"Y-coordinate of the upper-left corner of the region"},{"label":"$iRightRect","documentation":"X-coordinate of the lower-right corner of the region"},{"label":"$iBottomRect","documentation":"Y-coordinate of the lower-right corner of the region"},{"label":"$iWidthEllipse","documentation":"Width of the ellipse used to create the rounded corners"},{"label":"$iHeightEllipse","documentation":"Height of the ellipse used to create the rounded corners"}]},"_WinAPI_CreateSemaphore":{"documentation":"Creates or opens a named or unnamed semaphore object","label":"_WinAPI_CreateSemaphore ( $sSemaphore, $iInitial, $iMaximum [, $tSecurity = 0] )","params":[{"label":"$sSemaphore","documentation":"The name of the semaphore to be opened. Name comparisons are case sensitive."},{"label":"$iInitial","documentation":"The initial count for the semaphore object. This value must be greater than or equal to zero and less than or equal to $iMaximum."},{"label":"$iMaximum","documentation":"The maximum count for the semaphore object. This value must be greater than zero."},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new semaphore.If this parameter is 0 (Default), the semaphore gets a default security descriptor."}]},"_WinAPI_CreateSize":{"documentation":"Creates $tagSIZE structure with the width and height of the specified rectangle","label":"_WinAPI_CreateSize ( $iWidth, $iHeight )","params":[{"label":"$iWidth","documentation":"The width of the rectangle."},{"label":"$iHeight","documentation":"The height of the rectangle."}]},"_WinAPI_CreateSolidBitmap":{"documentation":"Creates a solid color bitmap","label":"_WinAPI_CreateSolidBitmap ( $hWnd, $iColor, $iWidth, $iHeight [, $bRGB = 1] )","params":[{"label":"$hWnd","documentation":"Handle to the window where the bitmap will be displayed"},{"label":"$iColor","documentation":"The color of the bitmap, stated in RGB"},{"label":"$iWidth","documentation":"The width of the bitmap"},{"label":"$iHeight","documentation":"The height of the bitmap"},{"label":"$bRGB","documentation":"**[optional]** If True converts to COLOREF (0x00bbggrr)"}]},"_WinAPI_CreateSolidBrush":{"documentation":"Creates a logical brush that has the specified solid color","label":"_WinAPI_CreateSolidBrush ( $iColor )","params":[{"label":"$iColor","documentation":"Specifies the color of the brush"}]},"_WinAPI_CreateStreamOnHGlobal":{"documentation":"Creates a stream object that uses a memory handle to store the stream contents","label":"_WinAPI_CreateStreamOnHGlobal ( [$hGlobal = 0 [, $bDeleteOnRelease = True]] )","params":[{"label":"$hGlobal","documentation":"**[optional]** The memory handle, or if 0 (Default) a new handle is to be allocated instead. The handle must be allocated as moveable and nondiscardable."},{"label":"$bDeleteOnRelease","documentation":"**[optional]** Specifies whether the underlying handle for this stream object should be automatically freed when the stream object is released, valid values:    True - The final release will automatically free the $hGlobal parameter (Default).    False - The user must free the $hGlobal after the final release."}]},"_WinAPI_CreateString":{"documentation":"Copies a specified string to the newly allocated memory block and returns its pointer","label":"_WinAPI_CreateString ( $sString [, $pString = 0 [, $iLength = -1 [, $bUnicode = True [, $bAbort = True]]]] )","params":[{"label":"$sString","documentation":"The source string to be copied."},{"label":"$pString","documentation":"**[optional]** A pointer to the existing string that to be replaced by a new string.If this parameter is a valid string pointer, the memory will be reallocated for a new string.However, the new memory is allocated at a different location. Therefore, you should always use the pointer that returns this function.If this parameter is 0 (Default) or invalid string pointer, the function just allocates a new memory."},{"label":"$iLength","documentation":"**[optional]** The required buffer length, in TCHARs, without null-terminating character.If this parameter is (-1), the buffer length will be equal to the length of the source string.If $iLength is less than a source string, the string will be truncated to the specified length. Default is 1."},{"label":"$bUnicode","documentation":"**[optional]** Specifies whether a string is Unicode or ASCII code of a character, valid values:    True - Unicode (Default).    False - ASCII."},{"label":"$bAbort","documentation":"**[optional]** Specifies whether to exit the script if not enough memory, valid values:    True - Displaying an error message and exit the script with error code 1 (Default).    False - Continue the script and return an error."}]},"_WinAPI_CreateSymbolicLink":{"documentation":"Creates a symbolic link","label":"_WinAPI_CreateSymbolicLink ( $sSymlink, $sTarget [, $bDirectory = False] )","params":[{"label":"$sSymlink","documentation":"The name of the new file."},{"label":"$sTarget","documentation":"The name of the existing file."},{"label":"$bDirectory","documentation":"**[optional]** Specifies whether the link target is a directory.    True - The link target is a directory.    False - The link target is a file (Default)."}]},"_WinAPI_CreateTransform":{"documentation":"Creates $tagXFORM structure specifies a world-space to page-space transformation","label":"_WinAPI_CreateTransform ( [$nM11 = 1 [, $nM12 = 0 [, $nM21 = 0 [, $nM22 = 1 [, $nDX = 0 [, $nDY = 0]]]]]] )","params":[{"label":"$nM11","documentation":"**[optional]** The following.Rotation - Cosine of rotation angle.Scaling - Horizontal scaling component.Shear - Not used. Reflection - Horizontal component."},{"label":"$nM12","documentation":"**[optional]** The following.Rotation - Sine of the rotation angle.Scaling - Not used. Shear - Horizontal proportionality constant.Reflection - Not used."},{"label":"$nM21","documentation":"**[optional]** The following.Rotation - Negative sine of the rotation angle.Scaling - Not used. Shear - Vertical proportionality constant.Reflection - Not used."},{"label":"$nM22","documentation":"**[optional]** The following.Rotation - Cosine of rotation angle.Scaling - Vertical scaling component.Shear - Not used.Reflection - Vertical reflection component."},{"label":"$nDx","documentation":"**[optional]** The horizontal translation component, in logical units. Default is 0."},{"label":"$nDy","documentation":"**[optional]** The vertical translation component, in logical units. Default is 0."}]},"_WinAPI_CreateWindowEx":{"documentation":"Creates an overlapped, pop-up, or child window","label":"_WinAPI_CreateWindowEx ( $iExStyle, $sClass, $sName, $iStyle, $iX, $iY, $iWidth, $iHeight, $hParent [, $hMenu = 0 [, $hInstance = 0 [, $pParam = 0]]] )","params":[{"label":"$iExStyle","documentation":"Extended window style"},{"label":"$sClass","documentation":"Registered class name"},{"label":"$sName","documentation":"Window name"},{"label":"$iStyle","documentation":"Window style"},{"label":"$iX","documentation":"Horizontal position of window"},{"label":"$iY","documentation":"Vertical position of window"},{"label":"$iWidth","documentation":"Window width"},{"label":"$iHeight","documentation":"Window height"},{"label":"$hParent","documentation":"Handle to parent or owner window"},{"label":"$hMenu","documentation":"**[optional]** Handle to menu or child-window identifier"},{"label":"$hInstance","documentation":"**[optional]** Handle to application instance"},{"label":"$pParam","documentation":"**[optional]** Pointer to window-creation data"}]},"_WinAPI_CreateWindowStation":{"documentation":"Creates a window station object, associates it with the calling process, and assigns it to the current session","label":"_WinAPI_CreateWindowStation ( [$sName = \'\' [, $iAccess = 0 [, $iFlags = 0 [, $tSecurity = 0]]]] )","params":[{"label":"$sName","documentation":"**[optional]** The name of the window station to be created. Window station names are case-insensitive and cannot contain backslash characters (\\\\).Only members of the Administrators group are allowed to specify a name.If this parameter is empty string (Default), the system forms a window station name using the logon session identifier for the calling process."},{"label":"$iAccess","documentation":"**[optional]** The type of access the returned handle has to the window station. This parameter can be one or more of the following values:    $WINSTA_ALL_ACCESS    $WINSTA_ACCESSCLIPBOARD    $WINSTA_ACCESSGLOBALATOMS    $WINSTA_CREATEDESKTOP    $WINSTA_ENUMDESKTOPS    $WINSTA_ENUMERATE    $WINSTA_EXITWINDOWS    $WINSTA_READATTRIBUTES    $WINSTA_READSCREEN    $WINSTA_WRITEATTRIBUTES"},{"label":"$iFlags","documentation":"**[optional]** The optional flags. It can be zero (Default) or the following value:    $CWF_CREATE_ONLY"},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by child processes. If this parameter is 0 (Default), the handle cannot be inherited."}]},"_WinAPI_DecompressBuffer":{"documentation":"Decompresses an entire compressed buffer","label":"_WinAPI_DecompressBuffer ( $pUncompressedBuffer, $iUncompressedSize, $pCompressedBuffer, $iCompressedSize [, $iFormat = 0x0002] )","params":[{"label":"$pUncompressedBuffer","documentation":"A pointer to a caller-allocated buffer that receives the decompressed data from compressed buffer."},{"label":"$iUncompressedSize","documentation":"The size of the uncompressed buffer, in bytes."},{"label":"$pCompressedBuffer","documentation":"A pointer to the buffer that contains the data to decompress."},{"label":"$iCompressedSize","documentation":"The size of the compressed buffer, in bytes."},{"label":"$iFormat","documentation":"**[optional]** The compression format of the data in compressed buffer. This parameter must be one of the following values:    $COMPRESSION_FORMAT_LZNT1 (Default)    $COMPRESSION_FORMAT_XPRESS    $COMPRESSION_FORMAT_XPRESS_HUFF"}]},"_WinAPI_DecryptFile":{"documentation":"Decrypts an encrypted file or directory","label":"_WinAPI_DecryptFile ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file or directory to be decrypted. If $sFilePath specifies a read-only file, the function fails and the last error code is ERROR_FILE_READ_ONLY (6009). If $sFilePath specifies a directory that contains a read-only file, the functions succeeds but the directory is not decrypted."}]},"_WinAPI_DeferWindowPos":{"documentation":"Updates the specified multiple-window-position structure for the specified window","label":"_WinAPI_DeferWindowPos ( $hInfo, $hWnd, $hAfter, $iX, $iY, $iWidth, $iHeight, $iFlags )","params":[{"label":"$hInfo","documentation":"Handle to a multiple-window-position structure that contains size and position information for one or more windows. This structure is returned by _WinAPI_BeginDeferWindowPos() or by the most recent call to _WinAPI_DeferWindowPos()."},{"label":"$hWnd","documentation":"Handle to the window for which update information is stored in the structure.All windows in a multiple-window-position structure must have the same parent."},{"label":"$hAfter","documentation":"Handle to the window that precedes the positioned window in the Z order.This parameter must be a window handle or one of the following values. This parameter is ignored if the $SWP_NOZORDER flag is set in the $iFlags parameter.    $HWND_BOTTOM    $HWND_NOTOPMOST    $HWND_TOP    $HWND_TOPMOST"},{"label":"$iX","documentation":"The x-coordinate of the window\'s upper-left corner."},{"label":"$iY","documentation":"The y-coordinate of the window\'s upper-left corner."},{"label":"$iWidth","documentation":"The window\'s new width, in pixels."},{"label":"$iHeight","documentation":"The window\'s new height, in pixels."},{"label":"$iFlags","documentation":"A combination of the following values that affect the size and position of the window.    $SWP_DRAWFRAME    $SWP_FRAMECHANGED    $SWP_HIDEWINDOW    $SWP_NOACTIVATE    $SWP_NOCOPYBITS    $SWP_NOMOVE    $SWP_NOOWNERZORDER    $SWP_NOREDRAW    $SWP_NOREPOSITION    $SWP_NOSENDCHANGING    $SWP_NOSIZE    $SWP_NOZORDER    $SWP_SHOWWINDOW"}]},"_WinAPI_DefineDosDevice":{"documentation":"Defines, redefines, or deletes MS-DOS device names","label":"_WinAPI_DefineDosDevice ( $sDevice, $iFlags [, $sFilePath = \'\'] )","params":[{"label":"$sDevice","documentation":"The name of the MS-DOS device."},{"label":"$iFlags","documentation":"This parameter can be one or more of the following values.$DDD_EXACT_MATCH_ON_REMOVE$DDD_NO_BROADCAST_SYSTEM$DDD_RAW_TARGET_PATH$DDD_REMOVE_DEFINITION"},{"label":"$sFilePath","documentation":"**[optional]** The path that will implement device."}]},"_WinAPI_DefRawInputProc":{"documentation":"Calls the default raw input procedure to process the raw input messages that an application does not process","label":"_WinAPI_DefRawInputProc ( $paRawInput, $iInput )","params":[{"label":"$paRawInput","documentation":"A pointer to an array of $tagRAWINPUT structures that is returned by _WinAPI_GetRawInputBuffer()."},{"label":"$iInput","documentation":"The number of structures in array."}]},"_WinAPI_DefSubclassProc":{"documentation":"Calls the next handler in a window\'s subclass chain","label":"_WinAPI_DefSubclassProc ( $hWnd, $iMsg, $wParam, $lParam )","params":[{"label":"$hWnd","documentation":"Handle to the window being subclassed."},{"label":"$iMsg","documentation":"The message to be sent."},{"label":"$wParam","documentation":"The message-specific information."},{"label":"$lParam","documentation":"The message-specific information."}]},"_WinAPI_DefWindowProc":{"documentation":"Call the default window procedure to provide default processing","label":"_WinAPI_DefWindowProc ( $hWnd, $iMsg, $wParam, $lParam )","params":[{"label":"$hWnd","documentation":"Handle to the window procedure that received the message"},{"label":"$iMsg","documentation":"Specifies the message"},{"label":"$wParam","documentation":"Specifies additional message information"},{"label":"$lParam","documentation":"Specifies additional message information"}]},"_WinAPI_DefWindowProcW":{"documentation":"Calls the default window procedure to provide default processing for any window messages","label":"_WinAPI_DefWindowProcW ( $hWnd, $iMsg, $wParam, $lParam )","params":[{"label":"$hWnd","documentation":"A handle to the window procedure that received the message."},{"label":"$iMsg","documentation":"The message."},{"label":"$wParam","documentation":"Additional message-specific information. The content of this parameter depends on the message."},{"label":"$lParam","documentation":"Additional message-specific information. The content of this parameter depends on the message."}]},"_WinAPI_DeleteDC":{"documentation":"Deletes the specified device context","label":"_WinAPI_DeleteDC ( $hDC )","params":[{"label":"$hDC","documentation":"Identifies the device context to be deleted"}]},"_WinAPI_DeleteEnhMetaFile":{"documentation":"Deletes an enhanced-format metafile or an enhanced-format metafile handle","label":"_WinAPI_DeleteEnhMetaFile ( $hEmf )","params":[{"label":"$hEmf","documentation":"Handle to an enhanced metafile."}]},"_WinAPI_DeleteFile":{"documentation":"Deletes an existing file","label":"_WinAPI_DeleteFile ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file to be deleted."}]},"_WinAPI_DeleteObject":{"documentation":"Deletes a logical pen, brush, font, bitmap, region, or palette","label":"_WinAPI_DeleteObject ( $hObject )","params":[{"label":"$hObject","documentation":"Identifies a logical pen, brush, font, bitmap, region, or palette"}]},"_WinAPI_DeleteObjectID":{"documentation":"Removes the object identifier from a specified file or directory","label":"_WinAPI_DeleteObjectID ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"Path to the file or directory from the object identifier that is to be deleted."}]},"_WinAPI_DeleteVolumeMountPoint":{"documentation":"Deletes a drive letter or mounted folder","label":"_WinAPI_DeleteVolumeMountPoint ( $sMountedPath )","params":[{"label":"$sMountedPath","documentation":"The drive letter or mounted folder to be deleted (for example, X:\\\\ or Y:\\\\MountX\\\\)."}]},"_WinAPI_DeregisterShellHookWindow":{"documentation":"Unregisters a specified Shell window that is registered to receive Shell hook messages","label":"_WinAPI_DeregisterShellHookWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to unregister from receiving Shell hook messages."}]},"_WinAPI_DestroyCaret":{"documentation":"Destroys the caret\'s current shape, frees the caret from the window, and removes the caret from the screen","label":"_WinAPI_DestroyCaret (  )","params":[]},"_WinAPI_DestroyCursor":{"documentation":"Destroys a cursor and frees any memory the cursor occupied","label":"_WinAPI_DestroyCursor ( $hCursor )","params":[{"label":"$hCursor","documentation":"Handle to the cursor to be destroyed. The cursor must not be in use."}]},"_WinAPI_DestroyIcon":{"documentation":"Destroys an icon and frees any memory the icon occupied","label":"_WinAPI_DestroyIcon ( $hIcon )","params":[{"label":"$hIcon","documentation":"Handle to the icon to be destroyed. The icon must not be in use."}]},"_WinAPI_DestroyWindow":{"documentation":"Destroys the specified window","label":"_WinAPI_DestroyWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to be destroyed"}]},"_WinAPI_DeviceIoControl":{"documentation":"Sends a control code directly to a specified device driver","label":"_WinAPI_DeviceIoControl ( $hDevice, $iControlCode [, $pInBuffer = 0 [, $iInBufferSize = 0 [, $pOutBuffer = 0 [, $iOutBufferSize = 0]]]] )","params":[{"label":"$hDevice","documentation":"Handle to the device on which the operation is to be performed.The device is typically a volume, directory, file, or stream. To retrieve a device handle, use the _WinAPI_CreateFileEx() function.To specify a device name, use the following format:    _WinAPI_CreateFileEx(\\"\\\\\\\\.\\\\DeviceName\\", ...)"},{"label":"$iControlCode","documentation":"The control code for the operation.This value identifies the specific operation to be performed and the type of device on which to perform it."},{"label":"$pInBuffer","documentation":"**[optional]** A pointer to the input buffer that contains the data required to perform the operation."},{"label":"$iInBufferSize","documentation":"**[optional]** The size of the input buffer, in bytes. Default is 0."},{"label":"$pOutBuffer","documentation":"**[optional]** A pointer to the output buffer that is to receive the data returned by the operation."},{"label":"$iOutBufferSize","documentation":"**[optional]** The size of the output buffer, in bytes. Default is 0."}]},"_WinAPI_DisplayStruct":{"documentation":"Displays data from the specified structure or memory address as a list","label":"_WinAPI_DisplayStruct ( $tStruct [, $sStruct = \'\' [, $sTitle = \'\' [, $iItem = 0 [, $iSubItem = 0 [, $iFlags = 0 [, $bTop = True [, $hParent = 0]]]]]]] )","params":[{"label":"$tStruct","documentation":"A structure that was created by DllStructCreate(), or memory address to be display its data."},{"label":"$sStruct","documentation":"**[optional]** A string representing the structure.If $tStruct is a structure, this parameter can be omitted or be an empty string. In this case, the structure will display as \\"byte[n]\\" structure.If $tStruct is a memory address, $sStruct should be a string representing the structure, otherwise, the function fail, and @error set to 10."},{"label":"$sTitle","documentation":"**[optional]** The title of the window, deault is \\"Structure: ListView Display\\"."},{"label":"$iItem","documentation":"**[optional]** The 1-based index or name of the structure member to be selected in the list.If this parameter is 0 (Default), or an incorrect index or name, the first element of the structure will be selected."},{"label":"$iSubItem","documentation":"**[optional]** The 1-based index of the array in the structure member pointed to by the $iItem parameter to be selected.If $iItem was not defined as an array in the $sStruct, or invalid array index, the element pointed to by the $iItem parameter will be selected."},{"label":"$iFlags","documentation":"**[optional]** A set of bit flags that specifies an additional displaying options.This parameter can be 0, or any combination of the following values:    1 - Prevent displaying \\"\\" and \\"\\" fields at the beginning and end of the list.    2 - Prevent displaying \\"\\" fields.    4 - Prevent displaying \\"\\" in \\"Member\\" column of the list if the structure element has no name.    8 - Prevent highlighting structure elements that are defined as an array.    16 - Prevent perceiving structure elements named \\"Reserved*\\" as unused elements.    32 - Prevent using double-click to copy values of the structure elements to the clipboard.    64 - Forced to expand structure elements of BYTE[n] and BOOLEAN[n] types (elements of CHAR[n] and WCHAR[n] types always displays as a string).    128 - Forced to display the values of the structure elements in the hexadecimal representation, if possible.    256 - Forced to return error code instead of displaying a message box if a memory access error occurred.    512 - Forced to disable checking the read access memory allocated to a given structure."},{"label":"$bTop","documentation":"**[optional]** Specifies whether create a window with \\"Always On Top\\" attribute, valid values:    True - The window is created with the $WS_EX_TOPMOST extended style (Default).    False - The window will not have the \\"TOPMOST\\" flag set."},{"label":"$hParent","documentation":"**[optional]** Handle to the parent window."}]},"_WinAPI_DllGetVersion":{"documentation":"Retrieves a DLL-specific version information","label":"_WinAPI_DllGetVersion ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to the DLL file from which information is retrieved."}]},"_WinAPI_DllInstall":{"documentation":"Registers OLE controls such as DLL or ActiveX Controls (OCX) files","label":"_WinAPI_DllInstall ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to the DLL file that will be registered."}]},"_WinAPI_DllUninstall":{"documentation":"Unregisters OLE controls such as DLL or ActiveX Controls (OCX) files","label":"_WinAPI_DllUninstall ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to the DLL file that will be unregistered."}]},"_WinAPI_DPtoLP":{"documentation":"Converts device coordinates into logical coordinates","label":"_WinAPI_DPtoLP ( $hDC, ByRef $tPOINT [, $iCount = 1] )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tPOINT","documentation":"$tagPOINT structure or structure of points (\\"long x1;long y1;...long xN;long yN\\") containing the x- and y-coordinates to be transformed."},{"label":"$iCount","documentation":"**[optional]** The number of points. Default is 1."}]},"_WinAPI_DragAcceptFiles":{"documentation":"Registers whether a window accepts dropped files","label":"_WinAPI_DragAcceptFiles ( $hWnd [, $bAccept = True] )","params":[{"label":"$hWnd","documentation":"Handle to the window that is registering whether it will accept dropped files."},{"label":"$bAccept","documentation":"**[optional]** Specifies whether a window accepts dropped files, valid values:    True - Accept dropped files (Default).    False - Discontinue accepting dropped files."}]},"_WinAPI_DragFinish":{"documentation":"Releases memory that the system allocated for use in transferring file names to the application","label":"_WinAPI_DragFinish ( $hDrop )","params":[{"label":"$hDrop","documentation":"Handle of the drop structure that describes the dropped file. This parameter is passed toWM_DROPFILES message with WPARAM parameter."}]},"_WinAPI_DragQueryFileEx":{"documentation":"Retrieves the names of dropped files that result from a successful drag-and-drop operation","label":"_WinAPI_DragQueryFileEx ( $hDrop [, $iFlag = 0] )","params":[{"label":"$hDrop","documentation":"Handle of the drop structure that describes the dropped file. This parameter is passed toWM_DROPFILES message with WPARAM parameter."},{"label":"$iFlag","documentation":"**[optional]** The flag that specifies whether to return files folders or both, valid values:0 - Return both files and folders (Default).1 - Return files only.2 - Return folders only."}]},"_WinAPI_DragQueryPoint":{"documentation":"Retrieves the position of the mouse pointer at the time a file was dropped during a drag-and-drop operation","label":"_WinAPI_DragQueryPoint ( $hDrop )","params":[{"label":"$hDrop","documentation":"Handle of the drop structure that describes the dropped file. This parameter is passed to WM_DROPFILES message with WPARAM parameter."}]},"_WinAPI_DrawAnimatedRects":{"documentation":"Animates the caption of a window to indicate the opening of an icon or the minimizing or maximizing of a window","label":"_WinAPI_DrawAnimatedRects ( $hWnd, $tRectFrom, $tRectTo )","params":[{"label":"$hWnd","documentation":"Handle to the window whose caption should be animated on the screen."},{"label":"$tRectFrom","documentation":"$tagRECT structure specifying the location and size of the icon or minimized window."},{"label":"$tRectTo","documentation":"$tagRECT structure specifying the location and size of the restored window."}]},"_WinAPI_DrawBitmap":{"documentation":"Draws a bitmap into the specified device context","label":"_WinAPI_DrawBitmap ( $hDC, $iX, $iY, $hBitmap [, $iRop = 0x00CC0020] )","params":[{"label":"$hDC","documentation":"Handle to the device context into which the bitmap will be drawn."},{"label":"$iX","documentation":"Specifies the logical x-coordinate of the upper-left corner of the bitmap."},{"label":"$iY","documentation":"Specifies the logical y-coordinate of the upper-left corner of the bitmap."},{"label":"$hBitmap","documentation":"Handle to the bitmap to be drawn."},{"label":"$iRop","documentation":"**[optional]** The raster-operation code (same as for _WinAPI_BitBlt()). Default is $SRCCOPY."}]},"_WinAPI_DrawEdge":{"documentation":"Draws one or more edges of rectangle","label":"_WinAPI_DrawEdge ( $hDC, $tRECT, $iEdgeType, $iFlags )","params":[{"label":"$hDC","documentation":"Handle to the device context into which the edge is drawn"},{"label":"$tRECT","documentation":"a $tagRECT structure or a pointer to it that contains the logical coordinates of the rectangle"},{"label":"$iEdgeType","documentation":"Specifies the type of inner and outer edges to draw. This parameter must be a combination of one inner-border flag and one outer-border flag.The inner-border flags are as follows:    $BDR_RAISEDINNER - Raised inner edge    $BDR_SUNKENINNER - Sunken inner edgeThe outer-border flags are as follows:    $BDR_RAISEDOUTER - Raised outer edge    $BDR_SUNKENOUTER - Sunken outer edgeAlternatively, the edge parameter can specify one of the following flags:    $EDGE_BUMP - Combination of $BDR_RAISEDOUTER and $BDR_SUNKENINNER    $EDGE_ETCHED - Combination of $BDR_SUNKENOUTER and $BDR_RAISEDINNER    $EDGE_RAISED - Combination of $BDR_RAISEDOUTER and $BDR_RAISEDINNER    $EDGE_SUNKEN - Combination of $BDR_SUNKENOUTER and $BDR_SUNKENINNER"},{"label":"$iFlags","documentation":"Specifies the type of border. This parameter can be a combination of the following values:    $BF_ADJUST - If this flag is passed, shrink the rectangle pointed to by the $pRECT parameter to exclude the edges that were drawn.If this flag is not passed, then do not change the rectangle pointed to by the $pRECT parameter    $BF_BOTTOM - Bottom of border rectangle    $BF_BOTTOMLEFT - Bottom and left side of border rectangle    $BF_BOTTOMRIGHT - Bottom and right side of border rectangle    $BF_DIAGONAL - Diagonal border    $BF_DIAGONAL_ENDBOTTOMLEFT - Diagonal border. The end point is the bottom-left corner of the rectangle; the origin is top-right corner    $BF_DIAGONAL_ENDBOTTOMRIGHT - Diagonal border. The end point is the bottom-right corner of the rectangle; the origin is top-left corner    $BF_DIAGONAL_ENDTOPLEFT - Diagonal border. The end point is the top-left corner of the rectangle; the origin is bottom-right corner    $BF_DIAGONAL_ENDTOPRIGHT - Diagonal border. The end point is the top-right corner of the rectangle; the origin is bottom-left corner    $BF_FLAT - Flat border    $BF_LEFT - Left side of border rectangle    $BF_MIDDLE - Interior of rectangle to be filled    $BF_MONO - One-dimensional border    $BF_RECT - Entire border rectangle    $BF_RIGHT - Right side of border rectangle    $BF_SOFT - Soft buttons instead of tiles    $BF_TOP - Top of border rectangle    $BF_TOPLEFT - Top and left side of border rectangle    $BF_TOPRIGHT - Top and right side of border rectangle"}]},"_WinAPI_DrawFocusRect":{"documentation":"Draws a rectangle in the style used to indicate that the rectangle has the focus","label":"_WinAPI_DrawFocusRect ( $hDC, $tRECT )","params":[{"label":"$hDC","documentation":"A handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that specifies the logical coordinates of the rectangle that is to be drawn."}]},"_WinAPI_DrawFrameControl":{"documentation":"Draws a frame control of the specified type and style","label":"_WinAPI_DrawFrameControl ( $hDC, $tRECT, $iType, $iState )","params":[{"label":"$hDC","documentation":"Handle to the device context into which the frame is drawn"},{"label":"$tRECT","documentation":"a $tagRECT structure or a pointer to it that contains the logical coordinates of the rectangle"},{"label":"$iType","documentation":"Specifies the type of frame control to draw. This parameter can be one of the following values:    $DFC_BUTTON - Standard button    $DFC_CAPTION - Title bar    $DFC_MENU - Menu bar    $DFC_POPUPMENU - Popup menu item    $DFC_SCROLL - Scroll bar"},{"label":"$iState","documentation":"Specifies the initial state of the frame control. If $iType is $DFC_BUTTON, $iState can be one of the following values:    $DFCS_BUTTON3STATE - Three-state button    $DFCS_BUTTONCHECK - Check box    $DFCS_BUTTONPUSH - Push button    $DFCS_BUTTONRADIO - Radio button    $DFCS_BUTTONRADIOIMAGE - Image for radio button (nonsquare needs image)    $DFCS_BUTTONRADIOMASK - Mask for radio button (nonsquare needs mask)If $iType is $DFC_CAPTION, $iState can be one of the following values:    $DFCS_CAPTIONCLOSE - Close button    $DFCS_CAPTIONHELP - Help button    $DFCS_CAPTIONMAX - Maximize button    $DFCS_CAPTIONMIN - Minimize button    $DFCS_CAPTIONRESTORE - Restore buttonIf $iType is $DFC_MENU, $iState can be one of the following values:    $DFCS_MENUARROW - Submenu arrow    $DFCS_MENUARROWRIGHT - Submenu arrow pointing left. This is used for the right-to-left cascading menus used with right-to-left languages such as Arabic or Hebrew    $DFCS_MENUBULLET - Bullet    $DFCS_MENUCHECK - Check markIf $iType is $DFC_SCROLL, $iState can be one of the following values:    $DFCS_SCROLLCOMBOBOX - Combo box scroll bar    $DFCS_SCROLLDOWN - Down arrow of scroll bar    $DFCS_SCROLLLEFT - Left arrow of scroll bar    $DFCS_SCROLLRIGHT - Right arrow of scroll bar    $DFCS_SCROLLSIZEGRIP - Size grip in bottom-right corner of window    $DFCS_SCROLLSIZEGRIPRIGHT - Size grip in bottom-left corner of window. This is used with right-to-left languages such as Arabic or Hebrew    $DFCS_SCROLLUP - Up arrow of scroll barThe following style can be used to adjust the bounding rectangle of the push button:    $DFCS_ADJUSTRECT - Bounding rectangle is adjusted to exclude the surrounding edge of the push buttonOne or more of the following values can be used to set the state of the control to be drawn:    $DFCS_CHECKED - Button is checked    $DFCS_FLAT - Button has a flat border    $DFCS_HOT - Button is hot-tracked    $DFCS_INACTIVE - Button is inactive (grayed)    $DFCS_PUSHED - Button is pushed    $DFCS_TRANSPARENT - The background remains untouched. This flag can only be combined with $DFCS_MENUARROWUP or $DFCS_MENUARROWDOWN"}]},"_WinAPI_DrawIcon":{"documentation":"Draws an icon or cursor into the specified device context","label":"_WinAPI_DrawIcon ( $hDC, $iX, $iY, $hIcon )","params":[{"label":"$hDC","documentation":"Handle to the device context into which the icon or cursor is drawn"},{"label":"$iX","documentation":"X coordinate of the upper-left corner of the icon"},{"label":"$iY","documentation":"Y coordinate of the upper-left corner of the icon"},{"label":"$hIcon","documentation":"Handle to the icon to be drawn"}]},"_WinAPI_DrawIconEx":{"documentation":"Draws an icon or cursor into the specified device context","label":"_WinAPI_DrawIconEx ( $hDC, $iX, $iY, $hIcon [, $iWidth = 0 [, $iHeight = 0 [, $iStep = 0 [, $hBrush = 0 [, $iFlags = 3]]]]] )","params":[{"label":"$hDC","documentation":"Handle to the device context into which the icon or cursor is drawn"},{"label":"$iX","documentation":"X coordinate of the upper-left corner of the icon"},{"label":"$iY","documentation":"Y coordinate of the upper-left corner of the icon"},{"label":"$hIcon","documentation":"Handle to the icon to be drawn"},{"label":"$iWidth","documentation":"**[optional]** Specifies the logical width of the icon or cursor.If this parameter is zero and the $iFlags parameter is \\"default size\\", the function uses the $SM_CXICON or $SM_CXCURSOR system metric value to set the width.If this is zero and \\"default size\\" is not used, the function uses the actual resource width."},{"label":"$iHeight","documentation":"**[optional]** Specifies the logical height of the icon or cursor.If this parameter is zero and the $iFlags parameter is \\"default size\\", the function uses the $SM_CYICON or $SM_CYCURSOR system metric value to set the width.If this is zero and \\"default size\\" is not used, the function uses the actual resource height."},{"label":"$iStep","documentation":"**[optional]** Specifies the index of the frame to draw if $hIcon identifies an animated cursor.This parameter is ignored if $hIcon does not identify an animated cursor."},{"label":"$hBrush","documentation":"**[optional]** Handle to a brush that the system uses for flicker-free drawing.If $hBrush is a valid brush handle, the system creates an offscreen bitmap using the specified brush for the background color, draws the icon or cursor into the bitmap, and then copies the bitmap into the device context identified by $hDC.If $hBrush is 0, the system draws the icon or cursor directly into the device context."},{"label":"$iFlags","documentation":"**[optional]** Specifies the drawing flags. This parameter can be one of the following values:1 - Draws the icon or cursor using the mask2 - Draws the icon or cursor using the image3 - Draws the icon or cursor using the mask and image4 - Draws the icon or cursor using the system default image rather than the user-specified image5 - Draws the icon or cursor using the width and height specified by the system metric values for cursors or icons, if the width and height parameters are set to zero.If this flag is not specified and width and height are set to zero, the function uses the actual resource size.6 - Draws the icon as an unmirrored icon"}]},"_WinAPI_DrawLine":{"documentation":"Draws a line","label":"_WinAPI_DrawLine ( $hDC, $iX1, $iY1, $iX2, $iY2 )","params":[{"label":"$hDC","documentation":"Handle to device context"},{"label":"$iX1","documentation":"X coordinate of the line\'s starting point."},{"label":"$iY1","documentation":"Y coordinate of the line\'s starting point."},{"label":"$iX2","documentation":"X coordinate of the line\'s ending point."},{"label":"$iY2","documentation":"Y coordinate of the line\'s ending point."}]},"_WinAPI_DrawShadowText":{"documentation":"Draws formatted text in the specified rectangle with a drop shadow","label":"_WinAPI_DrawShadowText ( $hDC, $sText, $iRGBText, $iRGBShadow [, $iXOffset = 0 [, $iYOffset = 0 [, $tRECT = 0 [, $iFlags = 0]]]] )","params":[{"label":"$hDC","documentation":"Handle to a device context."},{"label":"$sText","documentation":"The string that contains the text to be drawn."},{"label":"$iRGBText","documentation":"The color of the text, in RGB."},{"label":"$iRGBShadow","documentation":"The color of the shadow, in RGB."},{"label":"$iXOffset","documentation":"**[optional]** The x-coordinate of where the text should begin. Default is 0."},{"label":"$iYOffset","documentation":"**[optional]** The y-coordinate of where the text should begin. Default is 0."},{"label":"$tRECT","documentation":"**[optional]** $tagRECT structure that contains, in logical coordinates, the rectangle in which the text is to be drawn.If this parameter is 0 (Default), the size will be equal size of the device context ($hDC)."},{"label":"$iFlags","documentation":"**[optional]** The flags that specifies how the text is to be drawn. This parameter can be a combination of the formatting text constants ($DT_*)."}]},"_WinAPI_DrawText":{"documentation":"Draws formatted text in the specified rectangle","label":"_WinAPI_DrawText ( $hDC, $sText, ByRef $tRECT, $iFlags )","params":[{"label":"$hDC","documentation":"Identifies the device context"},{"label":"$sText","documentation":"The string to be drawn"},{"label":"$tRECT","documentation":"$tagRECT structure that contains the rectangle for the text"},{"label":"$iFlags","documentation":"Specifies the method of formatting the text:$DT_BOTTOM - Justifies the text to the bottom of the rectangle$DT_CALCRECT - Determines the width and height of the rectangle$DT_CENTER - Centers text horizontally in the rectangle$DT_EDITCONTROL - Duplicates the text-displaying characteristics of a multiline edit control$DT_END_ELLIPSIS - Replaces part of the given string with ellipses if necessary$DT_EXPANDTABS - Expands tab characters$DT_EXTERNALLEADING - Includes the font external leading in line height$DT_HIDEPREFIX - Ignores the ampersand (&) prefix character in the text.The letter that follows will not be underlined, but other mnemonic-prefix characters are still processed.$DT_INTERNAL - Uses the system font to calculate text metrics$DT_LEFT - Aligns text to the left$DT_MODIFYSTRING - Modifies the given string to match the displayed text$DT_NOCLIP - Draws without clipping$DT_NOFULLWIDTHCHARBREAK - Prevents a line break at a DBCS (double-wide character string), so that the line breaking rule is equivalent to SBCS strings.For example, this can be used in Korean windows, for more readability of icon labels.This value has no effect unless $DT_WORDBREAK is specified$DT_NOPREFIX - Turns off processing of prefix characters$DT_PATH_ELLIPSIS - For displayed text, replaces characters in the middle of the string with ellipses so that the result fits in the specified rectangle.If the string contains backslash (\\\\) characters, $DT_PATH_ELLIPSIS preserves as much as possible of the text after the last backslash.The string is not modified unless the $DT_MODIFYSTRING flag is specified$DT_PREFIXONLY - Draws only an underline at the position of the character following the ampersand (&) prefix character.Does not draw any other characters in the string$DT_RIGHT - Aligns text to the right$DT_RTLREADING - Layout in right to left reading order for bi-directional text$DT_SINGLELINE - Displays text on a single line only$DT_TABSTOP - Sets tab stops. Bits 15-8 of $iFlags specify the number of characters for each tab$DT_TOP - Top-justifies text (single line only)$DT_VCENTER - Centers text vertically (single line only)$DT_WORDBREAK - Breaks words$DT_WORD_ELLIPSIS - Truncates any word that does not fit in the rectangle and adds ellipses"}]},"_WinAPI_DuplicateEncryptionInfoFile":{"documentation":"Copies the EFS metadata from one file or directory to another","label":"_WinAPI_DuplicateEncryptionInfoFile ( $sSrcFilePath, $sDestFilePath [, $iCreation = 2 [, $iAttributes = 0 [, $tSecurity = 0]]] )","params":[{"label":"$sSrcFilePath","documentation":"The name of the file or directory from which the EFS metadata is to be copied.This source file or directory must be encrypted."},{"label":"$sDestFilePath","documentation":"The name of the file or directory to which the EFS metadata is to be copied.This destination file or directory does not have to be encrypted before the call to this function.If the source is a file, this parameter must also specify a file, and likewise for directories."},{"label":"$iCreation","documentation":"**[optional]** Specifies how the destination file or directory is to be opened.The following are the valid values of this parameter:    $CREATE_NEW    $CREATE_ALWAYS (Default)"},{"label":"$iAttributes","documentation":"**[optional]** The file attributes of the destination file or directory.The $FILE_READ_ONLY attribute is currently not processed by this function."},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that specifies the security attributes of the destination file or directory, if it does not already exist.If this parameter is 0 (Default), the file or directory gets a default security descriptor.The access-control lists (ACL) in the default security descriptor for a file or directory are inherited from its parent directory."}]},"_WinAPI_DuplicateHandle":{"documentation":"Duplicates an object handle","label":"_WinAPI_DuplicateHandle ( $hSourceProcessHandle, $hSourceHandle, $hTargetProcessHandle, $iDesiredAccess, $iInheritHandle, $iOptions )","params":[{"label":"$hSourceProcessHandle","documentation":"A handle to the process with the handle to be duplicated"},{"label":"$hSourceHandle","documentation":"The handle to be duplicated"},{"label":"$hTargetProcessHandle","documentation":"A handle to the process that is to receive the duplicated handle"},{"label":"$iDesiredAccess","documentation":"The access requested for the new handle"},{"label":"$iInheritHandle","documentation":"A variable that indicates whether the handle is inheritable"},{"label":"$iOptions","documentation":"Optional actions"}]},"_WinAPI_DuplicateTokenEx":{"documentation":"Creates a new primary or impersonation access token that duplicates an existing token","label":"_WinAPI_DuplicateTokenEx ( $hToken, $iAccess, $iLevel [, $iType = 1 [, $tSecurity = 0]] )","params":[{"label":"$hToken","documentation":"A handle to an access token opened with $TOKEN_DUPLICATE access."},{"label":"$iAccess","documentation":"The requested access rights for the new token. To request the same access rights as the existing token, specify zero.To request all access rights that are valid for the caller, specify the $TOKEN_ALL_ACCESS access."},{"label":"$iLevel","documentation":"The security impersonation levels.    $SECURITYANONYMOUS    $SECURITYIDENTIFICATION    $SECURITYIMPERSONATION    $SECURITYDELEGATION"},{"label":"$iType","documentation":"**[optional]** The token type.    $TOKENPRIMARY    $TOKENIMPERSONATION"},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new token and determines whether child processes can inherit the token.If this parameter is 0 (Default), the token gets a default security descriptor and the handle cannot be inherited.If the security descriptor contains a system access control list, the token gets $ACCESS_SYSTEM_SECURITY access right, even if it was not requested."}]},"_WinAPI_DwmDefWindowProc":{"documentation":"Default window procedure for Desktop Window Manager (DWM) hit testing within the non-client area","label":"_WinAPI_DwmDefWindowProc ( $hWnd, $iMsg, $wParam, $lParam )","params":[{"label":"$hWnd","documentation":"A handle to the window procedure that received the message."},{"label":"$iMsg","documentation":"The message."},{"label":"$wParam","documentation":"Additional message-specific information. The content of this parameter depends on the message."},{"label":"$lParam","documentation":"Additional message-specific information. The content of this parameter depends on the message."}]},"_WinAPI_DwmEnableBlurBehindWindow":{"documentation":"Enables the blur effect on a specified window","label":"_WinAPI_DwmEnableBlurBehindWindow ( $hWnd [, $bEnable = True [, $bTransition = False [, $hRgn = 0]]] )","params":[{"label":"$hWnd","documentation":"Handle to the window on which the blur behind data is applied."},{"label":"$bEnable","documentation":"**[optional]** Specifies whether register or unregister the window handle to DWM blur behind, valid values:    True    - Register (Default).    False - Unregister."},{"label":"$bTransition","documentation":"**[optional]** Specifies whether colorize transition to match the maximized windows, valid values:    True    - The window\'s should be colorized.    False - Otherwise (Default)."},{"label":"$hRgn","documentation":"**[optional]** The region within the client area to apply the blur behind.A value of zero (Default) will apply the blur behind the entire client area."}]},"_WinAPI_DwmEnableComposition":{"documentation":"Enables or disables Desktop Window Manager (DWM) composition","label":"_WinAPI_DwmEnableComposition ( $bEnable )","params":[{"label":"$bEnable","documentation":"Specifies whether enable or disable DWM composition, valid values:    True - Enable.    False - Disable."}]},"_WinAPI_DwmExtendFrameIntoClientArea":{"documentation":"Extends the window frame behind the client area","label":"_WinAPI_DwmExtendFrameIntoClientArea ( $hWnd [, $tMARGINS = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the window for which the frame is extended into the client area."},{"label":"$tMARGINS","documentation":"**[optional]** $tagMARGINS structure that describes the margins to use when extending the frame into the client area.Negative margins are used to create the \\"sheet of glass\\" effect where the client area is rendered as a solid surface with no window border (Default)."}]},"_WinAPI_DwmGetColorizationColor":{"documentation":"Retrieves the current color used for Desktop Window Manager (DWM) glass composition","label":"_WinAPI_DwmGetColorizationColor (  )","params":[]},"_WinAPI_DwmGetColorizationParameters":{"documentation":"Retrieves the colorization parameters used for Desktop Window Manager (DWM)","label":"_WinAPI_DwmGetColorizationParameters (  )","params":[]},"_WinAPI_DwmGetWindowAttribute":{"documentation":"Retrieves the current value of a specified attribute applied to the window","label":"_WinAPI_DwmGetWindowAttribute ( $hWnd, $iAttribute )","params":[{"label":"$hWnd","documentation":"Handle to the window for which the attribute data is retrieved."},{"label":"$iAttribute","documentation":"The attribute to retrieve. This parameter can be one of the following values:    $DWMWA_NCRENDERING_ENABLED    $DWMWA_CAPTION_BUTTON_BOUNDS    $DWMWA_EXTENDED_FRAME_BOUNDS"}]},"_WinAPI_DwmInvalidateIconicBitmaps":{"documentation":"Indicates that all previously provided iconic bitmaps from a window, both thumbnails and peek representations, should be refreshed","label":"_WinAPI_DwmInvalidateIconicBitmaps ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window or tab whose bitmaps are being invalidated through this call."}]},"_WinAPI_DwmIsCompositionEnabled":{"documentation":"Determines whether Desktop Window Manager (DWM) composition is enabled","label":"_WinAPI_DwmIsCompositionEnabled (  )","params":[]},"_WinAPI_DwmQueryThumbnailSourceSize":{"documentation":"Returns the source size of the Desktop Window Manager (DWM) thumbnail","label":"_WinAPI_DwmQueryThumbnailSourceSize ( $hThumbnail )","params":[{"label":"$hThumbnail","documentation":"Handle of the thumbnail to retrieve the source window size from."}]},"_WinAPI_DwmRegisterThumbnail":{"documentation":"Creates a Desktop Window Manager (DWM) thumbnail relationship between the destination and source windows","label":"_WinAPI_DwmRegisterThumbnail ( $hDestination, $hSource )","params":[{"label":"$hDestination","documentation":"Handle to the window that will use the DWM thumbnail."},{"label":"$hSource","documentation":"Handle to the window to use as the thumbnail source."}]},"_WinAPI_DwmSetColorizationParameters":{"documentation":"Sets the colorization parameters for Desktop Window Manager (DWM)","label":"_WinAPI_DwmSetColorizationParameters ( $tDWMCP )","params":[{"label":"$tDWMCP","documentation":"$tagDWM_COLORIZATION_PARAMETERS containing the colorization parameters to be set."}]},"_WinAPI_DwmSetIconicLivePreviewBitmap":{"documentation":"Sets a static, iconic bitmap to display a live preview (also known as a Peek preview) of a window or tab","label":"_WinAPI_DwmSetIconicLivePreviewBitmap ( $hWnd, $hBitmap [, $bFrame = False [, $tClient = 0]] )","params":[{"label":"$hWnd","documentation":"Handle to the window or tab."},{"label":"$hBitmap","documentation":"Handle to the device-independent bitmap (DIB) to represent the specified window."},{"label":"$bFrame","documentation":"**[optional]** Specifies whether display a frame around the provided bitmap, valid values:    True - Display frame.    False - Do not display frame (Default)."},{"label":"$tClient","documentation":"**[optional]** $tagPOINT structure that contains The offset of a tab window\'s client region from the host window\'s frame.This offset enables the tab window\'s contents to be drawn correctly in a live preview when it is drawn without its frame."}]},"_WinAPI_DwmSetIconicThumbnail":{"documentation":"Sets a static, iconic bitmap on a window or tab to use as a thumbnail representation","label":"_WinAPI_DwmSetIconicThumbnail ( $hWnd, $hBitmap [, $bFrame = False] )","params":[{"label":"$hWnd","documentation":"Handle to the window or tab."},{"label":"$hBitmap","documentation":"Handle to the device-independent bitmap (DIB) to represent the specified window."},{"label":"$bFrame","documentation":"**[optional]** Specifies whether display a frame around the provided thumbnail, valid values:    True - Display frame.    False - Do not display frame (Default)."}]},"_WinAPI_DwmSetWindowAttribute":{"documentation":"Sets the value of the specified attributes for non-client rendering to apply to the window","label":"_WinAPI_DwmSetWindowAttribute ( $hWnd, $iAttribute, $iData )","params":[{"label":"$hWnd","documentation":"The window handle to apply the given attribute."},{"label":"$iAttribute","documentation":"The attribute to apply to the window. This parameter can be one of the following values:    $DWMWA_NCRENDERING_POLICY    $DWMWA_TRANSITIONS_FORCEDISABLED    $DWMWA_ALLOW_NCPAINT    $DWMWA_NONCLIENT_RTL_LAYOUT    $DWMWA_FORCE_ICONIC_REPRESENTATION    $DWMWA_FLIP3D_POLICYWindows 7 or later    $DWMWA_HAS_ICONIC_BITMAP    $DWMWA_DISALLOW_PEEK    $DWMWA_EXCLUDED_FROM_PEEK"},{"label":"$iData","documentation":"The value of the attribute."}]},"_WinAPI_DwmUnregisterThumbnail":{"documentation":"Removes a Desktop Window Manager (DWM) thumbnail relationship","label":"_WinAPI_DwmUnregisterThumbnail ( $hThumbnail )","params":[{"label":"$hThumbnail","documentation":"Handle to the thumbnail relationship to be removed."}]},"_WinAPI_DwmUpdateThumbnailProperties":{"documentation":"Specifies Desktop Window Manager (DWM) thumbnail properties","label":"_WinAPI_DwmUpdateThumbnailProperties ( $hThumbnail [, $bVisible = True [, $bClientAreaOnly = False [, $iOpacity = 255 [, $tRectDest = 0 [, $tRectSrc = 0]]]]] )","params":[{"label":"$hThumbnail","documentation":"Handle of the thumbnail to retrieve the source window size from."},{"label":"$bVisible","documentation":"**[optional]** Specifies whether make the thumbnail visible or invisible, valid values:    True  - Visible (Default).    False     - Invisible."},{"label":"$bClientAreaOnly","documentation":"**[optional]** Specifies whether use only the thumbnail source\'s client area or entire window, valid values:    True - Use only source\'s client area.    False     - Use entire window (Default)."},{"label":"$iOpacity","documentation":"**[optional]** The opacity with which to render the thumbnail. 0 is fully transparent while 255 (Default) is fully opaque."},{"label":"$tRectDest","documentation":"**[optional]** $tagRECT structure containing the rectangle in the destination window the thumbnail will be rendered.By default, the size of this rectangle equal to the source size of the DWM thumbnail which returns the _WinAPI_DwmQueryThumbnailSourceSize() function."},{"label":"$tRectSrc","documentation":"**[optional]** $tagRECT structure containing the rectangle that specifies the region of the source window to use as the thumbnail.By default, the entire window is used as the thumbnail."}]},"_WinAPI_DWordToFloat":{"documentation":"Converts a value of type DWORD to a value of type FLOAT","label":"_WinAPI_DWordToFloat ( $iValue )","params":[{"label":"$iValue","documentation":"The value to be converted."}]},"_WinAPI_DWordToInt":{"documentation":"Converts a value of type DWORD to a value of type INT","label":"_WinAPI_DWordToInt ( $iValue )","params":[{"label":"$iValue","documentation":"The value to be converted."}]},"_WinAPI_EjectMedia":{"documentation":"Ejects media from a device","label":"_WinAPI_EjectMedia ( $sDrive )","params":[{"label":"$sDrive","documentation":"The drive letter of the CD tray to eject, in the format D:, E:, etc."}]},"_WinAPI_Ellipse":{"documentation":"Draws an ellipse","label":"_WinAPI_Ellipse ( $hDC, $tRECT )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the bounding rectangle."}]},"_WinAPI_EmptyWorkingSet":{"documentation":"Removes as many pages as possible from the working set of the specified process","label":"_WinAPI_EmptyWorkingSet ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_EnableWindow":{"documentation":"Enables or disables mouse and keyboard input to the specified window or control","label":"_WinAPI_EnableWindow ( $hWnd [, $bEnable = True] )","params":[{"label":"$hWnd","documentation":"Handle to the window to be enabled or disabled"},{"label":"$bEnable","documentation":"**[optional]** Specifies whether to enable or disable the window:True - The window or control is enabledFalse - The window or control is disabled"}]},"_WinAPI_EncryptFile":{"documentation":"Encrypts a file or directory","label":"_WinAPI_EncryptFile ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file or directory to be encrypted.If $sFilePath specifies a read-only file, the function fails and the last error code is ERROR_FILE_READ_ONLY (6009).If $sFilePath specifies a directory that contains a read-only file, the functions succeeds but the directory is not encrypted."}]},"_WinAPI_EncryptionDisable":{"documentation":"Disables or enables encryption of the specified directory and the files in it","label":"_WinAPI_EncryptionDisable ( $sDir, $bDisable )","params":[{"label":"$sDir","documentation":"The name of the directory for which to enable or disable encryption.If this parameter specifies a file, the attempt will fail."},{"label":"$bDisable","documentation":"Specifies whether to disable or enable encryption, valid values:    True - Disable.    False - Enable."}]},"_WinAPI_EndDeferWindowPos":{"documentation":"Simultaneously updates the position and size of one or more windows in a single screen-refreshing cycle","label":"_WinAPI_EndDeferWindowPos ( $hInfo )","params":[{"label":"$hInfo","documentation":"Handle to a multiple-window-position structure that contains size and position information for one or more windows.This internal structure is returned by the _WinAPI_BeginDeferWindowPos() function or by the most recent call to the _WinAPI_DeferWindowPos() function."}]},"_WinAPI_EndPaint":{"documentation":"Marks the end of painting in the specified window","label":"_WinAPI_EndPaint ( $hWnd, ByRef $tPAINTSTRUCT )","params":[{"label":"$hWnd","documentation":"Handle to the window that has been repainted."},{"label":"$tPAINTSTRUCT","documentation":"$tagPAINTSTRUCT structure that contains the painting information retrieved by _WinAPI_BeginPaint()."}]},"_WinAPI_EndPath":{"documentation":"Closes a path bracket and selects the path defined by the bracket into the specified device context","label":"_WinAPI_EndPath ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context into which the new path is selected."}]},"_WinAPI_EndUpdateResource":{"documentation":"Commits or discards a changes of the resources within module","label":"_WinAPI_EndUpdateResource ( $hUpdate [, $bDiscard = False] )","params":[{"label":"$hUpdate","documentation":"A module handle returned by the _WinAPI_BeginUpdateResource(), and used by _WinAPI_UpdateResource(), referencing the file to be updated."},{"label":"$bDiscard","documentation":"**[optional]** Specifies whether to write the resource updates to the file, valid values:    True - The changes are discarded.    False - The changes are made: the resource updates will take effect (Default)."}]},"_WinAPI_EnumChildProcess":{"documentation":"Enumerates a child processes that belong to the specified process","label":"_WinAPI_EnumChildProcess ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_EnumChildWindows":{"documentation":"Enumerates a child windows that belong to the specified parent window","label":"_WinAPI_EnumChildWindows ( $hWnd [, $bVisible = True] )","params":[{"label":"$hWnd","documentation":"Handle to the parent window whose child windows are to be enumerated.If this parameter is 0, this function is equivalent to _WinAPI_EnumWindows()."},{"label":"$bVisible","documentation":"**[optional]** Specifies whether enumerates the invisible window, valid values:    True - Enumerate only visible windows (Default).    False - Enumerate all windows."}]},"_WinAPI_EnumDesktops":{"documentation":"Enumerates all desktops associated with the specified window station of the calling process","label":"_WinAPI_EnumDesktops ( $hStation )","params":[{"label":"$hStation","documentation":"Handle to the window station whose desktops are to be enumerated. This handle must have the$WINSTA_ENUMDESKTOPS access right."}]},"_WinAPI_EnumDesktopWindows":{"documentation":"Enumerates all top-level windows associated with the specified desktop","label":"_WinAPI_EnumDesktopWindows ( $hDesktop [, $bVisible = True] )","params":[{"label":"$hDesktop","documentation":"Handle to the desktop whose top-level windows are to be enumerated. This handle must have the$DESKTOP_READOBJECTS access right."},{"label":"$bVisible","documentation":"**[optional]** Specifies whether enumerates the invisible window, valid values:    True - Enumerate only visible windows (Default).    False - Enumerate all windows."}]},"_WinAPI_EnumDeviceDrivers":{"documentation":"Retrieves the load address for each device driver in the system","label":"_WinAPI_EnumDeviceDrivers (  )","params":[]},"_WinAPI_EnumDisplayDevices":{"documentation":"Obtains information about the display devices in a system","label":"_WinAPI_EnumDisplayDevices ( $sDevice, $iDevNum )","params":[{"label":"$sDevice","documentation":"Device name. If blank, the function returns information for the display adapters on the machine based on $iDevNum."},{"label":"$iDevNum","documentation":"0-based index value that specifies the display device of interest"}]},"_WinAPI_EnumDisplayMonitors":{"documentation":"Enumerates display monitors (including invisible pseudo-monitors associated with the mirroring drivers)","label":"_WinAPI_EnumDisplayMonitors ( [$hDC = 0 [, $tRECT = 0]] )","params":[{"label":"$hDC","documentation":"**[optional]** Handle to a display device context that defines the visible region of interest.If it\'s 0 (Default), the visible region of interest is the virtual screen that encompasses all the displays on the desktop."},{"label":"$tRECT","documentation":"**[optional]** $tagRECT structure that specifies a clipping rectangle.This parameter can be 0 (Default) if you don\'t want to clip the specified region."}]},"_WinAPI_EnumDisplaySettings":{"documentation":"Retrieves information about one of the graphics modes for a display device","label":"_WinAPI_EnumDisplaySettings ( $sDevice, $iMode )","params":[{"label":"$sDevice","documentation":"The display device about whose graphics mode the function will obtain information.An empty string specifies the current display device on the computer on which the calling process is running."},{"label":"$iMode","documentation":"The type of information to be retrieved. This value can be a graphics mode index or one of the following values:    $ENUM_CURRENT_SETTINGS    $ENUM_REGISTRY_SETTINGSThe graphics mode indexes start at zero.To obtain information for all of a display device\'s graphics modes, make a series of calls to _WinAPI_EnumDisplaySettings().Set $iMode to zero for the first call, and increment $iMode by one for each subsequent call.Continue calling the function until the return value is zero.When you call _WinAPI_EnumDisplaySettings() with $iMode set to zero, the operating system initializes and caches information about the display device.When you call _WinAPI_EnumDisplaySettings() with $iMode set to a non-zero value, the function returns the information that was cached the last time the function was called with $iMode set to zero."}]},"_WinAPI_EnumDllProc":{"documentation":"Enumerates an exported functions of the specified dynamic-link library (DLL)","label":"_WinAPI_EnumDllProc ( $sFilePath [, $sMask = \'\' [, $iFlags = 0]] )","params":[{"label":"$sFilePath","documentation":"The path to the library.Although this function searches for a file path when it specified as the relative path or the name without a path, will better to specify a fully qualified path to the library for an unequivocal result."},{"label":"$sMask","documentation":"**[optional]** A wildcard string that indicates the function names to be enumerated.This string can optionally contain the wildcards, \\"*\\" and \\"?\\". If this parameter is an empty string or omitted (Default), all the exported functions will be enumerated."},{"label":"$iFlags","documentation":"**[optional]** The optional flags. This parameter can be one or more of the following values:    $SYMOPT_CASE_INSENSITIVE    $SYMOPT_UNDNAME"}]},"_WinAPI_EnumFiles":{"documentation":"Enumerates the files and subdirectories for the specified directory with a name that matches the template","label":"_WinAPI_EnumFiles ( $sDir [, $iFlag = 0 [, $sTemplate = \'\' [, $bExclude = False]]] )","params":[{"label":"$sDir","documentation":"The path to the directory."},{"label":"$iFlag","documentation":"**[optional]** The flag that specifies whether to enumerate files, subdirectories, or both.This parameter can be one of the following values:    0 - Enumerate both files and subdirectories (Default).    1 - Enumerate files only.    2 - Enumerate subdirectories only."},{"label":"$sTemplate","documentation":"**[optional]** A template that using to enumerating files and directories. For example, \\"*.jpe;*.jpeg;*.jpg\\"."},{"label":"$bExclude","documentation":"**[optional]** Specifies whether the specified template is used to exclude files, valid values:    True - The files matching the template will not be enumerated.    False - The only those files that match the template will be enumerated (Default)."}]},"_WinAPI_EnumFileStreams":{"documentation":"Enumerates all streams with a ::$DATA stream type in the specified file or directory","label":"_WinAPI_EnumFileStreams ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to the file or directory. The file must be located on volume with NTFS file system."}]},"_WinAPI_EnumFontFamilies":{"documentation":"Enumerates all uniquely-named fonts in the system that match the specified font characteristics","label":"_WinAPI_EnumFontFamilies ( [$hDC = 0 [, $sFaceName = \'\' [, $iCharSet = 1 [, $iFontType = 0x07 [, $sPattern = \'\' [, $bExclude = False]]]]]] )","params":[{"label":"$hDC","documentation":"**[optional]** A handle to the device context from which to enumerate the fonts.If this parameter is 0, the function uses a DC for the application\'s current screen."},{"label":"$sFaceName","documentation":"**[optional]** The typeface name of the font.If this parameter is an empty string (Default), the function enumerates one font is each available typeface name.If this parameter is a valid typeface name, the function enumerates all fonts with the specified name."},{"label":"$iCharSet","documentation":"**[optional]** The character set. It can be one of the following predefined values.If this parameter is set to $DEFAULT_CHARSET (Default), the function enumerates all uniquely-named fonts in all character sets.If there are two fonts with the same name, only one is enumerated.If this parameter is set to a valid character set value, the function enumerates only fonts in the specified character set.    $ANSI_CHARSET    $BALTIC_CHARSET    $CHINESEBIG5_CHARSET    $DEFAULT_CHARSET (Default)    $EASTEUROPE_CHARSET    $GB2312_CHARSET    $GREEK_CHARSET    $HANGEUL_CHARSET    $MAC_CHARSET    $OEM_CHARSET    $RUSSIAN_CHARSET    $SHIFTJIS_CHARSET    $SYMBOL_CHARSET    $TURKISH_CHARSET    $VIETNAMESE_CHARSETKorean language edition of Windows:    $JOHAB_CHARSETMiddle East language edition of Windows:    $ARABIC_CHARSET    $HEBREW_CHARSETThai language edition of Windows:    $THAI_CHARSET"},{"label":"$iFontType","documentation":"**[optional]** The type of the fonts to enumerating. This parameter can be 0 (vector fonts), (-1) (all fonts), or any combination of the following values.    $DEVICE_FONTTYPE (Default)    $RASTER_FONTTYPE (Default)    $TRUETYPE_FONTTYPE (Default)"},{"label":"$sPattern","documentation":"**[optional]** The pattern string to include (exclude) the fonts in (from) the enumerating.This makes sense only if the typeface name is not specified. This string can contain wildcard characters.The pattern will be ignored if this parameter is omitted or an empty string."},{"label":"$bExclude","documentation":"**[optional]** Specifies whether to use the pattern to exclude the fonts, valid values:    True - Exclude the matching fonts.    False - Include the matching fonts (Default)."}]},"_WinAPI_EnumHardLinks":{"documentation":"Enumerates all the hard links to the specified file","label":"_WinAPI_EnumHardLinks ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to the file whose links are to be enumerated."}]},"_WinAPI_EnumMRUList":{"documentation":"Enumerates the contents of the most recently used (MRU) list","label":"_WinAPI_EnumMRUList ( $hMRU, $iItem )","params":[{"label":"$hMRU","documentation":"Handle of the MRU list, obtained when the list was created."},{"label":"$iItem","documentation":"The item to return. If this value is (-1), the function returns the number of items in the MRU list."}]},"_WinAPI_EnumPageFiles":{"documentation":"Retrieves information for each installed pagefile in the system","label":"_WinAPI_EnumPageFiles (  )","params":[]},"_WinAPI_EnumProcessHandles":{"documentation":"Enumerates a handles that belong to the specified process","label":"_WinAPI_EnumProcessHandles ( [$iPID = 0 [, $iType = 0]] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."},{"label":"$iType","documentation":"**[optional]** The value associated with the type of the objects that should be enumerated.This value depends on the operating system. If this parameter is 0 (Default), all handles of the specified process will be enumerated."}]},"_WinAPI_EnumProcessModules":{"documentation":"Retrieves a handle and name for each module in the specified process","label":"_WinAPI_EnumProcessModules ( [$iPID = 0 [, $iFlag = 0]] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."},{"label":"$iFlag","documentation":"**[optional]** The filter criteria. This parameter is valid only for Windows Vista or later, and can be one of the following values:    $LIST_MODULES_32BIT    $LIST_MODULES_64BIT    $LIST_MODULES_ALL    $LIST_MODULES_DEFAULT (Default)"}]},"_WinAPI_EnumProcessThreads":{"documentation":"Enumerates a threads that belong to the specified process","label":"_WinAPI_EnumProcessThreads ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_EnumProcessWindows":{"documentation":"Enumerates a windows that belong to the specified process","label":"_WinAPI_EnumProcessWindows ( [$iPID = 0 [, $bVisible = True]] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."},{"label":"$bVisible","documentation":"**[optional]** Specifies whether enumerates the invisible window, valid values:    True - Enumerate only visible windows (Default).    False - Enumerate all windows."}]},"_WinAPI_EnumRawInputDevices":{"documentation":"Enumerates the raw input devices attached to the system","label":"_WinAPI_EnumRawInputDevices (  )","params":[]},"_WinAPI_EnumResourceLanguages":{"documentation":"Enumerates a language-specific resources, of the specified type and name, associated with a binary module","label":"_WinAPI_EnumResourceLanguages ( $hModule, $sType, $sName )","params":[{"label":"$hModule","documentation":"The handle to a module to be searched.Also, this parameter can specify the name of the module to load, it must be a full or relative path.If this parameter is 0 or an empty string, that is equivalent to passing in a handle to the module used to create the current process."},{"label":"$sType","documentation":"The type of resource for which the language is being enumerated.It can be a string or an integer value representing a predefined resource type."},{"label":"$sName","documentation":"The name of the resource for which the language is being enumerated.It can be a string or an integer value representing a predefined resource type."}]},"_WinAPI_EnumResourceNames":{"documentation":"Enumerates the resources of a specified type within a binary module","label":"_WinAPI_EnumResourceNames ( $hModule, $sType )","params":[{"label":"$hModule","documentation":"The handle to a module to be searched.Also, this parameter can specify the name of the module to load, it must be a full or relative path.If this parameter is 0 or an empty string, that is equivalent to passing in a handle to the module used to create the current process."},{"label":"$sType","documentation":"The type of the resource for which the name is being enumerated.It can be a string or an integer value representing a predefined resource type."}]},"_WinAPI_EnumResourceTypes":{"documentation":"Enumerates the resource types within a binary module","label":"_WinAPI_EnumResourceTypes ( $hModule )","params":[{"label":"$hModule","documentation":"The handle to a module to be searched.Also, this parameter can specify the name of the module to load, it must be a full or relative path.If this parameter is 0 or an empty string, that is equivalent to passing in a handle to the module used to create the current process."}]},"_WinAPI_EnumSystemGeoID":{"documentation":"Enumerates the geographical location identifiers (GEOID) that are available on the operating system","label":"_WinAPI_EnumSystemGeoID (  )","params":[]},"_WinAPI_EnumSystemLocales":{"documentation":"Enumerates the locales that are either installed on or supported by an operating system","label":"_WinAPI_EnumSystemLocales ( $iFlag )","params":[{"label":"$iFlag","documentation":"The flag specifying the locale identifiers to enumerate.This parameter can have one of the following values:    $LCID_INSTALLED    $LCID_SUPPORTED"}]},"_WinAPI_EnumUILanguages":{"documentation":"Enumerates the user interface languages that are available on the operating system","label":"_WinAPI_EnumUILanguages ( [$iFlag = 0] )","params":[{"label":"$iFlag","documentation":"**[optional]** The flag identifying the language format. This parameter must be 0 or one of the following values Windows Vista or later:    $MUI_LANGUAGE_ID    $MUI_LANGUAGE_NAME"}]},"_WinAPI_EnumWindows":{"documentation":"Enumerates all windows","label":"_WinAPI_EnumWindows ( [$bVisible = True [, $hWnd = Default]] )","params":[{"label":"$bVisible","documentation":"**[optional]** Window selection flag:True - Returns only visible windowsFalse - Returns all windows"},{"label":"$hWnd","documentation":"**[optional]** Handle of the starting windows (default Desktop windows)"}]},"_WinAPI_EnumWindowsPopup":{"documentation":"Enumerates popup windows","label":"_WinAPI_EnumWindowsPopup (  )","params":[]},"_WinAPI_EnumWindowStations":{"documentation":"Enumerates all window stations in the current session","label":"_WinAPI_EnumWindowStations (  )","params":[]},"_WinAPI_EnumWindowsTop":{"documentation":"Enumerates all top level windows","label":"_WinAPI_EnumWindowsTop (  )","params":[]},"_WinAPI_EqualMemory":{"documentation":"Compares two blocks of memory to determine whether the specified number of bytes are identical","label":"_WinAPI_EqualMemory ( $pSource1, $pSource2, $iLength )","params":[{"label":"$pSource1","documentation":"A pointer to the block of memory to compare."},{"label":"$pSource2","documentation":"A pointer to the block of memory that is compared to the block of memory to which $pSource1 points."},{"label":"$iLength","documentation":"The number of bytes to be compared."}]},"_WinAPI_EqualRect":{"documentation":"Determines whether the two specified rectangles are equal","label":"_WinAPI_EqualRect ( $tRECT1, $tRECT2 )","params":[{"label":"$tRECT1","documentation":"$tagRECT structure that contains the logical coordinates of the first rectangle."},{"label":"$tRECT2","documentation":"$tagRECT structure that contains the logical coordinates of the second rectangle."}]},"_WinAPI_EqualRgn":{"documentation":"Checks the two specified regions to determine whether they are identical","label":"_WinAPI_EqualRgn ( $hRgn1, $hRgn2 )","params":[{"label":"$hRgn1","documentation":"Handle to a region."},{"label":"$hRgn2","documentation":"Handle to a region."}]},"_WinAPI_ExcludeClipRect":{"documentation":"Creates a new clipping region that consists of the existing clipping region minus the specified rectangle","label":"_WinAPI_ExcludeClipRect ( $hDC, $tRECT )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the specified rectangle."}]},"_WinAPI_ExpandEnvironmentStrings":{"documentation":"Expands environment variable strings and replaces them with their defined values","label":"_WinAPI_ExpandEnvironmentStrings ( $sString )","params":[{"label":"$sString","documentation":"String to convert for environment variables"}]},"_WinAPI_ExtCreatePen":{"documentation":"Creates a logical cosmetic or geometric pen that has the specified style, width, and brush attributes","label":"_WinAPI_ExtCreatePen ( $iPenStyle, $iWidth, $iBrushStyle, $iRGB [, $iHatch = 0 [, $aUserStyle = 0 [, $iStart = 0 [, $iEnd = -1]]]] )","params":[{"label":"$iPenStyle","documentation":"A combination of type, style, end cap, and join attributes.The values from each category are combined by using the bitwise operation.The pen type can be one of the following values.    $PS_GEOMETRIC    $PS_COSMETICThe pen style can be one of the following values.    $PS_SOLID    $PS_DASH    $PS_DOT    $PS_DASHDOT    $PS_DASHDOTDOT    $PS_NULL    $PS_INSIDEFRAME    $PS_USERSTYLE    $PS_ALTERNATEThe end cap is only specified for geometric pens and can be one of the following values.    $PS_ENDCAP_ROUND    $PS_ENDCAP_SQUARE    $PS_ENDCAP_FLATThe join is only specified for geometric pens and can be one of the following values.    $PS_JOIN_BEVEL    $PS_JOIN_MITER    $PS_JOIN_ROUND"},{"label":"$iWidth","documentation":"The width of the pen.If $PS_GEOMETRIC type is specified, the width is given in logical units, otherwise, the width must be set to 1."},{"label":"$iBrushStyle","documentation":"A brush style. This parameter can be one of the $BS_* constants."},{"label":"$iRGB","documentation":"The color of a pen, in RGB."},{"label":"$iHatch","documentation":"**[optional]** A hatch style. For more information, see _WinAPI_CreateBrushIndirect()."},{"label":"$aUserStyle","documentation":"**[optional]** The array (dash1, space1, dash2, space2, ... dashN, spaceN) that contains the length of the dashes and spaces in a user-defined style. The first value specifies the length of the first dash, the second value specifies the length of the first space, and so on.This parameter is ignored if $PS_USERSTYLE style is not specified. The style count is limited to 16."},{"label":"$iStart","documentation":"**[optional]** The index of array to start filling at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop filling at."}]},"_WinAPI_ExtCreateRegion":{"documentation":"Creates a region from the specified region and transformation data","label":"_WinAPI_ExtCreateRegion ( $tRGNDATA [, $tXFORM = 0] )","params":[{"label":"$tRGNDATA","documentation":"$tagRGNDATA structure that contains the region data in logical units."},{"label":"$tXFORM","documentation":"**[optional]** $tagXFORM structure that defines the transformation to be performed on the region."}]},"_WinAPI_ExtFloodFill":{"documentation":"Fills an area of the display surface with the current brush","label":"_WinAPI_ExtFloodFill ( $hDC, $iX, $iY, $iRGB [, $iType = 0] )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate, in logical units, of the point where filling is to start."},{"label":"$iY","documentation":"The y-coordinate, in logical units, of the point where filling is to start."},{"label":"$iRGB","documentation":"The color of the boundary or of the area to be filled, in RGB.The interpretation of color depends on the value of the $iType parameter."},{"label":"$iType","documentation":"**[optional]** The type of fill operation to be performed.This parameter must be one of the following values:    $FLOODFILLBORDER (Default)    $FLOODFILLSURFACE"}]},"_WinAPI_ExtractIcon":{"documentation":"Extracts an icon from the specified executable file, DLL, or icon file","label":"_WinAPI_ExtractIcon ( $sIcon, $iIndex [, $bSmall = False] )","params":[{"label":"$sIcon","documentation":"The name of an executable file, DLL, or icon file from which icons will be extracted."},{"label":"$iIndex","documentation":"The 0-based index of the icon to extract.If this value is a negative number, the function extracts the icon whose resource identifier is equal to the absolute value of $iIndex."},{"label":"$bSmall","documentation":"**[optional]** Specifies whether to extract a small icon, valid values:    True - Extract a small icon.    False - Extract a large icon (Default)."}]},"_WinAPI_ExtractIconEx":{"documentation":"Creates an array of handles to large or small icons extracted from a file","label":"_WinAPI_ExtractIconEx ( $sFilePath, $iIndex, $paLarge, $paSmall, $iIcons )","params":[{"label":"$sFilePath","documentation":"Name of an executable file, DLL, or icon file from which icons will be extracted"},{"label":"$iIndex","documentation":"Specifies the 0-based index of the first icon to extract"},{"label":"$paLarge","documentation":"Pointer to an array of icon handles that receives handles to the large icons extracted from the file.If this parameter is 0, no large icons are extracted from the file."},{"label":"$paSmall","documentation":"Pointer to an array of icon handles that receives handles to the small icons extracted from the file.If this parameter is 0, no small icons are extracted from the file."},{"label":"$iIcons","documentation":"Specifies the number of icons to extract from the file"}]},"_WinAPI_ExtSelectClipRgn":{"documentation":"Combines the specified region with the current clipping region","label":"_WinAPI_ExtSelectClipRgn ( $hDC, $hRgn [, $iMode = 5] )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$hRgn","documentation":"Handle to the region to be selected. This parameter can only be 0 when the $RGN_COPY mode is specified."},{"label":"$iMode","documentation":"**[optional]** The operation to be performed. It must be one of the following values.$RGN_AND$RGN_COPY (Default)$RGN_DIFF$RGN_OR$RGN_XOR"}]},"_WinAPI_FatalAppExit":{"documentation":"Displays a message box and terminates the application","label":"_WinAPI_FatalAppExit ( $sMessage )","params":[{"label":"$sMessage","documentation":"The string that is displayed in the message box"}]},"_WinAPI_FatalExit":{"documentation":"Transfers execution control to the debugger","label":"_WinAPI_FatalExit ( $iCode )","params":[{"label":"$iCode","documentation":"The error code associated with the exit."}]},"_WinAPI_FileEncryptionStatus":{"documentation":"Retrieves the encryption status of the specified file","label":"_WinAPI_FileEncryptionStatus ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file to retrieve encryption status."}]},"_WinAPI_FileExists":{"documentation":"Tests whether the specified path is existing file","label":"_WinAPI_FileExists ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to the file to test."}]},"_WinAPI_FileIconInit":{"documentation":"Initializes or reinitializes the system image list","label":"_WinAPI_FileIconInit ( [$bRestore = True] )","params":[{"label":"$bRestore","documentation":"**[optional]** Specifies whether to restore the system image cache, valid values:    True - Restore the system image cache from disk (Default).    False - Don\'t restore."}]},"_WinAPI_FileInUse":{"documentation":"Tests whether the specified file in use by another application","label":"_WinAPI_FileInUse ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file to test. If the path specifies a directory, the function fails."}]},"_WinAPI_FillMemory":{"documentation":"Fills a block of memory with the given value","label":"_WinAPI_FillMemory ( $pMemory, $iLength [, $iValue = 0] )","params":[{"label":"$pMemory","documentation":"A pointer to the starting address of a memory to be filled."},{"label":"$iLength","documentation":"The number of bytes to be filled."},{"label":"$iValue","documentation":"**[optional]** The value to fill the memory. Default is 0."}]},"_WinAPI_FillPath":{"documentation":"Closes any open figures in the current path and fills the path\'s interior by using the current brush","label":"_WinAPI_FillPath ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to a device context that contains a valid path."}]},"_WinAPI_FillRect":{"documentation":"Fills a rectangle by using the specified brush","label":"_WinAPI_FillRect ( $hDC, $tRECT, $hBrush )","params":[{"label":"$hDC","documentation":"Handle to the device context"},{"label":"$tRECT","documentation":"a $tagRECT structure or pointer to it that contains the logical coordinates of the rectangle to be filled"},{"label":"$hBrush","documentation":"Handle to the brush used to fill the rectangle"}]},"_WinAPI_FillRgn":{"documentation":"Fills a region by using the specified brush","label":"_WinAPI_FillRgn ( $hDC, $hRgn, $hBrush )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$hRgn","documentation":"Handle to the region to be filled. The region\'s coordinates are presumed to be in logical units."},{"label":"$hBrush","documentation":"Handle to the brush to be used to fill the region."}]},"_WinAPI_FindClose":{"documentation":"Closes a file search handle","label":"_WinAPI_FindClose ( $hSearch )","params":[{"label":"$hSearch","documentation":"The file search handle opened by the _WinAPI_FindFirst... functions."}]},"_WinAPI_FindCloseChangeNotification":{"documentation":"Stops change notification handle monitoring","label":"_WinAPI_FindCloseChangeNotification ( $hChange )","params":[{"label":"$hChange","documentation":"A handle to a change notification handle created by the _WinAPI_FindFirstChangeNotification() function."}]},"_WinAPI_FindExecutable":{"documentation":"Retrieves the name of the executable file associated with the specified file name","label":"_WinAPI_FindExecutable ( $sFileName [, $sDirectory = \\"\\"] )","params":[{"label":"$sFileName","documentation":"Fully qualified path to existing file"},{"label":"$sDirectory","documentation":"**[optional]** Default directory"}]},"_WinAPI_FindFirstChangeNotification":{"documentation":"Creates a change notification handle and sets up initial change notification filter conditions","label":"_WinAPI_FindFirstChangeNotification ( $sDirectory, $iFlags [, $bSubtree = False] )","params":[{"label":"$sDirectory","documentation":"The full path of the directory to be watched."},{"label":"$iFlags","documentation":"The filter conditions that satisfy a change notification wait. This parameter can be one or more of the following values:    $FILE_NOTIFY_CHANGE_FILE_NAME    $FILE_NOTIFY_CHANGE_DIR_NAME    $FILE_NOTIFY_CHANGE_ATTRIBUTES    $FILE_NOTIFY_CHANGE_SIZE    $FILE_NOTIFY_CHANGE_LAST_WRITE    $FILE_NOTIFY_CHANGE_SECURITY"},{"label":"$bSubtree","documentation":"**[optional]** Specifies whether to monitor the subdirectories of the specified directory, valid values:    True - Monitor the directory tree rooted at the specified directory.    False - Monitor only the specified directory (Default)."}]},"_WinAPI_FindFirstFile":{"documentation":"Searches a directory for a file or subdirectory with a name that matches a specific name","label":"_WinAPI_FindFirstFile ( $sFilePath, $tData )","params":[{"label":"$sFilePath","documentation":"The directory or path, and the file name, which can include wildcard characters, for example, an asterisk \\"*\\" or a question mark \\"?\\".If the string ends with a wildcard, period \\".\\", or directory name, the user must have access permissions to the root and all subdirectories on the path."},{"label":"$tData","documentation":"A $tagWIN32_FIND_DATA structure or a pointer to it that receives information about a found file or directory."}]},"_WinAPI_FindFirstFileName":{"documentation":"Creates an enumeration of all the hard links to the specified file","label":"_WinAPI_FindFirstFileName ( $sFilePath, ByRef $sLink )","params":[{"label":"$sFilePath","documentation":"The name of the file."},{"label":"$sLink","documentation":"Returns the first link name found for the specified file."}]},"_WinAPI_FindFirstStream":{"documentation":"Enumerates the first stream with a ::$DATA stream type in the specified file or directory","label":"_WinAPI_FindFirstStream ( $sFilePath, $tData )","params":[{"label":"$sFilePath","documentation":"The fully-qualified file name."},{"label":"$tData","documentation":"A $tagWIN32_FIND_STREAM_DATA structure or a pointer to it that receives information about the stream."}]},"_WinAPI_FindNextChangeNotification":{"documentation":"Requests that the operating system signal a change notification handle the next time it detects an appropriate change","label":"_WinAPI_FindNextChangeNotification ( $hChange )","params":[{"label":"$hChange","documentation":"A handle to a change notification handle created by the _WinAPI_FindFirstChangeNotification() function."}]},"_WinAPI_FindNextFile":{"documentation":"Continues a file or directory search","label":"_WinAPI_FindNextFile ( $hSearch, $tData )","params":[{"label":"$hSearch","documentation":"The search handle returned by a previous call to the _WinAPI_FindFirstFile() function."},{"label":"$tData","documentation":"A $tagWIN32_FIND_DATA structure or a pointer to it that receives information about a found file or directory."}]},"_WinAPI_FindNextFileName":{"documentation":"Continues enumerating the hard links","label":"_WinAPI_FindNextFileName ( $hSearch, ByRef $sLink )","params":[{"label":"$hSearch","documentation":"A handle to the enumeration that is returned by a successful call to _WinAPI_FindFirstFileName() function."},{"label":"$sLink","documentation":"Returns the next link name that was found."}]},"_WinAPI_FindNextStream":{"documentation":"Continues a stream search","label":"_WinAPI_FindNextStream ( $hSearch, $tData )","params":[{"label":"$hSearch","documentation":"The search handle returned by a previous call to the _WinAPI_FindFirstStream() function."},{"label":"$tData","documentation":"A $tagWIN32_FIND_STREAM_DATA structure or a pointer to it that receives information about the stream."}]},"_WinAPI_FindResource":{"documentation":"Determines the location of a resource with the specified type and name in the specified module","label":"_WinAPI_FindResource ( $hInstance, $sType, $sName )","params":[{"label":"$hInstance","documentation":"Handle to the module whose executable file contains the resource.A value of 0 specifies the module handle associated with the image file that the operating system used to create the current process."},{"label":"$sType","documentation":"The type of the resource. This parameter can be string or integer value."},{"label":"$sName","documentation":"The name of the resource. This parameter can be string or integer value."}]},"_WinAPI_FindResourceEx":{"documentation":"Determines the location of the resource with the specified type, name, and language in the specified module","label":"_WinAPI_FindResourceEx ( $hInstance, $sType, $sName, $iLanguage )","params":[{"label":"$hInstance","documentation":"Handle to the module whose executable file contains the resource.A value of 0 specifies the module handle associated with the image file that the operating system used to create the current process."},{"label":"$sType","documentation":"The type of the resource. This parameter can be string or integer value."},{"label":"$sName","documentation":"The name of the resource. This parameter can be string or integer value."},{"label":"$iLanguage","documentation":"The language of the resource."}]},"_WinAPI_FindTextDlg":{"documentation":"Creates a system-defined modeless Find dialog box to search for text in a document","label":"_WinAPI_FindTextDlg ( $hOwner [, $sFindWhat = \'\' [, $iFlags = 0 [, $pFindProc = 0 [, $lParam = 0]]]] )","params":[{"label":"$hOwner","documentation":"A handle to the window that owns the dialog box. The window procedure of the specified window receives FINDMSGSTRING messages from the dialog box. This parameter can be any valid window handle, but it must not be 0."},{"label":"$sFindWhat","documentation":"**[optional]** The search string that is displayed when you initialize the dialog box."},{"label":"$iFlags","documentation":"**[optional]** A set of bit flags that used to initialize the dialog box.The dialog box sets these flags when it sends the FINDMSGSTRING registered message to indicate the user\'s input.This parameter can be one or more of the following values.    $FR_DIALOGTERM    $FR_DOWN    $FR_ENABLEHOOK    $FR_ENABLETEMPLATE    $FR_ENABLETEMPLATEHANDLE    $FR_FINDNEXT    $FR_HIDEUPDOWN    $FR_HIDEMATCHCASE    $FR_HIDEWHOLEWORD    $FR_MATCHCASE    $FR_NOMATCHCASE    $FR_NOUPDOWN    $FR_NOWHOLEWORD    $FR_REPLACE    $FR_REPLACEALL    $FR_SHOWHELP    $FR_WHOLEWORD"},{"label":"$pFindProc","documentation":"**[optional]** Pointer to an hook procedure that can process messages intended for the dialog box.This parameter is ignored unless the $FR_ENABLEHOOK flag is not set.(See MSDN for more information)"},{"label":"$lParam","documentation":"**[optional]** Application-defined data that the system passes to the hook procedure."}]},"_WinAPI_FindWindow":{"documentation":"Retrieves the handle to the top-level window whose class name and window name match","label":"_WinAPI_FindWindow ( $sClassName, $sWindowName )","params":[{"label":"$sClassName","documentation":"A string that specifies the class name or is an atom that identifies the class-name string.If this parameter is an atom, it must be a global atom created by a call to the GlobalAddAtom function.The atom, a 16-bit value, must be placed in the low-order word of the $sClassName string and the high-order word must be zero."},{"label":"$sWindowName","documentation":"A string that specifies the window name. If this parameter is blank, all window names match."}]},"_WinAPI_FlashWindow":{"documentation":"Flashes the specified window one time","label":"_WinAPI_FlashWindow ( $hWnd [, $bInvert = True] )","params":[{"label":"$hWnd","documentation":"Handle to the window to be flashed. The window can be either open or minimized."},{"label":"$bInvert","documentation":"**[optional]** If True, the window is flashed from one state to the other.If False the window is returned to its original state.When an application is minimized and this parameter is True, the taskbar window button flashes active/inactive.If it is False, the taskbar window button flashes inactive, meaning that it does not change colors.It flashes as if it were being redrawn, but it does not provide the visual invert clue to the user."}]},"_WinAPI_FlashWindowEx":{"documentation":"Flashes the specified window","label":"_WinAPI_FlashWindowEx ( $hWnd [, $iFlags = 3 [, $iCount = 3 [, $iTimeout = 0]]] )","params":[{"label":"$hWnd","documentation":"Handle to the window to be flashed. The window can be either open or minimized."},{"label":"$iFlags","documentation":"**[optional]** The flash status. Can be one or more of the following values:    0 - Stop flashing. The system restores the window to its original state.    1 - Flash the window caption    2 - Flash the taskbar button    4 - Flash continuously until stopped    8 - Flash continuously until the window comes to the foreground"},{"label":"$iCount","documentation":"**[optional]** The number of times to flash the window"},{"label":"$iTimeout","documentation":"**[optional]** The rate at which the window is to be flashed, in milliseconds.If 0, the function uses the default cursor blink rate."}]},"_WinAPI_FlattenPath":{"documentation":"Transforms any curves in the path that is selected into the current DC, turning each curve into a sequence of lines","label":"_WinAPI_FlattenPath ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to a device context that contains a valid path."}]},"_WinAPI_FloatToDWord":{"documentation":"Converts a value of type FLOAT to a value of type DWORD","label":"_WinAPI_FloatToDWord ( $iValue )","params":[{"label":"$iValue","documentation":"The value to be converted."}]},"_WinAPI_FloatToInt":{"documentation":"Returns a 4 byte float as an integer value","label":"_WinAPI_FloatToInt ( $nFloat )","params":[{"label":"$nFloat","documentation":"Float value"}]},"_WinAPI_FlushFileBuffers":{"documentation":"Flushes the buffers of a specified file and causes all buffered data to be written","label":"_WinAPI_FlushFileBuffers ( $hFile )","params":[{"label":"$hFile","documentation":"Handle to an open file. The file handle must have the $GENERIC_WRITE access right.If $hFile is a handle to a communications device, the function only flushes the transmit buffer.If $hFile is a handle to the server end of a named pipe the function does not return until the client has read all buffered data from the pipe."}]},"_WinAPI_FlushFRBuffer":{"documentation":"Destroys the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions","label":"_WinAPI_FlushFRBuffer (  )","params":[]},"_WinAPI_FlushViewOfFile":{"documentation":"Writes to the disk a byte range within a mapped view of a file","label":"_WinAPI_FlushViewOfFile ( $pAddress [, $iBytes = 0] )","params":[{"label":"$pAddress","documentation":"A pointer to the base address of the byte range to be flushed to the disk representation of the mapped file."},{"label":"$iBytes","documentation":"**[optional]** The number of bytes to be flushed.If $iBytes is 0 (Default), the file is flushed from the base address to the end of the mapping."}]},"_WinAPI_FormatDriveDlg":{"documentation":"Opens the Shell\'s Format dialog","label":"_WinAPI_FormatDriveDlg ( $sDrive [, $iOption = 0 [, $hParent = 0]] )","params":[{"label":"$sDrive","documentation":"The drive to format, in the format D:, E:, etc."},{"label":"$iOption","documentation":"**[optional]** This parameter must be 0 or one of the following values that alter the default format options in the dialog.    $SHFMT_OPT_FULL (Default)    $SHFMT_OPT_QUICKFORMAT    $SHFMT_OPT_SYSONLY"},{"label":"$hParent","documentation":"**[optional]** Handle of the parent window of the dialog."}]},"_WinAPI_FormatMessage":{"documentation":"Formats a message string","label":"_WinAPI_FormatMessage ( $iFlags, $pSource, $iMessageID, $iLanguageID, ByRef $pBuffer, $iSize, $vArguments )","params":[{"label":"$iFlags","documentation":"Contains a set of bit flags that specify aspects of the formatting process and how to interpret the $pSource parameter.The low-order byte of $iFlags specifies how the function handles line breaks in the output buffer.The low-order byte can also specify the maximum width of a formatted output line."},{"label":"$pSource","documentation":"Pointer to message source"},{"label":"$iMessageID","documentation":"Requested message identifier"},{"label":"$iLanguageID","documentation":"Language identifier for requested message"},{"label":"$pBuffer","documentation":"Pointer to message buffer or string variable that will contain the message"},{"label":"$iSize","documentation":"Maximum size of message buffer"},{"label":"$vArguments","documentation":"Address of array of message inserts"}]},"_WinAPI_FrameRect":{"documentation":"Draws a border around the specified rectangle by using the specified brush","label":"_WinAPI_FrameRect ( $hDC, $tRECT, $hBrush )","params":[{"label":"$hDC","documentation":"Handle to the device context in which the border is drawn"},{"label":"$tRECT","documentation":"A $tagRECT structure or a pointer to it that contains the logical coordinates of the upper-left and lower-right corners of the rectangle"},{"label":"$hBrush","documentation":"Handle to the brush used to draw the border"}]},"_WinAPI_FrameRgn":{"documentation":"Draws a border around the specified region by using the specified brush","label":"_WinAPI_FrameRgn ( $hDC, $hRgn, $hBrush, $iWidth, $iHeight )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$hRgn","documentation":"Handle to the region to be enclosed in a border.The region\'s coordinates are presumed to be in logical units."},{"label":"$hBrush","documentation":"Handle to the brush to be used to draw the border."},{"label":"$iWidth","documentation":"The width, in logical units, of vertical brush strokes."},{"label":"$iHeight","documentation":"The height, in logical units, of horizontal brush strokes."}]},"_WinAPI_FreeLibrary":{"documentation":"Decrements the reference count of the loaded dynamic-link library (DLL) module","label":"_WinAPI_FreeLibrary ( $hModule )","params":[{"label":"$hModule","documentation":"Identifies the loaded library module"}]},"_WinAPI_FreeMemory":{"documentation":"Frees a memory block in the internal library heap","label":"_WinAPI_FreeMemory ( $pMemory )","params":[{"label":"$pMemory","documentation":"A pointer to the valid memory block to be freed."}]},"_WinAPI_FreeMRUList":{"documentation":"Frees the handle associated with the most recently used (MRU) list and writes cached data to the registry","label":"_WinAPI_FreeMRUList ( $hMRU )","params":[{"label":"$hMRU","documentation":"Handle of the MRU list to free."}]},"_WinAPI_FreeResource":{"documentation":"Decrements (decreases by one) the reference count of a loaded resource","label":"_WinAPI_FreeResource ( $hData )","params":[{"label":"$hData","documentation":"Handle of the resource was created by _WinAPI_LoadResource()."}]},"_WinAPI_GdiComment":{"documentation":"Copies a comment from a buffer into a specified enhanced-format metafile","label":"_WinAPI_GdiComment ( $hDC, $pBuffer, $iSize )","params":[{"label":"$hDC","documentation":"Handle to an enhanced-metafile device context."},{"label":"$pBuffer","documentation":"A pointer to the buffer that contains the comment."},{"label":"$iSize","documentation":"The length of the comment buffer, in bytes."}]},"_WinAPI_GetActiveWindow":{"documentation":"Retrieves the window handle to the active window attached to the calling process\'s message queue","label":"_WinAPI_GetActiveWindow (  )","params":[]},"_WinAPI_GetAllUsersProfileDirectory":{"documentation":"Retrieves the path to the root of the directory that contains program data shared by all users","label":"_WinAPI_GetAllUsersProfileDirectory (  )","params":[]},"_WinAPI_GetAncestor":{"documentation":"Retrieves the handle to the ancestor of the specified window","label":"_WinAPI_GetAncestor ( $hWnd [, $iFlags = 1] )","params":[{"label":"$hWnd","documentation":"Handle to the window whose ancestor is to be retrieved.If this is the desktop window, the function returns 0."},{"label":"$iFlags","documentation":"**[optional]** Specifies the ancestor to be retrieved. This parameter can be one of the following values:    $GA_PARENT - Retrieves the parent window    $GA_ROOT - Retrieves the root window by walking the chain of parent windows    $GA_ROOTOWNER - Retrieves the owned root window by walking the chain of parent and owner windows returned by GetParent."}]},"_WinAPI_GetApplicationRestartSettings":{"documentation":"Retrieves the restart information registered for the specified process","label":"_WinAPI_GetApplicationRestartSettings ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetArcDirection":{"documentation":"Retrieves the current arc direction for the specified device context","label":"_WinAPI_GetArcDirection ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetAsyncKeyState":{"documentation":"Determines whether a key is up or down at the time the function is called","label":"_WinAPI_GetAsyncKeyState ( $iKey )","params":[{"label":"$iKey","documentation":"Key to test for"}]},"_WinAPI_GetBinaryType":{"documentation":"Determines whether a file is an executable (.exe) file, and if so, which subsystem runs the executable file","label":"_WinAPI_GetBinaryType ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The full path of the file whose executable type is to be determined."}]},"_WinAPI_GetBitmapBits":{"documentation":"Copies the bitmap bits of a specified device-dependent bitmap into a buffer","label":"_WinAPI_GetBitmapBits ( $hBitmap, $iSize, $pBits )","params":[{"label":"$hBitmap","documentation":"Handle to the device-dependent bitmap."},{"label":"$iSize","documentation":"The number of bytes to copy from the bitmap into the buffer."},{"label":"$pBits","documentation":"A pointer to a buffer to receive the bitmap bits."}]},"_WinAPI_GetBitmapDimension":{"documentation":"Retrieves a dimension of the specified bitmap","label":"_WinAPI_GetBitmapDimension ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"Handle to the bitmap to retrieve dimension."}]},"_WinAPI_GetBitmapDimensionEx":{"documentation":"Retrieves the dimensions of a compatible bitmap","label":"_WinAPI_GetBitmapDimensionEx ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"Handle to a compatible bitmap (DDB)."}]},"_WinAPI_GetBkColor":{"documentation":"Retrieves the current background color for the specified device context","label":"_WinAPI_GetBkColor ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetBkMode":{"documentation":"Returns the current background mix mode for a specified device context","label":"_WinAPI_GetBkMode ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context whose background mode is to be returned"}]},"_WinAPI_GetBoundsRect":{"documentation":"Obtains the current accumulated bounding rectangle for a specified device context","label":"_WinAPI_GetBoundsRect ( $hDC [, $iFlags = 0] )","params":[{"label":"$hDC","documentation":"Handle to the device context whose bounding rectangle the function will return."},{"label":"$iFlags","documentation":"**[optional]** The flags that specifies how the function will behave. This parameter can be the following value:    $DCB_RESET"}]},"_WinAPI_GetBrushOrg":{"documentation":"Retrieves the current brush origin for the specified device context","label":"_WinAPI_GetBrushOrg ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetBValue":{"documentation":"Retrieves an intensity value for the blue component of a 32-bit RGB value","label":"_WinAPI_GetBValue ( $iRGB )","params":[{"label":"$iRGB","documentation":"The color value, in RGB."}]},"_WinAPI_GetCaretBlinkTime":{"documentation":"Returns the time required to invert the caret\'s pixels","label":"_WinAPI_GetCaretBlinkTime (  )","params":[]},"_WinAPI_GetCaretPos":{"documentation":"Retrieves the caret\'s position","label":"_WinAPI_GetCaretPos (  )","params":[]},"_WinAPI_GetCDType":{"documentation":"Retrieves a type of the media which is loaded into a specified CD-ROM device","label":"_WinAPI_GetCDType ( $sDrive )","params":[{"label":"$sDrive","documentation":"The drive letter of the CD tray to retrieve information, in the format D:, E:, etc."}]},"_WinAPI_GetClassInfoEx":{"documentation":"Retrieves information about a window class","label":"_WinAPI_GetClassInfoEx ( $sClass [, $hInstance = 0] )","params":[{"label":"$sClass","documentation":"The class name. The name must be that of a preregistered class or a class registered by a previous call to the _WinAPI_RegisterClass() or _WinAPI_RegisterClassEx() function.Alternatively, this parameter can be a class atom.The atom must be in the low-order word of $sClass; the high-order word must be zero."},{"label":"$hInstance","documentation":"**[optional]** Handle to the instance of the application that created the class.To retrieve information about classes defined by the system (such as buttons or list boxes), set this parameter to 0 (Default)."}]},"_WinAPI_GetClassLongEx":{"documentation":"Retrieves the specified value associated with the specified window","label":"_WinAPI_GetClassLongEx ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle to the window."},{"label":"$iIndex","documentation":"The value to retrieve. This parameter can be one of the following values.$GCL_CBCLSEXTRA$GCL_CBWNDEXTRA$GCL_HBRBACKGROUND$GCL_HCURSOR$GCL_HICON$GCL_HICONSM$GCL_HMODULE$GCL_MENUNAME$GCL_STYLE$GCL_WNDPROC"}]},"_WinAPI_GetClassName":{"documentation":"Retrieves the name of the class to which the specified window belongs","label":"_WinAPI_GetClassName ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of window"}]},"_WinAPI_GetClientHeight":{"documentation":"Retrieves the height of a window\'s client area","label":"_WinAPI_GetClientHeight ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of window"}]},"_WinAPI_GetClientRect":{"documentation":"Retrieves the coordinates of a window\'s client area","label":"_WinAPI_GetClientRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of window"}]},"_WinAPI_GetClientWidth":{"documentation":"Retrieves the width of a window\'s client area","label":"_WinAPI_GetClientWidth ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of window"}]},"_WinAPI_GetClipboardSequenceNumber":{"documentation":"Retrieves the clipboard sequence number for the current window station","label":"_WinAPI_GetClipboardSequenceNumber (  )","params":[]},"_WinAPI_GetClipBox":{"documentation":"Retrieves the dimensions of the bounding rectangle of the visible area","label":"_WinAPI_GetClipBox ( $hDC, ByRef $tRECT )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that is created by this function, and contains the rectangle dimensions, in logical units."}]},"_WinAPI_GetClipCursor":{"documentation":"Retrieves the screen coordinates of the rectangular area to which the cursor is confined","label":"_WinAPI_GetClipCursor (  )","params":[]},"_WinAPI_GetClipRgn":{"documentation":"Retrieves a handle identifying the current application-defined clipping region","label":"_WinAPI_GetClipRgn ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetColorAdjustment":{"documentation":"Retrieves the color adjustment for the specified device context (DC)","label":"_WinAPI_GetColorAdjustment ( $hDC )","params":[{"label":"$hDC","documentation":"A handle to the device context."}]},"_WinAPI_GetCompressedFileSize":{"documentation":"Retrieves the actual number of bytes of disk storage used to store a specified file","label":"_WinAPI_GetCompressedFileSize ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file."}]},"_WinAPI_GetCompression":{"documentation":"Retrieves the current compression state of a file or directory","label":"_WinAPI_GetCompression ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to the file or directory to retrieve compression state."}]},"_WinAPI_GetConnectedDlg":{"documentation":"Launches the Get Connected wizard within the calling application to enable network connectivity","label":"_WinAPI_GetConnectedDlg ( $iDlg [, $iFlags = 0 [, $hParent = 0]] )","params":[{"label":"$iDlg","documentation":"Specifies which the dialog should be launched, valid values:0 - Local area network connectivity.1 - Internet connectivity.2 - Virtual private network (VPN) connectivity."},{"label":"$iFlags","documentation":"**[optional]** Specifies an additional options. This parameter can be one or more of the following values.0 - Default.1 - Do not display the Get Connected wizard page that shows whether or not the user has a working or active Internet connection.2 - Do not display the Get Connected wizard page that shows a list of existing internet connections.4 - Hide the finish page of the Get Connected wizard."},{"label":"$hParent","documentation":"**[optional]** Handle to the parent window that called this API."}]},"_WinAPI_GetCurrentDirectory":{"documentation":"Retrieves the current directory for the current process","label":"_WinAPI_GetCurrentDirectory (  )","params":[]},"_WinAPI_GetCurrentHwProfile":{"documentation":"Retrieves information about the current hardware profile for the local computer","label":"_WinAPI_GetCurrentHwProfile (  )","params":[]},"_WinAPI_GetCurrentObject":{"documentation":"Retrieves a handle to an object of the specified type that has been selected into the specified device context","label":"_WinAPI_GetCurrentObject ( $hDC, $iType )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iType","documentation":"The object type to be queried. This parameter can be one of the following values.$OBJ_BITMAP$OBJ_BRUSH$OBJ_COLORSPACE$OBJ_FONT$OBJ_PAL$OBJ_PEN"}]},"_WinAPI_GetCurrentPosition":{"documentation":"Retrieves the current position for the specified device context","label":"_WinAPI_GetCurrentPosition ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetCurrentProcess":{"documentation":"Returns the process handle of the calling process","label":"_WinAPI_GetCurrentProcess (  )","params":[]},"_WinAPI_GetCurrentProcessExplicitAppUserModelID":{"documentation":"Retrieves the application-defined, explicit Application User Model ID for the current process","label":"_WinAPI_GetCurrentProcessExplicitAppUserModelID (  )","params":[]},"_WinAPI_GetCurrentProcessID":{"documentation":"Returns the process identifier of the calling process","label":"_WinAPI_GetCurrentProcessID (  )","params":[]},"_WinAPI_GetCurrentThread":{"documentation":"Retrieves a pseudo handle for the calling thread","label":"_WinAPI_GetCurrentThread (  )","params":[]},"_WinAPI_GetCurrentThreadId":{"documentation":"Returns the thread identifier of the calling thread","label":"_WinAPI_GetCurrentThreadId (  )","params":[]},"_WinAPI_GetCursor":{"documentation":"Retrieves a handle to the current cursor","label":"_WinAPI_GetCursor (  )","params":[]},"_WinAPI_GetCursorInfo":{"documentation":"Retrieves information about the global cursor","label":"_WinAPI_GetCursorInfo (  )","params":[]},"_WinAPI_GetDateFormat":{"documentation":"Formats a date as a date string for a locale specified by the locale identifier","label":"_WinAPI_GetDateFormat ( [$iLCID = 0 [, $tSYSTEMTIME = 0 [, $iFlags = 0 [, $sFormat = \'\']]]] )","params":[{"label":"$iLCID","documentation":"**[optional]** The locale identifier (LCID) that specifies the locale or one of the following predefined values.    $LOCALE_INVARIANT    $LOCALE_SYSTEM_DEFAULT    $LOCALE_USER_DEFAULT (Default)Windows Vista or later    $LOCALE_CUSTOM_DEFAULT    $LOCALE_CUSTOM_UI_DEFAULT    $LOCALE_CUSTOM_UNSPECIFIED"},{"label":"$tSYSTEMTIME","documentation":"**[optional]** $tagSYSTEMTIME structure that contains the date information to format.If this parameter is 0 (Default), the function will use the current local system date."},{"label":"$iFlags","documentation":"**[optional]** The flags that specifies the date format options.This parameter can be one or more of the following values:    $DATE_LONGDATE    $DATE_SHORTDATE (Default)    $DATE_USE_ALT_CALENDARWindows Vista or later    $DATE_LTRREADING    $DATE_RTLREADING    $DATE_YEARMONTHWindows 7 or later    $DATE_AUTOLAYOUT"},{"label":"$sFormat","documentation":"**[optional]** The string that is used to form the date. For example, \\"dddd MMMM, yyyy\\".If this parameter is omitted or an empty string (Default), the function returns the string according to the date format for the specified locale."}]},"_WinAPI_GetDC":{"documentation":"Retrieves a handle of a display device context for the client area a window","label":"_WinAPI_GetDC ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of window"}]},"_WinAPI_GetDCEx":{"documentation":"Retrieves a handle to a device context (DC) for the client area of a specified window","label":"_WinAPI_GetDCEx ( $hWnd, $hRgn, $iFlags )","params":[{"label":"$hWnd","documentation":"Handle to the window whose DC is to be retrieved.If this value is 0, _WinAPI_GetDCEx() retrieves the DC for the entire screen.If the value of $iFlags parameter is $DCX_INTERSECTRGN or DCX_EXCLUDERGN, then the operating system assumes ownership of the region and will automatically delete it when it is no longer needed.In this case, the application should not use or delete the region after a successful call to _WinAPI_GetDCEx()."},{"label":"$hRgn","documentation":"A clipping region that may be combined with the visible region of the DC."},{"label":"$iFlags","documentation":"Flags that specifies how the DC is created.This parameter can be one or more of the following values:    $DCX_WINDOW    $DCX_CACHE    $DCX_PARENTCLIP    $DCX_CLIPSIBLINGS    $DCX_CLIPCHILDREN    $DCX_NORESETATTRS    $DCX_LOCKWINDOWUPDATE    $DCX_EXCLUDERGN    $DCX_INTERSECTRGN    $DCX_INTERSECTUPDATE    $DCX_VALIDATE"}]},"_WinAPI_GetDefaultPrinter":{"documentation":"Retrieves the printer name of the default printer for the current user on the local computer","label":"_WinAPI_GetDefaultPrinter (  )","params":[]},"_WinAPI_GetDefaultUserProfileDirectory":{"documentation":"Retrieves the path to the root of the default user\'s profile","label":"_WinAPI_GetDefaultUserProfileDirectory (  )","params":[]},"_WinAPI_GetDesktopWindow":{"documentation":"Returns the handle of the Windows desktop window","label":"_WinAPI_GetDesktopWindow (  )","params":[]},"_WinAPI_GetDeviceCaps":{"documentation":"Retrieves device specific information about a specified device","label":"_WinAPI_GetDeviceCaps ( $hDC, $iIndex )","params":[{"label":"$hDC","documentation":"Identifies the device context"},{"label":"$iIndex","documentation":"Specifies the item to return"}]},"_WinAPI_GetDeviceDriverBaseName":{"documentation":"Retrieves the base name of the specified device driver","label":"_WinAPI_GetDeviceDriverBaseName ( $pDriver )","params":[{"label":"$pDriver","documentation":"The load address of the device driver. This value can be retrieved using the _WinAPI_EnumDeviceDrivers() function."}]},"_WinAPI_GetDeviceDriverFileName":{"documentation":"Retrieves the path available for the specified device driver","label":"_WinAPI_GetDeviceDriverFileName ( $pDriver )","params":[{"label":"$pDriver","documentation":"The load address of the device driver. This value can be retrieved using the _WinAPI_EnumDeviceDrivers() function."}]},"_WinAPI_GetDeviceGammaRamp":{"documentation":"Gets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware","label":"_WinAPI_GetDeviceGammaRamp ( $hDC, ByRef $aRamp )","params":[{"label":"$hDC","documentation":"Handle to a device context of the direct color display board in question."},{"label":"$aRamp","documentation":"Returns the 2D array ([r1, g1, b1], [r2, g2, b2], ... [r256, g256, b256]) that is created by this function, and where the function place the current gamma ramp of the color display board.Each element in this array is an integer value with a range from 0 to 65535 which is a mapping between RGB values in the frame buffer and digital-analog-converter (DAC) values.(See MSDN for more information)"}]},"_WinAPI_GetDIBColorTable":{"documentation":"Retrieves RGB color table from the DIB section bitmap","label":"_WinAPI_GetDIBColorTable ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"A DIB section bitmap from which to retrieve the color table."}]},"_WinAPI_GetDIBits":{"documentation":"Retrieves the bits of the specified bitmap and copies them into a buffer as a DIB","label":"_WinAPI_GetDIBits ( $hDC, $hBitmap, $iStartScan, $iScanLines, $pBits, $tBI, $iUsage )","params":[{"label":"$hDC","documentation":"Handle to the device context"},{"label":"$hBitmap","documentation":"Handle to the bitmap. This must be a compatible bitmap (DDB)."},{"label":"$iStartScan","documentation":"Specifies the first scan line to retrieve"},{"label":"$iScanLines","documentation":"Specifies the number of scan lines to retrieve"},{"label":"$pBits","documentation":"Pointer to a buffer to receive the bitmap data.If this parameter is 0, the function passes the dimensions and format of the bitmap to the $tagBITMAPINFO structure pointed to by the $tBI parameter."},{"label":"$tBI","documentation":"A $tagBITMAPINFO structure or a pointer to it that specifies the desired format for the DIB data"},{"label":"$iUsage","documentation":"Specifies the format of the bmiColors member of the $tagBITMAPINFO structure.It must be one of the following values:    $DIB_PAL_COLORS - The color table should consist of an array of 16-bit indexes into the current palette    $DIB_RGB_COLORS - The color table should consist of literal red, green, blue values"}]},"_WinAPI_GetDiskFreeSpaceEx":{"documentation":"Retrieves information about the amount of space that is available on a disk volume","label":"_WinAPI_GetDiskFreeSpaceEx ( $sDrive )","params":[{"label":"$sDrive","documentation":"The drive to retrieve information, in the format D:, E:, etc."}]},"_WinAPI_GetDlgCtrlID":{"documentation":"Returns the identifier of the specified control","label":"_WinAPI_GetDlgCtrlID ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the control"}]},"_WinAPI_GetDlgItem":{"documentation":"Retrieves the handle of a control in the specified dialog box","label":"_WinAPI_GetDlgItem ( $hWnd, $iItemID )","params":[{"label":"$hWnd","documentation":"Handle to the dialog box"},{"label":"$iItemID","documentation":"Specifies the identifier of the control to be retrieved"}]},"_WinAPI_GetDllDirectory":{"documentation":"Retrieves the application-specific portion of the search path used to locate DLLs for the application","label":"_WinAPI_GetDllDirectory (  )","params":[]},"_WinAPI_GetDriveBusType":{"documentation":"Retrieves a bus type for the specified drive","label":"_WinAPI_GetDriveBusType ( $sDrive )","params":[{"label":"$sDrive","documentation":"The drive letter to retrieve information, in the format D:, E:, etc."}]},"_WinAPI_GetDriveGeometryEx":{"documentation":"Retrieves extended information about the disk\'s geometry","label":"_WinAPI_GetDriveGeometryEx ( $iDrive )","params":[{"label":"$iDrive","documentation":"The physical drive number (0, 1, 2, etc) to retrieve information."}]},"_WinAPI_GetDriveNumber":{"documentation":"Retrieves a device type, device number, and partition number for the specified drive","label":"_WinAPI_GetDriveNumber ( $sDrive )","params":[{"label":"$sDrive","documentation":"The drive letter to retrieve information, in the format D:, E:, etc."}]},"_WinAPI_GetDriveType":{"documentation":"Determines whether a disk drive is a removable, fixed, CD-ROM, RAM disk, or network drive","label":"_WinAPI_GetDriveType ( [$sDrive = \'\'] )","params":[{"label":"$sDrive","documentation":"**[optional]** The drive letter to retrieve information, in the format D:, E:, etc."}]},"_WinAPI_GetDurationFormat":{"documentation":"Formats a duration of time as a time string for a locale specified by identifier","label":"_WinAPI_GetDurationFormat ( $iLCID, $iDuration [, $sFormat = \'\'] )","params":[{"label":"$iLCID","documentation":"The locale identifier (LCID) that specifies the locale or one of the following predefined values:    $LOCALE_INVARIANT    $LOCALE_SYSTEM_DEFAULT    $LOCALE_USER_DEFAULTWindows Vista or later    $LOCALE_CUSTOM_DEFAULT    $LOCALE_CUSTOM_UI_DEFAULT    $LOCALE_CUSTOM_UNSPECIFIED"},{"label":"$iDuration","documentation":"The number of 100-nanosecond intervals in the duration.Alternatively, this parameter can be a $tagSYSTEMTIME structure that contains the time duration information to format."},{"label":"$sFormat","documentation":"**[optional]** The string that is used to form the duration. For example, \\"hh:mm:ss.ff\\".If this parameter is omitted or an empty string (Default), the function returns the string according to the duration format for the specified locale."}]},"_WinAPI_GetEffectiveClientRect":{"documentation":"Calculates the dimensions of a rectangle in the client area that contains all the specified controls","label":"_WinAPI_GetEffectiveClientRect ( $hWnd, $aCtrl [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$hWnd","documentation":"A handle to the window that has the client area to check."},{"label":"$aCtrl","documentation":"The array containing the handles or identifiers of the controls that should be included in the calculation of the client area. Also, it can be a single handle or control identifier."},{"label":"$iStart","documentation":"**[optional]** The index of array element that contains the first control."},{"label":"$iEnd","documentation":"**[optional]** The index of array element that contains the last control."}]},"_WinAPI_GetEnhMetaFile":{"documentation":"Creates a handle that identifies the enhanced-format metafile stored in the specified file","label":"_WinAPI_GetEnhMetaFile ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of an enhanced metafile (.emf)."}]},"_WinAPI_GetEnhMetaFileBits":{"documentation":"Retrieves the contents of the specified enhanced-format metafile","label":"_WinAPI_GetEnhMetaFileBits ( $hEmf, ByRef $pBuffer )","params":[{"label":"$hEmf","documentation":"Handle to the enhanced metafile."},{"label":"$pBuffer","documentation":"Returns a pointer to a memory block (buffer) that receives the metafile data.Optionaly, you can set this parameter to 0 before function call, then the function will allocate the required memory block itself.Otherwise, it must be a valid memory pointer returned by the _WinAPI_CreateBuffer() function, or by previously calling this function."}]},"_WinAPI_GetEnhMetaFileDescription":{"documentation":"Retrieves an optional text description from an enhanced-format metafile","label":"_WinAPI_GetEnhMetaFileDescription ( $hEmf )","params":[{"label":"$hEmf","documentation":"Handle to the enhanced metafile."}]},"_WinAPI_GetEnhMetaFileDimension":{"documentation":"Retrieves a dimension of the specified enhanced-format metafile","label":"_WinAPI_GetEnhMetaFileDimension ( $hEmf )","params":[{"label":"$hEmf","documentation":"Handle to the enhanced metafile to retrieve dimension."}]},"_WinAPI_GetEnhMetaFileHeader":{"documentation":"Retrieves the record containing the header for the specified enhanced-format metafile","label":"_WinAPI_GetEnhMetaFileHeader ( $hEmf )","params":[{"label":"$hEmf","documentation":"Handle to the enhanced metafile for which the header is to be retrieved."}]},"_WinAPI_GetErrorMessage":{"documentation":"Retrieves a text error message for the specified system error code","label":"_WinAPI_GetErrorMessage ( $iCode [, $iLanguage = 0] )","params":[{"label":"$iCode","documentation":"The system error code to retrieve a message."},{"label":"$iLanguage","documentation":"**[optional]** The language identifier."}]},"_WinAPI_GetErrorMode":{"documentation":"Retrieves the error mode for the current process","label":"_WinAPI_GetErrorMode (  )","params":[]},"_WinAPI_GetExitCodeProcess":{"documentation":"Retrieves the termination status of the specified process","label":"_WinAPI_GetExitCodeProcess ( $hProcess )","params":[{"label":"$hProcess","documentation":"Handle to the process."}]},"_WinAPI_GetExtended":{"documentation":"Retrieves the last extended function return value","label":"_WinAPI_GetExtended (  )","params":[]},"_WinAPI_GetFileAttributes":{"documentation":"Retrieves file system attributes for a specified file or directory","label":"_WinAPI_GetFileAttributes ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file or directory."}]},"_WinAPI_GetFileID":{"documentation":"Retrieves the file system\'s 8-byte file reference number for a file","label":"_WinAPI_GetFileID ( $hFile )","params":[{"label":"$hFile","documentation":"A handle to the file or directory whose reference number is to be retrieved."}]},"_WinAPI_GetFileInformationByHandle":{"documentation":"Retrieves file information for the specified file","label":"_WinAPI_GetFileInformationByHandle ( $hFile )","params":[{"label":"$hFile","documentation":"Handle to the file that contains the information to be retrieved."}]},"_WinAPI_GetFileInformationByHandleEx":{"documentation":"Retrieves file information for the specified file","label":"_WinAPI_GetFileInformationByHandleEx ( $hFile )","params":[{"label":"$hFile","documentation":"Handle to the file that contains the information to be retrieved."}]},"_WinAPI_GetFilePointerEx":{"documentation":"Retrieves the file pointer of the specified file","label":"_WinAPI_GetFilePointerEx ( $hFile )","params":[{"label":"$hFile","documentation":"Handle to the file."}]},"_WinAPI_GetFileSizeEx":{"documentation":"Retrieves the size of the specified file","label":"_WinAPI_GetFileSizeEx ( $hFile )","params":[{"label":"$hFile","documentation":"Handle to the file whose size is to be returned"}]},"_WinAPI_GetFileSizeOnDisk":{"documentation":"Retrieves the file allocation size on disk","label":"_WinAPI_GetFileSizeOnDisk ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file to retrieve allocation size."}]},"_WinAPI_GetFileTitle":{"documentation":"Retrieves the name of the specified file","label":"_WinAPI_GetFileTitle ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name and location of a file."}]},"_WinAPI_GetFileType":{"documentation":"Retrieves the file type of the specified file","label":"_WinAPI_GetFileType ( $hFile )","params":[{"label":"$hFile","documentation":"Handle to the file."}]},"_WinAPI_GetFileVersionInfo":{"documentation":"Retrieves version information for the specified file","label":"_WinAPI_GetFileVersionInfo ( $sFilePath, ByRef $pBuffer [, $iFlags = 0] )","params":[{"label":"$sFilePath","documentation":"The name of the file."},{"label":"$pBuffer","documentation":"Returns a pointer to a memory block (buffer) that receives the file-version information.Optionaly, you can set this parameter to 0 before function call, then the function will allocate the required memory block itself.Otherwise, it must be a valid memory pointer returned by the _WinAPI_CreateBuffer() function, or by previously calling this function."},{"label":"$iFlags","documentation":"**[optional]** The flags that controls which MUI DLLs (if any) from which the version resource is extracted.It can be 0 or more of the following values (valid only for Windows Vista or later).    $FILE_VER_GET_LOCALISED    $FILE_VER_GET_NEUTRAL    $FILE_VER_GET_PREFETCHED"}]},"_WinAPI_GetFinalPathNameByHandle":{"documentation":"Retrieves the final path of the specified file","label":"_WinAPI_GetFinalPathNameByHandle ( $hFile )","params":[{"label":"$hFile","documentation":"Handle to a file or directory whose path is to be retrieved."}]},"_WinAPI_GetFinalPathNameByHandleEx":{"documentation":"Retrieves the final path of the specified file","label":"_WinAPI_GetFinalPathNameByHandleEx ( $hFile [, $iFlags = 0] )","params":[{"label":"$hFile","documentation":"Handle to a file or directory."},{"label":"$iFlags","documentation":"**[optional]** The type of result to return.This parameter can be combination of one $FILE_NAME_* and one $VOLUME_NAME_* values.$FILE_NAME_NORMALIZED$FILE_NAME_OPENED$VOLUME_NAME_DOS$VOLUME_NAME_GUID$VOLUME_NAME_NONE$VOLUME_NAME_NT"}]},"_WinAPI_GetFocus":{"documentation":"Retrieves the handle of the window that has the keyboard focus","label":"_WinAPI_GetFocus (  )","params":[]},"_WinAPI_GetFontMemoryResourceInfo":{"documentation":"Reads out font information from a TTF loaded into the memory","label":"_WinAPI_GetFontMemoryResourceInfo ( $pMemory [, $iFlag = 1] )","params":[{"label":"$pMemory","documentation":"A pointer value the struct that contains the binary data of the TTF"},{"label":"$iFlag","documentation":"**[optional]** An integer value. Default is 1 (Font Family name). See remarks for others values"}]},"_WinAPI_GetFontName":{"documentation":"Retrieves the unique name of the font based on its typeface name, character set, and style","label":"_WinAPI_GetFontName ( $sFaceName [, $iStyle = 0 [, $iCharSet = 1]] )","params":[{"label":"$sFaceName","documentation":"The typeface name of the font (not including style). For example, \\"Arial\\", \\"Tahoma\\", etc."},{"label":"$iStyle","documentation":"**[optional]** The style of the font.It can be one or more of the following values:    $FS_REGULAR    $FS_BOLD    $FS_ITALIC"},{"label":"$iCharSet","documentation":"**[optional]** The character set.It can be one of the following values:    $ANSI_CHARSET    $BALTIC_CHARSET    $CHINESEBIG5_CHARSET    $DEFAULT_CHARSET (Default)    $EASTEUROPE_CHARSET    $GB2312_CHARSET    $GREEK_CHARSET    $HANGEUL_CHARSET    $MAC_CHARSET    $OEM_CHARSET    $RUSSIAN_CHARSET    $SHIFTJIS_CHARSET    $SYMBOL_CHARSET    $TURKISH_CHARSET    $VIETNAMESE_CHARSETKorean language edition of Windows:    $JOHAB_CHARSETMiddle East language edition of Windows:    $ARABIC_CHARSET    $HEBREW_CHARSETThai language edition of Windows:    $THAI_CHARSET"}]},"_WinAPI_GetFontResourceInfo":{"documentation":"Retrieves the fontname from the specified font resource file","label":"_WinAPI_GetFontResourceInfo ( $sFont [, $bForce = False [, $iFlag = Default]] )","params":[{"label":"$sFont","documentation":"String that names a font resource file.To retrieve a fontname whose information comes from several resource files, they must be separated by a \\"|\\" .For example, abcxxxxx.pfm | abcxxxxx.pfb."},{"label":"$bForce","documentation":"**[optional]** Specifies whether adds a file to the font table, valid values:    True - Forced add the specified file to the system font table and remove it after retrieving the fontname.    False - Don\'t add and remove (Default)."},{"label":"$iFlag","documentation":"**[optional]** An integer value. See _WinAPI_GetFontMemoryResourceInfo() for value definition."}]},"_WinAPI_GetForegroundWindow":{"documentation":"Returns the handle of the foreground window","label":"_WinAPI_GetForegroundWindow (  )","params":[]},"_WinAPI_GetFRBuffer":{"documentation":"Retrieves the current size of the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions","label":"_WinAPI_GetFRBuffer (  )","params":[]},"_WinAPI_GetFullPathName":{"documentation":"Retrieves the full path and file name of the specified file","label":"_WinAPI_GetFullPathName ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file."}]},"_WinAPI_GetGeoInfo":{"documentation":"Retrieves information about a specified geographical location","label":"_WinAPI_GetGeoInfo ( $iGEOID, $iType [, $iLanguage = 0] )","params":[{"label":"$iGEOID","documentation":"The identifier for the geographical location (GEOID) for which to get information."},{"label":"$iType","documentation":"The type of information to retrieve. It can be one of the following values.$GEO_NATION$GEO_LATITUDE$GEO_LONGITUDE$GEO_ISO2$GEO_ISO3$GEO_LCID$GEO_FRIENDLYNAME$GEO_OFFICIALNAME$GEO_TIMEZONES$GEO_OFFICIALLANGUAGESWindows Vista or later$GEO_RFC1766Windows 8 or later$GEO_ISO_UN_NUMBER$GEO_PARENT"},{"label":"$iLanguage","documentation":"**[optional]** The language identifier, used with the geographical location."}]},"_WinAPI_GetGlyphOutline":{"documentation":"Retrieves the outline or bitmap for a character in the TrueType font","label":"_WinAPI_GetGlyphOutline ( $hDC, $sChar, $iFormat, ByRef $pBuffer [, $tMAT2 = 0] )","params":[{"label":"$hDC","documentation":"A handle to the device context which font is selected."},{"label":"$sChar","documentation":"The character for which data is to be returned."},{"label":"$iFormat","documentation":"The format of the data that the function retrieves.This parameter can be one of the following values:    $GGO_BEZIER    $GGO_BITMAP    $GGO_GLYPH_INDEX    $GGO_GRAY2_BITMAP    $GGO_GRAY4_BITMAP    $GGO_GRAY8_BITMAP    $GGO_METRICS    $GGO_NATIVE    $GGO_UNHINTED"},{"label":"$pBuffer","documentation":"Returns a pointer to a memory block (buffer) that receives the outline or bitmap data.Optionaly, you can set this parameter to 0 before function call, then the function will allocate the required memory block itself.Otherwise, it must be a valid memory pointer returned by the _WinAPI_CreateBuffer() function, or by previously calling this function.If the $GGO_METRICS is specified, this parameter is ignored, and function only returns the information about a glyph (see below)."},{"label":"$tMAT2","documentation":"**[optional]** $tagMAT2 structure specifying a transformation matrix for the character.If this parameter is 0 (Default), the transformation will not be used (it is identity matrix)."}]},"_WinAPI_GetGraphicsMode":{"documentation":"Retrieves the current graphics mode for the specified device context","label":"_WinAPI_GetGraphicsMode ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetGuiResources":{"documentation":"Retrieves the count of handles to graphical user interface (GUI) objects in use by the specified process","label":"_WinAPI_GetGuiResources ( [$iFlag = 0 [, $hProcess = -1]] )","params":[{"label":"$iFlag","documentation":"**[optional]** 0 (Default) Return the count of GDI objects.1 Return the count of USER objects."},{"label":"$hProcess","documentation":"**[optional]** A handle to the process. By default the current process."}]},"_WinAPI_GetGUIThreadInfo":{"documentation":"Retrieves information about the active window or a specified GUI thread","label":"_WinAPI_GetGUIThreadInfo ( $iThreadId )","params":[{"label":"$iThreadId","documentation":"The identifier for the thread for which information is to be retrieved."}]},"_WinAPI_GetGValue":{"documentation":"Retrieves an intensity value for the green component of a 32-bit RGB value","label":"_WinAPI_GetGValue ( $iRGB )","params":[{"label":"$iRGB","documentation":"The color value, in RGB."}]},"_WinAPI_GetHandleInformation":{"documentation":"Retrieves certain properties of an object handle","label":"_WinAPI_GetHandleInformation ( $hObject )","params":[{"label":"$hObject","documentation":"Handle to an object whose information is to be retrieved."}]},"_WinAPI_GetHGlobalFromStream":{"documentation":"Retrieves the global memory handle to a stream","label":"_WinAPI_GetHGlobalFromStream ( $pStream )","params":[{"label":"$pStream","documentation":"Pointer to the stream object previously created by a call to the _WinAPI_CreateStreamOnHGlobal() function."}]},"_WinAPI_GetIconDimension":{"documentation":"Retrieves a dimension of the specified icon","label":"_WinAPI_GetIconDimension ( $hIcon )","params":[{"label":"$hIcon","documentation":"Handle to the icon to retrieve dimension."}]},"_WinAPI_GetIconInfo":{"documentation":"Retrieves information about the specified icon or cursor","label":"_WinAPI_GetIconInfo ( $hIcon )","params":[{"label":"$hIcon","documentation":"Handle to the icon or cursor.To retrieve information on a standard icon or cursor, specify one of the following values:    $IDC_APPSTARTING - Standard arrow and small hourglass cursor    $IDC_ARROW - Standard arrow cursor    $IDC_CROSS - Crosshair cursor    $IDC_HAND - Hand cursor    $IDC_HELP - Arrow and question mark cursor    $IDC_IBEAM - I-beam cursor    $IDC_NO - Slashed circle cursor    $IDC_SIZEALL - Four-pointed arrow cursor    $IDC_SIZENESW - Double-pointed arrow cursor pointing NE and SW    $IDC_SIZENS - Double-pointed arrow cursor pointing N and S    $IDC_SIZENWSE - Double-pointed arrow cursor pointing NW and SE    $IDC_SIZEWE - Double-pointed arrow cursor pointing W and E    $IDC_UPARROW - Vertical arrow cursor    $IDC_WAIT - Hourglass cursor    $IDI_APPLICATION - Application icon    $IDI_ASTERISK - Asterisk icon    $IDI_EXCLAMATION - Exclamation point icon    $IDI_HAND - Stop sign icon    $IDI_QUESTION - Question-mark icon    $IDI_WINLOGO - Windows logo icon"}]},"_WinAPI_GetIconInfoEx":{"documentation":"Retrieves information about the specified icon or cursor","label":"_WinAPI_GetIconInfoEx ( $hIcon )","params":[{"label":"$hIcon","documentation":"Handle to the icon or cursor. To retrieve information about a standard icon or cursor, use $IDC_* constants."}]},"_WinAPI_GetIdleTime":{"documentation":"Retrieves the time that has elapsed since the last input","label":"_WinAPI_GetIdleTime (  )","params":[]},"_WinAPI_GetKeyboardLayout":{"documentation":"Retrieves the active input locale identifier for the specified window","label":"_WinAPI_GetKeyboardLayout ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to retrieve the input locale identifier."}]},"_WinAPI_GetKeyboardLayoutList":{"documentation":"Retrieves the all input locale identifiers corresponding to the current set of input locales in the system","label":"_WinAPI_GetKeyboardLayoutList (  )","params":[]},"_WinAPI_GetKeyboardState":{"documentation":"Copies the status of the 256 virtual keys to the specified buffer","label":"_WinAPI_GetKeyboardState (  )","params":[]},"_WinAPI_GetKeyboardType":{"documentation":"Retrieves information about the current keyboard","label":"_WinAPI_GetKeyboardType ( $iType )","params":[{"label":"$iType","documentation":"The type of keyboard information to be retrieved, valid values:0 - Keyboard type.1 - Keyboard subtype (original equipment manufacturer (OEM)-dependent value).2 - The number of function keys on the keyboard."}]},"_WinAPI_GetKeyNameText":{"documentation":"Retrieves a string that represents the name of a key","label":"_WinAPI_GetKeyNameText ( $lParam )","params":[{"label":"$lParam","documentation":"Specifies the second parameter of the keyboard message (such as WM_KEYDOWN) to be processed."}]},"_WinAPI_GetKeyState":{"documentation":"Retrieves the status of the specified virtual key","label":"_WinAPI_GetKeyState ( $vKey )","params":[{"label":"$vKey","documentation":"Specifies a virtual key ($VK_*). If the desired virtual key is a letter or digit (A through Z,a through z, or 0 through 9)."}]},"_WinAPI_GetLastActivePopup":{"documentation":"Determines which pop-up window owned by the specified window was most recently active","label":"_WinAPI_GetLastActivePopup ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the owner window."}]},"_WinAPI_GetLastError":{"documentation":"Returns the calling thread\'s lasterror code value","label":"_WinAPI_GetLastError (  )","params":[]},"_WinAPI_GetLastErrorMessage":{"documentation":"Returns the calling threads last error message","label":"_WinAPI_GetLastErrorMessage (  )","params":[]},"_WinAPI_GetLayeredWindowAttributes":{"documentation":"Gets Layered Window Attributes","label":"_WinAPI_GetLayeredWindowAttributes ( $hWnd, ByRef $iTransColor, ByRef $iTransGUI [, $bColorRef = False] )","params":[{"label":"$hWnd","documentation":"Handle of GUI to work on"},{"label":"$iTransColor","documentation":"Returns Transparent color ( dword as 0x00bbggrr or string \\"0xRRGGBB\\")"},{"label":"$iTransGUI","documentation":"Returns Transparancy of GUI"},{"label":"$bColorRef","documentation":"**[optional]** If True, $iTransColor will be a COLORREF( 0x00bbggrr ), else an RGB-Color"}]},"_WinAPI_GetLocaleInfo":{"documentation":"Retrieves information about a locale specified by identifier","label":"_WinAPI_GetLocaleInfo ( $iLCID, $iType )","params":[{"label":"$iLCID","documentation":"The locale identifier (LCID) that specifies the locale or one of the following predefined values.$LOCALE_INVARIANT$LOCALE_SYSTEM_DEFAULT$LOCALE_USER_DEFAULTWindows Vista or later$LOCALE_CUSTOM_DEFAULT$LOCALE_CUSTOM_UI_DEFAULT$LOCALE_CUSTOM_UNSPECIFIED"},{"label":"$iType","documentation":"The one of the locale information constants ($LOCALE_*) to retrieve."}]},"_WinAPI_GetLogicalDrives":{"documentation":"Retrieves a bitmask representing the currently available disk drives","label":"_WinAPI_GetLogicalDrives (  )","params":[]},"_WinAPI_GetMapMode":{"documentation":"Retrieves the current mapping mode","label":"_WinAPI_GetMapMode ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetMemorySize":{"documentation":"Retrieves the size of a memory block allocated from the internal library heap","label":"_WinAPI_GetMemorySize ( $pMemory )","params":[{"label":"$pMemory","documentation":"A pointer to the valid memory block whose size to be retrieved."}]},"_WinAPI_GetMessageExtraInfo":{"documentation":"Retrieves the extra message information for the current thread","label":"_WinAPI_GetMessageExtraInfo (  )","params":[]},"_WinAPI_GetModuleFileNameEx":{"documentation":"Retrieves the fully-qualified path for the file containing the specified module","label":"_WinAPI_GetModuleFileNameEx ( $hProcess [, $hModule = 0] )","params":[{"label":"$hProcess","documentation":"Handle to the process that contains the module. The handle must have the $PROCESS_QUERY_INFORMATION or$PROCESS_QUERY_LIMITED_INFORMATION access right and the $PROCESS_VM_READ access right."},{"label":"$hModule","documentation":"**[optional]** Handle to the module. If this parameter is 0 (Default), the function retrieves the path of the executablefile of the process."}]},"_WinAPI_GetModuleHandle":{"documentation":"Returns a module handle for the specified module","label":"_WinAPI_GetModuleHandle ( $sModuleName )","params":[{"label":"$sModuleName","documentation":"Names a Win32 module (either a .dll or .exe file). If the filename extension is omitted, thedefault library extension .dll is appended. The filename string can include a trailing point character (.) toindicate that the module name has no extension. The string does not have to specify a path. The name iscompared (case independently) to the names of modules currently mapped into the address space of the callingprocess. If this parameter is the Null keyword then the function returns a handle of the file used to create the calling process."}]},"_WinAPI_GetModuleHandleEx":{"documentation":"Retrieves a module handle for the specified module","label":"_WinAPI_GetModuleHandleEx ( $sModule [, $iFlags = 0] )","params":[{"label":"$sModule","documentation":"The name of the loaded module (either a .dll or .exe file), or a pointer to an address in the module(if the $GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS flag is specified). If this parameter is 0 or an emptystring, the function returns a handle to the file used to create the calling process (.exe file)."},{"label":"$iFlags","documentation":"**[optional]** This parameter can be one or more of the following values.$GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS$GET_MODULE_HANDLE_EX_FLAG_PIN$GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT$GET_MODULE_HANDLE_EX_FLAG_DEFAULT (Default)"}]},"_WinAPI_GetModuleInformation":{"documentation":"Retrieves information about the specified module","label":"_WinAPI_GetModuleInformation ( $hProcess [, $hModule = 0] )","params":[{"label":"$hProcess","documentation":"Handle to the process that contains the module. The handle must have the $PROCESS_QUERY_INFORMATION or$PROCESS_QUERY_LIMITED_INFORMATION access right and the $PROCESS_VM_READ access right."},{"label":"$hModule","documentation":"**[optional]** Handle to the module. If this parameter is 0, the function retrieves information only about theexecutable file (\\"SizeOfImage\\" and \\"EntryPoint\\" members of the $tagMODULEINFO structure)."}]},"_WinAPI_GetMonitorInfo":{"documentation":"Retrieves information about a display monitor","label":"_WinAPI_GetMonitorInfo ( $hMonitor )","params":[{"label":"$hMonitor","documentation":"A handle to the display monitor of interest."}]},"_WinAPI_GetMousePos":{"documentation":"Returns the current mouse position","label":"_WinAPI_GetMousePos ( [$bToClient = False [, $hWnd = 0]] )","params":[{"label":"$bToClient","documentation":"**[optional]** If True, the coordinates will be converted to client coordinates"},{"label":"$hWnd","documentation":"**[optional]** Window handle used to convert coordinates if $bToClient is True"}]},"_WinAPI_GetMousePosX":{"documentation":"Returns the current mouse X position","label":"_WinAPI_GetMousePosX ( [$bToClient = False [, $hWnd = 0]] )","params":[{"label":"$bToClient","documentation":"**[optional]** If True, the coordinates will be converted to client coordinates"},{"label":"$hWnd","documentation":"**[optional]** Window handle used to convert coordinates if $bToClient is True"}]},"_WinAPI_GetMousePosY":{"documentation":"Returns the current mouse Y position","label":"_WinAPI_GetMousePosY ( [$bToClient = False [, $hWnd = 0]] )","params":[{"label":"$bToClient","documentation":"**[optional]** If True, the coordinates will be converted to client coordinates"},{"label":"$hWnd","documentation":"**[optional]** Window handle used to convert coordinates if $bToClient is True"}]},"_WinAPI_GetMUILanguage":{"documentation":"Gets the language currently in use by the common controls for a particular process","label":"_WinAPI_GetMUILanguage (  )","params":[]},"_WinAPI_GetNumberFormat":{"documentation":"Formats a number string as a number string customized for a locale specified by identifier","label":"_WinAPI_GetNumberFormat ( $iLCID, $sNumber [, $tNUMBERFMT = 0] )","params":[{"label":"$iLCID","documentation":"The locale identifier (LCID) that specifies the locale or one of the following predefined values.$LOCALE_INVARIANT$LOCALE_SYSTEM_DEFAULT$LOCALE_USER_DEFAULTWindows Vista or later$LOCALE_CUSTOM_DEFAULT$LOCALE_CUSTOM_UI_DEFAULT$LOCALE_CUSTOM_UNSPECIFIED"},{"label":"$sNumber","documentation":"The string containing the number string to format. This string can only contain the followingcharacters. All other characters are invalid.Characters \\"0\\" through \\"9\\".A minus sign in the first character position if the number is a negative value.One decimal point (dot) if the number is a floating-point value."},{"label":"$tNUMBERFMT","documentation":"**[optional]** $tagNUMBERFMT structure that contains number formatting information. If this parameter is 0 (Default),the function returns the string according to the number format for the specified locale.You can use the _WinAPI_CreateNumberFormatInfo() function to create this structure."}]},"_WinAPI_GetObject":{"documentation":"Retrieves information for the specified graphics object","label":"_WinAPI_GetObject ( $hObject, $iSize, $pObject )","params":[{"label":"$hObject","documentation":"Identifies a logical pen, brush, font, bitmap, region, or palette"},{"label":"$iSize","documentation":"Specifies the number of bytes to be written to the buffer"},{"label":"$pObject","documentation":"Pointer to a buffer that receives the information.The following shows the type of information the buffer receives for each type of graphics object you can specify:    HBITMAP - BITMAP or DIBSECTION    HPALETTE - A count of the number of entries in the logical palette    HPEN - EXTLOGPEN or LOGPEN    HBRUSH - LOGBRUSH    HFONT - LOGFONTIf $pObject is 0 the function return value is the number of bytes required to store the information it writes to the buffer for the specified graphics object."}]},"_WinAPI_GetObjectID":{"documentation":"Retrieves the object identifier for the specified file or directory","label":"_WinAPI_GetObjectID ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"Path to the file or directory from which the object identifier is to be retrieved."}]},"_WinAPI_GetObjectInfoByHandle":{"documentation":"Retrieves information about a specified object","label":"_WinAPI_GetObjectInfoByHandle ( $hObject )","params":[{"label":"$hObject","documentation":"A handle to the object to obtain information about."}]},"_WinAPI_GetObjectNameByHandle":{"documentation":"Retrieves a name of the specified object","label":"_WinAPI_GetObjectNameByHandle ( $hObject )","params":[{"label":"$hObject","documentation":"A handle to the object to obtain its name."}]},"_WinAPI_GetObjectType":{"documentation":"Retrieves the type of the specified object","label":"_WinAPI_GetObjectType ( $hObject )","params":[{"label":"$hObject","documentation":"Handle to the graphics object."}]},"_WinAPI_GetOpenFileName":{"documentation":"Creates an Open dialog box that lets the user specify the drive, directory, and the name of a file or set of files to open","label":"_WinAPI_GetOpenFileName ( [$sTitle = \\"\\" [, $sFilter = \\"All files (*.*)\\" [, $sInitalDir = \\".\\" [, $sDefaultFile = \\"\\" [, $sDefaultExt = \\"\\" [, $iFilterIndex = 1 [, $iFlags = 0 [, $iFlagsEx = 0 [, $hWndOwner = 0]]]]]]]]] )","params":[{"label":"$sTitle","documentation":"**[optional]** string to be placed in the title bar of the dialog box"},{"label":"$sFilter","documentation":"**[optional]** Pairs of filter strings (for example \\"Text Files (*.txt)|All Files (*.*)\\")The first string in each pair is a display string that describes the filter (for example, \\"Text Files\\")The second string specifies the filter pattern (for example, \\"*.TXT\\")To specify multiple filter patterns for a single display string, use a semicolon to separate the patterns (for example, \\"*.TXT;*.DOC;*.BAK\\")A pattern string can be a combination of valid file name characters and the asterisk (*) wildcard characterDo not include spaces in the pattern string."},{"label":"$sInitalDir","documentation":"**[optional]** String that can specify the initial directory"},{"label":"$sDefaultFile","documentation":"**[optional]** A file name used to initialize the File Name edit control"},{"label":"$sDefaultExt","documentation":"**[optional]** String that contains the default extension"},{"label":"$iFilterIndex","documentation":"**[optional]** Specifies the index of the currently selected filter in the File Types control"},{"label":"$iFlags","documentation":"**[optional]** See Flags in $tagOPENFILENAME information"},{"label":"$iFlagsEx","documentation":"**[optional]** See FlagEx in $tagOPENFILENAME information"},{"label":"$hWndOwner","documentation":"**[optional]** Handle to the window that owns the dialog box. This member can be any valid window handle, or it can be 0 if the dialog box has no owner"}]},"_WinAPI_GetOutlineTextMetrics":{"documentation":"Retrieves text metrics for TrueType fonts","label":"_WinAPI_GetOutlineTextMetrics ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetOverlappedResult":{"documentation":"Retrieves the results of an overlapped operation","label":"_WinAPI_GetOverlappedResult ( $hFile, $tOverlapped, ByRef $iBytes [, $bWait = False] )","params":[{"label":"$hFile","documentation":"Handle to the file, named pipe, or communications device. This is the same handle that wasspecified when the overlapped operation was started by a call to ReadFile, WriteFile, ConnectNamedPipe,TransactNamedPipe, DeviceIoControl, or WaitCommEvent."},{"label":"$tOverlapped","documentation":"A $tagOVERLAPPED structure or a pointer to it that was specified when the overlapped operation wasstarted."},{"label":"$iBytes","documentation":"The number of bytes that were actually transferred by a read or write operation.For a TransactNamedPipe operation, this is the number of bytes that were read from the pipe.For a DeviceIoControl operation this is the number of bytes of output data returned by the device driver.For a ConnectNamedPipe or WaitCommEvent operation, this value is undefined."},{"label":"$bWait","documentation":"**[optional]** If True, the function does not return until the operation has been completed.If False and the operation is still pending, the function returns False and the GetLastError function will return ERROR_IO_INCOMPLETE."}]},"_WinAPI_GetParent":{"documentation":"Retrieves the handle of the specified child window\'s parent window","label":"_WinAPI_GetParent ( $hWnd )","params":[{"label":"$hWnd","documentation":"Window handle of child window"}]},"_WinAPI_GetParentProcess":{"documentation":"Retrieves the PID of the parent process for the specified process","label":"_WinAPI_GetParentProcess ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetPerformanceInfo":{"documentation":"Retrieves the performance information","label":"_WinAPI_GetPerformanceInfo (  )","params":[]},"_WinAPI_GetPEType":{"documentation":"Retrieves a type of the machine for the specified portable executable (PE)","label":"_WinAPI_GetPEType ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The full path of the PE whose machine type is to be retrieved."}]},"_WinAPI_GetPhysicallyInstalledSystemMemory":{"documentation":"Retrieves the amount of RAM that is physically installed on the computer","label":"_WinAPI_GetPhysicallyInstalledSystemMemory (  )","params":[]},"_WinAPI_GetPixel":{"documentation":"Retrieves the color value of the pixel at the specified coordinates","label":"_WinAPI_GetPixel ( $hDC, $iX, $iY )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate, in logical units, of the pixel to be examined."},{"label":"$iY","documentation":"The y-coordinate, in logical units, of the pixel to be examined."}]},"_WinAPI_GetPolyFillMode":{"documentation":"Retrieves the current polygon fill mode","label":"_WinAPI_GetPolyFillMode ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetPosFromRect":{"documentation":"Interprets the coordinates of the rectangle as offset and position coordinates","label":"_WinAPI_GetPosFromRect ( $tRECT )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the rectangle."}]},"_WinAPI_GetPriorityClass":{"documentation":"Retrieves the priority class for the specified process","label":"_WinAPI_GetPriorityClass ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProcAddress":{"documentation":"Retrieves the address of an exported function or variable from the specified module","label":"_WinAPI_GetProcAddress ( $hModule, $vName )","params":[{"label":"$hModule","documentation":"A handle to the module that contains the function or variable"},{"label":"$vName","documentation":"The function or variable name, or the function\'s ordinal value"}]},"_WinAPI_GetProcessAffinityMask":{"documentation":"Obtains the affinity masks for the process and the system","label":"_WinAPI_GetProcessAffinityMask ( $hProcess )","params":[{"label":"$hProcess","documentation":"An open handle to the process whose affinity mask is desired."}]},"_WinAPI_GetProcessCommandLine":{"documentation":"Retrieves the command-line string for the specified process","label":"_WinAPI_GetProcessCommandLine ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProcessFileName":{"documentation":"Retrieves the fully-qualified path of the executable file for the specified process","label":"_WinAPI_GetProcessFileName ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProcessHandleCount":{"documentation":"Retrieves the number of open handles that belong to the specified process","label":"_WinAPI_GetProcessHandleCount ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProcessID":{"documentation":"Retrieves the process identifier of the specified process","label":"_WinAPI_GetProcessID ( $hProcess )","params":[{"label":"$hProcess","documentation":"Handle to the process. The handle must have the $PROCESS_QUERY_INFORMATION or$PROCESS_QUERY_LIMITED_INFORMATION access right."}]},"_WinAPI_GetProcessIoCounters":{"documentation":"Retrieves accounting information for all I/O operations performed by the specified process","label":"_WinAPI_GetProcessIoCounters ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProcessMemoryInfo":{"documentation":"Retrieves information about the memory usage of the specified process","label":"_WinAPI_GetProcessMemoryInfo ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProcessName":{"documentation":"Retrieves the name for the specified process","label":"_WinAPI_GetProcessName ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProcessShutdownParameters":{"documentation":"Retrieves the shutdown parameters for the currently calling process","label":"_WinAPI_GetProcessShutdownParameters (  )","params":[]},"_WinAPI_GetProcessTimes":{"documentation":"Retrieves timing information for the specified process","label":"_WinAPI_GetProcessTimes ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProcessUser":{"documentation":"Retrieves the user and domain name for the specified process","label":"_WinAPI_GetProcessUser ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** **[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProcessWindowStation":{"documentation":"Retrieves a handle to the current window station for the calling process","label":"_WinAPI_GetProcessWindowStation (  )","params":[]},"_WinAPI_GetProcessWorkingDirectory":{"documentation":"Retrieves the current working directory for the specified process","label":"_WinAPI_GetProcessWorkingDirectory ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_GetProfilesDirectory":{"documentation":"Retrieves the path to the root directory where user profiles are stored","label":"_WinAPI_GetProfilesDirectory (  )","params":[]},"_WinAPI_GetPwrCapabilities":{"documentation":"Retrieves information about the system power capabilities","label":"_WinAPI_GetPwrCapabilities (  )","params":[]},"_WinAPI_GetRawInputBuffer":{"documentation":"Performs a buffered read of the raw input data","label":"_WinAPI_GetRawInputBuffer ( $pBuffer, $iLength )","params":[{"label":"$pBuffer","documentation":"A pointer to the buffer to receive an array of $tagRAWINPUT structures containing the raw input data."},{"label":"$iLength","documentation":"The size of the buffer, in bytes."}]},"_WinAPI_GetRawInputBufferLength":{"documentation":"Retrieves the required buffer size to call the _WinAPI_GetRawInputBuffer() function","label":"_WinAPI_GetRawInputBufferLength (  )","params":[]},"_WinAPI_GetRawInputData":{"documentation":"Retrieves the raw input from the specified device","label":"_WinAPI_GetRawInputData ( $hRawInput, $pBuffer, $iLength, $iFlag )","params":[{"label":"$hRawInput","documentation":"A handle to the $tagRAWINPUT structure (not a pointer). This comes from the \\"lParam\\" in WM_INPUT."},{"label":"$pBuffer","documentation":"A pointer to the buffer to receive a data that comes from the $tagRAWINPUT structure. This dependson the value of a command flag (see below). If this parameter is 0, the function returns therequired size of the buffer, in bytes."},{"label":"$iLength","documentation":"The size of the buffer, in bytes."},{"label":"$iFlag","documentation":"The command flag. This parameter can be one of the following values.    $RID_HEADER    $RID_INPUT"}]},"_WinAPI_GetRawInputDeviceInfo":{"documentation":"Retrieves information about the raw input device","label":"_WinAPI_GetRawInputDeviceInfo ( $hDevice, $pBuffer, $iLength, $iFlag )","params":[{"label":"$hDevice","documentation":"A handle to the raw input device. This comes from the \\"lParam\\" of the WM_INPUT message, from the\\"$hDevice\\" member of the $tagRAWINPUTHEADER structure, or from the _WinAPI_EnumRawInputDevices() function."},{"label":"$pBuffer","documentation":"A pointer to the buffer that receives an information specified by a command flag (see below).If this parameter is 0, the function returns the required size of the buffer, in bytes or characters."},{"label":"$iLength","documentation":"The size of the buffer, in bytes. For $RIDI_DEVICENAME only, this value is the character count,including null-terminating character (not the byte count)."},{"label":"$iFlag","documentation":"The command flag that specifies what information will be returned.This parameter can be one of the following values.    $RIDI_DEVICENAME    $RIDI_DEVICEINFO    $RIDI_PREPARSEDDATA"}]},"_WinAPI_GetRegionData":{"documentation":"Fills the specified buffer with data describing a region","label":"_WinAPI_GetRegionData ( $hRgn, ByRef $tRGNDATA )","params":[{"label":"$hRgn","documentation":"Handle to the region."},{"label":"$tRGNDATA","documentation":"Returns a $tagRGNDATA structure that is created by this function, and contains the region data, in logical units."}]},"_WinAPI_GetRegisteredRawInputDevices":{"documentation":"Retrieves the information about the raw input devices for the current application","label":"_WinAPI_GetRegisteredRawInputDevices ( $pBuffer, $iLength )","params":[{"label":"$pBuffer","documentation":"A pointer to the buffer to receive an array of $tagRAWINPUTDEVICE structures for the application.If this parameter is 0, the function returns the required buffer size, in bytes."},{"label":"$iLength","documentation":"The size of the buffer, in bytes."}]},"_WinAPI_GetRegKeyNameByHandle":{"documentation":"Retrieves a name of the specified registry key","label":"_WinAPI_GetRegKeyNameByHandle ( $hKey )","params":[{"label":"$hKey","documentation":"Handle to an open registry key."}]},"_WinAPI_GetRgnBox":{"documentation":"Retrieves the bounding rectangle of the specified region","label":"_WinAPI_GetRgnBox ( $hRgn, ByRef $tRECT )","params":[{"label":"$hRgn","documentation":"Handle to the region."},{"label":"$tRECT","documentation":"Returns a $tagRECT structure that is created by this function, and contains the bounding rectangle, in logical units."}]},"_WinAPI_GetROP2":{"documentation":"Retrieves the foreground mix mode of the specified device context","label":"_WinAPI_GetROP2 ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetRValue":{"documentation":"Retrieves an intensity value for the red component of a 32-bit RGB value","label":"_WinAPI_GetRValue ( $iRGB )","params":[{"label":"$iRGB","documentation":"The color value, in RGB."}]},"_WinAPI_GetSaveFileName":{"documentation":"Creates a Save dialog box that lets the user specify the drive, directory, and name of a file to save","label":"_WinAPI_GetSaveFileName ( [$sTitle = \\"\\" [, $sFilter = \\"All files (*.*)\\" [, $sInitalDir = \\".\\" [, $sDefaultFile = \\"\\" [, $sDefaultExt = \\"\\" [, $iFilterIndex = 1 [, $iFlags = 0 [, $iFlagsEx = 0 [, $hWndOwner = 0]]]]]]]]] )","params":[{"label":"$sTitle","documentation":"**[optional]** string to be placed in the title bar of the dialog box"},{"label":"$sFilter","documentation":"**[optional]** Pairs of filter strings (for example \\"Text Files (*.txt)|All Files (*.*)\\")The first string in each pair is a display string that describes the filter (for example, \\"Text Files\\")The second string specifies the filter pattern (for example, \\"*.TXT\\")To specify multiple filter patterns for a single display string, use a semicolon to separate the patterns (for example, \\"*.TXT;*.DOC;*.BAK\\")A pattern string can be a combination of valid file name characters and the asterisk (*) wildcard characterDo not include spaces in the pattern string."},{"label":"$sInitalDir","documentation":"**[optional]** String that can specify the initial directory"},{"label":"$sDefaultFile","documentation":"**[optional]** A file name used to initialize the File Name edit control"},{"label":"$sDefaultExt","documentation":"**[optional]** String that contains the default extension"},{"label":"$iFilterIndex","documentation":"**[optional]** Specifies the index of the currently selected filter in the File Types control"},{"label":"$iFlags","documentation":"**[optional]** See Flags in $tagOPENFILENAME information"},{"label":"$iFlagsEx","documentation":"**[optional]** See FlagEx in $tagOPENFILENAME information"},{"label":"$hWndOwner","documentation":"**[optional]** Handle to the window that owns the dialog box. This member can be any valid window handle, or it can be 0 if the dialog box has no owner"}]},"_WinAPI_GetShellWindow":{"documentation":"Retrieves a handle to the Shell\'s desktop window","label":"_WinAPI_GetShellWindow (  )","params":[]},"_WinAPI_GetStartupInfo":{"documentation":"Retrieves the contents of the STARTUPINFO structure that was specified when the calling process was created","label":"_WinAPI_GetStartupInfo (  )","params":[]},"_WinAPI_GetStdHandle":{"documentation":"Retrieves a handle for the standard input, standard output, or standard error device","label":"_WinAPI_GetStdHandle ( $iStdHandle )","params":[{"label":"$iStdHandle","documentation":"Standard device for which a handle is to be returned. This can be one of the following values:0 - Handle to the standard input device1 - Handle to the standard output device2 - Handle to the standard error device"}]},"_WinAPI_GetStockObject":{"documentation":"Retrieves a handle to one of the predefined stock pens, brushes, fonts, or palettes","label":"_WinAPI_GetStockObject ( $iObject )","params":[{"label":"$iObject","documentation":"Specifies the type of stock object. This parameter can be any one of the following values:$BLACK_BRUSH - Black brush$DKGRAY_BRUSH - Dark gray brush$GRAY_BRUSH - Gray brush$HOLLOW_BRUSH - Hollow brush (equivalent to NULL_BRUSH)$LTGRAY_BRUSH - Light gray brush$NULL_BRUSH - Null brush (equivalent to HOLLOW_BRUSH)$WHITE_BRUSH - White brush$BLACK_PEN - Black pen$NULL_PEN - Null pen$WHITE_PEN - White pen$ANSI_FIXED_FONT - Windows fixed-pitch (monospace) system font$ANSI_VAR_FONT - Windows variable-pitch (proportional space) system font$DEVICE_DEFAULT_FONT - Device-dependent font$DEFAULT_GUI_FONT - Default font for user interface objects$OEM_FIXED_FONT - OEM dependent fixed-pitch (monospace) font$SYSTEM_FONT - System font$SYSTEM_FIXED_FONT - Fixed-pitch (monospace) system font used in Windows versions earlier than 3.0$DEFAULT_PALETTE - Default palette. This palette consists of the static colors in the system palette."}]},"_WinAPI_GetStretchBltMode":{"documentation":"Retrieves the current stretching mode","label":"_WinAPI_GetStretchBltMode ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetString":{"documentation":"Returns a string located at the specified memory address","label":"_WinAPI_GetString ( $pString [, $bUnicode = True] )","params":[{"label":"$pString","documentation":"Pointer to a null-terminated string."},{"label":"$bUnicode","documentation":"**[optional]** Specifies whether a string is Unicode or ASCII code of a character, valid values:    True - Unicode (Default).    False - ASCII."}]},"_WinAPI_GetSysColor":{"documentation":"Retrieves the current color of the specified display element","label":"_WinAPI_GetSysColor ( $iIndex )","params":[{"label":"$iIndex","documentation":"The display element whose color is to be retrieved. Can be one of the following:$COLOR_3DDKSHADOW - Dark shadow for three-dimensional display elements.$COLOR_3DFACE - Face color for three-dimensional display elements and for dialog box backgrounds.$COLOR_3DHIGHLIGHT - Highlight color for three-dimensional display elements (for edges facing the light source.)$COLOR_3DHILIGHT - Highlight color for three-dimensional display elements (for edges facing the light source.)$COLOR_3DLIGHT - Light color for three-dimensional display elements (for edges facing the light source.)$COLOR_3DSHADOW - Shadow color for three-dimensional display elements (for edges facing away from the light source).$COLOR_ACTIVEBORDER - Active window border.$COLOR_ACTIVECAPTION - Active window title bar.Specifies the left side color in the color gradient of an active window\'s title bar if the gradient effect is enabled.$COLOR_APPWORKSPACE - Background color of multiple document interface (MDI) applications.$COLOR_BACKGROUND - Desktop.$COLOR_BTNFACE - Face color for three-dimensional display elements and for dialog box backgrounds.$COLOR_BTNHIGHLIGHT - Highlight color for three-dimensional display elements (for edges facing the light source.)$COLOR_BTNHILIGHT - Highlight color for three-dimensional display elements (for edges facing the light source.)$COLOR_BTNSHADOW - Shadow color for three-dimensional display elements (for edges facing away from the light source).$COLOR_BTNTEXT - Text on push buttons.$COLOR_CAPTIONTEXT - Text in caption, size box, and scroll bar arrow box.$COLOR_DESKTOP - Desktop.$COLOR_GRADIENTACTIVECAPTION - Right side color in the color gradient of an active window\'s title bar.$COLOR_ACTIVECAPTION specifies the left side color.Use SPI_GETGRADIENTCAPTIONS with the SystemParametersInfo function to determine whether the gradient effect is enabled.$COLOR_GRADIENTINACTIVECAPTION - Right side color in the color gradient of an inactive window\'s title bar.$COLOR_INACTIVECAPTION specifies the left side color.$COLOR_GRAYTEXT - Grayed (disabled) text. This color is set to 0 if the current display driver does not support a solid gray color.$COLOR_HIGHLIGHT - Item(s) selected in a control.$COLOR_HIGHLIGHTTEXT - Text of item(s) selected in a control.$COLOR_HOTLIGHT - Color for a hyperlink or hot-tracked item.$COLOR_INACTIVEBORDER - Inactive window border.$COLOR_INACTIVECAPTION - Inactive window caption.Specifies the left side color in the color gradient of an inactive window\'s title bar if the gradient effect is enabled.$COLOR_INACTIVECAPTIONTEXT - Color of text in an inactive caption.$COLOR_INFOBK - Background color for tooltip controls.$COLOR_INFOTEXT - Text color for tooltip controls.$COLOR_MENU - Menu background.$COLOR_MENUHILIGHT - The color used to highlight menu items when the menu appears as a flat menu.The highlighted menu item is outlined with $COLOR_HIGHLIGHT.$COLOR_MENUBAR - The background color for the menu bar when menus appear as flat menus.However, $COLOR_MENU continues to specify the background color of the menu popup.$COLOR_MENUTEXT - Text in menus.$COLOR_SCROLLBAR - Scroll bar gray area.$COLOR_WINDOW - Window background.$COLOR_WINDOWFRAME - Window frame.$COLOR_WINDOWTEXT - Text in windows."}]},"_WinAPI_GetSysColorBrush":{"documentation":"Retrieves a handle identifying a logical brush that corresponds to the specified color index","label":"_WinAPI_GetSysColorBrush ( $iIndex )","params":[{"label":"$iIndex","documentation":"The display element whose color is to be retrieved"}]},"_WinAPI_GetSystemDefaultLangID":{"documentation":"Returns the language identifier for the system locale","label":"_WinAPI_GetSystemDefaultLangID (  )","params":[]},"_WinAPI_GetSystemDefaultLCID":{"documentation":"Returns the locale identifier (LCID) for the system locale","label":"_WinAPI_GetSystemDefaultLCID (  )","params":[]},"_WinAPI_GetSystemDefaultUILanguage":{"documentation":"Retrieves the language identifier for the system default UI language of the operating system","label":"_WinAPI_GetSystemDefaultUILanguage (  )","params":[]},"_WinAPI_GetSystemDEPPolicy":{"documentation":"Gets the data execution prevention (DEP) policy setting for the system","label":"_WinAPI_GetSystemDEPPolicy (  )","params":[]},"_WinAPI_GetSystemInfo":{"documentation":"Retrieves information about the current system","label":"_WinAPI_GetSystemInfo (  )","params":[]},"_WinAPI_GetSystemMetrics":{"documentation":"Retrieves the specified system metric or system configuration setting","label":"_WinAPI_GetSystemMetrics ( $iIndex )","params":[{"label":"$iIndex","documentation":"The system metric or configuration setting to be retrieved"}]},"_WinAPI_GetSystemPowerStatus":{"documentation":"Retrieves the power status of the system","label":"_WinAPI_GetSystemPowerStatus (  )","params":[]},"_WinAPI_GetSystemTimes":{"documentation":"Retrieves system timing information","label":"_WinAPI_GetSystemTimes (  )","params":[]},"_WinAPI_GetSystemWow64Directory":{"documentation":"Retrieves the path of the system directory used by WOW64","label":"_WinAPI_GetSystemWow64Directory (  )","params":[]},"_WinAPI_GetTabbedTextExtent":{"documentation":"Computes the width and height of a character string which may contain one or more tab characters","label":"_WinAPI_GetTabbedTextExtent ( $hDC, $sText [, $aTab = 0 [, $iStart = 0 [, $iEnd = -1]]] )","params":[{"label":"$hDC","documentation":"A handle to the device context."},{"label":"$sText","documentation":"A character string."},{"label":"$aTab","documentation":"**[optional]** The array containing the tab-stop positions, in device units. The tab stops must be sorted in increasingorder; the smallest x-value should be the first item in the array. Also, it can be an integer value that isone tab-stop position. In this case, the tab stops are separated by the distance specified by this value.If this parameter is 0 (Default), tabs are expanded to eight times the average character width."},{"label":"$iStart","documentation":"**[optional]** The index of array element that contains the first tab-stop position."},{"label":"$iEnd","documentation":"**[optional]** The index of array element that contains the last tab-stop position."}]},"_WinAPI_GetTempFileName":{"documentation":"Creates a name for a temporary file","label":"_WinAPI_GetTempFileName ( $sFilePath [, $sPrefix = \'\'] )","params":[{"label":"$sFilePath","documentation":"The directory path for the file name. Applications typically specify a period (.) for the current directory."},{"label":"$sPrefix","documentation":"**[optional]** The prefix string. The function uses up to the first three characters of this string as the prefix of thefile name."}]},"_WinAPI_GetTextAlign":{"documentation":"Retrieves the text-alignment setting for the specified device context","label":"_WinAPI_GetTextAlign ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetTextCharacterExtra":{"documentation":"Retrieves the current intercharacter spacing for the specified device context","label":"_WinAPI_GetTextCharacterExtra ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetTextColor":{"documentation":"Retrieves the current text color for the specified device context","label":"_WinAPI_GetTextColor ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetTextExtentPoint32":{"documentation":"Computes the width and height of the specified string of text","label":"_WinAPI_GetTextExtentPoint32 ( $hDC, $sText )","params":[{"label":"$hDC","documentation":"Identifies the device contex"},{"label":"$sText","documentation":"String of text"}]},"_WinAPI_GetTextFace":{"documentation":"Retrieves the typeface name of the font that is selected into the specified device context","label":"_WinAPI_GetTextFace ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetTextMetrics":{"documentation":"Retrieves basic information for the currently selected font","label":"_WinAPI_GetTextMetrics ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetThreadDesktop":{"documentation":"Retrieves a handle to the desktop assigned to the specified thread","label":"_WinAPI_GetThreadDesktop ( $iThreadId )","params":[{"label":"$iThreadId","documentation":"The thread identifier. The _WinAPI_CreateProcess() and _WinAPI_GetCurrentThreadId() return thread identifiers."}]},"_WinAPI_GetThreadErrorMode":{"documentation":"Retrieves the error mode for the calling thread","label":"_WinAPI_GetThreadErrorMode (  )","params":[]},"_WinAPI_GetThreadLocale":{"documentation":"Retrieves the locale identifier of the current locale for the calling thread","label":"_WinAPI_GetThreadLocale (  )","params":[]},"_WinAPI_GetThreadUILanguage":{"documentation":"Retrieves the language identifier of the first user interface language for the current thread","label":"_WinAPI_GetThreadUILanguage (  )","params":[]},"_WinAPI_GetTickCount":{"documentation":"Retrieves the number of milliseconds that have elapsed since the system was started","label":"_WinAPI_GetTickCount (  )","params":[]},"_WinAPI_GetTickCount64":{"documentation":"Retrieves the number of milliseconds that have elapsed since the system was started","label":"_WinAPI_GetTickCount64 (  )","params":[]},"_WinAPI_GetTimeFormat":{"documentation":"Formats time as a time string for a locale specified by identifier","label":"_WinAPI_GetTimeFormat ( [$iLCID = 0 [, $tSYSTEMTIME = 0 [, $iFlags = 0 [, $sFormat = \'\']]]] )","params":[{"label":"$iLCID","documentation":"**[optional]** The locale identifier (LCID) that specifies the locale or one of the following predefined values.$LOCALE_INVARIANT$LOCALE_SYSTEM_DEFAULT$LOCALE_USER_DEFAULTWindows Vista or later$LOCALE_CUSTOM_DEFAULT$LOCALE_CUSTOM_UI_DEFAULT$LOCALE_CUSTOM_UNSPECIFIED"},{"label":"$tSYSTEMTIME","documentation":"**[optional]** $tagSYSTEMTIME structure that contains the time information to format. If this parameter is 0 (Default),the function will use the current local system time."},{"label":"$iFlags","documentation":"**[optional]** The flags that specifies the time format options.This parameter can be one or more of the following values.$TIME_FORCE24HOURFORMAT$TIME_NOMINUTESORSECONDS$TIME_NOSECONDS$TIME_NOTIMEMARKER"},{"label":"$sFormat","documentation":"**[optional]** The string that is used to form the time. For example, \\"hh:mm:ss tt\\". If this parameter isomitted or an empty string (Default), the function returns the string according to the time formatfor the specified locale."}]},"_WinAPI_GetTopWindow":{"documentation":"Retrieves a handle to the child window at the top of the Z order","label":"_WinAPI_GetTopWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the parent window whose child windows are to be examined. If this parameter is 0, the functionreturns a handle to the window at the top of the Z order."}]},"_WinAPI_GetUDFColorMode":{"documentation":"Retrieves the current color mode for WinAPIEx UDF library","label":"_WinAPI_GetUDFColorMode (  )","params":[]},"_WinAPI_GetUpdateRect":{"documentation":"Retrieves the coordinates of the rectangle that completely encloses the update region of the specified window","label":"_WinAPI_GetUpdateRect ( $hWnd [, $bErase = True] )","params":[{"label":"$hWnd","documentation":"Handle to the window whose update region is to be retrieved."},{"label":"$bErase","documentation":"**[optional]** Specifies whether the background in the update region is to be erased, valid values:True - The background is erased (Default).False - The background remains unchanged."}]},"_WinAPI_GetUpdateRgn":{"documentation":"Retrieves the update region of a window by copying it into the specified region","label":"_WinAPI_GetUpdateRgn ( $hWnd, $hRgn [, $bErase = True] )","params":[{"label":"$hWnd","documentation":"Handle to the window with an update region that is to be retrieved."},{"label":"$hRgn","documentation":"Handle to the region to receive the update region."},{"label":"$bErase","documentation":"**[optional]** Specifies whether the background in the update region is to be erased, valid values:    True - The background is erased (Default).    False - The background remains unchanged."}]},"_WinAPI_GetUserDefaultLangID":{"documentation":"Returns the language identifier for the current user locale","label":"_WinAPI_GetUserDefaultLangID (  )","params":[]},"_WinAPI_GetUserDefaultLCID":{"documentation":"Returns the locale identifier (LCID) for the user default locale","label":"_WinAPI_GetUserDefaultLCID (  )","params":[]},"_WinAPI_GetUserDefaultUILanguage":{"documentation":"Returns the language identifier for the user UI language for the current user","label":"_WinAPI_GetUserDefaultUILanguage (  )","params":[]},"_WinAPI_GetUserGeoID":{"documentation":"Retrieves information about the geographical location of the user","label":"_WinAPI_GetUserGeoID (  )","params":[]},"_WinAPI_GetUserObjectInformation":{"documentation":"Retrieves information about the specified window station or desktop object","label":"_WinAPI_GetUserObjectInformation ( $hObject, $iIndex )","params":[{"label":"$hObject","documentation":"Handle to the window station or desktop object."},{"label":"$iIndex","documentation":"The information to be retrieved. The parameter can be one of the following values.$UOI_FLAGS$tagUSEROBJECTFLAGS structure containing information about a window station or desktop handle.$UOI_HEAPSIZEThe size of the desktop heap, in KB.$UOI_IO1 if the object is a handle to the desktop that is receiving input from the user, 0 otherwise.$UOI_NAMEThe name of the object, as a string.$UOI_TYPEThe type of the object, as a string.$UOI_USER_SIDThe security identifier (SID) structure as \\"byte[n]\\"."}]},"_WinAPI_GetVersion":{"documentation":"Retrieves version of the current operating system","label":"_WinAPI_GetVersion (  )","params":[]},"_WinAPI_GetVersionEx":{"documentation":"Retrieves information about the current operating system","label":"_WinAPI_GetVersionEx (  )","params":[]},"_WinAPI_GetVolumeInformation":{"documentation":"Retrieves information about the file system and volume associated with the specified root directory","label":"_WinAPI_GetVolumeInformation ( [$sRoot = \'\'] )","params":[{"label":"$sRoot","documentation":"**[optional]** The root directory of the volume to be described. If this parameter is empty string, the rootof the current directory is used. A trailing backslash is required. For example, you specify\\"\\\\\\\\MyServer\\\\MyShare\\" as \\"\\\\\\\\MyServer\\\\MyShare\\\\\\", or the \\"C\\" drive as \\"C:\\\\\\"."}]},"_WinAPI_GetVolumeInformationByHandle":{"documentation":"Retrieves information about the file system and volume associated with the specified file","label":"_WinAPI_GetVolumeInformationByHandle ( $hFile )","params":[{"label":"$hFile","documentation":"A handle to the file."}]},"_WinAPI_GetVolumeNameForVolumeMountPoint":{"documentation":"Retrieves a volume GUID path for the volume that is associated with the specified volume mount point","label":"_WinAPI_GetVolumeNameForVolumeMountPoint ( $sMountedPath )","params":[{"label":"$sMountedPath","documentation":"The path of a mounted folder (for example, Y:\\\\MountX\\\\) or a drive letter (for example, X:\\\\)."}]},"_WinAPI_GetWindow":{"documentation":"Retrieves the handle of a window that has a specified relationship to the specified window","label":"_WinAPI_GetWindow ( $hWnd, $iCmd )","params":[{"label":"$hWnd","documentation":"Handle of the window"},{"label":"$iCmd","documentation":"Specifies the relationship between the specified window and the window whose handle is to be retrieved.This parameter can be one of the following values:    $GW_CHILD - The retrieved handle identifies the child window at the top of the Z order, if the specified        window is a parent window; otherwise, the retrieved handle is 0.        The function examines only child windows of the specified window. It does not examine descendant windows.    $GW_HWNDFIRST - The retrieved handle identifies the window of the same type that is highest in the Z order.        If the specified window is a topmost window, the handle identifies the topmost window that is highest in the Z order.        If the specified window is a top-level window, the handle identifies the top level window that is highest in the Z order.        If the specified window is a child window, the handle identifies the sibling window that is highest in the Z order.    $GW_HWNDLAST - The retrieved handle identifies the window of the same type that is lowest in the Z order.        If the specified window is a topmost window, the handle identifies the topmost window that is lowest in the Z order.        If the specified window is a top-level window the handle identifies the top-level window that\'s lowest in the Z order.        If the specified window is a child window, the handle identifies the sibling window that is lowest in the Z order.    $GW_HWNDNEXT - The retrieved handle identifies the window below the specified window in the Z order.        If the specified window is a topmost window, the handle identifies the topmost window below the specified window.        If the specified window is a top-level window, the handle identifies the top-level window below the specified window.        If the specified window is a child window the handle identifies the sibling window below the specified window.    $GW_HWNDPREV - The retrieved handle identifies the window above the specified window in the Z order.        If the specified window is a topmost window, the handle identifies the topmost window above the specified window.        If the specified window is a top-level window, the handle identifies the top-level window above the specified window.        If the specified window is a child window, the handle identifies the sibling window above the specified window.    $GW_OWNER - The retrieved handle identifies the specified window\'s owner window if any."}]},"_WinAPI_GetWindowDC":{"documentation":"Retrieves the device context (DC) for the entire window","label":"_WinAPI_GetWindowDC ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of window"}]},"_WinAPI_GetWindowDisplayAffinity":{"documentation":"Retrieves the current display affinity setting, from any process, for a given window","label":"_WinAPI_GetWindowDisplayAffinity ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window for which display affinity setting is retrieved."}]},"_WinAPI_GetWindowExt":{"documentation":"Retrieves the x-extent and y-extent of the window for the specified device context","label":"_WinAPI_GetWindowExt ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetWindowFileName":{"documentation":"Retrieves the fully-qualified path of the module associated with the specified window handle","label":"_WinAPI_GetWindowFileName ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window whose module file name will be retrieved."}]},"_WinAPI_GetWindowHeight":{"documentation":"Returns the height of the window","label":"_WinAPI_GetWindowHeight ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to a window"}]},"_WinAPI_GetWindowInfo":{"documentation":"Retrieves information about the specified window","label":"_WinAPI_GetWindowInfo ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window whose information is to be retrieved."}]},"_WinAPI_GetWindowLong":{"documentation":"Retrieves information about the specified window","label":"_WinAPI_GetWindowLong ( $hWnd, $iIndex )","params":[{"label":"$hWnd","documentation":"Handle of the window"},{"label":"$iIndex","documentation":"Specifies the 0-based offset to the value to be retrieved.Valid values are in the range zero through the number of bytes of extra window memory, minus four;for example, if you specified 12 or more bytes of extra memory, a value of 8 would be an index to the third 32 bit integer.To retrieve any other value, specify one of the following values:    $GWL_EXSTYLE - Retrieves the extended window styles    $GWL_STYLE - Retrieves the window styles    $GWL_WNDPROC - Retrieves the address of the window procedure    $GWL_HINSTANCE - Retrieves the handle of the application instance    $GWL_HWNDPARENT - Retrieves the handle of the parent window, if any    $GWL_ID - Retrieves the identifier of the window    $GWL_USERDATA - Retrieves the 32-bit value associated with the window"}]},"_WinAPI_GetWindowOrg":{"documentation":"Retrieves the x-coordinates and y-coordinates of the window origin for the specified device context","label":"_WinAPI_GetWindowOrg ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetWindowPlacement":{"documentation":"Retrieves the placement of the window for Min, Max, and normal positions","label":"_WinAPI_GetWindowPlacement ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of the window"}]},"_WinAPI_GetWindowRect":{"documentation":"Retrieves the dimensions of the bounding rectangle of the specified window","label":"_WinAPI_GetWindowRect ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of the window"}]},"_WinAPI_GetWindowRgn":{"documentation":"Obtains a copy of the window region of a window","label":"_WinAPI_GetWindowRgn ( $hWnd, $hRgn )","params":[{"label":"$hWnd","documentation":"Handle to the window whose window region is to be obtained."},{"label":"$hRgn","documentation":"Handle to the region which will be modified to represent the window region."}]},"_WinAPI_GetWindowRgnBox":{"documentation":"Retrieves the dimensions of the tightest bounding rectangle for the window region of a window","label":"_WinAPI_GetWindowRgnBox ( $hWnd, ByRef $tRECT )","params":[{"label":"$hWnd","documentation":"Handle to the window."},{"label":"$tRECT","documentation":"Returns a $tagRECT structure that is created by this function, and contains the rectangle dimensions, in deviceunits relative to the upper-left corner of the window."}]},"_WinAPI_GetWindowSubclass":{"documentation":"Retrieves the reference data for the specified window subclass callback","label":"_WinAPI_GetWindowSubclass ( $hWnd, $pSubclassProc, $idSubClass )","params":[{"label":"$hWnd","documentation":"Handle of the window being subclassed."},{"label":"$pSubclassProc","documentation":"A pointer to a window procedure. This pointer and the subclass ID uniquely identify this subclass callback.(See MSDN for more information)"},{"label":"$idSubClass","documentation":"The subclass ID."}]},"_WinAPI_GetWindowText":{"documentation":"Retrieves the text of the specified window\'s title bar","label":"_WinAPI_GetWindowText ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of the window"}]},"_WinAPI_GetWindowThreadProcessId":{"documentation":"Retrieves the identifier of the thread that created the specified window","label":"_WinAPI_GetWindowThreadProcessId ( $hWnd, ByRef $iPID )","params":[{"label":"$hWnd","documentation":"Window handle"},{"label":"$iPID","documentation":"Variable to hold the return the process ID (PID) of the thread."}]},"_WinAPI_GetWindowWidth":{"documentation":"Returns the width of the window","label":"_WinAPI_GetWindowWidth ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to a window"}]},"_WinAPI_GetWorkArea":{"documentation":"Retrieves the size of the working area on the primary display monitor","label":"_WinAPI_GetWorkArea (  )","params":[]},"_WinAPI_GetWorldTransform":{"documentation":"Retrieves the current world-space to page-space transformation","label":"_WinAPI_GetWorldTransform ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_GetXYFromPoint":{"documentation":"Returns the X/Y values from a $tagPOINT structure","label":"_WinAPI_GetXYFromPoint ( ByRef $tPoint, ByRef $iX, ByRef $iY )","params":[{"label":"$tPoint","documentation":"$tagPOINT structure"},{"label":"$iX","documentation":"Returns X value"},{"label":"$iY","documentation":"Returns Y value"}]},"_WinAPI_GlobalMemoryStatus":{"documentation":"Retrieves information about current available memory","label":"_WinAPI_GlobalMemoryStatus (  )","params":[]},"_WinAPI_GradientFill":{"documentation":"Fills rectangle or triangle gradient","label":"_WinAPI_GradientFill ( $hDC, Const ByRef $aVertex [, $iStart = 0 [, $iEnd = -1 [, $bRotate = False]]] )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$aVertex","documentation":"The 2D array ([x1, y1, $iRGB1], [x2, y2, $iRGB2], ... [xN, yN, $iRGBN]) that contains the necessarygradient vertices. Each vertex in this array contains the following parameters.x - The x-coordinate, in logical units.y - The y-coordinate, in logical unitsrgb - The color information at the point of x, y."},{"label":"$iStart","documentation":"**[optional]** The index of array to start filling at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop filling at."},{"label":"$bRotate","documentation":"**[optional]** Specifies whether fills a rectangle from left to right edge (horizontal gradient).    $bRotate used only for the rectangular gradients, for the triangular gradients this parameter will be ignored,    valid values:        True - Fills from left to right edge.        False - Fills from top to bottom edge (Default)."}]},"_WinAPI_GUIDFromString":{"documentation":"Converts a string GUID to binary form","label":"_WinAPI_GUIDFromString ( $sGUID )","params":[{"label":"$sGUID","documentation":"GUID in string form"}]},"_WinAPI_GUIDFromStringEx":{"documentation":"Converts a string GUID to binary form","label":"_WinAPI_GUIDFromStringEx ( $sGUID, $tGUID )","params":[{"label":"$sGUID","documentation":"GUID in string form"},{"label":"$tGUID","documentation":"A $tagGUID structure or a ptr to it where the GUID will be stored"}]},"_WinAPI_HashData":{"documentation":"Hashes a memory block","label":"_WinAPI_HashData ( $pMemory, $iSize [, $iLength = 32] )","params":[{"label":"$pMemory","documentation":"A pointer to a memory block containing data to hash."},{"label":"$iSize","documentation":"The size of the memory block, in bytes."},{"label":"$iLength","documentation":"**[optional]** The length of the hash data, in bytes. It should be no larger than 256, otherwise, the function fails. Default is 32."}]},"_WinAPI_HashString":{"documentation":"Hashes a string","label":"_WinAPI_HashString ( $sString [, $bCaseSensitive = True [, $iLength = 32]] )","params":[{"label":"$sString","documentation":"The string to hash."},{"label":"$bCaseSensitive","documentation":"**[optional]** Specifies whether to treat the string as case sensitive when computing the hash value, valid values:True - The lowercase and uppercase string hash to the different value (Default).False - The lowercase and uppercase string hash to the same value."},{"label":"$iLength","documentation":"**[optional]** The length of the hash data, in bytes. It should be no larger than 256, otherwise, the function fails. Default is 32."}]},"_WinAPI_HiByte":{"documentation":"Returns the high BYTE of a 16-bit (2 bytes) value","label":"_WinAPI_HiByte ( $iValue )","params":[{"label":"$iValue","documentation":"16-bit value."}]},"_WinAPI_HideCaret":{"documentation":"Removes the caret from the screen","label":"_WinAPI_HideCaret ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window that owns the caret. If this parameter is 0, _WinAPI_HideCaret() searches thecurrent task for the window that owns the caret."}]},"_WinAPI_HiDWord":{"documentation":"Returns the high DWORD of a 64-bit (8 bytes) value","label":"_WinAPI_HiDWord ( $iValue )","params":[{"label":"$iValue","documentation":"64-bit value."}]},"_WinAPI_HiWord":{"documentation":"Returns the high word of a longword value","label":"_WinAPI_HiWord ( $iLong )","params":[{"label":"$iLong","documentation":"Longword value"}]},"_WinAPI_InflateRect":{"documentation":"Increases or decreases the width and height of the specified rectangle","label":"_WinAPI_InflateRect ( ByRef $tRECT, $iDX, $iDY )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that increases or decreases in size."},{"label":"$iDX","documentation":"The amount to increase or decrease (negative value) the rectangle width."},{"label":"$iDY","documentation":"The amount to increase or decrease (negative value) the rectangle height."}]},"_WinAPI_InitMUILanguage":{"documentation":"Enables an application to specify a language to be used with the common controls that is different from the system language","label":"_WinAPI_InitMUILanguage ( $iLanguage )","params":[{"label":"$iLanguage","documentation":"The language identifier to be used by the common controls."}]},"_WinAPI_InProcess":{"documentation":"Determines whether a window belongs to the current process","label":"_WinAPI_InProcess ( $hWnd, ByRef $hLastWnd )","params":[{"label":"$hWnd","documentation":"Window handle to be tested"},{"label":"$hLastWnd","documentation":"Last window tested. If $hWnd = $hLastWnd, this process will immediately return True. Otherwise,_WinAPI_InProcess() will be called. If $hWnd is in process, $hLastWnd will be set to $hWnd on return."}]},"_WinAPI_IntersectClipRect":{"documentation":"Creates a new clipping region from the intersection of the current clipping region and the specified rectangle","label":"_WinAPI_IntersectClipRect ( $hDC, $tRECT )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the specified rectangle."}]},"_WinAPI_IntersectRect":{"documentation":"Creates the intersection of two rectangles","label":"_WinAPI_IntersectRect ( $tRECT1, $tRECT2 )","params":[{"label":"$tRECT1","documentation":"$tagRECT structure that contains the first source rectangle."},{"label":"$tRECT2","documentation":"$tagRECT structure that contains the second source rectangle."}]},"_WinAPI_IntToDWord":{"documentation":"Converts a value of type INT to a value of type DWORD","label":"_WinAPI_IntToDWord ( $iValue )","params":[{"label":"$iValue","documentation":"The value to be converted."}]},"_WinAPI_IntToFloat":{"documentation":"Returns a 4 byte integer as a float value","label":"_WinAPI_IntToFloat ( $iInt )","params":[{"label":"$iInt","documentation":"Integer value"}]},"_WinAPI_InvalidateRect":{"documentation":"Adds a rectangle to the specified window\'s update region","label":"_WinAPI_InvalidateRect ( $hWnd [, $tRECT = 0 [, $bErase = True]] )","params":[{"label":"$hWnd","documentation":"Handle to windows"},{"label":"$tRECT","documentation":"**[optional]** $tagRECT structure that contains the client coordinates of the rectangle to be added to theupdate region. If this parameter is 0 the entire client area is added to the update region."},{"label":"$bErase","documentation":"**[optional]** Specifies whether the background within the update region is to be erased when the updateregion is processed. If this parameter is True the background is erased when the BeginPaint function iscalled. If this parameter is False, the background remains unchanged."}]},"_WinAPI_InvalidateRgn":{"documentation":"Adds a region to the specified window\'s update region","label":"_WinAPI_InvalidateRgn ( $hWnd [, $hRgn = 0 [, $bErase = True]] )","params":[{"label":"$hWnd","documentation":"Handle to the window with an update region that is to be modified."},{"label":"$hRgn","documentation":"**[optional]** Handle to the region to be added to the update region. The region is assumed to have client coordinates.If this parameter is 0, the entire client area is added to the update region."},{"label":"$bErase","documentation":"**[optional]** Specifies whether the background within the update region is to be erased when the update region is processed, valid values:    True - The background is erased (Default).    False - The background remains unchanged."}]},"_WinAPI_InvertANDBitmap":{"documentation":"Inverts the specified AND bitmask bitmap by performing a logical NOT operation","label":"_WinAPI_InvertANDBitmap ( $hBitmap [, $bDelete = False] )","params":[{"label":"$hBitmap","documentation":"Handle to the source bitmap that must be inverted."},{"label":"$bDelete","documentation":"**[optional]** Specifies whether to delete the source bitmap after the function is successful, valid values:    True - The bitmap will be destroyed when the function succeeds.    False - Do not delete, you must destroy a bitmap when it no longer needed (Default)."}]},"_WinAPI_InvertColor":{"documentation":"Inverts (negative) the specified color","label":"_WinAPI_InvertColor ( $iColor )","params":[{"label":"$iColor","documentation":"The color to be inverted. This color can be specified in RGB or BGR format."}]},"_WinAPI_InvertRect":{"documentation":"Inverts a rectangle in a window by performing a logical NOT operation on the color values for each pixel","label":"_WinAPI_InvertRect ( $hDC, $tRECT )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the rectangle to be inverted."}]},"_WinAPI_InvertRgn":{"documentation":"Inverts the colors in the specified region","label":"_WinAPI_InvertRgn ( $hDC, $hRgn )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$hRgn","documentation":"Handle to the region for which colors are inverted. The region\'s coordinates arepresumed to be logical coordinates."}]},"_WinAPI_IOCTL":{"documentation":"Create a unique system I/O control code (IOCTL)","label":"_WinAPI_IOCTL ( $iDeviceType, $iFunction, $iMethod, $iAccess )","params":[{"label":"$iDeviceType","documentation":"The type of device."},{"label":"$iFunction","documentation":"The action within the device category."},{"label":"$iMethod","documentation":"The method codes for how buffers are passed for I/O and file system controls."},{"label":"$iAccess","documentation":"The access check value for any access."}]},"_WinAPI_IsAlphaBitmap":{"documentation":"Determines whether the specified bitmap has an alpha channel","label":"_WinAPI_IsAlphaBitmap ( $hBitmap )","params":[{"label":"$hBitmap","documentation":"Handle to the bitmap to test. This bitmap must be a 32 bits-per-pixel."}]},"_WinAPI_IsBadCodePtr":{"documentation":"Determines whether the calling process has read access to the memory at the specified address","label":"_WinAPI_IsBadCodePtr ( $pAddress )","params":[{"label":"$pAddress","documentation":"A pointer to a memory address."}]},"_WinAPI_IsBadReadPtr":{"documentation":"Verifies that the calling process has read access to the specified range of memory","label":"_WinAPI_IsBadReadPtr ( $pAddress, $iLength )","params":[{"label":"$pAddress","documentation":"A pointer to the first byte of the memory block."},{"label":"$iLength","documentation":"The size of the memory block, in bytes."}]},"_WinAPI_IsBadStringPtr":{"documentation":"Verifies that the calling process has read access to the specified range of memory","label":"_WinAPI_IsBadStringPtr ( $pAddress, $iLength )","params":[{"label":"$pAddress","documentation":"A pointer to a null-terminated string, either Unicode or ASCII."},{"label":"$iLength","documentation":"The maximum size of the string, in TCHARs."}]},"_WinAPI_IsBadWritePtr":{"documentation":"Verifies that the calling process has write access to the specified range of memory","label":"_WinAPI_IsBadWritePtr ( $pAddress, $iLength )","params":[{"label":"$pAddress","documentation":"A pointer to the first byte of the memory block."},{"label":"$iLength","documentation":"The size of the memory block, in bytes."}]},"_WinAPI_IsChild":{"documentation":"Tests whether a window is a child window of a specified parent window","label":"_WinAPI_IsChild ( $hWnd, $hWndParent )","params":[{"label":"$hWnd","documentation":"Handle to the window to be tested."},{"label":"$hWndParent","documentation":"Handle to the parent window."}]},"_WinAPI_IsClassName":{"documentation":"Wrapper to check ClassName of the control","label":"_WinAPI_IsClassName ( $hWnd, $sClassName )","params":[{"label":"$hWnd","documentation":"Handle to a control"},{"label":"$sClassName","documentation":"Class name to check"}]},"_WinAPI_IsDoorOpen":{"documentation":"Checks if a CD (DVD) tray is open","label":"_WinAPI_IsDoorOpen ( $sDrive )","params":[{"label":"$sDrive","documentation":"The drive letter of the CD tray to check, in the format D:, E:, etc."}]},"_WinAPI_IsElevated":{"documentation":"Determines whether the current process is elevated","label":"_WinAPI_IsElevated (  )","params":[]},"_WinAPI_IsHungAppWindow":{"documentation":"Determines whether the specified application is not responding","label":"_WinAPI_IsHungAppWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window."}]},"_WinAPI_IsIconic":{"documentation":"Determines whether the specified window is minimized (iconic)","label":"_WinAPI_IsIconic ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to test."}]},"_WinAPI_IsInternetConnected":{"documentation":"Determines whether the current user is connected to the Internet","label":"_WinAPI_IsInternetConnected (  )","params":[]},"_WinAPI_IsLoadKBLayout":{"documentation":"Determines whether the specified input locale loaded into the system","label":"_WinAPI_IsLoadKBLayout ( $iLanguage )","params":[{"label":"$iLanguage","documentation":"The input locale identifier to check."}]},"_WinAPI_IsMemory":{"documentation":"Determines whether the specified pointer points to the memory block in the internal library heap","label":"_WinAPI_IsMemory ( $pMemory )","params":[{"label":"$pMemory","documentation":"A pointer to the memory block that to be tested."}]},"_WinAPI_IsNameInExpression":{"documentation":"Determines whether a string matches the specified pattern","label":"_WinAPI_IsNameInExpression ( $sString, $sPattern [, $bCaseSensitive = False] )","params":[{"label":"$sString","documentation":"The string to be compared against the pattern. This string cannot contain wildcard characters."},{"label":"$sPattern","documentation":"The pattern string. This string can contain wildcard characters."},{"label":"$bCaseSensitive","documentation":"**[optional]** Specifies whether to treat the string as case sensitive when matching, valid values:    True - The case-sensitive matching.    False - The case-insensitive matching (Default)."}]},"_WinAPI_IsNetworkAlive":{"documentation":"Determines whether or not a local system is connected to a network, and identifies the type of network connection","label":"_WinAPI_IsNetworkAlive (  )","params":[]},"_WinAPI_IsPathShared":{"documentation":"Determines whether the path is shared","label":"_WinAPI_IsPathShared ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The fully-qualified local path to be tested."}]},"_WinAPI_IsProcessInJob":{"documentation":"Determines whether the process is running in the specified job","label":"_WinAPI_IsProcessInJob ( $hProcess [, $hJob = 0] )","params":[{"label":"$hProcess","documentation":"Handle to the process to be tested. The handle must have the $PROCESS_QUERY_INFORMATION or$PROCESS_QUERY_LIMITED_INFORMATION access right."},{"label":"$hJob","documentation":"**[optional]** Handle to the job. If this parameter is 0 (Default), the function tests if the process is running under any job."}]},"_WinAPI_IsProcessorFeaturePresent":{"documentation":"Determines whether the specified processor feature is supported by the current computer","label":"_WinAPI_IsProcessorFeaturePresent ( $iFeature )","params":[{"label":"$iFeature","documentation":"The processor feature to be tested. This parameter can be one of the $PF_* constants defined in APISysConstants.au3."}]},"_WinAPI_IsRectEmpty":{"documentation":"Determines whether the specified rectangle is empty","label":"_WinAPI_IsRectEmpty ( $tRECT )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the rectangle."}]},"_WinAPI_IsValidLocale":{"documentation":"Determines if the specified locale is installed or supported on the operating system","label":"_WinAPI_IsValidLocale ( $iLCID [, $iFlag = 0] )","params":[{"label":"$iLCID","documentation":"The locale identifier (LCID) that specifies the locale or one of the following predefined values.$LOCALE_INVARIANT$LOCALE_SYSTEM_DEFAULT$LOCALE_USER_DEFAULTWindows Vista or later$LOCALE_CUSTOM_DEFAULT$LOCALE_CUSTOM_UI_DEFAULT$LOCALE_CUSTOM_UNSPECIFIED"},{"label":"$iFlag","documentation":"**[optional]** Flag specifying the validity test to apply to the locale identifier.This parameter can have one of the following values.$LCID_INSTALLED$LCID_SUPPORTED"}]},"_WinAPI_IsWindow":{"documentation":"Determines whether the specified window handle identifies an existing window","label":"_WinAPI_IsWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to be tested"}]},"_WinAPI_IsWindowEnabled":{"documentation":"Determines whether the specified window is enabled for mouse and keyboard input","label":"_WinAPI_IsWindowEnabled ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to test."}]},"_WinAPI_IsWindowUnicode":{"documentation":"Determines whether the specified window is a native Unicode window","label":"_WinAPI_IsWindowUnicode ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to test."}]},"_WinAPI_IsWindowVisible":{"documentation":"Retrieves the visibility state of the specified window","label":"_WinAPI_IsWindowVisible ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of window"}]},"_WinAPI_IsWow64Process":{"documentation":"Determines whether the specified process is running under WOW64","label":"_WinAPI_IsWow64Process ( [$iPID = 0] )","params":[{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_IsWritable":{"documentation":"Determines whether a disk is writable","label":"_WinAPI_IsWritable ( $sDrive )","params":[{"label":"$sDrive","documentation":"The drive letter of the disk to check, in the format D:, E:, etc."}]},"_WinAPI_IsZoomed":{"documentation":"Determines whether a window is maximized","label":"_WinAPI_IsZoomed ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to test."}]},"_WinAPI_Keybd_Event":{"documentation":"Synthesizes a keystroke","label":"_WinAPI_Keybd_Event ( $vKey, $iFlags [, $iScanCode = 0 [, $iExtraInfo = 0]] )","params":[{"label":"$vKey","documentation":"The virtual-key code ($VK_*). The code must be a value in the range 1 to 254.0x01 - Left mouse button0x02 - Right mouse button0x03 - Control-break processing0x04 - Middle mouse button (three-button mouse)0x05 - X1 mouse button0x06 - X2 mouse button0x08 - BACKSPACE key0x09 - TAB key0x0C - CLEAR key0x0D - ENTER key0x10 - SHIFT key0x11 - CTRL key0x12 - ALT key0x13 - PAUSE key0x14 - CAPS LOCK key0x1B - ESC key0x20 - SPACEBAR key0x21 - PAGE UP key0x22 - PAGE DOWN key0x23 - END key0x24 - HOME key0x25 - LEFT ARROW key0x26 - UP ARROW key0x27 - RIGHT ARROW key0x28 - DOWN ARROW key0x29 - SELECT key0x2A - PRINT key0x2B - EXECUTE key0x2C - PRINT SCREEN key0x2D - INS key0x2E - DEL key0x2F - HELP key0x30 - 0x39 - (0 - 9) key0x41 - 0x5A - (A - Z) key0x5B - Left Windows key0x5C - Right Windows key0x5D - Applications key0x5F - Computer Sleep key0x60 - 0x69 - Numeric keypad (0 - 9) key0x6A - Multiply key0x6B - Add key0x6C - Separator key0x6D - Subtract key0x6E - Decimal key0x6F - Divide key0x70 - 0x87 - (F1 - F24) key0x90 - NUM LOCK key0x91 - SCROLL LOCK key0xA0 - Left SHIFT key0xA1 - Right SHIFT key0xA2 - Left CONTROL key0xA3 - Right CONTROL key0xA4 - Left MENU key0xA5 - Right MENU key0xA6 - Browser Back key0xA7 - Browser Forward key0xA8 - Browser Refresh key0xA9 - Browser Stop key0xAA - Browser Search key0xAB - Browser Favorites key0xAC - Browser Start and Home key0xAD - Volume Mute key0xAE - Volume Down key0xAF - Volume Up key0xB0 - Next Track key0xB1 - Previous Track key0xB2 - Stop Media key0xB3 - Play/Pause Media key0xB4 - Start Mail key0xB5 - Select Media key0xB6 - Start Application 1 key0xB7 - Start Application 2 key0xBA - \';:\' key0xBB - \'+\' key0xBC - \',\' key0xBD - \'-\' key0xBE - \'.\' key0xBF - \'/?\' key0xC0 - \'`~\' key0xDB - \'[{\' key0xDC - \'\\\\|\' key0xDD - \']}\' key0xDE - \'single-quote/double-quote\' key0xE2 - Either the angle bracket key or the backslash key on the RT 102-key keyboard0xE7 - Used to pass Unicode characters as if they were keystrokes0xF6 - Attn key0xF7 - CrSel key0xF8 - ExSel key0xF9 - Erase EOF key0xFA - Play key0xFB - Zoom key0xFD - PA1 key0xFE - Clear key"},{"label":"$iFlags","documentation":"This parameter can be one or more of the following values.$KEYEVENTF_EXTENDEDKEY$KEYEVENTF_KEYUP"},{"label":"$iScanCode","documentation":"**[optional]** The hardware scan code for the key. Default is 0."},{"label":"$iExtraInfo","documentation":"**[optional]** The additional value associated with the key stroke. Default is 0."}]},"_WinAPI_KillTimer":{"documentation":"Destroys the specified timer","label":"_WinAPI_KillTimer ( $hWnd, $iTimerID )","params":[{"label":"$hWnd","documentation":"Handle to the window associated with the specified timer. This value must be the same as the$hWnd value passed to the _WinAPI_SetTimer() function that created the timer."},{"label":"$iTimerID","documentation":"The timer identifier which specifies the timer to be destroyed."}]},"_WinAPI_LineDDA":{"documentation":"Determines which pixels should be highlighted for a line","label":"_WinAPI_LineDDA ( $iX1, $iY1, $iX2, $iY2, $pLineProc [, $pData = 0] )","params":[{"label":"$iX1","documentation":"Specifies the x-coordinate, in logical units, of the line\'s starting point."},{"label":"$iY1","documentation":"Specifies the y-coordinate, in logical units, of the line\'s starting point."},{"label":"$iX2","documentation":"Specifies the x-coordinate, in logical units, of the line\'s ending point."},{"label":"$iY2","documentation":"Specifies the y-coordinate, in logical units, of the line\'s ending point."},{"label":"$pLineProc","documentation":"Pointer to an application-defined callback function."},{"label":"$pData","documentation":"**[optional]** Pointer to the application-defined data."}]},"_WinAPI_LineTo":{"documentation":"Draws a line from the current position up to, but not including, the specified point","label":"_WinAPI_LineTo ( $hDC, $iX, $iY )","params":[{"label":"$hDC","documentation":"Handle to device context"},{"label":"$iX","documentation":"X coordinate of the line\'s ending point."},{"label":"$iY","documentation":"Y coordinate of the line\'s ending point."}]},"_WinAPI_LoadBitmap":{"documentation":"Loads the specified bitmap resource from a module\'s executable file","label":"_WinAPI_LoadBitmap ( $hInstance, $sBitmap )","params":[{"label":"$hInstance","documentation":"Handle to the instance of the module whose executable file contains the bitmap to be loaded"},{"label":"$sBitmap","documentation":"The name of the bitmap resource to be loaded. Alternatively this can consist of the resourceidentifier in the low order word and 0 in the high order word."}]},"_WinAPI_LoadCursor":{"documentation":"Loads the specified cursor resource from the executable (.exe) file","label":"_WinAPI_LoadCursor ( $hInstance, $sName )","params":[{"label":"$hInstance","documentation":"Handle to an instance of the module whose executable file contains the cursor to be loaded."},{"label":"$sName","documentation":"The name of the cursor resource or resource identifier to be loaded. To use one of the predefinedcursors, the application must set the $hInstance parameter to 0and the $sName parameter to oneof the following values.$IDC_ARROW$IDC_IBEAM$IDC_WAIT$IDC_CROSS$IDC_UPARROW$IDC_SIZE$IDC_ICON$IDC_SIZENWSE$IDC_SIZENESW$IDC_SIZEWE$IDC_SIZENS$IDC_SIZEALL$IDC_NO$IDC_HAND$IDC_APPSTARTING$IDC_HELP"}]},"_WinAPI_LoadCursorFromFile":{"documentation":"Creates a cursor based on data contained in a file","label":"_WinAPI_LoadCursorFromFile ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The file data to be used to create the cursor. The data in the file must be in either .CUR or .ANI format."}]},"_WinAPI_LoadIcon":{"documentation":"Loads the specified icon resource from the executable (.exe) file associated with an application instance","label":"_WinAPI_LoadIcon ( $hInstance, $sName )","params":[{"label":"$hInstance","documentation":"A handle to an instance of the module whose executable file contains the icon to be loaded."},{"label":"$sName","documentation":"The name of the icon resource to be loaded. Alternatively, if $hInstance is 0, it can beone of the following predefined values.$IDI_APPLICATION$IDI_HAND$IDI_QUESTION$IDI_EXCLAMATION$IDI_ASTERISK$IDI_WINLOGO$IDI_SHIELD$IDI_ERROR$IDI_INFORMATION$IDI_WARNING"}]},"_WinAPI_LoadIconMetric":{"documentation":"Loads a specified icon resource with a client-specified system metric","label":"_WinAPI_LoadIconMetric ( $hInstance, $sName, $iMetric )","params":[{"label":"$hInstance","documentation":"Handle to the module of either a DLL or executable (.exe) file that contains the icon to be loaded."},{"label":"$sName","documentation":"The information about the icon to load. If $hInstance is not 0, $sName specifies the icon resourceeither by name or ordinal, otherwise, $sName specifies either the name of a standalone icon (.ico)file or the identifier of a predefined icon to load.$IDI_APPLICATION$IDI_HAND$IDI_QUESTION$IDI_EXCLAMATION$IDI_ASTERISK$IDI_WINLOGO$IDI_SHIELD$IDI_ERROR$IDI_INFORMATION$IDI_WARNING"},{"label":"$iMetric","documentation":"The desired metric. It can be one of the following values.$LIM_SMALL$LIM_LARGE"}]},"_WinAPI_LoadIconWithScaleDown":{"documentation":"Loads an icon and scales down a larger image instead of scaling up a smaller image","label":"_WinAPI_LoadIconWithScaleDown ( $hInstance, $sName, $iWidth, $iHeight )","params":[{"label":"$hInstance","documentation":"Handle to the module of either a DLL or executable (.exe) file that contains the icon to be loaded."},{"label":"$sName","documentation":"The information about the icon to load. If $hInstance is not 0, $sName specifies the icon resourceeither by name or ordinal, otherwise, $sName specifies either the name of a standalone icon (.ico)file or the identifier of a predefined icon to load.$IDI_APPLICATION$IDI_HAND$IDI_QUESTION$IDI_EXCLAMATION$IDI_ASTERISK$IDI_WINLOGO$IDI_SHIELD$IDI_ERROR$IDI_INFORMATION$IDI_WARNING"},{"label":"$iWidth","documentation":"The desired width, in pixels, of the icon."},{"label":"$iHeight","documentation":"The desired height, in pixels, of the icon."}]},"_WinAPI_LoadImage":{"documentation":"Loads an icon, cursor, or bitmap","label":"_WinAPI_LoadImage ( $hInstance, $sImage, $iType, $iXDesired, $iYDesired, $iLoad )","params":[{"label":"$hInstance","documentation":"Identifies an instance of the module that contains the image to be loaded. To load an OEMimage, set this parameter to zero."},{"label":"$sImage","documentation":"Identifies the image to load. If the $hInstance parameter is not 0 and the $iLoad parameterdoes not include $LR_LOADFROMFILE $sImage is a string that contains the name of the image resource in the$hInstance module. If $hInstance is 0 and $LR_LOADFROMFILE is not specified, the low-order word of thisparameter must be the identifier of the OEM image to load."},{"label":"$iType","documentation":"Specifies the type of image to be loaded. This parameter can be one of the following values:$IMAGE_BITMAP - Loads a bitmap$IMAGE_CURSOR - Loads a cursor$IMAGE_ICON - Loads an icon"},{"label":"$iXDesired","documentation":"Specifies the width, in pixels, of the icon or cursor. If this is 0and $iLoad is $LR_DEFAULTSIZE the function uses the SM_CXICON or SM_CXCURSOR systemmetric value to set the width. If this parameter is 0 and $LR_DEFAULTSIZE is notused, the function uses the actual resource width."},{"label":"$iYDesired","documentation":"Specifies the height, in pixels, of the icon or cursor. If this is 0and $iLoad is $LR_DEFAULTSIZE the function uses the SM_CYICON or SM_CYCURSOR systemmetric value to set the height. If this parameter is 0 and $LR_DEFAULTSIZE is notused, the function uses the actual resource height."},{"label":"$iLoad","documentation":"Specifies a combination of the following values:$LR_DEFAULTCOLOR - The default flag$LR_CREATEDIBSECTION - When the $iType parameter specifies $IMAGE_BITMAP, causes the function to return a DIBsection bitmap rather than a compatible bitmap. This flag is useful for loading a bitmap without mapping itto the colors of the display device.$LR_DEFAULTSIZE - Uses the width or height specified by the system metric values for cursors or icons ifthe $iXDesired or $iYDesired values are set to 0. If this flag is not specified and $iXDesired and $iYDesiredare set to zero, the function uses the actual resource size. If the resource contains multiple images thefunction uses the size of the first image.$LR_LOADFROMFILE - Loads the image from the file specified by the $sImage parameter. If this flag is notspecified, $sImage is the name of the resource.$LR_LOADMAP3DCOLORS - Searches the color table for the image and replaces the following shades of gray withthe corresponding 3D color:Dk Gray: RGB(128,128,128) COLOR_3DSHADOWGray : RGB(192,192,192) COLOR_3DFACELt Gray: RGB(223,223,223) COLOR_3DLIGHT$LR_LOADTRANSPARENT - Gets the color value of the first pixel in the image and replaces the correspondingentry in the color table with the default window color. All pixels in the image that use that entry becomethe default window color. This value applies only to images that have corresponding color tables. If $iLoadincludes both the $LR_LOADTRANSPARENT and $LR_LOADMAP3DCOLORS values, $LRLOADTRANSPARENT takes precedence.However, the color table entry is replaced with COLOR_3DFACE rather than COLOR_WINDOW.$LR_MONOCHROME - Loads the image in black and white$LR_SHARED - Shares the image handle if the image is loaded multiple times. If LR_SHARED is not set,a second call to LoadImage for the same resource will load the image again and return a different handle. Donot use $LR_SHARED for images that have non-standard sizes, that may change after loading, or that are loadedfrom a file."}]},"_WinAPI_LoadIndirectString":{"documentation":"Extracts the string from the specified resource when given an indirect string","label":"_WinAPI_LoadIndirectString ( $sStrIn )","params":[{"label":"$sStrIn","documentation":"The input indirect string."}]},"_WinAPI_LoadKeyboardLayout":{"documentation":"Loads a new input locale identifier into the system","label":"_WinAPI_LoadKeyboardLayout ( $iLanguage [, $iFlag = 0] )","params":[{"label":"$iLanguage","documentation":"The input locale identifier to load."},{"label":"$iFlag","documentation":"**[optional]** The flag that specifies how the input locale identifier is to be loaded. This parameter can beone of the following values.$KLF_ACTIVATE$KLF_NOTELLSHELL$KLF_REORDER$KLF_REPLACELANG$KLF_SUBSTITUTE_OK$KLF_SETFORPROCESS"}]},"_WinAPI_LoadLibrary":{"documentation":"Maps a specified executable module into the address space of the calling process","label":"_WinAPI_LoadLibrary ( $sFileName )","params":[{"label":"$sFileName","documentation":"Names a Win32 executable module (either a .dll or an .exe file). The name specified is thefilename of the executable module."}]},"_WinAPI_LoadLibraryEx":{"documentation":"Maps a specified executable module into the address space of the calling process","label":"_WinAPI_LoadLibraryEx ( $sFileName [, $iFlags = 0] )","params":[{"label":"$sFileName","documentation":"Names a Win32 executable module (either a .dll or an .exe file). The name specified is thefilename of the executable module."},{"label":"$iFlags","documentation":"**[optional]** Specifies the action to take when loading the module. This parameter can be one of thefollowing values:$DONT_RESOLVE_DLL_REFERENCES - If this value is used and the executable module is a DLL the system does not call DllMain for process and thread initialization and termination. Also, the system does not load additional executable modules that are referenced by the specified module.$LOAD_LIBRARY_AS_DATAFILE - If this value is used, the system maps the file into the calling process\'s address space as if it were a data file. Nothing is done to execute or prepare to execute the mapped file.$LOAD_WITH_ALTERED_SEARCH_PATH - If this value is used, and $FileName specifies a path, the system uses the alternate file search strategy to find the associated executable modules that the specified module causes to be loaded."}]},"_WinAPI_LoadMedia":{"documentation":"Loads media into a device","label":"_WinAPI_LoadMedia ( $sDrive )","params":[{"label":"$sDrive","documentation":"The drive letter of the CD tray to load, in the format D:, E:, etc."}]},"_WinAPI_LoadResource":{"documentation":"Loads the specified resource into global memory","label":"_WinAPI_LoadResource ( $hInstance, $hResource )","params":[{"label":"$hInstance","documentation":"Handle to the module whose executable file contains the resource. If this parameter is 0, the systemloads the resource from the module that was used to create the current process."},{"label":"$hResource","documentation":"Handle to the resource to be loaded. This handle is returned by the _WinAPI_FindResource()or _WinAPI_FindResourceEx() function."}]},"_WinAPI_LoadShell32Icon":{"documentation":"Extracts an icon from the shell32.dll file","label":"_WinAPI_LoadShell32Icon ( $iIconID )","params":[{"label":"$iIconID","documentation":"ID of the icon to extract"}]},"_WinAPI_LoadString":{"documentation":"loads a string resource from the executable file associated with a specified module","label":"_WinAPI_LoadString ( $hInstance, $iStringID )","params":[{"label":"$hInstance","documentation":"Handle to an instance of the module whose executable file contains the string resource"},{"label":"$iStringID","documentation":"Specifies the integer identifier of the string to be loaded"}]},"_WinAPI_LoadStringEx":{"documentation":"Loads a string resource for the specified language from the specified module","label":"_WinAPI_LoadStringEx ( $hModule, $iID [, $iLanguage = $LOCALE_USER_DEFAULT] )","params":[{"label":"$hModule","documentation":"A handle to an instance of the module whose executable file contains the string resource.Also, this parameter can specify the name of the module to load, it must be a full or relative path.If this parameter is 0 or an empty string, that is equivalent to passing in a handle to the moduleused to create the current process."},{"label":"$iID","documentation":"The identifier of the string to be loaded."},{"label":"$iLanguage","documentation":"**[optional]** The language identifier of the string resource of interest. To retrieve string for user defaultlanguage set this parameter to $LOCALE_USER_DEFAULT (Default)."}]},"_WinAPI_LoByte":{"documentation":"Returns the low BYTE of a 16-bit (2 bytes) value","label":"_WinAPI_LoByte ( $iValue )","params":[{"label":"$iValue","documentation":"16-bit value."}]},"_WinAPI_LocalFree":{"documentation":"Frees the specified local memory object and invalidates its handle","label":"_WinAPI_LocalFree ( $hMemory )","params":[{"label":"$hMemory","documentation":"A handle to the local memory object"}]},"_WinAPI_LockDevice":{"documentation":"Enables or disables the mechanism that ejects media, for those devices possessing that locking capability","label":"_WinAPI_LockDevice ( $sDrive, $bLock )","params":[{"label":"$sDrive","documentation":"The drive letter of the device to enable or disable, in the format D:, E:, etc."},{"label":"$bLock","documentation":"Specifies whether the device should be disabled, valid values:    True - The device is disabled.    False - The device is enabled."}]},"_WinAPI_LockFile":{"documentation":"Locks the specified file for exclusive access by the calling process","label":"_WinAPI_LockFile ( $hFile, $iOffset, $iLength )","params":[{"label":"$hFile","documentation":"Handle to the file."},{"label":"$iOffset","documentation":"The starting byte offset in the file where the lock should begin."},{"label":"$iLength","documentation":"The length of the byte range to be locked."}]},"_WinAPI_LockResource":{"documentation":"Locks the specified resource in memory","label":"_WinAPI_LockResource ( $hData )","params":[{"label":"$hData","documentation":"Handle to the resource to be locked. The _WinAPI_LoadResource() function returns this handle. Do notpass any value as a parameter other than a successful return value from the LoadResource function."}]},"_WinAPI_LockWindowUpdate":{"documentation":"Disables or enables drawing in the specified window","label":"_WinAPI_LockWindowUpdate ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window in which drawing will be disabled. If this parameter is 0, drawing in the lockedwindow is enabled."}]},"_WinAPI_LockWorkStation":{"documentation":"Locks the workstation\'s display","label":"_WinAPI_LockWorkStation (  )","params":[]},"_WinAPI_LoDWord":{"documentation":"Returns the low DWORD of a 64-bit (8 bytes) value","label":"_WinAPI_LoDWord ( $iValue )","params":[{"label":"$iValue","documentation":"64-bit value."}]},"_WinAPI_LongMid":{"documentation":"Extracts a number of bits from a DWORD (32-bit) value","label":"_WinAPI_LongMid ( $iValue, $iStart, $iCount )","params":[{"label":"$iValue","documentation":"32-bit value."},{"label":"$iStart","documentation":"The bit position to start. (0 - first bit)"},{"label":"$iCount","documentation":"The number of bits to extract."}]},"_WinAPI_LookupIconIdFromDirectoryEx":{"documentation":"Searches through icon or cursor data for the icon or cursor that best fits the current display device","label":"_WinAPI_LookupIconIdFromDirectoryEx ( $pData [, $bIcon = True [, $iXDesiredPixels = 0 [, $iYDesiredPixels = 0 [, $iFlags = 0]]]] )","params":[{"label":"$pData","documentation":"The icon or cursor directory data. Because this function does not validate the resource data,it causes a general protection (GP) fault or returns an undefined value if presbits is not pointing to validresource data."},{"label":"$bIcon","documentation":"**[optional]** Specifies whether an icon or a cursor is sought, valid values:    True - The function is searching for an icon (Default).    False - The function is searching for a cursor."},{"label":"$iXDesiredPixels","documentation":"**[optional]** The desired width, in pixels, of the icon or cursor.If this parameter is zero (Default), the function uses the system metric value."},{"label":"$iYDesiredPixels","documentation":"**[optional]** The desired height, in pixels, of the icon or cursor.If this parameter is zero (Default), the function uses the system metric value."},{"label":"$iFlags","documentation":"**[optional]** This parameter can be one or more of the following values.    $LR_DEFAULTCOLOR (Default)    $LR_MONOCHROME"}]},"_WinAPI_LoWord":{"documentation":"Returns the low word of a longword","label":"_WinAPI_LoWord ( $iLong )","params":[{"label":"$iLong","documentation":"Longword value"}]},"_WinAPI_LPtoDP":{"documentation":"Converts a logical coordinates into device coordinates","label":"_WinAPI_LPtoDP ( $hDC, ByRef $tPOINT [, $iCount = 1] )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tPOINT","documentation":"$tagPOINT structure or structure of points (\\"long x1;long y1;...long xN;long yN\\") containing thex- and y-coordinates to be transformed."},{"label":"$iCount","documentation":"**[optional]** The number of points. Default is 1."}]},"_WinAPI_MAKELANGID":{"documentation":"Construct language id from a primary language id and a sublanguage id","label":"_WinAPI_MAKELANGID ( $iLngIDPrimary, $iLngIDSub )","params":[{"label":"$iLngIDPrimary","documentation":"Primary Language id"},{"label":"$iLngIDSub","documentation":"Sub-Language id"}]},"_WinAPI_MAKELCID":{"documentation":"Construct locale id from a language id and a sort id","label":"_WinAPI_MAKELCID ( $iLngID, $iSortID )","params":[{"label":"$iLngID","documentation":"Language id"},{"label":"$iSortID","documentation":"Sort id"}]},"_WinAPI_MakeLong":{"documentation":"Returns a long int value from two int values","label":"_WinAPI_MakeLong ( $iLo, $iHi )","params":[{"label":"$iLo","documentation":"Low word"},{"label":"$iHi","documentation":"Hi word"}]},"_WinAPI_MakeQWord":{"documentation":"Returns a QWORD value from two int values","label":"_WinAPI_MakeQWord ( $iLoDWORD, $iHiDWORD )","params":[{"label":"$iLoDWORD","documentation":"Low DWORD (int)"},{"label":"$iHiDWORD","documentation":"Hi DWORD (int)"}]},"_WinAPI_MakeWord":{"documentation":"Returns a WORD (16-bit) value from two BYTE (8-bit) values","label":"_WinAPI_MakeWord ( $iLo, $iHi )","params":[{"label":"$iLo","documentation":"Low byte."},{"label":"$iHi","documentation":"Hi byte."}]},"_WinAPI_MapViewOfFile":{"documentation":"Maps a view of a file mapping into the address space of a calling process","label":"_WinAPI_MapViewOfFile ( $hMapping [, $iOffset = 0 [, $iBytes = 0 [, $iAccess = 0x0006]]] )","params":[{"label":"$hMapping","documentation":"Handle to a file mapping object. The _WinAPI_CreateFileMapping() and _WinAPI_OpenFileMapping()functions return this handle."},{"label":"$iOffset","documentation":"**[optional]** The file offset where the view is to begin."},{"label":"$iBytes","documentation":"**[optional]** The number of bytes of a file mapping to map to a view. All bytes must be within the maximum sizespecified by _WinAPI_CreateFileMapping(). If $iBytes is 0, the mapping extends from the specifiedoffset to the end of the file mapping."},{"label":"$iAccess","documentation":"**[optional]** The access to the file mapping object. This parameter can be one of the following values.$FILE_MAP_ALL_ACCESS$FILE_MAP_COPY$FILE_MAP_READ (Default)$FILE_MAP_WRITE (Default)Each of the preceding values can be combined with the following value.$FILE_MAP_EXECUTE"}]},"_WinAPI_MapVirtualKey":{"documentation":"Translates a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code","label":"_WinAPI_MapVirtualKey ( $iCode, $iType [, $hLocale = 0] )","params":[{"label":"$iCode","documentation":"The virtual key code or scan code for a key. How this value is interpreted depends on the $iType parameter."},{"label":"$iType","documentation":"The translation to be performed. This value depends on the value of the $iCode parameter and can beone of the following values.$MAPVK_VK_TO_CHAR$MAPVK_VK_TO_VSC$MAPVK_VK_TO_VSC_EX$MAPVK_VSC_TO_VK$MAPVK_VSC_TO_VK_EX"},{"label":"$hLocale","documentation":"**[optional]** The input locale identifier to use for translating the specified code."}]},"_WinAPI_MaskBlt":{"documentation":"Combines the color data for the source and destination bitmaps using the specified mask and raster operation","label":"_WinAPI_MaskBlt ( $hDestDC, $iXDest, $iYDest, $iWidth, $iHeight, $hSrcDC, $iXSrc, $iYSrc, $hMask, $iXMask, $iYMask, $iRop )","params":[{"label":"$hDestDC","documentation":"Handle to the destination device context."},{"label":"$iXDest","documentation":"The x-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iYDest","documentation":"The y-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iWidth","documentation":"The width, in logical units, of the destination rectangle and source bitmap."},{"label":"$iHeight","documentation":"The height, in logical units, of the destination rectangle and source bitmap."},{"label":"$hSrcDC","documentation":"Handle to the device context from which the bitmap is to be copied."},{"label":"$iXSrc","documentation":"The x-coordinate, in logical units, of the upper-left corner of the source bitmap."},{"label":"$iYSrc","documentation":"The y-coordinate, in logical units, of the upper-left corner of the source bitmap."},{"label":"$hMask","documentation":"Handle to the monochrome mask bitmap combined with the color bitmap in the source device context."},{"label":"$iXMask","documentation":"The horizontal pixel offset for the mask bitmap specified by the hbmMask parameter."},{"label":"$iYMask","documentation":"The vertical pixel offset for the mask bitmap specified by the hbmMask parameter."},{"label":"$iRop","documentation":"The raster-operation code (same as for _WinAPI_BitBlt())."}]},"_WinAPI_MessageBeep":{"documentation":"Plays a waveform sound","label":"_WinAPI_MessageBeep ( [$iType = 1] )","params":[{"label":"$iType","documentation":"**[optional]** The sound type, as identified by an entry in the registry. This can be one of the followingvalues:0 - Simple beep. If a sound card is not available, the speaker is used.1 - OK2 - Hand3 - Question4 - Exclamation5 - Asterisk"}]},"_WinAPI_MessageBoxCheck":{"documentation":"Displays a message box that gives the user the option of suppressing further occurrences","label":"_WinAPI_MessageBoxCheck ( $iType, $sTitle, $sText, $sRegVal [, $iDefault = -1 [, $hParent = 0]] )","params":[{"label":"$iType","documentation":"The flags that specify the contents and behavior of the message box.You must specify the buttons to be displayed by setting one and only one of the following flags.$MB_OK$MB_OKCANCEL$MB_YESNOYou can display an optional icon by setting one and only one of the following flags.$MB_ICONEXCLAMATION$MB_ICONHAND$MB_ICONINFORMATION$MB_ICONQUESTION"},{"label":"$sTitle","documentation":"The string that contains the title of the message box."},{"label":"$sText","documentation":"The string that contains the message to be displayed."},{"label":"$sRegVal","documentation":"The string that contains a unique string value to associate with this message."},{"label":"$iDefault","documentation":"**[optional]** The value that the function returns when the user has opted not to have the message box displayedagain. If the user has not opted to suppress the message box, the message box is displayed andthe function ignores $iDefault."},{"label":"$hParent","documentation":"**[optional]** The window handle to the message box\'s owner."}]},"_WinAPI_MessageBoxIndirect":{"documentation":"Creates, displays, and operates a message box","label":"_WinAPI_MessageBoxIndirect ( $tMSGBOXPARAMS )","params":[{"label":"$tMSGBOXPARAMS","documentation":"$tagMSGBOXPARAMS structure that contains information used to display the message box."}]},"_WinAPI_MirrorIcon":{"documentation":"Reverses (mirrors) icons so that they are displayed correctly on a mirrored device context","label":"_WinAPI_MirrorIcon ( $hIcon [, $bDelete = False] )","params":[{"label":"$hIcon","documentation":"Handle to the icon."},{"label":"$bDelete","documentation":"**[optional]** Specifies whether to delete the icon after the function is successful, valid values:    True - Icon will be deleted if the function succeeds.    False - Do not delete, you must release the icon when you are finished using it (Default)."}]},"_WinAPI_ModifyWorldTransform":{"documentation":"Changes the world transformation for a device context using the specified mode","label":"_WinAPI_ModifyWorldTransform ( $hDC, $tXFORM, $iMode )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tXFORM","documentation":"$tagXFORM structure used to modify the world transformation for the given device context."},{"label":"$iMode","documentation":"Specifies how the transformation data modifies the current world transformation.This parameter must be one of the following values.$MWT_IDENTITY$MWT_LEFTMULTIPLY$MWT_RIGHTMULTIPLY"}]},"_WinAPI_MonitorFromPoint":{"documentation":"Retrieves a handle to the display monitor that contains a specified point","label":"_WinAPI_MonitorFromPoint ( $tPOINT [, $iFlag = 1] )","params":[{"label":"$tPOINT","documentation":"$tagPOINT structure that specifies the point of interest in virtual-screen coordinates."},{"label":"$iFlag","documentation":"**[optional]** The flag that specifies the function\'s return value if the point is not contained within any displaymonitor. This parameter can be one of the following values.$MONITOR_DEFAULTTONULL$MONITOR_DEFAULTTONEAREST (Default)$MONITOR_DEFAULTTOPRIMARY"}]},"_WinAPI_MonitorFromRect":{"documentation":"Retrieves a handle to the display monitor that has the largest area of intersection with a specified rectangle","label":"_WinAPI_MonitorFromRect ( $tRECT [, $iFlag = 1] )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that specifies the rectangle of interest in virtual-screen coordinates."},{"label":"$iFlag","documentation":"**[optional]** The flag that specifies the function\'s return value if the rectangle does not intersect any displaymonitor. This parameter can be one of the following values.$MONITOR_DEFAULTTONULL$MONITOR_DEFAULTTONEAREST (Default)$MONITOR_DEFAULTTOPRIMARY"}]},"_WinAPI_MonitorFromWindow":{"documentation":"Retrieves a handle to the display monitor that has the largest area of intersection with the specified window","label":"_WinAPI_MonitorFromWindow ( $hWnd [, $iFlag = 1] )","params":[{"label":"$hWnd","documentation":"A handle to the window of interest."},{"label":"$iFlag","documentation":"**[optional]** The flag that specifies the function\'s return value if the window does not intersect any displaymonitor. This parameter can be one of the following values.$MONITOR_DEFAULTTONULL$MONITOR_DEFAULTTONEAREST (Default)$MONITOR_DEFAULTTOPRIMARY"}]},"_WinAPI_Mouse_Event":{"documentation":"Synthesizes mouse motion and button clicks","label":"_WinAPI_Mouse_Event ( $iFlags [, $iX = 0 [, $iY = 0 [, $iData = 0 [, $iExtraInfo = 0]]]] )","params":[{"label":"$iFlags","documentation":"A set of flag bits that specify various aspects of mouse motion and button clicking. The bitsin this parameter can be any reasonable combination of the following values:$MOUSEEVENTF_ABSOLUTE - Specifies that the $iX and $iY parameters contain normal absolute coordinates. Ifnot set, those parameters contain relative data. The change in position since the last reported position.This flag can be set, or not set, regardless of what kind of mouse or mouse-like device, if any, is connectedto the system.$MOUSEEVENTF_MOVE - Specifies that movement occurred$MOUSEEVENTF_LEFTDOWN - Specifies that the left button changed to down$MOUSEEVENTF_LEFTUP - Specifies that the left button changed to up$MOUSEEVENTF_RIGHTDOWN - Specifies that the right button changed to down$MOUSEEVENTF_RIGHTUP - Specifies that the right button changed to up$MOUSEEVENTF_MIDDLEDOWN - Specifies that the middle button changed to down$MOUSEEVENTF_MIDDLEUP - Specifies that the middle button changed to up$MOUSEEVENTF_WHEEL - Specifies that the wheel has been moved, if the mouse has a wheel$MOUSEEVENTF_XDOWN - Specifies that an X button was pressed$MOUSEEVENTF_XUP - Specifies that an X button was released"},{"label":"$iX","documentation":"**[optional]** Specifies the mouse\'s absolute position along the X axis or its amount of motion since thelast mouse event was generated depending on the setting of $MOUSEEVENTF_ABSOLUTE. Absolute data is given asthe mouse\'s actual X coordinate relative data is given as the number of mickeys moved."},{"label":"$iY","documentation":"**[optional]** Specifies the mouse\'s absolute position along the Y axis or its amount of motion since thelast mouse event was generated depending on the setting of $MOUSEEVENTF_ABSOLUTE. Absolute data is given asthe mouse\'s actual Y coordinate relative data is given as the number of mickeys moved."},{"label":"$iData","documentation":"**[optional]** If $iFlags is $MOUSEEVENTF_WHEEL, then $iData specifies the amount of wheel movement. A positivevalue indicates that the wheel was rotated forward away from the user. A negative value indicates that thewheel was rotated backward, toward the user. One wheel click is defined as $WHEEL_DELTA, which is 120. If$iFlags is not $MOUSEEVENTF_WHEEL, then $iData should be zero."},{"label":"$iExtraInfo","documentation":"**[optional]** Specifies a 32 bit value associated with the mouse event"}]},"_WinAPI_MoveFileEx":{"documentation":"Moves a file or directory, notifying the application of its progress through a callback function","label":"_WinAPI_MoveFileEx ( $sExistingFile, $sNewFile [, $iFlags = 0 [, $pProgressProc = 0 [, $pData = 0]]] )","params":[{"label":"$sExistingFile","documentation":"The name of the existing file or directory on the local computer.If $iFlags specifies $MOVE_FILE_DELAY_UNTIL_REBOOT, the file cannot exist on a remote share because delayed operations are performed before the network is available."},{"label":"$sNewFile","documentation":"The new name of the file or directory on the local computer.When moving a file, $sNewFile can be on a different file system or volume.If $sNewFile is on another drive, you must set the $MOVE_FILE_COPY_ALLOWED flag in $iFlags parameter.When moving a directory, $sExistingFile and $sNewFile must be on the same drive.If $iFlags specifies $MOVE_FILE_DELAY_UNTIL_REBOOT and $sNewFile is 0, _WinAPI_MoveFileEx() registers $sExistingFile to be deleted when the system restarts.If $sExistingFile refers to a directory, the system removes the directory at restart only if the directory is empty."},{"label":"$iFlags","documentation":"**[optional]** The move options. This parameter can be one or more of the following values:    $MOVE_FILE_COPY_ALLOWED (0x0002)    $MOVE_FILE_CREATE_HARDLINK (0x0010)    $MOVE_FILE_DELAY_UNTIL_REBOOT (0x0004)    $MOVE_FILE_FAIL_IF_NOT_TRACKABLE (0x0020)    $MOVE_FILE_REPLACE_EXISTING (0x0001)    $MOVE_FILE_WRITE_THROUGH (0x0008)"},{"label":"$pProgressProc","documentation":"**[optional]** The address of a callback function that is called each time another portion of the file has been moved.(See MSDN for more information)"},{"label":"$pData","documentation":"**[optional]** Pointer to the argument to be passed to the callback function."}]},"_WinAPI_MoveMemory":{"documentation":"Moves a block of memory from one location to another","label":"_WinAPI_MoveMemory ( $pDestination, $pSource, $iLength )","params":[{"label":"$pDestination","documentation":"A pointer to the starting address of the move destination."},{"label":"$pSource","documentation":"A pointer to the starting address of the block of memory to be moved."},{"label":"$iLength","documentation":"The size of the block of memory to move, in bytes."}]},"_WinAPI_MoveTo":{"documentation":"Updates the current position to the specified point","label":"_WinAPI_MoveTo ( $hDC, $iX, $iY )","params":[{"label":"$hDC","documentation":"Handle to device context"},{"label":"$iX","documentation":"X coordinate of the new position."},{"label":"$iY","documentation":"Y coordinate of the new position."}]},"_WinAPI_MoveToEx":{"documentation":"Updates the current position to the specified point","label":"_WinAPI_MoveToEx ( $hDC, $iX, $iY )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate, in logical units, of the new position, in logical units."},{"label":"$iY","documentation":"The y-coordinate, in logical units, of the new position, in logical units."}]},"_WinAPI_MoveWindow":{"documentation":"Changes the position and dimensions of the specified window","label":"_WinAPI_MoveWindow ( $hWnd, $iX, $iY, $iWidth, $iHeight [, $bRepaint = True] )","params":[{"label":"$hWnd","documentation":"Handle of window"},{"label":"$iX","documentation":"New position of the left side of the window"},{"label":"$iY","documentation":"New position of the top of the window"},{"label":"$iWidth","documentation":"New width of the window"},{"label":"$iHeight","documentation":"New height of the window"},{"label":"$bRepaint","documentation":"**[optional]** Specifies whether the window is to be repainted. If True, the window receives a $WM_PAINTmessage. If False, no repainting of any kind occurs. This applies to the client area, the nonclient area, andany part of the parent window uncovered as a result of moving a child window. If False, the application mustexplicitly invalidate or redraw any parts of the window and parent window that need redrawing."}]},"_WinAPI_MsgBox":{"documentation":"Displays a message box with wider margin than original","label":"_WinAPI_MsgBox ( $iFlags, $sTitle, $sText )","params":[{"label":"$iFlags","documentation":"Flags to use during window creation"},{"label":"$sTitle","documentation":"Window title"},{"label":"$sText","documentation":"Window text"}]},"_WinAPI_MulDiv":{"documentation":"Multiplies two 32-bit values and then divides the 64-bit result by a third 32-bit value","label":"_WinAPI_MulDiv ( $iNumber, $iNumerator, $iDenominator )","params":[{"label":"$iNumber","documentation":"Specifies the multiplicand"},{"label":"$iNumerator","documentation":"Specifies the multiplier"},{"label":"$iDenominator","documentation":"Specifies the number by which the result of the multiplication is to be divided"}]},"_WinAPI_MultiByteToWideChar":{"documentation":"Maps a character string to a wide-character (Unicode) string","label":"_WinAPI_MultiByteToWideChar ( $vText [, $iCodePage = 0 [, $iFlags = 0 [, $bRetString = False]]] )","params":[{"label":"$vText","documentation":"Text or DllStruct containing multibyte text to be converted"},{"label":"$iCodePage","documentation":"**[optional]** Specifies the code page to be used to perform the conversion:    0 - ANSI code page    1 - OEM code page    2 - Macintosh code page    3 - The Windows ANSI code page for the current thread    42 - Symbol code page    65000 - UTF-7    65001 - UTF-8"},{"label":"$iFlags","documentation":"**[optional]** Flags that indicate whether to translate to precomposed or composite wide characters:    $MB_PRECOMPOSED - Always use precomposed characters    $MB_COMPOSITE - Always use composite characters    $MB_USEGLYPHCHARS - Use glyph characters instead of control characters"},{"label":"$bRetString","documentation":"**[optional]** Flags that indicate whether to return a String or a DllStruct (default False : Structure)"}]},"_WinAPI_MultiByteToWideCharEx":{"documentation":"Maps a character string to a wide-character (Unicode) string","label":"_WinAPI_MultiByteToWideCharEx ( $sText, $pText [, $iCodePage = 0 [, $iFlags = 0]] )","params":[{"label":"$sText","documentation":"Text to be converted"},{"label":"$pText","documentation":"Pointer to a byte structure where the converted string will be stored"},{"label":"$iCodePage","documentation":"**[optional]** Specifies the code page to be used to perform the conversion:    0 - ANSI code page    1 - OEM code page    2 - Macintosh code page"},{"label":"$iFlags","documentation":"**[optional]** Flags that indicate whether to translate to precomposed or composite wide characters:    $MB_PRECOMPOSED - Always use precomposed characters    $MB_COMPOSITE - Always use composite characters    $MB_USEGLYPHCHARS - Use glyph characters instead of control characters"}]},"_WinAPI_NtStatusToDosError":{"documentation":"Converts the specified NTSTATUS error code to its equivalent system error code","label":"_WinAPI_NtStatusToDosError ( $iStatus )","params":[{"label":"$iStatus","documentation":"The NTSTATUS error code to be converted."}]},"_WinAPI_OemToChar":{"documentation":"Converts a string from the OEM-defined character set into either an ANSI string","label":"_WinAPI_OemToChar ( $sStr )","params":[{"label":"$sStr","documentation":"The string of characters from the OEM-defined character set."}]},"_WinAPI_OffsetClipRgn":{"documentation":"Moves the clipping region of a device context by the specified offsets","label":"_WinAPI_OffsetClipRgn ( $hDC, $iXOffset, $iYOffset )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iXOffset","documentation":"The number of logical units to move left or right."},{"label":"$iYOffset","documentation":"The number of logical units to move up or down."}]},"_WinAPI_OffsetPoints":{"documentation":"Moves a points from the array by the specified offsets","label":"_WinAPI_OffsetPoints ( ByRef $aPoint, $iXOffset, $iYOffset [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$aPoint","documentation":"The 2D array ([x1, y1, ...], [x2, y2, ...], ... [xN, yN, ...]). Every first two elements from thisarray specifies a point to be move. Other array elements (if any) do not change."},{"label":"$iXOffset","documentation":"The number of logical units to move left or right."},{"label":"$iYOffset","documentation":"The number of logical units to move up or down."},{"label":"$iStart","documentation":"**[optional]** The index of array to start moving at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop moving at."}]},"_WinAPI_OffsetRect":{"documentation":"Moves the specified rectangle by the specified offsets","label":"_WinAPI_OffsetRect ( ByRef $tRECT, $iDX, $iDY )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that to be moved."},{"label":"$iDX","documentation":"The amount to move the rectangle left (negative value) or right."},{"label":"$iDY","documentation":"The amount to move the rectangle up (negative value) or down."}]},"_WinAPI_OffsetRgn":{"documentation":"Moves a region by the specified offsets","label":"_WinAPI_OffsetRgn ( $hRgn, $iXOffset, $iYOffset )","params":[{"label":"$hRgn","documentation":"Handle to the region to be moved."},{"label":"$iXOffset","documentation":"The number of logical units to move left or right."},{"label":"$iYOffset","documentation":"The number of logical units to move up or down."}]},"_WinAPI_OffsetWindowOrg":{"documentation":"Modifies the window origin for a device context using the specified horizontal and vertical offsets","label":"_WinAPI_OffsetWindowOrg ( $hDC, $iXOffset, $iYOffset )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iXOffset","documentation":"The horizontal offset, in logical units."},{"label":"$iYOffset","documentation":"The vertical offset, in logical units."}]},"_WinAPI_OpenDesktop":{"documentation":"Opens the specified desktop object","label":"_WinAPI_OpenDesktop ( $sName [, $iAccess = 0 [, $iFlags = 0 [, $bInherit = False]]] )","params":[{"label":"$sName","documentation":"The name of the desktop to be opened. Desktop names are case-insensitive. This desktop must belong tothe current window station."},{"label":"$iAccess","documentation":"**[optional]** The access to the desktop. This parameter can be one or more of the following values.$DESKTOP_ALL_ACCESS$DESKTOP_CREATEMENU$DESKTOP_CREATEWINDOW$DESKTOP_ENUMERATE$DESKTOP_HOOKCONTROL$DESKTOP_JOURNALPLAYBACK$DESKTOP_JOURNALRECORD$DESKTOP_READOBJECTS$DESKTOP_SWITCHDESKTOP$DESKTOP_WRITEOBJECTS"},{"label":"$iFlags","documentation":"**[optional]** The optional flags. It can be zero or the following value.$DF_ALLOWOTHERACCOUNTHOOK"},{"label":"$bInherit","documentation":"**[optional]** Specifies whether inherites the handle by a processes, valid values:    True - The processes created by this process will inherit the handle.    False - The processes do not inherit this handle (Default)."}]},"_WinAPI_OpenFileById":{"documentation":"Opens the file that matches the specified object identifier","label":"_WinAPI_OpenFileById ( $hFile, $vID [, $iAccess = 0 [, $iShare = 0 [, $iFlags = 0]]] )","params":[{"label":"$hFile","documentation":"The path or handle to any file on a volume or share on which the file to be opened is stored."},{"label":"$vID","documentation":"The file identifier (FileID), or $tagGUID structure (ObjectID), or GUID\'s string representation in theform \\"{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}\\" that identifies the file to open."},{"label":"$iAccess","documentation":"**[optional]** The access to the object. Access can be read, write, or both. If this parameter is 0 (Default), theapplication can query file and device attributes without accessing a device.$GENERIC_READ$GENERIC_WRITE(See MSDN for more information)"},{"label":"$iShare","documentation":"**[optional]** The sharing mode of an object, which can be read, write, both, or none. If this parameter is 0 (Default) andfunction succeeds, the object cannot be shared and cannot be opened again until the handle is closed.$FILE_SHARE_DELETE$FILE_SHARE_READ$FILE_SHARE_WRITE"},{"label":"$iFlags","documentation":"**[optional]** The file flags. When _WinAPI_OpenFileById() opens a file, it combines the file flags with existingfile attributes, and ignores any supplied file attributes. This parameter can include anycombination of the following values.$FILE_FLAG_BACKUP_SEMANTICS$FILE_FLAG_NO_BUFFERING$FILE_FLAG_OPEN_NO_RECALL$FILE_FLAG_OPEN_REPARSE_POINT$FILE_FLAG_OVERLAPPED$FILE_FLAG_RANDOM_ACCESS$FILE_FLAG_SEQUENTIAL_SCAN$FILE_FLAG_WRITE_THROUGH"}]},"_WinAPI_OpenFileDlg":{"documentation":"Creates a dialog box that lets the user specify the drive, directory, and the name of a file or set of files to be opened","label":"_WinAPI_OpenFileDlg ( [$sTitle = \'\' [, $sInitDir = \'\' [, $sFilters = \'\' [, $iDefaultFilter = 0 [, $sDefaultFilePath = \'\' [, $sDefaultExt = \'\' [, $iFlags = 0 [, $iFlagsEx = 0 [, $pOFNProc = 0 [, $pData = 0 [, $hParent = 0]]]]]]]]]]] )","params":[{"label":"$sTitle","documentation":"**[optional]** A string to be placed in the title bar of the dialog box.If this parameter is empty string (Default), the system uses the default title (that is, \\"Open\\")."},{"label":"$sInitDir","documentation":"**[optional]** The initial directory."},{"label":"$sFilters","documentation":"**[optional]** The pairs of filter strings (for example, \\"Text Files (*.txt)\\"). To specify multiple filter patterns for a single display string, use a semicolon to separate the patterns (for example, \\"*.txt;*.doc;*.bak\\").Do not include spaces in the pattern. To specify multiple groups of filters, use the \\"|\\" character as a delimiter (for example, \\"Text Files (*.txt)|All Files (*.*)\\").If this parameter is omitted or an empty string (Default), the dialog box does not display any filters."},{"label":"$iDefaultFilter","documentation":"**[optional]** The 1-based index of the currently selected filter to initialize the combo box control."},{"label":"$sDefaultFilePath","documentation":"**[optional]** The file name to initialize the edit control."},{"label":"$sDefaultExt","documentation":"**[optional]** The default extension that appends to the file name if the user fails to type an extension.This string can be any length, but only the first three characters are appended. The string should not contain a period (.). If this parameter is empty string (Default), no extension is appended."},{"label":"$iFlags","documentation":"**[optional]** A set of bit flags you can use to initialize the dialog box.This parameter can be 0 or combination of the following values.    $OFN_ALLOWMULTISELECT    $OFN_CREATEPROMPT    $OFN_DONTADDTORECENT    $OFN_ENABLEHOOK    $OFN_ENABLEINCLUDENOTIFY    $OFN_ENABLESIZING    $OFN_EXPLORER    $OFN_FILEMUSTEXIST    $OFN_FORCESHOWHIDDEN    $OFN_HIDEREADONLY    $OFN_LONGNAMES    $OFN_NODEREFERENCELINKS    $OFN_NOLONGNAMES    $OFN_NONETWORKBUTTON    $OFN_NOREADONLYRETURN    $OFN_NOTESTFILECREATE    $OFN_NOVALIDATE    $OFN_PATHMUSTEXIST    $OFN_READONLY    $OFN_SHAREAWARE    $OFN_SHOWHELP"},{"label":"$iFlagsEx","documentation":"**[optional]** A set of bit flags you can use to initialize the dialog box. It can be 0 or the following value:    $OFN_EX_NOPLACESBAR"},{"label":"$pOFNProc","documentation":"**[optional]** A pointer to a hook procedure. This parameter is ignored unless the $OFN_ENABLEHOOK flag is set."},{"label":"$pData","documentation":"**[optional]** Application-defined data pointer that the system passes to the hook procedure."},{"label":"$hParent","documentation":"**[optional]** A handle to the parent window for the dialog box."}]},"_WinAPI_OpenFileMapping":{"documentation":"Opens a named file mapping object","label":"_WinAPI_OpenFileMapping ( $sName [, $iAccess = 0x0006 [, $bInherit = False]] )","params":[{"label":"$sName","documentation":"The name of the file mapping object to be opened."},{"label":"$iAccess","documentation":"**[optional]** The access to the file mapping object. This parameter can be one of the following values.$FILE_MAP_ALL_ACCESS$FILE_MAP_COPY$FILE_MAP_READ (Default)$FILE_MAP_WRITE (Default)Each of the preceding values can be combined with the following value.$FILE_MAP_EXECUTE"},{"label":"$bInherit","documentation":"**[optional]** Specifies whether inherites the handle by a processes, valid values:    True - The processes created by this process will inherit the handle.    False - The processes do not inherit this handle (Default)."}]},"_WinAPI_OpenIcon":{"documentation":"Restores a minimized (iconic) window to its previous size and position and activates the window","label":"_WinAPI_OpenIcon ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to be restored and activated."}]},"_WinAPI_OpenInputDesktop":{"documentation":"Opens the desktop that receives user input","label":"_WinAPI_OpenInputDesktop ( [$iAccess = 0 [, $iFlags = 0 [, $bInherit = False]]] )","params":[{"label":"$iAccess","documentation":"**[optional]** The access to the desktop. This parameter can be one or more of the following values.$DESKTOP_ALL_ACCESS$DESKTOP_CREATEMENU$DESKTOP_CREATEWINDOW$DESKTOP_ENUMERATE$DESKTOP_HOOKCONTROL$DESKTOP_JOURNALPLAYBACK$DESKTOP_JOURNALRECORD$DESKTOP_READOBJECTS$DESKTOP_SWITCHDESKTOP$DESKTOP_WRITEOBJECTS"},{"label":"$iFlags","documentation":"**[optional]** The optional flags. It can be zero or the following value.$DF_ALLOWOTHERACCOUNTHOOK"},{"label":"$bInherit","documentation":"**[optional]** Specifies whether inherites the handle by a processes, valid values:    True - The processes created by this process will inherit the handle.    False - The processes do not inherit this handle (Default)."}]},"_WinAPI_OpenJobObject":{"documentation":"Opens an existing job object","label":"_WinAPI_OpenJobObject ( $sName [, $iAccess = $JOB_OBJECT_ALL_ACCESS [, $bInherit = False]] )","params":[{"label":"$sName","documentation":"The name of the job to be opened. Name comparisons are case sensitive."},{"label":"$iAccess","documentation":"**[optional]** The access to the job object. This parameter can be one or more of the following values.$JOB_OBJECT_ALL_ACCESS$JOB_OBJECT_ASSIGN_PROCESS$JOB_OBJECT_QUERY$JOB_OBJECT_SET_ATTRIBUTES$JOB_OBJECT_SET_SECURITY_ATTRIBUTES$JOB_OBJECT_TERMINATE"},{"label":"$bInherit","documentation":"**[optional]** Specifies whether inherites the handle by a processes, valid values:True - The processes created by this process will inherit the handle.False - The processes do not inherit this handle (Default)."}]},"_WinAPI_OpenMutex":{"documentation":"Opens an existing named mutex object","label":"_WinAPI_OpenMutex ( $sMutex [, $iAccess = $MUTEX_ALL_ACCESS [, $bInherit = False]] )","params":[{"label":"$sMutex","documentation":"The name of the mutex to be opened. Name comparisons are case sensitive."},{"label":"$iAccess","documentation":"**[optional]** The access to the mutex object. The function fails if the security descriptor of the specified objectdoes not permit the requested access for the calling process.This parameter can be one of the following values.$MUTEX_ALL_ACCESS$MUTEX_MODIFY_STATE"},{"label":"$bInherit","documentation":"**[optional]** Specifies whether inherites the handle by a processes, valid values:True - The processes created by this process will inherit the handle. False - The processes do not inherit this handle (Default)."}]},"_WinAPI_OpenProcess":{"documentation":"Returns a handle of an existing process object","label":"_WinAPI_OpenProcess ( $iAccess, $bInherit, $iPID [, $bDebugPriv = False] )","params":[{"label":"$iAccess","documentation":"Specifies the access to the process object"},{"label":"$bInherit","documentation":"Specifies whether the returned handle can be inherited"},{"label":"$iPID","documentation":"Specifies the process identifier of the process to open"},{"label":"$bDebugPriv","documentation":"**[optional]** Certain system processes can not be opened unless you have the debug security privilege.If True, this function will attempt to open the process with debug privileges if the process can not be opened with standard access privileges."}]},"_WinAPI_OpenProcessToken":{"documentation":"Opens the access token associated with a process","label":"_WinAPI_OpenProcessToken ( $iAccess [, $hProcess = 0] )","params":[{"label":"$iAccess","documentation":"Access mask that specifies the requested types of access to the access token. This parameter can beone or more of the following values.$TOKEN_ALL_ACCESS$TOKEN_ADJUST_DEFAULT$TOKEN_ADJUST_GROUPS$TOKEN_ADJUST_PRIVILEGES$TOKEN_ADJUST_SESSIONID$TOKEN_ASSIGN_PRIMARY$TOKEN_DUPLICATE$TOKEN_EXECUTE$TOKEN_IMPERSONATE$TOKEN_QUERY$TOKEN_QUERY_SOURCE$TOKEN_READ$TOKEN_WRITE"},{"label":"$hProcess","documentation":"**[optional]** Handle to the process whose access token is opened. The process must have the$PROCESS_QUERY_INFORMATION access permission. If this parameter is 0 (Default), will use the current process."}]},"_WinAPI_OpenSemaphore":{"documentation":"Opens an existing named semaphore object","label":"_WinAPI_OpenSemaphore ( $sSemaphore [, $iAccess = 0x001F0003 [, $bInherit = False]] )","params":[{"label":"$sSemaphore","documentation":"The name of the semaphore to be opened. Name comparisons are case sensitive."},{"label":"$iAccess","documentation":"**[optional]** The access to the semaphore object. The function fails if the security descriptor of the specifiedobject does not permit the requested access for the calling process.This parameter can be one of the following values.$SEMAPHORE_ALL_ACCESS (Default)$SEMAPHORE_MODIFY_STATE"},{"label":"$bInherit","documentation":"**[optional]** Specifies whether inherites the handle by a processes, valid values:True - The processes created by this process will inherit the handle.False - The processes do not inherit this handle (Default)."}]},"_WinAPI_OpenWindowStation":{"documentation":"Opens the specified window station","label":"_WinAPI_OpenWindowStation ( $sName [, $iAccess = 0 [, $bInherit = False]] )","params":[{"label":"$sName","documentation":"The name of the window station to be opened. Window station names are case-insensitive. This windowstation must belong to the current session."},{"label":"$iAccess","documentation":"**[optional]** The access to the window station. This parameter can be one or more of the following values.$WINSTA_ALL_ACCESS$WINSTA_ACCESSCLIPBOARD$WINSTA_ACCESSGLOBALATOMS$WINSTA_CREATEDESKTOP$WINSTA_ENUMDESKTOPS$WINSTA_ENUMERATE$WINSTA_EXITWINDOWS$WINSTA_READATTRIBUTES$WINSTA_READSCREEN$WINSTA_WRITEATTRIBUTES"},{"label":"$bInherit","documentation":"**[optional]** Specifies whether inherites the handle by a processes, valid values:    True - The processes created by this process will inherit the handle.    False - The processes do not inherit this handle (Default)."}]},"_WinAPI_PageSetupDlg":{"documentation":"Creates a Page Setup dialog box that enables the user to specify the attributes of a printed page","label":"_WinAPI_PageSetupDlg ( ByRef $tPAGESETUPDLG )","params":[{"label":"$tPAGESETUPDLG","documentation":"$tagPAGESETUPDLG structure that contains information used to initialize the Page Setup dialog box.The structure receives information about the user\'s selections when the function returns,and must be initialized before function call.(See MSDN for more information)"}]},"_WinAPI_PaintDesktop":{"documentation":"Fills the clipping region in the specified device context with the desktop pattern or wallpaper","label":"_WinAPI_PaintDesktop ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_PaintRgn":{"documentation":"Paints the specified region by using the brush currently selected into the device context","label":"_WinAPI_PaintRgn ( $hDC, $hRgn )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$hRgn","documentation":"Handle to the region to be filled. The region\'s coordinates are presumed to be logical coordinates."}]},"_WinAPI_ParseURL":{"documentation":"Performs rudimentary parsing of a URL","label":"_WinAPI_ParseURL ( $sUrl )","params":[{"label":"$sUrl","documentation":"The URL to be parsed."}]},"_WinAPI_ParseUserName":{"documentation":"Extracts the domain and user account name from a fully qualified user name","label":"_WinAPI_ParseUserName ( $sUser )","params":[{"label":"$sUser","documentation":"The user name to be parsed. The name must be in UPN or down-level format, or a certificate."}]},"_WinAPI_PatBlt":{"documentation":"Paints the specified rectangle using the brush that is currently selected into the specified device context","label":"_WinAPI_PatBlt ( $hDC, $iX, $iY, $iWidth, $iHeight, $iRop )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate, in logical units, of the upper-left corner of the rectangle to be filled."},{"label":"$iY","documentation":"The y-coordinate, in logical units, of the upper-left corner of the rectangle to be filled."},{"label":"$iWidth","documentation":"The width, in logical units, of the rectangle."},{"label":"$iHeight","documentation":"The height, in logical units, of the rectangle."},{"label":"$iRop","documentation":"The raster operation code. This code can be one of the following values.$BLACKNESS$DSTINVERT$PATCOPY$PATINVERT$WHITENESS"}]},"_WinAPI_PathAddBackslash":{"documentation":"Adds a backslash to the end of a string to create the correct syntax for a path","label":"_WinAPI_PathAddBackslash ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to which the backslash will be appended. If this path already has a trailing backslash,no backslash will be added."}]},"_WinAPI_PathAddExtension":{"documentation":"Adds a file name extension to a path string","label":"_WinAPI_PathAddExtension ( $sFilePath [, $sExt = \'\'] )","params":[{"label":"$sFilePath","documentation":"The path to which the file name extension will be appended. If there is already a file name extensionpresent, no extension will be added."},{"label":"$sExt","documentation":"**[optional]** The file name extension. If this parameter is empty string, an \\".exe\\" extension will be added."}]},"_WinAPI_PathAppend":{"documentation":"Appends one path to the end of another","label":"_WinAPI_PathAppend ( $sFilePath, $sMore )","params":[{"label":"$sFilePath","documentation":"The string to which the path is appended."},{"label":"$sMore","documentation":"The path to be appended."}]},"_WinAPI_PathBuildRoot":{"documentation":"Creates a root path from a given drive number","label":"_WinAPI_PathBuildRoot ( $iDrive )","params":[{"label":"$iDrive","documentation":"The desired drive number. It should be between 0 and 25."}]},"_WinAPI_PathCanonicalize":{"documentation":"Removes elements of a file path according to special strings inserted into that path","label":"_WinAPI_PathCanonicalize ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be canonicalized."}]},"_WinAPI_PathCommonPrefix":{"documentation":"Compares two paths to determine if they share a common prefix","label":"_WinAPI_PathCommonPrefix ( $sPath1, $sPath2 )","params":[{"label":"$sPath1","documentation":"The first path name."},{"label":"$sPath2","documentation":"The second path name."}]},"_WinAPI_PathCompactPath":{"documentation":"Truncates a file path to fit within a given pixel width by replacing path components with ellipses","label":"_WinAPI_PathCompactPath ( $hWnd, $sFilePath [, $iWidth = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the window used for font metrics."},{"label":"$sFilePath","documentation":"The path to be modified."},{"label":"$iWidth","documentation":"**[optional]** The width, in pixels, in which the string must fit. If this parameter is 0 (Default), width will be equal tothe width of the window\'s client area. If this parameter is a negative number, the width will bedecreased to its absolute value."}]},"_WinAPI_PathCompactPathEx":{"documentation":"Truncates a path to fit within a certain number of characters by replacing path components with ellipses","label":"_WinAPI_PathCompactPathEx ( $sFilePath, $iMax )","params":[{"label":"$sFilePath","documentation":"The path to be modified."},{"label":"$iMax","documentation":"The maximum number of characters to be contained in the modified path."}]},"_WinAPI_PathCreateFromUrl":{"documentation":"Converts a file URL to a Microsoft MS-DOS path","label":"_WinAPI_PathCreateFromUrl ( $sUrl )","params":[{"label":"$sUrl","documentation":"The URL."}]},"_WinAPI_PathFindExtension":{"documentation":"Searches a path for an extension","label":"_WinAPI_PathFindExtension ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to search, including the extension being searched for."}]},"_WinAPI_PathFindFileName":{"documentation":"Searches a path for a file name","label":"_WinAPI_PathFindFileName ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to search."}]},"_WinAPI_PathFindNextComponent":{"documentation":"Parses a path and returns the portion of that path that follows the first backslash","label":"_WinAPI_PathFindNextComponent ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to parse. Path components are delimited by backslashes. For instance, the path\\"c:\\\\path1\\\\path2\\\\file.txt\\" has four components: c:, path1, path2, and file.txt."}]},"_WinAPI_PathFindOnPath":{"documentation":"Searchs for a file in the default system paths","label":"_WinAPI_PathFindOnPath ( $sFilePath [, $aExtraPaths = \\"\\" [, $sPathDelimiter = @LF]] )","params":[{"label":"$sFilePath","documentation":"Filename to search for"},{"label":"$aExtraPaths","documentation":"**[optional]** Extra paths to check before any others."},{"label":"$sPathDelimiter","documentation":"**[optional]** Delimiter used to split $aExtraPaths if it\'s an non-empty string (StringSplit() with flag $STR_NOCOUNT (2))."}]},"_WinAPI_PathGetArgs":{"documentation":"Finds the command-line arguments within a given path","label":"_WinAPI_PathGetArgs ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be searched."}]},"_WinAPI_PathGetCharType":{"documentation":"Determines the type of character in relation to a path","label":"_WinAPI_PathGetCharType ( $sChar )","params":[{"label":"$sChar","documentation":"The character for which to determine the type."}]},"_WinAPI_PathGetDriveNumber":{"documentation":"Searches a path for a drive letter within the range of \'A\' to \'Z\' and returns the corresponding drive number","label":"_WinAPI_PathGetDriveNumber ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be searched."}]},"_WinAPI_PathIsContentType":{"documentation":"Determines if a file\'s registered content type matches the specified content type","label":"_WinAPI_PathIsContentType ( $sFilePath, $sType )","params":[{"label":"$sFilePath","documentation":"The file whose content type will be compared."},{"label":"$sType","documentation":"The content type string. For example, \\"application/x-msdownload\\", \\"image/jpeg\\", \\"text/plain\\", etc."}]},"_WinAPI_PathIsDirectory":{"documentation":"Verifies that a path is a valid directory","label":"_WinAPI_PathIsDirectory ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to verify."}]},"_WinAPI_PathIsDirectoryEmpty":{"documentation":"Determines whether a specified path is an empty directory","label":"_WinAPI_PathIsDirectoryEmpty ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be tested."}]},"_WinAPI_PathIsExe":{"documentation":"Determines whether a file is an executable by examining the file extension","label":"_WinAPI_PathIsExe ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be searched."}]},"_WinAPI_PathIsFileSpec":{"documentation":"Searches a path for any path-delimiting characters","label":"_WinAPI_PathIsFileSpec ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be searched."}]},"_WinAPI_PathIsLFNFileSpec":{"documentation":"Determines whether a file name is in long format","label":"_WinAPI_PathIsLFNFileSpec ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The file name to be tested."}]},"_WinAPI_PathIsRelative":{"documentation":"Searches a path and determines if it is relative","label":"_WinAPI_PathIsRelative ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be searched."}]},"_WinAPI_PathIsRoot":{"documentation":"Parses a path to determine if it is a directory root","label":"_WinAPI_PathIsRoot ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be validated."}]},"_WinAPI_PathIsSameRoot":{"documentation":"Compares two paths to determine if they have a common root component","label":"_WinAPI_PathIsSameRoot ( $sPath1, $sPath2 )","params":[{"label":"$sPath1","documentation":"The first path to be compared."},{"label":"$sPath2","documentation":"The second path to be compared."}]},"_WinAPI_PathIsSystemFolder":{"documentation":"Determines if an existing folder contains the attributes that make it a system folder","label":"_WinAPI_PathIsSystemFolder ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of an existing folder to check the system folder attributes."}]},"_WinAPI_PathIsUNC":{"documentation":"Determines if the string is a valid Universal Naming Convention (UNC) for a server and share path","label":"_WinAPI_PathIsUNC ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to validate."}]},"_WinAPI_PathIsUNCServer":{"documentation":"Determines if a string is a valid Universal Naming Convention (UNC) for a server path only","label":"_WinAPI_PathIsUNCServer ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to validate."}]},"_WinAPI_PathIsUNCServerShare":{"documentation":"Determines if a string is a valid Universal Naming Convention (UNC) share path","label":"_WinAPI_PathIsUNCServerShare ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to validate."}]},"_WinAPI_PathMakeSystemFolder":{"documentation":"Gives an existing folder the proper attributes to become a system folder","label":"_WinAPI_PathMakeSystemFolder ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of an existing folder that will be made into a system folder."}]},"_WinAPI_PathMatchSpec":{"documentation":"Searches a string using a Microsoft MS-DOS wild card match type","label":"_WinAPI_PathMatchSpec ( $sFilePath, $sSpec )","params":[{"label":"$sFilePath","documentation":"The path to be searched."},{"label":"$sSpec","documentation":"The file type for which to search. For example, to test whether $sFilePath is a .doc file,$sSpec should be set to \\"*.doc\\"."}]},"_WinAPI_PathParseIconLocation":{"documentation":"Parses a file location string that contains a file location and icon index","label":"_WinAPI_PathParseIconLocation ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path that contains a file location string. It should be in the form \\"path,iconindex\\"."}]},"_WinAPI_PathRelativePathTo":{"documentation":"Creates a relative path from one file or folder to another","label":"_WinAPI_PathRelativePathTo ( $sPathFrom, $bDirFrom, $sPathTo, $bDirTo )","params":[{"label":"$sPathFrom","documentation":"The path to the file or directory that defines the start of the relative path."},{"label":"$bDirFrom","documentation":"Specifies whether is $sPathFrom path to the directory, valid values:    True - Directory.    False - File."},{"label":"$sPathTo","documentation":"The path to the file or directory that defines the endpoint of the relative path."},{"label":"$bDirTo","documentation":"Specifies whether is $fDirTo path to the directory, valid values:    True - Directory.    False - File."}]},"_WinAPI_PathRemoveArgs":{"documentation":"Removes any arguments from a given path","label":"_WinAPI_PathRemoveArgs ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path that contains the path from which to remove arguments."}]},"_WinAPI_PathRemoveBackslash":{"documentation":"Removes the trailing backslash from a given path","label":"_WinAPI_PathRemoveBackslash ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path from which to remove the backslash."}]},"_WinAPI_PathRemoveExtension":{"documentation":"Removes the file name extension from a path, if one is present","label":"_WinAPI_PathRemoveExtension ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path from which to remove the extension."}]},"_WinAPI_PathRemoveFileSpec":{"documentation":"Removes the trailing file name and backslash from a path, if they are present","label":"_WinAPI_PathRemoveFileSpec ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path from which to remove the file name."}]},"_WinAPI_PathRenameExtension":{"documentation":"Replaces the extension of a file name with a new extension","label":"_WinAPI_PathRenameExtension ( $sFilePath, $sExt )","params":[{"label":"$sFilePath","documentation":"The path in which to replace the extension."},{"label":"$sExt","documentation":"The string that contains a \\".\\" character followed by the new extension."}]},"_WinAPI_PathSearchAndQualify":{"documentation":"Formats a path to the fully qualified path","label":"_WinAPI_PathSearchAndQualify ( $sFilePath [, $bExists = False] )","params":[{"label":"$sFilePath","documentation":"The path to be formated."},{"label":"$bExists","documentation":"**[optional]** Specifies whether the path should be existing, valid values:    True - The path must be an existing path, otherwise, the function fails.    False - The path may not exist (Default)."}]},"_WinAPI_PathSkipRoot":{"documentation":"Parses a path, ignoring the drive letter or Universal Naming Convention (UNC) server/share path elements","label":"_WinAPI_PathSkipRoot ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to parse."}]},"_WinAPI_PathStripPath":{"documentation":"Removes the path portion of a fully qualified path and file","label":"_WinAPI_PathStripPath ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path and file name."}]},"_WinAPI_PathStripToRoot":{"documentation":"Removes all parts of the path except for the root information","label":"_WinAPI_PathStripToRoot ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be converted."}]},"_WinAPI_PathToRegion":{"documentation":"Creates a region from the path that is selected into the specified device context","label":"_WinAPI_PathToRegion ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to a device context that contains a closed path."}]},"_WinAPI_PathUndecorate":{"documentation":"Removes the decoration from a path string","label":"_WinAPI_PathUndecorate ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path."}]},"_WinAPI_PathUnExpandEnvStrings":{"documentation":"Replaces folder names in a fully-qualified path with their associated environment string","label":"_WinAPI_PathUnExpandEnvStrings ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be unexpanded."}]},"_WinAPI_PathUnmakeSystemFolder":{"documentation":"Removes the attributes from a folder that make it a system folder","label":"_WinAPI_PathUnmakeSystemFolder ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of an existing folder that will have the system folder attributes removed."}]},"_WinAPI_PathUnquoteSpaces":{"documentation":"Removes quotes from the beginning and end of a path","label":"_WinAPI_PathUnquoteSpaces ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path."}]},"_WinAPI_PathYetAnotherMakeUniqueName":{"documentation":"Creates a unique filename based on an existing filename","label":"_WinAPI_PathYetAnotherMakeUniqueName ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The file name that the unique name will be based on."}]},"_WinAPI_PickIconDlg":{"documentation":"Displays a dialog box that allows the user to choose an icon","label":"_WinAPI_PickIconDlg ( [$sIcon = \'\' [, $iIndex = 0 [, $hParent = 0]]] )","params":[{"label":"$sIcon","documentation":"**[optional]** The fully-qualified path of the file that contains the initial icon."},{"label":"$iIndex","documentation":"**[optional]** The index of the initial icon. Default is 0."},{"label":"$hParent","documentation":"**[optional]** Handle of the parent window."}]},"_WinAPI_PlayEnhMetaFile":{"documentation":"Displays the picture stored in the specified enhanced-format metafile","label":"_WinAPI_PlayEnhMetaFile ( $hDC, $hEmf, $tRECT )","params":[{"label":"$hDC","documentation":"Handle to the device context for the output device on which the picture will appear."},{"label":"$hEmf","documentation":"Handle to the enhanced metafile."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the coordinates of the bounding rectangle used to display the picture,in logical units"}]},"_WinAPI_PlaySound":{"documentation":"Plays a sound specified by the given file name, resource, or system event","label":"_WinAPI_PlaySound ( $sSound [, $iFlags = $SND_SYSTEM_NOSTOP [, $hInstance = 0]] )","params":[{"label":"$sSound","documentation":"The string that specifies the sound to play. The maximum length is 255 characters. If $sSound isempty, any currently playing waveform sound is stopped."},{"label":"$iFlags","documentation":"**[optional]** The flags for sound playing. This parameter can be one or more of the following values.$SND_APPLICATION$SND_ALIAS$SND_ALIAS_ID$SND_ASYNC$SND_FILENAME$SND_LOOP$SND_MEMORY$SND_NODEFAULT$SND_NOSTOP$SND_NOWAIT$SND_PURGE$SND_RESOURCE$SND_SYNCWindows Vista or later$SND_SENTRY$SND_SYSTEMThree flags ($SND_ALIAS, $SND_FILENAME, and $SND_RESOURCE) determine whether the name is interpretedas an alias for a system event, a file name, or a resource identifier. If none of these flags arespecified, _WinAPI_PlaySound() searches the registry or the WIN.INI file for an association withthe specified sound name. If an association is found, the sound event is played. If no associationis found in the registry, the name is interpreted as a file name.If the $SND_ALIAS_ID flag is specified in $iFlags, the $sSound parameter must be one of the$SND_ALIAS_* values.(See MSDN for more information)"},{"label":"$hInstance","documentation":"**[optional]** Handle to the executable file that contains the resource to be loaded. If $iFlags does notcontain the $SND_RESOURCE, this parameter will be ignored."}]},"_WinAPI_PlgBlt":{"documentation":"Performs a bit-block transfer of color data from the specified rectangle in the source DC to the specified parallelogram in the DC context","label":"_WinAPI_PlgBlt ( $hDestDC, Const ByRef $aPoint, $hSrcDC, $iXSrc, $iYSrc, $iWidth, $iHeight [, $hMask = 0 [, $iXMask = 0 [, $iYMask = 0]]] )","params":[{"label":"$hDestDC","documentation":"Handle to the destination device context."},{"label":"$aPoint","documentation":"The 2D array ([x1, y1], [x2, y2], [x3, y3]) that identify three corners of the destination parallelogram.The upper-left corner of the source rectangle is mapped to the first point in this array, the upper-rightcorner to the second point in this array, and the lower-left corner to the third point. The lower-rightcorner of the source rectangle is mapped to the implicit fourth point in the parallelogram."},{"label":"$hSrcDC","documentation":"Handle to the source device context."},{"label":"$iXSrc","documentation":"The x-coordinate, in logical units, of the upper-left corner of the source rectangle."},{"label":"$iYSrc","documentation":"The y-coordinate, in logical units, of the upper-left corner of the source rectangle."},{"label":"$iWidth","documentation":"The width, in logical units, of the source rectangle."},{"label":"$iHeight","documentation":"The height, in logical units, of the source rectangle."},{"label":"$hMask","documentation":"**[optional]** Handle to the monochrome bitmap that is used to mask the colors of the source rectangle."},{"label":"$iXMask","documentation":"**[optional]** The x-coordinate, in logical units, of the upper-left corner of the monochrome bitmap. Default is 0."},{"label":"$iYMask","documentation":"**[optional]** The y-coordinate, in logical units, of the upper-left corner of the monochrome bitmap. Default is 0."}]},"_WinAPI_PointFromRect":{"documentation":"Returns the top/left coordinates of a $tagRECT as a $tagPOINT structure","label":"_WinAPI_PointFromRect ( ByRef $tRECT [, $bCenter = True] )","params":[{"label":"$tRECT","documentation":"$tagRECT structure"},{"label":"$bCenter","documentation":"**[optional]** If True, the return will be a point at the center of the rectangle, otherwise the left/topcoordinates are returned."}]},"_WinAPI_PolyBezier":{"documentation":"Draws one or more Bezier curves","label":"_WinAPI_PolyBezier ( $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$hDC","documentation":"Handle to a device context."},{"label":"$aPoint","documentation":"The 2D array ([x1, y1], [x2, y2], ... [xN, yN]) that contains the endpoints and control points of thecurve(s), in logical units. The number of points must be one more than three times the number of curvesto be drawn, because each Bezier curve requires two control points and an endpoint, and the initialcurve requires an additional starting point."},{"label":"$iStart","documentation":"**[optional]** The index of array to start drawing at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop drawing at."}]},"_WinAPI_PolyBezierTo":{"documentation":"Draws one or more Bezier curves","label":"_WinAPI_PolyBezierTo ( $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$hDC","documentation":"Handle to a device context."},{"label":"$aPoint","documentation":"The 2D array ([x1, y1], [x2, y2], ... [xN, yN]) that contains the endpoints and control points of thecurve(s), in logical units. The number of points must be three times the number of curves to be drawn,because each Bezier curve requires two control points and an ending point."},{"label":"$iStart","documentation":"**[optional]** The index of array to start drawing at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop drawing at."}]},"_WinAPI_PolyDraw":{"documentation":"Draws a set of line segments and Bezier curves","label":"_WinAPI_PolyDraw ( $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$hDC","documentation":"Handle to a device context."},{"label":"$aPoint","documentation":"The 2D array ([x1, y1, type1], [x2, y2, type2], ... [xN, yN, typeN]) that contains the endpoints foreach line segment and the endpoints and control points for each Bezier curve, in logical units. In addition,the array contains a parameters that specifies how each point is used. The third parameter of the arraycan be one of the following values.$PT_BEZIERTO$PT_LINETO$PT_MOVETO$PT_BEZIERTO or $PT_LINETO type can be combined with the following value that the corresponding pointis the last point in a figure and the figure is closed.$PT_CLOSEFIGURE"},{"label":"$iStart","documentation":"**[optional]** The index of array to start drawing at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop drawing at."}]},"_WinAPI_Polygon":{"documentation":"Draws a polygon consisting of two or more vertices connected by straight lines","label":"_WinAPI_Polygon ( $hDC, Const ByRef $aPoint [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$aPoint","documentation":"The 2D array ([x1, y1], [x2, y2], ... [xN, yN]) that contains the vertices of the polygon in logicalunits. The polygon is closed automatically by drawing a line from the last vertex to the first."},{"label":"$iStart","documentation":"**[optional]** The index of array to start creating at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop creating at."}]},"_WinAPI_PostMessage":{"documentation":"Places a message in the message queue and then returns","label":"_WinAPI_PostMessage ( $hWnd, $iMsg, $wParam, $lParam )","params":[{"label":"$hWnd","documentation":"Identifies the window whose window procedure will receive the message.If this parameter is 0xFFFF (HWND_BROADCAST), the message is sent to all top-level windows in the system, including disabled or invisible windows, overlapped windows, and pop-up windows; but the message is not sent to child windows."},{"label":"$iMsg","documentation":"Specifies the message to be sent"},{"label":"$wParam","documentation":"First message parameter"},{"label":"$lParam","documentation":"Second message parameter"}]},"_WinAPI_PrimaryLangId":{"documentation":"Extract primary language id from a language id","label":"_WinAPI_PrimaryLangId ( $iLngID )","params":[{"label":"$iLngID","documentation":"Language id"}]},"_WinAPI_PrintDlg":{"documentation":"Displays a Print dialog box","label":"_WinAPI_PrintDlg ( ByRef $tPRINTDLG )","params":[{"label":"$tPRINTDLG","documentation":"$tagPRINTDLG structure that contains information used to initialize the dialog box. When the functionreturns, it contains information about the user\'s selections. This structure must be initializedbefore function call.(See MSDN for more information)"}]},"_WinAPI_PrintDlgEx":{"documentation":"Displays a Print property sheet that enables the user to specify the properties of a particular print job","label":"_WinAPI_PrintDlgEx ( ByRef $tPRINTDLGEX )","params":[{"label":"$tPRINTDLGEX","documentation":"$tagPRINTDLGEX structure that contains information used to initialize the property sheet. When thefunction returns, it contains information about the user\'s selections. This structure must beinitialized before function call.(See MSDN for more information)"}]},"_WinAPI_PrintWindow":{"documentation":"Copies a visual window into the specified device context","label":"_WinAPI_PrintWindow ( $hWnd, $hDC [, $bClient = False] )","params":[{"label":"$hWnd","documentation":"Handle to the window that will be copied."},{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$bClient","documentation":"**[optional]** Specifies whether copies only the client area of the window, valid values:    True - Only the client area of the window is copied to device context.    False - The entire window is copied (Default)."}]},"_WinAPI_ProgIDFromCLSID":{"documentation":"Retrieves the ProgID for a given CLSID","label":"_WinAPI_ProgIDFromCLSID ( $sCLSID )","params":[{"label":"$sCLSID","documentation":"The string that represents the CLSID for which ProgID is to be retrieved."}]},"_WinAPI_PtInRect":{"documentation":"Determines whether the specified point lies within the specified rectangle","label":"_WinAPI_PtInRect ( ByRef $tRECT, ByRef $tPoint )","params":[{"label":"$tRECT","documentation":"$tagRECT structure that contains the specified rectangle"},{"label":"$tPoint","documentation":"$tagPOINT structure that contains the specified point"}]},"_WinAPI_PtInRectEx":{"documentation":"Determines whether the specified point lies within the specified rectangle","label":"_WinAPI_PtInRectEx ( $iX, $iY, $iLeft, $iTop, $iRight, $iBottom )","params":[{"label":"$iX","documentation":"The x-coordinate of the point."},{"label":"$iY","documentation":"The y-coordinate of the point."},{"label":"$iLeft","documentation":"The x-coordinate of the upper-left corner of the rectangle."},{"label":"$iTop","documentation":"The y-coordinate of the upper-left corner of the rectangle."},{"label":"$iRight","documentation":"The x-coordinate of the lower-right corner of the rectangle."},{"label":"$iBottom","documentation":"The y-coordinate of the lower-right corner of the rectangle."}]},"_WinAPI_PtInRegion":{"documentation":"Determines whether the specified point is inside the specified region","label":"_WinAPI_PtInRegion ( $hRgn, $iX, $iY )","params":[{"label":"$hRgn","documentation":"Handle to the region to be examined."},{"label":"$iX","documentation":"The x-coordinate of the point in logical units."},{"label":"$iY","documentation":"The y-coordinate of the point in logical units."}]},"_WinAPI_PtVisible":{"documentation":"Determines whether the specified point is within the clipping region","label":"_WinAPI_PtVisible ( $hDC, $iX, $iY )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate, in logical units, of the point."},{"label":"$iY","documentation":"The y-coordinate, in logical units, of the point."}]},"_WinAPI_QueryDosDevice":{"documentation":"Retrieves the current mapping for a particular MS-DOS device name","label":"_WinAPI_QueryDosDevice ( $sDevice )","params":[{"label":"$sDevice","documentation":"The name of the MS-DOS device."}]},"_WinAPI_QueryInformationJobObject":{"documentation":"Retrieves limit and job state information from the job object","label":"_WinAPI_QueryInformationJobObject ( $hJob, $iJobObjectInfoClass, ByRef $tJobObjectInfo )","params":[{"label":"$hJob","documentation":"Handle to the job whose information is being queried. The handle must have the$JOB_OBJECT_QUERY access right. If this value is 0 and the calling process is associatedwith a job, the job associated with the calling process is used."},{"label":"$iJobObjectInfoClass","documentation":"The information class for the limits to be queried. This parameter specifies the typeof $tJobObjectInfo structure, valid values:1 - $tagJOBOBJECT_BASIC_ACCOUNTING_INFORMATION2 - $tagJOBOBJECT_BASIC_LIMIT_INFORMATION3 - $tagJOBOBJECT_BASIC_PROCESS_ID_LIST4 - $tagJOBOBJECT_BASIC_UI_RESTRICTIONS5 - $tagJOBOBJECT_SECURITY_LIMIT_INFORMATION8 - $tagJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION9 - $tagJOBOBJECT_EXTENDED_LIMIT_INFORMATION11 - $tagJOBOBJECT_GROUP_INFORMATION"},{"label":"$tJobObjectInfo","documentation":"$tagJOBOBJECT_* structure (see above) that retrieves the limit and job state information.This structure must be created before function call."}]},"_WinAPI_QueryPerformanceCounter":{"documentation":"Retrieves the current value of the high-resolution performance counter","label":"_WinAPI_QueryPerformanceCounter (  )","params":[]},"_WinAPI_QueryPerformanceFrequency":{"documentation":"Retrieves the frequency of the high-resolution performance counter","label":"_WinAPI_QueryPerformanceFrequency (  )","params":[]},"_WinAPI_RadialGradientFill":{"documentation":"Fills radial gradient","label":"_WinAPI_RadialGradientFill ( $hDC, $iX, $iY, $iRadius, $iRGB1, $iRGB2 [, $fAngleStart = 0 [, $fAngleEnd = 360 [, $fStep = 5]]] )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate of the central point, in logical units."},{"label":"$iY","documentation":"The y-coordinate of the central point, in logical units."},{"label":"$iRadius","documentation":"The circle radius to filling the gradient."},{"label":"$iRGB1","documentation":"The color information at the central point."},{"label":"$iRGB2","documentation":"The color information at the edges of circle."},{"label":"$fAngleStart","documentation":"**[optional]** The angle to start filling at, in degree. Default is 0."},{"label":"$fAngleEnd","documentation":"**[optional]** The angle to end filling at, in degree. Default is 360."},{"label":"$fStep","documentation":"**[optional]** The gradient filling step in degree. The larger value of this parameter, the gradient will bebetter, but it\'s require more time, and vice versa. Default is 5."}]},"_WinAPI_ReadDirectoryChanges":{"documentation":"Retrieves information that describes the changes within the specified directory","label":"_WinAPI_ReadDirectoryChanges ( $hDirectory, $iFilter, $pBuffer, $iLength [, $bSubtree = 0] )","params":[{"label":"$hDirectory","documentation":"A handle to the directory to be monitored. This directory must be opened with the $FILE_LIST_DIRECTORY access right."},{"label":"$iFilter","documentation":"The filter criteria that the function checks to determine if the wait operation has completed.This parameter can be one or more of the following values.    $FILE_NOTIFY_CHANGE_FILE_NAME    $FILE_NOTIFY_CHANGE_DIR_NAME    $FILE_NOTIFY_CHANGE_ATTRIBUTES    $FILE_NOTIFY_CHANGE_SIZE    $FILE_NOTIFY_CHANGE_LAST_WRITE    $FILE_NOTIFY_CHANGE_LAST_ACCESS    $FILE_NOTIFY_CHANGE_CREATION    $FILE_NOTIFY_CHANGE_SECURITY"},{"label":"$pBuffer","documentation":"A pointer to the DWORD-aligned formatted buffer that internally used by this function to retrieve the data.To create a buffer, you can use _WinAPI_CreateBuffer() function.To prevent the crash of the script, use the buffer at least not less than 64 KB.If the buffer is greater than 64 KB and the application is monitoring a directory over the network, the function fails.This is due to a packet size limitation with the underlying file sharing protocols."},{"label":"$iLength","documentation":"The size of the buffer, in bytes."},{"label":"$bSubtree","documentation":"**[optional]** Specifies whether to monitor the subdirectories of the specified directory, valid values:True - Monitor the directory tree rooted at the specified directory.False - Monitor only the specified directory (Default)."}]},"_WinAPI_ReadFile":{"documentation":"Reads data from a file","label":"_WinAPI_ReadFile ( $hFile, $pBuffer, $iToRead, ByRef $iRead [, $tOverlapped = 0] )","params":[{"label":"$hFile","documentation":"Handle to the file to be read"},{"label":"$pBuffer","documentation":"Pointer to the buffer that receives the data read from a file"},{"label":"$iToRead","documentation":"Maximum number of bytes to read"},{"label":"$iRead","documentation":"Number of bytes read"},{"label":"$tOverlapped","documentation":"**[optional]** A $tagOVERLAPPED structure or a pointer to it"}]},"_WinAPI_ReadProcessMemory":{"documentation":"Reads memory in a specified process","label":"_WinAPI_ReadProcessMemory ( $hProcess, $pBaseAddress, $pBuffer, $iSize, ByRef $iRead )","params":[{"label":"$hProcess","documentation":"Identifies an open handle of a process whose memory is read"},{"label":"$pBaseAddress","documentation":"Points to the base address in the specified process to be read"},{"label":"$pBuffer","documentation":"Points to a buffer that receives the contents from the address space"},{"label":"$iSize","documentation":"Specifies the requested number of bytes to read from the specified process"},{"label":"$iRead","documentation":"The actual number of bytes transferred into the specified buffer"}]},"_WinAPI_Rectangle":{"documentation":"Draws a rectangle","label":"_WinAPI_Rectangle ( $hDC, $tRECT )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the rectangle."}]},"_WinAPI_RectInRegion":{"documentation":"Determines whether any part of the specified rectangle is within the boundaries of a region","label":"_WinAPI_RectInRegion ( $hRgn, $tRECT )","params":[{"label":"$hRgn","documentation":"Handle to the region."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the coordinates of the rectangle in logical units."}]},"_WinAPI_RectIsEmpty":{"documentation":"Determins whether a rectangle is empty","label":"_WinAPI_RectIsEmpty ( ByRef $tRECT )","params":[{"label":"$tRECT","documentation":"$tagRect structure"}]},"_WinAPI_RectVisible":{"documentation":"Determines whether any part of the specified rectangle lies within the clipping region","label":"_WinAPI_RectVisible ( $hDC, $tRECT )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the specified rectangle."}]},"_WinAPI_RedrawWindow":{"documentation":"Updates the specified rectangle or region in a window\'s client area","label":"_WinAPI_RedrawWindow ( $hWnd [, $tRECT = 0 [, $hRegion = 0 [, $iFlags = 5]]] )","params":[{"label":"$hWnd","documentation":"Handle to a Window"},{"label":"$tRECT","documentation":"**[optional]** $tagRECT structure containing the coordinates of the update rectangle. This parameter isignored if the $hRegion parameter identifies a region."},{"label":"$hRegion","documentation":"**[optional]** Identifies the update region. If the $hRegion and $tRECT parameters are 0, the entire clientarea is added to the update region."},{"label":"$iFlags","documentation":"**[optional]** Specifies the redraw flags. This parameter can be a combination of flags that invalidate or validate a window, control repainting, and control which windows are affected:    $RDW_ERASE - Causes the window to receive a WM_ERASEBKGND message when the window is repainted    $RDW_FRAME - Causes any part of the nonclient area of the window that intersects the update region to receive a WM_NCPAINT message.    $RDW_INTERNALPAINT - Causes a WM_PAINT message to be posted to the window regardless of whether any portion of the window is invalid.    $RDW_INVALIDATE - Invalidates $tRECT or $hRegion. If both are 0, the entire window is invalidated.    $RDW_NOERASE - Suppresses any pending $WM_ERASEBKGND messages    $RDW_NOFRAME - Suppresses any pending $WM_NCPAINT messages    $RDW_NOINTERNALPAINT - Suppresses any pending internal $WM_PAINT messages    $RDW_VALIDATE - Validates $tRECT or $hRegion    $RDW_ERASENOW - Causes the affected windows to receive $WM_NCPAINT and $WM_ERASEBKGND messages, if necessary, before the function returns    $RDW_UPDATENOW - Causes the affected windows to receive $WM_NCPAINT, $WM_ERASEBKGND, and $WM_PAINT messages, if necessary, before the function returns.    $RDW_ALLCHILDREN - Includes child windows in the repainting operation    $RDW_NOCHILDREN - Excludes child windows from the repainting operation"}]},"_WinAPI_RegCloseKey":{"documentation":"Closes a handle to the specified registry key","label":"_WinAPI_RegCloseKey ( $hKey [, $bFlush = False] )","params":[{"label":"$hKey","documentation":"Handle to the open key to be closed. The handle must have been opened by the _WinAPI_RegCreateKey()or _WinAPI_RegOpenKey() function."},{"label":"$bFlush","documentation":"**[optional]** Specifies whether writes all the attributes of the specified registry key into the registry, valid values:    True - Write changes to disk before close the handle.    False - Don\'t write (Default)."}]},"_WinAPI_RegConnectRegistry":{"documentation":"Establishes a connection to a predefined registry key on another computer","label":"_WinAPI_RegConnectRegistry ( $sComputer, $hKey )","params":[{"label":"$sComputer","documentation":"The name of the remote computer. The string has the form as \\"\\\\\\\\computername\\". The caller musthave access to the remote computer or the function fails. If this parameter is 0, the localcomputer name is used."},{"label":"$hKey","documentation":"The predefined registry handle. This parameter can be one of the following predefined keyson the remote computer.$HKEY_LOCAL_MACHINE$HKEY_PERFORMANCE_DATA$HKEY_USERS"}]},"_WinAPI_RegCopyTree":{"documentation":"Recursively copies the subkeys and values of the source subkey to the destination key","label":"_WinAPI_RegCopyTree ( $hSrcKey, $sSrcSubKey, $hDestKey )","params":[{"label":"$hSrcKey","documentation":"Handle to the source key or one of the predefined registry keys ($HKEY_*)."},{"label":"$sSrcSubKey","documentation":"The subkey whose subkeys and values are to be copied."},{"label":"$hDestKey","documentation":"Handle to the destination key."}]},"_WinAPI_RegCopyTreeEx":{"documentation":"Copies the specified registry key, along with its values and subkeys, to the specified destination key","label":"_WinAPI_RegCopyTreeEx ( $hSrcKey, $sSrcSubKey, $hDestKey )","params":[{"label":"$hSrcKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_READ access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function, or it can beone of the predefined registry keys ($HKEY_*)."},{"label":"$sSrcSubKey","documentation":"The name of the key. This key must be a subkey of the key identified by the $hSrcKey parameter."},{"label":"$hDestKey","documentation":"Handle to the destination key. The calling process must have $KEY_CREATE_SUB_KEY access to the key.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function, or it can beone of the predefined registry keys ($HKEY_*)."}]},"_WinAPI_RegCreateKey":{"documentation":"Creates the specified registry key","label":"_WinAPI_RegCreateKey ( $hKey [, $sSubKey = \'\' [, $iAccess = $KEY_ALL_ACCESS [, $iOptions = 0 [, $tSecurity = 0]]]] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. If the key already exists, the function opens it. The calling processmust have $KEY_CREATE_SUB_KEY access to the key. This handle is returned by the _WinAPI_RegCreateKey()or _WinAPI_RegOpenKey() function, or it can be one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$sSubKey","documentation":"**[optional]** The name of a subkey that this function opens or creates. The subkey specified must be a subkey ofthe key identified by the $hKey parameter; it can be up to 32 levels deep in the registry tree.If an empty string (Default), the return is a new handle to the key specified by $hKey."},{"label":"$iAccess","documentation":"**[optional]** The mask that specifies the access rights for the key.This parameter can be one or more of the following values.$KEY_ALL_ACCESS$KEY_CREATE_LINK$KEY_CREATE_SUB_KEY$KEY_ENUMERATE_SUB_KEYS$KEY_EXECUTE$KEY_NOTIFY$KEY_QUERY_VALUE$KEY_READ$KEY_SET_VALUE$KEY_WOW64_32KEY$KEY_WOW64_64KEY$KEY_WRITE"},{"label":"$iOptions","documentation":"**[optional]** This parameter can be one of the following values.$REG_OPTION_BACKUP_RESTORE$REG_OPTION_CREATE_LINK$REG_OPTION_NON_VOLATILE (Default)$REG_OPTION_VOLATILE"},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited bychild processes. If this parameter is 0 (Default), the handle cannot be inherited."}]},"_WinAPI_RegDeleteEmptyKey":{"documentation":"Deletes an empty key","label":"_WinAPI_RegDeleteEmptyKey ( $hKey [, $sSubKey = \'\'] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key, or any of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$sSubKey","documentation":"**[optional]** The name of the key to delete."}]},"_WinAPI_RegDeleteKey":{"documentation":"Deletes a subkey and its values","label":"_WinAPI_RegDeleteKey ( $hKey [, $sSubKey = \'\'] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The access rights of this key do not affect the delete operation.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function, or it can beone of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$sSubKey","documentation":"**[optional]** The name of the key to be deleted. It must be a subkey of the key that $hKey identifies, but itcannot have subkeys."}]},"_WinAPI_RegDeleteKeyValue":{"documentation":"Removes the specified value from the specified registry key and subkey","label":"_WinAPI_RegDeleteKeyValue ( $hKey, $sSubKey, $sValueName )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_SET_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function, or it can beone of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$sSubKey","documentation":"The name of the registry key. This key must be a subkey of the key identified by the $hKey parameter."},{"label":"$sValueName","documentation":"The registry value to be removed from the key."}]},"_WinAPI_RegDeleteTree":{"documentation":"Deletes a subkey and all its descendants","label":"_WinAPI_RegDeleteTree ( $hKey [, $sSubKey = \'\'] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key, or any of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_PERFORMANCE_DATA$HKEY_USERS"},{"label":"$sSubKey","documentation":"**[optional]** The name of the key to delete."}]},"_WinAPI_RegDeleteTreeEx":{"documentation":"Deletes the subkeys and values of the specified key recursively","label":"_WinAPI_RegDeleteTreeEx ( $hKey [, $sSubKey = 0] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the following access rights:$DELETE, $KEY_ENUMERATE_SUB_KEYS, and $KEY_QUERY_VALUE. This handle is returned by the _WinAPI_RegCreateKey()or _WinAPI_RegOpenKey() function, or it can be one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$sSubKey","documentation":"**[optional]** The name of the key to delete. This key must be a subkey of the key identified by the $hKey parameter.If this parameter is not specified (Default), the subkeys and values of $hKey are deleted."}]},"_WinAPI_RegDeleteValue":{"documentation":"Removes a named value from the specified registry key","label":"_WinAPI_RegDeleteValue ( $hKey, $sValueName )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_SET_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function, or it can beone of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$sValueName","documentation":"The registry value to be removed. If this parameter is empty string, the key\'s unnamed or defaultvalue is removed."}]},"_WinAPI_RegDisableReflectionKey":{"documentation":"Disables registry reflection for the specified key","label":"_WinAPI_RegDisableReflectionKey ( $hKey )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey()function; it cannot specify a key on a remote computer. If the key is not on the reflection list,the function succeeds but has no effect."}]},"_WinAPI_RegDuplicateHKey":{"documentation":"Duplicates a registry key\'s handle","label":"_WinAPI_RegDuplicateHKey ( $hKey )","params":[{"label":"$hKey","documentation":"Handle to an open registry key to be duplicated."}]},"_WinAPI_RegEnableReflectionKey":{"documentation":"Restores registry reflection for the specified disabled key","label":"_WinAPI_RegEnableReflectionKey ( $hKey )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey()function; it cannot specify a key on a remote computer. If the key is not on the reflection list,the function succeeds but has no effect."}]},"_WinAPI_RegEnumKey":{"documentation":"Enumerates the subkeys of the specified open registry key","label":"_WinAPI_RegEnumKey ( $hKey, $iIndex )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_ENUMERATE_SUB_KEYS accessright. This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function.It can also be one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_PERFORMANCE_DATA$HKEY_USERS"},{"label":"$iIndex","documentation":"The index of the subkey to retrieve. This parameter should be zero for the first call to the _WinAPI_RegEnumKey()function and then incremented for subsequent calls."}]},"_WinAPI_RegEnumValue":{"documentation":"Enumerates the values for the specified open registry key","label":"_WinAPI_RegEnumValue ( $hKey, $iIndex )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_QUERY_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function. It can alsobe one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_PERFORMANCE_DATA$HKEY_USERS"},{"label":"$iIndex","documentation":"The index of the value to be retrieved. This parameter should be zero for the first call to the _WinAPI_RegEnumValue()function and then be incremented for subsequent calls."}]},"_WinAPI_RegFlushKey":{"documentation":"Writes all the attributes of the specified open registry key into the registry","label":"_WinAPI_RegFlushKey ( $hKey )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_QUERY_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function. It can alsobe one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_PERFORMANCE_DATA$HKEY_USERS"}]},"_WinAPI_RegisterApplicationRestart":{"documentation":"Registers the active instance of an application for restart","label":"_WinAPI_RegisterApplicationRestart ( [$iFlags = 0 [, $sCmd = \'\']] )","params":[{"label":"$iFlags","documentation":"**[optional]** The flags that specifies an events when application will not be restarted. This parameter can be0 or one or more of the following values.$RESTART_NO_CRASH$RESTART_NO_HANG$RESTART_NO_PATCH$RESTART_NO_REBOOT"},{"label":"$sCmd","documentation":"**[optional]** The command-line arguments for the application when it is restarted. The maximum size of the commandline that you can specify is 2048 characters. If this parameter is empty string (Default), the previouslyregistered command line is removed."}]},"_WinAPI_RegisterClass":{"documentation":"Registers a window class","label":"_WinAPI_RegisterClass ( $tWNDCLASS )","params":[{"label":"$tWNDCLASS","documentation":"$tagWNDCLASS structure."}]},"_WinAPI_RegisterClassEx":{"documentation":"Registers a window class","label":"_WinAPI_RegisterClassEx ( $tWNDCLASSEX )","params":[{"label":"$tWNDCLASSEX","documentation":"$tagWNDCLASSEX structure."}]},"_WinAPI_RegisterHotKey":{"documentation":"Defines a system-wide hot key","label":"_WinAPI_RegisterHotKey ( $hWnd, $iID, $iModifiers, $vKey )","params":[{"label":"$hWnd","documentation":"Handle to the window that will receive WM_HOTKEY messages generated by the hot key. If this parameteris 0, WM_HOTKEY messages are posted to the message queue of the calling thread and must be processed inthe message loop."},{"label":"$iID","documentation":"Specifies the identifier of the hot key. An application must specify an id value in the range0x0000 through 0xBFFF."},{"label":"$iModifiers","documentation":"Specifies keys that must be pressed in combination with the key specified by the $vKey parameterin order to generate the WM_HOTKEY message.The $iModifiers parameter can be a combination of the following values.    $MOD_ALT    $MOD_CONTROL    $MOD_SHIFT    $MOD_WINWindows 7 or later    $MOD_NOREPEAT"},{"label":"$vKey","documentation":"Specifies the virtual-key code of the hot key ($VK_*)."}]},"_WinAPI_RegisterPowerSettingNotification":{"documentation":"Registers the application to receive power setting notifications for the specific power setting event","label":"_WinAPI_RegisterPowerSettingNotification ( $hWnd, $sGUID )","params":[{"label":"$hWnd","documentation":"Handle to the window that receives the change or notification messages."},{"label":"$sGUID","documentation":"The string that represents a GUID of the power setting for which notifications are to be sent.It may be one of the following values.$GUID_ACDC_POWER_SOURCE$GUID_BATTERY_PERCENTAGE_REMAINING$GUID_IDLE_BACKGROUND_TASK$GUID_MONITOR_POWER_ON$GUID_POWERSCHEME_PERSONALITY$GUID_SYSTEM_AWAYMODE"}]},"_WinAPI_RegisterRawInputDevices":{"documentation":"Registers the devices that supply the raw input data","label":"_WinAPI_RegisterRawInputDevices ( $paDevice [, $iCount = 1] )","params":[{"label":"$paDevice","documentation":"A pointer to an array of $tagRAWINPUTDEVICE structures that represent the devices that supply the raw input."},{"label":"$iCount","documentation":"**[optional]** The number of entries in the array. Default is 1."}]},"_WinAPI_RegisterShellHookWindow":{"documentation":"Registers a specified Shell window to receive certain messages for events or notifications","label":"_WinAPI_RegisterShellHookWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to register for Shell hook messages."}]},"_WinAPI_RegisterWindowMessage":{"documentation":"Defines a new window message that is guaranteed to be unique throughout the system","label":"_WinAPI_RegisterWindowMessage ( $sMessage )","params":[{"label":"$sMessage","documentation":"String that specifies the message to be registered"}]},"_WinAPI_RegLoadMUIString":{"documentation":"Loads the specified string from the specified key and subkey","label":"_WinAPI_RegLoadMUIString ( $hKey, $sValueName [, $sDirectory = \'\'] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_QUERY_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function. It can alsobe one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$sValueName","documentation":"The name of the registry value."},{"label":"$sDirectory","documentation":"**[optional]** The directory path."}]},"_WinAPI_RegNotifyChangeKeyValue":{"documentation":"Notifies the caller about changes to the attributes or contents of a specified registry key","label":"_WinAPI_RegNotifyChangeKeyValue ( $hKey, $iFilter [, $bSubtree = False [, $bAsync = False [, $hEvent = 0]]] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the KEY_NOTIFY access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function. It can alsobe one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$iFilter","documentation":"Indicates the changes that should be reported. This parameter can be one or more of the following values.$REG_NOTIFY_CHANGE_NAME$REG_NOTIFY_CHANGE_ATTRIBUTES$REG_NOTIFY_CHANGE_LAST_SET$REG_NOTIFY_CHANGE_SECURITY"},{"label":"$bSubtree","documentation":"**[optional]** Specifies whether report changes in the subkeys of the specified key, valid values:    True - The function reports changes in the specified key and all its subkeys.    False - The function reports changes only in the specified key (Default)."},{"label":"$bAsync","documentation":"**[optional]** Specifies whether return immediately, valid values:    True  - The function returns immediately and reports changes by signaling the specified event.    False - The function does not return until a change has occurred (Default)."},{"label":"$hEvent","documentation":"**[optional]** Handle to an event. If the $fAsync parameter is True, the function returns immediately and changes arereported by signaling this event, otherwise this parameter is ignored (Default)."}]},"_WinAPI_RegOpenKey":{"documentation":"Opens the specified registry key","label":"_WinAPI_RegOpenKey ( $hKey [, $sSubKey = \'\' [, $iAccess = 0x000F003F]] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey()function, or it can be one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$sSubKey","documentation":"**[optional]** The name of the registry subkey to be opened (see remarks)."},{"label":"$iAccess","documentation":"**[optional]** A mask that specifies the desired access rights to the key. The function fails if the securitydescriptor of the key does not permit the requested access for the calling process. This parametercan be one or more of the $KEY_* constants. Default is $KEY_ALL_ACCESS."}]},"_WinAPI_RegQueryInfoKey":{"documentation":"Retrieves information about the specified registry key","label":"_WinAPI_RegQueryInfoKey ( $hKey )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_QUERY_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function. It can alsobe one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_PERFORMANCE_DATA$HKEY_USERS"}]},"_WinAPI_RegQueryLastWriteTime":{"documentation":"Retrieves information about the last write time to the specified registry key","label":"_WinAPI_RegQueryLastWriteTime ( $hKey )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_QUERY_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function. It can alsobe one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_PERFORMANCE_DATA$HKEY_USERS"}]},"_WinAPI_RegQueryMultipleValues":{"documentation":"Retrieves the type and data for a list of value names associated with an open registry key","label":"_WinAPI_RegQueryMultipleValues ( $hKey, ByRef $aValent, ByRef $pBuffer [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the KEY_QUERY_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function.It can also be one of the following predefined keys :    $HKEY_CLASSES_ROOT    $HKEY_CURRENT_CONFIG    $HKEY_CURRENT_USER    $HKEY_LOCAL_MACHINE    $HKEY_PERFORMANCE_DATA    $HKEY_USERS"},{"label":"$aValent","documentation":"The 2D array ([valuename1, *, *, *], ... [valuenameN, *, *, *]) that contains a value names to be retrieved.On input, 1, 2, and 3 array elements are not used, but array dimensions should be [n][4], otherwise the function fails.Also, this function fails if any of the specified values do not exist in the specified registry key."},{"label":"$pBuffer","documentation":"A pointer to a memory buffer that contains a registry data. Typically, you should not use this buffer directly (see remarks)."},{"label":"$iStart","documentation":"**[optional]** The index of array to start querying at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop querying at."}]},"_WinAPI_RegQueryReflectionKey":{"documentation":"Determines whether reflection has been disabled or enabled for the specified key","label":"_WinAPI_RegQueryReflectionKey ( $hKey )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey()function; it cannot specify a key on a remote computer. If the key is not on the reflection list,the function succeeds but has no effect."}]},"_WinAPI_RegQueryValue":{"documentation":"Retrieves the type and data for the specified value name associated with an open registry key","label":"_WinAPI_RegQueryValue ( $hKey, $sValueName, ByRef $tValueData )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the KEY_QUERY_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function. It can alsobe one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_PERFORMANCE_DATA$HKEY_PERFORMANCE_NLSTEXT$HKEY_PERFORMANCE_TEXT$HKEY_USERS"},{"label":"$sValueName","documentation":"The name of the registry value. If $sValueName is empty string, the function retrieves the type anddata for the key\'s unnamed or default value, if any."},{"label":"$tValueData","documentation":"The structure (buffer) that receives the value data. This structure must be created before function call."}]},"_WinAPI_RegRestoreKey":{"documentation":"Reads the registry information in a specified file and copies it over the specified key","label":"_WinAPI_RegRestoreKey ( $hKey, $sFilePath )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey()function. It can also be one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_USERS"},{"label":"$sFilePath","documentation":"The name of the file with the registry information. This file is typically created byusing the _WinAPI_RegSaveKey() function."}]},"_WinAPI_RegSaveKey":{"documentation":"Saves the specified key and all of its subkeys and values to a new file, in the standard format","label":"_WinAPI_RegSaveKey ( $hKey, $sFilePath [, $bReplace = False [, $tSecurity = 0]] )","params":[{"label":"$hKey","documentation":"Handle to an open registry key."},{"label":"$sFilePath","documentation":"The name of the file in which the specified key and subkeys are to be saved."},{"label":"$bReplace","documentation":"**[optional]** Specifies whether to replace the file if it already exists, valid values:    True - The function attempts to replace the existing file.    False - The function fails if the file already exists (Default)."},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new file. If thisparameter is 0 (Default), the file gets a default security descriptor."}]},"_WinAPI_RegSetValue":{"documentation":"Sets the data and type of a specified value under a registry key","label":"_WinAPI_RegSetValue ( $hKey, $sValueName, $iType, $tValueData, $iBytes )","params":[{"label":"$hKey","documentation":"Handle to an open registry key. The key must have been opened with the $KEY_SET_VALUE access right.This handle is returned by the _WinAPI_RegCreateKey() or _WinAPI_RegOpenKey() function. It can alsobe one of the following predefined keys.$HKEY_CLASSES_ROOT$HKEY_CURRENT_CONFIG$HKEY_CURRENT_USER$HKEY_LOCAL_MACHINE$HKEY_PERFORMANCE_DATA$HKEY_USERS"},{"label":"$sValueName","documentation":"The name of the value to be set. If a value with this name is not already present in the key,the function adds it to the key. If $sValueName is empty string, the function sets the type anddata for the key\'s unnamed or default value."},{"label":"$iType","documentation":"The type of data. This parameter can be one of the following values.$REG_BINARY$REG_DWORD$REG_DWORD_BIG_ENDIAN$REG_DWORD_LITTLE_ENDIAN$REG_EXPAND_SZ$REG_LINK$REG_MULTI_SZ$REG_NONE$REG_QWORD$REG_QWORD_LITTLE_ENDIAN$REG_SZ"},{"label":"$tValueData","documentation":"The structure (buffer) that contains the data to be stored. For string-based types, such as REG_SZ,the string must be null-terminated. With the REG_MULTI_SZ data type, the string must be terminatedwith two null characters. A backslash must be preceded by another backslash as an escape character.For example, specify \\"C:\\\\\\\\mydir\\\\\\\\myfile\\" to store the string \\"C:\\\\mydir\\\\myfile\\"."},{"label":"$iBytes","documentation":"The size of the data, in bytes. If the data has the REG_SZ, REG_MULTI_SZ or REG_EXPAND_SZ type,this size includes any terminating null character or characters unless the data was storedwithout them."}]},"_WinAPI_ReleaseCapture":{"documentation":"Releases the mouse capture from a window in the current thread and restores normal mouse input processing","label":"_WinAPI_ReleaseCapture (  )","params":[]},"_WinAPI_ReleaseDC":{"documentation":"Releases a device context","label":"_WinAPI_ReleaseDC ( $hWnd, $hDC )","params":[{"label":"$hWnd","documentation":"Handle of window"},{"label":"$hDC","documentation":"Identifies the device context to be released"}]},"_WinAPI_ReleaseMutex":{"documentation":"Releases ownership of the specified mutex object","label":"_WinAPI_ReleaseMutex ( $hMutex )","params":[{"label":"$hMutex","documentation":"Handle to the mutex object. The _WinAPI_CreateMutex() or _WinAPI_OpenMutex() function returns this handle."}]},"_WinAPI_ReleaseSemaphore":{"documentation":"Increases the count of the specified semaphore object by a specified amount","label":"_WinAPI_ReleaseSemaphore ( $hSemaphore [, $iIncrease = 1] )","params":[{"label":"$hSemaphore","documentation":"Handle to the semaphore object. The _WinAPI_CreateSemaphore() or _WinAPI_OpenSemaphore() functionreturns this handle."},{"label":"$iIncrease","documentation":"**[optional]** The amount by which the semaphore object\'s current count is to be increased. The value must be greaterthan zero. If the specified amount would cause the semaphore\'s count to exceed the maximum count thatwas specified when the semaphore was created, the count is not changed and the function returns 0. Default is 1."}]},"_WinAPI_ReleaseStream":{"documentation":"Releases a stream object","label":"_WinAPI_ReleaseStream ( $pStream )","params":[{"label":"$pStream","documentation":"Pointer to the stream object previously created by a call to the _WinAPI_CreateStreamOnHGlobal() function."}]},"_WinAPI_RemoveClipboardFormatListener":{"documentation":"Removes the given window from the system-maintained clipboard format listener list","label":"_WinAPI_RemoveClipboardFormatListener ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window to be removed."}]},"_WinAPI_RemoveDirectory":{"documentation":"Deletes an existing empty directory","label":"_WinAPI_RemoveDirectory ( $sDirPath )","params":[{"label":"$sDirPath","documentation":"The path of the empty directory to be removed."}]},"_WinAPI_RemoveFontMemResourceEx":{"documentation":"Removes the fonts added from a memory image","label":"_WinAPI_RemoveFontMemResourceEx ( $hFont )","params":[{"label":"$hFont","documentation":"Handle to the font-resource. This handle is returned by the _WinAPI_AddFontMemResourceEx() function."}]},"_WinAPI_RemoveFontResourceEx":{"documentation":"Removes the fonts in the specified file from the system font table","label":"_WinAPI_RemoveFontResourceEx ( $sFont [, $iFlag = 0 [, $bNotify = False]] )","params":[{"label":"$sFont","documentation":"String that names a font resource file. To remove a font whose information comes from several resourcefiles, they must be separated by a \\"|\\". For example, abcxxxxx.pfm|abcxxxxx.pfb."},{"label":"$iFlag","documentation":"**[optional]** The characteristics of the font to be removed from the system. In order for the font to be removed, the flagsused must be the same as when the font was added with the _WinAPI_AddFontResourceEx() function."},{"label":"$bNotify","documentation":"**[optional]** Specifies whether sends a WM_FONTCHANGE message, valid values:    True - Send the WM_FONTCHANGE message to all top-level windows after changing the pool of font resources.    False - Don\'t send (Default)."}]},"_WinAPI_RemoveWindowSubclass":{"documentation":"Removes a subclass callback from a window","label":"_WinAPI_RemoveWindowSubclass ( $hWnd, $pSubclassProc, $idSubClass )","params":[{"label":"$hWnd","documentation":"Handle of the window being subclassed."},{"label":"$pSubclassProc","documentation":"A pointer to a window procedure. This pointer and the subclass ID uniquely identify this subclass callback.(See MSDN for more information)"},{"label":"$idSubClass","documentation":"The subclass ID."}]},"_WinAPI_ReOpenFile":{"documentation":"Reopens the specified file system object with different access rights, sharing mode, and flags","label":"_WinAPI_ReOpenFile ( $hFile, $iAccess, $iShare [, $iFlags = 0] )","params":[{"label":"$hFile","documentation":"Handle to the object to be reopened. The object must have been created by the _WinAPI_CreateFileEx() function."},{"label":"$iAccess","documentation":"The required access to the object. If this parameter is 0, the application can query device attributeswithout accessing the device.$GENERIC_READ$GENERIC_WRITE(See MSDN for more information)"},{"label":"$iShare","documentation":"The sharing mode of the object. If this parameter is 0, the object cannot be shared and cannot beopened again until the handle is closed.$FILE_SHARE_READ$FILE_SHARE_WRITE$FILE_SHARE_DELETE"},{"label":"$iFlags","documentation":"**[optional]** The file or device attributes and flags. This parameter can be one or more of the following values.$FILE_FLAG_BACKUP_SEMANTICS$FILE_FLAG_DELETE_ON_CLOSE$FILE_FLAG_NO_BUFFERING$FILE_FLAG_OPEN_NO_RECALL$FILE_FLAG_OPEN_REPARSE_POINT$FILE_FLAG_OVERLAPPED$FILE_FLAG_POSIX_SEMANTICS$FILE_FLAG_RANDOM_ACCESS$FILE_FLAG_SEQUENTIAL_SCAN$FILE_FLAG_WRITE_THROUGH$SECURITY_ANONYMOUS$SECURITY_CONTEXT_TRACKING$SECURITY_DELEGATION$SECURITY_EFFECTIVE_ONLY$SECURITY_IDENTIFICATION$SECURITY_IMPERSONATION"}]},"_WinAPI_ReplaceFile":{"documentation":"Replaces one file with another file, and creates a backup copy of the original file","label":"_WinAPI_ReplaceFile ( $sReplacedFile, $sReplacementFile [, $sBackupFile = \'\' [, $iFlags = 0]] )","params":[{"label":"$sReplacedFile","documentation":"The name of the file to be replaced."},{"label":"$sReplacementFile","documentation":"The name of the file that will replace the $sReplacedFile file."},{"label":"$sBackupFile","documentation":"**[optional]** The name of the file that will serve as a backup copy of the $sReplacedFile file. If thisparameter is empty string, no backup file is created."},{"label":"$iFlags","documentation":"**[optional]** The replacement options. This parameter can be one or more of the following values.$REPLACEFILE_WRITE_THROUGH$REPLACEFILE_IGNORE_MERGE_ERRORS$REPLACEFILE_IGNORE_ACL_ERRORS"}]},"_WinAPI_ReplaceTextDlg":{"documentation":"Creates a system-defined modeless dialog box that lets the user specify a string to search for and a replacement string","label":"_WinAPI_ReplaceTextDlg ( $hOwner [, $sFindWhat = \'\' [, $sReplaceWith = \'\' [, $iFlags = 0 [, $pReplaceProc = 0 [, $lParam = 0]]]]] )","params":[{"label":"$hOwner","documentation":"A handle to the window that owns the dialog box.The window procedure of the specified window receives FINDMSGSTRING messages from the dialog box.This parameter can be any valid window handle, but it must not be 0."},{"label":"$sFindWhat","documentation":"**[optional]** The search string that is displayed when you initialize the dialog box."},{"label":"$sReplaceWith","documentation":"**[optional]** The replacement string that is displayed when you initialize the dialog box."},{"label":"$iFlags","documentation":"**[optional]** A set of bit flags that used to initialize the dialog box.The dialog box sets these flags when it sends the FINDMSGSTRING registered message to indicate the user\'s input.This parameter can be one or more of the following values:    $FR_DIALOGTERM    $FR_DOWN    $FR_ENABLEHOOK    $FR_ENABLETEMPLATE    $FR_ENABLETEMPLATEHANDLE    $FR_FINDNEXT    $FR_HIDEUPDOWN    $FR_HIDEMATCHCASE    $FR_HIDEWHOLEWORD    $FR_MATCHCASE    $FR_NOMATCHCASE    $FR_NOUPDOWN    $FR_NOWHOLEWORD    $FR_REPLACE    $FR_REPLACEALL    $FR_SHOWHELP    $FR_WHOLEWORD"},{"label":"$pReplaceProc","documentation":"**[optional]** Pointer to an hook procedure that can process messages intended for the dialog box.This parameter is ignored unless the $FR_ENABLEHOOK flag is not set.(See MSDN for more information)"},{"label":"$lParam","documentation":"**[optional]** Application-defined data that the system passes to the hook procedure."}]},"_WinAPI_ResetEvent":{"documentation":"Sets the specified event object to the nonsignaled state","label":"_WinAPI_ResetEvent ( $hEvent )","params":[{"label":"$hEvent","documentation":"Handle to the event object. The _WinAPI_CreateEvent() function returns this handle."}]},"_WinAPI_RestartDlg":{"documentation":"Displays a dialog box that prompts the user to restart Microsoft Windows","label":"_WinAPI_RestartDlg ( [$sText = \'\' [, $iFlags = 2 [, $hParent = 0]]] )","params":[{"label":"$sText","documentation":"**[optional]** The text that displays in the dialog box which prompts the user."},{"label":"$iFlags","documentation":"**[optional]** The flags that specify the type of shutdown.This parameter must include one of the following values.$EWX_LOGOFF$EWX_POWEROFF$EWX_REBOOT (Default)$EWX_SHUTDOWNThis parameter can optionally include the following values.$EWX_FORCE$EWX_FORCEIFHUNG"},{"label":"$hParent","documentation":"**[optional]** Handle to the parent window."}]},"_WinAPI_RestoreDC":{"documentation":"Restores a device context (DC) to the specified state","label":"_WinAPI_RestoreDC ( $hDC, $iID )","params":[{"label":"$hDC","documentation":"Handle to the DC."},{"label":"$iID","documentation":"The saved state to be restored. If this parameter is positive, $DC represents a specific instance of thestate to be restored. If this parameter is negative, $DC represents an instance relative to the currentstate. For example, (-1) restores the most recently saved state."}]},"_WinAPI_RGB":{"documentation":"Creates a RGB color value based on red, green, and blue components","label":"_WinAPI_RGB ( $iRed, $iGreen, $iBlue )","params":[{"label":"$iRed","documentation":"The intensity of the red color."},{"label":"$iGreen","documentation":"The intensity of the green color."},{"label":"$iBlue","documentation":"The intensity of the blue color."}]},"_WinAPI_RotatePoints":{"documentation":"Rotates a points from the array by the specified angle","label":"_WinAPI_RotatePoints ( ByRef $aPoint, $iXC, $iYC, $fAngle [, $iStart = 0 [, $iEnd = -1]] )","params":[{"label":"$aPoint","documentation":"The 2D array ([x1, y1, ...], [x2, y2, ...], ... [xN, yN, ...]). Every first two elements from thisarray specifies a point to be rotate. Other array elements (if any) do not change."},{"label":"$iXC","documentation":"The x-coordinates of the point on which there is a rotation, in logical units."},{"label":"$iYC","documentation":"The y-coordinates of the point on which there is a rotation, in logical units."},{"label":"$fAngle","documentation":"The angle to rotate, in degree."},{"label":"$iStart","documentation":"**[optional]** The index of array to start rotating at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop rotating at."}]},"_WinAPI_RoundRect":{"documentation":"Draws a rectangle with rounded corners","label":"_WinAPI_RoundRect ( $hDC, $tRECT, $iWidth, $iHeight )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the logical coordinates of the rectangle."},{"label":"$iWidth","documentation":"The width, in logical coordinates, of the ellipse used to draw the rounded corners."},{"label":"$iHeight","documentation":"The height, in logical coordinates, of the ellipse used to draw the rounded corners."}]},"_WinAPI_SaveDC":{"documentation":"Saves the current state of the specified device context (DC) by copying data describing selected objects and graphic modes to a context stack","label":"_WinAPI_SaveDC ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the DC whose state is to be saved."}]},"_WinAPI_SaveFileDlg":{"documentation":"Creates a dialog box that lets the user specify the drive, directory, and name of a file to save","label":"_WinAPI_SaveFileDlg ( [$sTitle = \\"\\" [, $sInitDir = \\"\\" [, $sFilters = \\"\\" [, $iDefaultFilter = 0 [, $sDefaultFilePath = \\"\\" [, $sDefaultExt = \\"\\" [, $iFlags = 0 [, $iFlagsEx = 0 [, $pOFNProc = 0 [, $pData = 0 [, $hParent = 0]]]]]]]]]]] )","params":[{"label":"$sTitle","documentation":"**[optional]** A string to be placed in the title bar of the dialog box.If this parameter is empty string (Default), the system uses the default title (that is, \\"Save As\\")."},{"label":"$sInitDir","documentation":"**[optional]** The initial directory."},{"label":"$sFilters","documentation":"**[optional]** The pairs of filter strings (for example, \\"Text Files (*.txt)\\").To specify multiple filter patterns for a single display string, use a semicolon to separate the patterns (for example, \\"*.txt;*.doc;*.bak\\").Do not include spaces in the pattern. To specify multiple groups of filters, use the \\"|\\" character as a delimiter (for example, \\"Text Files (*.txt)|All Files (*.*)\\").If this parameter is omitted or an empty string (Default), the dialog box does not display any filters"},{"label":"$iDefaultFilter","documentation":"**[optional]** The 1-based index of the currently selected filter to initialize the combo box control."},{"label":"$sDefaultFilePath","documentation":"**[optional]** The file name to initialize the edit control."},{"label":"$sDefaultExt","documentation":"**[optional]** The default extension that appends to the file name if the user fails to type an extension.This string can be any length, but only the first three characters are appended. The string should not contain a period (.).If this parameter is empty string (Default), no extension is appended."},{"label":"$iFlags","documentation":"**[optional]** A set of bit flags you can use to initialize the dialog box.This parameter can be 0 or combination of the following values:    $OFN_ALLOWMULTISELECT    $OFN_CREATEPROMPT    $OFN_DONTADDTORECENT    $OFN_ENABLEHOOK    $OFN_ENABLEINCLUDENOTIFY    $OFN_ENABLESIZING    $OFN_EXPLORER    $OFN_FORCESHOWHIDDEN    $OFN_HIDEREADONLY    $OFN_LONGNAMES    $OFN_NOCHANGEDIR    $OFN_NODEREFERENCELINKS    $OFN_NOLONGNAMES    $OFN_NONETWORKBUTTON    $OFN_NOREADONLYRETURN    $OFN_NOTESTFILECREATE    $OFN_NOVALIDATE    $OFN_OVERWRITEPROMPT    $OFN_PATHMUSTEXIST    $OFN_READONLY    $OFN_SHAREAWARE    $OFN_SHOWHELP"},{"label":"$iFlagsEx","documentation":"**[optional]** A set of bit flags you can use to initialize the dialog box. It can be 0 or the following value:    $OFN_EX_NOPLACESBAR"},{"label":"$pOFNProc","documentation":"**[optional]** A pointer to a hook procedure. This parameter is ignored unless the $OFN_ENABLEHOOK flag is set."},{"label":"$pData","documentation":"**[optional]** Application-defined pointer to data that the system passes to the hook procedure."},{"label":"$hParent","documentation":"**[optional]** A handle to the parent window for the dialog box."}]},"_WinAPI_SaveHBITMAPToFile":{"documentation":"Saves a specified bitmap to the specified bitmap (.bmp) file","label":"_WinAPI_SaveHBITMAPToFile ( $sFilePath, $hBitmap [, $iXPelsPerMeter = Default [, $iYPelsPerMeter = Default]] )","params":[{"label":"$sFilePath","documentation":"The name of the .bmp file in which to save the bitmap."},{"label":"$hBitmap","documentation":"Handle to the bitmap to be save."},{"label":"$iXPelsPerMeter","documentation":"**[optional]** The horizontal resolution, in pixels-per-meter."},{"label":"$iYPelsPerMeter","documentation":"**[optional]** The vertical resolution, in pixels-per-meter."}]},"_WinAPI_SaveHICONToFile":{"documentation":"Saves a specified single or multiple icon (HICON) to the specified icon (.ico) file","label":"_WinAPI_SaveHICONToFile ( $sFilePath, Const ByRef $vIcon [, $bCompress = 0 [, $iStart = 0 [, $iEnd = -1]]] )","params":[{"label":"$sFilePath","documentation":"The name of the .ico file in which to save the icon."},{"label":"$vIcon","documentation":"Handle to the icon or array of the icon handles to be save."},{"label":"$bCompress","documentation":"**[optional]** Specifies whether to use PNG compression for the 32 bits-per-pixel icons if its size exceed orequal to 256x256 pixels (262144 bytes), valid values:True - The icon will be saved as a PNG image.False - The icon will be saved directly (Default)."},{"label":"$iStart","documentation":"**[optional]** The index of array to start saving at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop saving at."}]},"_WinAPI_ScaleWindowExt":{"documentation":"Modifies the window for a device context using the ratios formed by the specified multiplicands and divisors","label":"_WinAPI_ScaleWindowExt ( $hDC, $iXNum, $iXDenom, $iYNum, $iYDenom )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iXNum","documentation":"The amount by which to multiply the current horizontal extent."},{"label":"$iXDenom","documentation":"The amount by which to divide the current horizontal extent."},{"label":"$iYNum","documentation":"The amount by which to divide the current vertical extent."},{"label":"$iYDenom","documentation":"The amount by which to divide the current vertical extent."}]},"_WinAPI_ScreenToClient":{"documentation":"Converts screen coordinates of a specified point on the screen to client coordinates","label":"_WinAPI_ScreenToClient ( $hWnd, ByRef $tPoint )","params":[{"label":"$hWnd","documentation":"Identifies the window that be used for the conversion"},{"label":"$tPoint","documentation":"$tagPOINT structure that contains the screen coordinates to be converted"}]},"_WinAPI_SearchPath":{"documentation":"Searches for a specified file in a specified path","label":"_WinAPI_SearchPath ( $sFilePath [, $sSearchPath = \'\'] )","params":[{"label":"$sFilePath","documentation":"The name of the file for which to search."},{"label":"$sSearchPath","documentation":"**[optional]** The path to be searched for the file. If this parameter is omitted or an empty string (Default), the functionsearches for a matching file using a registry-dependent system search path (see below)."}]},"_WinAPI_SelectClipPath":{"documentation":"Selects the current path as a clipping region, combining the new region with any existing clipping region","label":"_WinAPI_SelectClipPath ( $hDC [, $iMode = 5] )","params":[{"label":"$hDC","documentation":"Handle to the device context of the path."},{"label":"$iMode","documentation":"**[optional]** The way to use the path. This parameter can be one of the following values.$RGN_AND$RGN_COPY (Default)$RGN_DIFF$RGN_OR$RGN_XOR"}]},"_WinAPI_SelectClipRgn":{"documentation":"Selects a region as the current clipping region for the specified device context","label":"_WinAPI_SelectClipRgn ( $hDC, $hRgn )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$hRgn","documentation":"Handle to the region to be selected. To remove a device-context\'s clipping region, set this parameter to 0."}]},"_WinAPI_SelectObject":{"documentation":"Selects an object into the specified device context","label":"_WinAPI_SelectObject ( $hDC, $hGDIObj )","params":[{"label":"$hDC","documentation":"Identifies the device context"},{"label":"$hGDIObj","documentation":"Identifies the object to be selected"}]},"_WinAPI_SendMessageTimeout":{"documentation":"Sends the specified message to one of more windows","label":"_WinAPI_SendMessageTimeout ( $hWnd, $iMsg [, $wParam = 0 [, $lParam = 0 [, $iTimeout = 1000 [, $iFlags = 0]]]] )","params":[{"label":"$hWnd","documentation":"Handle to the window whose window procedure will receive the message."},{"label":"$iMsg","documentation":"The message to be sent."},{"label":"$wParam","documentation":"**[optional]** The message-specific information."},{"label":"$lParam","documentation":"**[optional]** The message-specific information."},{"label":"$iTimeout","documentation":"**[optional]** The duration, in milliseconds, of the time-out period. If the message is a broadcast message, eachwindow can use the full time-out period. Default is 1000."},{"label":"$iFlags","documentation":"**[optional]** The flags that specifies how to send the message.This parameter can be one or more of the following values.$SMTO_BLOCK$SMTO_NORMAL$SMTO_ABORTIFHUNG$SMTO_NOTIMEOUTIFNOTHUNG$SMTO_ERRORONEXIT"}]},"_WinAPI_SetActiveWindow":{"documentation":"Activates the specified window","label":"_WinAPI_SetActiveWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the top-level window to be activated."}]},"_WinAPI_SetArcDirection":{"documentation":"Sets the drawing arc direction","label":"_WinAPI_SetArcDirection ( $hDC, $iDirection )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iDirection","documentation":"The new arc direction. This parameter can be one of the following values.$AD_COUNTERCLOCKWISE$AD_CLOCKWISE"}]},"_WinAPI_SetBitmapBits":{"documentation":"Sets the bits of color data for a bitmap to the specified values","label":"_WinAPI_SetBitmapBits ( $hBitmap, $iSize, $pBits )","params":[{"label":"$hBitmap","documentation":"Handle to the bitmap to be set. This must be a compatible bitmap (DDB)."},{"label":"$iSize","documentation":"The number of bytes pointed to by the $pBits parameter."},{"label":"$pBits","documentation":"A pointer to an array of bytes that contain color data for the specified bitmap."}]},"_WinAPI_SetBitmapDimensionEx":{"documentation":"Assigns preferred dimensions to a compatible bitmap","label":"_WinAPI_SetBitmapDimensionEx ( $hBitmap, $iWidth, $iHeight )","params":[{"label":"$hBitmap","documentation":"Handle to the bitmap. This bitmap cannot be a DIB-section bitmap."},{"label":"$iWidth","documentation":"The width, in 0.1-millimeter units, of the bitmap."},{"label":"$iHeight","documentation":"The height, in 0.1-millimeter units, of the bitmap."}]},"_WinAPI_SetBkColor":{"documentation":"Sets the current background color to the specified color value","label":"_WinAPI_SetBkColor ( $hDC, $iColor )","params":[{"label":"$hDC","documentation":"Handle to the device context"},{"label":"$iColor","documentation":"Specifies the new background color"}]},"_WinAPI_SetBkMode":{"documentation":"Sets the background mix mode of the specified device context","label":"_WinAPI_SetBkMode ( $hDC, $iBkMode )","params":[{"label":"$hDC","documentation":"Handle to device context"},{"label":"$iBkMode","documentation":"Specifies the background mix mode. This parameter can be one of the following values.OPAQUE - Background is filled with the current background color before the text, hatched brush, or pen is drawn.TRANSPARENT - Background remains untouched."}]},"_WinAPI_SetBoundsRect":{"documentation":"Controls the accumulation of bounding rectangle information for the specified device context","label":"_WinAPI_SetBoundsRect ( $hDC, $iFlags [, $tRECT = 0] )","params":[{"label":"$hDC","documentation":"Handle to the device context for which to accumulate bounding rectangles."},{"label":"$iFlags","documentation":"The flags that specifies how the new rectangle will be combined with the accumulated rectangle.This parameter can be one of more of the following values.$DCB_ACCUMULATE$DCB_DISABLE$DCB_ENABLE$DCB_RESET"},{"label":"$tRECT","documentation":"**[optional]** $tagRECT structure used to set the bounding rectangle in logical coordinates."}]},"_WinAPI_SetBrushOrg":{"documentation":"Sets the brush origin that GDI assigns to the next brush an application selects into the specified device context","label":"_WinAPI_SetBrushOrg ( $hDC, $iX, $iY )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate, in device units, of the new brush origin."},{"label":"$iY","documentation":"The y-coordinate, in device units, of the new brush origin."}]},"_WinAPI_SetCapture":{"documentation":"Sets the mouse capture to the specified window belonging to the current thread","label":"_WinAPI_SetCapture ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window in the current thread that is to capture the mouse"}]},"_WinAPI_SetCaretBlinkTime":{"documentation":"Sets the caret blink time","label":"_WinAPI_SetCaretBlinkTime ( $iDuration )","params":[{"label":"$iDuration","documentation":"The new blink time, in milliseconds. If this parameter is (-1), caret does not blink."}]},"_WinAPI_SetCaretPos":{"documentation":"Moves the caret to the specified coordinates","label":"_WinAPI_SetCaretPos ( $iX, $iY )","params":[{"label":"$iX","documentation":"The new x-coordinate of the caret."},{"label":"$iY","documentation":"The new y-coordinate of the caret."}]},"_WinAPI_SetClassLongEx":{"documentation":"Replaces the specified value into the specified window belongs","label":"_WinAPI_SetClassLongEx ( $hWnd, $iIndex, $iNewLong )","params":[{"label":"$hWnd","documentation":"Handle to the window."},{"label":"$iIndex","documentation":"The value to be replaced. This parameter can be one of the following values.$GCL_CBCLSEXTRA$GCL_CBWNDEXTRA$GCL_HBRBACKGROUND$GCL_HCURSOR$GCL_HICON$GCL_HICONSM$GCL_HMODULE$GCL_MENUNAME$GCL_STYLE$GCL_WNDPROC"},{"label":"$iNewLong","documentation":"The replacement value."}]},"_WinAPI_SetColorAdjustment":{"documentation":"Sets the color adjustment for a device context (DC)","label":"_WinAPI_SetColorAdjustment ( $hDC, $tAdjustment )","params":[{"label":"$hDC","documentation":"A handle to the device context."},{"label":"$tAdjustment","documentation":"$tagCOLORADJUSTMENT structure containing the color adjustment values."}]},"_WinAPI_SetCompression":{"documentation":"Sets the compression state of a file or directory","label":"_WinAPI_SetCompression ( $sFilePath, $iCompression )","params":[{"label":"$sFilePath","documentation":"The path to the file or directory to be compressed."},{"label":"$iCompression","documentation":"The compression state. This parameter can be one of the following values.$COMPRESSION_FORMAT_NONE$COMPRESSION_FORMAT_DEFAULT$COMPRESSION_FORMAT_LZNT1"}]},"_WinAPI_SetCurrentDirectory":{"documentation":"Changes the current directory for the current process","label":"_WinAPI_SetCurrentDirectory ( $sDir )","params":[{"label":"$sDir","documentation":"The path to the new current directory."}]},"_WinAPI_SetCurrentProcessExplicitAppUserModelID":{"documentation":"Specifies a unique application-defined Application User Model ID that identifies the current process to the taskbar","label":"_WinAPI_SetCurrentProcessExplicitAppUserModelID ( $sAppID )","params":[{"label":"$sAppID","documentation":"The string that represents an Application User Model ID (AppUserModelID). This identifier allows anapplication to group its associated processes and windows under a single taskbar button. An applicationmust provide its AppUserModelID in the following form and can have no more than 128 characters andcannot contain spaces.CompanyName.ProductName.SubProduct.VersionInformation(See MSDN for more information)"}]},"_WinAPI_SetCursor":{"documentation":"Establishes the cursor shape","label":"_WinAPI_SetCursor ( $hCursor )","params":[{"label":"$hCursor","documentation":"Identifies the cursor"}]},"_WinAPI_SetDCBrushColor":{"documentation":"Sets the current device context (DC) brush color to the specified color value","label":"_WinAPI_SetDCBrushColor ( $hDC, $iRGB )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iRGB","documentation":"The new brush color, in RGB."}]},"_WinAPI_SetDCPenColor":{"documentation":"Sets the current device context (DC) pen color to the specified color value","label":"_WinAPI_SetDCPenColor ( $hDC, $iRGB )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iRGB","documentation":"The new pen color, in RGB."}]},"_WinAPI_SetDefaultPrinter":{"documentation":"Sets the default printer for the current user on the local computer","label":"_WinAPI_SetDefaultPrinter ( $sPrinter )","params":[{"label":"$sPrinter","documentation":"The default printer name. For a remote printer, the name format is \\\\\\\\server\\\\printername. For alocal printer, the name format is printername. If this parameter is \\"\\", this function does nothing if thereis already a default printer. However, if there is no default printer, this function sets the default printerto the first printer, if any, in an enumeration of printers installed on the local computer."}]},"_WinAPI_SetDeviceGammaRamp":{"documentation":"Sets the gamma ramp on direct color display boards that support downloadable gamma ramps in hardware","label":"_WinAPI_SetDeviceGammaRamp ( $hDC, Const ByRef $aRamp )","params":[{"label":"$hDC","documentation":"Handle to a device context of the direct color display board in question."},{"label":"$aRamp","documentation":"The 2D array ([r1, g1, b1], [r2, g2, b2], ... [r256, g256, b256]) that contains the gamma ramp to be set.Each element in this array is an integer value with a range from 0 to 65535 which is a mapping betweenRGB values in the frame buffer and digital-analog-converter (DAC) values. The RGB values must be storedin the most significant bits of each WORD to increase DAC independence.(See MSDN for more information)"}]},"_WinAPI_SetDIBColorTable":{"documentation":"Sets RGB color table in the DIB section bitmap","label":"_WinAPI_SetDIBColorTable ( $hBitmap, $tColorTable, $iColorCount )","params":[{"label":"$hBitmap","documentation":"A DIB section bitmap in which to set the color table."},{"label":"$tColorTable","documentation":"\\"dword[n]\\" structure that represents a DIB color table that to be set."},{"label":"$iColorCount","documentation":"The number of color table entries to set."}]},"_WinAPI_SetDIBits":{"documentation":"Sets the pixels in a compatible bitmap using the color data found in a DIB","label":"_WinAPI_SetDIBits ( $hDC, $hBitmap, $iStartScan, $iScanLines, $pBits, $tBMI [, $iColorUse = 0] )","params":[{"label":"$hDC","documentation":"Handle to a device context"},{"label":"$hBitmap","documentation":"Handle to the compatible bitmap (DDB) that is to be altered using the color data from the DIB"},{"label":"$iStartScan","documentation":"Specifies the starting scan line for the device-independent color data in the array pointed to by the $pBits parameter."},{"label":"$iScanLines","documentation":"Specifies the number of scan lines found in the array containing device-independent color data"},{"label":"$pBits","documentation":"Pointer to the DIB color data, stored as an array of bytes.The format of the bitmap values depends on the biBitCount member of the $tagBITMAPINFO structure pointed to by the $pBMI parameter."},{"label":"$tBMI","documentation":"A $tagBITMAPINFO structure or a pointer to it that contains information about the DIB"},{"label":"$iColorUse","documentation":"**[optional]** Specifies whether the iColors member of the $tagBITMAPINFO structure was provided and, if so,whether iColors contains explicit red, green, blue (RGB) values or palette indexes.The $iColorUse parameter must be one of the following values:    0 - The color table is provided and contains literal RGB values    1 - The color table consists of an array of 16-bit indexes into the logical palette of $hDC"}]},"_WinAPI_SetDIBitsToDevice":{"documentation":"Sets the pixels in the specified rectangle on the device","label":"_WinAPI_SetDIBitsToDevice ( $hDC, $iXDest, $iYDest, $iWidth, $iHeight, $iXSrc, $iYSrc, $iStartScan, $iScanLines, $tBITMAPINFO, $iUsage, $pBits )","params":[{"label":"$hDC","documentation":"Handle to a device context."},{"label":"$iXDest","documentation":"The x-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iYDest","documentation":"The y-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iWidth","documentation":"The width, in logical units, of the image."},{"label":"$iHeight","documentation":"The height, in logical units, of the image."},{"label":"$iXSrc","documentation":"The x-coordinate, in logical units, of the lower-left corner of the image."},{"label":"$iYSrc","documentation":"The y-coordinate, in logical units, of the lower-left corner of the image."},{"label":"$iStartScan","documentation":"The starting scan line in the image."},{"label":"$iScanLines","documentation":"The number of DIB scan lines."},{"label":"$tBITMAPINFO","documentation":"$tagBITMAPINFO structure that contains information about the DIB."},{"label":"$iUsage","documentation":"The type of colors used. (either logical palette indexes or literal RGB values).The following values are defined:    $DIB_PAL_COLORS    $DIB_RGB_COLORS"},{"label":"$pBits","documentation":"A pointer to the color data stored as an array of bytes."}]},"_WinAPI_SetDllDirectory":{"documentation":"Adds a directory to the search path used to locate DLLs for the application","label":"_WinAPI_SetDllDirectory ( [$sDirPath = Default] )","params":[{"label":"$sDirPath","documentation":"**[optional]** The directory to be added to the search path. If this parameter is an empty string (\\"\\"), the callremoves the current directory from the default DLL search order. If this parameter is not specified,the function restores the default search order (Default)."}]},"_WinAPI_SetEndOfFile":{"documentation":"Sets the physical file size for the specified file to the current position of the file pointer","label":"_WinAPI_SetEndOfFile ( $hFile )","params":[{"label":"$hFile","documentation":"Handle to the file to be extended or truncated.The file handle must have the $GENERIC_WRITE access right."}]},"_WinAPI_SetEnhMetaFileBits":{"documentation":"Creates a memory-based enhanced-format metafile from the specified data","label":"_WinAPI_SetEnhMetaFileBits ( $pData, $iLength )","params":[{"label":"$pData","documentation":"A pointer to the buffer that contains the enhanced-metafile data. To obtain the metafile data, call the_WinAPI_GetEnhMetaFileBits() function."},{"label":"$iLength","documentation":"The size of the buffer, in bytes."}]},"_WinAPI_SetErrorMode":{"documentation":"Controls whether the system will handle the specified types of serious errors or whether the process will handle them","label":"_WinAPI_SetErrorMode ( $iMode )","params":[{"label":"$iMode","documentation":"The process error mode. This parameter can be one or more of the following values.$SEM_FAILCRITICALERRORS$SEM_NOALIGNMENTFAULTEXCEPT$SEM_NOGPFAULTERRORBOX$SEM_NOOPENFILEERRORBOX"}]},"_WinAPI_SetEvent":{"documentation":"Sets the specified event object to the signaled state","label":"_WinAPI_SetEvent ( $hEvent )","params":[{"label":"$hEvent","documentation":"Handle to the event object"}]},"_WinAPI_SetFileAttributes":{"documentation":"Sets the attributes for a file or directory","label":"_WinAPI_SetFileAttributes ( $sFilePath, $iAttributes )","params":[{"label":"$sFilePath","documentation":"The name of the file or directory whose attributes are to be set."},{"label":"$iAttributes","documentation":"The file attributes to set for the file. This parameter can be one or more of the following values.$FILE_ATTRIBUTE_READONLY$FILE_ATTRIBUTE_HIDDEN$FILE_ATTRIBUTE_SYSTEM$FILE_ATTRIBUTE_ARCHIVE$FILE_ATTRIBUTE_NORMAL$FILE_ATTRIBUTE_TEMPORARY$FILE_ATTRIBUTE_OFFLINE$FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"}]},"_WinAPI_SetFileInformationByHandleEx":{"documentation":"Sets the file information for the specified file","label":"_WinAPI_SetFileInformationByHandleEx ( $hFile, $tFILEINFO )","params":[{"label":"$hFile","documentation":"Handle to the file for which to change information. This handle must have an appropriatepermissions for the requested change."},{"label":"$tFILEINFO","documentation":"$tagFILEINFO structure that contains the information to change."}]},"_WinAPI_SetFilePointer":{"documentation":"Moves the file pointer of the specified file","label":"_WinAPI_SetFilePointer ( $hFile, $iPos [, $iMethod = 0] )","params":[{"label":"$hFile","documentation":"Handle to the file to be processed"},{"label":"$iPos","documentation":"Number of bytes to move the file pointer. Maximum value is 2^32A positive value moves the file pointer forward in the file, and a negative value moves the file pointer back."},{"label":"$iMethod","documentation":"**[optional]** The starting point for the file pointer move.Can be one of the predefined values:    $FILE_BEGIN (0) = (default) The starting point is zero (0) or the beginning of the file    $FILE_CURRENT (1) = The starting point is the current value of the file pointer.    $FILE_END (2) = The starting point is the current end-of-file position."}]},"_WinAPI_SetFilePointerEx":{"documentation":"Moves the file pointer of the specified file","label":"_WinAPI_SetFilePointerEx ( $hFile, $iPos [, $iMethod = 0] )","params":[{"label":"$hFile","documentation":"Handle to the file."},{"label":"$iPos","documentation":"The number of bytes to move the file pointer. A positive value moves the pointer forward in thefile and a negative value moves the file pointer backward."},{"label":"$iMethod","documentation":"**[optional]** The starting point for the file pointer move. This parameter can be one of the following values.$FILE_BEGIN (Default)$FILE_CURRENT$FILE_END"}]},"_WinAPI_SetFileShortName":{"documentation":"Sets the short name for the specified file","label":"_WinAPI_SetFileShortName ( $hFile, $sShortName )","params":[{"label":"$hFile","documentation":"A handle to the file. The file must be on an NTFS file system volume. Also, the file must beopened with either the $GENERIC_ALL access right or $GENERIC_WRITE|$DELETE, and with the$FILE_FLAG_BACKUP_SEMANTICS file attribute."},{"label":"$sShortName","documentation":"The valid short name for the file. If the specified short name already exists, the functionfails and the last error code is ERROR_ALREADY_EXISTS (183)."}]},"_WinAPI_SetFileValidData":{"documentation":"Sets the valid data length of the specified file","label":"_WinAPI_SetFileValidData ( $hFile, $iLength )","params":[{"label":"$hFile","documentation":"A handle to the file. This file must have been opened with the $GENERIC_WRITE access right, and the$SE_MANAGE_VOLUME_NAME privilege enabled. The file cannot be a network file, or be compressed,sparse, or transacted."},{"label":"$iLength","documentation":"The new valid data length. This parameter must be a positive value that is greater than the currentvalid data length, but less than the current file size."}]},"_WinAPI_SetFocus":{"documentation":"Sets the keyboard focus to the specified window","label":"_WinAPI_SetFocus ( $hWnd )","params":[{"label":"$hWnd","documentation":"Identifies the window that will receive the keyboard input. If this parameter is 0, keystrokesare ignored."}]},"_WinAPI_SetFont":{"documentation":"Sets a window font","label":"_WinAPI_SetFont ( $hWnd, $hFont [, $bRedraw = True] )","params":[{"label":"$hWnd","documentation":"Window handle"},{"label":"$hFont","documentation":"Font handle"},{"label":"$bRedraw","documentation":"**[optional]** True to redraw the control"}]},"_WinAPI_SetForegroundWindow":{"documentation":"Puts the specified window into the foreground and activates its","label":"_WinAPI_SetForegroundWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window that should be activated and brought to the foreground."}]},"_WinAPI_SetFRBuffer":{"documentation":"Sets the size of the internal buffer that used the _WinAPI_FindTextDlg() and _WinAPI_ReplaceTextDlg() functions","label":"_WinAPI_SetFRBuffer ( $iChars )","params":[{"label":"$iChars","documentation":"The size, in TCHARs, of the internal buffer. The buffer should be at least 80 characters long.The default buffer size is 16384 wide characters (32 KB)."}]},"_WinAPI_SetGraphicsMode":{"documentation":"Sets the graphics mode for the specified device context","label":"_WinAPI_SetGraphicsMode ( $hDC, $iMode )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iMode","documentation":"The graphics mode. This parameter can be one of the following values.$GM_COMPATIBLE$GM_ADVANCED"}]},"_WinAPI_SetHandleInformation":{"documentation":"Sets certain properties of an object handle","label":"_WinAPI_SetHandleInformation ( $hObject, $iMask, $iFlags )","params":[{"label":"$hObject","documentation":"Handle to an object"},{"label":"$iMask","documentation":"Specifies the bit flags to be changed"},{"label":"$iFlags","documentation":"Specifies properties of the object handle"}]},"_WinAPI_SetInformationJobObject":{"documentation":"Sets limits for a job object","label":"_WinAPI_SetInformationJobObject ( $hJob, $iJobObjectInfoClass, $tJobObjectInfo )","params":[{"label":"$hJob","documentation":"Handle to the job whose limits are being set. The handle must have the$JOB_OBJECT_SET_ATTRIBUTES access right."},{"label":"$iJobObjectInfoClass","documentation":"The information class for the limits to be set. This parameter specifies the typeof $tJobObjectInfo structure, valid values:2 - $tagJOBOBJECT_BASIC_LIMIT_INFORMATION4 - $tagJOBOBJECT_BASIC_UI_RESTRICTIONS5 - $tagJOBOBJECT_SECURITY_LIMIT_INFORMATION6 - $tagJOBOBJECT_END_OF_JOB_TIME_INFORMATION7 - $tagJOBOBJECT_ASSOCIATE_COMPLETION_PORT9 - $tagJOBOBJECT_EXTENDED_LIMIT_INFORMATION11 - $tagJOBOBJECT_GROUP_INFORMATION"},{"label":"$tJobObjectInfo","documentation":"$tagJOBOBJECT_* structure that sets the limit and job state information."}]},"_WinAPI_SetKeyboardLayout":{"documentation":"Sets an input locale identifier to the specified window","label":"_WinAPI_SetKeyboardLayout ( $hWnd, $iLanguage [, $iFlags = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the window to set input locale identifier."},{"label":"$iLanguage","documentation":"The input locale identifier.0x0436 - Afrikaans0x041C - Albanian0x0401 - Arabic0x1401 - Arabic Algeria0x3C01 - Arabic Bahrain0x0C01 - Arabic Egypt0x0801 - Arabic Iraq0x2C01 - Arabic Jordan0x3401 - Arabic Kuwait0x3001 - Arabic Lebanon0x1001 - Arabic Libya0x1801 - Arabic Morocco0x2001 - Arabic Oman0x4001 - Arabic Qatar0x0401 - Arabic Saudi Arabia0x2801 - Arabic Syria0x1C01 - Arabic Tunisia0x3801 - Arabic U.A.E0x2401 - Arabic Yemen0x042B - Armenian0x044D - Assamese0x082C - Azeri Cyrillic0x042C - Azeri Latin0x042D - Basque0x0813 - Belgian Dutch0x080C - Belgian French0x0445 - Bengali0x0416 - Portuguese (Brazil)0x0402 - Bulgarian0x0455 - Burmese0x0423 - Byelorussian (Belarusian)0x0403 - Catalan0x0C04 - Chinese Hong Kong SAR0x1404 - Chinese Macau SAR0x0804 - Chinese Simplified0x1004 - Chinese Singapore0x0404 - Chinese Traditional0x041A - Croatian0x0405 - Czech0x0406 - Danish0x0413 - Dutch0x0C09 - English Australia0x2809 - English Belize0x1009 - English Canadian0x2409 - English Caribbean0x1813 - English Ireland0x2009 - English Jamaica0x1409 - English New Zealand0x3409 - English Philippines0x1C09 - English South Africa0x2C09 - English Trinidad0x0809 - English U.K.0x0409 - English U.S.0x3009 - English Zimbabwe0x0425 - Estonian0x0438 - Faeroese0x0429 - Farsi0x040B - Finnish0x040C - French0x2C0C - French Cameroon0x0C0C - French Canadian0x300C - French Cote d\'Ivoire0x140C - French Luxembourg0x340C - French Mali0x180C - French Monaco0x200C - French Reunion0x280C - French Senegal0x1C0C - French West Indies0x240C - French Congo (DRC)0x0462 - Frisian Netherlands0x083C - Gaelic Ireland0x043C - Gaelic Scotland0x0456 - Galician0x0437 - Georgian0x0407 - German0x0C07 - German Austria0x1407 - German Liechtenstein0x1007 - German Luxembourg0x0408 - Greek0x0447 - Gujarati0x040D - Hebrew0x0439 - Hindi0x040E - Hungarian0x040F - Icelandic0x0421 - Indonesian0x0410 - Italian0x0411 - Japanese0x044B - Kannada0x0460 - Kashmiri0x043F - Kazakh0x0453 - Khmer0x0440 - Kirghiz0x0457 - Konkani0x0412 - Korean0x0454 - Lao0x0426 - Latvian0x0427 - Lithuanian0x042F - FYRO Macedonian0x044C - Malayalam0x083E - Malay Brunei Darussalam0x043E - Malaysian0x043A - Maltese0x0458 - Manipuri0x044E - Marathi0x0450 - Mongolian0x0461 - Nepali0x0414 - Norwegian Bokmol0x0814 - Norwegian Nynorsk0x0448 - Oriya0x0415 - Polish0x0816 - Portuguese0x0446 - Punjabi0x0417 - Rhaeto-Romanic0x0418 - Romanian0x0818 - Romanian Moldova0x0419 - Russian0x0819 - Russian Moldova0x043B - Sami Lappish0x044F - Sanskrit0x0C1A - Serbian Cyrillic0x081A - Serbian Latin0x0430 - Sesotho0x0459 - Sindhi0x041B - Slovak0x0424 - Slovenian0x042E - Sorbian0x040A - Spanish (Traditional)0x2C0A - Spanish Argentina0x400A - Spanish Bolivia0x340A - Spanish Chile0x240A - Spanish Colombia0x140A - Spanish Costa Rica0x1C0A - Spanish Dominican Republic0x300A - Spanish Ecuador0x440A - Spanish El Salvador0x100A - Spanish Guatemala0x480A - Spanish Honduras0x4C0A - Spanish Nicaragua0x180A - Spanish Panama0x3C0A - Spanish Paraguay0x280A - Spanish Peru0x500A - Spanish Puerto Rico0x0C0A - Spanish Spain (Modern Sort)0x380A - Spanish Uruguay0x200A - Spanish Venezuela0x0430 - Sutu0x0441 - Swahili0x041D - Swedish0x081D - Swedish Finland0x100C - Swiss French0x0807 - Swiss German0x0810 - Swiss Italian0x0428 - Tajik0x0449 - Tamil0x0444 - Tatar0x044A - Telugu0x041E - Thai0x0451 - Tibetan0x0431 - Tsonga0x0432 - Tswana0x041F - Turkish0x0442 - Turkmen0x0422 - Ukrainian0x0420 - Urdu0x0843 - Uzbek Cyrillic0x0443 - Uzbek Latin0x0433 - Venda0x042A - Vietnamese0x0452 - Welsh0x0434 - Xhosa0x0435 - Zulu"},{"label":"$iFlags","documentation":"**[optional]** The new input locale. This parameter can be one or more of the following values.$INPUTLANGCHANGE_BACKWARD$INPUTLANGCHANGE_FORWARD$INPUTLANGCHANGE_SYSCHARSET"}]},"_WinAPI_SetKeyboardState":{"documentation":"Copies a 256-byte array of keyboard key states into the calling process\'s keyboard input-state table","label":"_WinAPI_SetKeyboardState ( $tState )","params":[{"label":"$tState","documentation":"\\"byte[256]\\" structure that contains keyboard key states."}]},"_WinAPI_SetLastError":{"documentation":"Sets the last-error code for the calling thread","label":"_WinAPI_SetLastError ( $iErrorCode )","params":[{"label":"$iErrorCode","documentation":"The last error code for the thread"}]},"_WinAPI_SetLayeredWindowAttributes":{"documentation":"Sets Layered Window Attributes","label":"_WinAPI_SetLayeredWindowAttributes ( $hWnd, $iTransColor [, $iTransGUI = 255 [, $iFlags = 0x03 [, $bColorRef = False]]] )","params":[{"label":"$hWnd","documentation":"Handle of GUI to work on"},{"label":"$iTransColor","documentation":"Transparent color"},{"label":"$iTransGUI","documentation":"**[optional]** Set Transparancy of GUI"},{"label":"$iFlags","documentation":"**[optional]** Flags."},{"label":"$bColorRef","documentation":"**[optional]** If True, $iTransColor is a COLORREF( 0x00bbggrr ), else an RGB-Color"}]},"_WinAPI_SetLocaleInfo":{"documentation":"Sets an item of information in the user override portion of the current locale","label":"_WinAPI_SetLocaleInfo ( $iLCID, $iType, $sData )","params":[{"label":"$iLCID","documentation":"The locale identifier (LCID) that specifies the locale or one of the following predefined values.$LOCALE_INVARIANT$LOCALE_SYSTEM_DEFAULT$LOCALE_USER_DEFAULTWindows Vista or later$LOCALE_CUSTOM_DEFAULT$LOCALE_CUSTOM_UI_DEFAULT$LOCALE_CUSTOM_UNSPECIFIED"},{"label":"$iType","documentation":"Type of locale information to set. This parameter can be one of the locale information constants ($LOCALE_*)."},{"label":"$sData","documentation":"The string containing the locale information to set. The information must be in the format specific tothe specified constant."}]},"_WinAPI_SetMapMode":{"documentation":"Sets the mapping mode of the specified device context","label":"_WinAPI_SetMapMode ( $hDC, $iMode )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iMode","documentation":"The new mapping mode. This parameter can be one of the following values.$MM_ANISOTROPIC$MM_HIENGLISH$MM_HIMETRIC$MM_ISOTROPIC$MM_LOENGLISH$MM_LOMETRIC$MM_TEXT$MM_TWIPS"}]},"_WinAPI_SetMessageExtraInfo":{"documentation":"Sets the extra message information for the current thread","label":"_WinAPI_SetMessageExtraInfo ( $lParam )","params":[{"label":"$lParam","documentation":"The value of lParam type to be associated with the current thread."}]},"_WinAPI_SetParent":{"documentation":"Changes the parent window of the specified child window","label":"_WinAPI_SetParent ( $hWndChild, $hWndParent )","params":[{"label":"$hWndChild","documentation":"Window handle of child window"},{"label":"$hWndParent","documentation":"Handle to the new parent window. If 0, the desktop window becomes the new parent window."}]},"_WinAPI_SetPixel":{"documentation":"Sets the pixel at the specified coordinates to the specified color","label":"_WinAPI_SetPixel ( $hDC, $iX, $iY, $iRGB )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate, in logical units, of the point to be set."},{"label":"$iY","documentation":"The y-coordinate, in logical units, of the point to be set."},{"label":"$iRGB","documentation":"The color to be used to paint the point."}]},"_WinAPI_SetPolyFillMode":{"documentation":"Sets the polygon fill mode for functions that fill polygons","label":"_WinAPI_SetPolyFillMode ( $hDC [, $iMode = 1] )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iMode","documentation":"**[optional]** The new fill mode. This parameter can be one of the following values.$ALTERNATE (Default)$WINDING"}]},"_WinAPI_SetPriorityClass":{"documentation":"Sets the priority class for the specified process","label":"_WinAPI_SetPriorityClass ( $iPriority [, $iPID = 0] )","params":[{"label":"$iPriority","documentation":"The priority class for the process. This parameter can be one of the following values.$ABOVE_NORMAL_PRIORITY_CLASS$BELOW_NORMAL_PRIORITY_CLASS$HIGH_PRIORITY_CLASS$IDLE_PRIORITY_CLASS$NORMAL_PRIORITY_CLASS$REALTIME_PRIORITY_CLASSWindows Vista or later$PROCESS_MODE_BACKGROUND_BEGIN$PROCESS_MODE_BACKGROUND_END"},{"label":"$iPID","documentation":"**[optional]** The PID of the process. Default (0) is the current process."}]},"_WinAPI_SetProcessAffinityMask":{"documentation":"Sets a processor affinity mask for the threads of a specified process","label":"_WinAPI_SetProcessAffinityMask ( $hProcess, $iMask )","params":[{"label":"$hProcess","documentation":"A handle to the process whose affinity mask the function sets"},{"label":"$iMask","documentation":"Affinity mask"}]},"_WinAPI_SetProcessShutdownParameters":{"documentation":"Sets a shutdown order for a process relative to the other processes in the system","label":"_WinAPI_SetProcessShutdownParameters ( $iLevel [, $bDialog = False] )","params":[{"label":"$iLevel","documentation":"The shutdown priority. The system shuts down processes from high $iLevel values to low. The highestand lowest shutdown priorities are reserved for system components.This parameter must be in the following range of values.0x0000-0x00FF - System reserved last shutdown range.0x0100-0x01FF - Application reserved last shutdown range.0x0200-0x02FF - Application reserved \\"in between\\" shutdown range.0x0300-0x03FF - Application reserved first shutdown range.0x0400-0x04FF - System reserved first shutdown range.All processes start at shutdown level 0x0280."},{"label":"$bDialog","documentation":"**[optional]** Specifies whether display a retry dialog box for the user, valid values:    True - Display a retry dialog box if process takes longer than the specified timeout to shutdown.    False - Directly terminates the process (Default)."}]},"_WinAPI_SetProcessWindowStation":{"documentation":"Assigns the specified window station to the calling process","label":"_WinAPI_SetProcessWindowStation ( $hStation )","params":[{"label":"$hStation","documentation":"Handle to the window station. This window station must be associated with the current session."}]},"_WinAPI_SetRectRgn":{"documentation":"Converts a region into a rectangular region with the specified coordinates","label":"_WinAPI_SetRectRgn ( $hRgn, $tRECT )","params":[{"label":"$hRgn","documentation":"Handle to the region."},{"label":"$tRECT","documentation":"$tagRECT structure that contains the coordinates of the rectangular region in logical units."}]},"_WinAPI_SetROP2":{"documentation":"Retrieves the foreground mix mode of the specified device context","label":"_WinAPI_SetROP2 ( $hDC, $iMode )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iMode","documentation":"The mix mode. This parameter can be one of the following values.$R2_BLACK$R2_COPYPEN$R2_LAST$R2_MASKNOTPEN$R2_MASKPEN$R2_MASKPENNOT$R2_MERGENOTPEN$R2_MERGEPEN$R2_MERGEPENNOT$R2_NOP$R2_NOT$R2_NOTCOPYPEN$R2_NOTMASKPEN$R2_NOTMERGEPEN$R2_NOTXORPEN$R2_WHITE$R2_XORPEN"}]},"_WinAPI_SetSearchPathMode":{"documentation":"Sets the per-process mode that the _WinAPI_SearchPath() function uses when locating files","label":"_WinAPI_SetSearchPathMode ( $iFlags )","params":[{"label":"$iFlags","documentation":"The search mode to use. This parameter can be one of the following values.    $BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE    $BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODEOptionaly, $BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE can be combined with the following flag to make thismode permanent for the current process.    $BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE cannot be combined with this flag.    $BASE_SEARCH_PATH_PERMANENT"}]},"_WinAPI_SetStretchBltMode":{"documentation":"Sets the bitmap stretching mode in the specified device context","label":"_WinAPI_SetStretchBltMode ( $hDC, $iMode )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iMode","documentation":"The stretching mode. This parameter can be one of the following values.$BLACKONWHITE$COLORONCOLOR$HALFTONE$WHITEONBLACK$STRETCH_ANDSCANS$STRETCH_DELETESCANS$STRETCH_HALFTONE$STRETCH_ORSCANS"}]},"_WinAPI_SetSysColors":{"documentation":"Obtains information about the display devices in a system","label":"_WinAPI_SetSysColors ( $vElements, $vColors )","params":[{"label":"$vElements","documentation":"Single element or Array of elements"},{"label":"$vColors","documentation":"Single Color or Array of colors"}]},"_WinAPI_SetSystemCursor":{"documentation":"Enables an application to customize the system cursors","label":"_WinAPI_SetSystemCursor ( $hCursor, $iID [, $bCopy = False] )","params":[{"label":"$hCursor","documentation":"Handle to a cursor."},{"label":"$iID","documentation":"This parameter specifies the system cursor to replace with the contents of $hCursor,and can be one of the following values.$OCR_NORMAL$OCR_IBEAM$OCR_WAIT$OCR_CROSS$OCR_UP$OCR_SIZE$OCR_ICON$OCR_SIZENWSE$OCR_SIZENESW$OCR_SIZEWE$OCR_SIZENS$OCR_SIZEALL$OCR_ICOCUR$OCR_NO$OCR_HAND$OCR_APPSTARTING$OCR_HELP"},{"label":"$bCopy","documentation":"**[optional]** Specifies whether the cursor should be duplicated, valid values:    True - The cursor is duplicated.    False - The cursor is not duplicated (Default)."}]},"_WinAPI_SetTextAlign":{"documentation":"Sets the text-alignment flags for the specified device context","label":"_WinAPI_SetTextAlign ( $hDC [, $iMode = 0] )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iMode","documentation":"**[optional]** The text alignment by using a mask of the values in the following list. Only one flag can be chosenfrom those that affect horizontal and vertical alignment. In addition, only one of the two flags thatalter the current position can be chosen.$TA_BASELINE$TA_BOTTOM$TA_TOP (Default)$TA_CENTER$TA_LEFT (Default)$TA_RIGHT$TA_NOUPDATECP (Default)$TA_RTLREADING$TA_UPDATECPWhen the current font has a vertical default base line, as with Kanji, the following values must beused instead of $TA_BASELINE and $TA_CENTER.$VTA_BASELINE$VTA_CENTERThe default values are $TA_LEFT, $TA_TOP, and $TA_NOUPDATECP."}]},"_WinAPI_SetTextCharacterExtra":{"documentation":"Sets the intercharacter spacing for the specified device context","label":"_WinAPI_SetTextCharacterExtra ( $hDC, $iCharExtra )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iCharExtra","documentation":"The amount of extra space, in logical units, to be added to each character."}]},"_WinAPI_SetTextColor":{"documentation":"Sets the current text color to the specified color value","label":"_WinAPI_SetTextColor ( $hDC, $iColor )","params":[{"label":"$hDC","documentation":"Handle to the device context"},{"label":"$iColor","documentation":"Specifies the new text color"}]},"_WinAPI_SetTextJustification":{"documentation":"Specifies the amount of space the system should add to the break characters in a string of text","label":"_WinAPI_SetTextJustification ( $hDC, $iBreakExtra, $iBreakCount )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iBreakExtra","documentation":"The total extra space, in logical units, to be added to the line of text."},{"label":"$iBreakCount","documentation":"The number of break characters in the line."}]},"_WinAPI_SetThreadDesktop":{"documentation":"Assigns the specified desktop to the calling thread","label":"_WinAPI_SetThreadDesktop ( $hDesktop )","params":[{"label":"$hDesktop","documentation":"Handle to the desktop to be assigned to the calling thread. This desktop must be associated with thecurrent window station for the process."}]},"_WinAPI_SetThreadErrorMode":{"documentation":"Controls whether the system will handle the specified types of serious errors or whether the calling thread will handle them","label":"_WinAPI_SetThreadErrorMode ( $iMode )","params":[{"label":"$iMode","documentation":"The thread error mode. This parameter can be one or more of the following values.    $SEM_FAILCRITICALERRORS    $SEM_NOGPFAULTERRORBOX    $SEM_NOOPENFILEERRORBOX"}]},"_WinAPI_SetThreadExecutionState":{"documentation":"Prevents the system from entering sleep or turning off the display while the current application is running","label":"_WinAPI_SetThreadExecutionState ( $iFlags )","params":[{"label":"$iFlags","documentation":"The thread\'s execution requirements. This parameter can be one or more of the following values.$ES_AWAYMODE_REQUIRED$ES_CONTINUOUS$ES_DISPLAY_REQUIRED$ES_SYSTEM_REQUIRED$ES_USER_PRESENT"}]},"_WinAPI_SetThreadLocale":{"documentation":"Sets the current locale of the calling thread","label":"_WinAPI_SetThreadLocale ( $iLCID )","params":[{"label":"$iLCID","documentation":"The locale identifier (LCID) that specifies the locale or one of the following predefined values.$LOCALE_INVARIANT$LOCALE_SYSTEM_DEFAULT$LOCALE_USER_DEFAULTWindows Vista or later$LOCALE_CUSTOM_DEFAULT$LOCALE_CUSTOM_UI_DEFAULT$LOCALE_CUSTOM_UNSPECIFIED"}]},"_WinAPI_SetThreadUILanguage":{"documentation":"Sets the user interface language for the current thread","label":"_WinAPI_SetThreadUILanguage ( $iLanguage )","params":[{"label":"$iLanguage","documentation":"The language identifier for the user interface language."}]},"_WinAPI_SetTimer":{"documentation":"Creates a timer with the specified time-out value","label":"_WinAPI_SetTimer ( $hWnd, $iTimerID, $iElapse, $pTimerFunc )","params":[{"label":"$hWnd","documentation":"Handle to the window to be associated with the timer. This window must be owned by the callingprocess. If a 0 value for $hWnd is passed in along with an $iTimerID of an existing timer, thattimer will be replaced in the same way that an existing non-zero $hWnd timer will be."},{"label":"$iTimerID","documentation":"The timer identifier. If the $hWnd parameter is 0, and the $iTimerID does not match an existingtimer then it is ignored and a new timer ID is generated. If the $hWnd parameter is not 0 andthe window specified by $hWnd already has a timer with the value $iTimerID, then the existingtimer is replaced by the new timer. When _WinAPI_SetTimer() replaces a timer, the timer is reset.Therefore, a message will be sent after the current time-out value elapses, but the previouslyset time-out value is ignored. If the call is not intended to replace an existing timer,$iTimerID should be 0 if the $hWnd is 0."},{"label":"$iElapse","documentation":"The time-out value, in milliseconds."},{"label":"$pTimerFunc","documentation":"The address of a callback function to be notified when the time-out value elapses. If thisparameter is 0, the system posts a WM_TIMER message to the application queue.(See MSDN for more information)"}]},"_WinAPI_SetUDFColorMode":{"documentation":"Sets the color mode for the WinAPIEx library","label":"_WinAPI_SetUDFColorMode ( $iMode )","params":[{"label":"$iMode","documentation":"The color mode. This parameter can be one of the following values.$UDF_BGR$UDF_RGB"}]},"_WinAPI_SetUserGeoID":{"documentation":"Sets the geographical location identifier for the user","label":"_WinAPI_SetUserGeoID ( $iGEOID )","params":[{"label":"$iGEOID","documentation":"The identifier for the geographical location of the user (GEOID)."}]},"_WinAPI_SetUserObjectInformation":{"documentation":"Sets information about the specified window station or desktop object","label":"_WinAPI_SetUserObjectInformation ( $hObject, $iIndex, $tData )","params":[{"label":"$hObject","documentation":"Handle to the window station or desktop object."},{"label":"$iIndex","documentation":"The object information to be set. This parameter can be one of the following values.$UOI_FLAGS"},{"label":"$tData","documentation":"The data of the object information. The data type depends on the information type. For more information,see _WinAPI_GetUserObjectInformation() function."}]},"_WinAPI_SetVolumeMountPoint":{"documentation":"Associates a volume with a drive letter or a directory on another volume","label":"_WinAPI_SetVolumeMountPoint ( $sFilePath, $sGUID )","params":[{"label":"$sFilePath","documentation":"The user-mode path to be associated with the volume. This may be a drive letter (for example, X:\\\\)or a directory on another volume (for example, Y:\\\\MountX)."},{"label":"$sGUID","documentation":"The volume GUID path for the volume. This string must be of the form \\"\\\\\\\\?\\\\Volume{GUID}\\\\\\" whereGUID is a GUID that identifies the volume. The \\\\\\\\?\\\\ turns off path parsing and is ignored as partof the path."}]},"_WinAPI_SetWindowDisplayAffinity":{"documentation":"Stores the display affinity setting in kernel mode on the specified window","label":"_WinAPI_SetWindowDisplayAffinity ( $hWnd, $iAffinity )","params":[{"label":"$hWnd","documentation":"Handle to the window."},{"label":"$iAffinity","documentation":"The display affinity setting. This setting specifies where the window\'s contents are can be displayed.Set this value to $WDA_MONITOR to display the window\'s contents only on a monitor.Set this value to $WDA_NONE to remove the monitor-only affinity."}]},"_WinAPI_SetWindowExt":{"documentation":"Sets the horizontal and vertical extents of the window for a device context by using the specified values","label":"_WinAPI_SetWindowExt ( $hDC, $iXExtent, $iYExtent )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iXExtent","documentation":"The window\'s horizontal extent in logical units."},{"label":"$iYExtent","documentation":"The window\'s vertical extent in logical units."}]},"_WinAPI_SetWindowLong":{"documentation":"Sets information about the specified window","label":"_WinAPI_SetWindowLong ( $hWnd, $iIndex, $iValue )","params":[{"label":"$hWnd","documentation":"Handle of the window"},{"label":"$iIndex","documentation":"Specifies the 0-based offset to the value to be set.Valid values are in the range zero through the number of bytes of extra window memory, minus four;for example, if you specified 12 or more bytes of extra memory, a value of 8 would be an index to the third 32-bit integer.To retrieve any other value specify one of the following values:    $GWL_EXSTYLE - Sets the extended window styles    $GWL_STYLE - Sets the window styles    $GWL_WNDPROC - Sets the address of the window procedure    $GWL_HINSTANCE - Sets the handle of the application instance    $GWL_HWNDPARENT - Sets the handle of the parent window, if any    $GWL_ID - Sets the identifier of the window    $GWL_USERDATA - Sets the 32-bit value associated with the window"},{"label":"$iValue","documentation":"Specifies the replacement value"}]},"_WinAPI_SetWindowOrg":{"documentation":"Specifies which window point maps to the viewport origin (0,0)","label":"_WinAPI_SetWindowOrg ( $hDC, $iX, $iY )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate, in logical units, of the new window origin."},{"label":"$iY","documentation":"The y-coordinate, in logical units, of the new window origin."}]},"_WinAPI_SetWindowPlacement":{"documentation":"Sets the placement of the window for Min, Max, and normal positions","label":"_WinAPI_SetWindowPlacement ( $hWnd, $tWindowPlacement )","params":[{"label":"$hWnd","documentation":"Handle of the window"},{"label":"$tWindowPlacement","documentation":"A $tagWINDOWPLACEMENT structure or a pointer to it"}]},"_WinAPI_SetWindowPos":{"documentation":"Changes the size, position, and Z order of a child, pop-up, or top-level window","label":"_WinAPI_SetWindowPos ( $hWnd, $hAfter, $iX, $iY, $iCX, $iCY, $iFlags )","params":[{"label":"$hWnd","documentation":"Handle of window"},{"label":"$hAfter","documentation":"Identifies the window to precede the positioned window in the Z order. This parameter must be awindow handle or one of the following values:    $HWND_BOTTOM - Places the window at the bottom of the Z order    $HWND_NOTOPMOST - Places the window above all non-topmost windows    $HWND_TOP - Places the window at the top of the Z order    $HWND_TOPMOST - Places the window above all non-topmost windows"},{"label":"$iX","documentation":"Specifies the new position of the left side of the window"},{"label":"$iY","documentation":"Specifies the new position of the top of the window"},{"label":"$iCX","documentation":"Specifies the new width of the window, in pixels"},{"label":"$iCY","documentation":"Specifies the new height of the window, in pixels"},{"label":"$iFlags","documentation":"Specifies the window sizing and positioning flags:    $SWP_DRAWFRAME - Draws a frame around the window    $SWP_FRAMECHANGED - Sends a $WM_NCCALCSIZE message to the window, even if the window\'s size is not changed    $SWP_HIDEWINDOW - Hides the window    $SWP_NOACTIVATE - Does not activate the window    $SWP_NOCOPYBITS - Discards the entire contents of the client area    $SWP_NOMOVE - Retains the current position    $SWP_NOOWNERZORDER - Does not change the owner window\'s position in the Z order    $SWP_NOREDRAW - Does not redraw changes    $SWP_NOREPOSITION - Same as the $SWP_NOOWNERZORDER flag    $SWP_NOSENDCHANGING - Prevents the window from receiving $WM_WINDOWPOSCHANGING    $SWP_NOSIZE - Retains the current size    $SWP_NOZORDER - Retains the current Z order    $SWP_SHOWWINDOW - Displays the window"}]},"_WinAPI_SetWindowRgn":{"documentation":"Sets the window region of a window","label":"_WinAPI_SetWindowRgn ( $hWnd, $hRgn [, $bRedraw = True] )","params":[{"label":"$hWnd","documentation":"Handle to the window whose window region is to be set."},{"label":"$hRgn","documentation":"Handle to a region. The function sets the window region of the window to this region."},{"label":"$bRedraw","documentation":"**[optional]** Specifies whether the system redraws the window after setting the window region."}]},"_WinAPI_SetWindowsHookEx":{"documentation":"Installs an application-defined hook procedure into a hook chain","label":"_WinAPI_SetWindowsHookEx ( $iHook, $pProc, $hDll [, $iThreadId = 0] )","params":[{"label":"$iHook","documentation":"Specifies the type of hook procedure to be installed. This parameter can be one of the following values:    $WH_CALLWNDPROC - Installs a hook procedure that monitors messages before the system sends them to the destination window procedure    $WH_CALLWNDPROCRET - Installs a hook procedure that monitors messages after they have been processed by the destination window procedure    $WH_CBT - Installs a hook procedure that receives notifications useful to a computer-based training (CBT) application    $WH_DEBUG - Installs a hook procedure useful for debugging other hook procedures    $WH_FOREGROUNDIDLE - Installs a hook procedure that will be called when the application\'s foreground thread is about to become idle    $WH_GETMESSAGE - Installs a hook procedure that monitors messages posted to a message queue    $WH_JOURNALPLAYBACK - Installs a hook procedure that posts messages previously recorded by a $WH_JOURNALRECORD hook procedure    $WH_JOURNALRECORD - Installs a hook procedure that records input messages posted to the system message queue    $WH_KEYBOARD - Installs a hook procedure that monitors keystroke messages    $WH_KEYBOARD_LL - Installs a hook procedure that monitors low-level keyboard input events    $WH_MOUSE - Installs a hook procedure that monitors mouse messages    $WH_MOUSE_LL - Installs a hook procedure that monitors low-level mouse input events    $WH_MSGFILTER - Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar    $WH_SHELL - Installs a hook procedure that receives notifications useful to shell applications    $WH_SYSMSGFILTER - Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar"},{"label":"$pProc","documentation":"Pointer to the hook procedure. If the $iThreadId parameter is zero or specifies the identifier of a thread created by a different process,the $pProc parameter must point to a hook procedure in a DLL.Otherwise, $pProc can point to a hook procedure in the code associated with the current process"},{"label":"$hDll","documentation":"Handle to the DLL containing the hook procedure pointed to by the $pProc parameter.The $hMod parameter must be set to NULL if the $iThreadId parameter specifies a thread created by the current process and if the hook procedure is within the code associated with the current process"},{"label":"$iThreadId","documentation":"**[optional]** Specifies the identifier of the thread with which the hook procedure is to be associated.If this parameter is zero, the hook procedure is associated with all existing threads running in the same desktop as the calling thread"}]},"_WinAPI_SetWindowSubclass":{"documentation":"Installs or updates a window subclass callback","label":"_WinAPI_SetWindowSubclass ( $hWnd, $pSubclassProc, $idSubClass [, $pData = 0] )","params":[{"label":"$hWnd","documentation":"Handle of the window being subclassed."},{"label":"$pSubclassProc","documentation":"A pointer to a window procedure. This pointer and the subclass ID uniquely identify this subclass callback.(See MSDN for more information)"},{"label":"$idSubClass","documentation":"The subclass ID."},{"label":"$pData","documentation":"**[optional]** The reference data. This value is passed to the subclass procedure. The meaning of this value is determined by the calling application."}]},"_WinAPI_SetWindowText":{"documentation":"Changes the text of the specified window\'s title bar","label":"_WinAPI_SetWindowText ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the window or control whose text is to be changed"},{"label":"$sText","documentation":"String to be used as the new title or control text"}]},"_WinAPI_SetWinEventHook":{"documentation":"Sets an event hook function for a range of events","label":"_WinAPI_SetWinEventHook ( $iEventMin, $iEventMax, $pEventProc [, $iPID = 0 [, $iThreadId = 0 [, $iFlags = 0]]] )","params":[{"label":"$iEventMin","documentation":"The lowest event value in the range of events ($EVENT_*) that are handled by the hook function."},{"label":"$iEventMax","documentation":"The highest event value in the range of events ($EVENT_*) that are handled by the hook function."},{"label":"$pEventProc","documentation":"The address of an application-defined hook function that the system calls in response toevents generated by an accessible object."},{"label":"$iPID","documentation":"**[optional]** The ID of the process from which the hook function receives events. If this parameter is 0 (Default),the hook function is associated with all existing processes on the current desktop."},{"label":"$iThreadId","documentation":"**[optional]** The ID of the thread from which the hook function receives events. If this parameter is 0 (Default),the hook function is associated with all existing threads on the current desktop."},{"label":"$iFlags","documentation":"**[optional]** The flags that specify the location of the hook function and of the events to be skipped.The following flags are valid:    $WINEVENT_INCONTEXT    $WINEVENT_OUTOFCONTEXT (Default)    $WINEVENT_SKIPOWNPROCESS    $WINEVENT_SKIPOWNTHREADThe following single flags, or flag combinations are valid:    $WINEVENT_INCONTEXT    $WINEVENT_OUTOFCONTEXT    $WINEVENT_INCONTEXT | $WINEVENT_SKIPOWNPROCESS    $WINEVENT_INCONTEXT | $WINEVENT_SKIPOWNTHREAD    $WINEVENT_OUTOFCONTEXT | $WINEVENT_SKIPOWNPROCESS    $WINEVENT_OUTOFCONTEXT | $WINEVENT_SKIPOWNTHREAD"}]},"_WinAPI_SetWorldTransform":{"documentation":"Sets a two-dimensional linear transformation between world space and page space for the specified device context","label":"_WinAPI_SetWorldTransform ( $hDC, $tXFORM )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$tXFORM","documentation":"$tagXFORM structure that contains the transformation data."}]},"_WinAPI_SfcIsFileProtected":{"documentation":"Determines whether the specified file is protected","label":"_WinAPI_SfcIsFileProtected ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file to test."}]},"_WinAPI_SfcIsKeyProtected":{"documentation":"Determines whether the specified registry key is protected","label":"_WinAPI_SfcIsKeyProtected ( $hKey [, $sSubKey = Default [, $iFlag = 0]] )","params":[{"label":"$hKey","documentation":"Handle to the root registry key, it must be one of the following predefined keys:    $HKEY_CLASSES_ROOT    $HKEY_CURRENT_USER    $HKEY_LOCAL_MACHINE    $HKEY_USERS"},{"label":"$sSubKey","documentation":"**[optional]** The name of the key to test. This key must be a subkey of the key identified by the $hKey parameter.If this parameter is not specified (Default), the function only checks whether the root registry key is protected."},{"label":"$iFlag","documentation":"**[optional]** The flag that specifies the alternate registry view that should be used by applications that run on 64-bit Windows.This flag is ignored on the x86 platform. It can be one of the following values:    $KEY_WOW64_32KEY    $KEY_WOW64_64KEY"}]},"_WinAPI_ShellAboutDlg":{"documentation":"Displays a Windows About dialog box","label":"_WinAPI_ShellAboutDlg ( $sTitle, $sName, $sText [, $hIcon = 0 [, $hParent = 0]] )","params":[{"label":"$sTitle","documentation":"The title of the Windows About dialog box."},{"label":"$sName","documentation":"The first line after the text \\"Microsoft\\"."},{"label":"$sText","documentation":"The text to be displayed in the dialog box after the version and copyright information."},{"label":"$hIcon","documentation":"**[optional]** Handle to the icon that the function displays in the dialog box."},{"label":"$hParent","documentation":"**[optional]** Handle to a parent window."}]},"_WinAPI_ShellAddToRecentDocs":{"documentation":"Adds a file to the most recently and frequently item list","label":"_WinAPI_ShellAddToRecentDocs ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The name of the file to be added. Set this parameter to empty string to clear all usage data on all items."}]},"_WinAPI_ShellChangeNotify":{"documentation":"Notifies the system of an event that an application has performed","label":"_WinAPI_ShellChangeNotify ( $iEvent, $iFlags [, $iItem1 = 0 [, $iItem2 = 0]] )","params":[{"label":"$iEvent","documentation":"Describes the event that has occurred. Typically, only one event is specified at a time. If more thanone event is specified, the values contained in the $iItem1 and $iItem2 parameters must be the same,respectively, for all specified events. This parameter can be one or more of the following values.$SHCNE_ALLEVENTS$SHCNE_ASSOCCHANGED$SHCNE_ATTRIBUTES$SHCNE_CREATE$SHCNE_DELETE$SHCNE_DRIVEADD$SHCNE_DRIVEADDGUI$SHCNE_DRIVEREMOVED$SHCNE_EXTENDED_EVENT$SHCNE_FREESPACE$SHCNE_MEDIAINSERTED$SHCNE_MEDIAREMOVED$SHCNE_MKDIR$SHCNE_NETSHARE$SHCNE_NETUNSHARE$SHCNE_RENAMEFOLDER$SHCNE_RENAMEITEM$SHCNE_RMDIR$SHCNE_SERVERDISCONNECT$SHCNE_UPDATEDIR$SHCNE_UPDATEIMAGE$SHCNE_UPDATEITEM$SHCNE_DISKEVENTS$SHCNE_GLOBALEVENTS$SHCNE_INTERRUPT(See MSDN for more information)"},{"label":"$iFlags","documentation":"Flags that indicate the meaning of the $iItem1 and $iItem2 parameters. This parameter must be oneof the following values.$SHCNF_DWORD$SHCNF_IDLIST$SHCNF_PATH$SHCNF_PRINTER$SHCNF_FLUSH$SHCNF_FLUSHNOWAIT$SHCNF_NOTIFYRECURSIVE(See MSDN for more information)"},{"label":"$iItem1","documentation":"**[optional]** First event-dependent value. Default is 0."},{"label":"$iItem2","documentation":"**[optional]** Second event-dependent value. Default is 0."}]},"_WinAPI_ShellChangeNotifyDeregister":{"documentation":"Unregisters the client\'s window","label":"_WinAPI_ShellChangeNotifyDeregister ( $iID )","params":[{"label":"$iID","documentation":"The value that specifies the registration ID returned by _WinAPI_ShellChangeNotifyRegister()."}]},"_WinAPI_ShellChangeNotifyRegister":{"documentation":"Registers a window to receive notifications from the file system or Shell","label":"_WinAPI_ShellChangeNotifyRegister ( $hWnd, $iMsg, $iEvents, $iSources, $aPaths [, $bRecursive = False] )","params":[{"label":"$hWnd","documentation":"Handle to the window that receives the change or notification messages."},{"label":"$iMsg","documentation":"Message to be posted to the window procedure."},{"label":"$iEvents","documentation":"Change notification events for which to receive notification. This parameter can be one or moreof the $SHCNE_* values."},{"label":"$iSources","documentation":"One or more of the following values that indicate the type of events for which to receivenotifications.$SHCNRF_INTERRUPTLEVEL$SHCNRF_SHELLLEVEL$SHCNRF_RECURSIVEINTERRUPT$SHCNRF_NEWDELIVERY"},{"label":"$aPaths","documentation":"Single path or array of paths for which to receive notifications. These names should befully-qualified paths to prevent unexpected results."},{"label":"$bRecursive","documentation":"**[optional]** Specifies whether to post notifications for children paths in $aPaths parameter, valid values:    True - Notifications would come from the folder\'s children.    False  - Notifications would come from the specified folder\'s only (Default)."}]},"_WinAPI_ShellCreateDirectory":{"documentation":"Creates a new file system folder","label":"_WinAPI_ShellCreateDirectory ( $sFilePath [, $hParent = 0 [, $tSecurity = 0]] )","params":[{"label":"$sFilePath","documentation":"The fully qualified path of the directory."},{"label":"$hParent","documentation":"**[optional]** A handle to a parent window."},{"label":"$tSecurity","documentation":"**[optional]** $tagSECURITY_ATTRIBUTES structure with the directory\'s security attribute. If this parameter is 0 (Default),no security attributes are set."}]},"_WinAPI_ShellEmptyRecycleBin":{"documentation":"Empties the Recycle Bin on the specified drive","label":"_WinAPI_ShellEmptyRecycleBin ( [$sRoot = \'\' [, $iFlags = 0 [, $hParent = 0]]] )","params":[{"label":"$sRoot","documentation":"**[optional]** The string that contains the path of the root drive on which the Recycle Bin is located. This stringcan be formatted with the drive, folder, and subfolder names, for example \\"c:\\\\windows\\\\system\\\\\\".If this parameter is empty string (Default), all Recycle Bins on all drives will be emptied."},{"label":"$iFlags","documentation":"**[optional]** This parameter can be one or more of the following values.$SHERB_NOCONFIRMATION$SHERB_NOPROGRESSUI$SHERB_NOSOUND$SHERB_NO_UI"},{"label":"$hParent","documentation":"**[optional]** Handle to the parent window of any dialog boxes that might be displayed during the operation."}]},"_WinAPI_ShellExecute":{"documentation":"Performs an operation on a specified file","label":"_WinAPI_ShellExecute ( $sFilePath [, $sArgs = \'\' [, $sDir = \'\' [, $sVerb = \'\' [, $iShow = 1 [, $hParent = 0]]]]] )","params":[{"label":"$sFilePath","documentation":"The string that specifies the file or object on which to execute the specified verb. Note that not allverbs are supported on all objects. For example, not all document types support the \\"print\\" verb."},{"label":"$sArgs","documentation":"**[optional]** The string that specifies the parameters to be passed to the application."},{"label":"$sDir","documentation":"**[optional]** The string that specifies the working directory for the action."},{"label":"$sVerb","documentation":"**[optional]** The string, referred to as a verb, that specifies the action to be performed. The set of available verbsdepends on the particular file or folder. Generally, the actions available from an object\'s shortcutmenu are available verbs. The following verbs are commonly used:\\"edit\\"\\"explore\\"\\"find\\"\\"open\\"\\"edit\\"\\"print\\""},{"label":"$iShow","documentation":"**[optional]** The flags that specify how an application is to be displayed when it is opened ($SW_*)."},{"label":"$hParent","documentation":"**[optional]** Handle to the owner window used for displaying a UI or error messages."}]},"_WinAPI_ShellExecuteEx":{"documentation":"Performs an operation on a specified file","label":"_WinAPI_ShellExecuteEx ( ByRef $tSHEXINFO )","params":[{"label":"$tSHEXINFO","documentation":"$tagSHELLEXECUTEINFO structure that contains and receives information about the application being executed."}]},"_WinAPI_ShellExtractAssociatedIcon":{"documentation":"Returns a handle to the icon that associated with the specified file\'s","label":"_WinAPI_ShellExtractAssociatedIcon ( $sFilePath [, $bSmall = False] )","params":[{"label":"$sFilePath","documentation":"The full path and file name of the file that contains the icon, or its extension, such as \\".txt\\"."},{"label":"$bSmall","documentation":"**[optional]** Specifies whether to extract a small icon, valid values:    True - Extract a small icon.    False - Extract a large icon (Default)."}]},"_WinAPI_ShellExtractIcon":{"documentation":"Extracts the icon with the specified dimension from the specified file","label":"_WinAPI_ShellExtractIcon ( $sIcon, $iIndex, $iWidth, $iHeight )","params":[{"label":"$sIcon","documentation":"Path and name of the file from which the icon are to be extracted."},{"label":"$iIndex","documentation":"The 0-based index of the icon to extract. If this value is a negative number, the function extractsthe icon whose resource identifier is equal to the absolute value of $iIndex."},{"label":"$iWidth","documentation":"Horizontal icon size wanted."},{"label":"$iHeight","documentation":"Vertical icon size wanted."}]},"_WinAPI_ShellFileOperation":{"documentation":"Copies, moves, renames, or deletes a file system object","label":"_WinAPI_ShellFileOperation ( $sFrom, $sTo, $iFunc, $iFlags [, $sTitle = \'\' [, $hParent = 0]] )","params":[{"label":"$sFrom","documentation":"Single string or array of string that contains the source file name(s). These names should befully-qualified paths to prevent unexpected results."},{"label":"$sTo","documentation":"Single string or array of string that contains the destination file or directory name(s) (if used).These names should be fully-qualified paths to prevent unexpected results."},{"label":"$iFunc","documentation":"A value that indicates which operation to perform. This parameter can be one of the following values.$FO_COPY$FO_DELETE$FO_MOVE$FO_RENAME"},{"label":"$iFlags","documentation":"Flags that control the file operation. This parameter can be one of the following values.$FOF_ALLOWUNDO$FOF_CONFIRMMOUSE$FOF_FILESONLY$FOF_MULTIDESTFILES$FOF_NOCONFIRMATION$FOF_NOCONFIRMMKDIR$FOF_NO_CONNECTED_ELEMENTS$FOF_NOCOPYSECURITYATTRIBS$FOF_NOERRORUI$FOF_NORECURSEREPARSE$FOF_NORECURSION$FOF_RENAMEONCOLLISION$FOF_SILENT$FOF_SIMPLEPROGRESS$FOF_WANTMAPPINGHANDLE$FOF_WANTNUKEWARNING$FOF_NO_UI"},{"label":"$sTitle","documentation":"**[optional]** The title of a progress dialog box. This parameter is used only if $iFlags includes the $FOF_SIMPLEPROGRESS flag."},{"label":"$hParent","documentation":"**[optional]** Handle to the dialog box to display information about the status of the file operation."}]},"_WinAPI_ShellFlushSFCache":{"documentation":"Flushes the special folder cache","label":"_WinAPI_ShellFlushSFCache (  )","params":[]},"_WinAPI_ShellGetFileInfo":{"documentation":"Retrieves information about an object in the file system","label":"_WinAPI_ShellGetFileInfo ( $sFilePath, $iFlags, $iAttributes, ByRef $tSHFILEINFO )","params":[{"label":"$sFilePath","documentation":"String that contains the absolute or relative path and file name. This string can use eithershort (the 8.3 form) or long file names.If the $iFlags parameter includes the $SHGFI_PIDL flag, this parameter must be the address of anITEMIDLIST (PIDL) structure that contains the list of item identifiers that uniquely identifies thefile within the Shell\'s namespace. The pointer to an item identifier list (PIDL) must be a fullyqualified PIDL. Relative PIDLs are not allowed.If the $iFlags parameter includes the $SHGFI_USEFILEATTRIBUTES flag, this parameter does not haveto be a valid file name. The function will proceed as if the file exists with the specified name andwith the file attributes passed in the $iAttributes parameter. This allows you to obtain informationabout a file type by passing just the extension for $sFilePath and passing $FILE_ATTRIBUTE_NORMALin $iAttributes."},{"label":"$iFlags","documentation":"The flags that specify the file information to retrieve. This parameter can be a combination of thefollowing values.$SHGFI_ATTR_SPECIFIED$SHGFI_ATTRIBUTES$SHGFI_DISPLAYNAME$SHGFI_EXETYPE$SHGFI_ICON$SHGFI_ICONLOCATION$SHGFI_LARGEICON$SHGFI_LINKOVERLAY$SHGFI_OPENICON$SHGFI_OVERLAYINDEX$SHGFI_PIDL$SHGFI_SELECTED$SHGFI_SHELLICONSIZE$SHGFI_SMALLICON$SHGFI_SYSICONINDEX$SHGFI_TYPENAME$SHGFI_USEFILEATTRIBUTES"},{"label":"$iAttributes","documentation":"A combination of one or more file attribute flags ($FILE_ATTRIBUTE_*)."},{"label":"$tSHFILEINFO","documentation":"$tagSHFILEINFO structure to receive the file information. This structure must be created before function call."}]},"_WinAPI_ShellGetIconOverlayIndex":{"documentation":"Retrieves the index of the overlay icon in the system image list","label":"_WinAPI_ShellGetIconOverlayIndex ( $sIcon, $iIndex )","params":[{"label":"$sIcon","documentation":"The fully qualified path of the file that contains the icon."},{"label":"$iIndex","documentation":"The index of the icon. To request a standard overlay icon, set the path to an empty string,and index to one of the following values.    $IDO_SHGIOI_LINK    $IDO_SHGIOI_SHARE    $IDO_SHGIOI_SLOWFILEWindows 7 or later    $IDO_SHGIOI_DEFAULT"}]},"_WinAPI_ShellGetImageList":{"documentation":"Retrieves the system image list for small or large icons","label":"_WinAPI_ShellGetImageList ( [$bSmall = False] )","params":[{"label":"$bSmall","documentation":"**[optional]** Specifies whether to retrieve an image list for small or large icons, valid values:    True - The small icons.    False - The large icons (Default)."}]},"_WinAPI_ShellGetKnownFolderIDList":{"documentation":"Retrieves the path of a known folder as an ITEMIDLIST structure","label":"_WinAPI_ShellGetKnownFolderIDList ( $sGUID [, $iFlags = 0 [, $hToken = 0]] )","params":[{"label":"$sGUID","documentation":"The GUID ($FOLDERID_*) that identifies the standard folders registered with the system."},{"label":"$iFlags","documentation":"**[optional]** The flags that specify special retrieval options. This parameter can be one or more of the following values.    $KF_FLAG_CREATE    $KF_FLAG_DONT_VERIFY    $KF_FLAG_DONT_UNEXPAND    $KF_FLAG_NO_ALIAS    $KF_FLAG_INIT    $KF_FLAG_DEFAULT_PATH    $KF_FLAG_NOT_PARENT_RELATIVE    $KF_FLAG_SIMPLE_IDLISTWindows 7 or later    $KF_FLAG_ALIAS_ONLY"},{"label":"$hToken","documentation":"**[optional]** The access token that represents a particular user. If this parameter is 0, the function requeststhe known folder for the current user. Assigning the $hToken parameter a value of (-1) indicates theDefault User. Note that access to the Default User folders requires administrator privileges."}]},"_WinAPI_ShellGetKnownFolderPath":{"documentation":"Retrieves the full path of a known folder identified","label":"_WinAPI_ShellGetKnownFolderPath ( $sGUID [, $iFlags = 0 [, $hToken = 0]] )","params":[{"label":"$sGUID","documentation":"The GUID ($FOLDERID_*) that identifies the standard folders registered with the system."},{"label":"$iFlags","documentation":"**[optional]** The flags that specify special retrieval options. This parameter can be one or more of the following values.    $KF_FLAG_CREATE    $KF_FLAG_DONT_VERIFY    $KF_FLAG_DONT_UNEXPAND    $KF_FLAG_NO_ALIAS    $KF_FLAG_INIT    $KF_FLAG_DEFAULT_PATH    $KF_FLAG_NOT_PARENT_RELATIVE    $KF_FLAG_SIMPLE_IDLISTWindows 7 or later    $KF_FLAG_ALIAS_ONLY"},{"label":"$hToken","documentation":"**[optional]** The access token that represents a particular user. If this parameter is 0, the function requeststhe known folder for the current user. Assigning the $hToken parameter a value of (-1) indicates theDefault User. Note that access to the Default User folders requires administrator privileges."}]},"_WinAPI_ShellGetLocalizedName":{"documentation":"Retrieves the localized name of a file in a Shell folder","label":"_WinAPI_ShellGetLocalizedName ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to the target file."}]},"_WinAPI_ShellGetPathFromIDList":{"documentation":"Converts an item identifier list to a file system path","label":"_WinAPI_ShellGetPathFromIDList ( $pPIDL )","params":[{"label":"$pPIDL","documentation":"The address of an item identifier list that specifies a file or directory location relative to the root of the namespace (the desktop)."}]},"_WinAPI_ShellGetSetFolderCustomSettings":{"documentation":"Sets or retrieves custom folder settings","label":"_WinAPI_ShellGetSetFolderCustomSettings ( $sFilePath, $iFlag, ByRef $tSHFCS )","params":[{"label":"$sFilePath","documentation":"The path to the folder."},{"label":"$iFlag","documentation":"A flag controlling the action of the function. It may be one of the following values.$FCS_READ$FCS_FORCEWRITE$FCS_WRITE"},{"label":"$tSHFCS","documentation":"$tagSHFOLDERCUSTOMSETTINGS structure that provides or receives the custom folder settings. This structuremust be created before function call."}]},"_WinAPI_ShellGetSettings":{"documentation":"Retrieves Shell state settings","label":"_WinAPI_ShellGetSettings ( $iFlags )","params":[{"label":"$iFlags","documentation":"The flags that indicate which settings should be retrieved. This parameter can be one ormore of the following values (use ONLY this flags).$SSF_DESKTOPHTML$SSF_DONTPRETTYPATH$SSF_DOUBLECLICKINWEBVIEW$SSF_HIDEICONS$SSF_MAPNETDRVBUTTON$SSF_NOCONFIRMRECYCLE$SSF_NONETCRAWLING$SSF_SEPPROCESS$SSF_SHOWALLOBJECTS$SSF_SHOWCOMPCOLOR$SSF_SHOWEXTENSIONS$SSF_SHOWINFOTIP$SSF_SHOWSUPERHIDDEN$SSF_SHOWSYSFILES$SSF_STARTPANELON$SSF_WIN95CLASSIC$SSF_WEBVIEWWindows Vista or later$SSF_AUTOCHECKSELECT$SSF_ICONSONLY$SSF_SHOWTYPEOVERLAY"}]},"_WinAPI_ShellGetSpecialFolderLocation":{"documentation":"Retrieves a pointer to the ITEMIDLIST structure (PIDL) of a special folder","label":"_WinAPI_ShellGetSpecialFolderLocation ( $iCSIDL )","params":[{"label":"$iCSIDL","documentation":"The CSIDL ($CSIDL_*) that identifies the folder of interest."}]},"_WinAPI_ShellGetSpecialFolderPath":{"documentation":"Retrieves the path of a special folder","label":"_WinAPI_ShellGetSpecialFolderPath ( $iCSIDL [, $bCreate = False] )","params":[{"label":"$iCSIDL","documentation":"The CSIDL ($iCSIDL_*) that identifies the folder of interest."},{"label":"$bCreate","documentation":"**[optional]** Specifies whether the folder should be created if it does not already exist, valid values:True - The folder is created.False - The folder is not created (Default)."}]},"_WinAPI_ShellGetStockIconInfo":{"documentation":"Retrieves information about system-defined Shell icons","label":"_WinAPI_ShellGetStockIconInfo ( $iSIID, $iFlags )","params":[{"label":"$iSIID","documentation":"One of the $SIID_* constants that specifies which icon should be retrieved.Those constants are defined in APIShellExConstants.au3."},{"label":"$iFlags","documentation":"The flags that specify which information is requested. This parameter can be a combination of thefollowing values.$SHGSI_ICONLOCATION$SHGSI_ICON$SHGSI_SYSICONINDEX$SHGSI_LINKOVERLAY$SHGSI_SELECTED$SHGSI_LARGEICON$SHGSI_SMALLICON$SHGSI_SHELLICONSIZE"}]},"_WinAPI_ShellILCreateFromPath":{"documentation":"Creates a pointer to an item identifier list (PIDL) from a path","label":"_WinAPI_ShellILCreateFromPath ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to be converted."}]},"_WinAPI_ShellNotifyIcon":{"documentation":"Sends a message to the taskbar\'s status area","label":"_WinAPI_ShellNotifyIcon ( $iMessage, $tNOTIFYICONDATA )","params":[{"label":"$iMessage","documentation":"The variable that specifies the action to be taken. It can have one of the following values.$NIM_ADD$NIM_MODIFY$NIM_DELETE$NIM_SETFOCUS$NIM_SETVERSION"},{"label":"$tNOTIFYICONDATA","documentation":"$tagNOTIFYICONDATA structure. The content and size of this structure depends on the valueof the $iMessage and version of the operating system."}]},"_WinAPI_ShellNotifyIconGetRect":{"documentation":"Gets the screen coordinates of the bounding rectangle of a notification icon","label":"_WinAPI_ShellNotifyIconGetRect ( $hWnd, $iID [, $tGUID = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the parent window used by the notification\'s callback function. For more information,see the \\"hWnd\\" member of the $tagNOTIFYICONDATA structure."},{"label":"$iID","documentation":"Application-defined identifier of the notification icon. Multiple icons can be associated with a single$hWnd, each with their own $iID."},{"label":"$tGUID","documentation":"**[optional]** $tagGUID structure that identifies the icon."}]},"_WinAPI_ShellObjectProperties":{"documentation":"Invokes the Properties context menu command on a Shell object","label":"_WinAPI_ShellObjectProperties ( $sFilePath [, $iType = 2 [, $sProperty = \'\' [, $hParent = 0]]] )","params":[{"label":"$sFilePath","documentation":"The object name."},{"label":"$iType","documentation":"**[optional]** The value that specifies the type of object.$SHOP_PRINTERNAME$SHOP_FILEPATH (Default)$SHOP_VOLUMEGUID"},{"label":"$sProperty","documentation":"**[optional]** The name of the property sheet page to be opened initially."},{"label":"$hParent","documentation":"**[optional]** Handle of the parent window of the dialog box."}]},"_WinAPI_ShellOpenFolderAndSelectItems":{"documentation":"Opens a Windows Explorer window with specified items in a particular folder selected","label":"_WinAPI_ShellOpenFolderAndSelectItems ( $sFilePath [, $aNames = 0 [, $iStart = 0 [, $iEnd = -1 [, $iFlags = 0]]]] )","params":[{"label":"$sFilePath","documentation":"The fully qualified path that specifies the folder or file. If $aNames parameter is used, $sFilePath shouldspecified only to a folder, otherwise, the function fails. This parameter can be an empty string."},{"label":"$aNames","documentation":"**[optional]** The array of the folder or file names to be selected. It should be just names in the specifiedfolder, without its path."},{"label":"$iStart","documentation":"**[optional]** The index of array to start selecting at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop selecting at."},{"label":"$iFlags","documentation":"**[optional]** The optional flags. This parameter can be one or more of the following values.Windows Vista or later$OFASI_EDIT$OFASI_OPENDESKTOP"}]},"_WinAPI_ShellOpenWithDlg":{"documentation":"Displays the Open With dialog box","label":"_WinAPI_ShellOpenWithDlg ( $sFilePath [, $iFlags = 0 [, $hParent = 0]] )","params":[{"label":"$sFilePath","documentation":"The file name."},{"label":"$iFlags","documentation":"**[optional]** The characteristics of the Open With dialog box. This parameter can be one or more of the following values.$OAIF_ALLOW_REGISTRATION$OAIF_REGISTER_EXT$OAIF_EXEC$OAIF_FORCE_REGISTRATION$OAIF_HIDE_REGISTRATION$OAIF_URL_PROTOCOL"},{"label":"$hParent","documentation":"**[optional]** Handle of the parent window."}]},"_WinAPI_ShellQueryRecycleBin":{"documentation":"Retrieves the size of the Recycle Bin and the number of items in it, for a specified drive","label":"_WinAPI_ShellQueryRecycleBin ( [$sRoot = \'\'] )","params":[{"label":"$sRoot","documentation":"**[optional]** The string that contains the path of the root drive on which the Recycle Bin is located. This stringcan be formatted with the drive, folder, and subfolder names, for example \\"c:\\\\windows\\\\system\\\\\\".If this parameter is empty string, information is retrieved for all Recycle Bins on all drives."}]},"_WinAPI_ShellQueryUserNotificationState":{"documentation":"Checks the state of the computer for the current user","label":"_WinAPI_ShellQueryUserNotificationState (  )","params":[]},"_WinAPI_ShellRemoveLocalizedName":{"documentation":"Removes the localized name of a file in a Shell folder","label":"_WinAPI_ShellRemoveLocalizedName ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The path to the target file."}]},"_WinAPI_ShellRestricted":{"documentation":"Determines whether a specified administrator policy is in effect","label":"_WinAPI_ShellRestricted ( $iRestriction )","params":[{"label":"$iRestriction","documentation":"A restriction. This parameter can be one of the $REST_* constants defined in APIShellExConstants.au3."}]},"_WinAPI_ShellSetKnownFolderPath":{"documentation":"Redirects a known folder to a new location","label":"_WinAPI_ShellSetKnownFolderPath ( $sGUID, $sFilePath [, $iFlags = 0 [, $hToken = 0]] )","params":[{"label":"$sGUID","documentation":"The GUID ($FOLDERID_*) that identifies the known folder."},{"label":"$sFilePath","documentation":"The folder\'s new path."},{"label":"$iFlags","documentation":"**[optional]** This parameter can be 0 or the following value.$KF_FLAG_DONT_UNEXPAND"},{"label":"$hToken","documentation":"**[optional]** The access token that represents a particular user. If this parameter is 0, the function requeststhe known folder for the current user. Assigning the $hToken parameter a value of (-1) indicates theDefault User. Note that access to the Default User folders requires administrator privileges."}]},"_WinAPI_ShellSetLocalizedName":{"documentation":"Sets the localized name of a file in a Shell folder","label":"_WinAPI_ShellSetLocalizedName ( $sFilePath, $sModule, $iResID )","params":[{"label":"$sFilePath","documentation":"The path to the target file."},{"label":"$sModule","documentation":"The path to the module containing string resource that specifies the localized version of the file name."},{"label":"$iResID","documentation":"ID of the localized file name resource."}]},"_WinAPI_ShellSetSettings":{"documentation":"Sets Shell state settings","label":"_WinAPI_ShellSetSettings ( $iFlags, $bSet )","params":[{"label":"$iFlags","documentation":"The flags that indicate which settings should be set. This parameter can be one ormore of the following values (use ONLY this flags).$SSF_SHOWALLOBJECTS$SSF_SHOWEXTENSIONS$SSF_SHOWCOMPCOLOR$SSF_SHOWSYSFILES$SSF_DOUBLECLICKINWEBVIEW$SSF_DESKTOPHTML$SSF_WIN95CLASSIC$SSF_DONTPRETTYPATH$SSF_MAPNETDRVBUTTON$SSF_SHOWINFOTIP$SSF_HIDEICONS$SSF_NOCONFIRMRECYCLE$SSF_WEBVIEW$SSF_SHOWSUPERHIDDEN$SSF_SEPPROCESS$SSF_NONETCRAWLING$SSF_STARTPANELONWindows Vista or later$SSF_AUTOCHECKSELECT$SSF_ICONSONLY$SSF_SHOWTYPEOVERLAY"},{"label":"$bSet","documentation":"Specifies whether a settings ($SSF_*) is enable or disable, valid values:True - Enable.False - Disable."}]},"_WinAPI_ShellStartNetConnectionDlg":{"documentation":"Displays a general browsing dialog box for a network resource connection","label":"_WinAPI_ShellStartNetConnectionDlg ( [$sRemote = \'\' [, $iFlags = 0 [, $hParent = 0]]] )","params":[{"label":"$sRemote","documentation":"**[optional]** The remote network name."},{"label":"$iFlags","documentation":"**[optional]** The flags that identify the type of resource that the dialog is set to find. This parameter can beone or more of the following values."},{"label":"$hParent","documentation":"**[optional]** Handle of the parent window."}]},"_WinAPI_ShellUpdateImage":{"documentation":"Notifies the Shell that an image in the system image list has changed","label":"_WinAPI_ShellUpdateImage ( $sIcon, $iIndex, $iImage [, $iFlags = 0] )","params":[{"label":"$sIcon","documentation":"The fully qualified path of the file that contains the icon."},{"label":"$iIndex","documentation":"The 0-based index of the icon."},{"label":"$iImage","documentation":"The 0-based index in the system image list of the icon that is being updated."},{"label":"$iFlags","documentation":"**[optional]** The flags that determine the icon attributes. It can be 0 or a combination of the following values.    $GIL_NOTFILENAME    $GIL_SIMULATEDOC"}]},"_WinAPI_ShellUserAuthenticationDlg":{"documentation":"Creates and displays a configurable dialog box that accepts credentials information from a user","label":"_WinAPI_ShellUserAuthenticationDlg ( $sCaption, $sMessage, $sUser, $sPassword, $sTarget [, $iFlags = 0 [, $iError = 0 [, $bSave = False [, $hBitmap = 0 [, $hParent = 0]]]]] )","params":[{"label":"$sCaption","documentation":"The title for the dialog box."},{"label":"$sMessage","documentation":"A brief message to display in the dialog box."},{"label":"$sUser","documentation":"The user name to populate the credential fields in the dialog box. For domain users, the string mustbe in the following format (if domain is not specified, the trget string is used as the domain):DomainName\\\\UserName"},{"label":"$sPassword","documentation":"The initial password."},{"label":"$sTarget","documentation":"The name of the target, typically a server name. This parameter is used to identify target informationwhen storing and retrieving credentials."},{"label":"$iFlags","documentation":"**[optional]** The flags that specifies behavior for this function. It can be a bitwise-OR combination of zeroor more of the following values.$CREDUI_FLAGS_ALWAYS_SHOW_UI$CREDUI_FLAGS_COMPLETE_USERNAME$CREDUI_FLAGS_DO_NOT_PERSIST$CREDUI_FLAGS_EXCLUDE_CERTIFICATES$CREDUI_FLAGS_EXPECT_CONFIRMATION$CREDUI_FLAGS_GENERIC_CREDENTIALS$CREDUI_FLAGS_INCORRECT_PASSWORD$CREDUI_FLAGS_KEEP_USERNAME$CREDUI_FLAGS_PASSWORD_ONLY_OK$CREDUI_FLAGS_PERSIST$CREDUI_FLAGS_REQUEST_ADMINISTRATOR$CREDUI_FLAGS_REQUIRE_CERTIFICATE$CREDUI_FLAGS_REQUIRE_SMARTCARD$CREDUI_FLAGS_SERVER_CREDENTIAL$CREDUI_FLAGS_SHOW_SAVE_CHECK_BOX$CREDUI_FLAGS_USERNAME_TARGET_CREDENTIALS$CREDUI_FLAGS_VALIDATE_USERNAME"},{"label":"$iError","documentation":"**[optional]** The system error code that specifies why the credential dialog box is needed."},{"label":"$bSave","documentation":"**[optional]** Specifies whether the \\"Save\\" check box is selected in the dialog box (it makes sense only if the$CREDUI_FLAGS_SHOW_SAVE_CHECK_BOX flag is used), valid values:    True  - Selected.    False - Deselected (Default)."},{"label":"$hBitmap","documentation":"**[optional]** A bitmap handle to display in the dialog box. If this parameter is 0, the default bitmap is used.The bitmap size is limited to 320x60 pixels."},{"label":"$hParent","documentation":"**[optional]** The dialog box is modal with respect to the parent window. If this parameter is 0, the desktopis the parent window of the dialog box."}]},"_WinAPI_ShellUserAuthenticationDlgEx":{"documentation":"Creates and displays a configurable dialog box that accepts credentials information from a user","label":"_WinAPI_ShellUserAuthenticationDlgEx ( $sCaption, $sMessage, $sUser, $sPassword [, $iFlags = 0 [, $iAuthError = 0 [, $bSave = False [, $iPackage = 0 [, $hParent = 0]]]]] )","params":[{"label":"$sCaption","documentation":"The title for the dialog box."},{"label":"$sMessage","documentation":"A brief message to display in the dialog box."},{"label":"$sUser","documentation":"The user name to populate the credential fields in the dialog box. For domain users, the string mustbe in the following format:DomainName\\\\UserName"},{"label":"$sPassword","documentation":"The initial password."},{"label":"$iFlags","documentation":"**[optional]** The flags that specifies behavior for this function. It can be a combination of the following values.$CREDUIWIN_AUTHPACKAGE_ONLY$CREDUIWIN_CHECKBOX$CREDUIWIN_ENUMERATE_ADMINS$CREDUIWIN_ENUMERATE_CURRENT_USER$CREDUIWIN_GENERIC$CREDUIWIN_IN_CRED_ONLY$CREDUIWIN_SECURE_PROMPT$CREDUIWIN_PACK_32_WOW$CREDUIWIN_PREPROMPTING"},{"label":"$iAuthError","documentation":"**[optional]** The system error code that is displayed in the dialog box."},{"label":"$bSave","documentation":"**[optional]** Specifies whether the \\"Save\\" check box is selected in the dialog box (it makes sense only if the$CREDUIWIN_CHECKBOX flag is used), valid values:True  - Selected. False - Deselected (Default)."},{"label":"$iPackage","documentation":"**[optional]** The authentication package for which the credentials are serialized."},{"label":"$hParent","documentation":"**[optional]** The dialog box is modal with respect to the parent window. If this parameter is 0 (Default), the desktopis the parent window of the dialog box."}]},"_WinAPI_ShortToWord":{"documentation":"Converts a value of type SHORT to a value of type WORD","label":"_WinAPI_ShortToWord ( $iValue )","params":[{"label":"$iValue","documentation":"The value to be converted."}]},"_WinAPI_ShowCaret":{"documentation":"Makes the caret visible on the screen at the caret\'s current position","label":"_WinAPI_ShowCaret ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the window that owns the caret. If this parameter is 0, _WinAPI_ShowCaret() searches thecurrent task for the window that owns the caret."}]},"_WinAPI_ShowCursor":{"documentation":"Displays or hides the cursor","label":"_WinAPI_ShowCursor ( $bShow )","params":[{"label":"$bShow","documentation":"If True, the cursor is shown, otherwise it is hidden"}]},"_WinAPI_ShowError":{"documentation":"Displays an error message box with an optional exit","label":"_WinAPI_ShowError ( $sText [, $bExit = True] )","params":[{"label":"$sText","documentation":"Error text to display"},{"label":"$bExit","documentation":"**[optional]** Specifies whether to exit after the display:True - Exit program after displayFalse - Return normally after display"}]},"_WinAPI_ShowLastError":{"documentation":"Shows the last error code and message","label":"_WinAPI_ShowLastError ( [$sText = \'\' [, $bAbort = False [, $iLanguage = 0]]] )","params":[{"label":"$sText","documentation":"**[optional]** The user\'s text that to be displayed with the message."},{"label":"$bAbort","documentation":"**[optional]** Specifies whether to exit the script after displaying an error message, valid values:True - Exit the script after displaying a message if it indicates an error.False - Always return normally (Default)."},{"label":"$iLanguage","documentation":"**[optional]** The language identifier for the message."}]},"_WinAPI_ShowMsg":{"documentation":"Displays an \\"Information\\" message box","label":"_WinAPI_ShowMsg ( $sText )","params":[{"label":"$sText","documentation":"\\"Information\\" text to display"}]},"_WinAPI_ShowOwnedPopups":{"documentation":"Shows or hides all pop-up windows owned by the specified window","label":"_WinAPI_ShowOwnedPopups ( $hWnd, $bShow )","params":[{"label":"$hWnd","documentation":"A handle to the window that owns the pop-up windows to be shown or hidden."},{"label":"$bShow","documentation":"Specifies whether pop-up windows are to be shown or hidden, valid values:    True - All hidden pop-up windows are shown.    False - All visible pop-up windows are hidden."}]},"_WinAPI_ShowWindow":{"documentation":"Sets the specified window\'s show state","label":"_WinAPI_ShowWindow ( $hWnd [, $iCmdShow = 5] )","params":[{"label":"$hWnd","documentation":"Handle of window"},{"label":"$iCmdShow","documentation":"**[optional]** Specifies how the window is to be shown:@SW_HIDE - Hides the window and activates another window@SW_MAXIMIZE - Maximizes the specified window@SW_MINIMIZE - Minimizes the specified window and activates the next top-level window in the Z order@SW_RESTORE - Activates and displays the window@SW_SHOW - Activates the window and displays it in its current size and position@SW_SHOWDEFAULT - Sets the show state based on the SW_ flag specified in the STARTUPINFO structure@SW_SHOWMAXIMIZED - Activates the window and displays it as a maximized window@SW_SHOWMINIMIZED - Activates the window and displays it as a minimized window@SW_SHOWMINNOACTIVE - Displays the window as a minimized window@SW_SHOWNA - Displays the window in its current state@SW_SHOWNOACTIVATE - Displays a window in its most recent size and position@SW_SHOWNORMAL - Activates and displays a window"}]},"_WinAPI_ShutdownBlockReasonCreate":{"documentation":"Indicates that the system cannot be shut down and sets a reason string to be displayed to the user if system shutdown is initiated","label":"_WinAPI_ShutdownBlockReasonCreate ( $hWnd, $sText )","params":[{"label":"$hWnd","documentation":"Handle to the main window of the application."},{"label":"$sText","documentation":"The string which explaining the reason the application must block system shutdown."}]},"_WinAPI_ShutdownBlockReasonDestroy":{"documentation":"Indicates that the system can be shut down and frees the reason string","label":"_WinAPI_ShutdownBlockReasonDestroy ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the main window of the application."}]},"_WinAPI_ShutdownBlockReasonQuery":{"documentation":"Retrieves the reason string set by the _WinAPI_ShutdownBlockReasonCreate() function","label":"_WinAPI_ShutdownBlockReasonQuery ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle to the main window of the application."}]},"_WinAPI_SizeOfResource":{"documentation":"Returns the size, in bytes, of the specified resource","label":"_WinAPI_SizeOfResource ( $hInstance, $hResource )","params":[{"label":"$hInstance","documentation":"Handle to the module whose executable file contains the resource."},{"label":"$hResource","documentation":"Handle to the resource. This handle must be created by using the _WinAPI_FindResource() or _WinAPI_FindResourceEx()function."}]},"_WinAPI_StretchBlt":{"documentation":"Copies a bitmap from a source rectangle into a destination rectangle, stretching or compressing the bitmap to fit the dimensions of the destination rectangle","label":"_WinAPI_StretchBlt ( $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iRop )","params":[{"label":"$hDestDC","documentation":"Handle to the destination device context."},{"label":"$iXDest","documentation":"The x-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iYDest","documentation":"The y-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iWidthDest","documentation":"The width, in logical units, of the destination rectangle."},{"label":"$iHeightDest","documentation":"The height, in logical units, of the destination rectangle."},{"label":"$hSrcDC","documentation":"Handle to the source device context."},{"label":"$iXSrc","documentation":"The x-coordinate, in logical units, of the upper-left corner of the source rectangle."},{"label":"$iYSrc","documentation":"The y-coordinate, in logical units, of the upper-left corner of the source rectangle."},{"label":"$iWidthSrc","documentation":"The width, in logical units, of the source rectangle."},{"label":"$iHeightSrc","documentation":"The height, in logical units, of the source rectangle."},{"label":"$iRop","documentation":"The raster-operation code. These codes define how the color data for the source rectangle isto be combined with the color data for the destination rectangle to achieve the final color.This parameter must be 0 or one of the following values.$BLACKNESS$CAPTUREBLT$DSTINVERT$MERGECOPY$MERGEPAINT$NOMIRRORBITMAP$NOTSRCCOPY$NOTSRCERASE$PATCOPY$PATINVERT$PATPAINT$SRCAND$SRCCOPY$SRCERASE$SRCINVERT$SRCPAINT$WHITENESS"}]},"_WinAPI_StretchDIBits":{"documentation":"Copies the color data for a rectangle of pixels in a DIB, JPEG, or PNG image to the specified destination rectangle, stretching or compressing the rows and columns by using the specified raster operation","label":"_WinAPI_StretchDIBits ( $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $tBITMAPINFO, $iUsage, $pBits, $iRop )","params":[{"label":"$hDestDC","documentation":"Handle to the destination device context."},{"label":"$iXDest","documentation":"The x-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iYDest","documentation":"The y-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iWidthDest","documentation":"The width, in logical units, of the destination rectangle."},{"label":"$iHeightDest","documentation":"The height, in logical units, of the destination rectangle."},{"label":"$iXSrc","documentation":"The x-coordinate, in pixels, of the source rectangle in the image."},{"label":"$iYSrc","documentation":"The y-coordinate, in pixels, of the source rectangle in the image."},{"label":"$iWidthSrc","documentation":"The width, in pixels, of the source rectangle in the image."},{"label":"$iHeightSrc","documentation":"The height, in pixels, of the source rectangle in the image."},{"label":"$tBITMAPINFO","documentation":"$tagBITMAPINFO structure that contains information about the DIB."},{"label":"$iUsage","documentation":"The type of colors used. (either logical palette indexes or literal RGB values).The following values are defined:    $DIB_PAL_COLORS    $DIB_RGB_COLORS"},{"label":"$pBits","documentation":"A pointer to the image bits, which are stored as an array of bytes."},{"label":"$iRop","documentation":"The raster-operation code that specifies how the source pixels, the destination device context\'scurrent brush, and the destination pixels are to be combined to form the new image.It must be 0 or one of the following values:    $BLACKNESS    $CAPTUREBLT    $DSTINVERT    $MERGECOPY    $MERGEPAINT    $NOMIRRORBITMAP    $NOTSRCCOPY    $NOTSRCERASE    $PATCOPY    $PATINVERT    $PATPAINT    $SRCAND    $SRCCOPY    $SRCERASE    $SRCINVERT    $SRCPAINT    $WHITENESS"}]},"_WinAPI_StrFormatByteSize":{"documentation":"Converts a numeric value into a string that represents the number expressed as a size value in bytes, kilobytes, megabytes, or gigabytes","label":"_WinAPI_StrFormatByteSize ( $iSize )","params":[{"label":"$iSize","documentation":"The numeric value to be converted."}]},"_WinAPI_StrFormatByteSizeEx":{"documentation":"Converts a numeric value into a string that represents the number expressed as separated groups of digits to the left of the decimal","label":"_WinAPI_StrFormatByteSizeEx ( $iSize )","params":[{"label":"$iSize","documentation":"The numeric value to be converted."}]},"_WinAPI_StrFormatKBSize":{"documentation":"Converts a numeric value into a string that represents the number expressed as a size value in kilobytes","label":"_WinAPI_StrFormatKBSize ( $iSize )","params":[{"label":"$iSize","documentation":"The numeric value to be converted."}]},"_WinAPI_StrFromTimeInterval":{"documentation":"Converts a time interval to a string","label":"_WinAPI_StrFromTimeInterval ( $iTime [, $iDigits = 7] )","params":[{"label":"$iTime","documentation":"The time interval, in milliseconds."},{"label":"$iDigits","documentation":"**[optional]** The maximum number of significant digits to be represented in converted string. Default is 7."}]},"_WinAPI_StringFromGUID":{"documentation":"Converts a binary GUID to string form","label":"_WinAPI_StringFromGUID ( $tGUID )","params":[{"label":"$tGUID","documentation":"A $tagGUID structure or a pointer to it"}]},"_WinAPI_StringLenA":{"documentation":"Calculates the size of ANSI string","label":"_WinAPI_StringLenA ( Const ByRef $tString )","params":[{"label":"$tString","documentation":"String Structure to process"}]},"_WinAPI_StringLenW":{"documentation":"Calculates the size of wide string","label":"_WinAPI_StringLenW ( Const ByRef $tString )","params":[{"label":"$tString","documentation":"String structure to process"}]},"_WinAPI_StrLen":{"documentation":"Returns the length of the specified string","label":"_WinAPI_StrLen ( $pString [, $bUnicode = True] )","params":[{"label":"$pString","documentation":"Pointer to a null-terminated string."},{"label":"$bUnicode","documentation":"**[optional]** Specifies whether a string is Unicode or ASCII code of a character, valid values:True - Unicode (Default). False - ASCII."}]},"_WinAPI_StrokeAndFillPath":{"documentation":"Closes any open figures in a path, strokes the outline of the path, and fills its interior","label":"_WinAPI_StrokeAndFillPath ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context."}]},"_WinAPI_StrokePath":{"documentation":"Renders the specified path by using the current pen","label":"_WinAPI_StrokePath ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to a device context that contains the completed path."}]},"_WinAPI_StructToArray":{"documentation":"Converts the structure to the array of strings","label":"_WinAPI_StructToArray ( $tStruct [, $iItems = 0] )","params":[{"label":"$tStruct","documentation":"The structure to convert. This structure should be same as for _WinAPI_ArrayToStruct()."},{"label":"$iItems","documentation":"**[optional]** The number of strings that contains the structure. If this parameter is 0 (Default), the end of the structuredetermined by a double null-terminated character (\\"... ;{0};{0}\\")."}]},"_WinAPI_SubLangId":{"documentation":"Extract sublanguage id from a language id","label":"_WinAPI_SubLangId ( $iLngID )","params":[{"label":"$iLngID","documentation":"Language id"}]},"_WinAPI_SubtractRect":{"documentation":"Determines the coordinates of a rectangle formed by subtracting one rectangle from another","label":"_WinAPI_SubtractRect ( $tRECT1, $tRECT2 )","params":[{"label":"$tRECT1","documentation":"$tagRECT structure from which the function subtracts the rectangle specified by $tRECT2."},{"label":"$tRECT2","documentation":"$tagRECT structure that the function subtracts from the rectangle specified by $tRECT1."}]},"_WinAPI_SwapDWord":{"documentation":"Converts a ULONG from little-endian to big-endian, and vice versa","label":"_WinAPI_SwapDWord ( $iValue )","params":[{"label":"$iValue","documentation":"The ULONG value to convert."}]},"_WinAPI_SwapQWord":{"documentation":"Converts a ULONGLONG from little-endian to big-endian, and vice versa","label":"_WinAPI_SwapQWord ( $iValue )","params":[{"label":"$iValue","documentation":"The ULONGLONG value to convert."}]},"_WinAPI_SwapWord":{"documentation":"Converts a USHORT from little-endian to big-endian, and vice versa","label":"_WinAPI_SwapWord ( $iValue )","params":[{"label":"$iValue","documentation":"The USHORT value to convert."}]},"_WinAPI_SwitchColor":{"documentation":"Converts a color from BGR to RGB and vice versa","label":"_WinAPI_SwitchColor ( $iColor )","params":[{"label":"$iColor","documentation":"The color to conversion."}]},"_WinAPI_SwitchDesktop":{"documentation":"Makes the specified desktop visible and activates it","label":"_WinAPI_SwitchDesktop ( $hDesktop )","params":[{"label":"$hDesktop","documentation":"Handle to the desktop. This desktop must be associated with the current window station for the process."}]},"_WinAPI_SwitchToThisWindow":{"documentation":"Switches the focus to a specified window and bring it to the foreground","label":"_WinAPI_SwitchToThisWindow ( $hWnd [, $bAltTab = False] )","params":[{"label":"$hWnd","documentation":"Handle to the window being switched to."},{"label":"$bAltTab","documentation":"**[optional]** Specifies whether switches to using the Alt/Ctl+Tab key sequence, valid values:    True - The window is being switched to using the Alt/Ctl+Tab key sequence.    False - Otherwise (Default)."}]},"_WinAPI_SystemParametersInfo":{"documentation":"Retrieves or sets the value of one of the system-wide parameters","label":"_WinAPI_SystemParametersInfo ( $iAction [, $iParam = 0 [, $vParam = 0 [, $iWinIni = 0]]] )","params":[{"label":"$iAction","documentation":"The system-wide parameter to be retrieved or set"},{"label":"$iParam","documentation":"**[optional]** A parameter whose usage and format depends on the parameter being queried or set"},{"label":"$vParam","documentation":"**[optional]** A parameter whose usage and format depends on the parameter being queried or set"},{"label":"$iWinIni","documentation":"**[optional]** If a system parameter is being set, specifies whether the user profile is to be updated, andif so, whether the $WM_SETTINGCHANGE message is to be broadcast. This parameter can be zero if you don\'t wantto update the user profile or it can be one or more of the following values:$SPIF_UPDATEINIFILE - Writes the new setting to the user profile$SPIF_SENDCHANGE - Broadcasts the $WM_SETTINGCHANGE message after updating the user profile"}]},"_WinAPI_TabbedTextOut":{"documentation":"Writes a character string at a specified location and expanding tabs to the specified tab-stop positions","label":"_WinAPI_TabbedTextOut ( $hDC, $iX, $iY, $sText [, $aTab = 0 [, $iStart = 0 [, $iEnd = -1 [, $iOrigin = 0]]]] )","params":[{"label":"$hDC","documentation":"A handle to the device context."},{"label":"$iX","documentation":"The x-coordinate of the starting point of the string, in logical units."},{"label":"$iY","documentation":"The y-coordinate of the starting point of the string, in logical units."},{"label":"$sText","documentation":"The character string to draw."},{"label":"$aTab","documentation":"**[optional]** The array containing the tab-stop positions, in logical units. The tab stops must be sorted in increasingorder; the smallest x-value should be the first item in the array. Also, it can be an integer value that isone tab-stop position. In this case, the tab stops are separated by the distance specified by this value.If this parameter is 0, tabs are expanded to eight times the average character width."},{"label":"$iStart","documentation":"**[optional]** The index of array element that contains the first tab-stop position."},{"label":"$iEnd","documentation":"**[optional]** The index of array element that contains the last tab-stop position."},{"label":"$iOrigin","documentation":"**[optional]** The x-coordinate of the starting position from which tabs are expanded, in logical units. This allowsan application to call the function several times for a single line. If the application calls the functionmore than once with the starting position set to the same value each time, the function expandsall tabs relative to the position specified by this parameter."}]},"_WinAPI_TerminateJobObject":{"documentation":"Terminates all processes currently associated with the job","label":"_WinAPI_TerminateJobObject ( $hJob [, $iExitCode = 0] )","params":[{"label":"$hJob","documentation":"A handle to the job whose processes will be terminated. This handle must have the $JOB_OBJECT_TERMINATEaccess right. Furthermore, the handle for each process in the job object must have the$PROCESS_TERMINATE access right."},{"label":"$iExitCode","documentation":"**[optional]** The exit code to be used by all processes and threads in the job object."}]},"_WinAPI_TerminateProcess":{"documentation":"Terminates the specified process and all of its threads","label":"_WinAPI_TerminateProcess ( $hProcess [, $iExitCode = 0] )","params":[{"label":"$hProcess","documentation":"A handle to the process to be terminated. The handle must have the $PROCESS_TERMINATE access right."},{"label":"$iExitCode","documentation":"**[optional]** The exit code to be used by the process and threads terminated as a result of this call."}]},"_WinAPI_TextOut":{"documentation":"Writes a string at the specified location, using the currently selected font, background color, and text color","label":"_WinAPI_TextOut ( $hDC, $iX, $iY, $sText )","params":[{"label":"$hDC","documentation":"Handle to the device context."},{"label":"$iX","documentation":"The x-coordinate, in logical coordinates, of the reference point that the system uses to align the string."},{"label":"$iY","documentation":"The y-coordinate, in logical coordinates, of the reference point that the system uses to align the string."},{"label":"$sText","documentation":"The string to be drawn."}]},"_WinAPI_TileWindows":{"documentation":"Tiles the specified child windows of the specified parent window","label":"_WinAPI_TileWindows ( $aWnds [, $tRECT = 0 [, $hParent = 0 [, $iFlags = 0 [, $iStart = 0 [, $iEnd = -1]]]]] )","params":[{"label":"$aWnds","documentation":"The array of handles to the child windows to arrange. If a specified child window is a top-level windowwith the style $WS_EX_TOPMOST or $WS_EX_TOOLWINDOW, the child window is not arranged. If this parameteris 0, all child windows of the specified parent window (or of the desktop window) are arranged."},{"label":"$tRECT","documentation":"**[optional]** $tagRECT structure that specifies the rectangular area, in client coordinates, within which the windowsare arranged. If this parameter is 0 (Default), the client area of the parent window is used."},{"label":"$hParent","documentation":"**[optional]** Handle to the parent window. If this parameter is 0 (Default), the desktop window is assumed."},{"label":"$iFlags","documentation":"**[optional]** A cascade flag. This parameter can be one or more of the following values.$MDITILE_HORIZONTAL$MDITILE_VERTICAL (Default)"},{"label":"$iStart","documentation":"**[optional]** The index of array to start arranging at."},{"label":"$iEnd","documentation":"**[optional]** The index of array to stop arranging at."}]},"_WinAPI_TrackMouseEvent":{"documentation":"Posts messages when the mouse pointer leaves a window or hovers over a window for a specified amount of time","label":"_WinAPI_TrackMouseEvent ( $hWnd, $iFlags [, $iTime = -1] )","params":[{"label":"$hWnd","documentation":"Handle to the window to track."},{"label":"$iFlags","documentation":"The services requested. This parameter can be a combination of the following values.$TME_CANCEL$TME_HOVER$TME_LEAVE$TME_NONCLIENT$TME_QUERY"},{"label":"$iTime","documentation":"**[optional]** The hover time-out (if $TME_HOVER was specified in $Flags), in milliseconds. Can be (-1) (Default), whichmeans to use the system default hover time-out."}]},"_WinAPI_TransparentBlt":{"documentation":"Performs a bit-block transfer of the color data corresponding to a rectangle of pixels","label":"_WinAPI_TransparentBlt ( $hDestDC, $iXDest, $iYDest, $iWidthDest, $iHeightDest, $hSrcDC, $iXSrc, $iYSrc, $iWidthSrc, $iHeightSrc, $iRGB )","params":[{"label":"$hDestDC","documentation":"Handle to the destination device context."},{"label":"$iXDest","documentation":"The x-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iYDest","documentation":"The y-coordinate, in logical units, of the upper-left corner of the destination rectangle."},{"label":"$iWidthDest","documentation":"The width, in logical units, of the destination rectangle."},{"label":"$iHeightDest","documentation":"The height, in logical units, of the destination rectangle."},{"label":"$hSrcDC","documentation":"Handle to the source device context."},{"label":"$iXSrc","documentation":"The x-coordinate, in logical units, of the upper-left corner of the source rectangle."},{"label":"$iYSrc","documentation":"The y-coordinate, in logical units, of the upper-left corner of the source rectangle."},{"label":"$iWidthSrc","documentation":"The width, in logical units, of the source rectangle."},{"label":"$iHeightSrc","documentation":"The height, in logical units, of the source rectangle."},{"label":"$iRGB","documentation":"The RGB color in the source bitmap to treat as transparent."}]},"_WinAPI_TwipsPerPixelX":{"documentation":"Returns the width of a pixel, in twips","label":"_WinAPI_TwipsPerPixelX (  )","params":[]},"_WinAPI_TwipsPerPixelY":{"documentation":"Returns the height of a pixel, in twips","label":"_WinAPI_TwipsPerPixelY (  )","params":[]},"_WinAPI_UnhookWindowsHookEx":{"documentation":"Removes a hook procedure installed in a hook chain by the _WinAPI_SetWindowsHookEx function","label":"_WinAPI_UnhookWindowsHookEx ( $hHook )","params":[{"label":"$hHook","documentation":"Handle to the hook to be removed"}]},"_WinAPI_UnhookWinEvent":{"documentation":"Removes an event hook function","label":"_WinAPI_UnhookWinEvent ( $hEventHook )","params":[{"label":"$hEventHook","documentation":"Handle to the event hook returned in the previous call to _WinAPI_SetWinEventHook()."}]},"_WinAPI_UnionRect":{"documentation":"Creates the union of two rectangles","label":"_WinAPI_UnionRect ( $tRECT1, $tRECT2 )","params":[{"label":"$tRECT1","documentation":"$tagRECT structure that contains the first source rectangle."},{"label":"$tRECT2","documentation":"$tagRECT structure that contains the second source rectangle."}]},"_WinAPI_UnionStruct":{"documentation":"Creates the structure of two structures","label":"_WinAPI_UnionStruct ( $tStruct1, $tStruct2 [, $sStruct = \'\'] )","params":[{"label":"$tStruct1","documentation":"The structure that contains the first source data."},{"label":"$tStruct2","documentation":"The structure that contains the second source data."},{"label":"$sStruct","documentation":"**[optional]** The string representing the final structure (same as for the DllStructCreate() function)."}]},"_WinAPI_UniqueHardwareID":{"documentation":"Generates a unique hardware identifier (ID) for local computer","label":"_WinAPI_UniqueHardwareID ( [$iFlags = 0] )","params":[{"label":"$iFlags","documentation":"**[optional]** The flags that specifies what information would be used to generate ID. This parameter can be one or more of the following values.$UHID_MB - Uses information about your motherboard. This flag is used by default regardless of whether specified or not.$UHID_BIOS - Uses information from BIOS.$UHID_CPU - Uses information about your processor(s). Note that $UHID_CPU flag reduces the function speed.$UHID_HDD - Uses information about the installed hard drives. Any change in the configuration disks will change ID returned by this function. Taken into account only non-removable disks with an ATA or SATA interfaces.$UHID_All - The sum of all the previous flags."}]},"_WinAPI_UnloadKeyboardLayout":{"documentation":"Unloads an input locale identifier","label":"_WinAPI_UnloadKeyboardLayout ( $hLocale )","params":[{"label":"$hLocale","documentation":"The input locale identifier to be unloaded."}]},"_WinAPI_UnlockFile":{"documentation":"Unlocks a region in an open file","label":"_WinAPI_UnlockFile ( $hFile, $iOffset, $iLength )","params":[{"label":"$hFile","documentation":"Handle to the file that contains a region locked with _WinAPI_LockFile() function."},{"label":"$iOffset","documentation":"The starting byte offset in the file where the locked region begins."},{"label":"$iLength","documentation":"The length of the byte range to be unlocked."}]},"_WinAPI_UnmapViewOfFile":{"documentation":"Unmaps a mapped view of a file from the calling process\'s address space","label":"_WinAPI_UnmapViewOfFile ( $pAddress )","params":[{"label":"$pAddress","documentation":"A pointer to the base address of the mapped view of a file that is to be unmapped.This value must be identical to the value returned by a previous call to the _WinAPI_MapViewOfFile() function."}]},"_WinAPI_UnregisterApplicationRestart":{"documentation":"Removes the active instance of an application from the restart list","label":"_WinAPI_UnregisterApplicationRestart (  )","params":[]},"_WinAPI_UnregisterClass":{"documentation":"Unregisters a window class, freeing the memory required for the class","label":"_WinAPI_UnregisterClass ( $sClass [, $hInstance = 0] )","params":[{"label":"$sClass","documentation":"A null-terminated string or a class atom. If $sClass is a string, it specifies the window classname. This class name must have been registered by a previous call to the _WinAPI_RegisterClass()or _WinAPI_RegisterClassEx() function. If this parameter is an atom, it must be in the low-orderword of $sClass; the high-order word must be zero."},{"label":"$hInstance","documentation":"**[optional]** Handle to the instance of the module that created the class."}]},"_WinAPI_UnregisterHotKey":{"documentation":"Frees a hot key previously registered by the calling thread","label":"_WinAPI_UnregisterHotKey ( $hWnd, $iID )","params":[{"label":"$hWnd","documentation":"Handle to the window associated with the hot key to be freed. This parameter should be 0 if thehot key is not associated with a window."},{"label":"$iID","documentation":"Specifies the identifier of the hot key to be freed."}]},"_WinAPI_UnregisterPowerSettingNotification":{"documentation":"Unregisters the power setting notification","label":"_WinAPI_UnregisterPowerSettingNotification ( $hNotify )","params":[{"label":"$hNotify","documentation":"Handle returned from the _WinAPI_RegisterPowerSettingNotification() function."}]},"_WinAPI_UpdateLayeredWindow":{"documentation":"Updates the position, size, shape, content, and translucency of a layered window","label":"_WinAPI_UpdateLayeredWindow ( $hWnd, $hDestDC, $tPTDest, $tSize, $hSrcDC, $tPTSrce, $iRGB, $tBlend, $iFlags )","params":[{"label":"$hWnd","documentation":"Handle to a layered window. A layered window is created by specifying $WS_EX_LAYERED when creating the window."},{"label":"$hDestDC","documentation":"Handle to a device context for the screen"},{"label":"$tPTDest","documentation":"A $tagPOINT structure or a pointer to it that specifies the new screen position of the layered window.If the current position is not changing, this can be zero."},{"label":"$tSize","documentation":"A $tagSIZE structure or a pointer to it that specifies the new size of the layered window.If the size of the window is not changing, this can be 0."},{"label":"$hSrcDC","documentation":"Handle to a device context for the surface that defines the layered window.This handle can be obtained by calling the _WinAPI_CreateCompatibleDC() function."},{"label":"$tPTSrce","documentation":"A $tagPOINT structure or a pointer to it that specifies the location of the layer in the device context"},{"label":"$iRGB","documentation":"The color key to be used when composing the layered window"},{"label":"$tBlend","documentation":"A $tagBLENDFUNCTION structure or a pointer to it that specifies the transparency value to be used when composing the layered window."},{"label":"$iFlags","documentation":"This parameter can be one of the following values.    $ULW_ALPHA - Use $tblend as the blend function    $ULW_COLORKEY - Use $iRGB as the transparency color    $ULW_OPAQUE - Draw an opaque layered window"}]},"_WinAPI_UpdateLayeredWindowEx":{"documentation":"Updates a bitmap translucency of a layered window","label":"_WinAPI_UpdateLayeredWindowEx ( $hWnd, $iX, $iY, $hBitmap [, $iOpacity = 255 [, $bDelete = False]] )","params":[{"label":"$hWnd","documentation":"Handle to a layered window. A layered window is created by specifying $WS_EX_LAYERED when its creating."},{"label":"$iX","documentation":"The new position of the left side of the window."},{"label":"$iY","documentation":"The new position of the top of the window."},{"label":"$hBitmap","documentation":"Handle to the bitmap that will be set to the layered window."},{"label":"$iOpacity","documentation":"**[optional]** The alpha transparency value to be used on the entire source bitmap. Default is 255."},{"label":"$bDelete","documentation":"**[optional]** Specifies whether to delete the bitmap after updated the window, valid values:    True - Bitmap will be deleted if the function succeeds.    False - Do not delete, you must release the bitmap when you are finished using it (Default)."}]},"_WinAPI_UpdateLayeredWindowIndirect":{"documentation":"Updates the position, size, shape, content, and translucency of a layered window","label":"_WinAPI_UpdateLayeredWindowIndirect ( $hWnd, $tULWINFO )","params":[{"label":"$hWnd","documentation":"Handle to a layered window. A layered window is created by specifying $WS_EX_LAYERED when its creating."},{"label":"$tULWINFO","documentation":"$tagUPDATELAYEREDWINDOWINFO structure that contains the information for the window."}]},"_WinAPI_UpdateResource":{"documentation":"Adds, deletes, or replaces a resource in a portable executable (PE) file","label":"_WinAPI_UpdateResource ( $hUpdate, $sType, $sName, $iLanguage, $pData, $iSize )","params":[{"label":"$hUpdate","documentation":"A module handle returned by the _WinAPI_BeginUpdateResource(), referencing the file to be updated."},{"label":"$sType","documentation":"The resource type to be updated. Alternatively, rather than a pointer, this parameter can be aninteger value representing a predefined resource type. If the first character of the string is apound sign (#), then the remaining characters represent a decimal number that specifies the integeridentifier of the resource type. For example, the string \\"#258\\" represents the identifier 258.Also, you can use a predefined resource types ($RT_*)."},{"label":"$sName","documentation":"The name of the resource to be updated. This parameter can be string or integer value."},{"label":"$iLanguage","documentation":"The language identifier of the resource."},{"label":"$pData","documentation":"The resource data to be inserted into the file indicated by $hUpdate parameter. If the resource isone of the predefined types, the data must be valid and properly aligned. Note that this is the rawbinary data, not the data provided by _WinAPI_LoadIcon(), _WinAPI_LoadString(), or other resource-specific load functions. All data containing strings or text must be in Unicode format. If $pDatais 0 and $iSize is 0, the specified resource is deleted from the file indicated by $hUpdate."},{"label":"$iSize","documentation":"The size, in bytes, of the resource data at $pData."}]},"_WinAPI_UpdateWindow":{"documentation":"Updates the client area of a window by sending a WM_PAINT message to the window","label":"_WinAPI_UpdateWindow ( $hWnd )","params":[{"label":"$hWnd","documentation":"Handle of window to update"}]},"_WinAPI_UrlApplyScheme":{"documentation":"Determines a scheme for a specified URL string, and returns a string with an appropriate prefix","label":"_WinAPI_UrlApplyScheme ( $sUrl [, $iFlags = 1] )","params":[{"label":"$sUrl","documentation":"The URL."},{"label":"$iFlags","documentation":"**[optional]** The flags that specify how to determine the scheme. It can be a combination of the following values.$URL_APPLY_DEFAULT (Default)$URL_APPLY_GUESSSCHEME$URL_APPLY_GUESSFILE$URL_APPLY_FORCEAPPLY"}]},"_WinAPI_UrlCanonicalize":{"documentation":"Converts a URL string into canonical form","label":"_WinAPI_UrlCanonicalize ( $sUrl, $iFlags )","params":[{"label":"$sUrl","documentation":"The URL."},{"label":"$iFlags","documentation":"The flags that specify how the URL is to be converted. It can be a combination of the following values.    $URL_DONT_SIMPLIFY    $URL_ESCAPE_PERCENT    $URL_ESCAPE_SPACES_ONLY    $URL_ESCAPE_UNSAFE    $URL_NO_META    $URL_PLUGGABLE_PROTOCOL    $URL_UNESCAPEWindows 7 or later    $URL_ESCAPE_AS_UTF8"}]},"_WinAPI_UrlCombine":{"documentation":"Combines the base an relative URLs in canonical form","label":"_WinAPI_UrlCombine ( $sUrl, $sPart [, $iFlags = 0] )","params":[{"label":"$sUrl","documentation":"The base URL."},{"label":"$sPart","documentation":"The relative URL."},{"label":"$iFlags","documentation":"**[optional]** The flags that specify how the URL is to be converted. It can be a combination of the following values.    $URL_DONT_SIMPLIFY    $URL_ESCAPE_PERCENT    $URL_ESCAPE_SPACES_ONLY    $URL_ESCAPE_UNSAFE    $URL_NO_META    $URL_PLUGGABLE_PROTOCOL    $URL_UNESCAPEWindows 7 or later    $URL_ESCAPE_AS_UTF8"}]},"_WinAPI_UrlCompare":{"documentation":"Makes a case-sensitive comparison of two URL strings","label":"_WinAPI_UrlCompare ( $sUrl1, $sUrl2 [, $bIgnoreSlash = False] )","params":[{"label":"$sUrl1","documentation":"The first URL."},{"label":"$sUrl2","documentation":"The second URL."},{"label":"$bIgnoreSlash","documentation":"**[optional]** Specifies whether to ignore a trailing \'/\' character on either or both URLs, valid values:    True - The function ignores a trailing characters.    False - The function takes into account the trailing characters (Default)."}]},"_WinAPI_UrlCreateFromPath":{"documentation":"Converts a Microsoft MS-DOS path to a canonicalized URL","label":"_WinAPI_UrlCreateFromPath ( $sFilePath )","params":[{"label":"$sFilePath","documentation":"The MS-DOS path."}]},"_WinAPI_UrlFixup":{"documentation":"Attempts to correct a URL whose protocol identifier is incorrect","label":"_WinAPI_UrlFixup ( $sUrl )","params":[{"label":"$sUrl","documentation":"The URL to be corrected."}]},"_WinAPI_UrlGetPart":{"documentation":"Retrieves a specified part from the URL","label":"_WinAPI_UrlGetPart ( $sUrl, $iPart )","params":[{"label":"$sUrl","documentation":"The URL."},{"label":"$iPart","documentation":"The part of the URL to retrieve. It can be one of the following values.$URL_PART_HOSTNAME$URL_PART_PASSWORD$URL_PART_PORT$URL_PART_QUERY$URL_PART_SCHEME$URL_PART_USERNAME"}]},"_WinAPI_UrlHash":{"documentation":"Hashes a URL string","label":"_WinAPI_UrlHash ( $sUrl [, $iLength = 32] )","params":[{"label":"$sUrl","documentation":"The URL."},{"label":"$iLength","documentation":"**[optional]** The length of the hash data, in bytes. It should be no larger than 256, otherwise, the function fails. Default is 32."}]},"_WinAPI_UrlIs":{"documentation":"Tests whether or not a URL is a specified type","label":"_WinAPI_UrlIs ( $sUrl [, $iType = 0] )","params":[{"label":"$sUrl","documentation":"The URL."},{"label":"$iType","documentation":"**[optional]** The type of URL to be tested for. It can be one of the following values.$URLIS_APPLIABLE$URLIS_DIRECTORY$URLIS_FILEURL$URLIS_HASQUERY$URLIS_NOHISTORY$URLIS_OPAQUE$URLIS_URL (Default)"}]},"_WinAPI_UserHandleGrantAccess":{"documentation":"Grants or denies access to a handle to a User object to a job that has a user-interface restriction","label":"_WinAPI_UserHandleGrantAccess ( $hObject, $hJob, $bGrant )","params":[{"label":"$hObject","documentation":"Handle to the User object."},{"label":"$hJob","documentation":"Handle to the job to be granted access to the User handle."},{"label":"$bGrant","documentation":"Specifies whether to grant or deny access to the User handle, valid values:True - The processes associated with the job can recognize and use the handle.False - The processes cannot use the handle."}]},"_WinAPI_ValidateRect":{"documentation":"Removes a rectangle from the current update region of the specified window","label":"_WinAPI_ValidateRect ( $hWnd [, $tRECT = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the window whose update region is to be modified. If this parameter is 0, the systeminvalidates and redraws all windows and sends the WM_ERASEBKGND and WM_NCPAINT messages to the windowprocedure before the function returns."},{"label":"$tRECT","documentation":"**[optional]** $tagRECT structure that contains the client coordinates of the rectangle to be removed from theupdate region. If this parameter is 0 (Default), the entire client area is removed."}]},"_WinAPI_ValidateRgn":{"documentation":"Removes a region from the current update region of the specified window","label":"_WinAPI_ValidateRgn ( $hWnd [, $hRgn = 0] )","params":[{"label":"$hWnd","documentation":"Handle to the window whose update region is to be modified."},{"label":"$hRgn","documentation":"**[optional]** Handle to a region that defines the area to be removed from the update region. If this parameter is 0 (Default),the entire client area is removed."}]},"_WinAPI_VerQueryRoot":{"documentation":"Retrieves the fixed version information from the specified version-information resource","label":"_WinAPI_VerQueryRoot ( $pData )","params":[{"label":"$pData","documentation":"A pointer to the buffer that contains the version-information resource returned by the_WinAPI_GetFileVersionInfo() function."}]},"_WinAPI_VerQueryValue":{"documentation":"Retrieves the non-fixed (strings) version information from the specified version-information resource","label":"_WinAPI_VerQueryValue ( $pData [, $sValues = \'\'] )","params":[{"label":"$pData","documentation":"A pointer to the buffer that contains the version-information resource returned by the_WinAPI_GetFileVersionInfo() function."},{"label":"$sValues","documentation":"**[optional]** The string containing the field names for which you want to get values. The names must be separated by a \\"|\\".For example, \\"name1|name2|...|namei\\". If some fields do not exist, the corresponding array elements is an empty string.If this parameter is not specified (empty string), uses the reserved names (12) in the following sequence:    $FV_COMMENTS (\\"Comments\\")    $FV_COMPANYNAME (\\"CompanyName\\")    $FV_FILEDESCRIPTION (\\"FileDescription\\")    $FV_FILEVERSION (\\"FileVersion\\")    $FV_INTERNALNAME (\\"InternalName\\")    $FV_LEGALCOPYRIGHT (\\"LegalCopyright\\")    $FV_LEGALTRADEMARKS (\\"LegalTrademarks\\")    $FV_ORIGINALFILENAME (\\"OriginalFilename\\")    $FV_PRODUCTNAME (\\"ProductName\\")    $FV_PRODUCTVERSION (\\"ProductVersion\\")    $FV_PRIVATEBUILD (\\"PrivateBuild\\")    $FV_SPECIALBUILD (\\"SpecialBuild\\")Constants are defined in FileConstants.au3."}]},"_WinAPI_VerQueryValueEx":{"documentation":"Retrieves the text information from the version-information resource of the specified binary module","label":"_WinAPI_VerQueryValueEx ( $hModule [, $sValues = \'\' [, $iLanguage = 0x0400]] )","params":[{"label":"$hModule","documentation":"The handle to a module to retrieve information. Also, this parameter can specify the name of themodule to load, it must be a full or relative path. If this parameter is 0 or an empty string, that isequivalent to passing in a handle to the module used to create the current process."},{"label":"$sValues","documentation":"**[optional]** The string containing the field names for which you want to get values. The names must be separated by a \\"|\\".For example, \\"name1|name2|...|namei\\". If some fields do not exist, the corresponding array elements is an empty string.If this parameter is not specified (empty string), uses the reserved names (12) in the following sequence:    $FV_COMMENTS (\\"Comments\\")    $FV_COMPANYNAME (\\"CompanyName\\")    $FV_FILEDESCRIPTION (\\"FileDescription\\")    $FV_FILEVERSION (\\"FileVersion\\")    $FV_INTERNALNAME (\\"InternalName\\")    $FV_LEGALCOPYRIGHT (\\"LegalCopyright\\")    $FV_LEGALTRADEMARKS (\\"LegalTrademarks\\")    $FV_ORIGINALFILENAME (\\"OriginalFilename\\")    $FV_PRODUCTNAME (\\"ProductName\\")    $FV_PRODUCTVERSION (\\"ProductVersion\\")    $FV_PRIVATEBUILD (\\"PrivateBuild\\")    $FV_SPECIALBUILD (\\"SpecialBuild\\")Constants are defined in FileConstants.au3."},{"label":"$iLanguage","documentation":"**[optional]** The language identifier of the version-information resource of interest. To retrieve information foruser default language set this parameter to $LOCALE_USER_DEFAULT (Default). To retrieve information for alllanguages that are located in the resource set this parameter to (-1)."}]},"_WinAPI_WaitForInputIdle":{"documentation":"Waits until a process is waiting for user input with no input pending, or a time out","label":"_WinAPI_WaitForInputIdle ( $hProcess [, $iTimeout = -1] )","params":[{"label":"$hProcess","documentation":"A handle to the process. If this process is a console application or does not have a messagequeue, this function returns immediately."},{"label":"$iTimeOut","documentation":"**[optional]** The time out interval, in milliseconds. If set to -1, the function does not return until theprocess is idle."}]},"_WinAPI_WaitForMultipleObjects":{"documentation":"Waits until one or all of the specified objects are in the signaled state","label":"_WinAPI_WaitForMultipleObjects ( $iCount, $paHandles [, $bWaitAll = False [, $iTimeout = -1]] )","params":[{"label":"$iCount","documentation":"The number of object handles in the array pointed to by $paHandles"},{"label":"$paHandles","documentation":"Pointer to an array of object handles"},{"label":"$bWaitAll","documentation":"**[optional]** If True, the function returns when the state of all objects in the $paHandles array is signaled.If False, the function returns when the state of any one of the objects is set to signaled.In the latter case, the return value indicates the object whose state caused the function to return."},{"label":"$iTimeout","documentation":"**[optional]** The time-out interval, in milliseconds.The function returns if the interval elapses, even if the conditions specified by the $bWaitAll parameter are not met.If 0, the function tests the states of the specified objects and returns immediately.If -1, the function\'s time-out interval never elapses."}]},"_WinAPI_WaitForSingleObject":{"documentation":"Waits until the specified object is in the signaled state","label":"_WinAPI_WaitForSingleObject ( $hHandle [, $iTimeout = -1] )","params":[{"label":"$hHandle","documentation":"A handle to the object"},{"label":"$iTimeout","documentation":"**[optional]** The time-out interval, in milliseconds. The function returns if the interval elapses, even ifthe conditions specified by the fWaitAll parameter are not met. If 0, the function tests the states of thespecified objects and returns immediately. If -1, the function\'s time-out interval never elapses."}]},"_WinAPI_WideCharToMultiByte":{"documentation":"Converts a Unicode string to a multibyte string","label":"_WinAPI_WideCharToMultiByte ( $vUnicode [, $iCodePage = 0 [, $bRetString = True]] )","params":[{"label":"$vUnicode","documentation":"String, DllStruct or Pointer to a byte array structure containing Unicode text to be converted"},{"label":"$iCodePage","documentation":"**[optional]** Code page to use in performing the conversion:    0 - The current system Windows ANSI code page    1 - The current system OEM code page    2 - The current system Macintosh code page    3 - The Windows ANSI code page for the current thread    42 - Symbol code page    65000 - UTF-7    65001 - UTF-8"},{"label":"$bRetString","documentation":"**[optional]** Flags that indicate whether to return a String or a DllStruct (default True : String)"}]},"_WinAPI_WidenPath":{"documentation":"Redefines the current path as the area that would be painted if the path were stroked","label":"_WinAPI_WidenPath ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to a device context that contains a closed path."}]},"_WinAPI_WindowFromDC":{"documentation":"Retrieves a handle to the window associated with the specified display device context (DC)","label":"_WinAPI_WindowFromDC ( $hDC )","params":[{"label":"$hDC","documentation":"Handle to the device context from which a handle to the associated window is to be retrieved."}]},"_WinAPI_WindowFromPoint":{"documentation":"Retrieves the handle of the window that contains the specified point","label":"_WinAPI_WindowFromPoint ( ByRef $tPoint )","params":[{"label":"$tPoint","documentation":"$tagPOINT structure that defines the point to be checked"}]},"_WinAPI_WordToShort":{"documentation":"Converts a value of type WORD to a value of type SHORT","label":"_WinAPI_WordToShort ( $iValue )","params":[{"label":"$iValue","documentation":"The value to be converted."}]},"_WinAPI_Wow64EnableWow64FsRedirection":{"documentation":"Enables or disables file system redirection for the calling thread","label":"_WinAPI_Wow64EnableWow64FsRedirection ( $bEnable )","params":[{"label":"$bEnable","documentation":"Specifies whether enable or disable the WOW64 system folder redirection, valid values:    True - Enable.    False - Disable."}]},"_WinAPI_WriteConsole":{"documentation":"Writes a character string to a console screen buffer","label":"_WinAPI_WriteConsole ( $hConsole, $sText )","params":[{"label":"$hConsole","documentation":"Handle to the console screen buffer"},{"label":"$sText","documentation":"Text to be written to the console screen buffer"}]},"_WinAPI_WriteFile":{"documentation":"Writes data to a file at the position specified by the file pointer","label":"_WinAPI_WriteFile ( $hFile, $pBuffer, $iToWrite, ByRef $iWritten [, $tOverlapped = 0] )","params":[{"label":"$hFile","documentation":"Handle to the file to be written"},{"label":"$pBuffer","documentation":"Pointer to the buffer containing the data to be written"},{"label":"$iToWrite","documentation":"Number of bytes to be written to the file"},{"label":"$iWritten","documentation":"The number of bytes written"},{"label":"$tOverlapped","documentation":"**[optional]** A $tagOVERLAPPED structure or a pointer to it"}]},"_WinAPI_WriteProcessMemory":{"documentation":"Writes memory in a specified process","label":"_WinAPI_WriteProcessMemory ( $hProcess, $pBaseAddress, $pBuffer, $iSize, ByRef $iWritten [, $sBuffer = \\"ptr\\"] )","params":[{"label":"$hProcess","documentation":"Identifies an open handle to a process whose memory is to be written to"},{"label":"$pBaseAddress","documentation":"Points to the base address in the specified process to be written to"},{"label":"$pBuffer","documentation":"Points to the buffer that supplies data to be written into the address space"},{"label":"$iSize","documentation":"Specifies the number of bytes to write into the specified process"},{"label":"$iWritten","documentation":"The actual number of bytes transferred into the specified process"},{"label":"$sBuffer","documentation":"**[optional]** Contains the data type that $pBuffer represents"}]},"_WinAPI_ZeroMemory":{"documentation":"Fills a block of memory with zeros","label":"_WinAPI_ZeroMemory ( $pMemory, $iLength )","params":[{"label":"$pMemory","documentation":"A pointer to the starting address of a memory to be filled."},{"label":"$iLength","documentation":"The number of bytes to be filled."}]}}');var wr=a(3),yr=a.n(wr);function Ar(e){return Ar="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ar(e)}function Dr(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function Wr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Dr(Object(a),!0).forEach((function(t){Er(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Dr(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function Er(e,t,a){return(t=function(e){var t=function(e){if("object"!=Ar(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,"string");if("object"!=Ar(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Ar(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}const Rr=Wr(Wr(Wr(Wr(Wr(Wr(Wr({},Gr),Pr),Fe),Re),Ae),yr()),Ge);function xr(e){return xr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},xr(e)}function vr(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}function Ur(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function Fr(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?Ur(Object(a),!0).forEach((function(t){Lr(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):Ur(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function Lr(e,t,a){return(t=function(e){var t=function(e){if("object"!=xr(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,"string");if("object"!=xr(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==xr(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}var Br=[],Or={};function Mr(e){var t=e.split("(");if(t.length<=1)return null;var a=t[t.length-2].match(/(.*)\b(\w+)/);return a?a[2]:null}function Nr(e){var t,a,o=e.getText(),n=function(e){for(var t=[],a=Ce.includePattern.exec(e);a;)t.push(a[1]),a=Ce.includePattern.exec(e);return t}(o),i=function(e){for(var t=[],a=Ce.libraryIncludePattern.exec(e);a;)t.push(a),a=Ce.libraryIncludePattern.exec(e);return t}(o);return a=Br,(t=n).length===a.length&&t.some((function(e){return a.indexOf(e)<=0}))||(Or={},n.forEach((function(t){var a=(0,Ce.getIncludeData)(t,e);Object.assign(Or,a)})),Br=n),i.forEach((function(t){var a=t[1].replace(".au3","");if(-1===Qi.indexOf(a)){var o=(0,Ce.findFilepath)(t[1]);if(o){var n=(0,Ce.getIncludeData)(o,e);Object.assign(Or,n)}}})),Or}function Hr(e){for(var t=e.getText(),a={},o=Ce.functionDefinitionRegex.exec(t);o;){var n=(0,Ce.buildFunctionSignature)(o,t,e.fileName);a[n.functionName]=n.functionObject,o=Ce.functionDefinitionRegex.exec(t)}return a}var kr=t.languages.registerHoverProvider(Ce.AUTOIT_MODE,{provideHover:function(e,a){var o=e.getWordRangeAtPosition(a);if(!o)return null;var n=e.getText(o),i=Fr(Fr({},Nr(e)),Hr(e))[n];if(!i||!i.label)return null;var r=i.documentation.split("\r");r[1]="##### ".concat(r[1]);var l,s=[].concat(function(e){if(Array.isArray(e))return vr(e)}(l=r)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(l)||function(e,t){if(e){if("string"==typeof e)return vr(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?vr(e,t):void 0}}(l)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),["```\r".concat(i.label,"\r```")]);return new t.Hover(s)}});const Vr=t.languages.registerSignatureHelpProvider(Ce.AUTOIT_MODE,{provideSignatureHelp:function(e,a){var o,n,i,r,l,s=(o=a,{func:Mr(n=e.lineAt(o.line).text.substring(0,o.character).replace(/\w+\([^()]*\)/g,"").replace(/"[^"]*"/g,"").replace(/'[^']*'/g,"").replace(/"[^"]*(?=$)/g,"").replace(/'[^']*(?=$)/g,"").replace(/\([^()]*\)/g,"").replace(/\({2,}/g,"(")),commas:(i=n,r=i.lastIndexOf("("),l=i.slice(r).match(/(?!\B["'][^"']*),(?![^"']*['"]\B)/g),null===l?0:l.length)});if(!s.func)return null;var d=Fr(Fr(Fr({},Rr),Nr(e)),Hr(e))[s.func];if(!d)return null;var c,h,u=new t.SignatureHelp;return u.signatures=[(c=d,h=new t.SignatureInformation(c.label,new t.MarkdownString("##### ".concat(c.documentation))),h.parameters=Object.keys(c.params).map((function(e){return new t.ParameterInformation(c.params[e].label,new t.MarkdownString(c.params[e].documentation))})),h)],u.activeSignature=0,u.activeParameter=s.commas,u}},"(",",");function jr(e){return jr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},jr(e)}function Yr(){Yr=function(){return t};var e,t={},a=Object.prototype,o=a.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function d(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,a){return e[t]=a}}function c(e,t,a,o){var i=t&&t.prototype instanceof f?t:f,r=Object.create(i.prototype),l=new W(o||[]);return n(r,"_invoke",{value:w(e,a,l)}),r}function h(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var u="suspendedStart",m="suspendedYield",p="executing",b="completed",_={};function f(){}function I(){}function $(){}var g={};d(g,r,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(E([])));S&&S!==a&&o.call(S,r)&&(g=S);var T=$.prototype=f.prototype=Object.create(g);function G(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function a(n,i,r,l){var s=h(e[n],e,i);if("throw"!==s.type){var d=s.arg,c=d.value;return c&&"object"==jr(c)&&o.call(c,"__await")?t.resolve(c.__await).then((function(e){a("next",e,r,l)}),(function(e){a("throw",e,r,l)})):t.resolve(c).then((function(e){d.value=e,r(d)}),(function(e){return a("throw",e,r,l)}))}l(s.arg)}var i;n(this,"_invoke",{value:function(e,o){function n(){return new t((function(t,n){a(e,o,t,n)}))}return i=i?i.then(n,n):n()}})}function w(t,a,o){var n=u;return function(i,r){if(n===p)throw Error("Generator is already running");if(n===b){if("throw"===i)throw r;return{value:e,done:!0}}for(o.method=i,o.arg=r;;){var l=o.delegate;if(l){var s=y(l,o);if(s){if(s===_)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(n===u)throw n=b,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);n=p;var d=h(t,a,o);if("normal"===d.type){if(n=o.done?b:m,d.arg===_)continue;return{value:d.arg,done:o.done}}"throw"===d.type&&(n=b,o.method="throw",o.arg=d.arg)}}}function y(t,a){var o=a.method,n=t.iterator[o];if(n===e)return a.delegate=null,"throw"===o&&t.iterator.return&&(a.method="return",a.arg=e,y(t,a),"throw"===a.method)||"return"!==o&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+o+"' method")),_;var i=h(n,t.iterator,a.arg);if("throw"===i.type)return a.method="throw",a.arg=i.arg,a.delegate=null,_;var r=i.arg;return r?r.done?(a[t.resultName]=r.value,a.next=t.nextLoc,"return"!==a.method&&(a.method="next",a.arg=e),a.delegate=null,_):r:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,_)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function W(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function E(t){if(t||""===t){var a=t[r];if(a)return a.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function a(){for(;++n<t.length;)if(o.call(t,n))return a.value=t[n],a.done=!1,a;return a.value=e,a.done=!0,a};return i.next=i}}throw new TypeError(jr(t)+" is not iterable")}return I.prototype=$,n(T,"constructor",{value:$,configurable:!0}),n($,"constructor",{value:I,configurable:!0}),I.displayName=d($,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===I||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,$):(e.__proto__=$,d(e,s,"GeneratorFunction")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},G(P.prototype),d(P.prototype,l,(function(){return this})),t.AsyncIterator=P,t.async=function(e,a,o,n,i){void 0===i&&(i=Promise);var r=new P(c(e,a,o,n),i);return t.isGeneratorFunction(a)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},G(T),d(T,s,"Generator"),d(T,r,(function(){return this})),d(T,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),a=[];for(var o in t)a.push(o);return a.reverse(),function e(){for(;a.length;){var o=a.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},t.values=E,W.prototype={constructor:W,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(D),!t)for(var a in this)"t"===a.charAt(0)&&o.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var a=this;function n(o,n){return l.type="throw",l.arg=t,a.next=o,n&&(a.method="next",a.arg=e),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],l=r.completion;if("root"===r.tryLoc)return n("end");if(r.tryLoc<=this.prev){var s=o.call(r,"catchLoc"),d=o.call(r,"finallyLoc");if(s&&d){if(this.prev<r.catchLoc)return n(r.catchLoc,!0);if(this.prev<r.finallyLoc)return n(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return n(r.catchLoc,!0)}else{if(!d)throw Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return n(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var n=this.tryEntries[a];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var r=i?i.completion:{};return r.type=e,r.arg=t,i?(this.method="next",this.next=i.finallyLoc,_):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),_},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),D(a),_}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var o=a.completion;if("throw"===o.type){var n=o.arg;D(a)}return n}}throw Error("illegal catch attempt")},delegateYield:function(t,a,o){return this.delegate={iterator:E(t),resultName:a,nextLoc:o},"next"===this.method&&(this.arg=e),_}},t}function Xr(e,t,a,o,n,i,r){try{var l=e[i](r),s=l.value}catch(e){return void a(e)}l.done?t(s):Promise.resolve(s).then(o,n)}function zr(e){return function(){var t=this,a=arguments;return new Promise((function(o,n){var i=e.apply(t,a);function r(e){Xr(i,o,n,r,l,"next",e)}function l(e){Xr(i,o,n,r,l,"throw",e)}r(void 0)}))}}var Kr=[];function qr(){return Qr.apply(this,arguments)}function Qr(){return Qr=zr(Yr().mark((function e(){var a,o;return Yr().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t.workspace.findFiles("**/*.{au3,a3x}");case 3:return a=e.sent,e.next=6,Promise.all(a.map(function(){var e=zr(Yr().mark((function e(a){var o;return Yr().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.workspace.openTextDocument(a);case 2:return o=e.sent,e.abrupt("return",Sr(o));case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()));case 6:return o=e.sent,e.abrupt("return",o.flat());case 10:return e.prev=10,e.t0=e.catch(0),t.window.showErrorMessage(e.t0.message||"Error fetching workspace symbols"),e.abrupt("return",null);case 14:case"end":return e.stop()}}),e,null,[[0,10]])}))),Qr.apply(this,arguments)}function Jr(){return(Jr=zr(Yr().mark((function e(){return Yr().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(0!==Kr.length){e.next=4;break}return e.next=3,qr();case 3:Kr=e.sent;case 4:return e.abrupt("return",Kr);case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var Zr=t.workspace.createFileSystemWatcher("**/*.{au3,a3x}"),el=function(){Kr=[]};Zr.onDidChange(el),Zr.onDidCreate(el),Zr.onDidDelete(el);const tl=t.languages.registerWorkspaceSymbolProvider({provideWorkspaceSymbols:function(){return Jr.apply(this,arguments)}});var al={provideDefinition:function(e,a){var o=e.getWordRangeAtPosition(a),n=e.getText(o),i=e.getText(),r=this.determineRegex(n),l=i.match(r);if(l)return new t.Location(e.uri,e.positionAt(l.index+(l[1]||"").length));if((l=this.findDefinitionInIncludeFiles(i,r,e))&&l.found){var s=l.scriptPath,d=l.scriptContent.slice(0,l.found.index+(l[1]||"").length).split("\n"),c=d.length-1,h=d[d.length-1].length;return new t.Location(t.Uri.file(s),new t.Position(c,h))}return null},determineRegex:function(e){return e.startsWith("$")?new RegExp(/(?<![;].*)(?<!(?:#cs|#comments-start).*)((?:Local|Global|Const)\s*)?@(?:\[[\w\d\\$]+\])?\s*=?.*(?![^#]*(#ce|#comments-end))/.source.replace("@","\\".concat(e,"\\b")),"i"):new RegExp("(?<![;].*)(?<!(?:#cs|#comments-start).*)(Func\\s+)".concat(e,"\\s*\\((?![^#]*(#ce|#comments-end))"))},findDefinitionInIncludeFiles:function(e,t,a){function o(e){for(var t=a.fileName.split("\\"),o=t.length-1;o>=0&&t[o]!==e;o--)t.splice(o,1);return t.join("\\")}function i(e){var t,a=[];try{t=(0,r.readdirSync)(e)}catch(e){return a}return t.forEach((function(t){var o=(0,n.join)(e,t),l=(0,r.statSync)(o);l.isFile()&&t.endsWith(".au3")?t.endsWith("_stripped.au3")||a.push(o):l.isDirectory()&&(a=a.concat(i(o)))})),a}var l=o("src"),s=o("src").replace("src","lib"),d=i(l),c=i(s),h=[];h=d.concat(c);var u=!1;(0,Ce.getIncludeScripts)(a,e,h);var m=function(e){var o=(0,Ce.getIncludePath)(e,a),n=(0,Ce.getIncludeText)(o),i=n.match(t);return u?{scriptPath:o,scriptContent:n,found:i}:i},p=h.find(m);return p?(u=!0,m(p)):null}};const ol=t.languages.registerDefinitionProvider(Ce.AUTOIT_MODE,al);var nl,il=a(249);function rl(e){return 32===e||9===e}function ll(e){return 10===e||13===e}function sl(e){return e>=48&&e<=57}!function(e){e[e.lineFeed=10]="lineFeed",e[e.carriageReturn=13]="carriageReturn",e[e.space=32]="space",e[e._0=48]="_0",e[e._1=49]="_1",e[e._2=50]="_2",e[e._3=51]="_3",e[e._4=52]="_4",e[e._5=53]="_5",e[e._6=54]="_6",e[e._7=55]="_7",e[e._8=56]="_8",e[e._9=57]="_9",e[e.a=97]="a",e[e.b=98]="b",e[e.c=99]="c",e[e.d=100]="d",e[e.e=101]="e",e[e.f=102]="f",e[e.g=103]="g",e[e.h=104]="h",e[e.i=105]="i",e[e.j=106]="j",e[e.k=107]="k",e[e.l=108]="l",e[e.m=109]="m",e[e.n=110]="n",e[e.o=111]="o",e[e.p=112]="p",e[e.q=113]="q",e[e.r=114]="r",e[e.s=115]="s",e[e.t=116]="t",e[e.u=117]="u",e[e.v=118]="v",e[e.w=119]="w",e[e.x=120]="x",e[e.y=121]="y",e[e.z=122]="z",e[e.A=65]="A",e[e.B=66]="B",e[e.C=67]="C",e[e.D=68]="D",e[e.E=69]="E",e[e.F=70]="F",e[e.G=71]="G",e[e.H=72]="H",e[e.I=73]="I",e[e.J=74]="J",e[e.K=75]="K",e[e.L=76]="L",e[e.M=77]="M",e[e.N=78]="N",e[e.O=79]="O",e[e.P=80]="P",e[e.Q=81]="Q",e[e.R=82]="R",e[e.S=83]="S",e[e.T=84]="T",e[e.U=85]="U",e[e.V=86]="V",e[e.W=87]="W",e[e.X=88]="X",e[e.Y=89]="Y",e[e.Z=90]="Z",e[e.asterisk=42]="asterisk",e[e.backslash=92]="backslash",e[e.closeBrace=125]="closeBrace",e[e.closeBracket=93]="closeBracket",e[e.colon=58]="colon",e[e.comma=44]="comma",e[e.dot=46]="dot",e[e.doubleQuote=34]="doubleQuote",e[e.minus=45]="minus",e[e.openBrace=123]="openBrace",e[e.openBracket=91]="openBracket",e[e.plus=43]="plus",e[e.slash=47]="slash",e[e.formFeed=12]="formFeed",e[e.tab=9]="tab"}(nl||(nl={})),new Array(20).fill(0).map(((e,t)=>" ".repeat(t)));const dl=200;var cl,hl,ul;function ml(e,t,a=cl.DEFAULT){const o=function(e,t=!1){const a=e.length;let o=0,n="",i=0,r=16,l=0,s=0,d=0,c=0,h=0;function u(t,a){let n=0,i=0;for(;n<t||!a;){let t=e.charCodeAt(o);if(t>=48&&t<=57)i=16*i+t-48;else if(t>=65&&t<=70)i=16*i+t-65+10;else{if(!(t>=97&&t<=102))break;i=16*i+t-97+10}o++,n++}return n<t&&(i=-1),i}function m(){if(n="",h=0,i=o,s=l,c=d,o>=a)return i=a,r=17;let t=e.charCodeAt(o);if(rl(t)){do{o++,n+=String.fromCharCode(t),t=e.charCodeAt(o)}while(rl(t));return r=15}if(ll(t))return o++,n+=String.fromCharCode(t),13===t&&10===e.charCodeAt(o)&&(o++,n+="\n"),l++,d=o,r=14;switch(t){case 123:return o++,r=1;case 125:return o++,r=2;case 91:return o++,r=3;case 93:return o++,r=4;case 58:return o++,r=6;case 44:return o++,r=5;case 34:return o++,n=function(){let t="",n=o;for(;;){if(o>=a){t+=e.substring(n,o),h=2;break}const i=e.charCodeAt(o);if(34===i){t+=e.substring(n,o),o++;break}if(92!==i){if(i>=0&&i<=31){if(ll(i)){t+=e.substring(n,o),h=2;break}h=6}o++}else{if(t+=e.substring(n,o),o++,o>=a){h=2;break}switch(e.charCodeAt(o++)){case 34:t+='"';break;case 92:t+="\\";break;case 47:t+="/";break;case 98:t+="\b";break;case 102:t+="\f";break;case 110:t+="\n";break;case 114:t+="\r";break;case 116:t+="\t";break;case 117:const e=u(4,!0);e>=0?t+=String.fromCharCode(e):h=4;break;default:h=5}n=o}}return t}(),r=10;case 47:const s=o-1;if(47===e.charCodeAt(o+1)){for(o+=2;o<a&&!ll(e.charCodeAt(o));)o++;return n=e.substring(s,o),r=12}if(42===e.charCodeAt(o+1)){o+=2;const t=a-1;let i=!1;for(;o<t;){const t=e.charCodeAt(o);if(42===t&&47===e.charCodeAt(o+1)){o+=2,i=!0;break}o++,ll(t)&&(13===t&&10===e.charCodeAt(o)&&o++,l++,d=o)}return i||(o++,h=1),n=e.substring(s,o),r=13}return n+=String.fromCharCode(t),o++,r=16;case 45:if(n+=String.fromCharCode(t),o++,o===a||!sl(e.charCodeAt(o)))return r=16;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return n+=function(){let t=o;if(48===e.charCodeAt(o))o++;else for(o++;o<e.length&&sl(e.charCodeAt(o));)o++;if(o<e.length&&46===e.charCodeAt(o)){if(o++,!(o<e.length&&sl(e.charCodeAt(o))))return h=3,e.substring(t,o);for(o++;o<e.length&&sl(e.charCodeAt(o));)o++}let a=o;if(o<e.length&&(69===e.charCodeAt(o)||101===e.charCodeAt(o)))if(o++,(o<e.length&&43===e.charCodeAt(o)||45===e.charCodeAt(o))&&o++,o<e.length&&sl(e.charCodeAt(o))){for(o++;o<e.length&&sl(e.charCodeAt(o));)o++;a=o}else h=3;return e.substring(t,a)}(),r=11;default:for(;o<a&&p(t);)o++,t=e.charCodeAt(o);if(i!==o){switch(n=e.substring(i,o),n){case"true":return r=8;case"false":return r=9;case"null":return r=7}return r=16}return n+=String.fromCharCode(t),o++,r=16}}function p(e){if(rl(e)||ll(e))return!1;switch(e){case 125:case 93:case 123:case 91:case 34:case 58:case 44:case 47:return!1}return!0}return{setPosition:function(e){o=e,n="",i=0,r=16,h=0},getPosition:()=>o,scan:t?function(){let e;do{e=m()}while(e>=12&&e<=15);return e}:m,getToken:()=>r,getTokenValue:()=>n,getTokenOffset:()=>i,getTokenLength:()=>o-i,getTokenStartLine:()=>s,getTokenStartCharacter:()=>i-c,getTokenError:()=>h}}(e,!1),n=[];let i=0;function r(e){return e?t=>0===i&&e(t,o.getTokenOffset(),o.getTokenLength(),o.getTokenStartLine(),o.getTokenStartCharacter()):()=>!0}function l(e){return e?t=>0===i&&e(t,o.getTokenOffset(),o.getTokenLength(),o.getTokenStartLine(),o.getTokenStartCharacter(),(()=>n.slice())):()=>!0}function s(e){return e?()=>{i>0?i++:!1===e(o.getTokenOffset(),o.getTokenLength(),o.getTokenStartLine(),o.getTokenStartCharacter(),(()=>n.slice()))&&(i=1)}:()=>!0}function d(e){return e?()=>{i>0&&i--,0===i&&e(o.getTokenOffset(),o.getTokenLength(),o.getTokenStartLine(),o.getTokenStartCharacter())}:()=>!0}const c=s(t.onObjectBegin),h=l(t.onObjectProperty),u=d(t.onObjectEnd),m=s(t.onArrayBegin),p=d(t.onArrayEnd),b=l(t.onLiteralValue),_=r(t.onSeparator),f=($=t.onComment)?()=>0===i&&$(o.getTokenOffset(),o.getTokenLength(),o.getTokenStartLine(),o.getTokenStartCharacter()):()=>!0,I=r(t.onError);var $;const g=a&&a.disallowComments,C=a&&a.allowTrailingComma;function S(){for(;;){const e=o.scan();switch(o.getTokenError()){case 4:T(14);break;case 5:T(15);break;case 3:T(13);break;case 1:g||T(11);break;case 2:T(12);break;case 6:T(16)}switch(e){case 12:case 13:g?T(10):f();break;case 16:T(1);break;case 15:case 14:break;default:return e}}}function T(e,t=[],a=[]){if(I(e),t.length+a.length>0){let e=o.getToken();for(;17!==e;){if(-1!==t.indexOf(e)){S();break}if(-1!==a.indexOf(e))break;e=S()}}}function G(e){const t=o.getTokenValue();return e?b(t):(h(t),n.push(t)),S(),!0}return S(),17===o.getToken()?!!a.allowEmptyContent||(T(4,[],[]),!1):function e(){switch(o.getToken()){case 3:return function(){m(),S();let t=!0,a=!1;for(;4!==o.getToken()&&17!==o.getToken();){if(5===o.getToken()){if(a||T(4,[],[]),_(","),S(),4===o.getToken()&&C)break}else a&&T(6,[],[]);t?(n.push(0),t=!1):n[n.length-1]++,e()||T(4,[],[4,5]),a=!0}return p(),t||n.pop(),4!==o.getToken()?T(8,[4],[]):S(),!0}();case 1:return function(){c(),S();let t=!1;for(;2!==o.getToken()&&17!==o.getToken();){if(5===o.getToken()){if(t||T(4,[],[]),_(","),S(),2===o.getToken()&&C)break}else t&&T(6,[],[]);(10!==o.getToken()?(T(3,[],[2,5]),0):(G(!1),6===o.getToken()?(_(":"),S(),e()||T(4,[],[2,5])):T(5,[],[2,5]),n.pop(),1))||T(4,[],[2,5]),t=!0}return u(),2!==o.getToken()?T(7,[2],[]):S(),!0}();case 10:return G(!0);default:return function(){switch(o.getToken()){case 11:const e=o.getTokenValue();let t=Number(e);isNaN(t)&&(T(2),t=0),b(t);break;case 7:b(null);break;case 8:b(!0);break;case 9:b(!1);break;default:return!1}return S(),!0}()}}()?(17!==o.getToken()&&T(9,[],[]),!0):(T(4,[],[]),!1)}new Array(dl).fill(0).map(((e,t)=>"\n"+" ".repeat(t))),new Array(dl).fill(0).map(((e,t)=>"\r"+" ".repeat(t))),new Array(dl).fill(0).map(((e,t)=>"\r\n"+" ".repeat(t))),new Array(dl).fill(0).map(((e,t)=>"\n"+"\t".repeat(t))),new Array(dl).fill(0).map(((e,t)=>"\r"+"\t".repeat(t))),new Array(dl).fill(0).map(((e,t)=>"\r\n"+"\t".repeat(t))),function(e){e.DEFAULT={allowTrailingComma:!1}}(cl||(cl={})),function(e){e[e.None=0]="None",e[e.UnexpectedEndOfComment=1]="UnexpectedEndOfComment",e[e.UnexpectedEndOfString=2]="UnexpectedEndOfString",e[e.UnexpectedEndOfNumber=3]="UnexpectedEndOfNumber",e[e.InvalidUnicode=4]="InvalidUnicode",e[e.InvalidEscapeCharacter=5]="InvalidEscapeCharacter",e[e.InvalidCharacter=6]="InvalidCharacter"}(hl||(hl={})),function(e){e[e.OpenBraceToken=1]="OpenBraceToken",e[e.CloseBraceToken=2]="CloseBraceToken",e[e.OpenBracketToken=3]="OpenBracketToken",e[e.CloseBracketToken=4]="CloseBracketToken",e[e.CommaToken=5]="CommaToken",e[e.ColonToken=6]="ColonToken",e[e.NullKeyword=7]="NullKeyword",e[e.TrueKeyword=8]="TrueKeyword",e[e.FalseKeyword=9]="FalseKeyword",e[e.StringLiteral=10]="StringLiteral",e[e.NumericLiteral=11]="NumericLiteral",e[e.LineCommentTrivia=12]="LineCommentTrivia",e[e.BlockCommentTrivia=13]="BlockCommentTrivia",e[e.LineBreakTrivia=14]="LineBreakTrivia",e[e.Trivia=15]="Trivia",e[e.Unknown=16]="Unknown",e[e.EOF=17]="EOF"}(ul||(ul={}));const pl=function(e,t=[],a=cl.DEFAULT){let o=null,n=[];const i=[];function r(e){Array.isArray(n)?n.push(e):null!==o&&(n[o]=e)}const l={onObjectBegin:()=>{const e={};r(e),i.push(n),n=e,o=null},onObjectProperty:e=>{o=e},onObjectEnd:()=>{n=i.pop()},onArrayBegin:()=>{const e=[];r(e),i.push(n),n=e,o=null},onArrayEnd:()=>{n=i.pop()},onLiteralValue:r,onError:(e,a,o)=>{t.push({error:e,offset:a,length:o})}};return ml(e,l,a),n[0]};var bl;!function(e){e[e.InvalidSymbol=1]="InvalidSymbol",e[e.InvalidNumberFormat=2]="InvalidNumberFormat",e[e.PropertyNameExpected=3]="PropertyNameExpected",e[e.ValueExpected=4]="ValueExpected",e[e.ColonExpected=5]="ColonExpected",e[e.CommaExpected=6]="CommaExpected",e[e.CloseBraceExpected=7]="CloseBraceExpected",e[e.CloseBracketExpected=8]="CloseBracketExpected",e[e.EndOfFileExpected=9]="EndOfFileExpected",e[e.InvalidCommentToken=10]="InvalidCommentToken",e[e.UnexpectedEndOfComment=11]="UnexpectedEndOfComment",e[e.UnexpectedEndOfString=12]="UnexpectedEndOfString",e[e.UnexpectedEndOfNumber=13]="UnexpectedEndOfNumber",e[e.InvalidUnicode=14]="InvalidUnicode",e[e.InvalidEscapeCharacter=15]="InvalidEscapeCharacter",e[e.InvalidCharacter=16]="InvalidCharacter"}(bl||(bl={}));const _l=require("perf_hooks");var fl=a(343),Il="extension.",$l=["runScript","launchHelp","launchInfo","debugMsgBox","debugConsole","compile","tidy","check","build","launchKoda","changeParams","killScript","killScriptOpened","openInclude","insertHeader","restartScript","debugRemove","functionTraceAdd","traceRemove"],gl=a(558);function Cl(e){return Cl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Cl(e)}function Sl(){Sl=function(){return t};var e,t={},a=Object.prototype,o=a.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function d(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,a){return e[t]=a}}function c(e,t,a,o){var i=t&&t.prototype instanceof f?t:f,r=Object.create(i.prototype),l=new W(o||[]);return n(r,"_invoke",{value:w(e,a,l)}),r}function h(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var u="suspendedStart",m="suspendedYield",p="executing",b="completed",_={};function f(){}function I(){}function $(){}var g={};d(g,r,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(E([])));S&&S!==a&&o.call(S,r)&&(g=S);var T=$.prototype=f.prototype=Object.create(g);function G(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function a(n,i,r,l){var s=h(e[n],e,i);if("throw"!==s.type){var d=s.arg,c=d.value;return c&&"object"==Cl(c)&&o.call(c,"__await")?t.resolve(c.__await).then((function(e){a("next",e,r,l)}),(function(e){a("throw",e,r,l)})):t.resolve(c).then((function(e){d.value=e,r(d)}),(function(e){return a("throw",e,r,l)}))}l(s.arg)}var i;n(this,"_invoke",{value:function(e,o){function n(){return new t((function(t,n){a(e,o,t,n)}))}return i=i?i.then(n,n):n()}})}function w(t,a,o){var n=u;return function(i,r){if(n===p)throw Error("Generator is already running");if(n===b){if("throw"===i)throw r;return{value:e,done:!0}}for(o.method=i,o.arg=r;;){var l=o.delegate;if(l){var s=y(l,o);if(s){if(s===_)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(n===u)throw n=b,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);n=p;var d=h(t,a,o);if("normal"===d.type){if(n=o.done?b:m,d.arg===_)continue;return{value:d.arg,done:o.done}}"throw"===d.type&&(n=b,o.method="throw",o.arg=d.arg)}}}function y(t,a){var o=a.method,n=t.iterator[o];if(n===e)return a.delegate=null,"throw"===o&&t.iterator.return&&(a.method="return",a.arg=e,y(t,a),"throw"===a.method)||"return"!==o&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+o+"' method")),_;var i=h(n,t.iterator,a.arg);if("throw"===i.type)return a.method="throw",a.arg=i.arg,a.delegate=null,_;var r=i.arg;return r?r.done?(a[t.resultName]=r.value,a.next=t.nextLoc,"return"!==a.method&&(a.method="next",a.arg=e),a.delegate=null,_):r:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,_)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function W(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function E(t){if(t||""===t){var a=t[r];if(a)return a.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function a(){for(;++n<t.length;)if(o.call(t,n))return a.value=t[n],a.done=!1,a;return a.value=e,a.done=!0,a};return i.next=i}}throw new TypeError(Cl(t)+" is not iterable")}return I.prototype=$,n(T,"constructor",{value:$,configurable:!0}),n($,"constructor",{value:I,configurable:!0}),I.displayName=d($,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===I||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,$):(e.__proto__=$,d(e,s,"GeneratorFunction")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},G(P.prototype),d(P.prototype,l,(function(){return this})),t.AsyncIterator=P,t.async=function(e,a,o,n,i){void 0===i&&(i=Promise);var r=new P(c(e,a,o,n),i);return t.isGeneratorFunction(a)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},G(T),d(T,s,"Generator"),d(T,r,(function(){return this})),d(T,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),a=[];for(var o in t)a.push(o);return a.reverse(),function e(){for(;a.length;){var o=a.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},t.values=E,W.prototype={constructor:W,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(D),!t)for(var a in this)"t"===a.charAt(0)&&o.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var a=this;function n(o,n){return l.type="throw",l.arg=t,a.next=o,n&&(a.method="next",a.arg=e),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],l=r.completion;if("root"===r.tryLoc)return n("end");if(r.tryLoc<=this.prev){var s=o.call(r,"catchLoc"),d=o.call(r,"finallyLoc");if(s&&d){if(this.prev<r.catchLoc)return n(r.catchLoc,!0);if(this.prev<r.finallyLoc)return n(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return n(r.catchLoc,!0)}else{if(!d)throw Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return n(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var n=this.tryEntries[a];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var r=i?i.completion:{};return r.type=e,r.arg=t,i?(this.method="next",this.next=i.finallyLoc,_):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),_},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),D(a),_}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var o=a.completion;if("throw"===o.type){var n=o.arg;D(a)}return n}}throw Error("illegal catch attempt")},delegateYield:function(t,a,o){return this.delegate={iterator:E(t),resultName:a,nextLoc:o},"next"===this.method&&(this.arg=e),_}},t}function Tl(e,t,a,o,n,i,r){try{var l=e[i](r),s=l.value}catch(e){return void a(e)}l.done?t(s):Promise.resolve(s).then(o,n)}function Gl(){var e;return e=Sl().mark((function e(a){var o,n,i,r,l,s=arguments;return Sl().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o=s.length>1&&void 0!==s[1]?s[1]:"\r\n",n=t.window.activeTextEditor){e.next=5;break}return t.window.showErrorMessage("No active editor"),e.abrupt("return",0);case 5:if(i=n.document,r=i.getText(),(l=r.replace(a,o))!==r){e.next=10;break}return e.abrupt("return",0);case 10:return e.next=12,n.edit((function(e){var a=new t.Range(i.positionAt(0),i.positionAt(r.length));e.replace(a,l)}));case 12:return e.abrupt("return",(r.match(a)||[]).length);case 13:case"end":return e.stop()}}),e)})),Gl=function(){var t=this,a=arguments;return new Promise((function(o,n){var i=e.apply(t,a);function r(e){Tl(i,o,n,r,l,"next",e)}function l(e){Tl(i,o,n,r,l,"throw",e)}r(void 0)}))},Gl.apply(this,arguments)}const Pl=function(e){return Gl.apply(this,arguments)};function wl(e){return wl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},wl(e)}function yl(){yl=function(){return t};var e,t={},a=Object.prototype,o=a.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function d(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,a){return e[t]=a}}function c(e,t,a,o){var i=t&&t.prototype instanceof f?t:f,r=Object.create(i.prototype),l=new W(o||[]);return n(r,"_invoke",{value:w(e,a,l)}),r}function h(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var u="suspendedStart",m="suspendedYield",p="executing",b="completed",_={};function f(){}function I(){}function $(){}var g={};d(g,r,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(E([])));S&&S!==a&&o.call(S,r)&&(g=S);var T=$.prototype=f.prototype=Object.create(g);function G(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function a(n,i,r,l){var s=h(e[n],e,i);if("throw"!==s.type){var d=s.arg,c=d.value;return c&&"object"==wl(c)&&o.call(c,"__await")?t.resolve(c.__await).then((function(e){a("next",e,r,l)}),(function(e){a("throw",e,r,l)})):t.resolve(c).then((function(e){d.value=e,r(d)}),(function(e){return a("throw",e,r,l)}))}l(s.arg)}var i;n(this,"_invoke",{value:function(e,o){function n(){return new t((function(t,n){a(e,o,t,n)}))}return i=i?i.then(n,n):n()}})}function w(t,a,o){var n=u;return function(i,r){if(n===p)throw Error("Generator is already running");if(n===b){if("throw"===i)throw r;return{value:e,done:!0}}for(o.method=i,o.arg=r;;){var l=o.delegate;if(l){var s=y(l,o);if(s){if(s===_)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(n===u)throw n=b,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);n=p;var d=h(t,a,o);if("normal"===d.type){if(n=o.done?b:m,d.arg===_)continue;return{value:d.arg,done:o.done}}"throw"===d.type&&(n=b,o.method="throw",o.arg=d.arg)}}}function y(t,a){var o=a.method,n=t.iterator[o];if(n===e)return a.delegate=null,"throw"===o&&t.iterator.return&&(a.method="return",a.arg=e,y(t,a),"throw"===a.method)||"return"!==o&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+o+"' method")),_;var i=h(n,t.iterator,a.arg);if("throw"===i.type)return a.method="throw",a.arg=i.arg,a.delegate=null,_;var r=i.arg;return r?r.done?(a[t.resultName]=r.value,a.next=t.nextLoc,"return"!==a.method&&(a.method="next",a.arg=e),a.delegate=null,_):r:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,_)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function W(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function E(t){if(t||""===t){var a=t[r];if(a)return a.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function a(){for(;++n<t.length;)if(o.call(t,n))return a.value=t[n],a.done=!1,a;return a.value=e,a.done=!0,a};return i.next=i}}throw new TypeError(wl(t)+" is not iterable")}return I.prototype=$,n(T,"constructor",{value:$,configurable:!0}),n($,"constructor",{value:I,configurable:!0}),I.displayName=d($,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===I||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,$):(e.__proto__=$,d(e,s,"GeneratorFunction")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},G(P.prototype),d(P.prototype,l,(function(){return this})),t.AsyncIterator=P,t.async=function(e,a,o,n,i){void 0===i&&(i=Promise);var r=new P(c(e,a,o,n),i);return t.isGeneratorFunction(a)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},G(T),d(T,s,"Generator"),d(T,r,(function(){return this})),d(T,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),a=[];for(var o in t)a.push(o);return a.reverse(),function e(){for(;a.length;){var o=a.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},t.values=E,W.prototype={constructor:W,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(D),!t)for(var a in this)"t"===a.charAt(0)&&o.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var a=this;function n(o,n){return l.type="throw",l.arg=t,a.next=o,n&&(a.method="next",a.arg=e),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],l=r.completion;if("root"===r.tryLoc)return n("end");if(r.tryLoc<=this.prev){var s=o.call(r,"catchLoc"),d=o.call(r,"finallyLoc");if(s&&d){if(this.prev<r.catchLoc)return n(r.catchLoc,!0);if(this.prev<r.finallyLoc)return n(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return n(r.catchLoc,!0)}else{if(!d)throw Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return n(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var n=this.tryEntries[a];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var r=i?i.completion:{};return r.type=e,r.arg=t,i?(this.method="next",this.next=i.finallyLoc,_):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),_},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),D(a),_}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var o=a.completion;if("throw"===o.type){var n=o.arg;D(a)}return n}}throw Error("illegal catch attempt")},delegateYield:function(t,a,o){return this.delegate={iterator:E(t),resultName:a,nextLoc:o},"next"===this.method&&(this.arg=e),_}},t}function Al(e,t,a,o,n,i,r){try{var l=e[i](r),s=l.value}catch(e){return void a(e)}l.done?t(s):Promise.resolve(s).then(o,n)}function Dl(){var e;return e=yl().mark((function e(){var a,o,n,i;return yl().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=/\s+?(;~?\s+)?;### Debug CONSOLE.*?\r\n\s?(;~?\s+)?ConsoleWrite\('@@ Debug\('.+\r\n/g,o=/\s+?(;~?\s+)?;### Debug MSGBOX.*?\r\n\s?(;~?\s+)?MsgBox\(262144, 'Debug line ~'.+\r\n/g,e.next=4,Pl(a);case 4:return n=e.sent,e.next=7,Pl(o);case 7:i=e.sent,n||i?t.window.showInformationMessage("".concat(n+i," Debug line(s) removed successfully")):t.window.showInformationMessage("No debug lines found");case 9:case"end":return e.stop()}}),e)})),Dl=function(){var t=this,a=arguments;return new Promise((function(o,n){var i=e.apply(t,a);function r(e){Al(i,o,n,r,l,"next",e)}function l(e){Al(i,o,n,r,l,"throw",e)}r(void 0)}))},Dl.apply(this,arguments)}const Wl=function(){return Dl.apply(this,arguments)};function El(e){return El="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},El(e)}function Rl(){Rl=function(){return t};var e,t={},a=Object.prototype,o=a.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function d(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,a){return e[t]=a}}function c(e,t,a,o){var i=t&&t.prototype instanceof f?t:f,r=Object.create(i.prototype),l=new W(o||[]);return n(r,"_invoke",{value:w(e,a,l)}),r}function h(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var u="suspendedStart",m="suspendedYield",p="executing",b="completed",_={};function f(){}function I(){}function $(){}var g={};d(g,r,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(E([])));S&&S!==a&&o.call(S,r)&&(g=S);var T=$.prototype=f.prototype=Object.create(g);function G(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function a(n,i,r,l){var s=h(e[n],e,i);if("throw"!==s.type){var d=s.arg,c=d.value;return c&&"object"==El(c)&&o.call(c,"__await")?t.resolve(c.__await).then((function(e){a("next",e,r,l)}),(function(e){a("throw",e,r,l)})):t.resolve(c).then((function(e){d.value=e,r(d)}),(function(e){return a("throw",e,r,l)}))}l(s.arg)}var i;n(this,"_invoke",{value:function(e,o){function n(){return new t((function(t,n){a(e,o,t,n)}))}return i=i?i.then(n,n):n()}})}function w(t,a,o){var n=u;return function(i,r){if(n===p)throw Error("Generator is already running");if(n===b){if("throw"===i)throw r;return{value:e,done:!0}}for(o.method=i,o.arg=r;;){var l=o.delegate;if(l){var s=y(l,o);if(s){if(s===_)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(n===u)throw n=b,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);n=p;var d=h(t,a,o);if("normal"===d.type){if(n=o.done?b:m,d.arg===_)continue;return{value:d.arg,done:o.done}}"throw"===d.type&&(n=b,o.method="throw",o.arg=d.arg)}}}function y(t,a){var o=a.method,n=t.iterator[o];if(n===e)return a.delegate=null,"throw"===o&&t.iterator.return&&(a.method="return",a.arg=e,y(t,a),"throw"===a.method)||"return"!==o&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+o+"' method")),_;var i=h(n,t.iterator,a.arg);if("throw"===i.type)return a.method="throw",a.arg=i.arg,a.delegate=null,_;var r=i.arg;return r?r.done?(a[t.resultName]=r.value,a.next=t.nextLoc,"return"!==a.method&&(a.method="next",a.arg=e),a.delegate=null,_):r:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,_)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function W(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function E(t){if(t||""===t){var a=t[r];if(a)return a.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function a(){for(;++n<t.length;)if(o.call(t,n))return a.value=t[n],a.done=!1,a;return a.value=e,a.done=!0,a};return i.next=i}}throw new TypeError(El(t)+" is not iterable")}return I.prototype=$,n(T,"constructor",{value:$,configurable:!0}),n($,"constructor",{value:I,configurable:!0}),I.displayName=d($,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===I||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,$):(e.__proto__=$,d(e,s,"GeneratorFunction")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},G(P.prototype),d(P.prototype,l,(function(){return this})),t.AsyncIterator=P,t.async=function(e,a,o,n,i){void 0===i&&(i=Promise);var r=new P(c(e,a,o,n),i);return t.isGeneratorFunction(a)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},G(T),d(T,s,"Generator"),d(T,r,(function(){return this})),d(T,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),a=[];for(var o in t)a.push(o);return a.reverse(),function e(){for(;a.length;){var o=a.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},t.values=E,W.prototype={constructor:W,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(D),!t)for(var a in this)"t"===a.charAt(0)&&o.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var a=this;function n(o,n){return l.type="throw",l.arg=t,a.next=o,n&&(a.method="next",a.arg=e),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],l=r.completion;if("root"===r.tryLoc)return n("end");if(r.tryLoc<=this.prev){var s=o.call(r,"catchLoc"),d=o.call(r,"finallyLoc");if(s&&d){if(this.prev<r.catchLoc)return n(r.catchLoc,!0);if(this.prev<r.finallyLoc)return n(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return n(r.catchLoc,!0)}else{if(!d)throw Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return n(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var n=this.tryEntries[a];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var r=i?i.completion:{};return r.type=e,r.arg=t,i?(this.method="next",this.next=i.finallyLoc,_):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),_},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),D(a),_}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var o=a.completion;if("throw"===o.type){var n=o.arg;D(a)}return n}}throw Error("illegal catch attempt")},delegateYield:function(t,a,o){return this.delegate={iterator:E(t),resultName:a,nextLoc:o},"next"===this.method&&(this.arg=e),_}},t}function xl(e,t,a,o,n,i,r){try{var l=e[i](r),s=l.value}catch(e){return void a(e)}l.done?t(s):Promise.resolve(s).then(o,n)}var vl=/\s+?(;~?\s+)?ConsoleWrite\([^\r\n]+\)[ \t]*;### Trace[^\r\n]+/g;function Ul(){var e;return e=Rl().mark((function e(){var a;return Rl().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Pl(vl,"");case 2:(a=e.sent)?t.window.showInformationMessage("".concat(a," trace line(s) removed.")):t.window.showInformationMessage("No trace lines found.");case 4:case"end":return e.stop()}}),e)})),Ul=function(){var t=this,a=arguments;return new Promise((function(o,n){var i=e.apply(t,a);function r(e){xl(i,o,n,r,l,"next",e)}function l(e){xl(i,o,n,r,l,"throw",e)}r(void 0)}))},Ul.apply(this,arguments)}const Fl=function(){return Ul.apply(this,arguments)};function Ll(e){return Ll="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ll(e)}function Bl(){Bl=function(){return t};var e,t={},a=Object.prototype,o=a.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function d(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,a){return e[t]=a}}function c(e,t,a,o){var i=t&&t.prototype instanceof f?t:f,r=Object.create(i.prototype),l=new W(o||[]);return n(r,"_invoke",{value:w(e,a,l)}),r}function h(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var u="suspendedStart",m="suspendedYield",p="executing",b="completed",_={};function f(){}function I(){}function $(){}var g={};d(g,r,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(E([])));S&&S!==a&&o.call(S,r)&&(g=S);var T=$.prototype=f.prototype=Object.create(g);function G(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function a(n,i,r,l){var s=h(e[n],e,i);if("throw"!==s.type){var d=s.arg,c=d.value;return c&&"object"==Ll(c)&&o.call(c,"__await")?t.resolve(c.__await).then((function(e){a("next",e,r,l)}),(function(e){a("throw",e,r,l)})):t.resolve(c).then((function(e){d.value=e,r(d)}),(function(e){return a("throw",e,r,l)}))}l(s.arg)}var i;n(this,"_invoke",{value:function(e,o){function n(){return new t((function(t,n){a(e,o,t,n)}))}return i=i?i.then(n,n):n()}})}function w(t,a,o){var n=u;return function(i,r){if(n===p)throw Error("Generator is already running");if(n===b){if("throw"===i)throw r;return{value:e,done:!0}}for(o.method=i,o.arg=r;;){var l=o.delegate;if(l){var s=y(l,o);if(s){if(s===_)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(n===u)throw n=b,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);n=p;var d=h(t,a,o);if("normal"===d.type){if(n=o.done?b:m,d.arg===_)continue;return{value:d.arg,done:o.done}}"throw"===d.type&&(n=b,o.method="throw",o.arg=d.arg)}}}function y(t,a){var o=a.method,n=t.iterator[o];if(n===e)return a.delegate=null,"throw"===o&&t.iterator.return&&(a.method="return",a.arg=e,y(t,a),"throw"===a.method)||"return"!==o&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+o+"' method")),_;var i=h(n,t.iterator,a.arg);if("throw"===i.type)return a.method="throw",a.arg=i.arg,a.delegate=null,_;var r=i.arg;return r?r.done?(a[t.resultName]=r.value,a.next=t.nextLoc,"return"!==a.method&&(a.method="next",a.arg=e),a.delegate=null,_):r:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,_)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function W(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function E(t){if(t||""===t){var a=t[r];if(a)return a.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function a(){for(;++n<t.length;)if(o.call(t,n))return a.value=t[n],a.done=!1,a;return a.value=e,a.done=!0,a};return i.next=i}}throw new TypeError(Ll(t)+" is not iterable")}return I.prototype=$,n(T,"constructor",{value:$,configurable:!0}),n($,"constructor",{value:I,configurable:!0}),I.displayName=d($,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===I||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,$):(e.__proto__=$,d(e,s,"GeneratorFunction")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},G(P.prototype),d(P.prototype,l,(function(){return this})),t.AsyncIterator=P,t.async=function(e,a,o,n,i){void 0===i&&(i=Promise);var r=new P(c(e,a,o,n),i);return t.isGeneratorFunction(a)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},G(T),d(T,s,"Generator"),d(T,r,(function(){return this})),d(T,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),a=[];for(var o in t)a.push(o);return a.reverse(),function e(){for(;a.length;){var o=a.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},t.values=E,W.prototype={constructor:W,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(D),!t)for(var a in this)"t"===a.charAt(0)&&o.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var a=this;function n(o,n){return l.type="throw",l.arg=t,a.next=o,n&&(a.method="next",a.arg=e),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],l=r.completion;if("root"===r.tryLoc)return n("end");if(r.tryLoc<=this.prev){var s=o.call(r,"catchLoc"),d=o.call(r,"finallyLoc");if(s&&d){if(this.prev<r.catchLoc)return n(r.catchLoc,!0);if(this.prev<r.finallyLoc)return n(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return n(r.catchLoc,!0)}else{if(!d)throw Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return n(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var n=this.tryEntries[a];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var r=i?i.completion:{};return r.type=e,r.arg=t,i?(this.method="next",this.next=i.finallyLoc,_):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),_},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),D(a),_}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var o=a.completion;if("throw"===o.type){var n=o.arg;D(a)}return n}}throw Error("illegal catch attempt")},delegateYield:function(t,a,o){return this.delegate={iterator:E(t),resultName:a,nextLoc:o},"next"===this.method&&(this.arg=e),_}},t}function Ol(e,t,a,o,n,i,r){try{var l=e[i](r),s=l.value}catch(e){return void a(e)}l.done?t(s):Promise.resolve(s).then(o,n)}function Ml(e,t,a,o){if(t.includes("; FunctionTraceSkip"))return e;var n="ConsoleWrite('@@ (' & (@ScriptLineNumber - 1) & ') :(' & @MIN & ':' & @SEC & ') ".concat(o,"()' & @CR) \t;### Trace Function'");return"".concat(e,"\r\t").concat(n)}function Nl(){var e;return e=Bl().mark((function e(){var a,o,n,i,r,l;return Bl().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=/()(\bfunc\b\s+([^)\s]+)\(.*\))/gi,o=/\s*ConsoleWrite\('@@ \(.+;### Trace Function'/,e.next=4,Pl(o);case 4:if(n=t.window.activeTextEditor){e.next=8;break}return t.window.showErrorMessage("No active editor"),e.abrupt("return");case 8:if(i=n.document,r=i.getText(),l=r.replaceAll(a,Ml)){e.next=13;break}return e.abrupt("return");case 13:return e.next=15,n.edit((function(e){var a=new t.Range(i.positionAt(0),i.positionAt(r.length));e.replace(a,l)}));case 15:case"end":return e.stop()}}),e)})),Nl=function(){var t=this,a=arguments;return new Promise((function(o,n){var i=e.apply(t,a);function r(e){Ol(i,o,n,r,l,"next",e)}function l(e){Ol(i,o,n,r,l,"throw",e)}r(void 0)}))},Nl.apply(this,arguments)}const Hl=function(){return Nl.apply(this,arguments)};function kl(e){return kl="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},kl(e)}function Vl(){Vl=function(){return t};var e,t={},a=Object.prototype,o=a.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function d(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,a){return e[t]=a}}function c(e,t,a,o){var i=t&&t.prototype instanceof f?t:f,r=Object.create(i.prototype),l=new W(o||[]);return n(r,"_invoke",{value:w(e,a,l)}),r}function h(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var u="suspendedStart",m="suspendedYield",p="executing",b="completed",_={};function f(){}function I(){}function $(){}var g={};d(g,r,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(E([])));S&&S!==a&&o.call(S,r)&&(g=S);var T=$.prototype=f.prototype=Object.create(g);function G(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function a(n,i,r,l){var s=h(e[n],e,i);if("throw"!==s.type){var d=s.arg,c=d.value;return c&&"object"==kl(c)&&o.call(c,"__await")?t.resolve(c.__await).then((function(e){a("next",e,r,l)}),(function(e){a("throw",e,r,l)})):t.resolve(c).then((function(e){d.value=e,r(d)}),(function(e){return a("throw",e,r,l)}))}l(s.arg)}var i;n(this,"_invoke",{value:function(e,o){function n(){return new t((function(t,n){a(e,o,t,n)}))}return i=i?i.then(n,n):n()}})}function w(t,a,o){var n=u;return function(i,r){if(n===p)throw Error("Generator is already running");if(n===b){if("throw"===i)throw r;return{value:e,done:!0}}for(o.method=i,o.arg=r;;){var l=o.delegate;if(l){var s=y(l,o);if(s){if(s===_)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(n===u)throw n=b,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);n=p;var d=h(t,a,o);if("normal"===d.type){if(n=o.done?b:m,d.arg===_)continue;return{value:d.arg,done:o.done}}"throw"===d.type&&(n=b,o.method="throw",o.arg=d.arg)}}}function y(t,a){var o=a.method,n=t.iterator[o];if(n===e)return a.delegate=null,"throw"===o&&t.iterator.return&&(a.method="return",a.arg=e,y(t,a),"throw"===a.method)||"return"!==o&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+o+"' method")),_;var i=h(n,t.iterator,a.arg);if("throw"===i.type)return a.method="throw",a.arg=i.arg,a.delegate=null,_;var r=i.arg;return r?r.done?(a[t.resultName]=r.value,a.next=t.nextLoc,"return"!==a.method&&(a.method="next",a.arg=e),a.delegate=null,_):r:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,_)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function W(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function E(t){if(t||""===t){var a=t[r];if(a)return a.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function a(){for(;++n<t.length;)if(o.call(t,n))return a.value=t[n],a.done=!1,a;return a.value=e,a.done=!0,a};return i.next=i}}throw new TypeError(kl(t)+" is not iterable")}return I.prototype=$,n(T,"constructor",{value:$,configurable:!0}),n($,"constructor",{value:I,configurable:!0}),I.displayName=d($,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===I||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,$):(e.__proto__=$,d(e,s,"GeneratorFunction")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},G(P.prototype),d(P.prototype,l,(function(){return this})),t.AsyncIterator=P,t.async=function(e,a,o,n,i){void 0===i&&(i=Promise);var r=new P(c(e,a,o,n),i);return t.isGeneratorFunction(a)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},G(T),d(T,s,"Generator"),d(T,r,(function(){return this})),d(T,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),a=[];for(var o in t)a.push(o);return a.reverse(),function e(){for(;a.length;){var o=a.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},t.values=E,W.prototype={constructor:W,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(D),!t)for(var a in this)"t"===a.charAt(0)&&o.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var a=this;function n(o,n){return l.type="throw",l.arg=t,a.next=o,n&&(a.method="next",a.arg=e),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],l=r.completion;if("root"===r.tryLoc)return n("end");if(r.tryLoc<=this.prev){var s=o.call(r,"catchLoc"),d=o.call(r,"finallyLoc");if(s&&d){if(this.prev<r.catchLoc)return n(r.catchLoc,!0);if(this.prev<r.finallyLoc)return n(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return n(r.catchLoc,!0)}else{if(!d)throw Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return n(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var n=this.tryEntries[a];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var r=i?i.completion:{};return r.type=e,r.arg=t,i?(this.method="next",this.next=i.finallyLoc,_):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),_},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),D(a),_}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var o=a.completion;if("throw"===o.type){var n=o.arg;D(a)}return n}}throw Error("illegal catch attempt")},delegateYield:function(t,a,o){return this.delegate={iterator:E(t),resultName:a,nextLoc:o},"next"===this.method&&(this.arg=e),_}},t}function jl(e,t,a,o,n,i,r){try{var l=e[i](r),s=l.value}catch(e){return void a(e)}l.done?t(s):Promise.resolve(s).then(o,n)}function Yl(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o,n,i,r,l=[],s=!0,d=!1;try{if(i=(a=a.call(e)).next,0===t){if(Object(a)!==a)return;s=!1}else for(;!(s=(o=i.call(a)).done)&&(l.push(o.value),l.length!==t);s=!0);}catch(e){d=!0,n=e}finally{try{if(!s&&null!=a.return&&(r=a.return(),Object(r)!==r))return}finally{if(d)throw n}}return l}}(e,t)||zl(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Xl(e){return function(e){if(Array.isArray(e))return Kl(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||zl(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function zl(e,t){if(e){if("string"==typeof e)return Kl(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?Kl(e,t):void 0}}function Kl(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}var ql=fl.A.config,Ql=t.window.createOutputChannel("AutoIt (global)","vscode-autoit-output"),Jl=a(330).contributes.keybindings;function Zl(){if(!t.window.activeTextEditor)return"";var e=t.window.activeTextEditor.document;return e&&e.fileName?e.fileName:""}var es={list:new Map,isNewLine:!0,lastId:0,id:0,outputName:"extension-output-".concat(a(330).publisher,".").concat(a(330).name,"-#"),get lastRunning(){return this.findRunner({status:!0,thisFile:null})},get lastRunningOpened(){return this.findRunner({status:!0,thisFile:Zl()})},findRunner:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{status:!0,thisFile:null},t=Xl(this.list.entries()).reverse().find((function(t){var a=Yl(t,2),o=(a[0],a[1]);return Object.entries(e).every((function(e){var t=Yl(e,2),a=t[0],n=t[1];return null===n||n===o[a]}))}));return t?{runner:t[0],info:t[1]}:null},isAiOutVisible:function(){for(var e=0;e<t.window.visibleTextEditors.length;e+=1){var a=t.window.visibleTextEditors[e],o=a.document.fileName;if(o.startsWith(this.outputName)){var n=o.slice(this.outputName.length),i=n.indexOf("-");if(-1!==i)return{id:n.slice(0,i),name:n.slice(i+1),output:a}}}return null},cleanup:function(){for(var e=(new Date).getTime()-1e3*ql.multiOutputFinishedTimeout,t=Xl(this.list.entries()).filter((function(e){return!e[1].status})).sort((function(e,t){return t[1].endTime-e[1].endTime})),a=0;a<t.length;a+=1){var o=Yl(t[a],2),n=o[0],i=o[1];clearTimeout(i.timer),a>=ql.multiOutputMaxFinished||ql.multiOutputFinishedTimeout&&i.endTime<e?this.cleanupFinishedRunner(i,n):i.timer=ql.multiOutputFinishedTimeout?setTimeout(i.callback.bind(this),i.endTime-e):null}},cleanupFinishedRunner:function(e,t){var a=this,o=Ql;e.callback=function(){e._aiOut.flush(),e.aiOut!==o&&e.aiOut.dispose();var n=a.isAiOutVisible();n&&n.name===e.aiOut.name&&o.show(!0),a.list.delete(t)},e.callback()}};fl.A.addListener((function(){return es.cleanup()})),t.window.onDidChangeVisibleTextEditors((function(){var e=es.isAiOutVisible();if(e&&ql.outputMaxHistoryLines&&e.output.document.lineCount>ql.outputMaxHistoryLines){var t=e.output.document.getText().split(/\r?\n/).slice(-ql.outputMaxHistoryLines).join("\r\n");Ql.replace(t)}}));var ts,as,os,ns,is,rs,ls,ss,ds=(os=/(SciTE_(STOPEXECUTE|RESTART)\s*=).*/gi,ns=process.env,is=new Map,rs=null,{disable:function(e){var t=this;if(clearTimeout(as),is.set(e,e),1===is.size){var a=function(){var e="";ts=ns.SCITE_USERHOME&&l().existsSync("".concat(ns.SCITE_USERHOME,"\\AutoIt3Wrapper"))?"".concat(ns.SCITE_USERHOME,"\\AutoIt3Wrapper\\AutoIt3Wrapper.ini"):ns.SCITE_HOME&&l().existsSync("".concat(ns.SCITE_HOME,"/AutoIt3Wrapper"))?"".concat(ns.SCITE_HOME,"\\AutoIt3Wrapper\\AutoIt3Wrapper.ini"):(l().existsSync("".concat(i().dirname(ql.wrapperPath),"\\AutoIt3Wrapper.ini")),"".concat(i().dirname(ql.wrapperPath),"\\AutoIt3Wrapper.ini"));try{var t=(e=(rs=l().readFileSync(ts,"utf-8")).replace(os,"")).search(/\[Other\]/i);-1===t&&(t=(e+="\r\n[Other]").length),e=e.substring(0,t+7)+"\r\nSciTE_STOPEXECUTE=\r\nSciTE_RESTART=\r\n"+e.substring(t+7)}catch(e){rs=null,console.error("Error reading AutoIt3Wrapper.ini: ".concat(e.message))}return{iniPath:ts,iniData:e}}(),o=a.iniPath,n=a.iniData;try{l().writeFileSync(o,n,"utf-8")}catch(e){console.error("Error writing AutoIt3Wrapper.ini: ".concat(e.message))}}return as=setTimeout((function(){return t.reset()}),1e4),e},reset:function(e){if(clearTimeout(as),is.delete(e),!(!ts||e&&is.size))try{null===rs?l().rmSync(ts):l().writeFileSync(ts,rs,"utf-8")}catch(e){console.error("Error restoring AutoIt3Wrapper.ini: ".concat(e.message))}}});fl.A.noEvents(!0);var cs,hs=t.workspace.getConfiguration("autoit"),us="consoleParams",ms=hs.inspect(us),ps=void 0!==ms.globalValue?ms.globalValue.replace(/ ?-profileDirID[\d.]+$/,""):ms.globalValue,bs=(ps?ps+" ":"")+"-profileDirID."+(new Date).getTime()+_l.performance.now(),_s=(process.env.VSCODE_PORTABLE?process.env.VSCODE_PORTABLE+"/user-data":process.env.APPDATA+"/Code")+"/User/",fs=t.workspace.createFileSystemWatcher(new t.RelativePattern(_s,"**/settings.json")),Is=function(){clearTimeout(cs),hs.update(us,ps,!0).then((function(){return fl.A.noEvents(!1)})),function(e){for(var a=0,o={},n=0;n<$l.length;n++)o[Il+$l[n]]="";var i=Jl.reduce((function(e,t){return e[t.command]=t.key,e}),{}),r={resolve:function(){},isResolved:!1},s=t.Uri.file(e+"keybindings.json").fsPath,d=function(e){var t=_l.performance.now();e&&("file"!==e.scheme||e.fsPath!==s||!r.isResolved||a+200>t)||(ls=new Promise((function(e){r.resolve=e,r.isResolved=!1})),Object.assign(ls,Object.assign({},i)),a=t,l().readFile(s,(function(e,t){!function(e){for(var t={},a=Object.assign({},i),n=0;n<e.length;n++){var l="-"===e[n].command.substring(0,1),s=l?e[n].command.substring(1,e[n].command.length):e[n].command;if(s in o){if(l){delete ls[s],delete a[s];continue}t[s]=e[n].key}}for(var d in o)if(Object.hasOwn(o,d)){var c=t[d]||a[d];if(!c)continue;a[d]=c.replace(/\w+/g,(function(e){return e.substring(0,1).toUpperCase()+e.substring(1)})),ls[d]=a[d]}gl.DZ.error.killScript&&(ls[Il+"killScript"]||ls[Il+"killScriptOpened"])&&(gl.DZ.error.killScript.hide(),delete gl.DZ.error.killScript),r.resolve(a),r.isResolved=!0}(e?Jl:pl(t.toString())||Jl)})))},c=t.workspace.createFileSystemWatcher(new t.RelativePattern(e,"*.json"));c.onDidChange(d),c.onDidCreate(d),c.onDidDelete(d),d()}(ss||_s)};cs=setTimeout(Is,2e3);var $s=function(e){ss||l().readFile(e.fsPath,(function(t,a){ss||pl(a.toString())[ms.key]===bs&&(ss=e.fsPath.replace(/[^\\/]+$/,""),fs.dispose(),Is())}))};fs.onDidChange($s),fs.onDidCreate($s),hs.update(us,bs,!0);var gs,Cs=function(e){var t,a=e.id,o=e.aiOutProcess,n="",i=!0,r=" ",l="#".concat(a,":").concat(r),s="".padStart(l.length,r),d=[/!!?>Failed Setting Hotkey\(s\)(?::|...)[\r\n]*?/gi,/(?:false)?--> SetHotKey (?:\(\) )?Restart failed(?:,|. -->) SetHotKey (?:\(\) )?Stop failed\.[\r\n]*/gi,/(!!?>Failed Setting Hotkey\(s\)(?::|...)[\r\n]*?)?(?:false)?--> SetHotKey (?:\(\) )?Restart failed(?:,|. -->) SetHotKey (?:\(\) )?Stop failed\.[\r\n]*/gi],c=!1;return new Proxy(Ql,{get:function(e,h,u){var m="flush"===h,p="error"===h;m?h="append":p&&(h="appendLine");var b=e[h];return b instanceof Function?(b=function(p){if(void 0!==p){clearTimeout(t);var b="append"===h?p.split(/\r?\n/):[p];b[0]=n+b[0];for(var _=0;_<b.length;_++)if(!c)for(var f=0;f<d.length&&!(b[_].replace(d[f],"")!==b[_]&&(c?b.splice(_,1):(ds.reset(a),b[_]="+>Setting Hotkeys...--\x3e Press ",ls["".concat(Il,"restartScript")]&&(b[_]+="".concat(ls["".concat(Il,"restartScript")]," to Restart")),(ls["".concat(Il,"killScript")]||ls["".concat(Il,"killScriptOpened")])&&(ls["".concat(Il,"restartScript")]&&(b[_]+=" or "),b[_]+="".concat(ls["".concat(Il,"killScript")]||ls["".concat(Il,"killScriptOpened")]," to Stop.")),c=!0),++_>=b.length));f++);(n=m||"append"!==h?"":b[b.length-1])&&(b.length>1?b[b.length-1]="":b.pop(),t=setTimeout((function(){return u.flush()}),100)),b.length&&function(e,t,n){var d=(new Date).toLocaleString("sv",{hour:"numeric",minute:"numeric",second:"numeric",fractionalSecondDigits:3}).replace(",","."),c=Object.assign([],n);if("appendLine"===t&&(i||(i=!0,o.append("\r\n")),es.isNewLine||(es.isNewLine=!0,e.append("\r\n"))),"Process"===ql.outputShowTime||"All"===ql.outputShowTime)for(var h=0;h<c.length&&(h!==c.length-1||""!==c[h]);h+=1)i&&(c[h]=d+r+c[h]),i=!0;var u=c.join("\r\n");u&&(o[t](u),i="appendLine"===t||"\r\n"===u.substring(u.length-2)),es.lastId===a||es.isNewLine||(e.append("appendLine"===t?"":"\r\n"),es.isNewLine=!0);for(var m="Global"===ql.outputShowTime||"All"===ql.outputShowTime?d+r:"",p=0;p<n.length&&(p!==n.length-1||""!==n[p]);p+=1)es.isNewLine&&("Multi"===ql.multiOutputShowProcessId?n[p]=l+n[p]:"None"!==ql.multiOutputShowProcessId&&(n[p]=(es.lastId===a?s:l)+n[p]),m&&(n[p]=m+n[p]),es.lastId=a),es.isNewLine=!0;var b=n.join("\r\n");b&&(e[t](b),es.isNewLine="appendLine"===t||"\r\n"===b.substring(b.length-2))}(e,h,b)}},m&&b(""),b):b}})};function Ss(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=Zl(),r=e+" "+a,l=o&&es.findRunner({status:!1,thisFile:n,processCommand:r}),d=l?l.info.id:++es.id,c=ql.multiOutput?l&&!l.info.aiOut.void&&l.info.aiOut||t.window.createOutputChannel("AutoIt #".concat(d," (").concat(n,")"),"vscode-autoit-output"):new Proxy({},{get:function(){return function(){}}}),h=new Cs({id:d,aiOutProcess:c}),u=l&&l.info||{id:d,startTime:(new Date).getTime(),endTime:0,aiOut:c,thisFile:n,processCommand:r,status:!0},m=function(e,t){ds.reset(d),e=Number(e),u.endTime=(new Date).getTime(),u.status=!1,h.flush(),h.appendLine((e>1||e<-1?"!":e<1?">":"-")+">Exit code ".concat(e).concat(t?" ("+t+")":""," Time: ").concat((u.endTime-u.startTime)/1e3)),es.cleanup()};u._aiOut||(u._aiOut=h),l&&(l.info.aiOut.void&&(l.info.aiOut=c),clearTimeout(l.info.timer),l.info.startTime=(new Date).getTime(),u.status=!0,ql.clearOutput&&c.clear(),es.lastId=0),!ql.multiOutput&&ql.clearOutput&&Ql.clear(),(ql.multiOutput?c:Ql).show(!0);var p=i().dirname(n);ds.disable(d);var b=(0,s.spawn)(e,a,{cwd:p});return h.appendLine("Starting process #".concat(d,'\r\n"').concat(e,'" ').concat(a.map((function(e,t,a){return t&&"/in"!==a[t-1]?e:'"'+e+'"'})).join(" ")," [PID ").concat(b.pid||"n/a","]")),l?(es.list.set(b,l.info),es.list.delete(l.runner)):es.list.set(b,u),b.pid?(b.stdout.on("data",(function(e){try{var t=(ql.outputCodePage?(0,il.decode)(e,ql.outputCodePage):e).toString();h.append(t)}catch(e){console.error(e)}})),b.stderr.on("data",(function(e){try{var t=(ql.outputCodePage?(0,il.decode)(e,ql.outputCodePage):e).toString();h.append(t)}catch(e){console.error(e)}})),b.on("exit",m),b):(m(-2,"wrong path?"),b)}var Ts=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=es.findRunner({status:!0,thisFile:e});if(a)t.window.setStatusBarMessage("Stopping the script...",1500),a.runner.stdin.pause(),a.runner.kill();else{var o=e?" (".concat(e.split("\\").splice(-2,2).join("\\"),") "):" ";(0,gl.j$)("No script".concat(o,"currently is running."),{timeout:1e4})}};t.workspace.onDidCloseTextDocument((function(e){ql.terminateRunningOnClose&&es.findRunner({status:!0,thisFile:e.fileName})&&Ts(e.fileName)}));var Gs=function(){var e=t.window.activeTextEditor.document,a=Zl();if(!ls[Il+"killScript"]&&!ls[Il+"killScriptOpened"])return gl.DZ.error.killScript=(0,gl.f1)('Please set "AutoIt: Kill Running Script" keyboard shortcut.',{timeout:3e4}),gl.DZ.error.killScript;e.save().then((function(){if(e.isUntitled)return t.window.showErrorMessage('"'.concat(a,'" file must be saved first!'));e.isDirty&&(0,gl.j$)('File failed to save, running saved file instead ("'.concat(a,'")'),{timeout:3e4});var o=ql.consoleParams;if(t.window.setStatusBarMessage("Running the script...",1500),o){var n=o.match(/[\w-/]+|"[^"]+"/g).map((function(e){return e.replace(/"/g,"")}));Ss(ql.aiPath,[ql.wrapperPath,"/run","/prod","/ErrorStdOut","/in",a,"/UserParams"].concat(Xl(n)),ql.multiOutput&&ql.multiOutputReuseOutput)}else Ss(ql.aiPath,[ql.wrapperPath,"/run","/prod","/ErrorStdOut","/in",a],ql.multiOutput&&ql.multiOutputReuseOutput)}))},Ps=function(){var e=t.window.activeTextEditor;if(e.document.getWordRangeAtPosition(e.selection.start)){var a,o=e.document,n=o.getText(o.getWordRangeAtPosition(e.selection.active)),i=/^[_]+[a-zA-Z0-9]+_/.exec(n);if(t.window.setStatusBarMessage("Searching documentation for ".concat(n),1500),i&&(a=ql.smartHelp[i]),i&&a){if(!l().existsSync(a.chmPath))return void t.window.showErrorMessage("Unable to locate ".concat(a.chmPath));for(var r=new RegExp("\\bFunc\\s+".concat(n,"\\s*\\("),"g"),d=a.udfPath,c=0;c<d.length;c+=1){var h=d[c];if((l().existsSync(h)||(h=(0,Ce.findFilepath)(h,!0)))&&(0,Ce.getIncludeText)(h).match(r))return gs&&gs.kill(),void(gs=(0,s.spawn)("hh",["mk:@MSITStore:".concat(a.chmPath,"::/funcs/").concat(n,".htm")]))}}(0,s.execFile)(ql.helpPath,[n])}else(0,s.execFile)(ql.helpPath)},ws=function(){(0,s.execFile)(ql.infoPath)};function ys(){var e=t.window.activeTextEditor,a=e.document,o=e.selection.active.line,n=a.lineAt(o),i=e.document.getWordRangeAtPosition(e.selection.start)?a.getText(a.getWordRangeAtPosition(e.selection.active)):"";if("$"===i.charAt(0)||"@"===i.charAt(0)){var r=a.lineCount-2,l=/\s_\b\s*(;.*)?\s*/;if(!n._isLastLine)for(;o<=r&&null!==l.exec(n.text);)o+=1,n=a.lineAt(o);var s=n.range.end.character;return{text:i,position:new t.Position(o,s)}}return t.window.showErrorMessage('"'.concat(i,"\" is not a variable or macro, debug line can't be generated")),{}}function As(){var e=t.window.activeTextEditor,a=e.document,o=e.selection,n=a.lineAt(o.active.line);return n.isEmptyOrWhitespace?"":n.text.match(/^\s*/)[0]}var Ds=function(){var e=t.window.activeTextEditor,a=ys();if(Object.keys(a).length){var o=As(),n="\n".concat(o,";### Debug MSGBOX ↓↓↓\n").concat(o,"MsgBox(262144, 'Debug line ~' & @ScriptLineNumber, 'Selection:' & @CRLF & '").concat(a.text,"' & @CRLF & @CRLF & 'Return:' & @CRLF & ").concat(a.text,")");e.edit((function(e){e.insert(a.position,n)}))}},Ws=function(){var e=t.window.activeTextEditor.document,a=Zl();e.save().then((function(){return e.isUntitled?t.window.showErrorMessage('"'.concat(a,'" file must be saved first!')):(e.isDirty&&(0,gl.j$)('File failed to save, using saved file instead ("'.concat(a,'")'),{timeout:3e4}),t.window.setStatusBarMessage("Compiling script...",1500),Ss(ql.aiPath,[ql.wrapperPath,"/ShowGui","/prod","/in",a]))}))},Es=function(){var e=t.window.activeTextEditor.document,a=Zl();e.save().then((function(){return e.isUntitled?t.window.showErrorMessage('"'.concat(a,'" file must be saved first!')):e.isDirty?t.window.showErrorMessage('File failed to save ("'.concat(a,'")')):(t.window.setStatusBarMessage("Tidying script...".concat(a),1500),Ss(ql.aiPath,[ql.wrapperPath,"/Tidy","/in",a]))}))},Rs=function(){var e=t.window.activeTextEditor.document,a=Zl();e.save().then((function(){return e.isUntitled?t.window.showErrorMessage('"'.concat(a,'" file must be saved first!')):e.isDirty?t.window.showErrorMessage('File failed to save ("'.concat(a,'")')):(t.window.setStatusBarMessage("Checking script...".concat(a),1500),Ss(ql.aiPath,[ql.wrapperPath,"/AU3check","/prod","/in",a]))}))},xs=function(){var e=t.window.activeTextEditor.document,a=Zl();e.save().then((function(){return e.isUntitled?t.window.showErrorMessage('"'.concat(a,'" file must be saved first!')):(e.isDirty&&(0,gl.j$)('File failed to save, using saved file instead ("'.concat(a,'")'),{timeout:3e4}),t.window.setStatusBarMessage("Building script...",1500),Ss(ql.aiPath,[ql.wrapperPath,"/NoStatus","/prod","/in",a]))}))},vs=function(){var e=t.window.activeTextEditor,a=ys();if(Object.keys(a).length){var o=As(),n="\n".concat(o,";### Debug CONSOLE ↓↓↓\n").concat(o,"ConsoleWrite('@@ Debug(' & @ScriptLineNumber & ') : ").concat(a.text," = ' & ").concat(a.text," & @CRLF & '>Error code: ' & @error & @CRLF)");e.edit((function(e){e.insert(a.position,n)}))}},Us=function(){Ss(ql.kodaPath)},Fs=function(){var e,a=(e=Vl().mark((function e(){var a,o,n,i;return Vl().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=ql.consoleParams,e.next=3,t.window.showInputBox({placeHolder:'param "param with spaces" 3',value:a,prompt:"Enter space-separated parameters to send to the command line when scripts are run. Wrap single parameters with one or more spaces with quotes."});case 3:return o=e.sent,n=void 0!==o?o:a,e.next=7,ql.update("consoleParams",n,!1);case 7:i=n?"Current console parameter(s): ".concat(n):"Console parameter(s) have been cleared.",t.window.showInformationMessage(i);case 9:case"end":return e.stop()}}),e)})),function(){var t=this,a=arguments;return new Promise((function(o,n){var i=e.apply(t,a);function r(e){jl(i,o,n,r,l,"next",e)}function l(e){jl(i,o,n,r,l,"throw",e)}r(void 0)}))});return function(){return a.apply(this,arguments)}}(),Ls=function(){Ts(Zl())},Bs=function(){var e=t.window.activeTextEditor,a=e.document,o=a.lineAt(e.selection.active.line).text,n=/^(?:\s*)#include.+["'<](.*\.au3)["'>]/i.exec(o);if(null!==n){var r=n[1];if(!l().existsSync(r)){var s=i().dirname(a.fileName),d=i().normalize("".concat(s,"\\").concat(r));if(l().existsSync(d))r=d;else{var c=n[0].includes("<");r=(0,Ce.findFilepath)(r,c)}}if(r){var h=t.Uri.file(r);t.window.showTextDocument(h)}else t.window.showErrorMessage("Unable to locate #include file.")}else t.window.showErrorMessage("Not on #include line.")},Os=function(){var e=t.window.activeTextEditor,a=e.document,o=e.selection.active.line,n=a.lineAt(o).text,i=ql.UDFCreator,r=Ce.functionDefinitionRegex.setFlags("i").exec(n);if(null!==r){var l="__"===r[2].substring(0,2)?"#INTERNAL_USE_ONLY# ":"#FUNCTION# =========",s="".concat(r[2],"("),d=")",c="None";r[3]&&(c=r[3].split(",").map((function(e,t){var a="- ",o=(e=e.trim()).search("=");-1!==o&&(a+="[optional] Default is "+e.substring(o+1).trim()+".",s+="[",d="]".concat(d));var n="";return"byref"===e.substring(0,5).toLowerCase()&&(n="ByRef ",e=e.substring(6).trim(),a+="[in/out] "),s+=(t?", ":"")+n+e,e.split(" ")[0].padEnd(21).concat(a)})).join("\n;                  "));var h="".concat(s).concat(d),u="; ".concat(l,"===========================================================================================================\n; Name ..........: ").concat(r[2],"\n; Description ...:\n; Syntax ........: ").concat(h,"\n; Parameters ....: ").concat(c,"\n; Return values .: None\n; Author ........: ").concat(i,"\n; Modified ......:\n; Remarks .......:\n; Related .......:\n; Link ..........:\n; Example .......: No\n; ===============================================================================================================================\n"),m=new t.Position(o,0);e.edit((function(e){e.insert(m,u)}))}else t.window.showErrorMessage("Not on function definition.")},Ms=function(){var e=es.lastRunningOpened||{},t=e.runner,a=e.info;return t&&(t.on("exit",(function(){a.callback&&(clearTimeout(a.timer),a.callback()),Gs()})),a.status)?Ts(a.thisFile):Gs()};function Ns(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}function Hs(e){return Hs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Hs(e)}function ks(){ks=function(){return t};var e,t={},a=Object.prototype,o=a.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function d(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,a){return e[t]=a}}function c(e,t,a,o){var i=t&&t.prototype instanceof f?t:f,r=Object.create(i.prototype),l=new W(o||[]);return n(r,"_invoke",{value:w(e,a,l)}),r}function h(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var u="suspendedStart",m="suspendedYield",p="executing",b="completed",_={};function f(){}function I(){}function $(){}var g={};d(g,r,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(E([])));S&&S!==a&&o.call(S,r)&&(g=S);var T=$.prototype=f.prototype=Object.create(g);function G(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function a(n,i,r,l){var s=h(e[n],e,i);if("throw"!==s.type){var d=s.arg,c=d.value;return c&&"object"==Hs(c)&&o.call(c,"__await")?t.resolve(c.__await).then((function(e){a("next",e,r,l)}),(function(e){a("throw",e,r,l)})):t.resolve(c).then((function(e){d.value=e,r(d)}),(function(e){return a("throw",e,r,l)}))}l(s.arg)}var i;n(this,"_invoke",{value:function(e,o){function n(){return new t((function(t,n){a(e,o,t,n)}))}return i=i?i.then(n,n):n()}})}function w(t,a,o){var n=u;return function(i,r){if(n===p)throw Error("Generator is already running");if(n===b){if("throw"===i)throw r;return{value:e,done:!0}}for(o.method=i,o.arg=r;;){var l=o.delegate;if(l){var s=y(l,o);if(s){if(s===_)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(n===u)throw n=b,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);n=p;var d=h(t,a,o);if("normal"===d.type){if(n=o.done?b:m,d.arg===_)continue;return{value:d.arg,done:o.done}}"throw"===d.type&&(n=b,o.method="throw",o.arg=d.arg)}}}function y(t,a){var o=a.method,n=t.iterator[o];if(n===e)return a.delegate=null,"throw"===o&&t.iterator.return&&(a.method="return",a.arg=e,y(t,a),"throw"===a.method)||"return"!==o&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+o+"' method")),_;var i=h(n,t.iterator,a.arg);if("throw"===i.type)return a.method="throw",a.arg=i.arg,a.delegate=null,_;var r=i.arg;return r?r.done?(a[t.resultName]=r.value,a.next=t.nextLoc,"return"!==a.method&&(a.method="next",a.arg=e),a.delegate=null,_):r:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,_)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function W(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function E(t){if(t||""===t){var a=t[r];if(a)return a.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function a(){for(;++n<t.length;)if(o.call(t,n))return a.value=t[n],a.done=!1,a;return a.value=e,a.done=!0,a};return i.next=i}}throw new TypeError(Hs(t)+" is not iterable")}return I.prototype=$,n(T,"constructor",{value:$,configurable:!0}),n($,"constructor",{value:I,configurable:!0}),I.displayName=d($,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===I||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,$):(e.__proto__=$,d(e,s,"GeneratorFunction")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},G(P.prototype),d(P.prototype,l,(function(){return this})),t.AsyncIterator=P,t.async=function(e,a,o,n,i){void 0===i&&(i=Promise);var r=new P(c(e,a,o,n),i);return t.isGeneratorFunction(a)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},G(T),d(T,s,"Generator"),d(T,r,(function(){return this})),d(T,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),a=[];for(var o in t)a.push(o);return a.reverse(),function e(){for(;a.length;){var o=a.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},t.values=E,W.prototype={constructor:W,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(D),!t)for(var a in this)"t"===a.charAt(0)&&o.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var a=this;function n(o,n){return l.type="throw",l.arg=t,a.next=o,n&&(a.method="next",a.arg=e),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],l=r.completion;if("root"===r.tryLoc)return n("end");if(r.tryLoc<=this.prev){var s=o.call(r,"catchLoc"),d=o.call(r,"finallyLoc");if(s&&d){if(this.prev<r.catchLoc)return n(r.catchLoc,!0);if(this.prev<r.finallyLoc)return n(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return n(r.catchLoc,!0)}else{if(!d)throw Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return n(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var n=this.tryEntries[a];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var r=i?i.completion:{};return r.type=e,r.arg=t,i?(this.method="next",this.next=i.finallyLoc,_):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),_},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),D(a),_}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var o=a.completion;if("throw"===o.type){var n=o.arg;D(a)}return n}}throw Error("illegal catch attempt")},delegateYield:function(t,a,o){return this.delegate={iterator:E(t),resultName:a,nextLoc:o},"next"===this.method&&(this.arg=e),_}},t}function Vs(e,t,a,o,n,i,r){try{var l=e[i](r),s=l.value}catch(e){return void a(e)}l.done?t(s):Promise.resolve(s).then(o,n)}function js(e){return function(){var t=this,a=arguments;return new Promise((function(o,n){var i=e.apply(t,a);function r(e){Vs(i,o,n,r,l,"next",e)}function l(e){Vs(i,o,n,r,l,"throw",e)}r(void 0)}))}}var Ys,Xs={provideDocumentFormattingEdits:(Ys=js(ks().mark((function e(a){var o,n,r,s,d,c;return ks().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=null===(o=t.workspace.workspaceFolders)||void 0===o||null===(o=o[0])||void 0===o?void 0:o.uri.fsPath){e.next=4;break}return t.window.showErrorMessage("No workspace folder open"),e.abrupt("return",[]);case 4:return r=i().join(n,"temp_format_".concat(Date.now(),".au3")),s=i().join(n,"Backup"),e.prev=6,e.next=9,t.workspace.fs.writeFile(t.Uri.file(r),Buffer.from(a.getText()));case 9:return e.next=11,Ks(r);case 11:return e.next=13,t.workspace.fs.readFile(t.Uri.file(r));case 13:return d=e.sent,e.abrupt("return",[t.TextEdit.replace(Qs(a),d.toString())]);case 17:return e.prev=17,e.t0=e.catch(6),t.window.showErrorMessage("AutoIt Formatting Error: ".concat(e.t0.message)),e.abrupt("return",[]);case 21:e.prev=21;try{l().unlinkSync(r)}catch(e){}try{c=i().join(s,i().basename(r,".au3")+"_old1.au3"),l().existsSync(c)&&l().unlinkSync(c)}catch(e){}return e.finish(21);case 25:case"end":return e.stop()}}),e,null,[[6,17,21,25]])}))),function(e){return Ys.apply(this,arguments)})},zs=t.languages.registerDocumentFormattingEditProvider("autoit",Xs);function Ks(e){return qs.apply(this,arguments)}function qs(){return(qs=js(ks().mark((function e(t){return ks().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",new Promise((function(e,a){var o=(0,s.spawn)(fl.A.config.aiPath,[fl.A.config.wrapperPath,"/Tidy","/in",t]);o.on("exit",(function(t){0===t?e():a(new Error("Tidy exited with code ".concat(t)))})),o.on("error",a);var n=setTimeout((function(){null===o.exitCode&&(o.kill(),a(new Error("Tidy process timed out")))}),5e3);o.on("exit",(function(){return clearTimeout(n)}))})));case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Qs(e){var a=e.lineAt(e.lineCount-1);return new t.Range(new t.Position(0,0),new t.Position(e.lineCount-1,a.text.length))}function Js(e){return Js="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Js(e)}function Zs(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}function ed(){ed=function(e,t){return new a(e,void 0,t)};var e=RegExp.prototype,t=new WeakMap;function a(e,o,n){var i=RegExp(e,o);return t.set(i,n||t.get(e)),td(i,a.prototype)}function o(e,a){var o=t.get(a);return Object.keys(o).reduce((function(t,a){var n=o[a];if("number"==typeof n)t[a]=e[n];else{for(var i=0;void 0===e[n[i]]&&i+1<n.length;)i++;t[a]=e[n[i]]}return t}),Object.create(null))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&td(e,t)}(a,RegExp),a.prototype.exec=function(t){var a=e.exec.call(this,t);if(a){a.groups=o(a,this);var n=a.indices;n&&(n.groups=o(n,this))}return a},a.prototype[Symbol.replace]=function(a,n){if("string"==typeof n){var i=t.get(this);return e[Symbol.replace].call(this,a,n.replace(/\$<([^>]+)>/g,(function(e,t){var a=i[t];return"$"+(Array.isArray(a)?a.join("$"):a)})))}if("function"==typeof n){var r=this;return e[Symbol.replace].call(this,a,(function(){var e=arguments;return"object"!=Js(e[e.length-1])&&(e=[].slice.call(e)).push(o(e,r)),n.apply(this,e)}))}return e[Symbol.replace].call(this,a,n)},ed.apply(this,arguments)}function td(e,t){return td=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},td(e,t)}var ad=ed(/"(.+)"\((\d{1,4}),(\d{1,4})\)\s:\s(warning|error):\s(.+)\r/gm,{scriptPath:1,line:2,position:3,severity:4,description:5}),od=function(e,a,o){if(e.includes("- 0 error(s), 0 warning(s)"))a.delete(o);else{var n=new Map;(i=e.matchAll(ad),function(e){if(Array.isArray(e))return Zs(e)}(i)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(i)||function(e,t){if(e){if("string"==typeof e)return Zs(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?Zs(e,t):void 0}}(i)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).forEach((function(e){var a=e.groups,i=a.line,r=a.position,l=a.severity,s=a.description,d=function(e,a){var o=new t.Position(parseInt(e,10)-1,parseInt(a,10)-1);return new t.Range(o,o)}(i,r),c="warning"===l?t.DiagnosticSeverity.Warning:t.DiagnosticSeverity.Error,h=new t.Diagnostic(d,s,c),u=o.path.replace(/^\/([a-z]):/,"$1:").replace(/\//g,"\\");!function(e,t,a){var o=e.get(t)||[];o.push(a),e.set(t,o)}(n,u,h)})),n.forEach((function(e,o){a.set(t.Uri.file(o),e)}))}var i};function nd(e){return nd="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},nd(e)}function id(){id=function(){return t};var e,t={},a=Object.prototype,o=a.hasOwnProperty,n=Object.defineProperty||function(e,t,a){e[t]=a.value},i="function"==typeof Symbol?Symbol:{},r=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function d(e,t,a){return Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,a){return e[t]=a}}function c(e,t,a,o){var i=t&&t.prototype instanceof f?t:f,r=Object.create(i.prototype),l=new W(o||[]);return n(r,"_invoke",{value:w(e,a,l)}),r}function h(e,t,a){try{return{type:"normal",arg:e.call(t,a)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var u="suspendedStart",m="suspendedYield",p="executing",b="completed",_={};function f(){}function I(){}function $(){}var g={};d(g,r,(function(){return this}));var C=Object.getPrototypeOf,S=C&&C(C(E([])));S&&S!==a&&o.call(S,r)&&(g=S);var T=$.prototype=f.prototype=Object.create(g);function G(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function P(e,t){function a(n,i,r,l){var s=h(e[n],e,i);if("throw"!==s.type){var d=s.arg,c=d.value;return c&&"object"==nd(c)&&o.call(c,"__await")?t.resolve(c.__await).then((function(e){a("next",e,r,l)}),(function(e){a("throw",e,r,l)})):t.resolve(c).then((function(e){d.value=e,r(d)}),(function(e){return a("throw",e,r,l)}))}l(s.arg)}var i;n(this,"_invoke",{value:function(e,o){function n(){return new t((function(t,n){a(e,o,t,n)}))}return i=i?i.then(n,n):n()}})}function w(t,a,o){var n=u;return function(i,r){if(n===p)throw Error("Generator is already running");if(n===b){if("throw"===i)throw r;return{value:e,done:!0}}for(o.method=i,o.arg=r;;){var l=o.delegate;if(l){var s=y(l,o);if(s){if(s===_)continue;return s}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if(n===u)throw n=b,o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);n=p;var d=h(t,a,o);if("normal"===d.type){if(n=o.done?b:m,d.arg===_)continue;return{value:d.arg,done:o.done}}"throw"===d.type&&(n=b,o.method="throw",o.arg=d.arg)}}}function y(t,a){var o=a.method,n=t.iterator[o];if(n===e)return a.delegate=null,"throw"===o&&t.iterator.return&&(a.method="return",a.arg=e,y(t,a),"throw"===a.method)||"return"!==o&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+o+"' method")),_;var i=h(n,t.iterator,a.arg);if("throw"===i.type)return a.method="throw",a.arg=i.arg,a.delegate=null,_;var r=i.arg;return r?r.done?(a[t.resultName]=r.value,a.next=t.nextLoc,"return"!==a.method&&(a.method="next",a.arg=e),a.delegate=null,_):r:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,_)}function A(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function D(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function W(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(A,this),this.reset(!0)}function E(t){if(t||""===t){var a=t[r];if(a)return a.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,i=function a(){for(;++n<t.length;)if(o.call(t,n))return a.value=t[n],a.done=!1,a;return a.value=e,a.done=!0,a};return i.next=i}}throw new TypeError(nd(t)+" is not iterable")}return I.prototype=$,n(T,"constructor",{value:$,configurable:!0}),n($,"constructor",{value:I,configurable:!0}),I.displayName=d($,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===I||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,$):(e.__proto__=$,d(e,s,"GeneratorFunction")),e.prototype=Object.create(T),e},t.awrap=function(e){return{__await:e}},G(P.prototype),d(P.prototype,l,(function(){return this})),t.AsyncIterator=P,t.async=function(e,a,o,n,i){void 0===i&&(i=Promise);var r=new P(c(e,a,o,n),i);return t.isGeneratorFunction(a)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},G(T),d(T,s,"Generator"),d(T,r,(function(){return this})),d(T,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),a=[];for(var o in t)a.push(o);return a.reverse(),function e(){for(;a.length;){var o=a.pop();if(o in t)return e.value=o,e.done=!1,e}return e.done=!0,e}},t.values=E,W.prototype={constructor:W,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(D),!t)for(var a in this)"t"===a.charAt(0)&&o.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var a=this;function n(o,n){return l.type="throw",l.arg=t,a.next=o,n&&(a.method="next",a.arg=e),!!n}for(var i=this.tryEntries.length-1;i>=0;--i){var r=this.tryEntries[i],l=r.completion;if("root"===r.tryLoc)return n("end");if(r.tryLoc<=this.prev){var s=o.call(r,"catchLoc"),d=o.call(r,"finallyLoc");if(s&&d){if(this.prev<r.catchLoc)return n(r.catchLoc,!0);if(this.prev<r.finallyLoc)return n(r.finallyLoc)}else if(s){if(this.prev<r.catchLoc)return n(r.catchLoc,!0)}else{if(!d)throw Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return n(r.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var n=this.tryEntries[a];if(n.tryLoc<=this.prev&&o.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var i=n;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var r=i?i.completion:{};return r.type=e,r.arg=t,i?(this.method="next",this.next=i.finallyLoc,_):this.complete(r)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),_},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),D(a),_}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc===e){var o=a.completion;if("throw"===o.type){var n=o.arg;D(a)}return n}}throw Error("illegal catch attempt")},delegateYield:function(t,a,o){return this.delegate={iterator:E(t),resultName:a,nextLoc:o},"next"===this.method&&(this.arg=e),_}},t}function rd(e,t,a,o,n,i,r){try{var l=e[i](r),s=l.value}catch(e){return void a(e)}l.done?t(s):Promise.resolve(s).then(o,n)}function ld(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var a=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=a){var o,n,i,r,l=[],s=!0,d=!1;try{if(i=(a=a.call(e)).next,0===t){if(Object(a)!==a)return;s=!1}else for(;!(s=(o=i.call(a)).done)&&(l.push(o.value),l.length!==t);s=!0);}catch(e){d=!0,n=e}finally{try{if(!s&&null!=a.return&&(r=a.return(),Object(r)!==r))return}finally{if(d)throw n}}return l}}(e,t)||sd(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function sd(e,t){if(e){if("string"==typeof e)return dd(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?dd(e,t):void 0}}function dd(e,t){(null==t||t>e.length)&&(t=e.length);for(var a=0,o=Array(t);a<t;a++)o[a]=e[a];return o}var cd=fl.A.config,hd=function(e){return new Promise((function(t,a){var o,i="",r=["-w",1,"-w",2,"-w",3,"-w",4,"-w",5,"-w",6,"-w",7];cd.includePaths.forEach((function(e){r.push("-I",e)}));for(var l=(o=e.getText().matchAll(/^\s*#AutoIt3Wrapper_AU3Check_Parameters=.*$/gm),function(e){if(Array.isArray(e))return dd(e)}(o)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(o)||sd(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).pop(),d=/(-w-?)\s+([0-9]+)/g;l;){var c=ld(d.exec(l[0])||[],3),h=c[1],u=c[2];if(!h)break;var m=2*(u-1);void 0!==r[m]&&(r[m]=h,r[m+1]=~~u)}var p=(0,s.execFile)(cd.checkPath,[].concat(r,[e.fileName]),{cwd:(0,n.dirname)(e.fileName)});p.stdout.on("data",(function(e){0!==e.length&&(i+=e.toString())})),p.stderr.on("error",(function(e){a(e)})),p.on("close",(function(){t(i)}))}))},ud=function(e){t.window.showErrorMessage("".concat(cd.checkPath," ").concat(e))},md=function(e){return!!(0,r.existsSync)(e)||(t.window.showErrorMessage("Invalid Check Path! Please review AutoIt settings (Check Path in UI, autoit.checkPath in JSON)"),!1)},pd=function(){var e,t=(e=id().mark((function e(t,a){var o,n;return id().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(cd.enableDiagnostics){e.next=3;break}return a.clear(),e.abrupt("return");case 3:if("autoit"===t.languageId){e.next=5;break}return e.abrupt("return");case 5:if(o=cd.checkPath,md(o)){e.next=8;break}return e.abrupt("return");case 8:return e.prev=8,e.next=11,hd(t);case 11:n=e.sent,od(n,a,t.uri),e.next=18;break;case 15:e.prev=15,e.t0=e.catch(8),ud(e.t0);case 18:case"end":return e.stop()}}),e,null,[[8,15]])})),function(){var t=this,a=arguments;return new Promise((function(o,n){var i=e.apply(t,a);function r(e){rd(i,o,n,r,l,"next",e)}function l(e){rd(i,o,n,r,l,"throw",e)}r(void 0)}))});return function(e,a){return t.apply(this,arguments)}}(),bd=function(a){var o,n=[it,lr,Tr,Vr,kr,tl,ol];if(function(){if("win32"!==process.platform)return!1;var e=fl.A.aiPath,t=fl.A.wrapperPath;return!!(e&&t&&(0,r.existsSync)(e)&&(0,r.existsSync)(t))}()&&n.push(zs),(o=a.subscriptions).push.apply(o,n),a.subscriptions.push(t.languages.setLanguageConfiguration("autoit",d)),function(a){var o,n=new Map(Object.entries(e)),i=function(e,t){var a="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!a){if(Array.isArray(e)||(a=function(e,t){if(e){if("string"==typeof e)return Ns(e,t);var a={}.toString.call(e).slice(8,-1);return"Object"===a&&e.constructor&&(a=e.constructor.name),"Map"===a||"Set"===a?Array.from(e):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?Ns(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){a&&(e=a);var o=0,n=function(){};return{s:n,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,r=!0,l=!1;return{s:function(){a=a.call(e)},n:function(){var e=a.next();return r=e.done,e},e:function(e){l=!0,i=e},f:function(){try{r||null==a.return||a.return()}finally{if(l)throw i}}}}($l);try{for(i.s();!(o=i.n()).done;){var r=o.value,l=n.get(r);"function"==typeof l&&a.subscriptions.push(t.commands.registerCommand(Il+r,l))}}catch(e){i.e(e)}finally{i.f()}}(a),"win32"===process.platform){var i=t.languages.createDiagnosticCollection("autoit");a.subscriptions.push(i),t.workspace.onDidSaveTextDocument((function(e){return pd(e,i)})),t.workspace.onDidOpenTextDocument((function(e){return pd(e,i)})),t.workspace.onDidCloseTextDocument((function(e){i.delete(e.uri)})),t.window.onDidChangeActiveTextEditor((function(e){e&&pd(e.document,i)})),cd.enableDiagnostics&&t.window.activeTextEditor&&pd(t.window.activeTextEditor.document,i)}console.log("AutoIt is now active!")};function _d(){}})(),module.exports=o})();
//# sourceMappingURL=extension.js.map